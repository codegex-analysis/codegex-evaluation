[
  {
    "sha": "5a4b9b845b2f954dae9cb42bf2bad1452155c21f",
    "filename": ".gitignore",
    "status": "modified",
    "additions": 86,
    "deletions": 22,
    "changes": 108,
    "blob_url": "https://github.com/scm-manager/scm-jira-plugin/blob/b4021019839e0082e46b13315a6a13dc3c8b89f0/.gitignore",
    "raw_url": "https://github.com/scm-manager/scm-jira-plugin/raw/b4021019839e0082e46b13315a6a13dc3c8b89f0/.gitignore",
    "contents_url": "https://api.github.com/repos/scm-manager/scm-jira-plugin/contents/.gitignore?ref=b4021019839e0082e46b13315a6a13dc3c8b89f0",
    "patch": "@@ -1,9 +1,8 @@\n-\n-# Created by https://www.gitignore.io/api/java,maven,linux,osx,node,intellij\n-# Edit at https://www.gitignore.io/?templates=java,maven,linux,osx,node,intellij\n+# Created by https://www.toptal.com/developers/gitignore/api/java,gradle,linux,osx,node,intellij\n+# Edit at https://www.toptal.com/developers/gitignore?templates=java,gradle,linux,osx,node,intellij\n \n ### Intellij ###\n-# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio and WebStorm\n+# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio, WebStorm and Rider\n # Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839\n \n # User-specific stuff\n@@ -33,9 +32,14 @@\n # When using Gradle or Maven with auto-import, you should exclude module files,\n # since they will be recreated, and may cause churn.  Uncomment if using\n # auto-import.\n+# .idea/artifacts\n+# .idea/compiler.xml\n+# .idea/jarRepositories.xml\n # .idea/modules.xml\n # .idea/*.iml\n # .idea/modules\n+# *.iml\n+# *.ipr\n \n # CMake\n cmake-build-*/\n@@ -79,7 +83,26 @@ fabric.properties\n # *.ipr\n \n # Sonarlint plugin\n-.idea/sonarlint\n+# https://plugins.jetbrains.com/plugin/7973-sonarlint\n+.idea/**/sonarlint/\n+\n+# SonarQube Plugin\n+# https://plugins.jetbrains.com/plugin/7238-sonarqube-community-plugin\n+.idea/**/sonarIssues.xml\n+\n+# Markdown Navigator plugin\n+# https://plugins.jetbrains.com/plugin/7896-markdown-navigator-enhanced\n+.idea/**/markdown-navigator.xml\n+.idea/**/markdown-navigator-enh.xml\n+.idea/**/markdown-navigator/\n+\n+# Cache file creation bug\n+# See https://youtrack.jetbrains.com/issue/JBR-2257\n+.idea/$CACHE_FILE$\n+\n+# CodeStream plugin\n+# https://plugins.jetbrains.com/plugin/12206-codestream\n+.idea/codestream.xml\n \n ### Java ###\n # Compiled class file\n@@ -121,24 +144,16 @@ hs_err_pid*\n # .nfs files are created when an open file is removed but is still being accessed\n .nfs*\n \n-### Maven ###\n-target/\n-pom.xml.tag\n-pom.xml.releaseBackup\n-pom.xml.versionsBackup\n-pom.xml.next\n-release.properties\n-dependency-reduced-pom.xml\n-buildNumber.properties\n-.mvn/timing.properties\n-.mvn/wrapper/maven-wrapper.jar\n-\n ### Node ###\n # Logs\n logs\n npm-debug.log*\n yarn-debug.log*\n yarn-error.log*\n+lerna-debug.log*\n+\n+# Diagnostic reports (https://nodejs.org/api/report.html)\n+report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json\n \n # Runtime data\n pids\n@@ -151,6 +166,7 @@ lib-cov\n \n # Coverage directory used by tools like istanbul\n coverage\n+*.lcov\n \n # nyc test coverage\n .nyc_output\n@@ -174,12 +190,21 @@ jspm_packages/\n # TypeScript v1 declaration files\n typings/\n \n+# TypeScript cache\n+*.tsbuildinfo\n+\n # Optional npm cache directory\n .npm\n \n # Optional eslint cache\n .eslintcache\n \n+# Microbundle cache\n+.rpt2_cache/\n+.rts2_cache_cjs/\n+.rts2_cache_es/\n+.rts2_cache_umd/\n+\n # Optional REPL history\n .node_repl_history\n \n@@ -191,25 +216,44 @@ typings/\n \n # dotenv environment variables file\n .env\n+.env.test\n+.env*.local\n \n # parcel-bundler cache (https://parceljs.org/)\n .cache\n+.parcel-cache\n \n-# next.js build output\n+# Next.js build output\n .next\n \n-# nuxt.js build output\n+# Nuxt.js build / generate output\n .nuxt\n+dist\n+\n+# Gatsby files\n+.cache/\n+# Comment in the public line in if your project uses Gatsby and not Next.js\n+# https://nextjs.org/blog/next-9-1#public-directory-support\n+# public\n \n # vuepress build output\n .vuepress/dist\n \n # Serverless directories\n-.serverless\n+.serverless/\n \n # FuseBox cache\n .fusebox/\n \n+# DynamoDB Local files\n+.dynamodb/\n+\n+# TernJS port file\n+.tern-port\n+\n+# Stores VSCode versions used for testing VSCode extensions\n+.vscode-test\n+\n ### OSX ###\n # General\n .DS_Store\n@@ -219,6 +263,7 @@ typings/\n # Icon must end with two \\r\n Icon\n \n+\n # Thumbnails\n ._*\n \n@@ -238,7 +283,26 @@ Network Trash Folder\n Temporary Items\n .apdisk\n \n-# End of https://www.gitignore.io/api/java,maven,linux,osx,node,intellij\n+### Gradle ###\n+.gradle\n+build/\n+\n+# Ignore Gradle GUI config\n+gradle-app.setting\n+\n+# Avoid ignoring Gradle wrapper jar file (.jar files are usually ignored)\n+!gradle-wrapper.jar\n+\n+# Cache of project\n+.gradletasknamecache\n+\n+# # Work around https://youtrack.jetbrains.com/issue/IDEA-116898\n+# gradle/wrapper/gradle-wrapper.properties\n+\n+### Gradle Patch ###\n+**/build/\n+\n+# End of https://www.toptal.com/developers/gitignore/api/java,gradle,linux,osx,node,intellij\n \n *.iml\n-.idea/\n+.idea"
  },
  {
    "sha": "c32394f140a74ad74d1deb4a98bf2556fadf23da",
    "filename": ".mvn/wrapper/MavenWrapperDownloader.java",
    "status": "removed",
    "additions": 0,
    "deletions": 117,
    "changes": 117,
    "blob_url": "https://github.com/scm-manager/scm-jira-plugin/blob/38851a5b86cf9022aaeb631463abbba73bebbab7/.mvn/wrapper/MavenWrapperDownloader.java",
    "raw_url": "https://github.com/scm-manager/scm-jira-plugin/raw/38851a5b86cf9022aaeb631463abbba73bebbab7/.mvn/wrapper/MavenWrapperDownloader.java",
    "contents_url": "https://api.github.com/repos/scm-manager/scm-jira-plugin/contents/.mvn/wrapper/MavenWrapperDownloader.java?ref=38851a5b86cf9022aaeb631463abbba73bebbab7",
    "patch": "@@ -1,117 +0,0 @@\n-/*\n- * Copyright 2007-present the original author or authors.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-import java.net.*;\n-import java.io.*;\n-import java.nio.channels.*;\n-import java.util.Properties;\n-\n-public class MavenWrapperDownloader {\n-\n-    private static final String WRAPPER_VERSION = \"0.5.5\";\n-    /**\n-     * Default URL to download the maven-wrapper.jar from, if no 'downloadUrl' is provided.\n-     */\n-    private static final String DEFAULT_DOWNLOAD_URL = \"https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/\"\n-        + WRAPPER_VERSION + \"/maven-wrapper-\" + WRAPPER_VERSION + \".jar\";\n-\n-    /**\n-     * Path to the maven-wrapper.properties file, which might contain a downloadUrl property to\n-     * use instead of the default one.\n-     */\n-    private static final String MAVEN_WRAPPER_PROPERTIES_PATH =\n-            \".mvn/wrapper/maven-wrapper.properties\";\n-\n-    /**\n-     * Path where the maven-wrapper.jar will be saved to.\n-     */\n-    private static final String MAVEN_WRAPPER_JAR_PATH =\n-            \".mvn/wrapper/maven-wrapper.jar\";\n-\n-    /**\n-     * Name of the property which should be used to override the default download url for the wrapper.\n-     */\n-    private static final String PROPERTY_NAME_WRAPPER_URL = \"wrapperUrl\";\n-\n-    public static void main(String args[]) {\n-        System.out.println(\"- Downloader started\");\n-        File baseDirectory = new File(args[0]);\n-        System.out.println(\"- Using base directory: \" + baseDirectory.getAbsolutePath());\n-\n-        // If the maven-wrapper.properties exists, read it and check if it contains a custom\n-        // wrapperUrl parameter.\n-        File mavenWrapperPropertyFile = new File(baseDirectory, MAVEN_WRAPPER_PROPERTIES_PATH);\n-        String url = DEFAULT_DOWNLOAD_URL;\n-        if(mavenWrapperPropertyFile.exists()) {\n-            FileInputStream mavenWrapperPropertyFileInputStream = null;\n-            try {\n-                mavenWrapperPropertyFileInputStream = new FileInputStream(mavenWrapperPropertyFile);\n-                Properties mavenWrapperProperties = new Properties();\n-                mavenWrapperProperties.load(mavenWrapperPropertyFileInputStream);\n-                url = mavenWrapperProperties.getProperty(PROPERTY_NAME_WRAPPER_URL, url);\n-            } catch (IOException e) {\n-                System.out.println(\"- ERROR loading '\" + MAVEN_WRAPPER_PROPERTIES_PATH + \"'\");\n-            } finally {\n-                try {\n-                    if(mavenWrapperPropertyFileInputStream != null) {\n-                        mavenWrapperPropertyFileInputStream.close();\n-                    }\n-                } catch (IOException e) {\n-                    // Ignore ...\n-                }\n-            }\n-        }\n-        System.out.println(\"- Downloading from: \" + url);\n-\n-        File outputFile = new File(baseDirectory.getAbsolutePath(), MAVEN_WRAPPER_JAR_PATH);\n-        if(!outputFile.getParentFile().exists()) {\n-            if(!outputFile.getParentFile().mkdirs()) {\n-                System.out.println(\n-                        \"- ERROR creating output directory '\" + outputFile.getParentFile().getAbsolutePath() + \"'\");\n-            }\n-        }\n-        System.out.println(\"- Downloading to: \" + outputFile.getAbsolutePath());\n-        try {\n-            downloadFileFromURL(url, outputFile);\n-            System.out.println(\"Done\");\n-            System.exit(0);\n-        } catch (Throwable e) {\n-            System.out.println(\"- Error downloading\");\n-            e.printStackTrace();\n-            System.exit(1);\n-        }\n-    }\n-\n-    private static void downloadFileFromURL(String urlString, File destination) throws Exception {\n-        if (System.getenv(\"MVNW_USERNAME\") != null && System.getenv(\"MVNW_PASSWORD\") != null) {\n-            String username = System.getenv(\"MVNW_USERNAME\");\n-            char[] password = System.getenv(\"MVNW_PASSWORD\").toCharArray();\n-            Authenticator.setDefault(new Authenticator() {\n-                @Override\n-                protected PasswordAuthentication getPasswordAuthentication() {\n-                    return new PasswordAuthentication(username, password);\n-                }\n-            });\n-        }\n-        URL website = new URL(urlString);\n-        ReadableByteChannel rbc;\n-        rbc = Channels.newChannel(website.openStream());\n-        FileOutputStream fos = new FileOutputStream(destination);\n-        fos.getChannel().transferFrom(rbc, 0, Long.MAX_VALUE);\n-        fos.close();\n-        rbc.close();\n-    }\n-\n-}"
  },
  {
    "sha": "fa87ad7ddfdb82cc942554e0339562c6a4aa7537",
    "filename": ".mvn/wrapper/maven-wrapper.properties",
    "status": "removed",
    "additions": 0,
    "deletions": 2,
    "changes": 2,
    "blob_url": "https://github.com/scm-manager/scm-jira-plugin/blob/38851a5b86cf9022aaeb631463abbba73bebbab7/.mvn/wrapper/maven-wrapper.properties",
    "raw_url": "https://github.com/scm-manager/scm-jira-plugin/raw/38851a5b86cf9022aaeb631463abbba73bebbab7/.mvn/wrapper/maven-wrapper.properties",
    "contents_url": "https://api.github.com/repos/scm-manager/scm-jira-plugin/contents/.mvn/wrapper/maven-wrapper.properties?ref=38851a5b86cf9022aaeb631463abbba73bebbab7",
    "patch": "@@ -1,2 +0,0 @@\n-distributionUrl=https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.6.1/apache-maven-3.6.1-bin.zip\n-wrapperUrl=https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.5/maven-wrapper-0.5.5.jar"
  },
  {
    "sha": "5b997d8c289bd026e8a93c1dd336a8748ca6dfc9",
    "filename": "build.gradle",
    "status": "added",
    "additions": 58,
    "deletions": 0,
    "changes": 58,
    "blob_url": "https://github.com/scm-manager/scm-jira-plugin/blob/b4021019839e0082e46b13315a6a13dc3c8b89f0/build.gradle",
    "raw_url": "https://github.com/scm-manager/scm-jira-plugin/raw/b4021019839e0082e46b13315a6a13dc3c8b89f0/build.gradle",
    "contents_url": "https://api.github.com/repos/scm-manager/scm-jira-plugin/contents/build.gradle?ref=b4021019839e0082e46b13315a6a13dc3c8b89f0",
    "patch": "@@ -0,0 +1,58 @@\n+/*\n+ * MIT License\n+ *\n+ * Copyright (c) 2020-present Cloudogu GmbH and Contributors\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in all\n+ * copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+\n+\n+plugins {\n+  id 'org.scm-manager.smp' version '0.7.5'\n+}\n+\n+dependencies {\n+  implementation \"axis:axis:1.4\"\n+  plugin \"sonia.scm.plugins:scm-mail-plugin:2.1.0\"\n+  plugin \"sonia.scm.plugins:scm-issuetracker-plugin:2.0.0\"\n+  optionalPlugin \"sonia.scm.plugins:scm-commit-message-checker-plugin:1.0.0\"\n+}\n+\n+scmPlugin {\n+  scmVersion = \"2.9.0\"\n+  displayName = \"Jira\"\n+  description = \"Integrates Atlassian JIRA to SCM-Manager\"\n+  author = \"Cloudogu GmbH\"\n+  category = \"Issue Tracker\"\n+\n+  openapi {\n+    packages = [\n+      \"sonia.scm.jira\",\n+    ]\n+  }\n+\n+  sonar {\n+    // We don't want to check classes which were generated using jirasoapservice-v2.wsdl\n+    property 'sonar.exclusions', 'src/main/java/sonia/scm/jira/soap/**'\n+  }\n+}\n+\n+license {\n+  exclude '**/soap/*.java'\n+}"
  },
  {
    "sha": "04c1d5b9b27bd1d9b16122eee04675f2abc160b4",
    "filename": "gradle.properties",
    "status": "added",
    "additions": 25,
    "deletions": 0,
    "changes": 25,
    "blob_url": "https://github.com/scm-manager/scm-jira-plugin/blob/b4021019839e0082e46b13315a6a13dc3c8b89f0/gradle.properties",
    "raw_url": "https://github.com/scm-manager/scm-jira-plugin/raw/b4021019839e0082e46b13315a6a13dc3c8b89f0/gradle.properties",
    "contents_url": "https://api.github.com/repos/scm-manager/scm-jira-plugin/contents/gradle.properties?ref=b4021019839e0082e46b13315a6a13dc3c8b89f0",
    "patch": "@@ -0,0 +1,25 @@\n+#\n+# MIT License\n+# \n+# Copyright (c) 2020-present Cloudogu GmbH and Contributors\n+# \n+# Permission is hereby granted, free of charge, to any person obtaining a copy\n+# of this software and associated documentation files (the \"Software\"), to deal\n+# in the Software without restriction, including without limitation the rights\n+# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+# copies of the Software, and to permit persons to whom the Software is\n+# furnished to do so, subject to the following conditions:\n+# \n+# The above copyright notice and this permission notice shall be included in all\n+# copies or substantial portions of the Software.\n+# \n+# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+# SOFTWARE.\n+#\n+\n+version=2.4.0-SNAPSHOT"
  },
  {
    "sha": "e708b1c023ec8b20f512888fe07c5bd3ff77bb8f",
    "filename": "gradle/wrapper/gradle-wrapper.jar",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/scm-manager/scm-jira-plugin/blob/b4021019839e0082e46b13315a6a13dc3c8b89f0/gradle/wrapper/gradle-wrapper.jar",
    "raw_url": "https://github.com/scm-manager/scm-jira-plugin/raw/b4021019839e0082e46b13315a6a13dc3c8b89f0/gradle/wrapper/gradle-wrapper.jar",
    "contents_url": "https://api.github.com/repos/scm-manager/scm-jira-plugin/contents/gradle/wrapper/gradle-wrapper.jar?ref=b4021019839e0082e46b13315a6a13dc3c8b89f0"
  },
  {
    "sha": "4d9ca1649142b0c20144adce78e2472e2da01c30",
    "filename": "gradle/wrapper/gradle-wrapper.properties",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/scm-manager/scm-jira-plugin/blob/b4021019839e0082e46b13315a6a13dc3c8b89f0/gradle/wrapper/gradle-wrapper.properties",
    "raw_url": "https://github.com/scm-manager/scm-jira-plugin/raw/b4021019839e0082e46b13315a6a13dc3c8b89f0/gradle/wrapper/gradle-wrapper.properties",
    "contents_url": "https://api.github.com/repos/scm-manager/scm-jira-plugin/contents/gradle/wrapper/gradle-wrapper.properties?ref=b4021019839e0082e46b13315a6a13dc3c8b89f0",
    "patch": "@@ -0,0 +1,5 @@\n+distributionBase=GRADLE_USER_HOME\n+distributionPath=wrapper/dists\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-6.7.1-bin.zip\n+zipStoreBase=GRADLE_USER_HOME\n+zipStorePath=wrapper/dists"
  },
  {
    "sha": "4f906e0c811fc9e230eb44819f509cd0627f2600",
    "filename": "gradlew",
    "status": "added",
    "additions": 185,
    "deletions": 0,
    "changes": 185,
    "blob_url": "https://github.com/scm-manager/scm-jira-plugin/blob/b4021019839e0082e46b13315a6a13dc3c8b89f0/gradlew",
    "raw_url": "https://github.com/scm-manager/scm-jira-plugin/raw/b4021019839e0082e46b13315a6a13dc3c8b89f0/gradlew",
    "contents_url": "https://api.github.com/repos/scm-manager/scm-jira-plugin/contents/gradlew?ref=b4021019839e0082e46b13315a6a13dc3c8b89f0",
    "patch": "@@ -0,0 +1,185 @@\n+#!/usr/bin/env sh\n+\n+#\n+# Copyright 2015 the original author or authors.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#      https://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+##############################################################################\n+##\n+##  Gradle start up script for UN*X\n+##\n+##############################################################################\n+\n+# Attempt to set APP_HOME\n+# Resolve links: $0 may be a link\n+PRG=\"$0\"\n+# Need this for relative symlinks.\n+while [ -h \"$PRG\" ] ; do\n+    ls=`ls -ld \"$PRG\"`\n+    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n+    if expr \"$link\" : '/.*' > /dev/null; then\n+        PRG=\"$link\"\n+    else\n+        PRG=`dirname \"$PRG\"`\"/$link\"\n+    fi\n+done\n+SAVED=\"`pwd`\"\n+cd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\n+APP_HOME=\"`pwd -P`\"\n+cd \"$SAVED\" >/dev/null\n+\n+APP_NAME=\"Gradle\"\n+APP_BASE_NAME=`basename \"$0\"`\n+\n+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\n+DEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n+\n+# Use the maximum available, or set MAX_FD != -1 to use that value.\n+MAX_FD=\"maximum\"\n+\n+warn () {\n+    echo \"$*\"\n+}\n+\n+die () {\n+    echo\n+    echo \"$*\"\n+    echo\n+    exit 1\n+}\n+\n+# OS specific support (must be 'true' or 'false').\n+cygwin=false\n+msys=false\n+darwin=false\n+nonstop=false\n+case \"`uname`\" in\n+  CYGWIN* )\n+    cygwin=true\n+    ;;\n+  Darwin* )\n+    darwin=true\n+    ;;\n+  MINGW* )\n+    msys=true\n+    ;;\n+  NONSTOP* )\n+    nonstop=true\n+    ;;\n+esac\n+\n+CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n+\n+\n+# Determine the Java command to use to start the JVM.\n+if [ -n \"$JAVA_HOME\" ] ; then\n+    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n+        # IBM's JDK on AIX uses strange locations for the executables\n+        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n+    else\n+        JAVACMD=\"$JAVA_HOME/bin/java\"\n+    fi\n+    if [ ! -x \"$JAVACMD\" ] ; then\n+        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n+\n+Please set the JAVA_HOME variable in your environment to match the\n+location of your Java installation.\"\n+    fi\n+else\n+    JAVACMD=\"java\"\n+    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n+\n+Please set the JAVA_HOME variable in your environment to match the\n+location of your Java installation.\"\n+fi\n+\n+# Increase the maximum file descriptors if we can.\n+if [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" -a \"$nonstop\" = \"false\" ] ; then\n+    MAX_FD_LIMIT=`ulimit -H -n`\n+    if [ $? -eq 0 ] ; then\n+        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n+            MAX_FD=\"$MAX_FD_LIMIT\"\n+        fi\n+        ulimit -n $MAX_FD\n+        if [ $? -ne 0 ] ; then\n+            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n+        fi\n+    else\n+        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n+    fi\n+fi\n+\n+# For Darwin, add options to specify how the application appears in the dock\n+if $darwin; then\n+    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\n+fi\n+\n+# For Cygwin or MSYS, switch paths to Windows format before running java\n+if [ \"$cygwin\" = \"true\" -o \"$msys\" = \"true\" ] ; then\n+    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n+    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n+\n+    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n+\n+    # We build the pattern for arguments to be converted via cygpath\n+    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n+    SEP=\"\"\n+    for dir in $ROOTDIRSRAW ; do\n+        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n+        SEP=\"|\"\n+    done\n+    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n+    # Add a user-defined pattern to the cygpath arguments\n+    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n+        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n+    fi\n+    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n+    i=0\n+    for arg in \"$@\" ; do\n+        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n+        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n+\n+        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n+            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n+        else\n+            eval `echo args$i`=\"\\\"$arg\\\"\"\n+        fi\n+        i=`expr $i + 1`\n+    done\n+    case $i in\n+        0) set -- ;;\n+        1) set -- \"$args0\" ;;\n+        2) set -- \"$args0\" \"$args1\" ;;\n+        3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n+        4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n+        5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n+        6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n+        7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n+        8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n+        9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n+    esac\n+fi\n+\n+# Escape application args\n+save () {\n+    for i do printf %s\\\\n \"$i\" | sed \"s/'/'\\\\\\\\''/g;1s/^/'/;\\$s/\\$/' \\\\\\\\/\" ; done\n+    echo \" \"\n+}\n+APP_ARGS=`save \"$@\"`\n+\n+# Collect all arguments for the java command, following the shell quoting and substitution rules\n+eval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS \"\\\"-Dorg.gradle.appname=$APP_BASE_NAME\\\"\" -classpath \"\\\"$CLASSPATH\\\"\" org.gradle.wrapper.GradleWrapperMain \"$APP_ARGS\"\n+\n+exec \"$JAVACMD\" \"$@\""
  },
  {
    "sha": "ac1b06f93825db68fb0c0b5150917f340eaa5d02",
    "filename": "gradlew.bat",
    "status": "added",
    "additions": 89,
    "deletions": 0,
    "changes": 89,
    "blob_url": "https://github.com/scm-manager/scm-jira-plugin/blob/b4021019839e0082e46b13315a6a13dc3c8b89f0/gradlew.bat",
    "raw_url": "https://github.com/scm-manager/scm-jira-plugin/raw/b4021019839e0082e46b13315a6a13dc3c8b89f0/gradlew.bat",
    "contents_url": "https://api.github.com/repos/scm-manager/scm-jira-plugin/contents/gradlew.bat?ref=b4021019839e0082e46b13315a6a13dc3c8b89f0",
    "patch": "@@ -0,0 +1,89 @@\n+@rem\r\n+@rem Copyright 2015 the original author or authors.\r\n+@rem\r\n+@rem Licensed under the Apache License, Version 2.0 (the \"License\");\r\n+@rem you may not use this file except in compliance with the License.\r\n+@rem You may obtain a copy of the License at\r\n+@rem\r\n+@rem      https://www.apache.org/licenses/LICENSE-2.0\r\n+@rem\r\n+@rem Unless required by applicable law or agreed to in writing, software\r\n+@rem distributed under the License is distributed on an \"AS IS\" BASIS,\r\n+@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n+@rem See the License for the specific language governing permissions and\r\n+@rem limitations under the License.\r\n+@rem\r\n+\r\n+@if \"%DEBUG%\" == \"\" @echo off\r\n+@rem ##########################################################################\r\n+@rem\r\n+@rem  Gradle startup script for Windows\r\n+@rem\r\n+@rem ##########################################################################\r\n+\r\n+@rem Set local scope for the variables with windows NT shell\r\n+if \"%OS%\"==\"Windows_NT\" setlocal\r\n+\r\n+set DIRNAME=%~dp0\r\n+if \"%DIRNAME%\" == \"\" set DIRNAME=.\r\n+set APP_BASE_NAME=%~n0\r\n+set APP_HOME=%DIRNAME%\r\n+\r\n+@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.\r\n+for %%i in (\"%APP_HOME%\") do set APP_HOME=%%~fi\r\n+\r\n+@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\n+set DEFAULT_JVM_OPTS=\"-Xmx64m\" \"-Xms64m\"\r\n+\r\n+@rem Find java.exe\r\n+if defined JAVA_HOME goto findJavaFromJavaHome\r\n+\r\n+set JAVA_EXE=java.exe\r\n+%JAVA_EXE% -version >NUL 2>&1\r\n+if \"%ERRORLEVEL%\" == \"0\" goto execute\r\n+\r\n+echo.\r\n+echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\n+echo.\r\n+echo Please set the JAVA_HOME variable in your environment to match the\r\n+echo location of your Java installation.\r\n+\r\n+goto fail\r\n+\r\n+:findJavaFromJavaHome\r\n+set JAVA_HOME=%JAVA_HOME:\"=%\r\n+set JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n+\r\n+if exist \"%JAVA_EXE%\" goto execute\r\n+\r\n+echo.\r\n+echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\n+echo.\r\n+echo Please set the JAVA_HOME variable in your environment to match the\r\n+echo location of your Java installation.\r\n+\r\n+goto fail\r\n+\r\n+:execute\r\n+@rem Setup the command line\r\n+\r\n+set CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n+\r\n+\r\n+@rem Execute Gradle\r\n+\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*\r\n+\r\n+:end\r\n+@rem End local scope for the variables with windows NT shell\r\n+if \"%ERRORLEVEL%\"==\"0\" goto mainEnd\r\n+\r\n+:fail\r\n+rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\n+rem the _cmd.exe /c_ return code!\r\n+if  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\r\n+exit /b 1\r\n+\r\n+:mainEnd\r\n+if \"%OS%\"==\"Windows_NT\" endlocal\r\n+\r\n+:omega\r"
  },
  {
    "sha": "d2f0ea38081dce15746cffcec1f1e4151d1a1f0a",
    "filename": "mvnw",
    "status": "removed",
    "additions": 0,
    "deletions": 310,
    "changes": 310,
    "blob_url": "https://github.com/scm-manager/scm-jira-plugin/blob/38851a5b86cf9022aaeb631463abbba73bebbab7/mvnw",
    "raw_url": "https://github.com/scm-manager/scm-jira-plugin/raw/38851a5b86cf9022aaeb631463abbba73bebbab7/mvnw",
    "contents_url": "https://api.github.com/repos/scm-manager/scm-jira-plugin/contents/mvnw?ref=38851a5b86cf9022aaeb631463abbba73bebbab7",
    "patch": "@@ -1,310 +0,0 @@\n-#!/bin/sh\n-# ----------------------------------------------------------------------------\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#    http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-# ----------------------------------------------------------------------------\n-\n-# ----------------------------------------------------------------------------\n-# Maven2 Start Up Batch script\n-#\n-# Required ENV vars:\n-# ------------------\n-#   JAVA_HOME - location of a JDK home dir\n-#\n-# Optional ENV vars\n-# -----------------\n-#   M2_HOME - location of maven2's installed home dir\n-#   MAVEN_OPTS - parameters passed to the Java VM when running Maven\n-#     e.g. to debug Maven itself, use\n-#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\n-#   MAVEN_SKIP_RC - flag to disable loading of mavenrc files\n-# ----------------------------------------------------------------------------\n-\n-if [ -z \"$MAVEN_SKIP_RC\" ] ; then\n-\n-  if [ -f /etc/mavenrc ] ; then\n-    . /etc/mavenrc\n-  fi\n-\n-  if [ -f \"$HOME/.mavenrc\" ] ; then\n-    . \"$HOME/.mavenrc\"\n-  fi\n-\n-fi\n-\n-# OS specific support.  $var _must_ be set to either true or false.\n-cygwin=false;\n-darwin=false;\n-mingw=false\n-case \"`uname`\" in\n-  CYGWIN*) cygwin=true ;;\n-  MINGW*) mingw=true;;\n-  Darwin*) darwin=true\n-    # Use /usr/libexec/java_home if available, otherwise fall back to /Library/Java/Home\n-    # See https://developer.apple.com/library/mac/qa/qa1170/_index.html\n-    if [ -z \"$JAVA_HOME\" ]; then\n-      if [ -x \"/usr/libexec/java_home\" ]; then\n-        export JAVA_HOME=\"`/usr/libexec/java_home`\"\n-      else\n-        export JAVA_HOME=\"/Library/Java/Home\"\n-      fi\n-    fi\n-    ;;\n-esac\n-\n-if [ -z \"$JAVA_HOME\" ] ; then\n-  if [ -r /etc/gentoo-release ] ; then\n-    JAVA_HOME=`java-config --jre-home`\n-  fi\n-fi\n-\n-if [ -z \"$M2_HOME\" ] ; then\n-  ## resolve links - $0 may be a link to maven's home\n-  PRG=\"$0\"\n-\n-  # need this for relative symlinks\n-  while [ -h \"$PRG\" ] ; do\n-    ls=`ls -ld \"$PRG\"`\n-    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n-    if expr \"$link\" : '/.*' > /dev/null; then\n-      PRG=\"$link\"\n-    else\n-      PRG=\"`dirname \"$PRG\"`/$link\"\n-    fi\n-  done\n-\n-  saveddir=`pwd`\n-\n-  M2_HOME=`dirname \"$PRG\"`/..\n-\n-  # make it fully qualified\n-  M2_HOME=`cd \"$M2_HOME\" && pwd`\n-\n-  cd \"$saveddir\"\n-  # echo Using m2 at $M2_HOME\n-fi\n-\n-# For Cygwin, ensure paths are in UNIX format before anything is touched\n-if $cygwin ; then\n-  [ -n \"$M2_HOME\" ] &&\n-    M2_HOME=`cygpath --unix \"$M2_HOME\"`\n-  [ -n \"$JAVA_HOME\" ] &&\n-    JAVA_HOME=`cygpath --unix \"$JAVA_HOME\"`\n-  [ -n \"$CLASSPATH\" ] &&\n-    CLASSPATH=`cygpath --path --unix \"$CLASSPATH\"`\n-fi\n-\n-# For Mingw, ensure paths are in UNIX format before anything is touched\n-if $mingw ; then\n-  [ -n \"$M2_HOME\" ] &&\n-    M2_HOME=\"`(cd \"$M2_HOME\"; pwd)`\"\n-  [ -n \"$JAVA_HOME\" ] &&\n-    JAVA_HOME=\"`(cd \"$JAVA_HOME\"; pwd)`\"\n-fi\n-\n-if [ -z \"$JAVA_HOME\" ]; then\n-  javaExecutable=\"`which javac`\"\n-  if [ -n \"$javaExecutable\" ] && ! [ \"`expr \\\"$javaExecutable\\\" : '\\([^ ]*\\)'`\" = \"no\" ]; then\n-    # readlink(1) is not available as standard on Solaris 10.\n-    readLink=`which readlink`\n-    if [ ! `expr \"$readLink\" : '\\([^ ]*\\)'` = \"no\" ]; then\n-      if $darwin ; then\n-        javaHome=\"`dirname \\\"$javaExecutable\\\"`\"\n-        javaExecutable=\"`cd \\\"$javaHome\\\" && pwd -P`/javac\"\n-      else\n-        javaExecutable=\"`readlink -f \\\"$javaExecutable\\\"`\"\n-      fi\n-      javaHome=\"`dirname \\\"$javaExecutable\\\"`\"\n-      javaHome=`expr \"$javaHome\" : '\\(.*\\)/bin'`\n-      JAVA_HOME=\"$javaHome\"\n-      export JAVA_HOME\n-    fi\n-  fi\n-fi\n-\n-if [ -z \"$JAVACMD\" ] ; then\n-  if [ -n \"$JAVA_HOME\"  ] ; then\n-    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n-      # IBM's JDK on AIX uses strange locations for the executables\n-      JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n-    else\n-      JAVACMD=\"$JAVA_HOME/bin/java\"\n-    fi\n-  else\n-    JAVACMD=\"`which java`\"\n-  fi\n-fi\n-\n-if [ ! -x \"$JAVACMD\" ] ; then\n-  echo \"Error: JAVA_HOME is not defined correctly.\" >&2\n-  echo \"  We cannot execute $JAVACMD\" >&2\n-  exit 1\n-fi\n-\n-if [ -z \"$JAVA_HOME\" ] ; then\n-  echo \"Warning: JAVA_HOME environment variable is not set.\"\n-fi\n-\n-CLASSWORLDS_LAUNCHER=org.codehaus.plexus.classworlds.launcher.Launcher\n-\n-# traverses directory structure from process work directory to filesystem root\n-# first directory with .mvn subdirectory is considered project base directory\n-find_maven_basedir() {\n-\n-  if [ -z \"$1\" ]\n-  then\n-    echo \"Path not specified to find_maven_basedir\"\n-    return 1\n-  fi\n-\n-  basedir=\"$1\"\n-  wdir=\"$1\"\n-  while [ \"$wdir\" != '/' ] ; do\n-    if [ -d \"$wdir\"/.mvn ] ; then\n-      basedir=$wdir\n-      break\n-    fi\n-    # workaround for JBEAP-8937 (on Solaris 10/Sparc)\n-    if [ -d \"${wdir}\" ]; then\n-      wdir=`cd \"$wdir/..\"; pwd`\n-    fi\n-    # end of workaround\n-  done\n-  echo \"${basedir}\"\n-}\n-\n-# concatenates all lines of a file\n-concat_lines() {\n-  if [ -f \"$1\" ]; then\n-    echo \"$(tr -s '\\n' ' ' < \"$1\")\"\n-  fi\n-}\n-\n-BASE_DIR=`find_maven_basedir \"$(pwd)\"`\n-if [ -z \"$BASE_DIR\" ]; then\n-  exit 1;\n-fi\n-\n-##########################################################################################\n-# Extension to allow automatically downloading the maven-wrapper.jar from Maven-central\n-# This allows using the maven wrapper in projects that prohibit checking in binary data.\n-##########################################################################################\n-if [ -r \"$BASE_DIR/.mvn/wrapper/maven-wrapper.jar\" ]; then\n-    if [ \"$MVNW_VERBOSE\" = true ]; then\n-      echo \"Found .mvn/wrapper/maven-wrapper.jar\"\n-    fi\n-else\n-    if [ \"$MVNW_VERBOSE\" = true ]; then\n-      echo \"Couldn't find .mvn/wrapper/maven-wrapper.jar, downloading it ...\"\n-    fi\n-    if [ -n \"$MVNW_REPOURL\" ]; then\n-      jarUrl=\"$MVNW_REPOURL/io/takari/maven-wrapper/0.5.5/maven-wrapper-0.5.5.jar\"\n-    else\n-      jarUrl=\"https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.5/maven-wrapper-0.5.5.jar\"\n-    fi\n-    while IFS=\"=\" read key value; do\n-      case \"$key\" in (wrapperUrl) jarUrl=\"$value\"; break ;;\n-      esac\n-    done < \"$BASE_DIR/.mvn/wrapper/maven-wrapper.properties\"\n-    if [ \"$MVNW_VERBOSE\" = true ]; then\n-      echo \"Downloading from: $jarUrl\"\n-    fi\n-    wrapperJarPath=\"$BASE_DIR/.mvn/wrapper/maven-wrapper.jar\"\n-    if $cygwin; then\n-      wrapperJarPath=`cygpath --path --windows \"$wrapperJarPath\"`\n-    fi\n-\n-    if command -v wget > /dev/null; then\n-        if [ \"$MVNW_VERBOSE\" = true ]; then\n-          echo \"Found wget ... using wget\"\n-        fi\n-        if [ -z \"$MVNW_USERNAME\" ] || [ -z \"$MVNW_PASSWORD\" ]; then\n-            wget \"$jarUrl\" -O \"$wrapperJarPath\"\n-        else\n-            wget --http-user=$MVNW_USERNAME --http-password=$MVNW_PASSWORD \"$jarUrl\" -O \"$wrapperJarPath\"\n-        fi\n-    elif command -v curl > /dev/null; then\n-        if [ \"$MVNW_VERBOSE\" = true ]; then\n-          echo \"Found curl ... using curl\"\n-        fi\n-        if [ -z \"$MVNW_USERNAME\" ] || [ -z \"$MVNW_PASSWORD\" ]; then\n-            curl -o \"$wrapperJarPath\" \"$jarUrl\" -f\n-        else\n-            curl --user $MVNW_USERNAME:$MVNW_PASSWORD -o \"$wrapperJarPath\" \"$jarUrl\" -f\n-        fi\n-        \n-    else\n-        if [ \"$MVNW_VERBOSE\" = true ]; then\n-          echo \"Falling back to using Java to download\"\n-        fi\n-        javaClass=\"$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.java\"\n-        # For Cygwin, switch paths to Windows format before running javac\n-        if $cygwin; then\n-          javaClass=`cygpath --path --windows \"$javaClass\"`\n-        fi\n-        if [ -e \"$javaClass\" ]; then\n-            if [ ! -e \"$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class\" ]; then\n-                if [ \"$MVNW_VERBOSE\" = true ]; then\n-                  echo \" - Compiling MavenWrapperDownloader.java ...\"\n-                fi\n-                # Compiling the Java class\n-                (\"$JAVA_HOME/bin/javac\" \"$javaClass\")\n-            fi\n-            if [ -e \"$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class\" ]; then\n-                # Running the downloader\n-                if [ \"$MVNW_VERBOSE\" = true ]; then\n-                  echo \" - Running MavenWrapperDownloader.java ...\"\n-                fi\n-                (\"$JAVA_HOME/bin/java\" -cp .mvn/wrapper MavenWrapperDownloader \"$MAVEN_PROJECTBASEDIR\")\n-            fi\n-        fi\n-    fi\n-fi\n-##########################################################################################\n-# End of extension\n-##########################################################################################\n-\n-export MAVEN_PROJECTBASEDIR=${MAVEN_BASEDIR:-\"$BASE_DIR\"}\n-if [ \"$MVNW_VERBOSE\" = true ]; then\n-  echo $MAVEN_PROJECTBASEDIR\n-fi\n-MAVEN_OPTS=\"$(concat_lines \"$MAVEN_PROJECTBASEDIR/.mvn/jvm.config\") $MAVEN_OPTS\"\n-\n-# For Cygwin, switch paths to Windows format before running java\n-if $cygwin; then\n-  [ -n \"$M2_HOME\" ] &&\n-    M2_HOME=`cygpath --path --windows \"$M2_HOME\"`\n-  [ -n \"$JAVA_HOME\" ] &&\n-    JAVA_HOME=`cygpath --path --windows \"$JAVA_HOME\"`\n-  [ -n \"$CLASSPATH\" ] &&\n-    CLASSPATH=`cygpath --path --windows \"$CLASSPATH\"`\n-  [ -n \"$MAVEN_PROJECTBASEDIR\" ] &&\n-    MAVEN_PROJECTBASEDIR=`cygpath --path --windows \"$MAVEN_PROJECTBASEDIR\"`\n-fi\n-\n-# Provide a \"standardized\" way to retrieve the CLI args that will\n-# work with both Windows and non-Windows executions.\n-MAVEN_CMD_LINE_ARGS=\"$MAVEN_CONFIG $@\"\n-export MAVEN_CMD_LINE_ARGS\n-\n-WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain\n-\n-exec \"$JAVACMD\" \\\n-  $MAVEN_OPTS \\\n-  -classpath \"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar\" \\\n-  \"-Dmaven.home=${M2_HOME}\" \"-Dmaven.multiModuleProjectDirectory=${MAVEN_PROJECTBASEDIR}\" \\\n-  ${WRAPPER_LAUNCHER} $MAVEN_CONFIG \"$@\""
  },
  {
    "sha": "b26ab24f039ea62cea44199665b23318f3cc5344",
    "filename": "mvnw.cmd",
    "status": "removed",
    "additions": 0,
    "deletions": 182,
    "changes": 182,
    "blob_url": "https://github.com/scm-manager/scm-jira-plugin/blob/38851a5b86cf9022aaeb631463abbba73bebbab7/mvnw.cmd",
    "raw_url": "https://github.com/scm-manager/scm-jira-plugin/raw/38851a5b86cf9022aaeb631463abbba73bebbab7/mvnw.cmd",
    "contents_url": "https://api.github.com/repos/scm-manager/scm-jira-plugin/contents/mvnw.cmd?ref=38851a5b86cf9022aaeb631463abbba73bebbab7",
    "patch": "@@ -1,182 +0,0 @@\n-@REM ----------------------------------------------------------------------------\n-@REM Licensed to the Apache Software Foundation (ASF) under one\n-@REM or more contributor license agreements.  See the NOTICE file\n-@REM distributed with this work for additional information\n-@REM regarding copyright ownership.  The ASF licenses this file\n-@REM to you under the Apache License, Version 2.0 (the\n-@REM \"License\"); you may not use this file except in compliance\n-@REM with the License.  You may obtain a copy of the License at\n-@REM\n-@REM    http://www.apache.org/licenses/LICENSE-2.0\n-@REM\n-@REM Unless required by applicable law or agreed to in writing,\n-@REM software distributed under the License is distributed on an\n-@REM \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-@REM KIND, either express or implied.  See the License for the\n-@REM specific language governing permissions and limitations\n-@REM under the License.\n-@REM ----------------------------------------------------------------------------\n-\n-@REM ----------------------------------------------------------------------------\n-@REM Maven2 Start Up Batch script\n-@REM\n-@REM Required ENV vars:\n-@REM JAVA_HOME - location of a JDK home dir\n-@REM\n-@REM Optional ENV vars\n-@REM M2_HOME - location of maven2's installed home dir\n-@REM MAVEN_BATCH_ECHO - set to 'on' to enable the echoing of the batch commands\n-@REM MAVEN_BATCH_PAUSE - set to 'on' to wait for a key stroke before ending\n-@REM MAVEN_OPTS - parameters passed to the Java VM when running Maven\n-@REM     e.g. to debug Maven itself, use\n-@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\n-@REM MAVEN_SKIP_RC - flag to disable loading of mavenrc files\n-@REM ----------------------------------------------------------------------------\n-\n-@REM Begin all REM lines with '@' in case MAVEN_BATCH_ECHO is 'on'\n-@echo off\n-@REM set title of command window\n-title %0\n-@REM enable echoing by setting MAVEN_BATCH_ECHO to 'on'\n-@if \"%MAVEN_BATCH_ECHO%\" == \"on\"  echo %MAVEN_BATCH_ECHO%\n-\n-@REM set %HOME% to equivalent of $HOME\n-if \"%HOME%\" == \"\" (set \"HOME=%HOMEDRIVE%%HOMEPATH%\")\n-\n-@REM Execute a user defined script before this one\n-if not \"%MAVEN_SKIP_RC%\" == \"\" goto skipRcPre\n-@REM check for pre script, once with legacy .bat ending and once with .cmd ending\n-if exist \"%HOME%\\mavenrc_pre.bat\" call \"%HOME%\\mavenrc_pre.bat\"\n-if exist \"%HOME%\\mavenrc_pre.cmd\" call \"%HOME%\\mavenrc_pre.cmd\"\n-:skipRcPre\n-\n-@setlocal\n-\n-set ERROR_CODE=0\n-\n-@REM To isolate internal variables from possible post scripts, we use another setlocal\n-@setlocal\n-\n-@REM ==== START VALIDATION ====\n-if not \"%JAVA_HOME%\" == \"\" goto OkJHome\n-\n-echo.\n-echo Error: JAVA_HOME not found in your environment. >&2\n-echo Please set the JAVA_HOME variable in your environment to match the >&2\n-echo location of your Java installation. >&2\n-echo.\n-goto error\n-\n-:OkJHome\n-if exist \"%JAVA_HOME%\\bin\\java.exe\" goto init\n-\n-echo.\n-echo Error: JAVA_HOME is set to an invalid directory. >&2\n-echo JAVA_HOME = \"%JAVA_HOME%\" >&2\n-echo Please set the JAVA_HOME variable in your environment to match the >&2\n-echo location of your Java installation. >&2\n-echo.\n-goto error\n-\n-@REM ==== END VALIDATION ====\n-\n-:init\n-\n-@REM Find the project base dir, i.e. the directory that contains the folder \".mvn\".\n-@REM Fallback to current working directory if not found.\n-\n-set MAVEN_PROJECTBASEDIR=%MAVEN_BASEDIR%\n-IF NOT \"%MAVEN_PROJECTBASEDIR%\"==\"\" goto endDetectBaseDir\n-\n-set EXEC_DIR=%CD%\n-set WDIR=%EXEC_DIR%\n-:findBaseDir\n-IF EXIST \"%WDIR%\"\\.mvn goto baseDirFound\n-cd ..\n-IF \"%WDIR%\"==\"%CD%\" goto baseDirNotFound\n-set WDIR=%CD%\n-goto findBaseDir\n-\n-:baseDirFound\n-set MAVEN_PROJECTBASEDIR=%WDIR%\n-cd \"%EXEC_DIR%\"\n-goto endDetectBaseDir\n-\n-:baseDirNotFound\n-set MAVEN_PROJECTBASEDIR=%EXEC_DIR%\n-cd \"%EXEC_DIR%\"\n-\n-:endDetectBaseDir\n-\n-IF NOT EXIST \"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\" goto endReadAdditionalConfig\n-\n-@setlocal EnableExtensions EnableDelayedExpansion\n-for /F \"usebackq delims=\" %%a in (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\") do set JVM_CONFIG_MAVEN_PROPS=!JVM_CONFIG_MAVEN_PROPS! %%a\n-@endlocal & set JVM_CONFIG_MAVEN_PROPS=%JVM_CONFIG_MAVEN_PROPS%\n-\n-:endReadAdditionalConfig\n-\n-SET MAVEN_JAVA_EXE=\"%JAVA_HOME%\\bin\\java.exe\"\n-set WRAPPER_JAR=\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.jar\"\n-set WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain\n-\n-set DOWNLOAD_URL=\"https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.5/maven-wrapper-0.5.5.jar\"\n-\n-FOR /F \"tokens=1,2 delims==\" %%A IN (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.properties\") DO (\n-    IF \"%%A\"==\"wrapperUrl\" SET DOWNLOAD_URL=%%B\n-)\n-\n-@REM Extension to allow automatically downloading the maven-wrapper.jar from Maven-central\n-@REM This allows using the maven wrapper in projects that prohibit checking in binary data.\n-if exist %WRAPPER_JAR% (\n-    if \"%MVNW_VERBOSE%\" == \"true\" (\n-        echo Found %WRAPPER_JAR%\n-    )\n-) else (\n-    if not \"%MVNW_REPOURL%\" == \"\" (\n-        SET DOWNLOAD_URL=\"%MVNW_REPOURL%/io/takari/maven-wrapper/0.5.5/maven-wrapper-0.5.5.jar\"\n-    )\n-    if \"%MVNW_VERBOSE%\" == \"true\" (\n-        echo Couldn't find %WRAPPER_JAR%, downloading it ...\n-        echo Downloading from: %DOWNLOAD_URL%\n-    )\n-\n-    powershell -Command \"&{\"^\n-\t\t\"$webclient = new-object System.Net.WebClient;\"^\n-\t\t\"if (-not ([string]::IsNullOrEmpty('%MVNW_USERNAME%') -and [string]::IsNullOrEmpty('%MVNW_PASSWORD%'))) {\"^\n-\t\t\"$webclient.Credentials = new-object System.Net.NetworkCredential('%MVNW_USERNAME%', '%MVNW_PASSWORD%');\"^\n-\t\t\"}\"^\n-\t\t\"[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; $webclient.DownloadFile('%DOWNLOAD_URL%', '%WRAPPER_JAR%')\"^\n-\t\t\"}\"\n-    if \"%MVNW_VERBOSE%\" == \"true\" (\n-        echo Finished downloading %WRAPPER_JAR%\n-    )\n-)\n-@REM End of extension\n-\n-@REM Provide a \"standardized\" way to retrieve the CLI args that will\n-@REM work with both Windows and non-Windows executions.\n-set MAVEN_CMD_LINE_ARGS=%*\n-\n-%MAVEN_JAVA_EXE% %JVM_CONFIG_MAVEN_PROPS% %MAVEN_OPTS% %MAVEN_DEBUG_OPTS% -classpath %WRAPPER_JAR% \"-Dmaven.multiModuleProjectDirectory=%MAVEN_PROJECTBASEDIR%\" %WRAPPER_LAUNCHER% %MAVEN_CONFIG% %*\n-if ERRORLEVEL 1 goto error\n-goto end\n-\n-:error\n-set ERROR_CODE=1\n-\n-:end\n-@endlocal & set ERROR_CODE=%ERROR_CODE%\n-\n-if not \"%MAVEN_SKIP_RC%\" == \"\" goto skipRcPost\n-@REM check for post script, once with legacy .bat ending and once with .cmd ending\n-if exist \"%HOME%\\mavenrc_post.bat\" call \"%HOME%\\mavenrc_post.bat\"\n-if exist \"%HOME%\\mavenrc_post.cmd\" call \"%HOME%\\mavenrc_post.cmd\"\n-:skipRcPost\n-\n-@REM pause the script if MAVEN_BATCH_PAUSE is set to 'on'\n-if \"%MAVEN_BATCH_PAUSE%\" == \"on\" pause\n-\n-if \"%MAVEN_TERMINATE_CMD%\" == \"on\" exit %ERROR_CODE%\n-\n-exit /B %ERROR_CODE%"
  },
  {
    "sha": "c55ca5f3d5af0b9f95033c5d194b0d859e99fe71",
    "filename": "package.json",
    "status": "modified",
    "additions": 6,
    "deletions": 5,
    "changes": 11,
    "blob_url": "https://github.com/scm-manager/scm-jira-plugin/blob/b4021019839e0082e46b13315a6a13dc3c8b89f0/package.json",
    "raw_url": "https://github.com/scm-manager/scm-jira-plugin/raw/b4021019839e0082e46b13315a6a13dc3c8b89f0/package.json",
    "contents_url": "https://api.github.com/repos/scm-manager/scm-jira-plugin/contents/package.json?ref=b4021019839e0082e46b13315a6a13dc3c8b89f0",
    "patch": "@@ -5,9 +5,9 @@\n   \"license\" : \"MIT\",\n   \"main\" : \"./src/main/js/index.tsx\",\n   \"scripts\" : {\n-    \"build\" : \"ui-scripts plugin\",\n-    \"watch\" : \"ui-scripts plugin-watch\",\n-    \"postinstall\" : \"ui-plugins postinstall\"\n+    \"build\" : \"plugin-scripts build\",\n+    \"watch\" : \"plugin-scripts watch\",\n+    \"postinstall\" : \"plugin-scripts postinstall\"\n   },\n   \"dependencies\" : {\n     \"@scm-manager/ui-plugins\" : \"2.9.0\",\n@@ -35,7 +35,7 @@\n   \"devDependencies\" : {\n     \"@scm-manager/babel-preset\" : \"^2.9.0\",\n     \"@scm-manager/eslint-config\" : \"^2.9.0\",\n-    \"@scm-manager/jest-preset\" : \"^2.9.0\",\n+    \"@scm-manager/jest-preset\" : \"^2.12.3\",\n     \"@scm-manager/prettier-config\" : \"^2.9.0\",\n     \"@scm-manager/tsconfig\" : \"^2.9.0\",\n     \"@scm-manager/ui-scripts\" : \"^2.9.0\",\n@@ -51,6 +51,7 @@\n     \"@types/react-redux\" : \"5.0.7\",\n     \"@types/react-router-dom\" : \"^5.1.0\",\n     \"@types/styled-components\" : \"^5.1.0\",\n-    \"jest\" : \"^24.9.0\"\n+    \"jest\" : \"^24.9.0\",\n+    \"@scm-manager/plugin-scripts\" : \"1.0.1\"\n   }\n }\n\\ No newline at end of file"
  },
  {
    "sha": "12904cd60fcec05c29e1d7bea9d95c3f332f755f",
    "filename": "pom.xml",
    "status": "removed",
    "additions": 0,
    "deletions": 163,
    "changes": 163,
    "blob_url": "https://github.com/scm-manager/scm-jira-plugin/blob/38851a5b86cf9022aaeb631463abbba73bebbab7/pom.xml",
    "raw_url": "https://github.com/scm-manager/scm-jira-plugin/raw/38851a5b86cf9022aaeb631463abbba73bebbab7/pom.xml",
    "contents_url": "https://api.github.com/repos/scm-manager/scm-jira-plugin/contents/pom.xml?ref=38851a5b86cf9022aaeb631463abbba73bebbab7",
    "patch": "@@ -1,163 +0,0 @@\n-<?xml version=\"1.0\"?>\n-<!--\n-\n-    MIT License\n-\n-    Copyright (c) 2020-present Cloudogu GmbH and Contributors\n-\n-    Permission is hereby granted, free of charge, to any person obtaining a copy\n-    of this software and associated documentation files (the \"Software\"), to deal\n-    in the Software without restriction, including without limitation the rights\n-    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n-    copies of the Software, and to permit persons to whom the Software is\n-    furnished to do so, subject to the following conditions:\n-\n-    The above copyright notice and this permission notice shall be included in all\n-    copies or substantial portions of the Software.\n-\n-    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n-    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n-    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n-    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n-    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n-    SOFTWARE.\n-\n--->\n-<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n-\n-  <modelVersion>4.0.0</modelVersion>\n-\n-  <parent>\n-    <artifactId>scm-plugins</artifactId>\n-    <groupId>sonia.scm.plugins</groupId>\n-    <version>2.9.0</version>\n-  </parent>\n-\n-  <artifactId>scm-jira-plugin</artifactId>\n-  <version>2.4.0-SNAPSHOT</version>\n-  <name>scm-jira-plugin</name>\n-  <packaging>smp</packaging>\n-  <url>https://github.com/scm-manager/scm-jira-plugin</url>\n-  <description>Integrates Atlassian JIRA to SCM-Manager</description>\n-\n-  <scm>\n-    <connection>scm:hg:https://github.com/scm-manager/scm-jira-plugin</connection>\n-    <developerConnection>scm:hg:https://github.com/scm-manager/scm-jira-plugin</developerConnection>\n-    <url>https://github.com/scm-manager/scm-jira-plugin</url>\n-  </scm>\n-\n-  <dependencies>\n-\n-    <!-- Jira SOAP/RPC connection -->\n-    <dependency>\n-      <groupId>axis</groupId>\n-      <artifactId>axis</artifactId>\n-      <version>1.4</version>\n-    </dependency>\n-\n-    <!-- SCM-Manager Mail API -->\n-\n-    <dependency>\n-      <groupId>sonia.scm.plugins</groupId>\n-      <artifactId>scm-mail-plugin</artifactId>\n-      <version>2.1.0</version>\n-    </dependency>\n-\n-    <!-- SCM-Manager Issuetracker API -->\n-\n-    <dependency>\n-      <groupId>sonia.scm.plugins</groupId>\n-      <artifactId>scm-issuetracker-plugin</artifactId>\n-      <version>2.0.0</version>\n-    </dependency>\n-\n-    <dependency>\n-      <groupId>org.hibernate</groupId>\n-      <artifactId>hibernate-validator</artifactId>\n-      <version>5.3.6.Final</version>\n-      <scope>provided</scope>\n-    </dependency>\n-\n-    <dependency>\n-      <groupId>sonia.scm.plugins</groupId>\n-      <artifactId>scm-commit-message-checker-plugin</artifactId>\n-      <version>1.0.0</version>\n-      <optional>true</optional>\n-    </dependency>\n-\n-  </dependencies>\n-\n-  <build>\n-    <plugins>\n-\n-      <plugin>\n-        <groupId>org.codehaus.mojo</groupId>\n-        <artifactId>axistools-maven-plugin</artifactId>\n-        <version>1.4</version>\n-        <configuration>\n-          <sourceDirectory>src/main/wsdl</sourceDirectory>\n-          <packageSpace>sonia.scm.jira.soap</packageSpace>\n-          <testCases>false</testCases>\n-          <serverSide>false</serverSide>\n-          <subPackageByFileName>false</subPackageByFileName>\n-          <!-- Due to mapstruct we have to put generated files in annotations directory -->\n-          <outputDirectory>${project.build.directory}/generated-sources/annotations</outputDirectory>\n-        </configuration>\n-        <executions>\n-          <execution>\n-            <id>default</id>\n-            <goals>\n-              <goal>wsdl2java</goal>\n-            </goals>\n-          </execution>\n-          <execution>\n-            <id>plugin</id>\n-            <phase>smp-process-resources</phase>\n-            <goals>\n-              <goal>wsdl2java</goal>\n-            </goals>\n-          </execution>\n-        </executions>\n-      </plugin>\n-\n-      <plugin>\n-        <groupId>io.openapitools.swagger</groupId>\n-        <artifactId>swagger-maven-plugin</artifactId>\n-        <configuration>\n-          <resourcePackages>\n-            <resourcePackage>sonia.scm.jira</resourcePackage>\n-          </resourcePackages>\n-        </configuration>\n-      </plugin>\n-    </plugins>\n-  </build>\n-\n-  <pluginRepositories>\n-\n-    <pluginRepository>\n-      <id>codehaus.org</id>\n-      <name>CodeHaus Plugin Snapshots</name>\n-      <url>http://repository.codehaus.org</url>\n-      <releases>\n-        <enabled>true</enabled>\n-      </releases>\n-      <snapshots>\n-        <enabled>false</enabled>\n-      </snapshots>\n-    </pluginRepository>\n-\n-  </pluginRepositories>\n-\n-  <repositories>\n-\n-    <repository>\n-      <id>packages.scm-manager.org</id>\n-      <name>scm-manager release repository</name>\n-      <url>https://packages.scm-manager.org/repository/public/</url>\n-    </repository>\n-\n-  </repositories>\n-\n-</project>"
  },
  {
    "sha": "f7c45386c71e37674bc91c69f25baf4366562f9b",
    "filename": "settings.gradle",
    "status": "added",
    "additions": 25,
    "deletions": 0,
    "changes": 25,
    "blob_url": "https://github.com/scm-manager/scm-jira-plugin/blob/b4021019839e0082e46b13315a6a13dc3c8b89f0/settings.gradle",
    "raw_url": "https://github.com/scm-manager/scm-jira-plugin/raw/b4021019839e0082e46b13315a6a13dc3c8b89f0/settings.gradle",
    "contents_url": "https://api.github.com/repos/scm-manager/scm-jira-plugin/contents/settings.gradle?ref=b4021019839e0082e46b13315a6a13dc3c8b89f0",
    "patch": "@@ -0,0 +1,25 @@\n+/*\n+ * MIT License\n+ * \n+ * Copyright (c) 2020-present Cloudogu GmbH and Contributors\n+ * \n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ * \n+ * The above copyright notice and this permission notice shall be included in all\n+ * copies or substantial portions of the Software.\n+ * \n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+\n+rootProject.name = 'scm-jira-plugin'"
  },
  {
    "sha": "3037e242a366ac7b77d75a94dfa5b6d2816e6159",
    "filename": "src/main/java/sonia/scm/jira/soap/AbstractNamedRemoteEntity.java",
    "status": "added",
    "additions": 122,
    "deletions": 0,
    "changes": 122,
    "blob_url": "https://github.com/scm-manager/scm-jira-plugin/blob/b4021019839e0082e46b13315a6a13dc3c8b89f0/src/main/java/sonia/scm/jira/soap/AbstractNamedRemoteEntity.java",
    "raw_url": "https://github.com/scm-manager/scm-jira-plugin/raw/b4021019839e0082e46b13315a6a13dc3c8b89f0/src/main/java/sonia/scm/jira/soap/AbstractNamedRemoteEntity.java",
    "contents_url": "https://api.github.com/repos/scm-manager/scm-jira-plugin/contents/src/main/java/sonia/scm/jira/soap/AbstractNamedRemoteEntity.java?ref=b4021019839e0082e46b13315a6a13dc3c8b89f0",
    "patch": "@@ -0,0 +1,122 @@\n+/**\n+ * AbstractNamedRemoteEntity.java\n+ *\n+ * This file was auto-generated from WSDL\n+ * by the Apache Axis 1.4 Apr 22, 2006 (06:55:48 PDT) WSDL2Java emitter.\n+ */\n+\n+package sonia.scm.jira.soap;\n+\n+public abstract class AbstractNamedRemoteEntity  extends sonia.scm.jira.soap.AbstractRemoteEntity  implements java.io.Serializable {\n+    private java.lang.String name;\n+\n+    public AbstractNamedRemoteEntity() {\n+    }\n+\n+    public AbstractNamedRemoteEntity(\n+           java.lang.String id,\n+           java.lang.String name) {\n+        super(\n+            id);\n+        this.name = name;\n+    }\n+\n+\n+    /**\n+     * Gets the name value for this AbstractNamedRemoteEntity.\n+     *\n+     * @return name\n+     */\n+    public java.lang.String getName() {\n+        return name;\n+    }\n+\n+\n+    /**\n+     * Sets the name value for this AbstractNamedRemoteEntity.\n+     *\n+     * @param name\n+     */\n+    public void setName(java.lang.String name) {\n+        this.name = name;\n+    }\n+\n+    private java.lang.Object __equalsCalc = null;\n+    public synchronized boolean equals(java.lang.Object obj) {\n+        if (!(obj instanceof AbstractNamedRemoteEntity)) return false;\n+        AbstractNamedRemoteEntity other = (AbstractNamedRemoteEntity) obj;\n+        if (obj == null) return false;\n+        if (this == obj) return true;\n+        if (__equalsCalc != null) {\n+            return (__equalsCalc == obj);\n+        }\n+        __equalsCalc = obj;\n+        boolean _equals;\n+        _equals = super.equals(obj) &&\n+            ((this.name==null && other.getName()==null) ||\n+             (this.name!=null &&\n+              this.name.equals(other.getName())));\n+        __equalsCalc = null;\n+        return _equals;\n+    }\n+\n+    private boolean __hashCodeCalc = false;\n+    public synchronized int hashCode() {\n+        if (__hashCodeCalc) {\n+            return 0;\n+        }\n+        __hashCodeCalc = true;\n+        int _hashCode = super.hashCode();\n+        if (getName() != null) {\n+            _hashCode += getName().hashCode();\n+        }\n+        __hashCodeCalc = false;\n+        return _hashCode;\n+    }\n+\n+    // Type metadata\n+    private static org.apache.axis.description.TypeDesc typeDesc =\n+        new org.apache.axis.description.TypeDesc(AbstractNamedRemoteEntity.class, true);\n+\n+    static {\n+        typeDesc.setXmlType(new javax.xml.namespace.QName(\"http://beans.soap.rpc.jira.atlassian.com\", \"AbstractNamedRemoteEntity\"));\n+        org.apache.axis.description.ElementDesc elemField = new org.apache.axis.description.ElementDesc();\n+        elemField.setFieldName(\"name\");\n+        elemField.setXmlName(new javax.xml.namespace.QName(\"\", \"name\"));\n+        elemField.setXmlType(new javax.xml.namespace.QName(\"http://www.w3.org/2001/XMLSchema\", \"string\"));\n+        elemField.setNillable(true);\n+        typeDesc.addFieldDesc(elemField);\n+    }\n+\n+    /**\n+     * Return type metadata object\n+     */\n+    public static org.apache.axis.description.TypeDesc getTypeDesc() {\n+        return typeDesc;\n+    }\n+\n+    /**\n+     * Get Custom Serializer\n+     */\n+    public static org.apache.axis.encoding.Serializer getSerializer(\n+           java.lang.String mechType,\n+           java.lang.Class _javaType,\n+           javax.xml.namespace.QName _xmlType) {\n+        return\n+          new  org.apache.axis.encoding.ser.BeanSerializer(\n+            _javaType, _xmlType, typeDesc);\n+    }\n+\n+    /**\n+     * Get Custom Deserializer\n+     */\n+    public static org.apache.axis.encoding.Deserializer getDeserializer(\n+           java.lang.String mechType,\n+           java.lang.Class _javaType,\n+           javax.xml.namespace.QName _xmlType) {\n+        return\n+          new  org.apache.axis.encoding.ser.BeanDeserializer(\n+            _javaType, _xmlType, typeDesc);\n+    }\n+\n+}"
  },
  {
    "sha": "07cf8378a0a069ad9cf70cca09448e39c1385cfb",
    "filename": "src/main/java/sonia/scm/jira/soap/AbstractRemoteConstant.java",
    "status": "added",
    "additions": 160,
    "deletions": 0,
    "changes": 160,
    "blob_url": "https://github.com/scm-manager/scm-jira-plugin/blob/b4021019839e0082e46b13315a6a13dc3c8b89f0/src/main/java/sonia/scm/jira/soap/AbstractRemoteConstant.java",
    "raw_url": "https://github.com/scm-manager/scm-jira-plugin/raw/b4021019839e0082e46b13315a6a13dc3c8b89f0/src/main/java/sonia/scm/jira/soap/AbstractRemoteConstant.java",
    "contents_url": "https://api.github.com/repos/scm-manager/scm-jira-plugin/contents/src/main/java/sonia/scm/jira/soap/AbstractRemoteConstant.java?ref=b4021019839e0082e46b13315a6a13dc3c8b89f0",
    "patch": "@@ -0,0 +1,160 @@\n+/**\n+ * AbstractRemoteConstant.java\n+ *\n+ * This file was auto-generated from WSDL\n+ * by the Apache Axis 1.4 Apr 22, 2006 (06:55:48 PDT) WSDL2Java emitter.\n+ */\n+\n+package sonia.scm.jira.soap;\n+\n+public abstract class AbstractRemoteConstant  extends sonia.scm.jira.soap.AbstractNamedRemoteEntity  implements java.io.Serializable {\n+    private java.lang.String description;\n+\n+    private java.lang.String icon;\n+\n+    public AbstractRemoteConstant() {\n+    }\n+\n+    public AbstractRemoteConstant(\n+           java.lang.String id,\n+           java.lang.String name,\n+           java.lang.String description,\n+           java.lang.String icon) {\n+        super(\n+            id,\n+            name);\n+        this.description = description;\n+        this.icon = icon;\n+    }\n+\n+\n+    /**\n+     * Gets the description value for this AbstractRemoteConstant.\n+     *\n+     * @return description\n+     */\n+    public java.lang.String getDescription() {\n+        return description;\n+    }\n+\n+\n+    /**\n+     * Sets the description value for this AbstractRemoteConstant.\n+     *\n+     * @param description\n+     */\n+    public void setDescription(java.lang.String description) {\n+        this.description = description;\n+    }\n+\n+\n+    /**\n+     * Gets the icon value for this AbstractRemoteConstant.\n+     *\n+     * @return icon\n+     */\n+    public java.lang.String getIcon() {\n+        return icon;\n+    }\n+\n+\n+    /**\n+     * Sets the icon value for this AbstractRemoteConstant.\n+     *\n+     * @param icon\n+     */\n+    public void setIcon(java.lang.String icon) {\n+        this.icon = icon;\n+    }\n+\n+    private java.lang.Object __equalsCalc = null;\n+    public synchronized boolean equals(java.lang.Object obj) {\n+        if (!(obj instanceof AbstractRemoteConstant)) return false;\n+        AbstractRemoteConstant other = (AbstractRemoteConstant) obj;\n+        if (obj == null) return false;\n+        if (this == obj) return true;\n+        if (__equalsCalc != null) {\n+            return (__equalsCalc == obj);\n+        }\n+        __equalsCalc = obj;\n+        boolean _equals;\n+        _equals = super.equals(obj) &&\n+            ((this.description==null && other.getDescription()==null) ||\n+             (this.description!=null &&\n+              this.description.equals(other.getDescription()))) &&\n+            ((this.icon==null && other.getIcon()==null) ||\n+             (this.icon!=null &&\n+              this.icon.equals(other.getIcon())));\n+        __equalsCalc = null;\n+        return _equals;\n+    }\n+\n+    private boolean __hashCodeCalc = false;\n+    public synchronized int hashCode() {\n+        if (__hashCodeCalc) {\n+            return 0;\n+        }\n+        __hashCodeCalc = true;\n+        int _hashCode = super.hashCode();\n+        if (getDescription() != null) {\n+            _hashCode += getDescription().hashCode();\n+        }\n+        if (getIcon() != null) {\n+            _hashCode += getIcon().hashCode();\n+        }\n+        __hashCodeCalc = false;\n+        return _hashCode;\n+    }\n+\n+    // Type metadata\n+    private static org.apache.axis.description.TypeDesc typeDesc =\n+        new org.apache.axis.description.TypeDesc(AbstractRemoteConstant.class, true);\n+\n+    static {\n+        typeDesc.setXmlType(new javax.xml.namespace.QName(\"http://beans.soap.rpc.jira.atlassian.com\", \"AbstractRemoteConstant\"));\n+        org.apache.axis.description.ElementDesc elemField = new org.apache.axis.description.ElementDesc();\n+        elemField.setFieldName(\"description\");\n+        elemField.setXmlName(new javax.xml.namespace.QName(\"\", \"description\"));\n+        elemField.setXmlType(new javax.xml.namespace.QName(\"http://www.w3.org/2001/XMLSchema\", \"string\"));\n+        elemField.setNillable(true);\n+        typeDesc.addFieldDesc(elemField);\n+        elemField = new org.apache.axis.description.ElementDesc();\n+        elemField.setFieldName(\"icon\");\n+        elemField.setXmlName(new javax.xml.namespace.QName(\"\", \"icon\"));\n+        elemField.setXmlType(new javax.xml.namespace.QName(\"http://www.w3.org/2001/XMLSchema\", \"string\"));\n+        elemField.setNillable(true);\n+        typeDesc.addFieldDesc(elemField);\n+    }\n+\n+    /**\n+     * Return type metadata object\n+     */\n+    public static org.apache.axis.description.TypeDesc getTypeDesc() {\n+        return typeDesc;\n+    }\n+\n+    /**\n+     * Get Custom Serializer\n+     */\n+    public static org.apache.axis.encoding.Serializer getSerializer(\n+           java.lang.String mechType,\n+           java.lang.Class _javaType,\n+           javax.xml.namespace.QName _xmlType) {\n+        return\n+          new  org.apache.axis.encoding.ser.BeanSerializer(\n+            _javaType, _xmlType, typeDesc);\n+    }\n+\n+    /**\n+     * Get Custom Deserializer\n+     */\n+    public static org.apache.axis.encoding.Deserializer getDeserializer(\n+           java.lang.String mechType,\n+           java.lang.Class _javaType,\n+           javax.xml.namespace.QName _xmlType) {\n+        return\n+          new  org.apache.axis.encoding.ser.BeanDeserializer(\n+            _javaType, _xmlType, typeDesc);\n+    }\n+\n+}"
  },
  {
    "sha": "4688afb321555659ad26fdf0f5fbf1672287a0a5",
    "filename": "src/main/java/sonia/scm/jira/soap/AbstractRemoteEntity.java",
    "status": "added",
    "additions": 119,
    "deletions": 0,
    "changes": 119,
    "blob_url": "https://github.com/scm-manager/scm-jira-plugin/blob/b4021019839e0082e46b13315a6a13dc3c8b89f0/src/main/java/sonia/scm/jira/soap/AbstractRemoteEntity.java",
    "raw_url": "https://github.com/scm-manager/scm-jira-plugin/raw/b4021019839e0082e46b13315a6a13dc3c8b89f0/src/main/java/sonia/scm/jira/soap/AbstractRemoteEntity.java",
    "contents_url": "https://api.github.com/repos/scm-manager/scm-jira-plugin/contents/src/main/java/sonia/scm/jira/soap/AbstractRemoteEntity.java?ref=b4021019839e0082e46b13315a6a13dc3c8b89f0",
    "patch": "@@ -0,0 +1,119 @@\n+/**\n+ * AbstractRemoteEntity.java\n+ *\n+ * This file was auto-generated from WSDL\n+ * by the Apache Axis 1.4 Apr 22, 2006 (06:55:48 PDT) WSDL2Java emitter.\n+ */\n+\n+package sonia.scm.jira.soap;\n+\n+public abstract class AbstractRemoteEntity  implements java.io.Serializable {\n+    private java.lang.String id;\n+\n+    public AbstractRemoteEntity() {\n+    }\n+\n+    public AbstractRemoteEntity(\n+           java.lang.String id) {\n+           this.id = id;\n+    }\n+\n+\n+    /**\n+     * Gets the id value for this AbstractRemoteEntity.\n+     *\n+     * @return id\n+     */\n+    public java.lang.String getId() {\n+        return id;\n+    }\n+\n+\n+    /**\n+     * Sets the id value for this AbstractRemoteEntity.\n+     *\n+     * @param id\n+     */\n+    public void setId(java.lang.String id) {\n+        this.id = id;\n+    }\n+\n+    private java.lang.Object __equalsCalc = null;\n+    public synchronized boolean equals(java.lang.Object obj) {\n+        if (!(obj instanceof AbstractRemoteEntity)) return false;\n+        AbstractRemoteEntity other = (AbstractRemoteEntity) obj;\n+        if (obj == null) return false;\n+        if (this == obj) return true;\n+        if (__equalsCalc != null) {\n+            return (__equalsCalc == obj);\n+        }\n+        __equalsCalc = obj;\n+        boolean _equals;\n+        _equals = true &&\n+            ((this.id==null && other.getId()==null) ||\n+             (this.id!=null &&\n+              this.id.equals(other.getId())));\n+        __equalsCalc = null;\n+        return _equals;\n+    }\n+\n+    private boolean __hashCodeCalc = false;\n+    public synchronized int hashCode() {\n+        if (__hashCodeCalc) {\n+            return 0;\n+        }\n+        __hashCodeCalc = true;\n+        int _hashCode = 1;\n+        if (getId() != null) {\n+            _hashCode += getId().hashCode();\n+        }\n+        __hashCodeCalc = false;\n+        return _hashCode;\n+    }\n+\n+    // Type metadata\n+    private static org.apache.axis.description.TypeDesc typeDesc =\n+        new org.apache.axis.description.TypeDesc(AbstractRemoteEntity.class, true);\n+\n+    static {\n+        typeDesc.setXmlType(new javax.xml.namespace.QName(\"http://beans.soap.rpc.jira.atlassian.com\", \"AbstractRemoteEntity\"));\n+        org.apache.axis.description.ElementDesc elemField = new org.apache.axis.description.ElementDesc();\n+        elemField.setFieldName(\"id\");\n+        elemField.setXmlName(new javax.xml.namespace.QName(\"\", \"id\"));\n+        elemField.setXmlType(new javax.xml.namespace.QName(\"http://www.w3.org/2001/XMLSchema\", \"string\"));\n+        elemField.setNillable(true);\n+        typeDesc.addFieldDesc(elemField);\n+    }\n+\n+    /**\n+     * Return type metadata object\n+     */\n+    public static org.apache.axis.description.TypeDesc getTypeDesc() {\n+        return typeDesc;\n+    }\n+\n+    /**\n+     * Get Custom Serializer\n+     */\n+    public static org.apache.axis.encoding.Serializer getSerializer(\n+           java.lang.String mechType,\n+           java.lang.Class _javaType,\n+           javax.xml.namespace.QName _xmlType) {\n+        return\n+          new  org.apache.axis.encoding.ser.BeanSerializer(\n+            _javaType, _xmlType, typeDesc);\n+    }\n+\n+    /**\n+     * Get Custom Deserializer\n+     */\n+    public static org.apache.axis.encoding.Deserializer getDeserializer(\n+           java.lang.String mechType,\n+           java.lang.Class _javaType,\n+           javax.xml.namespace.QName _xmlType) {\n+        return\n+          new  org.apache.axis.encoding.ser.BeanDeserializer(\n+            _javaType, _xmlType, typeDesc);\n+    }\n+\n+}"
  },
  {
    "sha": "b4f7db7b9fec3429b7c34f803343114ad2f000aa",
    "filename": "src/main/java/sonia/scm/jira/soap/JiraSoapService.java",
    "status": "added",
    "additions": 124,
    "deletions": 0,
    "changes": 124,
    "blob_url": "https://github.com/scm-manager/scm-jira-plugin/blob/b4021019839e0082e46b13315a6a13dc3c8b89f0/src/main/java/sonia/scm/jira/soap/JiraSoapService.java",
    "raw_url": "https://github.com/scm-manager/scm-jira-plugin/raw/b4021019839e0082e46b13315a6a13dc3c8b89f0/src/main/java/sonia/scm/jira/soap/JiraSoapService.java",
    "contents_url": "https://api.github.com/repos/scm-manager/scm-jira-plugin/contents/src/main/java/sonia/scm/jira/soap/JiraSoapService.java?ref=b4021019839e0082e46b13315a6a13dc3c8b89f0",
    "patch": "@@ -0,0 +1,124 @@\n+/**\n+ * JiraSoapService.java\n+ *\n+ * This file was auto-generated from WSDL\n+ * by the Apache Axis 1.4 Apr 22, 2006 (06:55:48 PDT) WSDL2Java emitter.\n+ */\n+\n+package sonia.scm.jira.soap;\n+\n+public interface JiraSoapService extends java.rmi.Remote {\n+    public sonia.scm.jira.soap.RemoteComment getComment(java.lang.String in0, long in1) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteException;\n+    public sonia.scm.jira.soap.RemoteConfiguration getConfiguration(java.lang.String in0) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteAuthenticationException, sonia.scm.jira.soap.RemotePermissionException, sonia.scm.jira.soap.RemoteException;\n+    public sonia.scm.jira.soap.RemoteGroup createGroup(java.lang.String in0, java.lang.String in1, sonia.scm.jira.soap.RemoteUser in2) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteAuthenticationException, sonia.scm.jira.soap.RemotePermissionException, sonia.scm.jira.soap.RemoteException, sonia.scm.jira.soap.RemoteValidationException;\n+    public sonia.scm.jira.soap.RemoteServerInfo getServerInfo(java.lang.String in0) throws java.rmi.RemoteException;\n+    public sonia.scm.jira.soap.RemoteGroup getGroup(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteAuthenticationException, sonia.scm.jira.soap.RemotePermissionException, sonia.scm.jira.soap.RemoteException, sonia.scm.jira.soap.RemoteValidationException;\n+    public sonia.scm.jira.soap.RemoteUser createUser(java.lang.String in0, java.lang.String in1, java.lang.String in2, java.lang.String in3, java.lang.String in4) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteAuthenticationException, sonia.scm.jira.soap.RemotePermissionException, sonia.scm.jira.soap.RemoteException, sonia.scm.jira.soap.RemoteValidationException;\n+    public void addComment(java.lang.String in0, java.lang.String in1, sonia.scm.jira.soap.RemoteComment in2) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteAuthenticationException, sonia.scm.jira.soap.RemotePermissionException, sonia.scm.jira.soap.RemoteException;\n+    public sonia.scm.jira.soap.RemoteComponent[] getComponents(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteAuthenticationException, sonia.scm.jira.soap.RemotePermissionException, sonia.scm.jira.soap.RemoteException;\n+    public sonia.scm.jira.soap.RemoteUser getUser(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteAuthenticationException, sonia.scm.jira.soap.RemotePermissionException;\n+    public sonia.scm.jira.soap.RemoteUser updateUser(java.lang.String in0, sonia.scm.jira.soap.RemoteUser in1) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteAuthenticationException, sonia.scm.jira.soap.RemotePermissionException, sonia.scm.jira.soap.RemoteException, sonia.scm.jira.soap.RemoteValidationException;\n+    public sonia.scm.jira.soap.RemoteGroup updateGroup(java.lang.String in0, sonia.scm.jira.soap.RemoteGroup in1) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteAuthenticationException, sonia.scm.jira.soap.RemotePermissionException, sonia.scm.jira.soap.RemoteException, sonia.scm.jira.soap.RemoteValidationException;\n+    public void addUserToGroup(java.lang.String in0, sonia.scm.jira.soap.RemoteGroup in1, sonia.scm.jira.soap.RemoteUser in2) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteAuthenticationException, sonia.scm.jira.soap.RemotePermissionException, sonia.scm.jira.soap.RemoteException, sonia.scm.jira.soap.RemoteValidationException;\n+    public void removeUserFromGroup(java.lang.String in0, sonia.scm.jira.soap.RemoteGroup in1, sonia.scm.jira.soap.RemoteUser in2) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteAuthenticationException, sonia.scm.jira.soap.RemotePermissionException, sonia.scm.jira.soap.RemoteException, sonia.scm.jira.soap.RemoteValidationException;\n+    public sonia.scm.jira.soap.RemoteIssue getIssue(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteAuthenticationException, sonia.scm.jira.soap.RemotePermissionException, sonia.scm.jira.soap.RemoteException;\n+    public sonia.scm.jira.soap.RemoteIssue createIssue(java.lang.String in0, sonia.scm.jira.soap.RemoteIssue in1) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteAuthenticationException, sonia.scm.jira.soap.RemotePermissionException, sonia.scm.jira.soap.RemoteException, sonia.scm.jira.soap.RemoteValidationException;\n+    public sonia.scm.jira.soap.RemoteIssue updateIssue(java.lang.String in0, java.lang.String in1, sonia.scm.jira.soap.RemoteFieldValue[] in2) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteException;\n+    public void deleteIssue(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteAuthenticationException, sonia.scm.jira.soap.RemotePermissionException, sonia.scm.jira.soap.RemoteException;\n+    public sonia.scm.jira.soap.RemoteNamedObject[] getAvailableActions(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteException;\n+    public sonia.scm.jira.soap.RemoteIssueType[] getSubTaskIssueTypes(java.lang.String in0) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteAuthenticationException, sonia.scm.jira.soap.RemotePermissionException;\n+    public sonia.scm.jira.soap.RemoteProject createProject(java.lang.String in0, java.lang.String in1, java.lang.String in2, java.lang.String in3, java.lang.String in4, java.lang.String in5, sonia.scm.jira.soap.RemotePermissionScheme in6, sonia.scm.jira.soap.RemoteScheme in7, sonia.scm.jira.soap.RemoteScheme in8) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteAuthenticationException, sonia.scm.jira.soap.RemotePermissionException, sonia.scm.jira.soap.RemoteException, sonia.scm.jira.soap.RemoteValidationException;\n+    public sonia.scm.jira.soap.RemoteProject updateProject(java.lang.String in0, sonia.scm.jira.soap.RemoteProject in1) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteAuthenticationException, sonia.scm.jira.soap.RemotePermissionException, sonia.scm.jira.soap.RemoteException, sonia.scm.jira.soap.RemoteValidationException;\n+    public sonia.scm.jira.soap.RemoteProject getProjectByKey(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteAuthenticationException, sonia.scm.jira.soap.RemotePermissionException, sonia.scm.jira.soap.RemoteException;\n+    public void removeAllRoleActorsByProject(java.lang.String in0, sonia.scm.jira.soap.RemoteProject in1) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteException;\n+    public sonia.scm.jira.soap.RemotePriority[] getPriorities(java.lang.String in0) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteAuthenticationException, sonia.scm.jira.soap.RemotePermissionException;\n+    public sonia.scm.jira.soap.RemoteResolution[] getResolutions(java.lang.String in0) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteAuthenticationException, sonia.scm.jira.soap.RemotePermissionException;\n+    public sonia.scm.jira.soap.RemoteIssueType[] getIssueTypes(java.lang.String in0) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteAuthenticationException, sonia.scm.jira.soap.RemotePermissionException;\n+    public sonia.scm.jira.soap.RemoteStatus[] getStatuses(java.lang.String in0) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteAuthenticationException, sonia.scm.jira.soap.RemotePermissionException;\n+    public sonia.scm.jira.soap.RemoteIssueType[] getIssueTypesForProject(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteAuthenticationException, sonia.scm.jira.soap.RemotePermissionException;\n+    public sonia.scm.jira.soap.RemoteProjectRole[] getProjectRoles(java.lang.String in0) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteException;\n+    public sonia.scm.jira.soap.RemoteProjectRole getProjectRole(java.lang.String in0, long in1) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteException;\n+    public sonia.scm.jira.soap.RemoteProjectRoleActors getProjectRoleActors(java.lang.String in0, sonia.scm.jira.soap.RemoteProjectRole in1, sonia.scm.jira.soap.RemoteProject in2) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteException;\n+    public sonia.scm.jira.soap.RemoteRoleActors getDefaultRoleActors(java.lang.String in0, sonia.scm.jira.soap.RemoteProjectRole in1) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteException;\n+    public void removeAllRoleActorsByNameAndType(java.lang.String in0, java.lang.String in1, java.lang.String in2) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteException;\n+    public void deleteProjectRole(java.lang.String in0, sonia.scm.jira.soap.RemoteProjectRole in1, boolean in2) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteException;\n+    public void updateProjectRole(java.lang.String in0, sonia.scm.jira.soap.RemoteProjectRole in1) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteException;\n+    public sonia.scm.jira.soap.RemoteProjectRole createProjectRole(java.lang.String in0, sonia.scm.jira.soap.RemoteProjectRole in1) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteException;\n+    public boolean isProjectRoleNameUnique(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteException;\n+    public void addActorsToProjectRole(java.lang.String in0, java.lang.String[] in1, sonia.scm.jira.soap.RemoteProjectRole in2, sonia.scm.jira.soap.RemoteProject in3, java.lang.String in4) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteException;\n+    public void removeActorsFromProjectRole(java.lang.String in0, java.lang.String[] in1, sonia.scm.jira.soap.RemoteProjectRole in2, sonia.scm.jira.soap.RemoteProject in3, java.lang.String in4) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteException;\n+    public void addDefaultActorsToProjectRole(java.lang.String in0, java.lang.String[] in1, sonia.scm.jira.soap.RemoteProjectRole in2, java.lang.String in3) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteException;\n+    public void removeDefaultActorsFromProjectRole(java.lang.String in0, java.lang.String[] in1, sonia.scm.jira.soap.RemoteProjectRole in2, java.lang.String in3) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteException;\n+    public sonia.scm.jira.soap.RemoteScheme[] getAssociatedNotificationSchemes(java.lang.String in0, sonia.scm.jira.soap.RemoteProjectRole in1) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteException;\n+    public sonia.scm.jira.soap.RemoteScheme[] getAssociatedPermissionSchemes(java.lang.String in0, sonia.scm.jira.soap.RemoteProjectRole in1) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteException;\n+    public void deleteProject(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteAuthenticationException, sonia.scm.jira.soap.RemotePermissionException, sonia.scm.jira.soap.RemoteException;\n+    public sonia.scm.jira.soap.RemoteProject getProjectById(java.lang.String in0, long in1) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteAuthenticationException, sonia.scm.jira.soap.RemotePermissionException, sonia.scm.jira.soap.RemoteException;\n+    public sonia.scm.jira.soap.RemoteVersion[] getVersions(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteAuthenticationException, sonia.scm.jira.soap.RemotePermissionException, sonia.scm.jira.soap.RemoteException;\n+    public sonia.scm.jira.soap.RemoteComment[] getComments(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteAuthenticationException, sonia.scm.jira.soap.RemotePermissionException, sonia.scm.jira.soap.RemoteException;\n+    public sonia.scm.jira.soap.RemoteFilter[] getFavouriteFilters(java.lang.String in0) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteAuthenticationException, sonia.scm.jira.soap.RemotePermissionException, sonia.scm.jira.soap.RemoteException;\n+    public void releaseVersion(java.lang.String in0, java.lang.String in1, sonia.scm.jira.soap.RemoteVersion in2) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteException;\n+    public void archiveVersion(java.lang.String in0, java.lang.String in1, java.lang.String in2, boolean in3) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteException;\n+    public sonia.scm.jira.soap.RemoteField[] getFieldsForCreate(java.lang.String in0, java.lang.String in1, long in2) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteException;\n+    public sonia.scm.jira.soap.RemoteField[] getFieldsForEdit(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteException;\n+    public sonia.scm.jira.soap.RemoteIssueType[] getSubTaskIssueTypesForProject(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteAuthenticationException, sonia.scm.jira.soap.RemotePermissionException;\n+    public java.lang.String login(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteAuthenticationException, sonia.scm.jira.soap.RemoteException;\n+    public sonia.scm.jira.soap.RemoteSecurityLevel getSecurityLevel(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemotePermissionException, sonia.scm.jira.soap.RemoteException;\n+    public sonia.scm.jira.soap.RemoteField[] getCustomFields(java.lang.String in0) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteException;\n+    public boolean logout(java.lang.String in0) throws java.rmi.RemoteException;\n+    public sonia.scm.jira.soap.RemoteProject getProjectWithSchemesById(java.lang.String in0, long in1) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteException;\n+    public sonia.scm.jira.soap.RemoteSecurityLevel[] getSecurityLevels(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemotePermissionException, sonia.scm.jira.soap.RemoteException;\n+    public sonia.scm.jira.soap.RemoteAvatar[] getProjectAvatars(java.lang.String in0, java.lang.String in1, boolean in2) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemotePermissionException, sonia.scm.jira.soap.RemoteException;\n+    public void setProjectAvatar(java.lang.String in0, java.lang.String in1, long in2) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemotePermissionException, sonia.scm.jira.soap.RemoteException;\n+    public sonia.scm.jira.soap.RemoteAvatar getProjectAvatar(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemotePermissionException, sonia.scm.jira.soap.RemoteException;\n+    public void deleteProjectAvatar(java.lang.String in0, long in1) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteException;\n+    public sonia.scm.jira.soap.RemoteScheme[] getNotificationSchemes(java.lang.String in0) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteAuthenticationException, sonia.scm.jira.soap.RemotePermissionException, sonia.scm.jira.soap.RemoteException;\n+    public sonia.scm.jira.soap.RemotePermissionScheme[] getPermissionSchemes(java.lang.String in0) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteAuthenticationException, sonia.scm.jira.soap.RemotePermissionException, sonia.scm.jira.soap.RemoteException;\n+    public sonia.scm.jira.soap.RemotePermission[] getAllPermissions(java.lang.String in0) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteAuthenticationException, sonia.scm.jira.soap.RemotePermissionException, sonia.scm.jira.soap.RemoteException;\n+    public sonia.scm.jira.soap.RemotePermissionScheme createPermissionScheme(java.lang.String in0, java.lang.String in1, java.lang.String in2) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteAuthenticationException, sonia.scm.jira.soap.RemotePermissionException, sonia.scm.jira.soap.RemoteException, sonia.scm.jira.soap.RemoteValidationException;\n+    public sonia.scm.jira.soap.RemotePermissionScheme addPermissionTo(java.lang.String in0, sonia.scm.jira.soap.RemotePermissionScheme in1, sonia.scm.jira.soap.RemotePermission in2, sonia.scm.jira.soap.RemoteEntity in3) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteAuthenticationException, sonia.scm.jira.soap.RemotePermissionException, sonia.scm.jira.soap.RemoteException, sonia.scm.jira.soap.RemoteValidationException;\n+    public sonia.scm.jira.soap.RemotePermissionScheme deletePermissionFrom(java.lang.String in0, sonia.scm.jira.soap.RemotePermissionScheme in1, sonia.scm.jira.soap.RemotePermission in2, sonia.scm.jira.soap.RemoteEntity in3) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteAuthenticationException, sonia.scm.jira.soap.RemotePermissionException, sonia.scm.jira.soap.RemoteException, sonia.scm.jira.soap.RemoteValidationException;\n+    public void deletePermissionScheme(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteAuthenticationException, sonia.scm.jira.soap.RemotePermissionException, sonia.scm.jira.soap.RemoteException, sonia.scm.jira.soap.RemoteValidationException;\n+    public sonia.scm.jira.soap.RemoteIssue createIssueWithSecurityLevel(java.lang.String in0, sonia.scm.jira.soap.RemoteIssue in1, long in2) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteAuthenticationException, sonia.scm.jira.soap.RemotePermissionException, sonia.scm.jira.soap.RemoteException, sonia.scm.jira.soap.RemoteValidationException;\n+    public boolean addAttachmentsToIssue(java.lang.String in0, java.lang.String in1, java.lang.String[] in2, byte[][] in3) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteAuthenticationException, sonia.scm.jira.soap.RemotePermissionException, sonia.scm.jira.soap.RemoteException, sonia.scm.jira.soap.RemoteValidationException;\n+    public sonia.scm.jira.soap.RemoteAttachment[] getAttachmentsFromIssue(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteAuthenticationException, sonia.scm.jira.soap.RemotePermissionException, sonia.scm.jira.soap.RemoteException, sonia.scm.jira.soap.RemoteValidationException;\n+    public boolean hasPermissionToEditComment(java.lang.String in0, sonia.scm.jira.soap.RemoteComment in1) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteException;\n+    public sonia.scm.jira.soap.RemoteComment editComment(java.lang.String in0, sonia.scm.jira.soap.RemoteComment in1) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteException;\n+    public sonia.scm.jira.soap.RemoteField[] getFieldsForAction(java.lang.String in0, java.lang.String in1, java.lang.String in2) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteException;\n+    public sonia.scm.jira.soap.RemoteIssue progressWorkflowAction(java.lang.String in0, java.lang.String in1, java.lang.String in2, sonia.scm.jira.soap.RemoteFieldValue[] in3) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteException;\n+    public sonia.scm.jira.soap.RemoteIssue getIssueById(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteAuthenticationException, sonia.scm.jira.soap.RemotePermissionException, sonia.scm.jira.soap.RemoteException;\n+    public sonia.scm.jira.soap.RemoteWorklog addWorklogWithNewRemainingEstimate(java.lang.String in0, java.lang.String in1, sonia.scm.jira.soap.RemoteWorklog in2, java.lang.String in3) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemotePermissionException, sonia.scm.jira.soap.RemoteException, sonia.scm.jira.soap.RemoteValidationException;\n+    public sonia.scm.jira.soap.RemoteWorklog addWorklogAndAutoAdjustRemainingEstimate(java.lang.String in0, java.lang.String in1, sonia.scm.jira.soap.RemoteWorklog in2) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemotePermissionException, sonia.scm.jira.soap.RemoteException, sonia.scm.jira.soap.RemoteValidationException;\n+    public sonia.scm.jira.soap.RemoteWorklog addWorklogAndRetainRemainingEstimate(java.lang.String in0, java.lang.String in1, sonia.scm.jira.soap.RemoteWorklog in2) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemotePermissionException, sonia.scm.jira.soap.RemoteException, sonia.scm.jira.soap.RemoteValidationException;\n+    public void deleteWorklogWithNewRemainingEstimate(java.lang.String in0, java.lang.String in1, java.lang.String in2) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemotePermissionException, sonia.scm.jira.soap.RemoteException, sonia.scm.jira.soap.RemoteValidationException;\n+    public void deleteWorklogAndAutoAdjustRemainingEstimate(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemotePermissionException, sonia.scm.jira.soap.RemoteException, sonia.scm.jira.soap.RemoteValidationException;\n+    public void deleteWorklogAndRetainRemainingEstimate(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemotePermissionException, sonia.scm.jira.soap.RemoteException, sonia.scm.jira.soap.RemoteValidationException;\n+    public void updateWorklogWithNewRemainingEstimate(java.lang.String in0, sonia.scm.jira.soap.RemoteWorklog in1, java.lang.String in2) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemotePermissionException, sonia.scm.jira.soap.RemoteException, sonia.scm.jira.soap.RemoteValidationException;\n+    public void updateWorklogAndAutoAdjustRemainingEstimate(java.lang.String in0, sonia.scm.jira.soap.RemoteWorklog in1) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemotePermissionException, sonia.scm.jira.soap.RemoteException, sonia.scm.jira.soap.RemoteValidationException;\n+    public void updateWorklogAndRetainRemainingEstimate(java.lang.String in0, sonia.scm.jira.soap.RemoteWorklog in1) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemotePermissionException, sonia.scm.jira.soap.RemoteException, sonia.scm.jira.soap.RemoteValidationException;\n+    public sonia.scm.jira.soap.RemoteWorklog[] getWorklogs(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemotePermissionException, sonia.scm.jira.soap.RemoteException, sonia.scm.jira.soap.RemoteValidationException;\n+    public boolean hasPermissionToCreateWorklog(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteException, sonia.scm.jira.soap.RemoteValidationException;\n+    public boolean hasPermissionToDeleteWorklog(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteException, sonia.scm.jira.soap.RemoteValidationException;\n+    public boolean hasPermissionToUpdateWorklog(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteException, sonia.scm.jira.soap.RemoteValidationException;\n+    public java.util.Calendar getResolutionDateByKey(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteAuthenticationException, sonia.scm.jira.soap.RemotePermissionException, sonia.scm.jira.soap.RemoteException;\n+    public java.util.Calendar getResolutionDateById(java.lang.String in0, long in1) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteAuthenticationException, sonia.scm.jira.soap.RemotePermissionException, sonia.scm.jira.soap.RemoteException;\n+    public long getIssueCountForFilter(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteException;\n+    public sonia.scm.jira.soap.RemoteIssue[] getIssuesFromTextSearch(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteException;\n+    public sonia.scm.jira.soap.RemoteIssue[] getIssuesFromTextSearchWithProject(java.lang.String in0, java.lang.String[] in1, java.lang.String in2, int in3) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteException;\n+    public sonia.scm.jira.soap.RemoteIssue[] getIssuesFromJqlSearch(java.lang.String in0, java.lang.String in1, int in2) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteException;\n+    public void deleteUser(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteAuthenticationException, sonia.scm.jira.soap.RemotePermissionException, sonia.scm.jira.soap.RemoteException, sonia.scm.jira.soap.RemoteValidationException;\n+    public void deleteGroup(java.lang.String in0, java.lang.String in1, java.lang.String in2) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteAuthenticationException, sonia.scm.jira.soap.RemotePermissionException, sonia.scm.jira.soap.RemoteException, sonia.scm.jira.soap.RemoteValidationException;\n+    public void setUserPassword(java.lang.String in0, sonia.scm.jira.soap.RemoteUser in1, java.lang.String in2) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteAuthenticationException, sonia.scm.jira.soap.RemotePermissionException, sonia.scm.jira.soap.RemoteException, sonia.scm.jira.soap.RemoteValidationException;\n+    public void refreshCustomFields(java.lang.String in0) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteException;\n+    public sonia.scm.jira.soap.RemoteFilter[] getSavedFilters(java.lang.String in0) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteAuthenticationException, sonia.scm.jira.soap.RemotePermissionException, sonia.scm.jira.soap.RemoteException;\n+    public sonia.scm.jira.soap.RemoteIssue createIssueWithParent(java.lang.String in0, sonia.scm.jira.soap.RemoteIssue in1, java.lang.String in2) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteAuthenticationException, sonia.scm.jira.soap.RemotePermissionException, sonia.scm.jira.soap.RemoteException, sonia.scm.jira.soap.RemoteValidationException;\n+    public sonia.scm.jira.soap.RemoteIssue createIssueWithParentWithSecurityLevel(java.lang.String in0, sonia.scm.jira.soap.RemoteIssue in1, java.lang.String in2, long in3) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteAuthenticationException, sonia.scm.jira.soap.RemotePermissionException, sonia.scm.jira.soap.RemoteException, sonia.scm.jira.soap.RemoteValidationException;\n+    public boolean addBase64EncodedAttachmentsToIssue(java.lang.String in0, java.lang.String in1, java.lang.String[] in2, java.lang.String[] in3) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteAuthenticationException, sonia.scm.jira.soap.RemotePermissionException, sonia.scm.jira.soap.RemoteException, sonia.scm.jira.soap.RemoteValidationException;\n+    public sonia.scm.jira.soap.RemoteProject createProjectFromObject(java.lang.String in0, sonia.scm.jira.soap.RemoteProject in1) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteAuthenticationException, sonia.scm.jira.soap.RemotePermissionException, sonia.scm.jira.soap.RemoteException, sonia.scm.jira.soap.RemoteValidationException;\n+    public sonia.scm.jira.soap.RemoteVersion addVersion(java.lang.String in0, java.lang.String in1, sonia.scm.jira.soap.RemoteVersion in2) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteException;\n+    public sonia.scm.jira.soap.RemoteIssue[] getIssuesFromFilter(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteException;\n+    public sonia.scm.jira.soap.RemoteIssue[] getIssuesFromFilterWithLimit(java.lang.String in0, java.lang.String in1, int in2, int in3) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteException;\n+    public sonia.scm.jira.soap.RemoteIssue[] getIssuesFromTextSearchWithLimit(java.lang.String in0, java.lang.String in1, int in2, int in3) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteException;\n+    public sonia.scm.jira.soap.RemoteProject[] getProjectsNoSchemes(java.lang.String in0) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteAuthenticationException, sonia.scm.jira.soap.RemotePermissionException, sonia.scm.jira.soap.RemoteException;\n+    public void setNewProjectAvatar(java.lang.String in0, java.lang.String in1, java.lang.String in2, java.lang.String in3) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemotePermissionException, sonia.scm.jira.soap.RemoteException;\n+    public sonia.scm.jira.soap.RemoteScheme[] getSecuritySchemes(java.lang.String in0) throws java.rmi.RemoteException, sonia.scm.jira.soap.RemoteAuthenticationException, sonia.scm.jira.soap.RemotePermissionException, sonia.scm.jira.soap.RemoteException;\n+}"
  },
  {
    "sha": "66eed3f0b3202ad1891f5cbf04d68c2dc0d6965b",
    "filename": "src/main/java/sonia/scm/jira/soap/JiraSoapServiceService.java",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/scm-manager/scm-jira-plugin/blob/b4021019839e0082e46b13315a6a13dc3c8b89f0/src/main/java/sonia/scm/jira/soap/JiraSoapServiceService.java",
    "raw_url": "https://github.com/scm-manager/scm-jira-plugin/raw/b4021019839e0082e46b13315a6a13dc3c8b89f0/src/main/java/sonia/scm/jira/soap/JiraSoapServiceService.java",
    "contents_url": "https://api.github.com/repos/scm-manager/scm-jira-plugin/contents/src/main/java/sonia/scm/jira/soap/JiraSoapServiceService.java?ref=b4021019839e0082e46b13315a6a13dc3c8b89f0",
    "patch": "@@ -0,0 +1,16 @@\n+/**\n+ * JiraSoapServiceService.java\n+ *\n+ * This file was auto-generated from WSDL\n+ * by the Apache Axis 1.4 Apr 22, 2006 (06:55:48 PDT) WSDL2Java emitter.\n+ */\n+\n+package sonia.scm.jira.soap;\n+\n+public interface JiraSoapServiceService extends javax.xml.rpc.Service {\n+    public java.lang.String getJirasoapserviceV2Address();\n+\n+    public sonia.scm.jira.soap.JiraSoapService getJirasoapserviceV2() throws javax.xml.rpc.ServiceException;\n+\n+    public sonia.scm.jira.soap.JiraSoapService getJirasoapserviceV2(java.net.URL portAddress) throws javax.xml.rpc.ServiceException;\n+}"
  },
  {
    "sha": "7ebaaf3409d10515c82f6aa5f0f363281a941b4d",
    "filename": "src/main/java/sonia/scm/jira/soap/JiraSoapServiceServiceLocator.java",
    "status": "added",
    "additions": 142,
    "deletions": 0,
    "changes": 142,
    "blob_url": "https://github.com/scm-manager/scm-jira-plugin/blob/b4021019839e0082e46b13315a6a13dc3c8b89f0/src/main/java/sonia/scm/jira/soap/JiraSoapServiceServiceLocator.java",
    "raw_url": "https://github.com/scm-manager/scm-jira-plugin/raw/b4021019839e0082e46b13315a6a13dc3c8b89f0/src/main/java/sonia/scm/jira/soap/JiraSoapServiceServiceLocator.java",
    "contents_url": "https://api.github.com/repos/scm-manager/scm-jira-plugin/contents/src/main/java/sonia/scm/jira/soap/JiraSoapServiceServiceLocator.java?ref=b4021019839e0082e46b13315a6a13dc3c8b89f0",
    "patch": "@@ -0,0 +1,142 @@\n+/**\n+ * JiraSoapServiceServiceLocator.java\n+ *\n+ * This file was auto-generated from WSDL\n+ * by the Apache Axis 1.4 Apr 22, 2006 (06:55:48 PDT) WSDL2Java emitter.\n+ */\n+\n+package sonia.scm.jira.soap;\n+\n+public class JiraSoapServiceServiceLocator extends org.apache.axis.client.Service implements sonia.scm.jira.soap.JiraSoapServiceService {\n+\n+    public JiraSoapServiceServiceLocator() {\n+    }\n+\n+\n+    public JiraSoapServiceServiceLocator(org.apache.axis.EngineConfiguration config) {\n+        super(config);\n+    }\n+\n+    public JiraSoapServiceServiceLocator(java.lang.String wsdlLoc, javax.xml.namespace.QName sName) throws javax.xml.rpc.ServiceException {\n+        super(wsdlLoc, sName);\n+    }\n+\n+    // Use to get a proxy class for JirasoapserviceV2\n+    private java.lang.String JirasoapserviceV2_address = \"https://jira.atlassian.com/rpc/soap/jirasoapservice-v2\";\n+\n+    public java.lang.String getJirasoapserviceV2Address() {\n+        return JirasoapserviceV2_address;\n+    }\n+\n+    // The WSDD service name defaults to the port name.\n+    private java.lang.String JirasoapserviceV2WSDDServiceName = \"jirasoapservice-v2\";\n+\n+    public java.lang.String getJirasoapserviceV2WSDDServiceName() {\n+        return JirasoapserviceV2WSDDServiceName;\n+    }\n+\n+    public void setJirasoapserviceV2WSDDServiceName(java.lang.String name) {\n+        JirasoapserviceV2WSDDServiceName = name;\n+    }\n+\n+    public sonia.scm.jira.soap.JiraSoapService getJirasoapserviceV2() throws javax.xml.rpc.ServiceException {\n+       java.net.URL endpoint;\n+        try {\n+            endpoint = new java.net.URL(JirasoapserviceV2_address);\n+        }\n+        catch (java.net.MalformedURLException e) {\n+            throw new javax.xml.rpc.ServiceException(e);\n+        }\n+        return getJirasoapserviceV2(endpoint);\n+    }\n+\n+    public sonia.scm.jira.soap.JiraSoapService getJirasoapserviceV2(java.net.URL portAddress) throws javax.xml.rpc.ServiceException {\n+        try {\n+            sonia.scm.jira.soap.JirasoapserviceV2SoapBindingStub _stub = new sonia.scm.jira.soap.JirasoapserviceV2SoapBindingStub(portAddress, this);\n+            _stub.setPortName(getJirasoapserviceV2WSDDServiceName());\n+            return _stub;\n+        }\n+        catch (org.apache.axis.AxisFault e) {\n+            return null;\n+        }\n+    }\n+\n+    public void setJirasoapserviceV2EndpointAddress(java.lang.String address) {\n+        JirasoapserviceV2_address = address;\n+    }\n+\n+    /**\n+     * For the given interface, get the stub implementation.\n+     * If this service has no port for the given interface,\n+     * then ServiceException is thrown.\n+     */\n+    public java.rmi.Remote getPort(Class serviceEndpointInterface) throws javax.xml.rpc.ServiceException {\n+        try {\n+            if (sonia.scm.jira.soap.JiraSoapService.class.isAssignableFrom(serviceEndpointInterface)) {\n+                sonia.scm.jira.soap.JirasoapserviceV2SoapBindingStub _stub = new sonia.scm.jira.soap.JirasoapserviceV2SoapBindingStub(new java.net.URL(JirasoapserviceV2_address), this);\n+                _stub.setPortName(getJirasoapserviceV2WSDDServiceName());\n+                return _stub;\n+            }\n+        }\n+        catch (java.lang.Throwable t) {\n+            throw new javax.xml.rpc.ServiceException(t);\n+        }\n+        throw new javax.xml.rpc.ServiceException(\"There is no stub implementation for the interface:  \" + (serviceEndpointInterface == null ? \"null\" : serviceEndpointInterface.getName()));\n+    }\n+\n+    /**\n+     * For the given interface, get the stub implementation.\n+     * If this service has no port for the given interface,\n+     * then ServiceException is thrown.\n+     */\n+    public java.rmi.Remote getPort(javax.xml.namespace.QName portName, Class serviceEndpointInterface) throws javax.xml.rpc.ServiceException {\n+        if (portName == null) {\n+            return getPort(serviceEndpointInterface);\n+        }\n+        java.lang.String inputPortName = portName.getLocalPart();\n+        if (\"jirasoapservice-v2\".equals(inputPortName)) {\n+            return getJirasoapserviceV2();\n+        }\n+        else  {\n+            java.rmi.Remote _stub = getPort(serviceEndpointInterface);\n+            ((org.apache.axis.client.Stub) _stub).setPortName(portName);\n+            return _stub;\n+        }\n+    }\n+\n+    public javax.xml.namespace.QName getServiceName() {\n+        return new javax.xml.namespace.QName(\"https://jira.atlassian.com/rpc/soap/jirasoapservice-v2\", \"JiraSoapServiceService\");\n+    }\n+\n+    private java.util.HashSet ports = null;\n+\n+    public java.util.Iterator getPorts() {\n+        if (ports == null) {\n+            ports = new java.util.HashSet();\n+            ports.add(new javax.xml.namespace.QName(\"https://jira.atlassian.com/rpc/soap/jirasoapservice-v2\", \"jirasoapservice-v2\"));\n+        }\n+        return ports.iterator();\n+    }\n+\n+    /**\n+    * Set the endpoint address for the specified port name.\n+    */\n+    public void setEndpointAddress(java.lang.String portName, java.lang.String address) throws javax.xml.rpc.ServiceException {\n+\n+if (\"JirasoapserviceV2\".equals(portName)) {\n+            setJirasoapserviceV2EndpointAddress(address);\n+        }\n+        else\n+{ // Unknown Port Name\n+            throw new javax.xml.rpc.ServiceException(\" Cannot set Endpoint Address for Unknown Port\" + portName);\n+        }\n+    }\n+\n+    /**\n+    * Set the endpoint address for the specified port name.\n+    */\n+    public void setEndpointAddress(javax.xml.namespace.QName portName, java.lang.String address) throws javax.xml.rpc.ServiceException {\n+        setEndpointAddress(portName.getLocalPart(), address);\n+    }\n+\n+}"
  },
  {
    "sha": "07d9f857327a07109406539667f01420b650b1d1",
    "filename": "src/main/java/sonia/scm/jira/soap/JirasoapserviceV2SoapBindingStub.java",
    "status": "added",
    "additions": 8437,
    "deletions": 0,
    "changes": 8437,
    "blob_url": "https://github.com/scm-manager/scm-jira-plugin/blob/b4021019839e0082e46b13315a6a13dc3c8b89f0/src/main/java/sonia/scm/jira/soap/JirasoapserviceV2SoapBindingStub.java",
    "raw_url": "https://github.com/scm-manager/scm-jira-plugin/raw/b4021019839e0082e46b13315a6a13dc3c8b89f0/src/main/java/sonia/scm/jira/soap/JirasoapserviceV2SoapBindingStub.java",
    "contents_url": "https://api.github.com/repos/scm-manager/scm-jira-plugin/contents/src/main/java/sonia/scm/jira/soap/JirasoapserviceV2SoapBindingStub.java?ref=b4021019839e0082e46b13315a6a13dc3c8b89f0"
  },
  {
    "sha": "bfc9e0b910a1e77a0eb929a8274c9714b7bedf88",
    "filename": "src/main/java/sonia/scm/jira/soap/RemoteAttachment.java",
    "status": "added",
    "additions": 266,
    "deletions": 0,
    "changes": 266,
    "blob_url": "https://github.com/scm-manager/scm-jira-plugin/blob/b4021019839e0082e46b13315a6a13dc3c8b89f0/src/main/java/sonia/scm/jira/soap/RemoteAttachment.java",
    "raw_url": "https://github.com/scm-manager/scm-jira-plugin/raw/b4021019839e0082e46b13315a6a13dc3c8b89f0/src/main/java/sonia/scm/jira/soap/RemoteAttachment.java",
    "contents_url": "https://api.github.com/repos/scm-manager/scm-jira-plugin/contents/src/main/java/sonia/scm/jira/soap/RemoteAttachment.java?ref=b4021019839e0082e46b13315a6a13dc3c8b89f0",
    "patch": "@@ -0,0 +1,266 @@\n+/**\n+ * RemoteAttachment.java\n+ *\n+ * This file was auto-generated from WSDL\n+ * by the Apache Axis 1.4 Apr 22, 2006 (06:55:48 PDT) WSDL2Java emitter.\n+ */\n+\n+package sonia.scm.jira.soap;\n+\n+public class RemoteAttachment  extends sonia.scm.jira.soap.AbstractRemoteEntity  implements java.io.Serializable {\n+    private java.lang.String author;\n+\n+    private java.util.Calendar created;\n+\n+    private java.lang.String filename;\n+\n+    private java.lang.Long filesize;\n+\n+    private java.lang.String mimetype;\n+\n+    public RemoteAttachment() {\n+    }\n+\n+    public RemoteAttachment(\n+           java.lang.String id,\n+           java.lang.String author,\n+           java.util.Calendar created,\n+           java.lang.String filename,\n+           java.lang.Long filesize,\n+           java.lang.String mimetype) {\n+        super(\n+            id);\n+        this.author = author;\n+        this.created = created;\n+        this.filename = filename;\n+        this.filesize = filesize;\n+        this.mimetype = mimetype;\n+    }\n+\n+\n+    /**\n+     * Gets the author value for this RemoteAttachment.\n+     *\n+     * @return author\n+     */\n+    public java.lang.String getAuthor() {\n+        return author;\n+    }\n+\n+\n+    /**\n+     * Sets the author value for this RemoteAttachment.\n+     *\n+     * @param author\n+     */\n+    public void setAuthor(java.lang.String author) {\n+        this.author = author;\n+    }\n+\n+\n+    /**\n+     * Gets the created value for this RemoteAttachment.\n+     *\n+     * @return created\n+     */\n+    public java.util.Calendar getCreated() {\n+        return created;\n+    }\n+\n+\n+    /**\n+     * Sets the created value for this RemoteAttachment.\n+     *\n+     * @param created\n+     */\n+    public void setCreated(java.util.Calendar created) {\n+        this.created = created;\n+    }\n+\n+\n+    /**\n+     * Gets the filename value for this RemoteAttachment.\n+     *\n+     * @return filename\n+     */\n+    public java.lang.String getFilename() {\n+        return filename;\n+    }\n+\n+\n+    /**\n+     * Sets the filename value for this RemoteAttachment.\n+     *\n+     * @param filename\n+     */\n+    public void setFilename(java.lang.String filename) {\n+        this.filename = filename;\n+    }\n+\n+\n+    /**\n+     * Gets the filesize value for this RemoteAttachment.\n+     *\n+     * @return filesize\n+     */\n+    public java.lang.Long getFilesize() {\n+        return filesize;\n+    }\n+\n+\n+    /**\n+     * Sets the filesize value for this RemoteAttachment.\n+     *\n+     * @param filesize\n+     */\n+    public void setFilesize(java.lang.Long filesize) {\n+        this.filesize = filesize;\n+    }\n+\n+\n+    /**\n+     * Gets the mimetype value for this RemoteAttachment.\n+     *\n+     * @return mimetype\n+     */\n+    public java.lang.String getMimetype() {\n+        return mimetype;\n+    }\n+\n+\n+    /**\n+     * Sets the mimetype value for this RemoteAttachment.\n+     *\n+     * @param mimetype\n+     */\n+    public void setMimetype(java.lang.String mimetype) {\n+        this.mimetype = mimetype;\n+    }\n+\n+    private java.lang.Object __equalsCalc = null;\n+    public synchronized boolean equals(java.lang.Object obj) {\n+        if (!(obj instanceof RemoteAttachment)) return false;\n+        RemoteAttachment other = (RemoteAttachment) obj;\n+        if (obj == null) return false;\n+        if (this == obj) return true;\n+        if (__equalsCalc != null) {\n+            return (__equalsCalc == obj);\n+        }\n+        __equalsCalc = obj;\n+        boolean _equals;\n+        _equals = super.equals(obj) &&\n+            ((this.author==null && other.getAuthor()==null) ||\n+             (this.author!=null &&\n+              this.author.equals(other.getAuthor()))) &&\n+            ((this.created==null && other.getCreated()==null) ||\n+             (this.created!=null &&\n+              this.created.equals(other.getCreated()))) &&\n+            ((this.filename==null && other.getFilename()==null) ||\n+             (this.filename!=null &&\n+              this.filename.equals(other.getFilename()))) &&\n+            ((this.filesize==null && other.getFilesize()==null) ||\n+             (this.filesize!=null &&\n+              this.filesize.equals(other.getFilesize()))) &&\n+            ((this.mimetype==null && other.getMimetype()==null) ||\n+             (this.mimetype!=null &&\n+              this.mimetype.equals(other.getMimetype())));\n+        __equalsCalc = null;\n+        return _equals;\n+    }\n+\n+    private boolean __hashCodeCalc = false;\n+    public synchronized int hashCode() {\n+        if (__hashCodeCalc) {\n+            return 0;\n+        }\n+        __hashCodeCalc = true;\n+        int _hashCode = super.hashCode();\n+        if (getAuthor() != null) {\n+            _hashCode += getAuthor().hashCode();\n+        }\n+        if (getCreated() != null) {\n+            _hashCode += getCreated().hashCode();\n+        }\n+        if (getFilename() != null) {\n+            _hashCode += getFilename().hashCode();\n+        }\n+        if (getFilesize() != null) {\n+            _hashCode += getFilesize().hashCode();\n+        }\n+        if (getMimetype() != null) {\n+            _hashCode += getMimetype().hashCode();\n+        }\n+        __hashCodeCalc = false;\n+        return _hashCode;\n+    }\n+\n+    // Type metadata\n+    private static org.apache.axis.description.TypeDesc typeDesc =\n+        new org.apache.axis.description.TypeDesc(RemoteAttachment.class, true);\n+\n+    static {\n+        typeDesc.setXmlType(new javax.xml.namespace.QName(\"http://beans.soap.rpc.jira.atlassian.com\", \"RemoteAttachment\"));\n+        org.apache.axis.description.ElementDesc elemField = new org.apache.axis.description.ElementDesc();\n+        elemField.setFieldName(\"author\");\n+        elemField.setXmlName(new javax.xml.namespace.QName(\"\", \"author\"));\n+        elemField.setXmlType(new javax.xml.namespace.QName(\"http://www.w3.org/2001/XMLSchema\", \"string\"));\n+        elemField.setNillable(true);\n+        typeDesc.addFieldDesc(elemField);\n+        elemField = new org.apache.axis.description.ElementDesc();\n+        elemField.setFieldName(\"created\");\n+        elemField.setXmlName(new javax.xml.namespace.QName(\"\", \"created\"));\n+        elemField.setXmlType(new javax.xml.namespace.QName(\"http://www.w3.org/2001/XMLSchema\", \"dateTime\"));\n+        elemField.setNillable(true);\n+        typeDesc.addFieldDesc(elemField);\n+        elemField = new org.apache.axis.description.ElementDesc();\n+        elemField.setFieldName(\"filename\");\n+        elemField.setXmlName(new javax.xml.namespace.QName(\"\", \"filename\"));\n+        elemField.setXmlType(new javax.xml.namespace.QName(\"http://www.w3.org/2001/XMLSchema\", \"string\"));\n+        elemField.setNillable(true);\n+        typeDesc.addFieldDesc(elemField);\n+        elemField = new org.apache.axis.description.ElementDesc();\n+        elemField.setFieldName(\"filesize\");\n+        elemField.setXmlName(new javax.xml.namespace.QName(\"\", \"filesize\"));\n+        elemField.setXmlType(new javax.xml.namespace.QName(\"http://www.w3.org/2001/XMLSchema\", \"long\"));\n+        elemField.setNillable(true);\n+        typeDesc.addFieldDesc(elemField);\n+        elemField = new org.apache.axis.description.ElementDesc();\n+        elemField.setFieldName(\"mimetype\");\n+        elemField.setXmlName(new javax.xml.namespace.QName(\"\", \"mimetype\"));\n+        elemField.setXmlType(new javax.xml.namespace.QName(\"http://www.w3.org/2001/XMLSchema\", \"string\"));\n+        elemField.setNillable(true);\n+        typeDesc.addFieldDesc(elemField);\n+    }\n+\n+    /**\n+     * Return type metadata object\n+     */\n+    public static org.apache.axis.description.TypeDesc getTypeDesc() {\n+        return typeDesc;\n+    }\n+\n+    /**\n+     * Get Custom Serializer\n+     */\n+    public static org.apache.axis.encoding.Serializer getSerializer(\n+           java.lang.String mechType,\n+           java.lang.Class _javaType,\n+           javax.xml.namespace.QName _xmlType) {\n+        return\n+          new  org.apache.axis.encoding.ser.BeanSerializer(\n+            _javaType, _xmlType, typeDesc);\n+    }\n+\n+    /**\n+     * Get Custom Deserializer\n+     */\n+    public static org.apache.axis.encoding.Deserializer getDeserializer(\n+           java.lang.String mechType,\n+           java.lang.Class _javaType,\n+           javax.xml.namespace.QName _xmlType) {\n+        return\n+          new  org.apache.axis.encoding.ser.BeanDeserializer(\n+            _javaType, _xmlType, typeDesc);\n+    }\n+\n+}"
  },
  {
    "sha": "8146e5485a177f5cfceab584d086d8920d6f5c70",
    "filename": "src/main/java/sonia/scm/jira/soap/RemoteAuthenticationException.java",
    "status": "added",
    "additions": 87,
    "deletions": 0,
    "changes": 87,
    "blob_url": "https://github.com/scm-manager/scm-jira-plugin/blob/b4021019839e0082e46b13315a6a13dc3c8b89f0/src/main/java/sonia/scm/jira/soap/RemoteAuthenticationException.java",
    "raw_url": "https://github.com/scm-manager/scm-jira-plugin/raw/b4021019839e0082e46b13315a6a13dc3c8b89f0/src/main/java/sonia/scm/jira/soap/RemoteAuthenticationException.java",
    "contents_url": "https://api.github.com/repos/scm-manager/scm-jira-plugin/contents/src/main/java/sonia/scm/jira/soap/RemoteAuthenticationException.java?ref=b4021019839e0082e46b13315a6a13dc3c8b89f0",
    "patch": "@@ -0,0 +1,87 @@\n+/**\n+ * RemoteAuthenticationException.java\n+ *\n+ * This file was auto-generated from WSDL\n+ * by the Apache Axis 1.4 Apr 22, 2006 (06:55:48 PDT) WSDL2Java emitter.\n+ */\n+\n+package sonia.scm.jira.soap;\n+\n+public class RemoteAuthenticationException  extends sonia.scm.jira.soap.RemoteException  implements java.io.Serializable {\n+    public RemoteAuthenticationException() {\n+    }\n+\n+    private java.lang.Object __equalsCalc = null;\n+    public synchronized boolean equals(java.lang.Object obj) {\n+        if (!(obj instanceof RemoteAuthenticationException)) return false;\n+        RemoteAuthenticationException other = (RemoteAuthenticationException) obj;\n+        if (obj == null) return false;\n+        if (this == obj) return true;\n+        if (__equalsCalc != null) {\n+            return (__equalsCalc == obj);\n+        }\n+        __equalsCalc = obj;\n+        boolean _equals;\n+        _equals = super.equals(obj);\n+        __equalsCalc = null;\n+        return _equals;\n+    }\n+\n+    private boolean __hashCodeCalc = false;\n+    public synchronized int hashCode() {\n+        if (__hashCodeCalc) {\n+            return 0;\n+        }\n+        __hashCodeCalc = true;\n+        int _hashCode = super.hashCode();\n+        __hashCodeCalc = false;\n+        return _hashCode;\n+    }\n+\n+    // Type metadata\n+    private static org.apache.axis.description.TypeDesc typeDesc =\n+        new org.apache.axis.description.TypeDesc(RemoteAuthenticationException.class, true);\n+\n+    static {\n+        typeDesc.setXmlType(new javax.xml.namespace.QName(\"http://exception.rpc.jira.atlassian.com\", \"RemoteAuthenticationException\"));\n+    }\n+\n+    /**\n+     * Return type metadata object\n+     */\n+    public static org.apache.axis.description.TypeDesc getTypeDesc() {\n+        return typeDesc;\n+    }\n+\n+    /**\n+     * Get Custom Serializer\n+     */\n+    public static org.apache.axis.encoding.Serializer getSerializer(\n+           java.lang.String mechType,\n+           java.lang.Class _javaType,\n+           javax.xml.namespace.QName _xmlType) {\n+        return\n+          new  org.apache.axis.encoding.ser.BeanSerializer(\n+            _javaType, _xmlType, typeDesc);\n+    }\n+\n+    /**\n+     * Get Custom Deserializer\n+     */\n+    public static org.apache.axis.encoding.Deserializer getDeserializer(\n+           java.lang.String mechType,\n+           java.lang.Class _javaType,\n+           javax.xml.namespace.QName _xmlType) {\n+        return\n+          new  org.apache.axis.encoding.ser.BeanDeserializer(\n+            _javaType, _xmlType, typeDesc);\n+    }\n+\n+\n+    /**\n+     * Writes the exception data to the faultDetails\n+     */\n+    public void writeDetails(javax.xml.namespace.QName qname, org.apache.axis.encoding.SerializationContext context) throws java.io.IOException {\n+        context.serialize(qname, null, this);\n+    }\n+}"
  },
  {
    "sha": "319041489ca91d1130c5f28f448b83ff43a035de",
    "filename": "src/main/java/sonia/scm/jira/soap/RemoteAvatar.java",
    "status": "added",
    "additions": 291,
    "deletions": 0,
    "changes": 291,
    "blob_url": "https://github.com/scm-manager/scm-jira-plugin/blob/b4021019839e0082e46b13315a6a13dc3c8b89f0/src/main/java/sonia/scm/jira/soap/RemoteAvatar.java",
    "raw_url": "https://github.com/scm-manager/scm-jira-plugin/raw/b4021019839e0082e46b13315a6a13dc3c8b89f0/src/main/java/sonia/scm/jira/soap/RemoteAvatar.java",
    "contents_url": "https://api.github.com/repos/scm-manager/scm-jira-plugin/contents/src/main/java/sonia/scm/jira/soap/RemoteAvatar.java?ref=b4021019839e0082e46b13315a6a13dc3c8b89f0",
    "patch": "@@ -0,0 +1,291 @@\n+/**\n+ * RemoteAvatar.java\n+ *\n+ * This file was auto-generated from WSDL\n+ * by the Apache Axis 1.4 Apr 22, 2006 (06:55:48 PDT) WSDL2Java emitter.\n+ */\n+\n+package sonia.scm.jira.soap;\n+\n+public class RemoteAvatar  implements java.io.Serializable {\n+    private java.lang.String base64Data;\n+\n+    private java.lang.String contentType;\n+\n+    private long id;\n+\n+    private java.lang.String owner;\n+\n+    private boolean system;\n+\n+    private java.lang.String type;\n+\n+    public RemoteAvatar() {\n+    }\n+\n+    public RemoteAvatar(\n+           java.lang.String base64Data,\n+           java.lang.String contentType,\n+           long id,\n+           java.lang.String owner,\n+           boolean system,\n+           java.lang.String type) {\n+           this.base64Data = base64Data;\n+           this.contentType = contentType;\n+           this.id = id;\n+           this.owner = owner;\n+           this.system = system;\n+           this.type = type;\n+    }\n+\n+\n+    /**\n+     * Gets the base64Data value for this RemoteAvatar.\n+     *\n+     * @return base64Data\n+     */\n+    public java.lang.String getBase64Data() {\n+        return base64Data;\n+    }\n+\n+\n+    /**\n+     * Sets the base64Data value for this RemoteAvatar.\n+     *\n+     * @param base64Data\n+     */\n+    public void setBase64Data(java.lang.String base64Data) {\n+        this.base64Data = base64Data;\n+    }\n+\n+\n+    /**\n+     * Gets the contentType value for this RemoteAvatar.\n+     *\n+     * @return contentType\n+     */\n+    public java.lang.String getContentType() {\n+        return contentType;\n+    }\n+\n+\n+    /**\n+     * Sets the contentType value for this RemoteAvatar.\n+     *\n+     * @param contentType\n+     */\n+    public void setContentType(java.lang.String contentType) {\n+        this.contentType = contentType;\n+    }\n+\n+\n+    /**\n+     * Gets the id value for this RemoteAvatar.\n+     *\n+     * @return id\n+     */\n+    public long getId() {\n+        return id;\n+    }\n+\n+\n+    /**\n+     * Sets the id value for this RemoteAvatar.\n+     *\n+     * @param id\n+     */\n+    public void setId(long id) {\n+        this.id = id;\n+    }\n+\n+\n+    /**\n+     * Gets the owner value for this RemoteAvatar.\n+     *\n+     * @return owner\n+     */\n+    public java.lang.String getOwner() {\n+        return owner;\n+    }\n+\n+\n+    /**\n+     * Sets the owner value for this RemoteAvatar.\n+     *\n+     * @param owner\n+     */\n+    public void setOwner(java.lang.String owner) {\n+        this.owner = owner;\n+    }\n+\n+\n+    /**\n+     * Gets the system value for this RemoteAvatar.\n+     *\n+     * @return system\n+     */\n+    public boolean isSystem() {\n+        return system;\n+    }\n+\n+\n+    /**\n+     * Sets the system value for this RemoteAvatar.\n+     *\n+     * @param system\n+     */\n+    public void setSystem(boolean system) {\n+        this.system = system;\n+    }\n+\n+\n+    /**\n+     * Gets the type value for this RemoteAvatar.\n+     *\n+     * @return type\n+     */\n+    public java.lang.String getType() {\n+        return type;\n+    }\n+\n+\n+    /**\n+     * Sets the type value for this RemoteAvatar.\n+     *\n+     * @param type\n+     */\n+    public void setType(java.lang.String type) {\n+        this.type = type;\n+    }\n+\n+    private java.lang.Object __equalsCalc = null;\n+    public synchronized boolean equals(java.lang.Object obj) {\n+        if (!(obj instanceof RemoteAvatar)) return false;\n+        RemoteAvatar other = (RemoteAvatar) obj;\n+        if (obj == null) return false;\n+        if (this == obj) return true;\n+        if (__equalsCalc != null) {\n+            return (__equalsCalc == obj);\n+        }\n+        __equalsCalc = obj;\n+        boolean _equals;\n+        _equals = true &&\n+            ((this.base64Data==null && other.getBase64Data()==null) ||\n+             (this.base64Data!=null &&\n+              this.base64Data.equals(other.getBase64Data()))) &&\n+            ((this.contentType==null && other.getContentType()==null) ||\n+             (this.contentType!=null &&\n+              this.contentType.equals(other.getContentType()))) &&\n+            this.id == other.getId() &&\n+            ((this.owner==null && other.getOwner()==null) ||\n+             (this.owner!=null &&\n+              this.owner.equals(other.getOwner()))) &&\n+            this.system == other.isSystem() &&\n+            ((this.type==null && other.getType()==null) ||\n+             (this.type!=null &&\n+              this.type.equals(other.getType())));\n+        __equalsCalc = null;\n+        return _equals;\n+    }\n+\n+    private boolean __hashCodeCalc = false;\n+    public synchronized int hashCode() {\n+        if (__hashCodeCalc) {\n+            return 0;\n+        }\n+        __hashCodeCalc = true;\n+        int _hashCode = 1;\n+        if (getBase64Data() != null) {\n+            _hashCode += getBase64Data().hashCode();\n+        }\n+        if (getContentType() != null) {\n+            _hashCode += getContentType().hashCode();\n+        }\n+        _hashCode += new Long(getId()).hashCode();\n+        if (getOwner() != null) {\n+            _hashCode += getOwner().hashCode();\n+        }\n+        _hashCode += (isSystem() ? Boolean.TRUE : Boolean.FALSE).hashCode();\n+        if (getType() != null) {\n+            _hashCode += getType().hashCode();\n+        }\n+        __hashCodeCalc = false;\n+        return _hashCode;\n+    }\n+\n+    // Type metadata\n+    private static org.apache.axis.description.TypeDesc typeDesc =\n+        new org.apache.axis.description.TypeDesc(RemoteAvatar.class, true);\n+\n+    static {\n+        typeDesc.setXmlType(new javax.xml.namespace.QName(\"http://beans.soap.rpc.jira.atlassian.com\", \"RemoteAvatar\"));\n+        org.apache.axis.description.ElementDesc elemField = new org.apache.axis.description.ElementDesc();\n+        elemField.setFieldName(\"base64Data\");\n+        elemField.setXmlName(new javax.xml.namespace.QName(\"\", \"base64Data\"));\n+        elemField.setXmlType(new javax.xml.namespace.QName(\"http://www.w3.org/2001/XMLSchema\", \"string\"));\n+        elemField.setNillable(true);\n+        typeDesc.addFieldDesc(elemField);\n+        elemField = new org.apache.axis.description.ElementDesc();\n+        elemField.setFieldName(\"contentType\");\n+        elemField.setXmlName(new javax.xml.namespace.QName(\"\", \"contentType\"));\n+        elemField.setXmlType(new javax.xml.namespace.QName(\"http://www.w3.org/2001/XMLSchema\", \"string\"));\n+        elemField.setNillable(true);\n+        typeDesc.addFieldDesc(elemField);\n+        elemField = new org.apache.axis.description.ElementDesc();\n+        elemField.setFieldName(\"id\");\n+        elemField.setXmlName(new javax.xml.namespace.QName(\"\", \"id\"));\n+        elemField.setXmlType(new javax.xml.namespace.QName(\"http://www.w3.org/2001/XMLSchema\", \"long\"));\n+        elemField.setNillable(false);\n+        typeDesc.addFieldDesc(elemField);\n+        elemField = new org.apache.axis.description.ElementDesc();\n+        elemField.setFieldName(\"owner\");\n+        elemField.setXmlName(new javax.xml.namespace.QName(\"\", \"owner\"));\n+        elemField.setXmlType(new javax.xml.namespace.QName(\"http://www.w3.org/2001/XMLSchema\", \"string\"));\n+        elemField.setNillable(true);\n+        typeDesc.addFieldDesc(elemField);\n+        elemField = new org.apache.axis.description.ElementDesc();\n+        elemField.setFieldName(\"system\");\n+        elemField.setXmlName(new javax.xml.namespace.QName(\"\", \"system\"));\n+        elemField.setXmlType(new javax.xml.namespace.QName(\"http://www.w3.org/2001/XMLSchema\", \"boolean\"));\n+        elemField.setNillable(false);\n+        typeDesc.addFieldDesc(elemField);\n+        elemField = new org.apache.axis.description.ElementDesc();\n+        elemField.setFieldName(\"type\");\n+        elemField.setXmlName(new javax.xml.namespace.QName(\"\", \"type\"));\n+        elemField.setXmlType(new javax.xml.namespace.QName(\"http://www.w3.org/2001/XMLSchema\", \"string\"));\n+        elemField.setNillable(true);\n+        typeDesc.addFieldDesc(elemField);\n+    }\n+\n+    /**\n+     * Return type metadata object\n+     */\n+    public static org.apache.axis.description.TypeDesc getTypeDesc() {\n+        return typeDesc;\n+    }\n+\n+    /**\n+     * Get Custom Serializer\n+     */\n+    public static org.apache.axis.encoding.Serializer getSerializer(\n+           java.lang.String mechType,\n+           java.lang.Class _javaType,\n+           javax.xml.namespace.QName _xmlType) {\n+        return\n+          new  org.apache.axis.encoding.ser.BeanSerializer(\n+            _javaType, _xmlType, typeDesc);\n+    }\n+\n+    /**\n+     * Get Custom Deserializer\n+     */\n+    public static org.apache.axis.encoding.Deserializer getDeserializer(\n+           java.lang.String mechType,\n+           java.lang.Class _javaType,\n+           javax.xml.namespace.QName _xmlType) {\n+        return\n+          new  org.apache.axis.encoding.ser.BeanDeserializer(\n+            _javaType, _xmlType, typeDesc);\n+    }\n+\n+}"
  },
  {
    "sha": "07ec9aaed387d19f292a88c45bf23a37ce9ebce4",
    "filename": "src/main/java/sonia/scm/jira/soap/RemoteComment.java",
    "status": "added",
    "additions": 371,
    "deletions": 0,
    "changes": 371,
    "blob_url": "https://github.com/scm-manager/scm-jira-plugin/blob/b4021019839e0082e46b13315a6a13dc3c8b89f0/src/main/java/sonia/scm/jira/soap/RemoteComment.java",
    "raw_url": "https://github.com/scm-manager/scm-jira-plugin/raw/b4021019839e0082e46b13315a6a13dc3c8b89f0/src/main/java/sonia/scm/jira/soap/RemoteComment.java",
    "contents_url": "https://api.github.com/repos/scm-manager/scm-jira-plugin/contents/src/main/java/sonia/scm/jira/soap/RemoteComment.java?ref=b4021019839e0082e46b13315a6a13dc3c8b89f0",
    "patch": "@@ -0,0 +1,371 @@\n+/**\n+ * RemoteComment.java\n+ *\n+ * This file was auto-generated from WSDL\n+ * by the Apache Axis 1.4 Apr 22, 2006 (06:55:48 PDT) WSDL2Java emitter.\n+ */\n+\n+package sonia.scm.jira.soap;\n+\n+public class RemoteComment  implements java.io.Serializable {\n+    private java.lang.String author;\n+\n+    private java.lang.String body;\n+\n+    private java.util.Calendar created;\n+\n+    private java.lang.String groupLevel;\n+\n+    private java.lang.String id;\n+\n+    private java.lang.String roleLevel;\n+\n+    private java.lang.String updateAuthor;\n+\n+    private java.util.Calendar updated;\n+\n+    public RemoteComment() {\n+    }\n+\n+    public RemoteComment(\n+           java.lang.String author,\n+           java.lang.String body,\n+           java.util.Calendar created,\n+           java.lang.String groupLevel,\n+           java.lang.String id,\n+           java.lang.String roleLevel,\n+           java.lang.String updateAuthor,\n+           java.util.Calendar updated) {\n+           this.author = author;\n+           this.body = body;\n+           this.created = created;\n+           this.groupLevel = groupLevel;\n+           this.id = id;\n+           this.roleLevel = roleLevel;\n+           this.updateAuthor = updateAuthor;\n+           this.updated = updated;\n+    }\n+\n+\n+    /**\n+     * Gets the author value for this RemoteComment.\n+     *\n+     * @return author\n+     */\n+    public java.lang.String getAuthor() {\n+        return author;\n+    }\n+\n+\n+    /**\n+     * Sets the author value for this RemoteComment.\n+     *\n+     * @param author\n+     */\n+    public void setAuthor(java.lang.String author) {\n+        this.author = author;\n+    }\n+\n+\n+    /**\n+     * Gets the body value for this RemoteComment.\n+     *\n+     * @return body\n+     */\n+    public java.lang.String getBody() {\n+        return body;\n+    }\n+\n+\n+    /**\n+     * Sets the body value for this RemoteComment.\n+     *\n+     * @param body\n+     */\n+    public void setBody(java.lang.String body) {\n+        this.body = body;\n+    }\n+\n+\n+    /**\n+     * Gets the created value for this RemoteComment.\n+     *\n+     * @return created\n+     */\n+    public java.util.Calendar getCreated() {\n+        return created;\n+    }\n+\n+\n+    /**\n+     * Sets the created value for this RemoteComment.\n+     *\n+     * @param created\n+     */\n+    public void setCreated(java.util.Calendar created) {\n+        this.created = created;\n+    }\n+\n+\n+    /**\n+     * Gets the groupLevel value for this RemoteComment.\n+     *\n+     * @return groupLevel\n+     */\n+    public java.lang.String getGroupLevel() {\n+        return groupLevel;\n+    }\n+\n+\n+    /**\n+     * Sets the groupLevel value for this RemoteComment.\n+     *\n+     * @param groupLevel\n+     */\n+    public void setGroupLevel(java.lang.String groupLevel) {\n+        this.groupLevel = groupLevel;\n+    }\n+\n+\n+    /**\n+     * Gets the id value for this RemoteComment.\n+     *\n+     * @return id\n+     */\n+    public java.lang.String getId() {\n+        return id;\n+    }\n+\n+\n+    /**\n+     * Sets the id value for this RemoteComment.\n+     *\n+     * @param id\n+     */\n+    public void setId(java.lang.String id) {\n+        this.id = id;\n+    }\n+\n+\n+    /**\n+     * Gets the roleLevel value for this RemoteComment.\n+     *\n+     * @return roleLevel\n+     */\n+    public java.lang.String getRoleLevel() {\n+        return roleLevel;\n+    }\n+\n+\n+    /**\n+     * Sets the roleLevel value for this RemoteComment.\n+     *\n+     * @param roleLevel\n+     */\n+    public void setRoleLevel(java.lang.String roleLevel) {\n+        this.roleLevel = roleLevel;\n+    }\n+\n+\n+    /**\n+     * Gets the updateAuthor value for this RemoteComment.\n+     *\n+     * @return updateAuthor\n+     */\n+    public java.lang.String getUpdateAuthor() {\n+        return updateAuthor;\n+    }\n+\n+\n+    /**\n+     * Sets the updateAuthor value for this RemoteComment.\n+     *\n+     * @param updateAuthor\n+     */\n+    public void setUpdateAuthor(java.lang.String updateAuthor) {\n+        this.updateAuthor = updateAuthor;\n+    }\n+\n+\n+    /**\n+     * Gets the updated value for this RemoteComment.\n+     *\n+     * @return updated\n+     */\n+    public java.util.Calendar getUpdated() {\n+        return updated;\n+    }\n+\n+\n+    /**\n+     * Sets the updated value for this RemoteComment.\n+     *\n+     * @param updated\n+     */\n+    public void setUpdated(java.util.Calendar updated) {\n+        this.updated = updated;\n+    }\n+\n+    private java.lang.Object __equalsCalc = null;\n+    public synchronized boolean equals(java.lang.Object obj) {\n+        if (!(obj instanceof RemoteComment)) return false;\n+        RemoteComment other = (RemoteComment) obj;\n+        if (obj == null) return false;\n+        if (this == obj) return true;\n+        if (__equalsCalc != null) {\n+            return (__equalsCalc == obj);\n+        }\n+        __equalsCalc = obj;\n+        boolean _equals;\n+        _equals = true &&\n+            ((this.author==null && other.getAuthor()==null) ||\n+             (this.author!=null &&\n+              this.author.equals(other.getAuthor()))) &&\n+            ((this.body==null && other.getBody()==null) ||\n+             (this.body!=null &&\n+              this.body.equals(other.getBody()))) &&\n+            ((this.created==null && other.getCreated()==null) ||\n+             (this.created!=null &&\n+              this.created.equals(other.getCreated()))) &&\n+            ((this.groupLevel==null && other.getGroupLevel()==null) ||\n+             (this.groupLevel!=null &&\n+              this.groupLevel.equals(other.getGroupLevel()))) &&\n+            ((this.id==null && other.getId()==null) ||\n+             (this.id!=null &&\n+              this.id.equals(other.getId()))) &&\n+            ((this.roleLevel==null && other.getRoleLevel()==null) ||\n+             (this.roleLevel!=null &&\n+              this.roleLevel.equals(other.getRoleLevel()))) &&\n+            ((this.updateAuthor==null && other.getUpdateAuthor()==null) ||\n+             (this.updateAuthor!=null &&\n+              this.updateAuthor.equals(other.getUpdateAuthor()))) &&\n+            ((this.updated==null && other.getUpdated()==null) ||\n+             (this.updated!=null &&\n+              this.updated.equals(other.getUpdated())));\n+        __equalsCalc = null;\n+        return _equals;\n+    }\n+\n+    private boolean __hashCodeCalc = false;\n+    public synchronized int hashCode() {\n+        if (__hashCodeCalc) {\n+            return 0;\n+        }\n+        __hashCodeCalc = true;\n+        int _hashCode = 1;\n+        if (getAuthor() != null) {\n+            _hashCode += getAuthor().hashCode();\n+        }\n+        if (getBody() != null) {\n+            _hashCode += getBody().hashCode();\n+        }\n+        if (getCreated() != null) {\n+            _hashCode += getCreated().hashCode();\n+        }\n+        if (getGroupLevel() != null) {\n+            _hashCode += getGroupLevel().hashCode();\n+        }\n+        if (getId() != null) {\n+            _hashCode += getId().hashCode();\n+        }\n+        if (getRoleLevel() != null) {\n+            _hashCode += getRoleLevel().hashCode();\n+        }\n+        if (getUpdateAuthor() != null) {\n+            _hashCode += getUpdateAuthor().hashCode();\n+        }\n+        if (getUpdated() != null) {\n+            _hashCode += getUpdated().hashCode();\n+        }\n+        __hashCodeCalc = false;\n+        return _hashCode;\n+    }\n+\n+    // Type metadata\n+    private static org.apache.axis.description.TypeDesc typeDesc =\n+        new org.apache.axis.description.TypeDesc(RemoteComment.class, true);\n+\n+    static {\n+        typeDesc.setXmlType(new javax.xml.namespace.QName(\"http://beans.soap.rpc.jira.atlassian.com\", \"RemoteComment\"));\n+        org.apache.axis.description.ElementDesc elemField = new org.apache.axis.description.ElementDesc();\n+        elemField.setFieldName(\"author\");\n+        elemField.setXmlName(new javax.xml.namespace.QName(\"\", \"author\"));\n+        elemField.setXmlType(new javax.xml.namespace.QName(\"http://www.w3.org/2001/XMLSchema\", \"string\"));\n+        elemField.setNillable(true);\n+        typeDesc.addFieldDesc(elemField);\n+        elemField = new org.apache.axis.description.ElementDesc();\n+        elemField.setFieldName(\"body\");\n+        elemField.setXmlName(new javax.xml.namespace.QName(\"\", \"body\"));\n+        elemField.setXmlType(new javax.xml.namespace.QName(\"http://www.w3.org/2001/XMLSchema\", \"string\"));\n+        elemField.setNillable(true);\n+        typeDesc.addFieldDesc(elemField);\n+        elemField = new org.apache.axis.description.ElementDesc();\n+        elemField.setFieldName(\"created\");\n+        elemField.setXmlName(new javax.xml.namespace.QName(\"\", \"created\"));\n+        elemField.setXmlType(new javax.xml.namespace.QName(\"http://www.w3.org/2001/XMLSchema\", \"dateTime\"));\n+        elemField.setNillable(true);\n+        typeDesc.addFieldDesc(elemField);\n+        elemField = new org.apache.axis.description.ElementDesc();\n+        elemField.setFieldName(\"groupLevel\");\n+        elemField.setXmlName(new javax.xml.namespace.QName(\"\", \"groupLevel\"));\n+        elemField.setXmlType(new javax.xml.namespace.QName(\"http://www.w3.org/2001/XMLSchema\", \"string\"));\n+        elemField.setNillable(true);\n+        typeDesc.addFieldDesc(elemField);\n+        elemField = new org.apache.axis.description.ElementDesc();\n+        elemField.setFieldName(\"id\");\n+        elemField.setXmlName(new javax.xml.namespace.QName(\"\", \"id\"));\n+        elemField.setXmlType(new javax.xml.namespace.QName(\"http://www.w3.org/2001/XMLSchema\", \"string\"));\n+        elemField.setNillable(true);\n+        typeDesc.addFieldDesc(elemField);\n+        elemField = new org.apache.axis.description.ElementDesc();\n+        elemField.setFieldName(\"roleLevel\");\n+        elemField.setXmlName(new javax.xml.namespace.QName(\"\", \"roleLevel\"));\n+        elemField.setXmlType(new javax.xml.namespace.QName(\"http://www.w3.org/2001/XMLSchema\", \"string\"));\n+        elemField.setNillable(true);\n+        typeDesc.addFieldDesc(elemField);\n+        elemField = new org.apache.axis.description.ElementDesc();\n+        elemField.setFieldName(\"updateAuthor\");\n+        elemField.setXmlName(new javax.xml.namespace.QName(\"\", \"updateAuthor\"));\n+        elemField.setXmlType(new javax.xml.namespace.QName(\"http://www.w3.org/2001/XMLSchema\", \"string\"));\n+        elemField.setNillable(true);\n+        typeDesc.addFieldDesc(elemField);\n+        elemField = new org.apache.axis.description.ElementDesc();\n+        elemField.setFieldName(\"updated\");\n+        elemField.setXmlName(new javax.xml.namespace.QName(\"\", \"updated\"));\n+        elemField.setXmlType(new javax.xml.namespace.QName(\"http://www.w3.org/2001/XMLSchema\", \"dateTime\"));\n+        elemField.setNillable(true);\n+        typeDesc.addFieldDesc(elemField);\n+    }\n+\n+    /**\n+     * Return type metadata object\n+     */\n+    public static org.apache.axis.description.TypeDesc getTypeDesc() {\n+        return typeDesc;\n+    }\n+\n+    /**\n+     * Get Custom Serializer\n+     */\n+    public static org.apache.axis.encoding.Serializer getSerializer(\n+           java.lang.String mechType,\n+           java.lang.Class _javaType,\n+           javax.xml.namespace.QName _xmlType) {\n+        return\n+          new  org.apache.axis.encoding.ser.BeanSerializer(\n+            _javaType, _xmlType, typeDesc);\n+    }\n+\n+    /**\n+     * Get Custom Deserializer\n+     */\n+    public static org.apache.axis.encoding.Deserializer getDeserializer(\n+           java.lang.String mechType,\n+           java.lang.Class _javaType,\n+           javax.xml.namespace.QName _xmlType) {\n+        return\n+          new  org.apache.axis.encoding.ser.BeanDeserializer(\n+            _javaType, _xmlType, typeDesc);\n+    }\n+\n+}"
  },
  {
    "sha": "16a7af73619fdf102840d3a60582d0e30f736a85",
    "filename": "src/main/java/sonia/scm/jira/soap/RemoteComponent.java",
    "status": "added",
    "additions": 88,
    "deletions": 0,
    "changes": 88,
    "blob_url": "https://github.com/scm-manager/scm-jira-plugin/blob/b4021019839e0082e46b13315a6a13dc3c8b89f0/src/main/java/sonia/scm/jira/soap/RemoteComponent.java",
    "raw_url": "https://github.com/scm-manager/scm-jira-plugin/raw/b4021019839e0082e46b13315a6a13dc3c8b89f0/src/main/java/sonia/scm/jira/soap/RemoteComponent.java",
    "contents_url": "https://api.github.com/repos/scm-manager/scm-jira-plugin/contents/src/main/java/sonia/scm/jira/soap/RemoteComponent.java?ref=b4021019839e0082e46b13315a6a13dc3c8b89f0",
    "patch": "@@ -0,0 +1,88 @@\n+/**\n+ * RemoteComponent.java\n+ *\n+ * This file was auto-generated from WSDL\n+ * by the Apache Axis 1.4 Apr 22, 2006 (06:55:48 PDT) WSDL2Java emitter.\n+ */\n+\n+package sonia.scm.jira.soap;\n+\n+public class RemoteComponent  extends sonia.scm.jira.soap.AbstractNamedRemoteEntity  implements java.io.Serializable {\n+    public RemoteComponent() {\n+    }\n+\n+    public RemoteComponent(\n+           java.lang.String id,\n+           java.lang.String name) {\n+        super(\n+            id,\n+            name);\n+    }\n+\n+    private java.lang.Object __equalsCalc = null;\n+    public synchronized boolean equals(java.lang.Object obj) {\n+        if (!(obj instanceof RemoteComponent)) return false;\n+        RemoteComponent other = (RemoteComponent) obj;\n+        if (obj == null) return false;\n+        if (this == obj) return true;\n+        if (__equalsCalc != null) {\n+            return (__equalsCalc == obj);\n+        }\n+        __equalsCalc = obj;\n+        boolean _equals;\n+        _equals = super.equals(obj);\n+        __equalsCalc = null;\n+        return _equals;\n+    }\n+\n+    private boolean __hashCodeCalc = false;\n+    public synchronized int hashCode() {\n+        if (__hashCodeCalc) {\n+            return 0;\n+        }\n+        __hashCodeCalc = true;\n+        int _hashCode = super.hashCode();\n+        __hashCodeCalc = false;\n+        return _hashCode;\n+    }\n+\n+    // Type metadata\n+    private static org.apache.axis.description.TypeDesc typeDesc =\n+        new org.apache.axis.description.TypeDesc(RemoteComponent.class, true);\n+\n+    static {\n+        typeDesc.setXmlType(new javax.xml.namespace.QName(\"http://beans.soap.rpc.jira.atlassian.com\", \"RemoteComponent\"));\n+    }\n+\n+    /**\n+     * Return type metadata object\n+     */\n+    public static org.apache.axis.description.TypeDesc getTypeDesc() {\n+        return typeDesc;\n+    }\n+\n+    /**\n+     * Get Custom Serializer\n+     */\n+    public static org.apache.axis.encoding.Serializer getSerializer(\n+           java.lang.String mechType,\n+           java.lang.Class _javaType,\n+           javax.xml.namespace.QName _xmlType) {\n+        return\n+          new  org.apache.axis.encoding.ser.BeanSerializer(\n+            _javaType, _xmlType, typeDesc);\n+    }\n+\n+    /**\n+     * Get Custom Deserializer\n+     */\n+    public static org.apache.axis.encoding.Deserializer getDeserializer(\n+           java.lang.String mechType,\n+           java.lang.Class _javaType,\n+           javax.xml.namespace.QName _xmlType) {\n+        return\n+          new  org.apache.axis.encoding.ser.BeanDeserializer(\n+            _javaType, _xmlType, typeDesc);\n+    }\n+\n+}"
  },
  {
    "sha": "74a68458602c994fd8518cb934b83bb35d819c3f",
    "filename": "src/main/java/sonia/scm/jira/soap/RemoteConfiguration.java",
    "status": "added",
    "additions": 403,
    "deletions": 0,
    "changes": 403,
    "blob_url": "https://github.com/scm-manager/scm-jira-plugin/blob/b4021019839e0082e46b13315a6a13dc3c8b89f0/src/main/java/sonia/scm/jira/soap/RemoteConfiguration.java",
    "raw_url": "https://github.com/scm-manager/scm-jira-plugin/raw/b4021019839e0082e46b13315a6a13dc3c8b89f0/src/main/java/sonia/scm/jira/soap/RemoteConfiguration.java",
    "contents_url": "https://api.github.com/repos/scm-manager/scm-jira-plugin/contents/src/main/java/sonia/scm/jira/soap/RemoteConfiguration.java?ref=b4021019839e0082e46b13315a6a13dc3c8b89f0",
    "patch": "@@ -0,0 +1,403 @@\n+/**\n+ * RemoteConfiguration.java\n+ *\n+ * This file was auto-generated from WSDL\n+ * by the Apache Axis 1.4 Apr 22, 2006 (06:55:48 PDT) WSDL2Java emitter.\n+ */\n+\n+package sonia.scm.jira.soap;\n+\n+public class RemoteConfiguration  implements java.io.Serializable {\n+    private boolean allowAttachments;\n+\n+    private boolean allowExternalUserManagment;\n+\n+    private boolean allowIssueLinking;\n+\n+    private boolean allowSubTasks;\n+\n+    private boolean allowTimeTracking;\n+\n+    private boolean allowUnassignedIssues;\n+\n+    private boolean allowVoting;\n+\n+    private boolean allowWatching;\n+\n+    private int timeTrackingDaysPerWeek;\n+\n+    private int timeTrackingHoursPerDay;\n+\n+    public RemoteConfiguration() {\n+    }\n+\n+    public RemoteConfiguration(\n+           boolean allowAttachments,\n+           boolean allowExternalUserManagment,\n+           boolean allowIssueLinking,\n+           boolean allowSubTasks,\n+           boolean allowTimeTracking,\n+           boolean allowUnassignedIssues,\n+           boolean allowVoting,\n+           boolean allowWatching,\n+           int timeTrackingDaysPerWeek,\n+           int timeTrackingHoursPerDay) {\n+           this.allowAttachments = allowAttachments;\n+           this.allowExternalUserManagment = allowExternalUserManagment;\n+           this.allowIssueLinking = allowIssueLinking;\n+           this.allowSubTasks = allowSubTasks;\n+           this.allowTimeTracking = allowTimeTracking;\n+           this.allowUnassignedIssues = allowUnassignedIssues;\n+           this.allowVoting = allowVoting;\n+           this.allowWatching = allowWatching;\n+           this.timeTrackingDaysPerWeek = timeTrackingDaysPerWeek;\n+           this.timeTrackingHoursPerDay = timeTrackingHoursPerDay;\n+    }\n+\n+\n+    /**\n+     * Gets the allowAttachments value for this RemoteConfiguration.\n+     *\n+     * @return allowAttachments\n+     */\n+    public boolean isAllowAttachments() {\n+        return allowAttachments;\n+    }\n+\n+\n+    /**\n+     * Sets the allowAttachments value for this RemoteConfiguration.\n+     *\n+     * @param allowAttachments\n+     */\n+    public void setAllowAttachments(boolean allowAttachments) {\n+        this.allowAttachments = allowAttachments;\n+    }\n+\n+\n+    /**\n+     * Gets the allowExternalUserManagment value for this RemoteConfiguration.\n+     *\n+     * @return allowExternalUserManagment\n+     */\n+    public boolean isAllowExternalUserManagment() {\n+        return allowExternalUserManagment;\n+    }\n+\n+\n+    /**\n+     * Sets the allowExternalUserManagment value for this RemoteConfiguration.\n+     *\n+     * @param allowExternalUserManagment\n+     */\n+    public void setAllowExternalUserManagment(boolean allowExternalUserManagment) {\n+        this.allowExternalUserManagment = allowExternalUserManagment;\n+    }\n+\n+\n+    /**\n+     * Gets the allowIssueLinking value for this RemoteConfiguration.\n+     *\n+     * @return allowIssueLinking\n+     */\n+    public boolean isAllowIssueLinking() {\n+        return allowIssueLinking;\n+    }\n+\n+\n+    /**\n+     * Sets the allowIssueLinking value for this RemoteConfiguration.\n+     *\n+     * @param allowIssueLinking\n+     */\n+    public void setAllowIssueLinking(boolean allowIssueLinking) {\n+        this.allowIssueLinking = allowIssueLinking;\n+    }\n+\n+\n+    /**\n+     * Gets the allowSubTasks value for this RemoteConfiguration.\n+     *\n+     * @return allowSubTasks\n+     */\n+    public boolean isAllowSubTasks() {\n+        return allowSubTasks;\n+    }\n+\n+\n+    /**\n+     * Sets the allowSubTasks value for this RemoteConfiguration.\n+     *\n+     * @param allowSubTasks\n+     */\n+    public void setAllowSubTasks(boolean allowSubTasks) {\n+        this.allowSubTasks = allowSubTasks;\n+    }\n+\n+\n+    /**\n+     * Gets the allowTimeTracking value for this RemoteConfiguration.\n+     *\n+     * @return allowTimeTracking\n+     */\n+    public boolean isAllowTimeTracking() {\n+        return allowTimeTracking;\n+    }\n+\n+\n+    /**\n+     * Sets the allowTimeTracking value for this RemoteConfiguration.\n+     *\n+     * @param allowTimeTracking\n+     */\n+    public void setAllowTimeTracking(boolean allowTimeTracking) {\n+        this.allowTimeTracking = allowTimeTracking;\n+    }\n+\n+\n+    /**\n+     * Gets the allowUnassignedIssues value for this RemoteConfiguration.\n+     *\n+     * @return allowUnassignedIssues\n+     */\n+    public boolean isAllowUnassignedIssues() {\n+        return allowUnassignedIssues;\n+    }\n+\n+\n+    /**\n+     * Sets the allowUnassignedIssues value for this RemoteConfiguration.\n+     *\n+     * @param allowUnassignedIssues\n+     */\n+    public void setAllowUnassignedIssues(boolean allowUnassignedIssues) {\n+        this.allowUnassignedIssues = allowUnassignedIssues;\n+    }\n+\n+\n+    /**\n+     * Gets the allowVoting value for this RemoteConfiguration.\n+     *\n+     * @return allowVoting\n+     */\n+    public boolean isAllowVoting() {\n+        return allowVoting;\n+    }\n+\n+\n+    /**\n+     * Sets the allowVoting value for this RemoteConfiguration.\n+     *\n+     * @param allowVoting\n+     */\n+    public void setAllowVoting(boolean allowVoting) {\n+        this.allowVoting = allowVoting;\n+    }\n+\n+\n+    /**\n+     * Gets the allowWatching value for this RemoteConfiguration.\n+     *\n+     * @return allowWatching\n+     */\n+    public boolean isAllowWatching() {\n+        return allowWatching;\n+    }\n+\n+\n+    /**\n+     * Sets the allowWatching value for this RemoteConfiguration.\n+     *\n+     * @param allowWatching\n+     */\n+    public void setAllowWatching(boolean allowWatching) {\n+        this.allowWatching = allowWatching;\n+    }\n+\n+\n+    /**\n+     * Gets the timeTrackingDaysPerWeek value for this RemoteConfiguration.\n+     *\n+     * @return timeTrackingDaysPerWeek\n+     */\n+    public int getTimeTrackingDaysPerWeek() {\n+        return timeTrackingDaysPerWeek;\n+    }\n+\n+\n+    /**\n+     * Sets the timeTrackingDaysPerWeek value for this RemoteConfiguration.\n+     *\n+     * @param timeTrackingDaysPerWeek\n+     */\n+    public void setTimeTrackingDaysPerWeek(int timeTrackingDaysPerWeek) {\n+        this.timeTrackingDaysPerWeek = timeTrackingDaysPerWeek;\n+    }\n+\n+\n+    /**\n+     * Gets the timeTrackingHoursPerDay value for this RemoteConfiguration.\n+     *\n+     * @return timeTrackingHoursPerDay\n+     */\n+    public int getTimeTrackingHoursPerDay() {\n+        return timeTrackingHoursPerDay;\n+    }\n+\n+\n+    /**\n+     * Sets the timeTrackingHoursPerDay value for this RemoteConfiguration.\n+     *\n+     * @param timeTrackingHoursPerDay\n+     */\n+    public void setTimeTrackingHoursPerDay(int timeTrackingHoursPerDay) {\n+        this.timeTrackingHoursPerDay = timeTrackingHoursPerDay;\n+    }\n+\n+    private java.lang.Object __equalsCalc = null;\n+    public synchronized boolean equals(java.lang.Object obj) {\n+        if (!(obj instanceof RemoteConfiguration)) return false;\n+        RemoteConfiguration other = (RemoteConfiguration) obj;\n+        if (obj == null) return false;\n+        if (this == obj) return true;\n+        if (__equalsCalc != null) {\n+            return (__equalsCalc == obj);\n+        }\n+        __equalsCalc = obj;\n+        boolean _equals;\n+        _equals = true &&\n+            this.allowAttachments == other.isAllowAttachments() &&\n+            this.allowExternalUserManagment == other.isAllowExternalUserManagment() &&\n+            this.allowIssueLinking == other.isAllowIssueLinking() &&\n+            this.allowSubTasks == other.isAllowSubTasks() &&\n+            this.allowTimeTracking == other.isAllowTimeTracking() &&\n+            this.allowUnassignedIssues == other.isAllowUnassignedIssues() &&\n+            this.allowVoting == other.isAllowVoting() &&\n+            this.allowWatching == other.isAllowWatching() &&\n+            this.timeTrackingDaysPerWeek == other.getTimeTrackingDaysPerWeek() &&\n+            this.timeTrackingHoursPerDay == other.getTimeTrackingHoursPerDay();\n+        __equalsCalc = null;\n+        return _equals;\n+    }\n+\n+    private boolean __hashCodeCalc = false;\n+    public synchronized int hashCode() {\n+        if (__hashCodeCalc) {\n+            return 0;\n+        }\n+        __hashCodeCalc = true;\n+        int _hashCode = 1;\n+        _hashCode += (isAllowAttachments() ? Boolean.TRUE : Boolean.FALSE).hashCode();\n+        _hashCode += (isAllowExternalUserManagment() ? Boolean.TRUE : Boolean.FALSE).hashCode();\n+        _hashCode += (isAllowIssueLinking() ? Boolean.TRUE : Boolean.FALSE).hashCode();\n+        _hashCode += (isAllowSubTasks() ? Boolean.TRUE : Boolean.FALSE).hashCode();\n+        _hashCode += (isAllowTimeTracking() ? Boolean.TRUE : Boolean.FALSE).hashCode();\n+        _hashCode += (isAllowUnassignedIssues() ? Boolean.TRUE : Boolean.FALSE).hashCode();\n+        _hashCode += (isAllowVoting() ? Boolean.TRUE : Boolean.FALSE).hashCode();\n+        _hashCode += (isAllowWatching() ? Boolean.TRUE : Boolean.FALSE).hashCode();\n+        _hashCode += getTimeTrackingDaysPerWeek();\n+        _hashCode += getTimeTrackingHoursPerDay();\n+        __hashCodeCalc = false;\n+        return _hashCode;\n+    }\n+\n+    // Type metadata\n+    private static org.apache.axis.description.TypeDesc typeDesc =\n+        new org.apache.axis.description.TypeDesc(RemoteConfiguration.class, true);\n+\n+    static {\n+        typeDesc.setXmlType(new javax.xml.namespace.QName(\"http://beans.soap.rpc.jira.atlassian.com\", \"RemoteConfiguration\"));\n+        org.apache.axis.description.ElementDesc elemField = new org.apache.axis.description.ElementDesc();\n+        elemField.setFieldName(\"allowAttachments\");\n+        elemField.setXmlName(new javax.xml.namespace.QName(\"\", \"allowAttachments\"));\n+        elemField.setXmlType(new javax.xml.namespace.QName(\"http://www.w3.org/2001/XMLSchema\", \"boolean\"));\n+        elemField.setNillable(false);\n+        typeDesc.addFieldDesc(elemField);\n+        elemField = new org.apache.axis.description.ElementDesc();\n+        elemField.setFieldName(\"allowExternalUserManagment\");\n+        elemField.setXmlName(new javax.xml.namespace.QName(\"\", \"allowExternalUserManagment\"));\n+        elemField.setXmlType(new javax.xml.namespace.QName(\"http://www.w3.org/2001/XMLSchema\", \"boolean\"));\n+        elemField.setNillable(false);\n+        typeDesc.addFieldDesc(elemField);\n+        elemField = new org.apache.axis.description.ElementDesc();\n+        elemField.setFieldName(\"allowIssueLinking\");\n+        elemField.setXmlName(new javax.xml.namespace.QName(\"\", \"allowIssueLinking\"));\n+        elemField.setXmlType(new javax.xml.namespace.QName(\"http://www.w3.org/2001/XMLSchema\", \"boolean\"));\n+        elemField.setNillable(false);\n+        typeDesc.addFieldDesc(elemField);\n+        elemField = new org.apache.axis.description.ElementDesc();\n+        elemField.setFieldName(\"allowSubTasks\");\n+        elemField.setXmlName(new javax.xml.namespace.QName(\"\", \"allowSubTasks\"));\n+        elemField.setXmlType(new javax.xml.namespace.QName(\"http://www.w3.org/2001/XMLSchema\", \"boolean\"));\n+        elemField.setNillable(false);\n+        typeDesc.addFieldDesc(elemField);\n+        elemField = new org.apache.axis.description.ElementDesc();\n+        elemField.setFieldName(\"allowTimeTracking\");\n+        elemField.setXmlName(new javax.xml.namespace.QName(\"\", \"allowTimeTracking\"));\n+        elemField.setXmlType(new javax.xml.namespace.QName(\"http://www.w3.org/2001/XMLSchema\", \"boolean\"));\n+        elemField.setNillable(false);\n+        typeDesc.addFieldDesc(elemField);\n+        elemField = new org.apache.axis.description.ElementDesc();\n+        elemField.setFieldName(\"allowUnassignedIssues\");\n+        elemField.setXmlName(new javax.xml.namespace.QName(\"\", \"allowUnassignedIssues\"));\n+        elemField.setXmlType(new javax.xml.namespace.QName(\"http://www.w3.org/2001/XMLSchema\", \"boolean\"));\n+        elemField.setNillable(false);\n+        typeDesc.addFieldDesc(elemField);\n+        elemField = new org.apache.axis.description.ElementDesc();\n+        elemField.setFieldName(\"allowVoting\");\n+        elemField.setXmlName(new javax.xml.namespace.QName(\"\", \"allowVoting\"));\n+        elemField.setXmlType(new javax.xml.namespace.QName(\"http://www.w3.org/2001/XMLSchema\", \"boolean\"));\n+        elemField.setNillable(false);\n+        typeDesc.addFieldDesc(elemField);\n+        elemField = new org.apache.axis.description.ElementDesc();\n+        elemField.setFieldName(\"allowWatching\");\n+        elemField.setXmlName(new javax.xml.namespace.QName(\"\", \"allowWatching\"));\n+        elemField.setXmlType(new javax.xml.namespace.QName(\"http://www.w3.org/2001/XMLSchema\", \"boolean\"));\n+        elemField.setNillable(false);\n+        typeDesc.addFieldDesc(elemField);\n+        elemField = new org.apache.axis.description.ElementDesc();\n+        elemField.setFieldName(\"timeTrackingDaysPerWeek\");\n+        elemField.setXmlName(new javax.xml.namespace.QName(\"\", \"timeTrackingDaysPerWeek\"));\n+        elemField.setXmlType(new javax.xml.namespace.QName(\"http://www.w3.org/2001/XMLSchema\", \"int\"));\n+        elemField.setNillable(false);\n+        typeDesc.addFieldDesc(elemField);\n+        elemField = new org.apache.axis.description.ElementDesc();\n+        elemField.setFieldName(\"timeTrackingHoursPerDay\");\n+        elemField.setXmlName(new javax.xml.namespace.QName(\"\", \"timeTrackingHoursPerDay\"));\n+        elemField.setXmlType(new javax.xml.namespace.QName(\"http://www.w3.org/2001/XMLSchema\", \"int\"));\n+        elemField.setNillable(false);\n+        typeDesc.addFieldDesc(elemField);\n+    }\n+\n+    /**\n+     * Return type metadata object\n+     */\n+    public static org.apache.axis.description.TypeDesc getTypeDesc() {\n+        return typeDesc;\n+    }\n+\n+    /**\n+     * Get Custom Serializer\n+     */\n+    public static org.apache.axis.encoding.Serializer getSerializer(\n+           java.lang.String mechType,\n+           java.lang.Class _javaType,\n+           javax.xml.namespace.QName _xmlType) {\n+        return\n+          new  org.apache.axis.encoding.ser.BeanSerializer(\n+            _javaType, _xmlType, typeDesc);\n+    }\n+\n+    /**\n+     * Get Custom Deserializer\n+     */\n+    public static org.apache.axis.encoding.Deserializer getDeserializer(\n+           java.lang.String mechType,\n+           java.lang.Class _javaType,\n+           javax.xml.namespace.QName _xmlType) {\n+        return\n+          new  org.apache.axis.encoding.ser.BeanDeserializer(\n+            _javaType, _xmlType, typeDesc);\n+    }\n+\n+}"
  },
  {
    "sha": "0ee7ca8f6d8fb8822298cce10b87a68459710eb0",
    "filename": "src/main/java/sonia/scm/jira/soap/RemoteCustomFieldValue.java",
    "status": "added",
    "additions": 199,
    "deletions": 0,
    "changes": 199,
    "blob_url": "https://github.com/scm-manager/scm-jira-plugin/blob/b4021019839e0082e46b13315a6a13dc3c8b89f0/src/main/java/sonia/scm/jira/soap/RemoteCustomFieldValue.java",
    "raw_url": "https://github.com/scm-manager/scm-jira-plugin/raw/b4021019839e0082e46b13315a6a13dc3c8b89f0/src/main/java/sonia/scm/jira/soap/RemoteCustomFieldValue.java",
    "contents_url": "https://api.github.com/repos/scm-manager/scm-jira-plugin/contents/src/main/java/sonia/scm/jira/soap/RemoteCustomFieldValue.java?ref=b4021019839e0082e46b13315a6a13dc3c8b89f0",
    "patch": "@@ -0,0 +1,199 @@\n+/**\n+ * RemoteCustomFieldValue.java\n+ *\n+ * This file was auto-generated from WSDL\n+ * by the Apache Axis 1.4 Apr 22, 2006 (06:55:48 PDT) WSDL2Java emitter.\n+ */\n+\n+package sonia.scm.jira.soap;\n+\n+public class RemoteCustomFieldValue  implements java.io.Serializable {\n+    private java.lang.String customfieldId;\n+\n+    private java.lang.String key;\n+\n+    private java.lang.String[] values;\n+\n+    public RemoteCustomFieldValue() {\n+    }\n+\n+    public RemoteCustomFieldValue(\n+           java.lang.String customfieldId,\n+           java.lang.String key,\n+           java.lang.String[] values) {\n+           this.customfieldId = customfieldId;\n+           this.key = key;\n+           this.values = values;\n+    }\n+\n+\n+    /**\n+     * Gets the customfieldId value for this RemoteCustomFieldValue.\n+     *\n+     * @return customfieldId\n+     */\n+    public java.lang.String getCustomfieldId() {\n+        return customfieldId;\n+    }\n+\n+\n+    /**\n+     * Sets the customfieldId value for this RemoteCustomFieldValue.\n+     *\n+     * @param customfieldId\n+     */\n+    public void setCustomfieldId(java.lang.String customfieldId) {\n+        this.customfieldId = customfieldId;\n+    }\n+\n+\n+    /**\n+     * Gets the key value for this RemoteCustomFieldValue.\n+     *\n+     * @return key\n+     */\n+    public java.lang.String getKey() {\n+        return key;\n+    }\n+\n+\n+    /**\n+     * Sets the key value for this RemoteCustomFieldValue.\n+     *\n+     * @param key\n+     */\n+    public void setKey(java.lang.String key) {\n+        this.key = key;\n+    }\n+\n+\n+    /**\n+     * Gets the values value for this RemoteCustomFieldValue.\n+     *\n+     * @return values\n+     */\n+    public java.lang.String[] getValues() {\n+        return values;\n+    }\n+\n+\n+    /**\n+     * Sets the values value for this RemoteCustomFieldValue.\n+     *\n+     * @param values\n+     */\n+    public void setValues(java.lang.String[] values) {\n+        this.values = values;\n+    }\n+\n+    private java.lang.Object __equalsCalc = null;\n+    public synchronized boolean equals(java.lang.Object obj) {\n+        if (!(obj instanceof RemoteCustomFieldValue)) return false;\n+        RemoteCustomFieldValue other = (RemoteCustomFieldValue) obj;\n+        if (obj == null) return false;\n+        if (this == obj) return true;\n+        if (__equalsCalc != null) {\n+            return (__equalsCalc == obj);\n+        }\n+        __equalsCalc = obj;\n+        boolean _equals;\n+        _equals = true &&\n+            ((this.customfieldId==null && other.getCustomfieldId()==null) ||\n+             (this.customfieldId!=null &&\n+              this.customfieldId.equals(other.getCustomfieldId()))) &&\n+            ((this.key==null && other.getKey()==null) ||\n+             (this.key!=null &&\n+              this.key.equals(other.getKey()))) &&\n+            ((this.values==null && other.getValues()==null) ||\n+             (this.values!=null &&\n+              java.util.Arrays.equals(this.values, other.getValues())));\n+        __equalsCalc = null;\n+        return _equals;\n+    }\n+\n+    private boolean __hashCodeCalc = false;\n+    public synchronized int hashCode() {\n+        if (__hashCodeCalc) {\n+            return 0;\n+        }\n+        __hashCodeCalc = true;\n+        int _hashCode = 1;\n+        if (getCustomfieldId() != null) {\n+            _hashCode += getCustomfieldId().hashCode();\n+        }\n+        if (getKey() != null) {\n+            _hashCode += getKey().hashCode();\n+        }\n+        if (getValues() != null) {\n+            for (int i=0;\n+                 i<java.lang.reflect.Array.getLength(getValues());\n+                 i++) {\n+                java.lang.Object obj = java.lang.reflect.Array.get(getValues(), i);\n+                if (obj != null &&\n+                    !obj.getClass().isArray()) {\n+                    _hashCode += obj.hashCode();\n+                }\n+            }\n+        }\n+        __hashCodeCalc = false;\n+        return _hashCode;\n+    }\n+\n+    // Type metadata\n+    private static org.apache.axis.description.TypeDesc typeDesc =\n+        new org.apache.axis.description.TypeDesc(RemoteCustomFieldValue.class, true);\n+\n+    static {\n+        typeDesc.setXmlType(new javax.xml.namespace.QName(\"http://beans.soap.rpc.jira.atlassian.com\", \"RemoteCustomFieldValue\"));\n+        org.apache.axis.description.ElementDesc elemField = new org.apache.axis.description.ElementDesc();\n+        elemField.setFieldName(\"customfieldId\");\n+        elemField.setXmlName(new javax.xml.namespace.QName(\"\", \"customfieldId\"));\n+        elemField.setXmlType(new javax.xml.namespace.QName(\"http://www.w3.org/2001/XMLSchema\", \"string\"));\n+        elemField.setNillable(true);\n+        typeDesc.addFieldDesc(elemField);\n+        elemField = new org.apache.axis.description.ElementDesc();\n+        elemField.setFieldName(\"key\");\n+        elemField.setXmlName(new javax.xml.namespace.QName(\"\", \"key\"));\n+        elemField.setXmlType(new javax.xml.namespace.QName(\"http://www.w3.org/2001/XMLSchema\", \"string\"));\n+        elemField.setNillable(true);\n+        typeDesc.addFieldDesc(elemField);\n+        elemField = new org.apache.axis.description.ElementDesc();\n+        elemField.setFieldName(\"values\");\n+        elemField.setXmlName(new javax.xml.namespace.QName(\"\", \"values\"));\n+        elemField.setXmlType(new javax.xml.namespace.QName(\"http://www.w3.org/2001/XMLSchema\", \"string\"));\n+        elemField.setNillable(true);\n+        typeDesc.addFieldDesc(elemField);\n+    }\n+\n+    /**\n+     * Return type metadata object\n+     */\n+    public static org.apache.axis.description.TypeDesc getTypeDesc() {\n+        return typeDesc;\n+    }\n+\n+    /**\n+     * Get Custom Serializer\n+     */\n+    public static org.apache.axis.encoding.Serializer getSerializer(\n+           java.lang.String mechType,\n+           java.lang.Class _javaType,\n+           javax.xml.namespace.QName _xmlType) {\n+        return\n+          new  org.apache.axis.encoding.ser.BeanSerializer(\n+            _javaType, _xmlType, typeDesc);\n+    }\n+\n+    /**\n+     * Get Custom Deserializer\n+     */\n+    public static org.apache.axis.encoding.Deserializer getDeserializer(\n+           java.lang.String mechType,\n+           java.lang.Class _javaType,\n+           javax.xml.namespace.QName _xmlType) {\n+        return\n+          new  org.apache.axis.encoding.ser.BeanDeserializer(\n+            _javaType, _xmlType, typeDesc);\n+    }\n+\n+}"
  },
  {
    "sha": "11298286a17c839e31f6d53ebabd280982863eac",
    "filename": "src/main/java/sonia/scm/jira/soap/RemoteEntity.java",
    "status": "added",
    "additions": 80,
    "deletions": 0,
    "changes": 80,
    "blob_url": "https://github.com/scm-manager/scm-jira-plugin/blob/b4021019839e0082e46b13315a6a13dc3c8b89f0/src/main/java/sonia/scm/jira/soap/RemoteEntity.java",
    "raw_url": "https://github.com/scm-manager/scm-jira-plugin/raw/b4021019839e0082e46b13315a6a13dc3c8b89f0/src/main/java/sonia/scm/jira/soap/RemoteEntity.java",
    "contents_url": "https://api.github.com/repos/scm-manager/scm-jira-plugin/contents/src/main/java/sonia/scm/jira/soap/RemoteEntity.java?ref=b4021019839e0082e46b13315a6a13dc3c8b89f0",
    "patch": "@@ -0,0 +1,80 @@\n+/**\n+ * RemoteEntity.java\n+ *\n+ * This file was auto-generated from WSDL\n+ * by the Apache Axis 1.4 Apr 22, 2006 (06:55:48 PDT) WSDL2Java emitter.\n+ */\n+\n+package sonia.scm.jira.soap;\n+\n+public class RemoteEntity  implements java.io.Serializable {\n+    public RemoteEntity() {\n+    }\n+\n+    private java.lang.Object __equalsCalc = null;\n+    public synchronized boolean equals(java.lang.Object obj) {\n+        if (!(obj instanceof RemoteEntity)) return false;\n+        RemoteEntity other = (RemoteEntity) obj;\n+        if (obj == null) return false;\n+        if (this == obj) return true;\n+        if (__equalsCalc != null) {\n+            return (__equalsCalc == obj);\n+        }\n+        __equalsCalc = obj;\n+        boolean _equals;\n+        _equals = true;\n+        __equalsCalc = null;\n+        return _equals;\n+    }\n+\n+    private boolean __hashCodeCalc = false;\n+    public synchronized int hashCode() {\n+        if (__hashCodeCalc) {\n+            return 0;\n+        }\n+        __hashCodeCalc = true;\n+        int _hashCode = 1;\n+        __hashCodeCalc = false;\n+        return _hashCode;\n+    }\n+\n+    // Type metadata\n+    private static org.apache.axis.description.TypeDesc typeDesc =\n+        new org.apache.axis.description.TypeDesc(RemoteEntity.class, true);\n+\n+    static {\n+        typeDesc.setXmlType(new javax.xml.namespace.QName(\"http://beans.soap.rpc.jira.atlassian.com\", \"RemoteEntity\"));\n+    }\n+\n+    /**\n+     * Return type metadata object\n+     */\n+    public static org.apache.axis.description.TypeDesc getTypeDesc() {\n+        return typeDesc;\n+    }\n+\n+    /**\n+     * Get Custom Serializer\n+     */\n+    public static org.apache.axis.encoding.Serializer getSerializer(\n+           java.lang.String mechType,\n+           java.lang.Class _javaType,\n+           javax.xml.namespace.QName _xmlType) {\n+        return\n+          new  org.apache.axis.encoding.ser.BeanSerializer(\n+            _javaType, _xmlType, typeDesc);\n+    }\n+\n+    /**\n+     * Get Custom Deserializer\n+     */\n+    public static org.apache.axis.encoding.Deserializer getDeserializer(\n+           java.lang.String mechType,\n+           java.lang.Class _javaType,\n+           javax.xml.namespace.QName _xmlType) {\n+        return\n+          new  org.apache.axis.encoding.ser.BeanDeserializer(\n+            _javaType, _xmlType, typeDesc);\n+    }\n+\n+}"
  },
  {
    "sha": "b9993934c5240cd650c756c22852e2e4e55d6834",
    "filename": "src/main/java/sonia/scm/jira/soap/RemoteException.java",
    "status": "added",
    "additions": 87,
    "deletions": 0,
    "changes": 87,
    "blob_url": "https://github.com/scm-manager/scm-jira-plugin/blob/b4021019839e0082e46b13315a6a13dc3c8b89f0/src/main/java/sonia/scm/jira/soap/RemoteException.java",
    "raw_url": "https://github.com/scm-manager/scm-jira-plugin/raw/b4021019839e0082e46b13315a6a13dc3c8b89f0/src/main/java/sonia/scm/jira/soap/RemoteException.java",
    "contents_url": "https://api.github.com/repos/scm-manager/scm-jira-plugin/contents/src/main/java/sonia/scm/jira/soap/RemoteException.java?ref=b4021019839e0082e46b13315a6a13dc3c8b89f0",
    "patch": "@@ -0,0 +1,87 @@\n+/**\n+ * RemoteException.java\n+ *\n+ * This file was auto-generated from WSDL\n+ * by the Apache Axis 1.4 Apr 22, 2006 (06:55:48 PDT) WSDL2Java emitter.\n+ */\n+\n+package sonia.scm.jira.soap;\n+\n+public class RemoteException  extends org.apache.axis.AxisFault  implements java.io.Serializable {\n+    public RemoteException() {\n+    }\n+\n+    private java.lang.Object __equalsCalc = null;\n+    public synchronized boolean equals(java.lang.Object obj) {\n+        if (!(obj instanceof RemoteException)) return false;\n+        RemoteException other = (RemoteException) obj;\n+        if (obj == null) return false;\n+        if (this == obj) return true;\n+        if (__equalsCalc != null) {\n+            return (__equalsCalc == obj);\n+        }\n+        __equalsCalc = obj;\n+        boolean _equals;\n+        _equals = true;\n+        __equalsCalc = null;\n+        return _equals;\n+    }\n+\n+    private boolean __hashCodeCalc = false;\n+    public synchronized int hashCode() {\n+        if (__hashCodeCalc) {\n+            return 0;\n+        }\n+        __hashCodeCalc = true;\n+        int _hashCode = 1;\n+        __hashCodeCalc = false;\n+        return _hashCode;\n+    }\n+\n+    // Type metadata\n+    private static org.apache.axis.description.TypeDesc typeDesc =\n+        new org.apache.axis.description.TypeDesc(RemoteException.class, true);\n+\n+    static {\n+        typeDesc.setXmlType(new javax.xml.namespace.QName(\"http://exception.rpc.jira.atlassian.com\", \"RemoteException\"));\n+    }\n+\n+    /**\n+     * Return type metadata object\n+     */\n+    public static org.apache.axis.description.TypeDesc getTypeDesc() {\n+        return typeDesc;\n+    }\n+\n+    /**\n+     * Get Custom Serializer\n+     */\n+    public static org.apache.axis.encoding.Serializer getSerializer(\n+           java.lang.String mechType,\n+           java.lang.Class _javaType,\n+           javax.xml.namespace.QName _xmlType) {\n+        return\n+          new  org.apache.axis.encoding.ser.BeanSerializer(\n+            _javaType, _xmlType, typeDesc);\n+    }\n+\n+    /**\n+     * Get Custom Deserializer\n+     */\n+    public static org.apache.axis.encoding.Deserializer getDeserializer(\n+           java.lang.String mechType,\n+           java.lang.Class _javaType,\n+           javax.xml.namespace.QName _xmlType) {\n+        return\n+          new  org.apache.axis.encoding.ser.BeanDeserializer(\n+            _javaType, _xmlType, typeDesc);\n+    }\n+\n+\n+    /**\n+     * Writes the exception data to the faultDetails\n+     */\n+    public void writeDetails(javax.xml.namespace.QName qname, org.apache.axis.encoding.SerializationContext context) throws java.io.IOException {\n+        context.serialize(qname, null, this);\n+    }\n+}"
  }
]
