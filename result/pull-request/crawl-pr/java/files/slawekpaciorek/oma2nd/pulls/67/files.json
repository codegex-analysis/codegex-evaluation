[
  {
    "sha": "b77054439bff1bbebfe9643e6635eb6e7c204a1f",
    "filename": "backend/oma/oma.iml",
    "status": "modified",
    "additions": 10,
    "deletions": 8,
    "changes": 18,
    "blob_url": "https://github.com/slawekpaciorek/oma2nd/blob/da95b5cc74a24806d5d76c11419e5ce963c5c2f7/backend/oma/oma.iml",
    "raw_url": "https://github.com/slawekpaciorek/oma2nd/raw/da95b5cc74a24806d5d76c11419e5ce963c5c2f7/backend/oma/oma.iml",
    "contents_url": "https://api.github.com/repos/slawekpaciorek/oma2nd/contents/backend/oma/oma.iml?ref=da95b5cc74a24806d5d76c11419e5ce963c5c2f7",
    "patch": "@@ -1,5 +1,10 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule=\"true\" type=\"JAVA_MODULE\" version=\"4\">\n+  <component name=\"CheckStyle-IDEA-Module\">\n+    <option name=\"configuration\">\n+      <map />\n+    </option>\n+  </component>\n   <component name=\"FacetManager\">\n     <facet type=\"web\" name=\"Web\">\n       <configuration>\n@@ -35,10 +40,6 @@\n     </content>\n     <orderEntry type=\"inheritedJdk\" />\n     <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n-    <orderEntry type=\"library\" name=\"Maven: org.aspectj:aspectjrt:1.9.6\" level=\"project\" />\n-    <orderEntry type=\"library\" name=\"Maven: org.aspectj:aspectjweaver:1.9.6\" level=\"project\" />\n-    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.vintage:junit-vintage-engine:5.6.2\" level=\"project\" />\n-    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: junit:junit:4.13\" level=\"project\" />\n     <orderEntry type=\"library\" name=\"Maven: org.springframework.boot:spring-boot-starter-mail:2.3.4.RELEASE\" level=\"project\" />\n     <orderEntry type=\"library\" name=\"Maven: org.springframework.boot:spring-boot-starter:2.3.4.RELEASE\" level=\"project\" />\n     <orderEntry type=\"library\" name=\"Maven: org.springframework.boot:spring-boot-starter-logging:2.3.4.RELEASE\" level=\"project\" />\n@@ -50,7 +51,6 @@\n     <orderEntry type=\"library\" name=\"Maven: jakarta.annotation:jakarta.annotation-api:1.3.5\" level=\"project\" />\n     <orderEntry type=\"library\" name=\"Maven: org.yaml:snakeyaml:1.26\" level=\"project\" />\n     <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-context-support:5.2.9.RELEASE\" level=\"project\" />\n-    <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-context:5.2.9.RELEASE\" level=\"project\" />\n     <orderEntry type=\"library\" name=\"Maven: com.sun.mail:jakarta.mail:1.6.5\" level=\"project\" />\n     <orderEntry type=\"library\" name=\"Maven: com.sun.activation:jakarta.activation:1.2.2\" level=\"project\" />\n     <orderEntry type=\"library\" name=\"Maven: org.thymeleaf:thymeleaf:3.0.11.RELEASE\" level=\"project\" />\n@@ -73,8 +73,6 @@\n     <orderEntry type=\"library\" name=\"Maven: org.apache.tomcat.embed:tomcat-embed-websocket:9.0.38\" level=\"project\" />\n     <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-web:5.2.9.RELEASE\" level=\"project\" />\n     <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-webmvc:5.2.9.RELEASE\" level=\"project\" />\n-    <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-aop:5.2.9.RELEASE\" level=\"project\" />\n-    <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-expression:5.2.9.RELEASE\" level=\"project\" />\n     <orderEntry type=\"library\" scope=\"RUNTIME\" name=\"Maven: org.springframework.boot:spring-boot-devtools:2.3.4.RELEASE\" level=\"project\" />\n     <orderEntry type=\"library\" name=\"Maven: org.springframework.boot:spring-boot:2.3.4.RELEASE\" level=\"project\" />\n     <orderEntry type=\"library\" name=\"Maven: org.springframework.boot:spring-boot-autoconfigure:2.3.4.RELEASE\" level=\"project\" />\n@@ -113,7 +111,6 @@\n     <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.springframework:spring-test:5.2.9.RELEASE\" level=\"project\" />\n     <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.xmlunit:xmlunit-core:2.7.0\" level=\"project\" />\n     <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.springframework.security:spring-security-test:5.3.4.RELEASE\" level=\"project\" />\n-    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.springframework.security:spring-security-core:5.3.4.RELEASE\" level=\"project\" />\n     <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.springframework.security:spring-security-web:5.3.4.RELEASE\" level=\"project\" />\n     <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-orm:5.2.9.RELEASE\" level=\"project\" />\n     <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-beans:5.2.9.RELEASE\" level=\"project\" />\n@@ -141,5 +138,10 @@\n     <orderEntry type=\"library\" name=\"Maven: org.hibernate:hibernate-commons-annotations:3.2.0.Final\" level=\"project\" />\n     <orderEntry type=\"library\" name=\"Maven: org.hibernate.javax.persistence:hibernate-jpa-2.0-api:1.0.0.Final\" level=\"project\" />\n     <orderEntry type=\"library\" scope=\"RUNTIME\" name=\"Maven: mysql:mysql-connector-java:8.0.21\" level=\"project\" />\n+    <orderEntry type=\"library\" name=\"Maven: javax.validation:validation-api:2.0.1.Final\" level=\"project\" />\n+    <orderEntry type=\"library\" name=\"Maven: org.springframework.security:spring-security-core:5.3.4.RELEASE\" level=\"project\" />\n+    <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-aop:5.2.9.RELEASE\" level=\"project\" />\n+    <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-context:5.2.9.RELEASE\" level=\"project\" />\n+    <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-expression:5.2.9.RELEASE\" level=\"project\" />\n   </component>\n </module>\n\\ No newline at end of file"
  },
  {
    "sha": "df5c737fe99bad87109ecb1d4a49dcd908c5cd5b",
    "filename": "backend/oma/pom.xml",
    "status": "modified",
    "additions": 21,
    "deletions": 3,
    "changes": 24,
    "blob_url": "https://github.com/slawekpaciorek/oma2nd/blob/da95b5cc74a24806d5d76c11419e5ce963c5c2f7/backend/oma/pom.xml",
    "raw_url": "https://github.com/slawekpaciorek/oma2nd/raw/da95b5cc74a24806d5d76c11419e5ce963c5c2f7/backend/oma/pom.xml",
    "contents_url": "https://api.github.com/repos/slawekpaciorek/oma2nd/contents/backend/oma/pom.xml?ref=da95b5cc74a24806d5d76c11419e5ce963c5c2f7",
    "patch": "@@ -33,10 +33,14 @@\n \t\t\t<artifactId>thymeleaf-spring5</artifactId>\n \t\t\t<version>3.0.11.RELEASE</version>\n \t\t</dependency>\n-<!--\t\t<dependency>\n+\t\t<dependency>\n \t\t\t<groupId>org.springframework.boot</groupId>\n \t\t\t<artifactId>spring-boot-starter-security</artifactId>\n-\t\t</dependency>-->\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.springframework.boot</groupId>\n+\t\t\t<artifactId>spring-boot-starter-data-jpa</artifactId>\n+\t\t</dependency>\n \t\t<dependency>\n \t\t\t<groupId>org.springframework.boot</groupId>\n \t\t\t<artifactId>spring-boot-starter-web</artifactId>\n@@ -97,7 +101,21 @@\n \t\t\t<artifactId>mysql-connector-java</artifactId>\n \t\t\t<scope>runtime</scope>\n \t\t</dependency>\n-\t</dependencies>\n+        <dependency>\n+            <groupId>javax.validation</groupId>\n+            <artifactId>validation-api</artifactId>\n+            <version>2.0.1.Final</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.springframework.security</groupId>\n+            <artifactId>spring-security-core</artifactId>\n+        </dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>io.jsonwebtoken</groupId>\n+\t\t\t<artifactId>jjwt</artifactId>\n+\t\t\t<version>0.9.1</version>\n+\t\t</dependency>\n+    </dependencies>\n \n \t<build>\n \t\t<plugins>"
  },
  {
    "sha": "b1f375e22acd49f14a63c41cde7c92e185b9af63",
    "filename": "backend/oma/src/main/java/com/oma/controllers/AuthController.java",
    "status": "added",
    "additions": 109,
    "deletions": 0,
    "changes": 109,
    "blob_url": "https://github.com/slawekpaciorek/oma2nd/blob/da95b5cc74a24806d5d76c11419e5ce963c5c2f7/backend/oma/src/main/java/com/oma/controllers/AuthController.java",
    "raw_url": "https://github.com/slawekpaciorek/oma2nd/raw/da95b5cc74a24806d5d76c11419e5ce963c5c2f7/backend/oma/src/main/java/com/oma/controllers/AuthController.java",
    "contents_url": "https://api.github.com/repos/slawekpaciorek/oma2nd/contents/backend/oma/src/main/java/com/oma/controllers/AuthController.java?ref=da95b5cc74a24806d5d76c11419e5ce963c5c2f7",
    "patch": "@@ -0,0 +1,109 @@\n+package com.oma.controllers;\n+\n+import com.oma.model.ERole;\n+import com.oma.security.AuthenticationManager;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.web.bind.annotation.CrossOrigin;\n+import org.springframework.web.bind.annotation.PostMapping;\n+import org.springframework.web.bind.annotation.RequestBody;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RestController;\n+import org.springframework.web.bind.annotation.RestControllerAdvice;\n+\n+import javax.management.relation.Role;\n+import javax.validation.Valid;\n+import java.net.Authenticator;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+@CrossOrigin(origins = \"*\", maxAge = 3600)\n+@RestController\n+@RequestMapping(\"/api/auth\")\n+public class AuthController {\n+\n+    @Autowired\n+    AuthenticationManager authenticationManager;\n+\n+    @Autowired\n+    RoleRespository roleRespository;\n+\n+    @Autowired\n+    PasswordEncoder passwordEncoder;\n+\n+    @Autowired\n+    JwtUtils jwtUtils;\n+\n+    @PostMapping(\"/signin\")\n+    public ResponseEntity<?> auththenticateUser (@Valid @RequestBody LoginRequest loginRequest) {\n+\n+        Authenticator authenticator -authenticationManager.authenticate(\n+            new UsernamePasswordAuthenticationToken(loginRequest.getUsername(), loginRequest.getPassword()));\n+\n+        SecurityContextHolder.getContext().setAuthentication(authentication);\n+        String jwt = jwtUtils.generateJwtToken(authentication);\n+\n+        UserDetailsImpl userDetails = (UserDetailsImpl) authenticator.getPrincipla();\n+        List<String> roles = userDetails.getAuthorities().stream()\n+            .map(item -> item.getAuthority())\n+            .collect(Collectors.toList());\n+\n+        return REsponseEntity.ok(new JwtResponse(jwt,\n+            userDetails.getId(),\n+            userDetails.getUserName();\n+        userDetails.getEmail(),\n+            roles));\n+    }\n+\n+    @PostMapping(\"/signup\")\n+    public ResponseEntity<?> registerUser(@Valid @RequestBody SignupRequest signupRequest) {\n+        if (userRepository.existsByUsername(signUpRequest.getUsername())){\n+            return ResponseEntity\n+                .badRequest()\n+                .body(new MessageResponse(\"Error: Email is already in use!\"));\n+        }\n+\n+        User user = new User(SignUpRequest.getUserName()),\n+            signupRequest.getEmail(),\n+        encoder.encode(signUpRequest.getPassword()));\n+\n+Set<String> strRoles = signUpRequest.getRole();\n+Set<Role> roles = new HashSet<>();\n+\n+if (strRoles == null) {\n+    Role userRole = roleRepository.findByName(ERole.ROLE_USER)\n+        .orElseThrow(() -> new RunTimeException(\"Error: Role is not found\"));\n+    roles.add(userRole);\n+} else {\n+    strRoles.forEach(role -> {\n+        switch (role) {\n+            case \"admin\":\n+                Role adminRole = roleRepository.findByName(ERole.ROLE_ADMIN)\n+                    .orElseThrow(() -> new RuntimeException (\"Error: Role is not found\"));\n+        roles.add(adminRole);\n+\n+        break;\n+\n+            case \"mod\":\n+                Role modRole = roleRepository.findByName(ERole.ROLE_MODERATOR)\n+                    .orElseThrow(() -> new RuntimeException (\"Error: Role is not found\"));\n+                roles.add(modRole);\n+\n+                break;\n+            default:\n+                Role userRole = roleRepository.findByName(ERole.ROLE_USER)\n+                    .orElseThrow(() -> new RuntimeException (\"Error: Role is not found\"));\n+                roles.add(userRole);\n+        }\n+    });\n+}\n+\n+        user.setRoles(roles);\n+userRepository.save(user);\n+return ResponseEntity.ok(new MessageResponse(\"User registered successfully\"));\n+\n+    }\n+\n+}"
  },
  {
    "sha": "c0931f8a8e9a00835af22330c4f23368ad98864d",
    "filename": "backend/oma/src/main/java/com/oma/model/ERole.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/slawekpaciorek/oma2nd/blob/da95b5cc74a24806d5d76c11419e5ce963c5c2f7/backend/oma/src/main/java/com/oma/model/ERole.java",
    "raw_url": "https://github.com/slawekpaciorek/oma2nd/raw/da95b5cc74a24806d5d76c11419e5ce963c5c2f7/backend/oma/src/main/java/com/oma/model/ERole.java",
    "contents_url": "https://api.github.com/repos/slawekpaciorek/oma2nd/contents/backend/oma/src/main/java/com/oma/model/ERole.java?ref=da95b5cc74a24806d5d76c11419e5ce963c5c2f7",
    "patch": "@@ -0,0 +1,7 @@\n+package com.oma.model;\n+\n+public enum ERole {\n+    ROLE_USER,\n+    ROLE_MODERATOR,\n+    ROLE_ADMIN\n+}"
  },
  {
    "sha": "f389f29a5fb73bb15e2bd112ee2a31df3ac70af6",
    "filename": "backend/oma/src/main/java/com/oma/model/Role.java",
    "status": "added",
    "additions": 34,
    "deletions": 0,
    "changes": 34,
    "blob_url": "https://github.com/slawekpaciorek/oma2nd/blob/da95b5cc74a24806d5d76c11419e5ce963c5c2f7/backend/oma/src/main/java/com/oma/model/Role.java",
    "raw_url": "https://github.com/slawekpaciorek/oma2nd/raw/da95b5cc74a24806d5d76c11419e5ce963c5c2f7/backend/oma/src/main/java/com/oma/model/Role.java",
    "contents_url": "https://api.github.com/repos/slawekpaciorek/oma2nd/contents/backend/oma/src/main/java/com/oma/model/Role.java?ref=da95b5cc74a24806d5d76c11419e5ce963c5c2f7",
    "patch": "@@ -0,0 +1,34 @@\n+package com.oma.model;\n+\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.EnumType;\n+import javax.persistence.Enumerated;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.GenerationType;\n+import javax.persistence.Id;\n+import javax.persistence.Table;\n+\n+@Entity\n+@Table(name = \"roles\")\n+public class Role {\n+\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    private Integer id;\n+\n+    @Enumerated(EnumType.STRING)\n+    @Column(length = 20)\n+    private ERole name;\n+\n+    public Role() {\n+    }\n+\n+    public Role (ERole name) {\n+        this.name = name;\n+    }\n+\n+    public Integer getId() {\n+        return id;\n+    }\n+}"
  },
  {
    "sha": "1c1401ad1c38da5a820b39d628aca65281bfd8ed",
    "filename": "backend/oma/src/main/java/com/oma/model/User.java",
    "status": "modified",
    "additions": 31,
    "deletions": 2,
    "changes": 33,
    "blob_url": "https://github.com/slawekpaciorek/oma2nd/blob/da95b5cc74a24806d5d76c11419e5ce963c5c2f7/backend/oma/src/main/java/com/oma/model/User.java",
    "raw_url": "https://github.com/slawekpaciorek/oma2nd/raw/da95b5cc74a24806d5d76c11419e5ce963c5c2f7/backend/oma/src/main/java/com/oma/model/User.java",
    "contents_url": "https://api.github.com/repos/slawekpaciorek/oma2nd/contents/backend/oma/src/main/java/com/oma/model/User.java?ref=da95b5cc74a24806d5d76c11419e5ce963c5c2f7",
    "patch": "@@ -8,37 +8,63 @@\n import org.hibernate.annotations.FetchMode;\n import org.hibernate.annotations.Proxy;\n \n+import javax.management.relation.Role;\n import javax.persistence.*;\n+import javax.validation.constraints.Email;\n+import javax.validation.constraints.NotBlank;\n+import javax.validation.constraints.Size;\n import java.io.Serializable;\n+import java.util.HashSet;\n import java.util.List;\n import java.util.Objects;\n+import java.util.Set;\n \n @Data\n @NoArgsConstructor\n @Entity\n+@Table (name = \"users\",\n+        uniqueConstraints = {\n+            @UniqueConstraint(columnNames = \"username\"),\n+            @UniqueConstraint(columnNames = \"email\")\n+})\n @JsonIgnoreProperties(ignoreUnknown = true)\n @JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = \"id\")\n public class User implements Serializable {\n \n     @Id\n-    @GeneratedValue\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n     private long id;\n \n     @Column\n     private String name;\n \n+    @NotBlank\n+    @Size(max = 20)\n     @Column\n     private String username;\n \n+    @NotBlank\n+    @Size(max = 100)\n     @Column\n     private String password;\n \n     @Column\n     private int mobilePhone;\n \n+    @NotBlank\n+    @Size(max = 50)\n+    @Email\n+    private String email;\n+\n     @Enumerated(EnumType.STRING)\n     private UserPrivileges privileges;\n \n+    @ManyToMany(fetch = FetchType.LAZY)\n+    @JoinTable(name = \"user_roles\",\n+    joinColumns = @JoinColumn(name = \"user_id\"),\n+    inverseJoinColumns = @JoinColumn (name = \"role_id\"))\n+    private Set<Role> roles = new HashSet<>();\n+\n     @ManyToOne(cascade = {CascadeType.DETACH,\n             CascadeType.MERGE,\n             CascadeType.PERSIST,\n@@ -55,11 +81,14 @@\n     private List<ProductsOrder> ordersCreated;\n \n \n-    public User(String name, String username, String privileges, int mobilePhone) {\n+    public User(String name, String username, String privileges, int mobilePhone,\n+                String email, String password) {\n         this.name = name;\n         this.username = username;\n         this.privileges = UserPrivileges.valueOf(privileges);\n         this.mobilePhone = mobilePhone;\n+        this.email = email;\n+        this.password = password;\n     }\n \n     @Override"
  },
  {
    "sha": "e2d369a2e3f8af6c628633322755583d64916801",
    "filename": "backend/oma/src/main/java/com/oma/repository/RoleRepository.java",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/slawekpaciorek/oma2nd/blob/da95b5cc74a24806d5d76c11419e5ce963c5c2f7/backend/oma/src/main/java/com/oma/repository/RoleRepository.java",
    "raw_url": "https://github.com/slawekpaciorek/oma2nd/raw/da95b5cc74a24806d5d76c11419e5ce963c5c2f7/backend/oma/src/main/java/com/oma/repository/RoleRepository.java",
    "contents_url": "https://api.github.com/repos/slawekpaciorek/oma2nd/contents/backend/oma/src/main/java/com/oma/repository/RoleRepository.java?ref=da95b5cc74a24806d5d76c11419e5ce963c5c2f7",
    "patch": "@@ -0,0 +1,11 @@\n+package com.oma.repository;\n+\n+import com.oma.model.ERole;\n+import com.oma.model.Role;\n+import org.springframework.stereotype.Repository;\n+import java.util.Optional;\n+\n+@Repository\n+public interface RoleRepository extends JpaRepository<Role, Long>{\n+    Optional<Role> findByNam(ERole name);\n+}"
  },
  {
    "sha": "9db6ac194cd36c7c872882b8719a93c13024e029",
    "filename": "backend/oma/src/main/java/com/oma/repository/UserRepository.java",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/slawekpaciorek/oma2nd/blob/da95b5cc74a24806d5d76c11419e5ce963c5c2f7/backend/oma/src/main/java/com/oma/repository/UserRepository.java",
    "raw_url": "https://github.com/slawekpaciorek/oma2nd/raw/da95b5cc74a24806d5d76c11419e5ce963c5c2f7/backend/oma/src/main/java/com/oma/repository/UserRepository.java",
    "contents_url": "https://api.github.com/repos/slawekpaciorek/oma2nd/contents/backend/oma/src/main/java/com/oma/repository/UserRepository.java?ref=da95b5cc74a24806d5d76c11419e5ce963c5c2f7",
    "patch": "@@ -0,0 +1,16 @@\n+package com.oma.repository;\n+\n+import com.oma.model.User;\n+import org.springframework.stereotype.Repository;\n+\n+import java.util.Optional;\n+\n+@Repository\n+public interface UserRepository extends JpaRepository<User, Long>{\n+    Optional<User> findByUsername(String username);\n+\n+    Boolean existsByUsername(String username);\n+\n+    Boolean existsByEmail(String email);\n+\n+}"
  },
  {
    "sha": "e6024815f7ca0894da34dedd3a1164342436a90e",
    "filename": "backend/oma/src/main/java/com/oma/response/JwtResponse.java",
    "status": "added",
    "additions": 65,
    "deletions": 0,
    "changes": 65,
    "blob_url": "https://github.com/slawekpaciorek/oma2nd/blob/da95b5cc74a24806d5d76c11419e5ce963c5c2f7/backend/oma/src/main/java/com/oma/response/JwtResponse.java",
    "raw_url": "https://github.com/slawekpaciorek/oma2nd/raw/da95b5cc74a24806d5d76c11419e5ce963c5c2f7/backend/oma/src/main/java/com/oma/response/JwtResponse.java",
    "contents_url": "https://api.github.com/repos/slawekpaciorek/oma2nd/contents/backend/oma/src/main/java/com/oma/response/JwtResponse.java?ref=da95b5cc74a24806d5d76c11419e5ce963c5c2f7",
    "patch": "@@ -0,0 +1,65 @@\n+package com.oma.response;\n+\n+import java.util.List;\n+\n+public class JwtResponse {\n+    private String token;\n+    private String type = \"Bearer\";\n+    private Long id;\n+    private String username;\n+    private String email;\n+    private List<String> roles;\n+\n+    public JwtResponse (String accessToken, Long id, String username, String name,\n+                       String email, List<String> roles){\n+        this.token = accessToken;\n+        this.id = id;\n+        this.username = username;\n+        this.email = email;\n+        this.roles = roles;\n+    }\n+\n+    public String getAccessToken(){\n+        return token;\n+    }\n+\n+    public void setAccessToken(String accessToken){\n+        this.token = accessToken;\n+    }\n+\n+    public String getTokenType(){\n+        return type;\n+    }\n+\n+    public void setTokenType(String tokenType){\n+        this.type = tokenType;\n+    }\n+\n+    public Long getId(){\n+        return id;\n+    }\n+\n+    public void setId(Long id){\n+        this.id = id;\n+    }\n+\n+    public String getEmail(){\n+        return email;\n+    }\n+\n+    public void setEmail(String email){\n+        this.email = email;\n+    }\n+\n+    public String getUsername(){\n+        return username;\n+    }\n+\n+    public void setUsername(String username){\n+        this.username = username;\n+    }\n+\n+    public List<String> getRoles(){\n+        return roles;\n+    }\n+}"
  },
  {
    "sha": "d3d309c07c9babcea6e7cd9628de67a9184b4341",
    "filename": "backend/oma/src/main/java/com/oma/security/AuthenticationManager.java",
    "status": "added",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/slawekpaciorek/oma2nd/blob/da95b5cc74a24806d5d76c11419e5ce963c5c2f7/backend/oma/src/main/java/com/oma/security/AuthenticationManager.java",
    "raw_url": "https://github.com/slawekpaciorek/oma2nd/raw/da95b5cc74a24806d5d76c11419e5ce963c5c2f7/backend/oma/src/main/java/com/oma/security/AuthenticationManager.java",
    "contents_url": "https://api.github.com/repos/slawekpaciorek/oma2nd/contents/backend/oma/src/main/java/com/oma/security/AuthenticationManager.java?ref=da95b5cc74a24806d5d76c11419e5ce963c5c2f7",
    "patch": "@@ -0,0 +1,8 @@\n+package com.oma.security;\n+\n+import org.springframework.security.core.Authentication;\n+import org.springframework.security.core.AuthenticationException;\n+\n+public interface AuthenticationManager {\n+    Authentication authenticate(Authentication var1) throws AuthenticationException;\n+}"
  }
]
