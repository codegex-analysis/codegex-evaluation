[
  {
    "sha": "549e00a2a96fa9d7c5dbc9859664a78d980158c2",
    "filename": "cart-server/.gitignore",
    "status": "removed",
    "additions": 0,
    "deletions": 33,
    "changes": 33,
    "blob_url": "https://github.com/nemtsevonline/Java10.1/blob/c4311838c16cd2226805daf1bf20d5350cd4b487/cart-server/.gitignore",
    "raw_url": "https://github.com/nemtsevonline/Java10.1/raw/c4311838c16cd2226805daf1bf20d5350cd4b487/cart-server/.gitignore",
    "contents_url": "https://api.github.com/repos/nemtsevonline/Java10.1/contents/cart-server/.gitignore?ref=c4311838c16cd2226805daf1bf20d5350cd4b487",
    "patch": "@@ -1,33 +0,0 @@\n-HELP.md\n-target/\n-!.mvn/wrapper/maven-wrapper.jar\n-!**/src/main/**/target/\n-!**/src/test/**/target/\n-\n-### STS ###\n-.apt_generated\n-.classpath\n-.factorypath\n-.project\n-.settings\n-.springBeans\n-.sts4-cache\n-\n-### IntelliJ IDEA ###\n-.idea\n-*.iws\n-*.iml\n-*.ipr\n-\n-### NetBeans ###\n-/nbproject/private/\n-/nbbuild/\n-/dist/\n-/nbdist/\n-/.nb-gradle/\n-build/\n-!**/src/main/**/build/\n-!**/src/test/**/build/\n-\n-### VS Code ###\n-.vscode/"
  },
  {
    "sha": "753a5e25a49a88829b4950741258bcbd32f9ae7b",
    "filename": "cart-server/.mvn/wrapper/MavenWrapperDownloader.java",
    "status": "removed",
    "additions": 0,
    "deletions": 118,
    "changes": 118,
    "blob_url": "https://github.com/nemtsevonline/Java10.1/blob/c4311838c16cd2226805daf1bf20d5350cd4b487/cart-server/.mvn/wrapper/MavenWrapperDownloader.java",
    "raw_url": "https://github.com/nemtsevonline/Java10.1/raw/c4311838c16cd2226805daf1bf20d5350cd4b487/cart-server/.mvn/wrapper/MavenWrapperDownloader.java",
    "contents_url": "https://api.github.com/repos/nemtsevonline/Java10.1/contents/cart-server/.mvn/wrapper/MavenWrapperDownloader.java?ref=c4311838c16cd2226805daf1bf20d5350cd4b487",
    "patch": "@@ -1,118 +0,0 @@\n-/*\n- * Copyright 2007-present the original author or authors.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *      https://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-import java.net.*;\n-import java.io.*;\n-import java.nio.channels.*;\n-import java.util.Properties;\n-\n-public class MavenWrapperDownloader {\n-\n-  private static final String WRAPPER_VERSION = \"0.5.6\";\n-  /**\n-   * Default URL to download the maven-wrapper.jar from, if no 'downloadUrl' is provided.\n-   */\n-  private static final String DEFAULT_DOWNLOAD_URL = \"https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/\"\n-      + WRAPPER_VERSION + \"/maven-wrapper-\" + WRAPPER_VERSION + \".jar\";\n-\n-  /**\n-   * Path to the maven-wrapper.properties file, which might contain a downloadUrl property to\n-   * use instead of the default one.\n-   */\n-  private static final String MAVEN_WRAPPER_PROPERTIES_PATH =\n-      \".mvn/wrapper/maven-wrapper.properties\";\n-\n-  /**\n-   * Path where the maven-wrapper.jar will be saved to.\n-   */\n-  private static final String MAVEN_WRAPPER_JAR_PATH =\n-      \".mvn/wrapper/maven-wrapper.jar\";\n-\n-  /**\n-   * Name of the property which should be used to override the default download url for the wrapper.\n-   */\n-  private static final String PROPERTY_NAME_WRAPPER_URL = \"wrapperUrl\";\n-\n-  public static void main(String args[]) {\n-    System.out.println(\"- Downloader started\");\n-    File baseDirectory = new File(args[0]);\n-    System.out.println(\"- Using base directory: \" + baseDirectory.getAbsolutePath());\n-\n-    // If the maven-wrapper.properties exists, read it and check if it contains a custom\n-    // wrapperUrl parameter.\n-    File mavenWrapperPropertyFile = new File(baseDirectory, MAVEN_WRAPPER_PROPERTIES_PATH);\n-    String url = DEFAULT_DOWNLOAD_URL;\n-    if (mavenWrapperPropertyFile.exists()) {\n-      FileInputStream mavenWrapperPropertyFileInputStream = null;\n-      try {\n-        mavenWrapperPropertyFileInputStream = new FileInputStream(mavenWrapperPropertyFile);\n-        Properties mavenWrapperProperties = new Properties();\n-        mavenWrapperProperties.load(mavenWrapperPropertyFileInputStream);\n-        url = mavenWrapperProperties.getProperty(PROPERTY_NAME_WRAPPER_URL, url);\n-      } catch (IOException e) {\n-        System.out.println(\"- ERROR loading '\" + MAVEN_WRAPPER_PROPERTIES_PATH + \"'\");\n-      } finally {\n-        try {\n-          if (mavenWrapperPropertyFileInputStream != null) {\n-            mavenWrapperPropertyFileInputStream.close();\n-          }\n-        } catch (IOException e) {\n-          // Ignore ...\n-        }\n-      }\n-    }\n-    System.out.println(\"- Downloading from: \" + url);\n-\n-    File outputFile = new File(baseDirectory.getAbsolutePath(), MAVEN_WRAPPER_JAR_PATH);\n-    if (!outputFile.getParentFile().exists()) {\n-      if (!outputFile.getParentFile().mkdirs()) {\n-        System.out.println(\n-            \"- ERROR creating output directory '\" + outputFile.getParentFile().getAbsolutePath() + \"'\");\n-      }\n-    }\n-    System.out.println(\"- Downloading to: \" + outputFile.getAbsolutePath());\n-    try {\n-      downloadFileFromURL(url, outputFile);\n-      System.out.println(\"Done\");\n-      System.exit(0);\n-    } catch (Throwable e) {\n-      System.out.println(\"- Error downloading\");\n-      e.printStackTrace();\n-      System.exit(1);\n-    }\n-  }\n-\n-  private static void downloadFileFromURL(String urlString, File destination) throws Exception {\n-    if (System.getenv(\"MVNW_USERNAME\") != null && System.getenv(\"MVNW_PASSWORD\") != null) {\n-      String username = System.getenv(\"MVNW_USERNAME\");\n-      char[] password = System.getenv(\"MVNW_PASSWORD\").toCharArray();\n-      Authenticator.setDefault(new Authenticator() {\n-        @Override\n-        protected PasswordAuthentication getPasswordAuthentication() {\n-          return new PasswordAuthentication(username, password);\n-        }\n-      });\n-    }\n-    URL website = new URL(urlString);\n-    ReadableByteChannel rbc;\n-    rbc = Channels.newChannel(website.openStream());\n-    FileOutputStream fos = new FileOutputStream(destination);\n-    fos.getChannel().transferFrom(rbc, 0, Long.MAX_VALUE);\n-    fos.close();\n-    rbc.close();\n-  }\n-\n-}"
  },
  {
    "sha": "2cc7d4a55c0cd0092912bf49ae38b3a9e3fd0054",
    "filename": "cart-server/.mvn/wrapper/maven-wrapper.jar",
    "status": "removed",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/nemtsevonline/Java10.1/blob/c4311838c16cd2226805daf1bf20d5350cd4b487/cart-server/.mvn/wrapper/maven-wrapper.jar",
    "raw_url": "https://github.com/nemtsevonline/Java10.1/raw/c4311838c16cd2226805daf1bf20d5350cd4b487/cart-server/.mvn/wrapper/maven-wrapper.jar",
    "contents_url": "https://api.github.com/repos/nemtsevonline/Java10.1/contents/cart-server/.mvn/wrapper/maven-wrapper.jar?ref=c4311838c16cd2226805daf1bf20d5350cd4b487"
  },
  {
    "sha": "642d572ce90e5085986bdd9c9204b9404f028084",
    "filename": "cart-server/.mvn/wrapper/maven-wrapper.properties",
    "status": "removed",
    "additions": 0,
    "deletions": 2,
    "changes": 2,
    "blob_url": "https://github.com/nemtsevonline/Java10.1/blob/c4311838c16cd2226805daf1bf20d5350cd4b487/cart-server/.mvn/wrapper/maven-wrapper.properties",
    "raw_url": "https://github.com/nemtsevonline/Java10.1/raw/c4311838c16cd2226805daf1bf20d5350cd4b487/cart-server/.mvn/wrapper/maven-wrapper.properties",
    "contents_url": "https://api.github.com/repos/nemtsevonline/Java10.1/contents/cart-server/.mvn/wrapper/maven-wrapper.properties?ref=c4311838c16cd2226805daf1bf20d5350cd4b487",
    "patch": "@@ -1,2 +0,0 @@\n-distributionUrl=https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.6.3/apache-maven-3.6.3-bin.zip\n-wrapperUrl=https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar"
  },
  {
    "sha": "3c8a5537314954d53ec2fb774b34fe5d5a5f253a",
    "filename": "cart-server/mvnw",
    "status": "removed",
    "additions": 0,
    "deletions": 322,
    "changes": 322,
    "blob_url": "https://github.com/nemtsevonline/Java10.1/blob/c4311838c16cd2226805daf1bf20d5350cd4b487/cart-server/mvnw",
    "raw_url": "https://github.com/nemtsevonline/Java10.1/raw/c4311838c16cd2226805daf1bf20d5350cd4b487/cart-server/mvnw",
    "contents_url": "https://api.github.com/repos/nemtsevonline/Java10.1/contents/cart-server/mvnw?ref=c4311838c16cd2226805daf1bf20d5350cd4b487",
    "patch": "@@ -1,322 +0,0 @@\n-#!/bin/sh\n-# ----------------------------------------------------------------------------\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#    https://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-# ----------------------------------------------------------------------------\n-\n-# ----------------------------------------------------------------------------\n-# Maven Start Up Batch script\n-#\n-# Required ENV vars:\n-# ------------------\n-#   JAVA_HOME - location of a JDK home dir\n-#\n-# Optional ENV vars\n-# -----------------\n-#   M2_HOME - location of maven2's installed home dir\n-#   MAVEN_OPTS - parameters passed to the Java VM when running Maven\n-#     e.g. to debug Maven itself, use\n-#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\n-#   MAVEN_SKIP_RC - flag to disable loading of mavenrc files\n-# ----------------------------------------------------------------------------\n-\n-if [ -z \"$MAVEN_SKIP_RC\" ]; then\n-\n-  if [ -f /etc/mavenrc ]; then\n-    . /etc/mavenrc\n-  fi\n-\n-  if [ -f \"$HOME/.mavenrc\" ]; then\n-    . \"$HOME/.mavenrc\"\n-  fi\n-\n-fi\n-\n-# OS specific support.  $var _must_ be set to either true or false.\n-cygwin=false\n-darwin=false\n-mingw=false\n-case \"$(uname)\" in\n-CYGWIN*) cygwin=true ;;\n-MINGW*) mingw=true ;;\n-Darwin*)\n-  darwin=true\n-  # Use /usr/libexec/java_home if available, otherwise fall back to /Library/Java/Home\n-  # See https://developer.apple.com/library/mac/qa/qa1170/_index.html\n-  if [ -z \"$JAVA_HOME\" ]; then\n-    if [ -x \"/usr/libexec/java_home\" ]; then\n-      export JAVA_HOME=\"$(/usr/libexec/java_home)\"\n-    else\n-      export JAVA_HOME=\"/Library/Java/Home\"\n-    fi\n-  fi\n-  ;;\n-esac\n-\n-if [ -z \"$JAVA_HOME\" ]; then\n-  if [ -r /etc/gentoo-release ]; then\n-    JAVA_HOME=$(java-config --jre-home)\n-  fi\n-fi\n-\n-if [ -z \"$M2_HOME\" ]; then\n-  ## resolve links - $0 may be a link to maven's home\n-  PRG=\"$0\"\n-\n-  # need this for relative symlinks\n-  while [ -h \"$PRG\" ]; do\n-    ls=$(ls -ld \"$PRG\")\n-    link=$(expr \"$ls\" : '.*-> \\(.*\\)$')\n-    if expr \"$link\" : '/.*' >/dev/null; then\n-      PRG=\"$link\"\n-    else\n-      PRG=\"$(dirname \"$PRG\")/$link\"\n-    fi\n-  done\n-\n-  saveddir=$(pwd)\n-\n-  M2_HOME=$(dirname \"$PRG\")/..\n-\n-  # make it fully qualified\n-  M2_HOME=$(cd \"$M2_HOME\" && pwd)\n-\n-  cd \"$saveddir\"\n-  # echo Using m2 at $M2_HOME\n-fi\n-\n-# For Cygwin, ensure paths are in UNIX format before anything is touched\n-if $cygwin; then\n-  [ -n \"$M2_HOME\" ] &&\n-    M2_HOME=$(cygpath --unix \"$M2_HOME\")\n-  [ -n \"$JAVA_HOME\" ] &&\n-    JAVA_HOME=$(cygpath --unix \"$JAVA_HOME\")\n-  [ -n \"$CLASSPATH\" ] &&\n-    CLASSPATH=$(cygpath --path --unix \"$CLASSPATH\")\n-fi\n-\n-# For Mingw, ensure paths are in UNIX format before anything is touched\n-if $mingw; then\n-  [ -n \"$M2_HOME\" ] &&\n-    M2_HOME=\"$( (\n-      cd \"$M2_HOME\"\n-      pwd\n-    ))\"\n-  [ -n \"$JAVA_HOME\" ] &&\n-    JAVA_HOME=\"$( (\n-      cd \"$JAVA_HOME\"\n-      pwd\n-    ))\"\n-fi\n-\n-if [ -z \"$JAVA_HOME\" ]; then\n-  javaExecutable=\"$(which javac)\"\n-  if [ -n \"$javaExecutable\" ] && ! [ \"$(expr \\\"$javaExecutable\\\" : '\\([^ ]*\\)')\" = \"no\" ]; then\n-    # readlink(1) is not available as standard on Solaris 10.\n-    readLink=$(which readlink)\n-    if [ ! $(expr \"$readLink\" : '\\([^ ]*\\)') = \"no\" ]; then\n-      if $darwin; then\n-        javaHome=\"$(dirname \\\"$javaExecutable\\\")\"\n-        javaExecutable=\"$(cd \\\"$javaHome\\\" && pwd -P)/javac\"\n-      else\n-        javaExecutable=\"$(readlink -f \\\"$javaExecutable\\\")\"\n-      fi\n-      javaHome=\"$(dirname \\\"$javaExecutable\\\")\"\n-      javaHome=$(expr \"$javaHome\" : '\\(.*\\)/bin')\n-      JAVA_HOME=\"$javaHome\"\n-      export JAVA_HOME\n-    fi\n-  fi\n-fi\n-\n-if [ -z \"$JAVACMD\" ]; then\n-  if [ -n \"$JAVA_HOME\" ]; then\n-    if [ -x \"$JAVA_HOME/jre/sh/java\" ]; then\n-      # IBM's JDK on AIX uses strange locations for the executables\n-      JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n-    else\n-      JAVACMD=\"$JAVA_HOME/bin/java\"\n-    fi\n-  else\n-    JAVACMD=\"$(which java)\"\n-  fi\n-fi\n-\n-if [ ! -x \"$JAVACMD\" ]; then\n-  echo \"Error: JAVA_HOME is not defined correctly.\" >&2\n-  echo \"  We cannot execute $JAVACMD\" >&2\n-  exit 1\n-fi\n-\n-if [ -z \"$JAVA_HOME\" ]; then\n-  echo \"Warning: JAVA_HOME environment variable is not set.\"\n-fi\n-\n-CLASSWORLDS_LAUNCHER=org.codehaus.plexus.classworlds.launcher.Launcher\n-\n-# traverses directory structure from process work directory to filesystem root\n-# first directory with .mvn subdirectory is considered project base directory\n-find_maven_basedir() {\n-\n-  if [ -z \"$1\" ]; then\n-    echo \"Path not specified to find_maven_basedir\"\n-    return 1\n-  fi\n-\n-  basedir=\"$1\"\n-  wdir=\"$1\"\n-  while [ \"$wdir\" != '/' ]; do\n-    if [ -d \"$wdir\"/.mvn ]; then\n-      basedir=$wdir\n-      break\n-    fi\n-    # workaround for JBEAP-8937 (on Solaris 10/Sparc)\n-    if [ -d \"${wdir}\" ]; then\n-      wdir=$(\n-        cd \"$wdir/..\"\n-        pwd\n-      )\n-    fi\n-    # end of workaround\n-  done\n-  echo \"${basedir}\"\n-}\n-\n-# concatenates all lines of a file\n-concat_lines() {\n-  if [ -f \"$1\" ]; then\n-    echo \"$(tr -s '\\n' ' ' <\"$1\")\"\n-  fi\n-}\n-\n-BASE_DIR=$(find_maven_basedir \"$(pwd)\")\n-if [ -z \"$BASE_DIR\" ]; then\n-  exit 1\n-fi\n-\n-##########################################################################################\n-# Extension to allow automatically downloading the maven-wrapper.jar from Maven-central\n-# This allows using the maven wrapper in projects that prohibit checking in binary data.\n-##########################################################################################\n-if [ -r \"$BASE_DIR/.mvn/wrapper/maven-wrapper.jar\" ]; then\n-  if [ \"$MVNW_VERBOSE\" = true ]; then\n-    echo \"Found .mvn/wrapper/maven-wrapper.jar\"\n-  fi\n-else\n-  if [ \"$MVNW_VERBOSE\" = true ]; then\n-    echo \"Couldn't find .mvn/wrapper/maven-wrapper.jar, downloading it ...\"\n-  fi\n-  if [ -n \"$MVNW_REPOURL\" ]; then\n-    jarUrl=\"$MVNW_REPOURL/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar\"\n-  else\n-    jarUrl=\"https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar\"\n-  fi\n-  while IFS=\"=\" read key value; do\n-    case \"$key\" in wrapperUrl)\n-      jarUrl=\"$value\"\n-      break\n-      ;;\n-    esac\n-  done <\"$BASE_DIR/.mvn/wrapper/maven-wrapper.properties\"\n-  if [ \"$MVNW_VERBOSE\" = true ]; then\n-    echo \"Downloading from: $jarUrl\"\n-  fi\n-  wrapperJarPath=\"$BASE_DIR/.mvn/wrapper/maven-wrapper.jar\"\n-  if $cygwin; then\n-    wrapperJarPath=$(cygpath --path --windows \"$wrapperJarPath\")\n-  fi\n-\n-  if command -v wget >/dev/null; then\n-    if [ \"$MVNW_VERBOSE\" = true ]; then\n-      echo \"Found wget ... using wget\"\n-    fi\n-    if [ -z \"$MVNW_USERNAME\" ] || [ -z \"$MVNW_PASSWORD\" ]; then\n-      wget \"$jarUrl\" -O \"$wrapperJarPath\"\n-    else\n-      wget --http-user=$MVNW_USERNAME --http-password=$MVNW_PASSWORD \"$jarUrl\" -O \"$wrapperJarPath\"\n-    fi\n-  elif command -v curl >/dev/null; then\n-    if [ \"$MVNW_VERBOSE\" = true ]; then\n-      echo \"Found curl ... using curl\"\n-    fi\n-    if [ -z \"$MVNW_USERNAME\" ] || [ -z \"$MVNW_PASSWORD\" ]; then\n-      curl -o \"$wrapperJarPath\" \"$jarUrl\" -f\n-    else\n-      curl --user $MVNW_USERNAME:$MVNW_PASSWORD -o \"$wrapperJarPath\" \"$jarUrl\" -f\n-    fi\n-\n-  else\n-    if [ \"$MVNW_VERBOSE\" = true ]; then\n-      echo \"Falling back to using Java to download\"\n-    fi\n-    javaClass=\"$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.java\"\n-    # For Cygwin, switch paths to Windows format before running javac\n-    if $cygwin; then\n-      javaClass=$(cygpath --path --windows \"$javaClass\")\n-    fi\n-    if [ -e \"$javaClass\" ]; then\n-      if [ ! -e \"$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class\" ]; then\n-        if [ \"$MVNW_VERBOSE\" = true ]; then\n-          echo \" - Compiling MavenWrapperDownloader.java ...\"\n-        fi\n-        # Compiling the Java class\n-        (\"$JAVA_HOME/bin/javac\" \"$javaClass\")\n-      fi\n-      if [ -e \"$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class\" ]; then\n-        # Running the downloader\n-        if [ \"$MVNW_VERBOSE\" = true ]; then\n-          echo \" - Running MavenWrapperDownloader.java ...\"\n-        fi\n-        (\"$JAVA_HOME/bin/java\" -cp .mvn/wrapper MavenWrapperDownloader \"$MAVEN_PROJECTBASEDIR\")\n-      fi\n-    fi\n-  fi\n-fi\n-##########################################################################################\n-# End of extension\n-##########################################################################################\n-\n-export MAVEN_PROJECTBASEDIR=${MAVEN_BASEDIR:-\"$BASE_DIR\"}\n-if [ \"$MVNW_VERBOSE\" = true ]; then\n-  echo $MAVEN_PROJECTBASEDIR\n-fi\n-MAVEN_OPTS=\"$(concat_lines \"$MAVEN_PROJECTBASEDIR/.mvn/jvm.config\") $MAVEN_OPTS\"\n-\n-# For Cygwin, switch paths to Windows format before running java\n-if $cygwin; then\n-  [ -n \"$M2_HOME\" ] &&\n-    M2_HOME=$(cygpath --path --windows \"$M2_HOME\")\n-  [ -n \"$JAVA_HOME\" ] &&\n-    JAVA_HOME=$(cygpath --path --windows \"$JAVA_HOME\")\n-  [ -n \"$CLASSPATH\" ] &&\n-    CLASSPATH=$(cygpath --path --windows \"$CLASSPATH\")\n-  [ -n \"$MAVEN_PROJECTBASEDIR\" ] &&\n-    MAVEN_PROJECTBASEDIR=$(cygpath --path --windows \"$MAVEN_PROJECTBASEDIR\")\n-fi\n-\n-# Provide a \"standardized\" way to retrieve the CLI args that will\n-# work with both Windows and non-Windows executions.\n-MAVEN_CMD_LINE_ARGS=\"$MAVEN_CONFIG $@\"\n-export MAVEN_CMD_LINE_ARGS\n-\n-WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain\n-\n-exec \"$JAVACMD\" \\\n-  $MAVEN_OPTS \\\n-  -classpath \"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar\" \\\n-  \"-Dmaven.home=${M2_HOME}\" \"-Dmaven.multiModuleProjectDirectory=${MAVEN_PROJECTBASEDIR}\" \\\n-  ${WRAPPER_LAUNCHER} $MAVEN_CONFIG \"$@\""
  },
  {
    "sha": "c8d43372c986d97911cdc21bd87e0cbe3d83bdda",
    "filename": "cart-server/mvnw.cmd",
    "status": "removed",
    "additions": 0,
    "deletions": 182,
    "changes": 182,
    "blob_url": "https://github.com/nemtsevonline/Java10.1/blob/c4311838c16cd2226805daf1bf20d5350cd4b487/cart-server/mvnw.cmd",
    "raw_url": "https://github.com/nemtsevonline/Java10.1/raw/c4311838c16cd2226805daf1bf20d5350cd4b487/cart-server/mvnw.cmd",
    "contents_url": "https://api.github.com/repos/nemtsevonline/Java10.1/contents/cart-server/mvnw.cmd?ref=c4311838c16cd2226805daf1bf20d5350cd4b487",
    "patch": "@@ -1,182 +0,0 @@\n-@REM ----------------------------------------------------------------------------\n-@REM Licensed to the Apache Software Foundation (ASF) under one\n-@REM or more contributor license agreements.  See the NOTICE file\n-@REM distributed with this work for additional information\n-@REM regarding copyright ownership.  The ASF licenses this file\n-@REM to you under the Apache License, Version 2.0 (the\n-@REM \"License\"); you may not use this file except in compliance\n-@REM with the License.  You may obtain a copy of the License at\n-@REM\n-@REM    https://www.apache.org/licenses/LICENSE-2.0\n-@REM\n-@REM Unless required by applicable law or agreed to in writing,\n-@REM software distributed under the License is distributed on an\n-@REM \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-@REM KIND, either express or implied.  See the License for the\n-@REM specific language governing permissions and limitations\n-@REM under the License.\n-@REM ----------------------------------------------------------------------------\n-\n-@REM ----------------------------------------------------------------------------\n-@REM Maven Start Up Batch script\n-@REM\n-@REM Required ENV vars:\n-@REM JAVA_HOME - location of a JDK home dir\n-@REM\n-@REM Optional ENV vars\n-@REM M2_HOME - location of maven2's installed home dir\n-@REM MAVEN_BATCH_ECHO - set to 'on' to enable the echoing of the batch commands\n-@REM MAVEN_BATCH_PAUSE - set to 'on' to wait for a keystroke before ending\n-@REM MAVEN_OPTS - parameters passed to the Java VM when running Maven\n-@REM     e.g. to debug Maven itself, use\n-@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\n-@REM MAVEN_SKIP_RC - flag to disable loading of mavenrc files\n-@REM ----------------------------------------------------------------------------\n-\n-@REM Begin all REM lines with '@' in case MAVEN_BATCH_ECHO is 'on'\n-@echo off\n-@REM set title of command window\n-title %0\n-@REM enable echoing by setting MAVEN_BATCH_ECHO to 'on'\n-@if \"%MAVEN_BATCH_ECHO%\" == \"on\"  echo %MAVEN_BATCH_ECHO%\n-\n-@REM set %HOME% to equivalent of $HOME\n-if \"%HOME%\" == \"\" (set \"HOME=%HOMEDRIVE%%HOMEPATH%\")\n-\n-@REM Execute a user defined script before this one\n-if not \"%MAVEN_SKIP_RC%\" == \"\" goto skipRcPre\n-@REM check for pre script, once with legacy .bat ending and once with .cmd ending\n-if exist \"%HOME%\\mavenrc_pre.bat\" call \"%HOME%\\mavenrc_pre.bat\"\n-if exist \"%HOME%\\mavenrc_pre.cmd\" call \"%HOME%\\mavenrc_pre.cmd\"\n-:skipRcPre\n-\n-@setlocal\n-\n-set ERROR_CODE=0\n-\n-@REM To isolate internal variables from possible post scripts, we use another setlocal\n-@setlocal\n-\n-@REM ==== START VALIDATION ====\n-if not \"%JAVA_HOME%\" == \"\" goto OkJHome\n-\n-echo.\n-echo Error: JAVA_HOME not found in your environment. >&2\n-echo Please set the JAVA_HOME variable in your environment to match the >&2\n-echo location of your Java installation. >&2\n-echo.\n-goto error\n-\n-:OkJHome\n-if exist \"%JAVA_HOME%\\bin\\java.exe\" goto init\n-\n-echo.\n-echo Error: JAVA_HOME is set to an invalid directory. >&2\n-echo JAVA_HOME = \"%JAVA_HOME%\" >&2\n-echo Please set the JAVA_HOME variable in your environment to match the >&2\n-echo location of your Java installation. >&2\n-echo.\n-goto error\n-\n-@REM ==== END VALIDATION ====\n-\n-:init\n-\n-@REM Find the project base dir, i.e. the directory that contains the folder \".mvn\".\n-@REM Fallback to current working directory if not found.\n-\n-set MAVEN_PROJECTBASEDIR=%MAVEN_BASEDIR%\n-IF NOT \"%MAVEN_PROJECTBASEDIR%\"==\"\" goto endDetectBaseDir\n-\n-set EXEC_DIR=%CD%\n-set WDIR=%EXEC_DIR%\n-:findBaseDir\n-IF EXIST \"%WDIR%\"\\.mvn goto baseDirFound\n-cd ..\n-IF \"%WDIR%\"==\"%CD%\" goto baseDirNotFound\n-set WDIR=%CD%\n-goto findBaseDir\n-\n-:baseDirFound\n-set MAVEN_PROJECTBASEDIR=%WDIR%\n-cd \"%EXEC_DIR%\"\n-goto endDetectBaseDir\n-\n-:baseDirNotFound\n-set MAVEN_PROJECTBASEDIR=%EXEC_DIR%\n-cd \"%EXEC_DIR%\"\n-\n-:endDetectBaseDir\n-\n-IF NOT EXIST \"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\" goto endReadAdditionalConfig\n-\n-@setlocal EnableExtensions EnableDelayedExpansion\n-for /F \"usebackq delims=\" %%a in (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\") do set JVM_CONFIG_MAVEN_PROPS=!JVM_CONFIG_MAVEN_PROPS! %%a\n-@endlocal & set JVM_CONFIG_MAVEN_PROPS=%JVM_CONFIG_MAVEN_PROPS%\n-\n-:endReadAdditionalConfig\n-\n-SET MAVEN_JAVA_EXE=\"%JAVA_HOME%\\bin\\java.exe\"\n-set WRAPPER_JAR=\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.jar\"\n-set WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain\n-\n-set DOWNLOAD_URL=\"https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar\"\n-\n-FOR /F \"tokens=1,2 delims==\" %%A IN (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.properties\") DO (\n-    IF \"%%A\"==\"wrapperUrl\" SET DOWNLOAD_URL=%%B\n-)\n-\n-@REM Extension to allow automatically downloading the maven-wrapper.jar from Maven-central\n-@REM This allows using the maven wrapper in projects that prohibit checking in binary data.\n-if exist %WRAPPER_JAR% (\n-    if \"%MVNW_VERBOSE%\" == \"true\" (\n-        echo Found %WRAPPER_JAR%\n-    )\n-) else (\n-    if not \"%MVNW_REPOURL%\" == \"\" (\n-        SET DOWNLOAD_URL=\"%MVNW_REPOURL%/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar\"\n-    )\n-    if \"%MVNW_VERBOSE%\" == \"true\" (\n-        echo Couldn't find %WRAPPER_JAR%, downloading it ...\n-        echo Downloading from: %DOWNLOAD_URL%\n-    )\n-\n-    powershell -Command \"&{\"^\n-\t\t\"$webclient = new-object System.Net.WebClient;\"^\n-\t\t\"if (-not ([string]::IsNullOrEmpty('%MVNW_USERNAME%') -and [string]::IsNullOrEmpty('%MVNW_PASSWORD%'))) {\"^\n-\t\t\"$webclient.Credentials = new-object System.Net.NetworkCredential('%MVNW_USERNAME%', '%MVNW_PASSWORD%');\"^\n-\t\t\"}\"^\n-\t\t\"[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; $webclient.DownloadFile('%DOWNLOAD_URL%', '%WRAPPER_JAR%')\"^\n-\t\t\"}\"\n-    if \"%MVNW_VERBOSE%\" == \"true\" (\n-        echo Finished downloading %WRAPPER_JAR%\n-    )\n-)\n-@REM End of extension\n-\n-@REM Provide a \"standardized\" way to retrieve the CLI args that will\n-@REM work with both Windows and non-Windows executions.\n-set MAVEN_CMD_LINE_ARGS=%*\n-\n-%MAVEN_JAVA_EXE% %JVM_CONFIG_MAVEN_PROPS% %MAVEN_OPTS% %MAVEN_DEBUG_OPTS% -classpath %WRAPPER_JAR% \"-Dmaven.multiModuleProjectDirectory=%MAVEN_PROJECTBASEDIR%\" %WRAPPER_LAUNCHER% %MAVEN_CONFIG% %*\n-if ERRORLEVEL 1 goto error\n-goto end\n-\n-:error\n-set ERROR_CODE=1\n-\n-:end\n-@endlocal & set ERROR_CODE=%ERROR_CODE%\n-\n-if not \"%MAVEN_SKIP_RC%\" == \"\" goto skipRcPost\n-@REM check for post script, once with legacy .bat ending and once with .cmd ending\n-if exist \"%HOME%\\mavenrc_post.bat\" call \"%HOME%\\mavenrc_post.bat\"\n-if exist \"%HOME%\\mavenrc_post.cmd\" call \"%HOME%\\mavenrc_post.cmd\"\n-:skipRcPost\n-\n-@REM pause the script if MAVEN_BATCH_PAUSE is set to 'on'\n-if \"%MAVEN_BATCH_PAUSE%\" == \"on\" pause\n-\n-if \"%MAVEN_TERMINATE_CMD%\" == \"on\" exit %ERROR_CODE%\n-\n-exit /B %ERROR_CODE%"
  },
  {
    "sha": "5079f480b0ab6602841644222e7f7c31ac280e3e",
    "filename": "cart-server/pom.xml",
    "status": "removed",
    "additions": 0,
    "deletions": 57,
    "changes": 57,
    "blob_url": "https://github.com/nemtsevonline/Java10.1/blob/c4311838c16cd2226805daf1bf20d5350cd4b487/cart-server/pom.xml",
    "raw_url": "https://github.com/nemtsevonline/Java10.1/raw/c4311838c16cd2226805daf1bf20d5350cd4b487/cart-server/pom.xml",
    "contents_url": "https://api.github.com/repos/nemtsevonline/Java10.1/contents/cart-server/pom.xml?ref=c4311838c16cd2226805daf1bf20d5350cd4b487",
    "patch": "@@ -1,57 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n-    <modelVersion>4.0.0</modelVersion>\n-    <parent>\n-        <groupId>org.springframework.boot</groupId>\n-        <artifactId>spring-boot-starter-parent</artifactId>\n-        <version>2.4.0</version>\n-        <relativePath/> <!-- lookup parent from repository -->\n-    </parent>\n-    <groupId>ru.netology</groupId>\n-    <artifactId>cart-server</artifactId>\n-    <version>0.0.1-SNAPSHOT</version>\n-    <name>cart-server</name>\n-    <description>Cart Server</description>\n-\n-    <properties>\n-        <java.version>11</java.version>\n-    </properties>\n-\n-    <dependencies>\n-        <dependency>\n-            <groupId>org.springframework.boot</groupId>\n-            <artifactId>spring-boot-starter-data-jpa</artifactId>\n-        </dependency>\n-        <dependency>\n-            <groupId>org.springframework.boot</groupId>\n-            <artifactId>spring-boot-starter-web</artifactId>\n-        </dependency>\n-\n-        <dependency>\n-            <groupId>com.h2database</groupId>\n-            <artifactId>h2</artifactId>\n-            <scope>runtime</scope>\n-        </dependency>\n-        <dependency>\n-            <groupId>org.projectlombok</groupId>\n-            <artifactId>lombok</artifactId>\n-            <optional>true</optional>\n-        </dependency>\n-        <dependency>\n-            <groupId>org.springframework.boot</groupId>\n-            <artifactId>spring-boot-starter-test</artifactId>\n-            <scope>test</scope>\n-        </dependency>\n-    </dependencies>\n-\n-    <build>\n-        <plugins>\n-            <plugin>\n-                <groupId>org.springframework.boot</groupId>\n-                <artifactId>spring-boot-maven-plugin</artifactId>\n-            </plugin>\n-        </plugins>\n-    </build>\n-\n-</project>"
  },
  {
    "sha": "cfd2e78769d800439ff397470a68b386569288d9",
    "filename": "cart-server/src/main/java/ru/netology/cartserver/CartServerApplication.java",
    "status": "removed",
    "additions": 0,
    "deletions": 13,
    "changes": 13,
    "blob_url": "https://github.com/nemtsevonline/Java10.1/blob/c4311838c16cd2226805daf1bf20d5350cd4b487/cart-server/src/main/java/ru/netology/cartserver/CartServerApplication.java",
    "raw_url": "https://github.com/nemtsevonline/Java10.1/raw/c4311838c16cd2226805daf1bf20d5350cd4b487/cart-server/src/main/java/ru/netology/cartserver/CartServerApplication.java",
    "contents_url": "https://api.github.com/repos/nemtsevonline/Java10.1/contents/cart-server/src/main/java/ru/netology/cartserver/CartServerApplication.java?ref=c4311838c16cd2226805daf1bf20d5350cd4b487",
    "patch": "@@ -1,13 +0,0 @@\n-package ru.netology.cartserver;\n-\n-import org.springframework.boot.SpringApplication;\n-import org.springframework.boot.autoconfigure.SpringBootApplication;\n-\n-@SpringBootApplication\n-public class CartServerApplication {\n-\n-  public static void main(String[] args) {\n-    SpringApplication.run(CartServerApplication.class, args);\n-  }\n-\n-}"
  },
  {
    "sha": "162194f8c907a3566f03678b1427d186f87e8b4f",
    "filename": "cart-server/src/main/java/ru/netology/cartserver/controller/CartController.java",
    "status": "removed",
    "additions": 0,
    "deletions": 28,
    "changes": 28,
    "blob_url": "https://github.com/nemtsevonline/Java10.1/blob/c4311838c16cd2226805daf1bf20d5350cd4b487/cart-server/src/main/java/ru/netology/cartserver/controller/CartController.java",
    "raw_url": "https://github.com/nemtsevonline/Java10.1/raw/c4311838c16cd2226805daf1bf20d5350cd4b487/cart-server/src/main/java/ru/netology/cartserver/controller/CartController.java",
    "contents_url": "https://api.github.com/repos/nemtsevonline/Java10.1/contents/cart-server/src/main/java/ru/netology/cartserver/controller/CartController.java?ref=c4311838c16cd2226805daf1bf20d5350cd4b487",
    "patch": "@@ -1,28 +0,0 @@\n-package ru.netology.cartserver.controller;\n-\n-import lombok.RequiredArgsConstructor;\n-import org.springframework.web.bind.annotation.*;\n-import ru.netology.cartserver.domain.PurchaseItem;\n-import ru.netology.cartserver.service.CartService;\n-\n-@RestController\n-@RequestMapping(\"/api/cart\")\n-@RequiredArgsConstructor\n-public class CartController {\n-  private final CartService service;\n-\n-  @PostMapping\n-  public void add(@RequestBody PurchaseItem item) {\n-    service.add(item);\n-  }\n-\n-  @GetMapping\n-  public PurchaseItem[] getAll() {\n-    return service.getAll();\n-  }\n-\n-  @DeleteMapping(\"/{id}\")\n-  public void removeById(@PathVariable int id) {\n-    service.removeById(id);\n-  }\n-}"
  },
  {
    "sha": "e1a6886f73d2ca1978e6a4cff96f94a03ba79fc2",
    "filename": "cart-server/src/main/java/ru/netology/cartserver/domain/PurchaseItem.java",
    "status": "removed",
    "additions": 0,
    "deletions": 22,
    "changes": 22,
    "blob_url": "https://github.com/nemtsevonline/Java10.1/blob/c4311838c16cd2226805daf1bf20d5350cd4b487/cart-server/src/main/java/ru/netology/cartserver/domain/PurchaseItem.java",
    "raw_url": "https://github.com/nemtsevonline/Java10.1/raw/c4311838c16cd2226805daf1bf20d5350cd4b487/cart-server/src/main/java/ru/netology/cartserver/domain/PurchaseItem.java",
    "contents_url": "https://api.github.com/repos/nemtsevonline/Java10.1/contents/cart-server/src/main/java/ru/netology/cartserver/domain/PurchaseItem.java?ref=c4311838c16cd2226805daf1bf20d5350cd4b487",
    "patch": "@@ -1,22 +0,0 @@\n-package ru.netology.cartserver.domain;\n-\n-import lombok.AllArgsConstructor;\n-import lombok.Data;\n-import lombok.NoArgsConstructor;\n-\n-import javax.annotation.processing.Generated;\n-import javax.persistence.*;\n-\n-@NoArgsConstructor\n-@AllArgsConstructor\n-@Data\n-@Entity\n-public class PurchaseItem {\n-  @Id\n-  @GeneratedValue(strategy = GenerationType.IDENTITY)\n-  private int id;\n-  private int productId;\n-  private String productName;\n-  private int productPrice;\n-  private int count;\n-}"
  },
  {
    "sha": "317798dfe72a98410caee5f73fe49a8fd7581076",
    "filename": "cart-server/src/main/java/ru/netology/cartserver/repository/CartRepository.java",
    "status": "removed",
    "additions": 0,
    "deletions": 6,
    "changes": 6,
    "blob_url": "https://github.com/nemtsevonline/Java10.1/blob/c4311838c16cd2226805daf1bf20d5350cd4b487/cart-server/src/main/java/ru/netology/cartserver/repository/CartRepository.java",
    "raw_url": "https://github.com/nemtsevonline/Java10.1/raw/c4311838c16cd2226805daf1bf20d5350cd4b487/cart-server/src/main/java/ru/netology/cartserver/repository/CartRepository.java",
    "contents_url": "https://api.github.com/repos/nemtsevonline/Java10.1/contents/cart-server/src/main/java/ru/netology/cartserver/repository/CartRepository.java?ref=c4311838c16cd2226805daf1bf20d5350cd4b487",
    "patch": "@@ -1,6 +0,0 @@\n-package ru.netology.cartserver.repository;\n-\n-import org.springframework.data.jpa.repository.JpaRepository;\n-import ru.netology.cartserver.domain.PurchaseItem;\n-\n-public interface CartRepository extends JpaRepository<PurchaseItem, Integer> {}"
  },
  {
    "sha": "5f7187ba66f4e7375d406f1178a369de38fae2ea",
    "filename": "cart-server/src/main/java/ru/netology/cartserver/service/CartService.java",
    "status": "removed",
    "additions": 0,
    "deletions": 27,
    "changes": 27,
    "blob_url": "https://github.com/nemtsevonline/Java10.1/blob/c4311838c16cd2226805daf1bf20d5350cd4b487/cart-server/src/main/java/ru/netology/cartserver/service/CartService.java",
    "raw_url": "https://github.com/nemtsevonline/Java10.1/raw/c4311838c16cd2226805daf1bf20d5350cd4b487/cart-server/src/main/java/ru/netology/cartserver/service/CartService.java",
    "contents_url": "https://api.github.com/repos/nemtsevonline/Java10.1/contents/cart-server/src/main/java/ru/netology/cartserver/service/CartService.java?ref=c4311838c16cd2226805daf1bf20d5350cd4b487",
    "patch": "@@ -1,27 +0,0 @@\n-package ru.netology.cartserver.service;\n-\n-import lombok.RequiredArgsConstructor;\n-import org.springframework.stereotype.Service;\n-import ru.netology.cartserver.domain.PurchaseItem;\n-import ru.netology.cartserver.repository.CartRepository;\n-\n-import javax.transaction.Transactional;\n-\n-@Service\n-@Transactional\n-@RequiredArgsConstructor\n-public class CartService {\n-  private final CartRepository repository;\n-\n-  public void add(PurchaseItem item) {\n-    repository.save(item);\n-  }\n-\n-  public PurchaseItem[] getAll() {\n-    return repository.findAll().toArray(new PurchaseItem[]{});\n-  }\n-\n-  public void removeById(int id) {\n-    repository.deleteById(id);\n-  }\n-}"
  },
  {
    "sha": "8b137891791fe96927ad78e64b0aad7bded08bdc",
    "filename": "cart-server/src/main/resources/application.properties",
    "status": "removed",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/nemtsevonline/Java10.1/blob/c4311838c16cd2226805daf1bf20d5350cd4b487/cart-server/src/main/resources/application.properties",
    "raw_url": "https://github.com/nemtsevonline/Java10.1/raw/c4311838c16cd2226805daf1bf20d5350cd4b487/cart-server/src/main/resources/application.properties",
    "contents_url": "https://api.github.com/repos/nemtsevonline/Java10.1/contents/cart-server/src/main/resources/application.properties?ref=c4311838c16cd2226805daf1bf20d5350cd4b487",
    "patch": "@@ -1 +0,0 @@\n-"
  },
  {
    "sha": "6e3322890709fed7677a0b09b429567a3944a2d5",
    "filename": "cart-server/src/test/java/ru/netology/cartserver/CartServerApplicationTests.java",
    "status": "removed",
    "additions": 0,
    "deletions": 13,
    "changes": 13,
    "blob_url": "https://github.com/nemtsevonline/Java10.1/blob/c4311838c16cd2226805daf1bf20d5350cd4b487/cart-server/src/test/java/ru/netology/cartserver/CartServerApplicationTests.java",
    "raw_url": "https://github.com/nemtsevonline/Java10.1/raw/c4311838c16cd2226805daf1bf20d5350cd4b487/cart-server/src/test/java/ru/netology/cartserver/CartServerApplicationTests.java",
    "contents_url": "https://api.github.com/repos/nemtsevonline/Java10.1/contents/cart-server/src/test/java/ru/netology/cartserver/CartServerApplicationTests.java?ref=c4311838c16cd2226805daf1bf20d5350cd4b487",
    "patch": "@@ -1,13 +0,0 @@\n-package ru.netology.cartserver;\n-\n-import org.junit.jupiter.api.Test;\n-import org.springframework.boot.test.context.SpringBootTest;\n-\n-@SpringBootTest\n-class CartServerApplicationTests {\n-\n-  @Test\n-  void contextLoads() {\n-  }\n-\n-}"
  },
  {
    "sha": "078b0e2d2a15f835b596b3b92208486ef1a93e25",
    "filename": "cart-with-mocks/pom.xml",
    "status": "removed",
    "additions": 0,
    "deletions": 54,
    "changes": 54,
    "blob_url": "https://github.com/nemtsevonline/Java10.1/blob/c4311838c16cd2226805daf1bf20d5350cd4b487/cart-with-mocks/pom.xml",
    "raw_url": "https://github.com/nemtsevonline/Java10.1/raw/c4311838c16cd2226805daf1bf20d5350cd4b487/cart-with-mocks/pom.xml",
    "contents_url": "https://api.github.com/repos/nemtsevonline/Java10.1/contents/cart-with-mocks/pom.xml?ref=c4311838c16cd2226805daf1bf20d5350cd4b487",
    "patch": "@@ -1,54 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n-         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n-    <modelVersion>4.0.0</modelVersion>\n-\n-    <groupId>ru.netology</groupId>\n-    <artifactId>cart-with-mocks</artifactId>\n-    <version>1.0-SNAPSHOT</version>\n-\n-    <properties>\n-        <maven.compiler.source>11</maven.compiler.source>\n-        <maven.compiler.target>11</maven.compiler.target>\n-        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n-    </properties>\n-\n-    <dependencies>\n-        <dependency>\n-            <groupId>com.google.code.gson</groupId>\n-            <artifactId>gson</artifactId>\n-            <version>2.8.6</version>\n-        </dependency>\n-        <dependency>\n-            <groupId>org.projectlombok</groupId>\n-            <artifactId>lombok</artifactId>\n-            <version>1.18.16</version>\n-            <scope>provided</scope>\n-        </dependency>\n-        <dependency>\n-            <groupId>org.junit.jupiter</groupId>\n-            <artifactId>junit-jupiter</artifactId>\n-            <version>5.7.0</version>\n-            <scope>test</scope>\n-        </dependency>\n-        <dependency>\n-            <groupId>org.mockito</groupId>\n-            <artifactId>mockito-junit-jupiter</artifactId>\n-            <version>3.6.28</version>\n-            <scope>test</scope>\n-        </dependency>\n-    </dependencies>\n-\n-    <build>\n-        <plugins>\n-            <plugin>\n-                <groupId>org.apache.maven.plugins</groupId>\n-                <artifactId>maven-surefire-plugin</artifactId>\n-                <version>2.22.2</version>\n-            </plugin>\n-        </plugins>\n-    </build>\n-\n-\n-</project>\n\\ No newline at end of file"
  },
  {
    "sha": "e26264f86ebb3c268d46566d513611c7b3e6758b",
    "filename": "cart-with-mocks/src/main/java/ru/netology/Main.java",
    "status": "removed",
    "additions": 0,
    "deletions": 18,
    "changes": 18,
    "blob_url": "https://github.com/nemtsevonline/Java10.1/blob/c4311838c16cd2226805daf1bf20d5350cd4b487/cart-with-mocks/src/main/java/ru/netology/Main.java",
    "raw_url": "https://github.com/nemtsevonline/Java10.1/raw/c4311838c16cd2226805daf1bf20d5350cd4b487/cart-with-mocks/src/main/java/ru/netology/Main.java",
    "contents_url": "https://api.github.com/repos/nemtsevonline/Java10.1/contents/cart-with-mocks/src/main/java/ru/netology/Main.java?ref=c4311838c16cd2226805daf1bf20d5350cd4b487",
    "patch": "@@ -1,18 +0,0 @@\n-package ru.netology;\n-\n-import ru.netology.domain.PurchaseItem;\n-import ru.netology.repository.CartRepository;\n-\n-import java.util.Arrays;\n-\n-public class Main {\n-  public static void main(String[] args) {\n-    // Just simple demo for repository with http client (use server from ../cart-server)\n-    CartRepository repository = new CartRepository(\"http://localhost:8080/api/cart\");\n-    System.out.println(Arrays.toString(repository.findAll()));\n-    repository.save(new PurchaseItem(1, 1, \"first\", 100, 2));\n-    System.out.println(Arrays.toString(repository.findAll()));\n-    repository.removeById(1);\n-    System.out.println(Arrays.toString(repository.findAll()));\n-  }\n-}"
  },
  {
    "sha": "3bee922e638f945d3c0e853fcf75d886cbbce02b",
    "filename": "cart-with-mocks/src/main/java/ru/netology/manager/CartManager.java",
    "status": "removed",
    "additions": 0,
    "deletions": 38,
    "changes": 38,
    "blob_url": "https://github.com/nemtsevonline/Java10.1/blob/c4311838c16cd2226805daf1bf20d5350cd4b487/cart-with-mocks/src/main/java/ru/netology/manager/CartManager.java",
    "raw_url": "https://github.com/nemtsevonline/Java10.1/raw/c4311838c16cd2226805daf1bf20d5350cd4b487/cart-with-mocks/src/main/java/ru/netology/manager/CartManager.java",
    "contents_url": "https://api.github.com/repos/nemtsevonline/Java10.1/contents/cart-with-mocks/src/main/java/ru/netology/manager/CartManager.java?ref=c4311838c16cd2226805daf1bf20d5350cd4b487",
    "patch": "@@ -1,38 +0,0 @@\n-package ru.netology.manager;\n-\n-import ru.netology.domain.PurchaseItem;\n-import ru.netology.repository.CartRepository;\n-\n-public class CartManager {\n-  private CartRepository repository;\n-\n-  public CartManager(CartRepository repository) {\n-    this.repository = repository;\n-  }\n-\n-  public void add(PurchaseItem item) {\n-    repository.save(item);\n-  }\n-\n-  public PurchaseItem[] getAll() {\n-    PurchaseItem[] items = repository.findAll();\n-    PurchaseItem[] result = new PurchaseItem[items.length];\n-    for (int i = 0; i < result.length; i++) {\n-      int index = items.length - i - 1;\n-      result[i] = items[index];\n-    }\n-    return result;\n-  }\n-\n-  public void removeById(int id) {\n-    repository.removeById(id);\n-  }\n-\n-  public int sum() {\n-    int result = 0;\n-    for (PurchaseItem item : getAll()) {\n-      result = result + item.getProductPrice() * item.getCount();\n-    }\n-    return result;\n-  }\n-}"
  },
  {
    "sha": "37a5277ed0384c9f0eda1f523a95ac7903cc1ec5",
    "filename": "cart-with-mocks/src/main/java/ru/netology/repository/CartRepository.java",
    "status": "removed",
    "additions": 0,
    "deletions": 58,
    "changes": 58,
    "blob_url": "https://github.com/nemtsevonline/Java10.1/blob/c4311838c16cd2226805daf1bf20d5350cd4b487/cart-with-mocks/src/main/java/ru/netology/repository/CartRepository.java",
    "raw_url": "https://github.com/nemtsevonline/Java10.1/raw/c4311838c16cd2226805daf1bf20d5350cd4b487/cart-with-mocks/src/main/java/ru/netology/repository/CartRepository.java",
    "contents_url": "https://api.github.com/repos/nemtsevonline/Java10.1/contents/cart-with-mocks/src/main/java/ru/netology/repository/CartRepository.java?ref=c4311838c16cd2226805daf1bf20d5350cd4b487",
    "patch": "@@ -1,58 +0,0 @@\n-package ru.netology.repository;\n-\n-import com.google.gson.Gson;\n-import ru.netology.domain.PurchaseItem;\n-\n-import java.net.URI;\n-import java.net.http.HttpClient;\n-import java.net.http.HttpRequest;\n-import java.net.http.HttpResponse;\n-\n-public class CartRepository {\n-  private String dbUrl;\n-  private HttpClient client = HttpClient.newHttpClient();\n-  private Gson gson = new Gson();\n-\n-  public CartRepository(String dbUrl) {\n-    this.dbUrl = dbUrl;\n-  }\n-\n-  public void save(PurchaseItem item) {\n-    HttpRequest request = HttpRequest.newBuilder(URI.create(dbUrl))\n-        .header(\"Content-Type\", \"application/json\")\n-        .POST(HttpRequest.BodyPublishers.ofString(gson.toJson(item)))\n-        .build();\n-    makeRequest(request);\n-  }\n-\n-  public PurchaseItem[] findAll() {\n-    HttpRequest request = HttpRequest.newBuilder(URI.create(dbUrl))\n-        .header(\"Accept\", \"application/json\")\n-        .GET()\n-        .build();\n-    HttpResponse<String> response = makeRequest(request);\n-    return gson.fromJson(response.body(), PurchaseItem[].class);\n-  }\n-\n-  public void removeById(int id) {\n-    HttpRequest request = HttpRequest.newBuilder(URI.create(dbUrl + \"/\" + id))\n-        .header(\"Content-Type\", \"application/json\")\n-        .DELETE()\n-        .build();\n-    makeRequest(request);\n-  }\n-\n-  private HttpResponse<String> makeRequest(HttpRequest request) {\n-    try {\n-      HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());\n-      if (response.statusCode() < 200 || response.statusCode() > 299) {\n-        throw new RuntimeException(\"request didn't complete successfully\");\n-      }\n-\n-      return response;\n-    } catch (Exception e) {\n-      throw new RuntimeException(e);\n-    }\n-  }\n-}\n-"
  },
  {
    "sha": "1c12b3ad53e12e3aefde34561c00e07546895c7e",
    "filename": "cart-with-mocks/src/test/java/ru/netology/manager/CartManagerTestNonEmpty.java",
    "status": "removed",
    "additions": 0,
    "deletions": 39,
    "changes": 39,
    "blob_url": "https://github.com/nemtsevonline/Java10.1/blob/c4311838c16cd2226805daf1bf20d5350cd4b487/cart-with-mocks/src/test/java/ru/netology/manager/CartManagerTestNonEmpty.java",
    "raw_url": "https://github.com/nemtsevonline/Java10.1/raw/c4311838c16cd2226805daf1bf20d5350cd4b487/cart-with-mocks/src/test/java/ru/netology/manager/CartManagerTestNonEmpty.java",
    "contents_url": "https://api.github.com/repos/nemtsevonline/Java10.1/contents/cart-with-mocks/src/test/java/ru/netology/manager/CartManagerTestNonEmpty.java?ref=c4311838c16cd2226805daf1bf20d5350cd4b487",
    "patch": "@@ -1,39 +0,0 @@\n-package ru.netology.manager;\n-\n-import org.junit.jupiter.api.Test;\n-import org.junit.jupiter.api.extension.ExtendWith;\n-import org.mockito.InjectMocks;\n-import org.mockito.Mock;\n-import org.mockito.junit.jupiter.MockitoExtension;\n-import ru.netology.domain.PurchaseItem;\n-import ru.netology.repository.CartRepository;\n-\n-import static org.junit.jupiter.api.Assertions.assertEquals;\n-import static org.mockito.Mockito.doReturn;\n-import static org.mockito.Mockito.verify;\n-\n-@ExtendWith(MockitoExtension.class)\n-public class CartManagerTestNonEmpty {\n-  @Mock\n-  private CartRepository repository;\n-  @InjectMocks\n-  private CartManager manager;\n-  private PurchaseItem first = new PurchaseItem(1, 1, \"first\", 100, 2);\n-  private PurchaseItem second = new PurchaseItem(2, 2, \"second\", 10, 1);\n-  private PurchaseItem third = new PurchaseItem(3, 3, \"third\", 1, 2);\n-\n-  @Test\n-  public void shouldCalculateSum() {\n-    // настройка заглушки\n-    PurchaseItem[] returned = new PurchaseItem[]{first, second, third};\n-    doReturn(returned).when(repository).findAll();\n-\n-    int expected = 212;\n-    int actual = manager.sum();\n-    assertEquals(expected, actual);\n-\n-    // удостоверяемся, что заглушка была вызвана\n-    // но это уже проверка \"внутренней\" реализации\n-    verify(repository).findAll();\n-  }\n-}"
  },
  {
    "sha": "d8382e7291f768a51028556a8c0275949865dcad",
    "filename": "cart/src/test/java/ru/netology/manager/CartManagerTestNonEmpty.java",
    "status": "removed",
    "additions": 0,
    "deletions": 48,
    "changes": 48,
    "blob_url": "https://github.com/nemtsevonline/Java10.1/blob/c4311838c16cd2226805daf1bf20d5350cd4b487/cart/src/test/java/ru/netology/manager/CartManagerTestNonEmpty.java",
    "raw_url": "https://github.com/nemtsevonline/Java10.1/raw/c4311838c16cd2226805daf1bf20d5350cd4b487/cart/src/test/java/ru/netology/manager/CartManagerTestNonEmpty.java",
    "contents_url": "https://api.github.com/repos/nemtsevonline/Java10.1/contents/cart/src/test/java/ru/netology/manager/CartManagerTestNonEmpty.java?ref=c4311838c16cd2226805daf1bf20d5350cd4b487",
    "patch": "@@ -1,48 +0,0 @@\n-package ru.netology.manager;\n-\n-import org.junit.jupiter.api.Test;\n-import ru.netology.domain.PurchaseItem;\n-import ru.netology.manager.CartManager;\n-\n-import static org.junit.jupiter.api.Assertions.*;\n-\n-public class CartManagerTestNonEmpty {\n-  @Test\n-  public void shouldRemoveIfExists() {\n-    CartManager manager = new CartManager();\n-    int idToRemove = 1;\n-    PurchaseItem first = new PurchaseItem(1, 1, \"first\", 1, 1);\n-    PurchaseItem second = new PurchaseItem(2, 2, \"second\", 1, 1);\n-    PurchaseItem third = new PurchaseItem(3, 3, \"third\", 1, 1);\n-    manager.add(first);\n-    manager.add(second);\n-    manager.add(third);\n-\n-    manager.removeById(idToRemove);\n-\n-    PurchaseItem[] actual = manager.getAll();\n-    PurchaseItem[] expected = new PurchaseItem[]{third, second};\n-\n-//    assertEquals(expected, actual);\n-    assertArrayEquals(expected, actual);\n-  }\n-\n-  @Test\n-  public void shouldNotRemoveIfNotExists() {\n-    CartManager manager = new CartManager();\n-    int idToRemove = 4;\n-    PurchaseItem first = new PurchaseItem(1, 1, \"first\", 1, 1);\n-    PurchaseItem second = new PurchaseItem(2, 2, \"second\", 1, 1);\n-    PurchaseItem third = new PurchaseItem(3, 3, \"third\", 1, 1);\n-    manager.add(first);\n-    manager.add(second);\n-    manager.add(third);\n-\n-    manager.removeById(idToRemove);\n-\n-    PurchaseItem[] actual = manager.getAll();\n-    PurchaseItem[] expected = new PurchaseItem[]{third, second, first};\n-\n-    assertArrayEquals(expected, actual);\n-  }\n-}\n\\ No newline at end of file"
  },
  {
    "sha": "999db31ce6bf72eab8ecfddb68bf631255b5002b",
    "filename": "cart/src/test/java/ru/netology/manager/CartManagerTestNonEmptyWithSetup.java",
    "status": "removed",
    "additions": 0,
    "deletions": 46,
    "changes": 46,
    "blob_url": "https://github.com/nemtsevonline/Java10.1/blob/c4311838c16cd2226805daf1bf20d5350cd4b487/cart/src/test/java/ru/netology/manager/CartManagerTestNonEmptyWithSetup.java",
    "raw_url": "https://github.com/nemtsevonline/Java10.1/raw/c4311838c16cd2226805daf1bf20d5350cd4b487/cart/src/test/java/ru/netology/manager/CartManagerTestNonEmptyWithSetup.java",
    "contents_url": "https://api.github.com/repos/nemtsevonline/Java10.1/contents/cart/src/test/java/ru/netology/manager/CartManagerTestNonEmptyWithSetup.java?ref=c4311838c16cd2226805daf1bf20d5350cd4b487",
    "patch": "@@ -1,46 +0,0 @@\n-package ru.netology.manager;\n-\n-import org.junit.jupiter.api.BeforeEach;\n-import org.junit.jupiter.api.Test;\n-import ru.netology.domain.PurchaseItem;\n-import ru.netology.manager.CartManager;\n-\n-import static org.junit.jupiter.api.Assertions.assertArrayEquals;\n-\n-public class CartManagerTestNonEmptyWithSetup {\n-  private CartManager manager = new CartManager();\n-  private PurchaseItem first = new PurchaseItem(1, 1, \"first\", 1, 1);\n-  private PurchaseItem second = new PurchaseItem(2, 2, \"second\", 1, 1);\n-  private PurchaseItem third = new PurchaseItem(3, 3, \"third\", 1, 1);\n-\n-  @BeforeEach\n-  public void setUp() {\n-    manager.add(first);\n-    manager.add(second);\n-    manager.add(third);\n-  }\n-\n-  @Test\n-  public void shouldRemoveIfExists() {\n-    int idToRemove = 1;\n-    manager.removeById(idToRemove);\n-\n-    PurchaseItem[] actual = manager.getAll();\n-    PurchaseItem[] expected = new PurchaseItem[]{third, second};\n-\n-//    assertEquals(expected, actual);\n-    assertArrayEquals(expected, actual);\n-  }\n-\n-  @Test\n-  public void shouldNotRemoveIfNotExists() {\n-    int idToRemove = 4;\n-\n-    manager.removeById(idToRemove);\n-\n-    PurchaseItem[] actual = manager.getAll();\n-    PurchaseItem[] expected = new PurchaseItem[]{third, second, first};\n-\n-    assertArrayEquals(expected, actual);\n-  }\n-}\n\\ No newline at end of file"
  },
  {
    "sha": "dceb7f28b2d6fcecacf60baa8233da20d67174cc",
    "filename": "pom.xml",
    "status": "renamed",
    "additions": 39,
    "deletions": 8,
    "changes": 47,
    "blob_url": "https://github.com/nemtsevonline/Java10.1/blob/d878ecd1a8655437961c9a82a3d0b2683d3fe4de/pom.xml",
    "raw_url": "https://github.com/nemtsevonline/Java10.1/raw/d878ecd1a8655437961c9a82a3d0b2683d3fe4de/pom.xml",
    "contents_url": "https://api.github.com/repos/nemtsevonline/Java10.1/contents/pom.xml?ref=d878ecd1a8655437961c9a82a3d0b2683d3fe4de",
    "patch": "@@ -5,7 +5,7 @@\n     <modelVersion>4.0.0</modelVersion>\n \n     <groupId>ru.netology</groupId>\n-    <artifactId>cart</artifactId>\n+    <artifactId>afisha</artifactId>\n     <version>1.0-SNAPSHOT</version>\n \n     <properties>\n@@ -15,18 +15,18 @@\n     </properties>\n \n     <dependencies>\n-        <dependency>\n-            <groupId>org.projectlombok</groupId>\n-            <artifactId>lombok</artifactId>\n-            <version>1.18.12</version>\n-            <scope>provided</scope>\n-        </dependency>\n         <dependency>\n             <groupId>org.junit.jupiter</groupId>\n             <artifactId>junit-jupiter</artifactId>\n             <version>5.4.2</version>\n             <scope>test</scope>\n         </dependency>\n+        <dependency>\n+            <groupId>org.projectlombok</groupId>\n+            <artifactId>lombok</artifactId>\n+            <version>1.18.12</version>\n+            <scope>provided</scope>\n+        </dependency>\n     </dependencies>\n \n     <build>\n@@ -35,9 +35,40 @@\n                 <groupId>org.apache.maven.plugins</groupId>\n                 <artifactId>maven-surefire-plugin</artifactId>\n                 <version>2.22.2</version>\n+                <configuration>\n+                    <failIfNoTests>true</failIfNoTests>\n+                </configuration>\n+            </plugin>\n+            <plugin>\n+                <groupId>org.jacoco</groupId>\n+                <artifactId>jacoco-maven-plugin</artifactId>\n+                <version>0.8.5</version>\n+                <configuration>\n+                    <excludes>\n+                        <exclude>**/ru/netology/domain/*Item.class</exclude>\n+                        <exclude>**/ru/netology/manager/Cart*.class</exclude>\n+                    </excludes>\n+                </configuration>\n+                <executions>\n+                    <execution>\n+                        <id>prepare-agent</id>\n+                        <phase>initialize</phase>\n+                        <goals>\n+                            <goal>prepare-agent</goal>\n+                        </goals>\n+                    </execution>\n+                    <execution>\n+                        <id>report</id>\n+                        <phase>verify</phase>\n+                        <goals>\n+                            <goal>report</goal>\n+                        </goals>\n+                    </execution>\n+\n+                </executions>\n             </plugin>\n+\n         </plugins>\n     </build>\n \n-\n </project>\n\\ No newline at end of file",
    "previous_filename": "cart/pom.xml"
  },
  {
    "sha": "464b1e7d1ed22460e628276d41c868c9d5c52fcc",
    "filename": "src/main/java/ru/netology/domain/AfishaItem.java",
    "status": "renamed",
    "additions": 6,
    "deletions": 6,
    "changes": 12,
    "blob_url": "https://github.com/nemtsevonline/Java10.1/blob/d878ecd1a8655437961c9a82a3d0b2683d3fe4de/src/main/java/ru/netology/domain/AfishaItem.java",
    "raw_url": "https://github.com/nemtsevonline/Java10.1/raw/d878ecd1a8655437961c9a82a3d0b2683d3fe4de/src/main/java/ru/netology/domain/AfishaItem.java",
    "contents_url": "https://api.github.com/repos/nemtsevonline/Java10.1/contents/src/main/java/ru/netology/domain/AfishaItem.java?ref=d878ecd1a8655437961c9a82a3d0b2683d3fe4de",
    "patch": "@@ -7,10 +7,10 @@\n @NoArgsConstructor\n @AllArgsConstructor\n @Data\n-public class PurchaseItem {\n-  private int id;\n-  private int productId;\n-  private String productName;\n-  private int productPrice;\n-  private int count;\n+public class AfishaItem {\n+    private int id;\n+    private String movieName;\n+    private String pictireUrl;\n+    private String genre;\n+\n }",
    "previous_filename": "cart/src/main/java/ru/netology/domain/PurchaseItem.java"
  },
  {
    "sha": "3bc5b9ca67fe94b83aeff69ecd68f84222128d40",
    "filename": "src/main/java/ru/netology/domain/PurchaseItem.java",
    "status": "renamed",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/nemtsevonline/Java10.1/blob/d878ecd1a8655437961c9a82a3d0b2683d3fe4de/src/main/java/ru/netology/domain/PurchaseItem.java",
    "raw_url": "https://github.com/nemtsevonline/Java10.1/raw/d878ecd1a8655437961c9a82a3d0b2683d3fe4de/src/main/java/ru/netology/domain/PurchaseItem.java",
    "contents_url": "https://api.github.com/repos/nemtsevonline/Java10.1/contents/src/main/java/ru/netology/domain/PurchaseItem.java?ref=d878ecd1a8655437961c9a82a3d0b2683d3fe4de",
    "previous_filename": "cart-with-mocks/src/main/java/ru/netology/domain/PurchaseItem.java"
  },
  {
    "sha": "ec2310503c7256317911d9e37b4a7383dc3d10ae",
    "filename": "src/main/java/ru/netology/manager/AfishaManager.java",
    "status": "added",
    "additions": 42,
    "deletions": 0,
    "changes": 42,
    "blob_url": "https://github.com/nemtsevonline/Java10.1/blob/d878ecd1a8655437961c9a82a3d0b2683d3fe4de/src/main/java/ru/netology/manager/AfishaManager.java",
    "raw_url": "https://github.com/nemtsevonline/Java10.1/raw/d878ecd1a8655437961c9a82a3d0b2683d3fe4de/src/main/java/ru/netology/manager/AfishaManager.java",
    "contents_url": "https://api.github.com/repos/nemtsevonline/Java10.1/contents/src/main/java/ru/netology/manager/AfishaManager.java?ref=d878ecd1a8655437961c9a82a3d0b2683d3fe4de",
    "patch": "@@ -0,0 +1,42 @@\n+package ru.netology.manager;\n+\n+import ru.netology.domain.AfishaItem;\n+\n+public class AfishaManager {\n+\n+    private AfishaItem[] items = new AfishaItem[0];\n+    private int outItemCount = 10;\n+\n+    public AfishaManager() {\n+    }\n+\n+    public AfishaManager(int outItemCount) {\n+        if (outItemCount >= 0) {\n+            this.outItemCount = outItemCount;\n+        }\n+    }\n+\n+    public AfishaItem[] getLast() {\n+        int count = items.length > outItemCount ? outItemCount : items.length;\n+        AfishaItem[] result = new AfishaItem[count];\n+        for (int i = 0; i < count; i++) {\n+            int index = items.length - i - 1;\n+            result[i] = items[index];\n+        }\n+        return result;\n+    }\n+\n+    public AfishaItem[] getAll() {\n+        return items;\n+    }\n+\n+    public void add(AfishaItem item) {\n+        int length = items.length + 1;\n+        AfishaItem[] tmp = new AfishaItem[length];\n+        System.arraycopy(items, 0, tmp, 0, items.length);\n+        int lastIndex = tmp.length - 1;\n+        tmp[lastIndex] = item;\n+        items = tmp;\n+    }\n+\n+}"
  },
  {
    "sha": "4da613024056dc112d030e33afa4c4e4c543c1ab",
    "filename": "src/main/java/ru/netology/manager/CartManager.java",
    "status": "renamed",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/nemtsevonline/Java10.1/blob/d878ecd1a8655437961c9a82a3d0b2683d3fe4de/src/main/java/ru/netology/manager/CartManager.java",
    "raw_url": "https://github.com/nemtsevonline/Java10.1/raw/d878ecd1a8655437961c9a82a3d0b2683d3fe4de/src/main/java/ru/netology/manager/CartManager.java",
    "contents_url": "https://api.github.com/repos/nemtsevonline/Java10.1/contents/src/main/java/ru/netology/manager/CartManager.java?ref=d878ecd1a8655437961c9a82a3d0b2683d3fe4de",
    "previous_filename": "cart/src/main/java/ru/netology/manager/CartManager.java"
  },
  {
    "sha": "ffbe9c16683ddc290765e7e7eeed5c6e56b4bfca",
    "filename": "src/test/java/ru/netology/manager/AfishaManagerTest.java",
    "status": "added",
    "additions": 111,
    "deletions": 0,
    "changes": 111,
    "blob_url": "https://github.com/nemtsevonline/Java10.1/blob/d878ecd1a8655437961c9a82a3d0b2683d3fe4de/src/test/java/ru/netology/manager/AfishaManagerTest.java",
    "raw_url": "https://github.com/nemtsevonline/Java10.1/raw/d878ecd1a8655437961c9a82a3d0b2683d3fe4de/src/test/java/ru/netology/manager/AfishaManagerTest.java",
    "contents_url": "https://api.github.com/repos/nemtsevonline/Java10.1/contents/src/test/java/ru/netology/manager/AfishaManagerTest.java?ref=d878ecd1a8655437961c9a82a3d0b2683d3fe4de",
    "patch": "@@ -0,0 +1,111 @@\n+package ru.netology.manager;\n+\n+import org.junit.jupiter.api.Test;\n+import ru.netology.domain.AfishaItem;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+class AfishaManagerTest {\n+\n+    private AfishaManager manager;\n+    private AfishaItem item1 = new AfishaItem(1, \"first film\", \"http://website\", \"comedy\");\n+    private AfishaItem item2 = new AfishaItem(2, \"second film\", \"http://website\", \"thriller\");\n+    private AfishaItem item3 = new AfishaItem(3, \"third film\", \"http://website\", \"comedy\");\n+    private AfishaItem item4 = new AfishaItem(4, \"fourth film\", \"http://website\", \"thriller\");\n+    private AfishaItem item5 = new AfishaItem(5, \"fifth film\", \"http://website\", \"comedy\");\n+    private AfishaItem item6 = new AfishaItem(6, \"sixth film\", \"http://website\", \"thriller\");\n+    private AfishaItem item7 = new AfishaItem(7, \"seventh film\", \"http://website\", \"comedy\");\n+    private AfishaItem item8 = new AfishaItem(8, \"eigth film\", \"http://website\", \"thriller\");\n+    private AfishaItem item9 = new AfishaItem(9, \"ninth film\", \"http://website\", \"comedy\");\n+    private AfishaItem item10 = new AfishaItem(10, \"tenth film\", \"http://website\", \"thriller\");\n+    private AfishaItem item11 = new AfishaItem(11, \"last film\", \"http://website\", \"comedy\");\n+\n+    private void fillFirstData() {\n+        manager.add(item1);\n+        manager.add(item2);\n+        manager.add(item3);\n+        manager.add(item4);\n+        manager.add(item5);\n+        manager.add(item6);\n+        manager.add(item7);\n+        manager.add(item8);\n+        manager.add(item9);\n+        manager.add(item10);\n+        manager.add(item11);\n+    }\n+\n+    @Test\n+    void getLastLessZeroOutCount() {\n+        manager = new AfishaManager(-1);\n+        fillFirstData();\n+\n+        AfishaItem[] expected = new AfishaItem[]{item11, item10, item9, item8, item7, item6, item5, item4, item3, item2};\n+        AfishaItem[] actual = manager.getLast();\n+\n+        assertArrayEquals(expected, actual);\n+    }\n+\n+    @Test\n+    void getLastZeroOutCount() {\n+        manager = new AfishaManager(0);\n+        fillFirstData();\n+\n+        AfishaItem[] expected = new AfishaItem[0];\n+        AfishaItem[] actual = manager.getLast();\n+\n+        assertArrayEquals(expected, actual);\n+    }\n+\n+    @Test\n+    void getLastLessOutCount() {\n+        manager = new AfishaManager();\n+        manager.add(item1);\n+        manager.add(item2);\n+        manager.add(item3);\n+        manager.add(item4);\n+        manager.add(item5);\n+\n+        AfishaItem[] expected = new AfishaItem[]{item5, item4, item3, item2, item1};\n+        AfishaItem[] actual = manager.getLast();\n+\n+        assertArrayEquals(expected, actual);\n+    }\n+\n+    @Test\n+    void getLastEqualOutCount() {\n+        manager = new AfishaManager(11);\n+        fillFirstData();\n+\n+        AfishaItem[] allItems = manager.getAll();\n+        AfishaItem[] expected = new AfishaItem[allItems.length];\n+        for (int i = 0; i < allItems.length; i++) {\n+            expected[i] = allItems[allItems.length - i - 1];\n+        }\n+\n+        AfishaItem[] actual = manager.getLast();\n+\n+        assertArrayEquals(expected, actual);\n+    }\n+\n+    @Test\n+    void getLastMoreOutCount() {\n+        manager = new AfishaManager(3);\n+        fillFirstData();\n+\n+        AfishaItem[] expected = new AfishaItem[]{item11, item10, item9};\n+        AfishaItem[] actual = manager.getLast();\n+\n+        assertArrayEquals(expected, actual);\n+    }\n+\n+    @Test\n+    void add() {\n+        manager = new AfishaManager(5);\n+        fillFirstData();\n+\n+        AfishaItem[] actual = manager.getAll();\n+        AfishaItem[] expected = new AfishaItem[]{item1, item2, item3, item4, item5, item6, item7, item8, item9, item10, item11};\n+\n+        assertArrayEquals(expected, actual);\n+    }\n+}\n\\ No newline at end of file"
  }
]
