[
  {
    "sha": "291706e8f1521668969456c75c167aa6356844df",
    "filename": "README-zh.md",
    "status": "modified",
    "additions": 74,
    "deletions": 33,
    "changes": 107,
    "blob_url": "https://github.com/Meituan-Dianping/Robust/blob/cb210fb1be19bfb2bb53a9cb92f36eeae8874c45/README-zh.md",
    "raw_url": "https://github.com/Meituan-Dianping/Robust/raw/cb210fb1be19bfb2bb53a9cb92f36eeae8874c45/README-zh.md",
    "contents_url": "https://api.github.com/repos/Meituan-Dianping/Robust/contents/README-zh.md?ref=cb210fb1be19bfb2bb53a9cb92f36eeae8874c45",
    "patch": "@@ -6,9 +6,9 @@\n \n \n  Robust是新一代热更新系统，无差别兼容Android2.3-10版本；无需重启补丁实时生效，快速修复线上问题，补丁修补成功率高达99.9%。\n- \n+\n  [English Introduction](README.md)\n- \n+\n   关于如何自定义以及常见问题的解决，请参看 [Wiki](https://github.com/Meituan-Dianping/Robust/wiki)\n \n # 环境\n@@ -18,7 +18,7 @@\n  * Java 1.7 +\n \n # 使用方法\n-  \n+\n  1. 在App的build.gradle，加入如下依赖\n \n \t```java\n@@ -32,7 +32,7 @@\n \t\t\n \t```\n  2. 在整个项目的build.gradle加入classpath\n- \n+\n \t```java\n \t buildscript {\n \t    repositories {\n@@ -45,7 +45,7 @@\n \t}\n \t```\n 3. 在项目的src同级目录下配置robust.xml文件，具体项请参考DEMO**app/robust.xml**\n- \n+\n # 优势\n \n * 支持Android2.3-10版本\n@@ -63,8 +63,8 @@\n }\n \n # AutoPatch\n- \n- \n+\n+\n Robust补丁自动化，为Robust自动生成补丁，使用者只需要提交修改完bug后的代码，运行和线上apk打包同样的gradle命令即可，会在项目的app/build/outputs/robust目录下生成补丁。更多自动化补丁信息请参考：[Android热更新方案Robust开源，新增自动化补丁工具](http://tech.meituan.com/android_autopatch.html) 。\n \n # 使用方法\n@@ -112,31 +112,72 @@ Robust补丁自动化，为Robust自动生成补丁，使用者只需要提交\n 5. 补丁制作成功后会停止构建apk，出现类似于如下的提示，表示补丁生成成功\n ![补丁制作成功图片](images/patchsuccess_cn.png)\n \n-# 样例使用：\n-1. 生成样例apk，执行gradle命令：\n+# 样例使用\n \n-\t```java\n-\t./gradlew clean  assembleRelease --stacktrace --no-daemon\n-\t```\n-2. 安装样例apk。保存mapping.txt文件以及app/build/outputs/robust/methodsMap.robust文件\n-3. 修改代码之后，加上**@Modify**注解或者调用RobustModify.modify()方法\n-4. 把保存的**mapping.txt**和**methodsMap.robust**放到app/robust目录下\n-5. 执行与生成样式apk相同的gradle命令：\n-\t\n-\t```java\n-\t./gradlew clean  assembleRelease --stacktrace --no-daemon\n-\t```\n-5. 补丁制作成功后会停止构建apk，出现类似于如下的提示,表示补丁生成成功\n-![补丁制作成功图片](images/patchsuccess_cn.png)\n-7. 将补丁文件copy到手机目录/sdcard/robust下\n+## 预编译版本\n \n-\t```java\n-\tadb push ~/Desktop/code/robust/app/build/outputs/robust/patch.jar /sdcard/robust/patch.jar\n-\t```\n-\t补丁的路径/sdcard/robust是`PatchManipulateImp`中指定的\n-8. 打开App，点击Patch按钮就会加载补丁。\n-9. 也可以加载app/robust的样例补丁，修改了Jump_second_Activity跳转Activity的显示文字。\n-10. 在样例中我们给类```SecondActivity```的方法```getTextInfo(String meituan)```制作补丁，你可以自行定制。\n+`app/robust` 目录下已经预先编译了 apk 和 `patch.jar`，可以预览效果。\n+\n+1. 安装 `app/robust` 目录下的 apk。\n+\n+2. 打开App，点击 Jump_second_Activity，可以看到显示 error occur。\n+\n+3. 推送 patch 到指定目录\n+\n+   ```java\n+   adb push ~/Desktop/code/robust/app/build/outputs/robust/patch.jar /sdcard/robust/patch.jar\n+   ```\n+\n+4. 打开App，点击Patch按钮加载补丁。\n+\n+5. 再次点击 Jump_second_Activity，可以看到显示 error fixed。\n+\n+## 自行编译（以修改类 ```SecondActivity``` 为例子）\n+\n+1. 可以删除 `app/robust` 中的所有文件，其为预编译样例文件。 \n+\n+2. 生成样例apk，执行gradle命令：\n+\n+  ```java\n+  ./gradlew clean assembleRelease --stacktrace --no-daemon\n+  ```\n+\n+3. 安装编译完成的 apk `app/build/outputs/apk/app-release.apk`  。保存 `app/build/outputs/mapping/release/mapping.txt `文件以及 `app/build/outputs/robust/methodsMap.robust` 文件。\n+\n+4. 修改代码之后，加上**@Modify**注解或者调用RobustModify.modify()方法\n+\n+   * 这里可以修改类 ```SecondActivity ```的方法 ```getTextInfo()``` 的返回值，制作补丁。\n+\n+5. 修改 `app/build.gradle` 文件的头部，使用插件。\n+\n+   ```java\n+   // 取消下面行的注释\n+   apply plugin: 'auto-patch-plugin'\n+   ```\n+\n+6. 把保存的**mapping.txt**和**methodsMap.robust**放到 `app/robust` 目录下，如果目录不存在，创建目录。\n+\n+7. 执行与生成样式apk相同的gradle命令：\n+\n+  ```java\n+  ./gradlew clean assembleRelease --stacktrace --no-daemon\n+  ```\n+\n+8. 补丁制作成功后会停止构建apk，出现类似于如下的提示,表示补丁生成成功\n+    ![补丁制作成功图片](images/patchsuccess_cn.png)\n+\n+9. 将补丁文件copy到手机目录 /sdcard/robust 下\n+\n+  ```java\n+  adb push ~/Desktop/code/robust/app/build/outputs/robust/patch.jar /sdcard/robust/patch.jar\n+  ```\n+  补丁的路径/sdcard/robust是`PatchManipulateImp`中指定的\n+\n+10. 打开App，点击 Jump_second_Activity，可以预览修改前的Activity 的显示文字。\n+\n+11. 点击Patch按钮就会加载补丁。\n+\n+12. 点击 Jump_second_Activity，可以看到 Activity 的显示文字被修改了。\n \n # 注意事项\n \n@@ -165,13 +206,13 @@ Robust补丁自动化，为Robust自动生成补丁，使用者只需要提交\n ## License\n \n     Copyright 2017 Meituan-Dianping\n-\n+    \n     Licensed under the Apache License, Version 2.0 (the \"License\");\n     you may not use this file except in compliance with the License.\n     You may obtain a copy of the License at\n-\n+    \n        http://www.apache.org/licenses/LICENSE-2.0\n-\n+    \n     Unless required by applicable law or agreed to in writing, software\n     distributed under the License is distributed on an \"AS IS\" BASIS,\n     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
  },
  {
    "sha": "967e835c3f98d50e898f5a573c1dc372966cffb2",
    "filename": "README.md",
    "status": "modified",
    "additions": 80,
    "deletions": 37,
    "changes": 117,
    "blob_url": "https://github.com/Meituan-Dianping/Robust/blob/cb210fb1be19bfb2bb53a9cb92f36eeae8874c45/README.md",
    "raw_url": "https://github.com/Meituan-Dianping/Robust/raw/cb210fb1be19bfb2bb53a9cb92f36eeae8874c45/README.md",
    "contents_url": "https://api.github.com/repos/Meituan-Dianping/Robust/contents/README.md?ref=cb210fb1be19bfb2bb53a9cb92f36eeae8874c45",
    "patch": "@@ -1,33 +1,34 @@\n \n # Robust\n- \n+\n [![Download](https://api.bintray.com/packages/meituan/maven/com.meituan.robust%3Apatch/images/download.svg?version=0.4.99) ](https://bintray.com/meituan/maven/com.meituan.robust%3Apatch/0.4.99/link)\n [![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](https://github.com/Meituan-Dianping/Robust/pulls)\n [![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://raw.githubusercontent.com/Meituan-Dianping/Robust/master/LICENSE)  \n \n Robust is an Android HotFix solution with high compatibility and high stability. Robust can fix bugs immediately without publishing apk.\n- \n+\n  [中文说明](README-zh.md)\n- \n+\n  More help on [Wiki](https://github.com/Meituan-Dianping/Robust/wiki)\n- \n+\n # Environment\n \n  * Mac Linux and Windows\n  * Gradle 2.10+ , include 3.0\n  * Java 1.7 +\n- \n+\n # Usage\n \n 1. Add below codes in the module's build.gradle.\n \n-\t```java\n-\tapply plugin: 'com.android.application'\n-\t//please uncomment fellow line before you build a patch\n-\t//apply plugin: 'auto-patch-plugin'\n-\tapply plugin: 'robust'\n-\n-\tcompile 'com.meituan.robust:robust:0.4.99'\n+  ```java\n+  apply plugin: 'com.android.application'\n+  //please uncomment fellow line before you build a patch\n+  //apply plugin: 'auto-patch-plugin'\n+  apply plugin: 'robust'\n+  \n+  compile 'com.meituan.robust:robust:0.4.99'\n+  ```\n \n 2. Add below codes in the outest project's build.gradle file.\n \n@@ -58,7 +59,7 @@ Robust is an Android HotFix solution with high compatibility and high stability.\n When you build APK,you may need to save \"mapping.txt\" and the files in directory \"build/outputs/robust/\".\n \n # AutoPatch\n- \n+\n \n AutoPatch will generate patch for Robust automatically. You just need to fellow below steps to genrate patches. For more details please visit website http://tech.meituan.com/android_autopatch.html\n \n@@ -108,30 +109,72 @@ AutoPatch will generate patch for Robust automatically. You just need to fellow\n ![Success in generating patch](images/patchsuccess_en.png)\n \n # Demo Usage\n-1. Excute fellow command to build apk：\n \n-\t```java\n-\t./gradlew clean  assembleRelease --stacktrace --no-daemon\n-\t```\n-2. After install apk on your phone,you need to save **mapping.txt** and **app/build/outputs/robust/methodsMap.robust**\n-3. Put mapping.txt and methodsMap.robust which are generated when you build the apks into diretory **app/robust/**,if directory not exists ,create it!\n-4. After modifying the code ,please put annotation `@Modify` on the modified methods or invoke  `RobustModify.modify()` (designed for Lambda Expression )in the modified methods.\n-5. Run the same gradle command as you build the apk:\n+## Pre Compile\n \n-\t```java\n-\t./gradlew clean  assembleRelease --stacktrace --no-daemon\n-\t```\n-6. Generating patches always end like this,which means patches is done\n-![Success in generating patch](images/patchsuccess_en.png)\n-7. Copy patch to your phone：\n+The apk and patch.jar have been pre-compiled in the `app/robust` folder, and the patch effect can be previewed.\n \n-\t```java\n-\tadb push ~/Desktop/code/robust/app/build/outputs/robust/patch.jar /sdcard/robust/patch.jar\n-\t```\n-\tpatch directory can be configured in ``PatchManipulateImp``.\n-8. Open app,and click **Patch** button,patch is used.\n-9. Also you can use our sample patch in **app/robust/sample_patch.jar** ,this dex change text after you click **Jump_second_Activity** Button.\n-10. In the demo ,we change the text showed on the second activity which is configured in the method ```getTextInfo(String meituan)``` in class ```SecondActivity``` \n+1. Install the apk in the `app/robust`.\n+\n+2. Open the App, click `Jump_second_Activity`, you can see that `error occur` appears.\n+\n+3. Push the patch to the specified directory\n+\n+    ```java\n+    adb push ~/Desktop/code/robust/app/build/outputs/robust/patch.jar /sdcard/robust/patch.jar\n+    ```\n+\n+4. Open the App and click the `Patch` button to load the patch.\n+\n+5. Click `Jump_second_Activity` again, you can see `error fixed` is displayed.\n+\n+## Compile by yourself (take Class ```SecondActivity``` as an example)\n+\n+1. You can delete all files in `app/robust`, which are pre-compiled sample files.\n+\n+2. Generate a sample apk and execute the gradle command:\n+\n+   ```java\n+   ./gradlew clean assembleRelease --stacktrace --no-daemon\n+   ```\n+\n+3. Install the compiled apk `app/build/outputs/apk/app-release.apk` . Save the `app/build/outputs/mapping/release/mapping.txt` file and the `app/build/outputs/robust/methodsMap.robust` file\n+\n+4. After modifying the code, add **@Modify** annotation or call RobustModify.modify() method\n+\n+   * Here you can modify the return value of the method ```getTextInfo()``` of the class ```SecondActivity ```, and make a patch.\n+\n+5. Modify the header of the `app/build.gradle` file to use plugins.\n+\n+   ```java\n+   // Uncomment the following line\n+   apply plugin:'auto-patch-plugin'\n+   ```\n+\n+6. Put the saved **mapping.txt** and **methodsMap.robust** in the `app/robust` folder, create the folder if not exist.\n+\n+7. Execute the same gradle command as the generated the sample apk:\n+\n+   ```java\n+   ./gradlew clean assembleRelease --stacktrace --no-daemon\n+   ```\n+\n+8. After the patch is successfully made, the apk will stop building, and a prompt similar to the following appears, indicating that the patch is successfully generated\n+   ![Picture of successful patch production](images/patchsuccess_en.png)\n+\n+9. Copy the patch file to the phone directory `/sdcard/robust`\n+\n+   ```java\n+   adb push ~/Desktop/code/robust/app/build/outputs/robust/patch.jar /sdcard/robust/patch.jar\n+   ```\n+\n+   The patch path `/sdcard/robust` is specified in `PatchManipulateImp`\n+\n+10. Open the App and click `Jump_second_Activity` to preview the display text of the Activity before modification.\n+\n+11. Click the `Patch` button to load the patch.\n+\n+12. Click ` Jump_second_Activity`, you can see that the display text of Activity has been modified.\n \n # Attentions\n \n@@ -159,13 +202,13 @@ AutoPatch will generate patch for Robust automatically. You just need to fellow\n ## License\n \n     Copyright 2017 Meituan-Dianping\n-\n+    \n     Licensed under the Apache License, Version 2.0 (the \"License\");\n     you may not use this file except in compliance with the License.\n     You may obtain a copy of the License at\n-\n+    \n        http://www.apache.org/licenses/LICENSE-2.0\n-\n+    \n     Unless required by applicable law or agreed to in writing, software\n     distributed under the License is distributed on an \"AS IS\" BASIS,\n     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
  },
  {
    "sha": "93cd12d11075d0cfb62088122007daf39bceee32",
    "filename": "build.gradle",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/Meituan-Dianping/Robust/blob/cb210fb1be19bfb2bb53a9cb92f36eeae8874c45/build.gradle",
    "raw_url": "https://github.com/Meituan-Dianping/Robust/raw/cb210fb1be19bfb2bb53a9cb92f36eeae8874c45/build.gradle",
    "contents_url": "https://api.github.com/repos/Meituan-Dianping/Robust/contents/build.gradle?ref=cb210fb1be19bfb2bb53a9cb92f36eeae8874c45",
    "patch": "@@ -9,8 +9,8 @@ buildscript {\n         classpath 'com.android.tools.build:gradle:2.1.0'\n         // NOTE: Do not place your application dependencies here; they belong\n         // in the individual module build.gradle files\n-        classpath 'com.meituan.robust:gradle-plugin:0.4.96'\n-        classpath 'com.meituan.robust:auto-patch-plugin:0.4.96'\n+        classpath 'com.meituan.robust:gradle-plugin:0.4.99'\n+        classpath 'com.meituan.robust:auto-patch-plugin:0.4.99'\n         classpath 'me.tatarka:gradle-retrolambda:3.2.0'\n         classpath 'com.github.dcendents:android-maven-gradle-plugin:1.3'\n         classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'"
  }
]
