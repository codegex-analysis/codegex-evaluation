[
  {
    "sha": "d0989c3318f80e4935102c00d98be99bde5377e9",
    "filename": "app/src/main/java/org/zephyrsoft/trackworktime/timer/TimeCalculatorV2.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/mathisdt/trackworktime/blob/0eadc44ba8bbccb67dd9411c181cfa67a83b7e28/app/src/main/java/org/zephyrsoft/trackworktime/timer/TimeCalculatorV2.java",
    "raw_url": "https://github.com/mathisdt/trackworktime/raw/0eadc44ba8bbccb67dd9411c181cfa67a83b7e28/app/src/main/java/org/zephyrsoft/trackworktime/timer/TimeCalculatorV2.java",
    "contents_url": "https://api.github.com/repos/mathisdt/trackworktime/contents/app/src/main/java/org/zephyrsoft/trackworktime/timer/TimeCalculatorV2.java?ref=0eadc44ba8bbccb67dd9411c181cfa67a83b7e28",
    "patch": "@@ -247,7 +247,7 @@ private long calculateWorkTime(List<Event> events) {\n \t\t\t\ttimeOut = currentDate.atTime(LocalTime.MAX).atZone(zoneId).toOffsetDateTime();\n \n \t\t\t\tworkedTime += TimerManager.timeDiff(clockedInSince, timeOut);\n-\t\t\t} else if (effectiveClockOutEvent != null) {\n+\t\t\t} else {\n \t\t\t\ttimeOut = effectiveClockOutEvent.getDateTime();\n \t\t\t}\n \n@@ -303,7 +303,7 @@ public void calculateNextDay() {\n \t\tcurrentDate = currentDate.plusDays(1);\n \n \n-\t\tZonedDateTime now = ZonedDateTime.now();\n+\t\tZonedDateTime now = ZonedDateTime.now(zoneId);\n \n \t\tboolean isToday = currentDate.isEqual(now.toLocalDate());\n \t\tisInFuture = currentDate.isAfter(now.toLocalDate());"
  }
]
