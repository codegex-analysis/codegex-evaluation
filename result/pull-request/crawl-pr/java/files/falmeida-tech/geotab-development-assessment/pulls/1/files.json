[
  {
    "sha": "5ce7dac805eb934b9d5174799e5592ddd5121f11",
    "filename": "java-solution/.gitignore",
    "status": "added",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/falmeida-tech/geotab-development-assessment/blob/d60f74970a8e119ba5f5ab501f4dfa99222e4f21/java-solution/.gitignore",
    "raw_url": "https://github.com/falmeida-tech/geotab-development-assessment/raw/d60f74970a8e119ba5f5ab501f4dfa99222e4f21/java-solution/.gitignore",
    "contents_url": "https://api.github.com/repos/falmeida-tech/geotab-development-assessment/contents/java-solution/.gitignore?ref=d60f74970a8e119ba5f5ab501f4dfa99222e4f21",
    "patch": "@@ -0,0 +1,3 @@\n+.idea/*\n+target\n+java-solution.iml"
  },
  {
    "sha": "2c723b988d54dbc6a08c9bbdc2041600f7965df2",
    "filename": "java-solution/pom.xml",
    "status": "added",
    "additions": 35,
    "deletions": 0,
    "changes": 35,
    "blob_url": "https://github.com/falmeida-tech/geotab-development-assessment/blob/d60f74970a8e119ba5f5ab501f4dfa99222e4f21/java-solution/pom.xml",
    "raw_url": "https://github.com/falmeida-tech/geotab-development-assessment/raw/d60f74970a8e119ba5f5ab501f4dfa99222e4f21/java-solution/pom.xml",
    "contents_url": "https://api.github.com/repos/falmeida-tech/geotab-development-assessment/contents/java-solution/pom.xml?ref=d60f74970a8e119ba5f5ab501f4dfa99222e4f21",
    "patch": "@@ -0,0 +1,35 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <groupId>com.jokecompany</groupId>\n+    <artifactId>java-solution</artifactId>\n+    <version>1.0-SNAPSHOT</version>\n+\n+    <properties>\n+        <maven.compiler.release>11</maven.compiler.release>\n+    </properties>\n+\n+    <dependencies>\n+        <!-- https://mvnrepository.com/artifact/com.google.code.gson/gson -->\n+        <dependency>\n+            <groupId>com.google.code.gson</groupId>\n+            <artifactId>gson</artifactId>\n+            <version>2.3</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.commons</groupId>\n+            <artifactId>commons-lang3</artifactId>\n+            <version>3.11</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>junit</groupId>\n+            <artifactId>junit</artifactId>\n+            <version>RELEASE</version>\n+            <scope>test</scope>\n+        </dependency>\n+    </dependencies>\n+\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "91ec46c2fa5146e25051a2d20ffc42ffeaee834d",
    "filename": "java-solution/src/main/java/com/jokecompany/Main.java",
    "status": "added",
    "additions": 17,
    "deletions": 0,
    "changes": 17,
    "blob_url": "https://github.com/falmeida-tech/geotab-development-assessment/blob/d60f74970a8e119ba5f5ab501f4dfa99222e4f21/java-solution/src/main/java/com/jokecompany/Main.java",
    "raw_url": "https://github.com/falmeida-tech/geotab-development-assessment/raw/d60f74970a8e119ba5f5ab501f4dfa99222e4f21/java-solution/src/main/java/com/jokecompany/Main.java",
    "contents_url": "https://api.github.com/repos/falmeida-tech/geotab-development-assessment/contents/java-solution/src/main/java/com/jokecompany/Main.java?ref=d60f74970a8e119ba5f5ab501f4dfa99222e4f21",
    "patch": "@@ -0,0 +1,17 @@\n+package com.jokecompany;\n+\n+import com.jokecompany.exceptions.JokeCompanyUIException;\n+import com.jokecompany.exceptions.JsonFeedException;\n+import com.jokecompany.view.JokeCompanyUI;\n+\n+import java.io.IOException;\n+\n+public class Main {\n+\n+    public static void main(String[] args) throws JokeCompanyUIException {\n+        JokeCompanyUI jokeCompanyUI = new JokeCompanyUI();\n+        jokeCompanyUI.showAllOptions();\n+    }\n+\n+}\n+"
  },
  {
    "sha": "e7bc0d293d5a96bd0878567eb4d3b9a4b8de63fa",
    "filename": "java-solution/src/main/java/com/jokecompany/exceptions/JokeCompanyUIException.java",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/falmeida-tech/geotab-development-assessment/blob/d60f74970a8e119ba5f5ab501f4dfa99222e4f21/java-solution/src/main/java/com/jokecompany/exceptions/JokeCompanyUIException.java",
    "raw_url": "https://github.com/falmeida-tech/geotab-development-assessment/raw/d60f74970a8e119ba5f5ab501f4dfa99222e4f21/java-solution/src/main/java/com/jokecompany/exceptions/JokeCompanyUIException.java",
    "contents_url": "https://api.github.com/repos/falmeida-tech/geotab-development-assessment/contents/java-solution/src/main/java/com/jokecompany/exceptions/JokeCompanyUIException.java?ref=d60f74970a8e119ba5f5ab501f4dfa99222e4f21",
    "patch": "@@ -0,0 +1,13 @@\n+package com.jokecompany.exceptions;\n+\n+public class JokeCompanyUIException extends Exception{\n+\n+    public JokeCompanyUIException() {\n+        super();\n+    }\n+\n+    public JokeCompanyUIException(String message) {\n+        super(message);\n+    }\n+\n+}"
  },
  {
    "sha": "1cfddc2354cd08f19aaf1f68dffe67283a3647ee",
    "filename": "java-solution/src/main/java/com/jokecompany/exceptions/JsonFeedException.java",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/falmeida-tech/geotab-development-assessment/blob/d60f74970a8e119ba5f5ab501f4dfa99222e4f21/java-solution/src/main/java/com/jokecompany/exceptions/JsonFeedException.java",
    "raw_url": "https://github.com/falmeida-tech/geotab-development-assessment/raw/d60f74970a8e119ba5f5ab501f4dfa99222e4f21/java-solution/src/main/java/com/jokecompany/exceptions/JsonFeedException.java",
    "contents_url": "https://api.github.com/repos/falmeida-tech/geotab-development-assessment/contents/java-solution/src/main/java/com/jokecompany/exceptions/JsonFeedException.java?ref=d60f74970a8e119ba5f5ab501f4dfa99222e4f21",
    "patch": "@@ -0,0 +1,13 @@\n+package com.jokecompany.exceptions;\n+\n+public class JsonFeedException extends Exception{\n+\n+    public JsonFeedException() {\n+        super();\n+    }\n+\n+    public JsonFeedException(String message) {\n+        super(message);\n+    }\n+\n+}"
  },
  {
    "sha": "c9b44a6d0bbd7263c021acdc7f3ae9d5ada2439b",
    "filename": "java-solution/src/main/java/com/jokecompany/model/FullNameDTO.java",
    "status": "added",
    "additions": 33,
    "deletions": 0,
    "changes": 33,
    "blob_url": "https://github.com/falmeida-tech/geotab-development-assessment/blob/d60f74970a8e119ba5f5ab501f4dfa99222e4f21/java-solution/src/main/java/com/jokecompany/model/FullNameDTO.java",
    "raw_url": "https://github.com/falmeida-tech/geotab-development-assessment/raw/d60f74970a8e119ba5f5ab501f4dfa99222e4f21/java-solution/src/main/java/com/jokecompany/model/FullNameDTO.java",
    "contents_url": "https://api.github.com/repos/falmeida-tech/geotab-development-assessment/contents/java-solution/src/main/java/com/jokecompany/model/FullNameDTO.java?ref=d60f74970a8e119ba5f5ab501f4dfa99222e4f21",
    "patch": "@@ -0,0 +1,33 @@\n+package com.jokecompany.model;\n+\n+public class FullNameDTO {\n+\n+    private String name , surname;\n+\n+    public FullNameDTO(String name, String surname) {\n+        this.name = name;\n+        this.surname = surname;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    public String getSurname() {\n+        return surname;\n+    }\n+\n+    public void setSurname(String surname) {\n+        this.surname = surname;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"FullNameDTO {\" + \"name='\" + name + '\\'' + \", \" + \"surname='\" + surname + '\\'' + '}';\n+    }\n+\n+}"
  },
  {
    "sha": "091f219ce91be759bc3bca776c0888d7664915f3",
    "filename": "java-solution/src/main/java/com/jokecompany/services/JsonFeed.java",
    "status": "added",
    "additions": 142,
    "deletions": 0,
    "changes": 142,
    "blob_url": "https://github.com/falmeida-tech/geotab-development-assessment/blob/d60f74970a8e119ba5f5ab501f4dfa99222e4f21/java-solution/src/main/java/com/jokecompany/services/JsonFeed.java",
    "raw_url": "https://github.com/falmeida-tech/geotab-development-assessment/raw/d60f74970a8e119ba5f5ab501f4dfa99222e4f21/java-solution/src/main/java/com/jokecompany/services/JsonFeed.java",
    "contents_url": "https://api.github.com/repos/falmeida-tech/geotab-development-assessment/contents/java-solution/src/main/java/com/jokecompany/services/JsonFeed.java?ref=d60f74970a8e119ba5f5ab501f4dfa99222e4f21",
    "patch": "@@ -0,0 +1,142 @@\n+package com.jokecompany.services;\n+\n+import com.google.gson.Gson;\n+import com.google.gson.GsonBuilder;\n+import com.jokecompany.exceptions.JsonFeedException;\n+import com.jokecompany.model.FullNameDTO;\n+import org.apache.commons.lang3.StringUtils;\n+\n+import java.io.IOException;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.net.http.HttpClient;\n+import java.net.http.HttpRequest;\n+import java.net.http.HttpResponse;\n+import java.util.HashMap;\n+\n+public class JsonFeed {\n+\n+    private HashMap<String, String> names = new HashMap<>();\n+\n+    private int results;\n+\n+    public JsonFeed(){\n+\n+    }\n+\n+    /**\n+     * Assign the names of the collect during APIs calls\n+     * @param names\n+     */\n+    public void setNames(HashMap<String, String> names) {\n+        this.names = names;\n+    }\n+\n+    /**\n+     * Set the number of jokes to be returned\n+     * @param results\n+     */\n+    public void setResults(int results) {\n+        this.results = results;\n+    }\n+\n+    /**\n+     * This method get one or more Random Jokes by using a category or not\n+     * @param category\n+     * @return\n+     * @throws JsonFeedException\n+     */\n+    public String[] getRandomJokes(String category) throws JsonFeedException {\n+\n+        var var1 = names.entrySet().iterator().next();\n+\n+        final String firstName = var1.getKey();\n+\n+        final String lastName = var1.getValue();\n+\n+        String baseUrl = \"https://api.chucknorris.io/jokes/random\";\n+\n+        String[] randomJokes = new String[results];\n+\n+        Gson jsonObject = new GsonBuilder().disableHtmlEscaping().create();\n+\n+        if (StringUtils.isNoneEmpty(category))\n+            baseUrl += \"?category=\" + category;\n+\n+        HttpClient client = HttpClient.newHttpClient();\n+\n+        try{\n+\n+            URI uri = new URI(baseUrl);\n+\n+            HttpRequest request = HttpRequest.newBuilder().uri(uri).build();\n+\n+            for(int i = 0; i < results; i++){\n+\n+                String joke = client.send(request, HttpResponse.BodyHandlers.ofString()).body();\n+\n+                if(joke.contains(\"404\")){\n+                    throw new JsonFeedException(\"HTTP Response Code 404 - Resource does not exist\");\n+                }\n+\n+                if (StringUtils.isNoneEmpty(firstName) && StringUtils.isNoneEmpty(lastName)) {\n+                    int index = joke.indexOf(\"Chuck Norris\");\n+                    String firstPart = joke.substring(0, index);\n+                    String secondPart = joke.substring(index + \"Chuck Norris\".length());\n+                    joke = firstPart + \" \" + firstName + \" \" + lastName + secondPart;\n+                }\n+\n+                randomJokes[i] = jsonObject.toJson(joke);\n+\n+            }\n+\n+        }catch(URISyntaxException | IOException | InterruptedException e){\n+            throw new JsonFeedException(e.getMessage());\n+        }\n+\n+        return randomJokes;\n+    }\n+\n+    /**\n+     *\n+     * @return\n+     */\n+    public FullNameDTO getNames() throws JsonFeedException {\n+        Gson gson = new Gson();\n+        FullNameDTO fullNameDTO = null;\n+        final String baseUrl = \"https://www.names.privserv.com/api/\";\n+        try{\n+            URI uri = new URI(baseUrl);\n+            HttpClient client = HttpClient.newHttpClient();\n+            HttpRequest request = HttpRequest.newBuilder().uri(uri).build();\n+            String namesResponse = client.send(request, HttpResponse.BodyHandlers.ofString()).body();\n+            fullNameDTO = gson.fromJson(namesResponse, FullNameDTO.class);\n+            names.put(fullNameDTO.getName(), fullNameDTO.getSurname());\n+        } catch (URISyntaxException | IOException | InterruptedException e) {\n+            throw new JsonFeedException(e.getMessage());\n+        }\n+        return fullNameDTO;\n+    }\n+\n+    /**\n+     *\n+     * @return\n+     * @throws JsonFeedException\n+     */\n+    public String[] getCategories() throws JsonFeedException {\n+        Gson gson = new GsonBuilder().create();\n+        final String baseUrl = \"https://api.chucknorris.io/jokes/categories\";\n+        String[] categories = null;\n+        try{\n+            HttpClient client = HttpClient.newHttpClient();\n+            URI uri = new URI(baseUrl);\n+            HttpRequest request = HttpRequest.newBuilder().uri(uri).build();\n+            String responsebody = client.send(request, HttpResponse.BodyHandlers.ofString()).body();\n+            categories = gson.fromJson(responsebody, String[].class);\n+        }catch (InterruptedException | URISyntaxException | IOException e) {\n+            throw new JsonFeedException(e.getMessage());\n+        }\n+        return categories;\n+    }\n+\n+}"
  },
  {
    "sha": "1e3a50de46c7981fadbed7faa3878a51aa791412",
    "filename": "java-solution/src/main/java/com/jokecompany/utilities/ConsolePrinter.java",
    "status": "added",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/falmeida-tech/geotab-development-assessment/blob/d60f74970a8e119ba5f5ab501f4dfa99222e4f21/java-solution/src/main/java/com/jokecompany/utilities/ConsolePrinter.java",
    "raw_url": "https://github.com/falmeida-tech/geotab-development-assessment/raw/d60f74970a8e119ba5f5ab501f4dfa99222e4f21/java-solution/src/main/java/com/jokecompany/utilities/ConsolePrinter.java",
    "contents_url": "https://api.github.com/repos/falmeida-tech/geotab-development-assessment/contents/java-solution/src/main/java/com/jokecompany/utilities/ConsolePrinter.java?ref=d60f74970a8e119ba5f5ab501f4dfa99222e4f21",
    "patch": "@@ -0,0 +1,18 @@\n+package com.jokecompany.utilities;\n+\n+public class ConsolePrinter {\n+\n+    private static Object PrintValue;\n+\n+    public ConsolePrinter Value(String value){\n+        PrintValue = value;\n+        return this;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        System.out.println(PrintValue);\n+        return null;\n+    }\n+\n+}"
  },
  {
    "sha": "b07db67afdb8d03a3855525e1bb82e0ec6ccf832",
    "filename": "java-solution/src/main/java/com/jokecompany/view/JokeCompanyUI.java",
    "status": "added",
    "additions": 133,
    "deletions": 0,
    "changes": 133,
    "blob_url": "https://github.com/falmeida-tech/geotab-development-assessment/blob/d60f74970a8e119ba5f5ab501f4dfa99222e4f21/java-solution/src/main/java/com/jokecompany/view/JokeCompanyUI.java",
    "raw_url": "https://github.com/falmeida-tech/geotab-development-assessment/raw/d60f74970a8e119ba5f5ab501f4dfa99222e4f21/java-solution/src/main/java/com/jokecompany/view/JokeCompanyUI.java",
    "contents_url": "https://api.github.com/repos/falmeida-tech/geotab-development-assessment/contents/java-solution/src/main/java/com/jokecompany/view/JokeCompanyUI.java?ref=d60f74970a8e119ba5f5ab501f4dfa99222e4f21",
    "patch": "@@ -0,0 +1,133 @@\n+package com.jokecompany.view;\n+\n+import com.jokecompany.exceptions.JokeCompanyUIException;\n+import com.jokecompany.exceptions.JsonFeedException;\n+import com.jokecompany.model.FullNameDTO;\n+import com.jokecompany.services.JsonFeed;\n+import com.jokecompany.utilities.ConsolePrinter;\n+\n+import java.io.BufferedReader;\n+import java.io.IOException;\n+import java.io.InputStreamReader;\n+import java.util.Hashtable;\n+\n+public class JokeCompanyUI {\n+\n+    private static String[] results = new String[50];\n+    private static char key = 'e';\n+    private static Hashtable<String, String> names = new Hashtable<>();\n+    private static ConsolePrinter printer = new ConsolePrinter();\n+\n+    private JsonFeed jsonFeed = new JsonFeed();\n+\n+    public JokeCompanyUI() {\n+\n+    }\n+\n+    public void readUserInput(BufferedReader reader) throws JokeCompanyUIException {\n+        try {\n+            getEnteredKey(reader.readLine());\n+        }catch(IOException e){\n+            throw new JokeCompanyUIException(e.getMessage());\n+        }\n+    }\n+\n+    public void showMainMenu(BufferedReader reader) throws JokeCompanyUIException {\n+        printer.Value(\"Press c to get categories\").toString();\n+        printer.Value(\"Press r to get random jokes\").toString();\n+        printer.Value(\"Press x to exit\").toString();\n+        readUserInput(reader);\n+    }\n+\n+    public void showRandomNameMenu(BufferedReader reader) throws JokeCompanyUIException {\n+        printer.Value(\"Want to use a random name? y/n\").toString();\n+        readUserInput(reader);\n+    }\n+\n+    public void showNames(BufferedReader reader) throws JsonFeedException, JokeCompanyUIException {\n+        FullNameDTO fullNameDTO = jsonFeed.getNames();\n+        printer.Value(fullNameDTO.toString()).toString();\n+        printer.Value(\"Want to specify a category? y/n\").toString();\n+        readUserInput(reader);\n+    }\n+\n+    public void showRandomJokes(BufferedReader reader) throws IOException, JsonFeedException {\n+        printer.Value(\"How many jokes do you want? (1-9)\").toString();\n+        int number = Integer.parseInt(reader.readLine());\n+        jsonFeed.setResults(number);\n+        results = jsonFeed.getRandomJokes(null);\n+        PrintResults();\n+    }\n+\n+    public void showRandomJokesByCategory(BufferedReader reader) throws IOException, JsonFeedException {\n+        printer.Value(\"How many jokes do you want? (1-9)\").toString();\n+        int number = Integer.parseInt(reader.readLine());\n+        printer.Value(\"Enter a category;\").toString();\n+        String category = reader.readLine();\n+        results = jsonFeed.getRandomJokes(category);\n+        PrintResults();\n+    }\n+\n+    public void showCategories() throws JsonFeedException {\n+        results = jsonFeed.getCategories();\n+        PrintResults();\n+    }\n+\n+    public void showAllOptions() throws JokeCompanyUIException {\n+        try{\n+            BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n+            printer.Value(\"Press ? to get instructions.\").toString();\n+            String input = reader.readLine();\n+            if (input.equals(\"?\")) {\n+                while (key == 'e' || key != 'x') {\n+                    showMainMenu(reader);\n+                    if (key == 'c') {\n+                        showCategories();\n+                    }\n+                    if (key == 'r') {\n+                        showRandomNameMenu(reader);\n+                        if (key == 'y') {\n+                            showNames(reader);\n+                        }\n+                        if (key == 'y') {\n+                            showRandomJokesByCategory(reader);\n+                        }else{\n+                            showRandomJokes(reader);\n+                        }\n+                    }\n+                    names = null;\n+                }\n+            }\n+\n+        } catch (JsonFeedException | IOException e) {\n+            throw new JokeCompanyUIException(e.getMessage());\n+        }\n+\n+    }\n+\n+    private static void getEnteredKey(String k) throws JokeCompanyUIException {\n+\n+        char keySelected = k.substring(0,1).charAt(0);\n+\n+        switch (keySelected) {\n+            case 'c':\n+                key = 'c';\n+                break;\n+            case 'r':\n+                key = 'r';\n+                break;\n+            case 'y':\n+                key = 'y';\n+                break;\n+            default:\n+                key = keySelected;\n+                break;\n+        }\n+\n+    }\n+\n+    private static void PrintResults() {\n+        printer.Value(\"[\" + String.join(\",\", results) + \"]\").toString();\n+    }\n+\n+}"
  },
  {
    "sha": "19bd9be41b020a88ec1bcc500f0dc54f0073e018",
    "filename": "java-solution/src/test/java/com/jokecompany/services/JsonFeedTest.java",
    "status": "added",
    "additions": 76,
    "deletions": 0,
    "changes": 76,
    "blob_url": "https://github.com/falmeida-tech/geotab-development-assessment/blob/d60f74970a8e119ba5f5ab501f4dfa99222e4f21/java-solution/src/test/java/com/jokecompany/services/JsonFeedTest.java",
    "raw_url": "https://github.com/falmeida-tech/geotab-development-assessment/raw/d60f74970a8e119ba5f5ab501f4dfa99222e4f21/java-solution/src/test/java/com/jokecompany/services/JsonFeedTest.java",
    "contents_url": "https://api.github.com/repos/falmeida-tech/geotab-development-assessment/contents/java-solution/src/test/java/com/jokecompany/services/JsonFeedTest.java?ref=d60f74970a8e119ba5f5ab501f4dfa99222e4f21",
    "patch": "@@ -0,0 +1,76 @@\n+package com.jokecompany.services;\n+\n+import com.jokecompany.exceptions.JsonFeedException;\n+import com.jokecompany.model.FullNameDTO;\n+import static org.junit.Assert.*;\n+import org.junit.Test;\n+\n+import java.util.HashMap;\n+\n+public class JsonFeedTest {\n+\n+    @Test\n+    public void testGetNames_condition_Name_And_Surname_Not_Empty() throws JsonFeedException {\n+        JsonFeed jsonFeed = new JsonFeed();\n+        FullNameDTO fullNameDTO = jsonFeed.getNames();\n+        assertFalse(fullNameDTO.getName().isEmpty());\n+        assertFalse(fullNameDTO.getSurname().isEmpty());\n+    }\n+\n+    @Test\n+    public void testGetCategories_condition_fetch_all_categories() throws JsonFeedException {\n+        JsonFeed jsonFeed = new JsonFeed();\n+        String[] categories = jsonFeed.getCategories();\n+        String[] expectedCategories = new String[]{\"animal\", \"career\", \"celebrity\", \"dev\", \"explicit\", \"fashion\", \"food\", \"history\",\"money\", \"movie\", \"music\", \"political\", \"religion\", \"science\", \"sport\", \"travel\"};\n+        assertArrayEquals(expectedCategories,categories);\n+    }\n+\n+    @Test\n+    public void testGetRandomJokes_condition_provide_existing_category_one_joke() throws JsonFeedException {\n+        HashMap<String,String> names = new HashMap<>();\n+        names.put(\"Firstname\",\"Lastname\");\n+        JsonFeed jsonFeed = new JsonFeed();\n+        jsonFeed.setNames(names);\n+        jsonFeed.setResults(1);\n+        String[] randomJokes = jsonFeed.getRandomJokes(\"food\");\n+        assertEquals(randomJokes.length,1);\n+    }\n+\n+    @Test\n+    public void testGetRandomJokes_condition_non_category_three_jokes() throws JsonFeedException {\n+        HashMap<String,String> names = new HashMap<>();\n+        names.put(\"Firstname\",\"Lastname\");\n+        JsonFeed jsonFeed = new JsonFeed();\n+        jsonFeed.setNames(names);\n+        jsonFeed.setResults(3);\n+        String[] randomJokes = jsonFeed.getRandomJokes(null);\n+        assertEquals(randomJokes.length,3);\n+    }\n+\n+    /**\n+     * It defines a threshold for high latency tests\n+     * @throws JsonFeedException\n+     */\n+    @Test(timeout = 5000)\n+    public void testGetRandomJokes_condition_provide_non_category_nine_jokes() throws JsonFeedException {\n+        HashMap<String,String> names = new HashMap<>();\n+        names.put(\"Firstname\",\"Lastname\");\n+        JsonFeed jsonFeed = new JsonFeed();\n+        jsonFeed.setNames(names);\n+        jsonFeed.setResults(9);\n+        String[] randomJokes = jsonFeed.getRandomJokes(null);\n+        assertEquals(randomJokes.length,9);\n+    }\n+\n+    @Test(expected = JsonFeedException.class)\n+    public void testGetRandomJokes_condition_non_valid_category_throw_exception() throws JsonFeedException {\n+        HashMap<String,String> names = new HashMap<>();\n+        names.put(\"Firstname\",\"Lastname\");\n+        JsonFeed jsonFeed = new JsonFeed();\n+        jsonFeed.setResults(1);\n+        jsonFeed.setNames(names);\n+        String[] randomJokes = jsonFeed.getRandomJokes(\"invalid_category\");\n+        assertEquals(randomJokes.length, 1);\n+    }\n+\n+}\n\\ No newline at end of file"
  }
]
