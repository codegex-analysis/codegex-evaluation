[
  {
    "sha": "1d98f01bd08dce633228dd531d0ac888244d1e3c",
    "filename": "api/src/main/java/org/openmrs/module/commonreports/reports/NewDiseaseEpisodesReportManager.java",
    "status": "added",
    "additions": 129,
    "deletions": 0,
    "changes": 129,
    "blob_url": "https://github.com/mekomsolutions/openmrs-module-commonreports/blob/a22de38a5bfcfc95e76c8b32b9e584fa3e158fb1/api/src/main/java/org/openmrs/module/commonreports/reports/NewDiseaseEpisodesReportManager.java",
    "raw_url": "https://github.com/mekomsolutions/openmrs-module-commonreports/raw/a22de38a5bfcfc95e76c8b32b9e584fa3e158fb1/api/src/main/java/org/openmrs/module/commonreports/reports/NewDiseaseEpisodesReportManager.java",
    "contents_url": "https://api.github.com/repos/mekomsolutions/openmrs-module-commonreports/contents/api/src/main/java/org/openmrs/module/commonreports/reports/NewDiseaseEpisodesReportManager.java?ref=a22de38a5bfcfc95e76c8b32b9e584fa3e158fb1",
    "patch": "@@ -0,0 +1,129 @@\n+package org.openmrs.module.commonreports.reports;\n+\n+import java.io.InputStream;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Date;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Properties;\n+\n+import org.apache.commons.io.IOUtils;\n+import org.openmrs.api.ConceptService;\n+import org.openmrs.module.commonreports.ActivatedReportManager;\n+import org.openmrs.module.initializer.api.InitializerService;\n+import org.openmrs.module.reporting.dataset.definition.SqlDataSetDefinition;\n+import org.openmrs.module.reporting.evaluation.parameter.Parameter;\n+import org.openmrs.module.reporting.report.ReportDesign;\n+import org.openmrs.module.reporting.report.definition.ReportDefinition;\n+import org.openmrs.module.reporting.report.manager.ReportManagerUtil;\n+import org.openmrs.util.OpenmrsClassLoader;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+\n+@Component()\n+public class NewDiseaseEpisodesReportManager extends ActivatedReportManager {\n+\t\n+\tprivate static final String REPEATING_SECTION = \"sheet:1,row:4,dataset:New Disease Episodes\";\n+\t\n+\t@Autowired\n+\tprivate InitializerService inizService;\n+\t\n+\t@Autowired\n+\tprivate ConceptService conceptService;\n+\t\n+\t@Override\n+\tpublic boolean isActivated() {\n+\t\treturn true;\n+\t}\n+\t\n+\t@Override\n+\tpublic String getVersion() {\n+\t\treturn \"1.0.0-SNAPSHOT\";\n+\t}\n+\t\n+\t@Override\n+\tpublic String getUuid() {\n+\t\treturn \"434c50e8-ee54-429d-9aad-b5014ce513d2\";\n+\t}\n+\t\n+\t@Override\n+\tpublic String getName() {\n+\t\treturn \"New Disease Episodes\";\n+\t}\n+\t\n+\t@Override\n+\tpublic String getDescription() {\n+\t\treturn \"\";\n+\t}\n+\t\n+\tprivate Parameter getStartDateParameter() {\n+\t\treturn new Parameter(\"startDate\", \"Start Date\", Date.class);\n+\t}\n+\t\n+\tprivate Parameter getEndDateParameter() {\n+\t\treturn new Parameter(\"endDate\", \"End Date\", Date.class);\n+\t}\n+\t\n+\tprivate String getSqlString(String resourceName) {\n+\t\t\n+\t\tInputStream is = null;\n+\t\ttry {\n+\t\t\tis = OpenmrsClassLoader.getInstance().getResourceAsStream(resourceName);\n+\t\t\treturn IOUtils.toString(is, \"UTF-8\");\n+\t\t}\n+\t\tcatch (Exception e) {\n+\t\t\tthrow new IllegalArgumentException(\"Unable to load resource: \" + resourceName, e);\n+\t\t}\n+\t\tfinally {\n+\t\t\tIOUtils.closeQuietly(is);\n+\t\t}\n+\t}\n+\t\n+\t@Override\n+\tpublic List<Parameter> getParameters() {\n+\t\tList<Parameter> params = new ArrayList<Parameter>();\n+\t\tparams.add(getStartDateParameter());\n+\t\tparams.add(getEndDateParameter());\n+\t\treturn params;\n+\t}\n+\t\n+\t@Override\n+\tpublic ReportDefinition constructReportDefinition() {\n+\t\t\n+\t\tReportDefinition rd = new ReportDefinition();\n+\t\t\n+\t\trd.setName(\"Report Definition Name\");\n+\t\trd.setDescription(\"Report Definition Description\");\n+\t\trd.setParameters(getParameters());\n+\t\trd.setUuid(getUuid());\n+\t\t\n+\t\tSqlDataSetDefinition sqlDsd = new SqlDataSetDefinition();\n+\t\tsqlDsd.setName(\"SQL Dataset Name\");\n+\t\tsqlDsd.setDescription(\"SQL Dataset Description\");\n+\t\t\n+\t\tString rawSql = getSqlString(\"org/openmrs/module/commonreports/sql/NewEpisodesOfDiseases.sql\");\n+\t\t\n+\t\tsqlDsd.setSqlQuery(rawSql);\n+\t\tsqlDsd.addParameters(getParameters());\n+\t\t\n+\t\tMap<String, Object> parameterMappings = new HashMap<String, Object>();\n+\t\tparameterMappings.put(\"startDate\", \"${startDate}\");\n+\t\tparameterMappings.put(\"endDate\", \"${endDate}\");\n+\t\t\n+\t\trd.addDataSetDefinition(getName(), sqlDsd, parameterMappings);\n+\t\t\n+\t\treturn rd;\n+\t}\n+\t\n+\t@Override\n+\tpublic List<ReportDesign> constructReportDesigns(ReportDefinition reportDefinition) {\n+\t\tReportDesign reportDesign = ReportManagerUtil.createExcelTemplateDesign(\"7688966e-fca5-4fde-abab-1b46a87a1185\",\n+\t\t    reportDefinition, \"org/openmrs/module/commonreports/reportTemplates/NewEpisodesOfDiseasesReportTemplate.xls\");\n+\t\tProperties designProperties = new Properties();\n+\t\tdesignProperties.put(\"repeatingSections\", REPEATING_SECTION);\n+\t\treportDesign.setProperties(designProperties);\n+\t\treturn Arrays.asList(reportDesign);\n+\t}\n+}"
  },
  {
    "sha": "45c64f3f4129617b94f365abe651e7c692d0c918",
    "filename": "api/src/main/resources/org/openmrs/module/commonreports/reportTemplates/NewEpisodesOfDiseasesReportTemplate.xls",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/mekomsolutions/openmrs-module-commonreports/blob/a22de38a5bfcfc95e76c8b32b9e584fa3e158fb1/api/src/main/resources/org/openmrs/module/commonreports/reportTemplates/NewEpisodesOfDiseasesReportTemplate.xls",
    "raw_url": "https://github.com/mekomsolutions/openmrs-module-commonreports/raw/a22de38a5bfcfc95e76c8b32b9e584fa3e158fb1/api/src/main/resources/org/openmrs/module/commonreports/reportTemplates/NewEpisodesOfDiseasesReportTemplate.xls",
    "contents_url": "https://api.github.com/repos/mekomsolutions/openmrs-module-commonreports/contents/api/src/main/resources/org/openmrs/module/commonreports/reportTemplates/NewEpisodesOfDiseasesReportTemplate.xls?ref=a22de38a5bfcfc95e76c8b32b9e584fa3e158fb1"
  },
  {
    "sha": "7c944d7cec105c0d7bad1a8d209606c8d49bf1bb",
    "filename": "api/src/main/resources/org/openmrs/module/commonreports/sql/NewEpisodesOfDiseases.sql",
    "status": "added",
    "additions": 88,
    "deletions": 0,
    "changes": 88,
    "blob_url": "https://github.com/mekomsolutions/openmrs-module-commonreports/blob/a22de38a5bfcfc95e76c8b32b9e584fa3e158fb1/api/src/main/resources/org/openmrs/module/commonreports/sql/NewEpisodesOfDiseases.sql",
    "raw_url": "https://github.com/mekomsolutions/openmrs-module-commonreports/raw/a22de38a5bfcfc95e76c8b32b9e584fa3e158fb1/api/src/main/resources/org/openmrs/module/commonreports/sql/NewEpisodesOfDiseases.sql",
    "contents_url": "https://api.github.com/repos/mekomsolutions/openmrs-module-commonreports/contents/api/src/main/resources/org/openmrs/module/commonreports/sql/NewEpisodesOfDiseases.sql?ref=a22de38a5bfcfc95e76c8b32b9e584fa3e158fb1",
    "patch": "@@ -0,0 +1,88 @@\n+select maladies.name \"Maladies/Symptomes\",\n+HL1 \"M<1\",\n+FL1 \"F<1\",\n+HL4 \"M_1-4\",\n+FL4 \"F_1-4\",\n+HL9 \"M_5-9\",\n+FL9 \"F_5-9\",\n+HL14 \"M_10-14\",\n+FL14 \"F_10-14\",\n+HL24 \"M_15-24\",\n+FL24 \"F_15-24\",\n+HL49 \"M_25-49\",\n+FL49 \"F_25-49\",\n+HG50 \"M>50\",\n+FG50 \"F>50\",\n+HTotal \"M_Total\",\n+FTotal \"F_Total\"\n+from\n+(select 'qD' as name\n+UNION ALL\n+select 'BID'\n+UNION ALL\n+select 'TID'\n+UNION ALL\n+select 'QID') maladies\n+LEFT OUTER JOIN\n+(\n+select\n+diagnosis \"name\",    \n+nullif(sum(ML1),0) \"HL1\",\n+nullif(sum(FL1),0) \"FL1\",\n+nullif(sum(ML4),0) \"HL4\",\n+nullif(sum(FL4),0) \"FL4\",\n+nullif(sum(ML9),0) \"HL9\",\n+nullif(sum(FL9),0) \"FL9\",\n+nullif(sum(ML14),0) \"HL14\",\n+nullif(sum(FL14),0) \"FL14\",\n+nullif(sum(ML24),0) \"HL24\",\n+nullif(sum(FL24),0) \"FL24\",\n+nullif(sum(ML49),0) \"HL49\",\n+nullif(sum(FL49),0) \"FL49\",\n+nullif(sum(MG50),0) \"HG50\",\n+nullif(sum(FG50),0) \"FG50\",\n+nullif(sum(ML1)+sum(ML4)+sum(ML9)+ sum(ML14)+sum(ML24)+sum(ML49)+sum(MG50),0) \"HTotal\",\n+nullif(sum(FL1)+sum(FL4)+sum(FL9)+ sum(FL14)+sum(FL24)+sum(FL49)+sum(FG50),0) \"FTotal\"\n+from (\n+select\n+(CASE \n+  when o.value_coded = 12 then 'qD'\n+  when o.value_coded = 13 then 'BID'\n+  when o.value_coded = 14 then 'TID'\n+  when o.value_coded = 15 then 'QID'\n+end) 'diagnosis',\n+(CASE when round(DATEDIFF(o.obs_datetime, pr.birthdate)/365.25, 1) < 1 and pr.gender = 'M' then 1 else 0 end) \"ML1\",\n+(CASE when round(DATEDIFF(o.obs_datetime, pr.birthdate)/365.25, 1) < 1 and pr.gender = 'F' then 1 else 0 end) \"FL1\",\n+(CASE when round(DATEDIFF(o.obs_datetime, pr.birthdate)/365.25, 1) >= 1 and round(DATEDIFF(o.obs_datetime, pr.birthdate)/365.25, 1) <5 and pr.gender = 'M' then 1 else 0 end) \"ML4\",\n+(CASE when round(DATEDIFF(o.obs_datetime, pr.birthdate)/365.25, 1) >= 1 and round(DATEDIFF(o.obs_datetime, pr.birthdate)/365.25, 1) <5 and pr.gender = 'F' then 1 else 0 end) \"FL4\",\n+(CASE when round(DATEDIFF(o.obs_datetime, pr.birthdate)/365.25, 1) > 5 and round(DATEDIFF(o.obs_datetime, pr.birthdate)/365.25, 1) <10 and pr.gender = 'M' then 1 else 0 end) \"ML9\",\n+(CASE when round(DATEDIFF(o.obs_datetime, pr.birthdate)/365.25, 1) > 5 and round(DATEDIFF(o.obs_datetime, pr.birthdate)/365.25, 1) <10 and pr.gender = 'F' then 1 else 0 end) \"FL9\",\n+(CASE when round(DATEDIFF(o.obs_datetime, pr.birthdate)/365.25, 1) > 10 and round(DATEDIFF(o.obs_datetime, pr.birthdate)/365.25, 1) <15 and pr.gender = 'M' then 1 else 0 end) \"ML14\",\n+(CASE when round(DATEDIFF(o.obs_datetime, pr.birthdate)/365.25, 1) > 10 and round(DATEDIFF(o.obs_datetime, pr.birthdate)/365.25, 1) <15 and pr.gender = 'F' then 1 else 0 end) \"FL14\",\n+(CASE when round(DATEDIFF(o.obs_datetime, pr.birthdate)/365.25, 1) > 15 and round(DATEDIFF(o.obs_datetime, pr.birthdate)/365.25, 1) <25 and pr.gender = 'M' then 1 else 0 end) \"ML24\",\n+(CASE when round(DATEDIFF(o.obs_datetime, pr.birthdate)/365.25, 1) > 15 and round(DATEDIFF(o.obs_datetime, pr.birthdate)/365.25, 1) <25 and pr.gender = 'F' then 1 else 0 end) \"FL24\",\n+(CASE when round(DATEDIFF(o.obs_datetime, pr.birthdate)/365.25, 1) > 25 and round(DATEDIFF(o.obs_datetime, pr.birthdate)/365.25, 1) <50 and pr.gender = 'M' then 1 else 0 end) \"ML49\",\n+(CASE when round(DATEDIFF(o.obs_datetime, pr.birthdate)/365.25, 1) > 25 and round(DATEDIFF(o.obs_datetime, pr.birthdate)/365.25, 1) <50 and pr.gender = 'F' then 1 else 0 end) \"FL49\",\n+(CASE when round(DATEDIFF(o.obs_datetime, pr.birthdate)/365.25, 1) > 50 and pr.gender = 'M' then 1 else 0 end) \"MG50\",\n+(CASE when round(DATEDIFF(o.obs_datetime, pr.birthdate)/365.25, 1) > 50 and pr.gender = 'F' then 1 else 0 end) \"FG50\"\n+from obs o\n+INNER JOIN person pr on pr.person_id = o.person_id\n+where o.concept_id = 11\n+and o.voided = 0 \n+\n+-- Adding date params\n+AND date(o.obs_datetime) BETWEEN :startDate AND :endDate\n+\n+-- Only consider latest obs\n+and not exists\n+   (select 1 from obs o_prev \n+    where (date(o_prev.obs_datetime) > date(o.obs_datetime) or (date(o_prev.obs_datetime) = date(o.obs_datetime) and o_prev.obs_id > o.obs_id))\n+    and o_prev.person_id = o.person_id\n+    and o_prev.concept_id = o.concept_id\n+    and o_prev.value_coded = o.value_coded\n+    )\n+) oo\n+where diagnosis is not null\n+group by name\n+) t on maladies.name = t.name\n+;\n\\ No newline at end of file"
  }
]
