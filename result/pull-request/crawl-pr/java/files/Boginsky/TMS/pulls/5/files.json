[
  {
    "sha": "577ad11715336b9bebdeab10c27c05374e16bbd8",
    "filename": "lesson12/src/lesson12/Main.java",
    "status": "added",
    "additions": 24,
    "deletions": 0,
    "changes": 24,
    "blob_url": "https://github.com/Boginsky/TMS/blob/d6e337626827fdf06d8e8037d4a2a5d34b481c71/lesson12/src/lesson12/Main.java",
    "raw_url": "https://github.com/Boginsky/TMS/raw/d6e337626827fdf06d8e8037d4a2a5d34b481c71/lesson12/src/lesson12/Main.java",
    "contents_url": "https://api.github.com/repos/Boginsky/TMS/contents/lesson12/src/lesson12/Main.java?ref=d6e337626827fdf06d8e8037d4a2a5d34b481c71",
    "patch": "@@ -0,0 +1,24 @@\n+package lesson12;\n+\n+import java.lang.annotation.Annotation;\n+import java.lang.reflect.Method;\n+\n+public class Main {\n+    public static void main(String[] args) {\n+        try {\n+            MyService myService = new MyService();\n+            Class<?> cl = myService.getClass();\n+            Annotation[] classAnnotations = cl.getAnnotations();\n+            if (classAnnotations.length > 0){\n+                MyService myService1 = new MyService();\n+                myService1.setId(44);\n+                myService1.setName(\"Delivery\");\n+                Method method = myService1.getClass().getDeclaredMethod(\"thisClassInfo\");\n+                method.setAccessible(true);\n+                method.invoke(myService1);\n+            }\n+        }catch (Exception e){\n+            e.printStackTrace();\n+        }\n+    }\n+}"
  },
  {
    "sha": "8975a8202a5bb2bee4c1cc877779467f32f0284f",
    "filename": "lesson12/src/lesson12/MyService.java",
    "status": "added",
    "additions": 45,
    "deletions": 0,
    "changes": 45,
    "blob_url": "https://github.com/Boginsky/TMS/blob/d6e337626827fdf06d8e8037d4a2a5d34b481c71/lesson12/src/lesson12/MyService.java",
    "raw_url": "https://github.com/Boginsky/TMS/raw/d6e337626827fdf06d8e8037d4a2a5d34b481c71/lesson12/src/lesson12/MyService.java",
    "contents_url": "https://api.github.com/repos/Boginsky/TMS/contents/lesson12/src/lesson12/MyService.java?ref=d6e337626827fdf06d8e8037d4a2a5d34b481c71",
    "patch": "@@ -0,0 +1,45 @@\n+package lesson12;\n+\n+import java.util.Objects;\n+\n+@Version(version = 7.0, nameVersion = \"Kaby\")\n+public class MyService {\n+    private String name;\n+    private int id;\n+\n+    MyService(){\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    public int getId() {\n+        return id;\n+    }\n+\n+    public void setId(int id) {\n+        this.id = id;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) return true;\n+        if (o == null || getClass() != o.getClass()) return false;\n+        MyService myService = (MyService) o;\n+        return id == myService.id && Objects.equals(name, myService.name);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(name, id);\n+    }\n+\n+    private void thisClassInfo (){\n+        System.out.println(\"ID: \" + id + \".Name of Service: \" + name);\n+    }\n+}"
  },
  {
    "sha": "000a7d52652bc4430ee961dca0578bf140a9b1ed",
    "filename": "lesson12/src/lesson12/Version.java",
    "status": "added",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/Boginsky/TMS/blob/d6e337626827fdf06d8e8037d4a2a5d34b481c71/lesson12/src/lesson12/Version.java",
    "raw_url": "https://github.com/Boginsky/TMS/raw/d6e337626827fdf06d8e8037d4a2a5d34b481c71/lesson12/src/lesson12/Version.java",
    "contents_url": "https://api.github.com/repos/Boginsky/TMS/contents/lesson12/src/lesson12/Version.java?ref=d6e337626827fdf06d8e8037d4a2a5d34b481c71",
    "patch": "@@ -0,0 +1,12 @@\n+package lesson12;\n+\n+\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+\n+@Retention(RetentionPolicy.RUNTIME)\n+public @interface Version {\n+    String nameVersion() default \"Name\";\n+    double version() default 1.0;\n+\n+}"
  },
  {
    "sha": "f801088d2707a019115ec6c1510a3c6b6b01f74a",
    "filename": "lesson12/src/lesson12/task28/Task28.java",
    "status": "added",
    "additions": 53,
    "deletions": 0,
    "changes": 53,
    "blob_url": "https://github.com/Boginsky/TMS/blob/d6e337626827fdf06d8e8037d4a2a5d34b481c71/lesson12/src/lesson12/task28/Task28.java",
    "raw_url": "https://github.com/Boginsky/TMS/raw/d6e337626827fdf06d8e8037d4a2a5d34b481c71/lesson12/src/lesson12/task28/Task28.java",
    "contents_url": "https://api.github.com/repos/Boginsky/TMS/contents/lesson12/src/lesson12/task28/Task28.java?ref=d6e337626827fdf06d8e8037d4a2a5d34b481c71",
    "patch": "@@ -0,0 +1,53 @@\n+package lesson12.task28;\n+\n+\n+/*Написать класс, который умеет хранить в себе массив любых типов\n+\t\tданных (int, long etc.). Реализовать метод, который возвращает\n+\t\tлюбой элемент массива по индексу.*/\n+\n+\n+public class Task28 {\n+\n+    public static <T> void method(T[] arr) {\n+\n+        T[] t = arr;\n+\n+        Box<T> box = new Box<>();\n+        box.setArr(t);\n+        System.out.println(\"Элемент под индексом 1 \" + box.getIndex(1));\n+\n+        for (int i = 0; i < box.length(); i++) {\n+            System.out.println(box.getIndex(i) + \" \");\n+        }\n+\n+    }\n+\n+\n+    public static void main(String[] args) {\n+        String[] s = {\"Hello\", \"My\", \"Name\"};\n+        Integer[] i = {1,22,23123,123123,123};\n+        method(i);\n+        method(s);\n+\n+\n+    }\n+}\n+\n+\n+class Box<T> {\n+    private T[] arr;\n+\n+\n+    public T getIndex(int index) {\n+        return arr[index];\n+    }\n+\n+    public void setArr(T[] arr) {\n+        this.arr = arr;\n+    }\n+\n+\n+    public int length() {\n+        return arr.length;\n+    }\n+}\n\\ No newline at end of file"
  }
]
