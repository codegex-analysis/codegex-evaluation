[
  {
    "sha": "dbc3f0661cdb046ac044d1412fa85591b8bcbbed",
    "filename": "lesson15/out/production/lesson15/lesson15/additionaltask1/Text.txt",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/Boginsky/TMS/blob/384edf596b50e77fea98bb3017d2005c3a3e3300/lesson15/out/production/lesson15/lesson15/additionaltask1/Text.txt",
    "raw_url": "https://github.com/Boginsky/TMS/raw/384edf596b50e77fea98bb3017d2005c3a3e3300/lesson15/out/production/lesson15/lesson15/additionaltask1/Text.txt",
    "contents_url": "https://api.github.com/repos/Boginsky/TMS/contents/lesson15/out/production/lesson15/lesson15/additionaltask1/Text.txt?ref=384edf596b50e77fea98bb3017d2005c3a3e3300",
    "patch": "@@ -0,0 +1,7 @@\n+kirill\n+bus\n+main\n+anna\n+noon\n+life\n+mom\n\\ No newline at end of file"
  },
  {
    "sha": "92e90c7a32c6c554a2b57a25677319cc31bf2fc4",
    "filename": "lesson15/out/production/lesson15/lesson15/additionaltask1/Text2.txt",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/Boginsky/TMS/blob/384edf596b50e77fea98bb3017d2005c3a3e3300/lesson15/out/production/lesson15/lesson15/additionaltask1/Text2.txt",
    "raw_url": "https://github.com/Boginsky/TMS/raw/384edf596b50e77fea98bb3017d2005c3a3e3300/lesson15/out/production/lesson15/lesson15/additionaltask1/Text2.txt",
    "contents_url": "https://api.github.com/repos/Boginsky/TMS/contents/lesson15/out/production/lesson15/lesson15/additionaltask1/Text2.txt?ref=384edf596b50e77fea98bb3017d2005c3a3e3300"
  },
  {
    "sha": "03266c05b89799ae19e937dbf3c8f8322e25bd41",
    "filename": "lesson15/out/production/lesson15/lesson15/additionaltask2/Text.txt",
    "status": "added",
    "additions": 28,
    "deletions": 0,
    "changes": 28,
    "blob_url": "https://github.com/Boginsky/TMS/blob/384edf596b50e77fea98bb3017d2005c3a3e3300/lesson15/out/production/lesson15/lesson15/additionaltask2/Text.txt",
    "raw_url": "https://github.com/Boginsky/TMS/raw/384edf596b50e77fea98bb3017d2005c3a3e3300/lesson15/out/production/lesson15/lesson15/additionaltask2/Text.txt",
    "contents_url": "https://api.github.com/repos/Boginsky/TMS/contents/lesson15/out/production/lesson15/lesson15/additionaltask2/Text.txt?ref=384edf596b50e77fea98bb3017d2005c3a3e3300",
    "patch": "@@ -0,0 +1,28 @@\n+The United States of America is a big country in Northern America.\n+Today we will tell you about one of its most famous symbols — a bald eagle.\n+Soon after the USA got its independence from Great Britain, the government decided to use its image on the Great Seal.\n+The picture of a bald eagle is often used as a symbol of courage, strength and power.\n+This bird lives only on the territory of Northern America, you won’t find it anywhere else.\n+The eagle is very large: it may grow almost 3 feet high, its wingspan up to 8 feet.\n+To tell the truth, the eagle isn’t really bald.\n+Its head is covered with white feathers, that is why it seems to be bald.\n+The bird is a very committed partner in marriage.\n+They choose marriage partners for life, and they take care for their babies together.\n+Males and females look alike, but females are usually larger.\n+Eagles build large nests, and usually they do it together.\n+One of the biggest ones was recorded in the Guinness Book of Records, because it weighed almost 2 tons.\n+These birds are one of a kind, because they can see even with their eyes closed.\n+The thing is, in addition to usual eyelids they have special membranes on their eyes. \n+Those membranes help them better preserve their eyes from the dust.\n+Before the European colonists first came to America there used to be plenty of eagles. \n+But after their arrival eagles soon grew close to extinction. \n+Farmers who grew vegetables on that land, used a very dangerous chemical to get rid of the pests. \n+As predators who eat their pray, eagles often got poisoned.\n+ Only with the help of ecologists those beautiful birds could survive.\n+In a western movie cowboys often gallop into the prairies.\n+The sound, accompanying their progress is that of an eagle cry, as it seems. \n+We are sorry to discourage you, but in reality eagles make really funny noises. \n+They sound more like nasty giggling, than like a cry of a strong bird.\n+The eagle is. \n+the only bird whose cry is dubbed on TV. \n+They do this not to spoil its proud image.\n\\ No newline at end of file"
  },
  {
    "sha": "0f0c913d55e1f59308f828d3bb3c56cecdddabb3",
    "filename": "lesson15/out/production/lesson15/lesson15/additionaltask3/blacklist.txt",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/Boginsky/TMS/blob/384edf596b50e77fea98bb3017d2005c3a3e3300/lesson15/out/production/lesson15/lesson15/additionaltask3/blacklist.txt",
    "raw_url": "https://github.com/Boginsky/TMS/raw/384edf596b50e77fea98bb3017d2005c3a3e3300/lesson15/out/production/lesson15/lesson15/additionaltask3/blacklist.txt",
    "contents_url": "https://api.github.com/repos/Boginsky/TMS/contents/lesson15/out/production/lesson15/lesson15/additionaltask3/blacklist.txt?ref=384edf596b50e77fea98bb3017d2005c3a3e3300",
    "patch": "@@ -0,0 +1 @@\n+success\n\\ No newline at end of file"
  },
  {
    "sha": "2cd9ed196fcb5526f354e9c8ada8bc04d02e58f7",
    "filename": "lesson15/out/production/lesson15/lesson15/additionaltask3/origin.txt",
    "status": "added",
    "additions": 23,
    "deletions": 0,
    "changes": 23,
    "blob_url": "https://github.com/Boginsky/TMS/blob/384edf596b50e77fea98bb3017d2005c3a3e3300/lesson15/out/production/lesson15/lesson15/additionaltask3/origin.txt",
    "raw_url": "https://github.com/Boginsky/TMS/raw/384edf596b50e77fea98bb3017d2005c3a3e3300/lesson15/out/production/lesson15/lesson15/additionaltask3/origin.txt",
    "contents_url": "https://api.github.com/repos/Boginsky/TMS/contents/lesson15/out/production/lesson15/lesson15/additionaltask3/origin.txt?ref=384edf596b50e77fea98bb3017d2005c3a3e3300",
    "patch": "@@ -0,0 +1,23 @@\n+Once a month my family and I go to success the cinema. \n+It’s our tradition and favorite way to watch new movies. \n+We begin to prepare in advance. \n+We usually look for what movies are on and then discuss what movie to watch.\n+My father prefers popular science films and my mother likes musicals. \n+My sister watches a good love story with pleasure. \n+And I enjoy detective films. We all like different genres, but we never argue with each other. \n+We choose movie for the family, we need something pleasant, amusing and funny.\n+My father usually books tickets before the show. \n+Then I look forward to that evening when I turn out in the cinema. \n+I like the experience of being there. \n+Cinema inside has a special magic atmosphere. \n+We take places in the comfortable chairs. \n+My father buys caramel popcorn for my mum and sister, a coke for me and a bottle of water for himself. \n+And we are ready for watching.\n+The big screen and the sound are rather important things. \n+The typical combination of voices and images can affect people on many different levels. \n+Movies touch not only our minds but also our emotions. \n+When the lights go down, it seems that you find yourself in another world.\n+After watching we share our impressions by the acting and the movie itself. \n+Any film extends our knowledge about people and about the world we live. \n+And owing to films we can keep our family tradition. \n+Our going to the cinema is not only a way of relaxing, but also a lovely way of spending time together.\n\\ No newline at end of file"
  },
  {
    "sha": "92f81c70eb59c085c5156872857f41f0c70d51a7",
    "filename": "lesson15/out/production/lesson15/lesson15/adiitionaltask4/Car.txt",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/Boginsky/TMS/blob/384edf596b50e77fea98bb3017d2005c3a3e3300/lesson15/out/production/lesson15/lesson15/adiitionaltask4/Car.txt",
    "raw_url": "https://github.com/Boginsky/TMS/raw/384edf596b50e77fea98bb3017d2005c3a3e3300/lesson15/out/production/lesson15/lesson15/adiitionaltask4/Car.txt",
    "contents_url": "https://api.github.com/repos/Boginsky/TMS/contents/lesson15/out/production/lesson15/lesson15/adiitionaltask4/Car.txt?ref=384edf596b50e77fea98bb3017d2005c3a3e3300"
  },
  {
    "sha": "ace90ac144ae5405cdf07757e503ca1881c6adf6",
    "filename": "lesson15/out/production/lesson15/lesson15/task33/Task33.txt",
    "status": "added",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/Boginsky/TMS/blob/384edf596b50e77fea98bb3017d2005c3a3e3300/lesson15/out/production/lesson15/lesson15/task33/Task33.txt",
    "raw_url": "https://github.com/Boginsky/TMS/raw/384edf596b50e77fea98bb3017d2005c3a3e3300/lesson15/out/production/lesson15/lesson15/task33/Task33.txt",
    "contents_url": "https://api.github.com/repos/Boginsky/TMS/contents/lesson15/out/production/lesson15/lesson15/task33/Task33.txt?ref=384edf596b50e77fea98bb3017d2005c3a3e3300",
    "patch": "@@ -0,0 +1,2 @@\n+John is American. He’s from Boston. He arrived in Saint Petersburg 2 years ago and he doesn’t want to go back to the United States. He often thinks about his country, but he likes Saint Petersburg way of life. In fact, he would like to live here and work in the United States but that’s difficult.\n+John likes to go out, , , , , he often meets friends on the weekends or he goes to have. a bite with them. In general, they can talk about everything such as work, girls, sports, etc. He often goes to the cinema; he goes there once a week. He would like to go there more often but he doesn’t have much time because of his work.\n\\ No newline at end of file"
  },
  {
    "sha": "2c6a01340e859fbc1469f42ee6a31ee18f337d5f",
    "filename": "lesson15/out/production/lesson15/lesson15/task34/Task34.txt",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/Boginsky/TMS/blob/384edf596b50e77fea98bb3017d2005c3a3e3300/lesson15/out/production/lesson15/lesson15/task34/Task34.txt",
    "raw_url": "https://github.com/Boginsky/TMS/raw/384edf596b50e77fea98bb3017d2005c3a3e3300/lesson15/out/production/lesson15/lesson15/task34/Task34.txt",
    "contents_url": "https://api.github.com/repos/Boginsky/TMS/contents/lesson15/out/production/lesson15/lesson15/task34/Task34.txt?ref=384edf596b50e77fea98bb3017d2005c3a3e3300",
    "patch": "@@ -0,0 +1 @@\n+asdlasjkdas;dlalsd 11 11 11 12 22 13 12 k;alsdjkas;ldaksd;lasdkas;da a;'sldkas;ldkas;ldkasd;a as;ldkasd;lasdkas;l as 22 11 33333 3452343 34234 12312 ldfsd 23123 s32123\n\\ No newline at end of file"
  },
  {
    "sha": "c577bf24bdefb23b05dd51a78b5ca04c00f18a35",
    "filename": "lesson15/out/production/lesson15/lesson15/task35/Task35.txt",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/Boginsky/TMS/blob/384edf596b50e77fea98bb3017d2005c3a3e3300/lesson15/out/production/lesson15/lesson15/task35/Task35.txt",
    "raw_url": "https://github.com/Boginsky/TMS/raw/384edf596b50e77fea98bb3017d2005c3a3e3300/lesson15/out/production/lesson15/lesson15/task35/Task35.txt",
    "contents_url": "https://api.github.com/repos/Boginsky/TMS/contents/lesson15/out/production/lesson15/lesson15/task35/Task35.txt?ref=384edf596b50e77fea98bb3017d2005c3a3e3300"
  },
  {
    "sha": "6748bc3f4bc3771bb0a4e4f581a994e1b5728098",
    "filename": "lesson15/src/lesson15/additionaltask1/AdditionalTask.java",
    "status": "added",
    "additions": 42,
    "deletions": 0,
    "changes": 42,
    "blob_url": "https://github.com/Boginsky/TMS/blob/384edf596b50e77fea98bb3017d2005c3a3e3300/lesson15/src/lesson15/additionaltask1/AdditionalTask.java",
    "raw_url": "https://github.com/Boginsky/TMS/raw/384edf596b50e77fea98bb3017d2005c3a3e3300/lesson15/src/lesson15/additionaltask1/AdditionalTask.java",
    "contents_url": "https://api.github.com/repos/Boginsky/TMS/contents/lesson15/src/lesson15/additionaltask1/AdditionalTask.java?ref=384edf596b50e77fea98bb3017d2005c3a3e3300",
    "patch": "@@ -0,0 +1,42 @@\n+package lesson15.additionaltask1;\n+\n+import java.io.*;\n+import java.util.ArrayList;\n+//1)В исходном файле находятся слова, каждое слово на новой стороке. После\n+//запуска программы должен создать файл, который будет содержать в себе\n+//только полиндромы\n+\n+public class AdditionalTask {\n+    public static void main(String[] args) throws IOException {\n+\n+        File f = new File(\"E:\\\\TMS_DEV\\\\TMS\\\\lesson15\\\\src\\\\lesson15\\\\additionaltask\\\\Text.txt\");\n+\n+        ArrayList<String> list = new ArrayList<>();\n+        BufferedReader br = new BufferedReader(new FileReader(f));\n+        String line = br.readLine();\n+        System.out.println(\"Все слова:\");\n+        while (line != null) {\n+            System.out.print(line + \" \");\n+\n+            StringBuffer rev = new StringBuffer(line).reverse();\n+            String strRev = rev.toString();\n+\n+            if (line.equals(strRev)) {\n+                list.add(line);\n+            }\n+            line = br.readLine();\n+        }\n+        System.out.println(\"\");\n+        System.out.println(\"Все полиндромы из файла:\");\n+        System.out.println(list);\n+\n+        File f2 = new File(\"E:\\\\TMS_DEV\\\\TMS\\\\lesson15\\\\src\\\\lesson15\\\\additionaltask\\\\Text2.txt\");\n+\n+        try (ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(f2))) {\n+            for (int i = 0; i < list.size(); i++) {\n+                oos.writeObject(list.get(i));\n+            }\n+        }\n+    }\n+}\n+"
  },
  {
    "sha": "dbc3f0661cdb046ac044d1412fa85591b8bcbbed",
    "filename": "lesson15/src/lesson15/additionaltask1/Text.txt",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/Boginsky/TMS/blob/384edf596b50e77fea98bb3017d2005c3a3e3300/lesson15/src/lesson15/additionaltask1/Text.txt",
    "raw_url": "https://github.com/Boginsky/TMS/raw/384edf596b50e77fea98bb3017d2005c3a3e3300/lesson15/src/lesson15/additionaltask1/Text.txt",
    "contents_url": "https://api.github.com/repos/Boginsky/TMS/contents/lesson15/src/lesson15/additionaltask1/Text.txt?ref=384edf596b50e77fea98bb3017d2005c3a3e3300",
    "patch": "@@ -0,0 +1,7 @@\n+kirill\n+bus\n+main\n+anna\n+noon\n+life\n+mom\n\\ No newline at end of file"
  },
  {
    "sha": "92e90c7a32c6c554a2b57a25677319cc31bf2fc4",
    "filename": "lesson15/src/lesson15/additionaltask1/Text2.txt",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/Boginsky/TMS/blob/384edf596b50e77fea98bb3017d2005c3a3e3300/lesson15/src/lesson15/additionaltask1/Text2.txt",
    "raw_url": "https://github.com/Boginsky/TMS/raw/384edf596b50e77fea98bb3017d2005c3a3e3300/lesson15/src/lesson15/additionaltask1/Text2.txt",
    "contents_url": "https://api.github.com/repos/Boginsky/TMS/contents/lesson15/src/lesson15/additionaltask1/Text2.txt?ref=384edf596b50e77fea98bb3017d2005c3a3e3300"
  },
  {
    "sha": "0cf2250a157b76843e812977211eeeaabc432e31",
    "filename": "lesson15/src/lesson15/additionaltask2/Main.java",
    "status": "added",
    "additions": 44,
    "deletions": 0,
    "changes": 44,
    "blob_url": "https://github.com/Boginsky/TMS/blob/384edf596b50e77fea98bb3017d2005c3a3e3300/lesson15/src/lesson15/additionaltask2/Main.java",
    "raw_url": "https://github.com/Boginsky/TMS/raw/384edf596b50e77fea98bb3017d2005c3a3e3300/lesson15/src/lesson15/additionaltask2/Main.java",
    "contents_url": "https://api.github.com/repos/Boginsky/TMS/contents/lesson15/src/lesson15/additionaltask2/Main.java?ref=384edf596b50e77fea98bb3017d2005c3a3e3300",
    "patch": "@@ -0,0 +1,44 @@\n+package lesson15.additionaltask2;\n+\n+import java.io.*;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Scanner;\n+\n+//2)Текстовый файл содержит текст. После запуска программы в другой файл\n+//должны записаться только те предложения в которых от 3-х до 5-ти слов. Если в\n+//предложении присутствует слово-палиндром, то не имеет значения какое кол-во\n+//слов в предложении, оно попадает в новый файл.\n+//\n+//Пишем все в ООП стиле. Создаём класс TextFormater\n+//в котором два статических метода:\n+//1. Метод принимает строку и возвращает кол-во слов в строке.\n+//2. Метод принимает строку и проверяет есть ли в строке слово-палиндром. Если\n+//есть возвращает true, если нет false\n+//\n+//В main считываем файл.\n+//Разбиваем текст на предложения. Используя методы класса TextFormater\n+//определяем подходит ли нам предложение. Если подходит добавляем его в\n+//новый файл\n+\n+public class Main {\n+    public static void main(String[] args) throws IOException {\n+        BufferedReader bufferedInputStream = new BufferedReader(new FileReader(\"E:\\\\TMS_DEV\\\\TMS\\\\lesson15\\\\src\\\\lesson15\\\\additionaltask2\\\\Text.txt\"));\n+        String res = bufferedInputStream.readLine();\n+        ArrayList<String> list = new ArrayList<>();\n+        while (res != null) {\n+            list.add(res);\n+            res = bufferedInputStream.readLine();\n+        }\n+        TextFormater textFormater = new TextFormater();\n+        ArrayList<String> list1 = new ArrayList<>();\n+        for (String s : list) {\n+            if (textFormater.methodPaliandrom(s)) {\n+                list1.add(s);\n+            } else if (textFormater.methodAmountOfWords(s) >= 3 && textFormater.methodAmountOfWords(s) <= 5) {\n+                list1.add(s);\n+            }\n+        }\n+        System.out.println(list1);\n+    }\n+}"
  },
  {
    "sha": "03266c05b89799ae19e937dbf3c8f8322e25bd41",
    "filename": "lesson15/src/lesson15/additionaltask2/Text.txt",
    "status": "added",
    "additions": 28,
    "deletions": 0,
    "changes": 28,
    "blob_url": "https://github.com/Boginsky/TMS/blob/384edf596b50e77fea98bb3017d2005c3a3e3300/lesson15/src/lesson15/additionaltask2/Text.txt",
    "raw_url": "https://github.com/Boginsky/TMS/raw/384edf596b50e77fea98bb3017d2005c3a3e3300/lesson15/src/lesson15/additionaltask2/Text.txt",
    "contents_url": "https://api.github.com/repos/Boginsky/TMS/contents/lesson15/src/lesson15/additionaltask2/Text.txt?ref=384edf596b50e77fea98bb3017d2005c3a3e3300",
    "patch": "@@ -0,0 +1,28 @@\n+The United States of America is a big country in Northern America.\n+Today we will tell you about one of its most famous symbols — a bald eagle.\n+Soon after the USA got its independence from Great Britain, the government decided to use its image on the Great Seal.\n+The picture of a bald eagle is often used as a symbol of courage, strength and power.\n+This bird lives only on the territory of Northern America, you won’t find it anywhere else.\n+The eagle is very large: it may grow almost 3 feet high, its wingspan up to 8 feet.\n+To tell the truth, the eagle isn’t really bald.\n+Its head is covered with white feathers, that is why it seems to be bald.\n+The bird is a very committed partner in marriage.\n+They choose marriage partners for life, and they take care for their babies together.\n+Males and females look alike, but females are usually larger.\n+Eagles build large nests, and usually they do it together.\n+One of the biggest ones was recorded in the Guinness Book of Records, because it weighed almost 2 tons.\n+These birds are one of a kind, because they can see even with their eyes closed.\n+The thing is, in addition to usual eyelids they have special membranes on their eyes. \n+Those membranes help them better preserve their eyes from the dust.\n+Before the European colonists first came to America there used to be plenty of eagles. \n+But after their arrival eagles soon grew close to extinction. \n+Farmers who grew vegetables on that land, used a very dangerous chemical to get rid of the pests. \n+As predators who eat their pray, eagles often got poisoned.\n+ Only with the help of ecologists those beautiful birds could survive.\n+In a western movie cowboys often gallop into the prairies.\n+The sound, accompanying their progress is that of an eagle cry, as it seems. \n+We are sorry to discourage you, but in reality eagles make really funny noises. \n+They sound more like nasty giggling, than like a cry of a strong bird.\n+The eagle is. \n+the only bird whose cry is dubbed on TV. \n+They do this not to spoil its proud image.\n\\ No newline at end of file"
  },
  {
    "sha": "fa116735cab8af688bb159a7e957f3744de8bca5",
    "filename": "lesson15/src/lesson15/additionaltask2/TextFormater.java",
    "status": "added",
    "additions": 38,
    "deletions": 0,
    "changes": 38,
    "blob_url": "https://github.com/Boginsky/TMS/blob/384edf596b50e77fea98bb3017d2005c3a3e3300/lesson15/src/lesson15/additionaltask2/TextFormater.java",
    "raw_url": "https://github.com/Boginsky/TMS/raw/384edf596b50e77fea98bb3017d2005c3a3e3300/lesson15/src/lesson15/additionaltask2/TextFormater.java",
    "contents_url": "https://api.github.com/repos/Boginsky/TMS/contents/lesson15/src/lesson15/additionaltask2/TextFormater.java?ref=384edf596b50e77fea98bb3017d2005c3a3e3300",
    "patch": "@@ -0,0 +1,38 @@\n+package lesson15.additionaltask2;\n+\n+import java.util.ArrayList;\n+import java.util.Scanner;\n+\n+public class TextFormater {\n+\n+    int methodAmountOfWords(String str){\n+        Scanner sc = new Scanner(str);\n+        int amountOfWords = 0;\n+        while (sc.hasNext()){\n+            sc.next();\n+            amountOfWords++;\n+        }\n+        return amountOfWords;\n+    }\n+\n+    boolean methodPaliandrom (String str) {\n+        boolean result = false;\n+        String[] words = str.split(\"\\\\s\");\n+        for (String word : words) {\n+            String rev = reverseString(word);\n+\n+            if (word.equals(rev)) {\n+                result = true;\n+                break;\n+            }\n+            }\n+        return result;\n+        }\n+    public static String reverseString(String str) {\n+        String result = \"\";\n+        for (int i = 0; i < str.length(); i++) {\n+            result = str.charAt(i) + result;\n+        }\n+        return result;\n+    }\n+    }"
  },
  {
    "sha": "41007b22f40f385518a7ff3623a018e9e9ddbe4b",
    "filename": "lesson15/src/lesson15/additionaltask3/Main.java",
    "status": "added",
    "additions": 72,
    "deletions": 0,
    "changes": 72,
    "blob_url": "https://github.com/Boginsky/TMS/blob/384edf596b50e77fea98bb3017d2005c3a3e3300/lesson15/src/lesson15/additionaltask3/Main.java",
    "raw_url": "https://github.com/Boginsky/TMS/raw/384edf596b50e77fea98bb3017d2005c3a3e3300/lesson15/src/lesson15/additionaltask3/Main.java",
    "contents_url": "https://api.github.com/repos/Boginsky/TMS/contents/lesson15/src/lesson15/additionaltask3/Main.java?ref=384edf596b50e77fea98bb3017d2005c3a3e3300",
    "patch": "@@ -0,0 +1,72 @@\n+package lesson15.additionaltask3;\n+\n+//3) Проверка на цензуру:\n+//Создаете 2 файла.\n+//1 - й. Содержит исходный текст.\n+//2 - й. Содержит слова недопустимые в тексте(black list). Структура файла\n+//определите сами, хотите каждое слово на новой строке, хотите через запятую\n+//разделяйте, ваша программа делайте как считаете нужным.\n+//Задача: необходимо проверить проходит ли текст цензуру. Если в тексте не\n+//встретилось ни одного недопустимого слова, то выводите сообщение о том что\n+//текст прошёл проверку на цензуру. Если нет, то выводите соответствуюущее\n+//сообщение, кол-во предложений не прошедших проверку и сами предложения\n+//подлежащие исправлению.\n+\n+import java.io.*;\n+import java.util.ArrayList;\n+\n+public class Main {\n+    public static void main(String[] args) throws IOException {\n+        BufferedReader bufferedReader = new BufferedReader(new FileReader(\"E:\\\\TMS_DEV\\\\TMS\\\\lesson15\\\\src\\\\lesson15\\\\additionaltask3\\\\origin.txt\"));\n+        String res = bufferedReader.readLine();\n+\n+        ArrayList<String> list = new ArrayList<>();\n+        while (res != null) {\n+            list.add(res);\n+            res = bufferedReader.readLine();\n+        }\n+\n+        BufferedReader bufferedReader1 = new BufferedReader(new FileReader(\"E:\\\\TMS_DEV\\\\TMS\\\\lesson15\\\\src\\\\lesson15\\\\additionaltask3\\\\blacklist.txt\"));\n+        String res1 = bufferedReader1.readLine();\n+\n+        ArrayList<String> list1 = new ArrayList<>();\n+        while (res1 != null) {\n+            list1.add(res1);\n+            res1 = bufferedReader1.readLine();\n+        }\n+\n+        boolean result = false;\n+        for (int i = 0; i < list1.size(); i++) {\n+            for (int j = 0; j < list.size(); j++) {\n+                result = method(list1.get(i), list.get(j));\n+                if(result == true){\n+                    break;\n+                }\n+            }\n+            if (result == true) {\n+                System.out.println(\"Проверка на цензуру не пройдена!\");\n+                break;\n+            }\n+        }\n+        if (result == false) {\n+            System.out.println(\"Проверка на цензуру пройдена\");\n+        }\n+    }\n+\n+    static boolean method(String str, String str1) {\n+        boolean result = false;\n+        String[] words1 = str.split(\"\\\\s\");\n+        String[] words = str1.split(\"\\\\s\");\n+        for (int i = 0; i < words1.length; i++) {\n+            for (int j = 0; j < words.length; j++) {\n+                if (words1[i].equals(words[j])) {\n+                    result = true;\n+                }\n+            }\n+        }\n+        return result;\n+    }\n+}\n+\n+\n+"
  },
  {
    "sha": "0f0c913d55e1f59308f828d3bb3c56cecdddabb3",
    "filename": "lesson15/src/lesson15/additionaltask3/blacklist.txt",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/Boginsky/TMS/blob/384edf596b50e77fea98bb3017d2005c3a3e3300/lesson15/src/lesson15/additionaltask3/blacklist.txt",
    "raw_url": "https://github.com/Boginsky/TMS/raw/384edf596b50e77fea98bb3017d2005c3a3e3300/lesson15/src/lesson15/additionaltask3/blacklist.txt",
    "contents_url": "https://api.github.com/repos/Boginsky/TMS/contents/lesson15/src/lesson15/additionaltask3/blacklist.txt?ref=384edf596b50e77fea98bb3017d2005c3a3e3300",
    "patch": "@@ -0,0 +1 @@\n+success\n\\ No newline at end of file"
  },
  {
    "sha": "2cd9ed196fcb5526f354e9c8ada8bc04d02e58f7",
    "filename": "lesson15/src/lesson15/additionaltask3/origin.txt",
    "status": "added",
    "additions": 23,
    "deletions": 0,
    "changes": 23,
    "blob_url": "https://github.com/Boginsky/TMS/blob/384edf596b50e77fea98bb3017d2005c3a3e3300/lesson15/src/lesson15/additionaltask3/origin.txt",
    "raw_url": "https://github.com/Boginsky/TMS/raw/384edf596b50e77fea98bb3017d2005c3a3e3300/lesson15/src/lesson15/additionaltask3/origin.txt",
    "contents_url": "https://api.github.com/repos/Boginsky/TMS/contents/lesson15/src/lesson15/additionaltask3/origin.txt?ref=384edf596b50e77fea98bb3017d2005c3a3e3300",
    "patch": "@@ -0,0 +1,23 @@\n+Once a month my family and I go to success the cinema. \n+It’s our tradition and favorite way to watch new movies. \n+We begin to prepare in advance. \n+We usually look for what movies are on and then discuss what movie to watch.\n+My father prefers popular science films and my mother likes musicals. \n+My sister watches a good love story with pleasure. \n+And I enjoy detective films. We all like different genres, but we never argue with each other. \n+We choose movie for the family, we need something pleasant, amusing and funny.\n+My father usually books tickets before the show. \n+Then I look forward to that evening when I turn out in the cinema. \n+I like the experience of being there. \n+Cinema inside has a special magic atmosphere. \n+We take places in the comfortable chairs. \n+My father buys caramel popcorn for my mum and sister, a coke for me and a bottle of water for himself. \n+And we are ready for watching.\n+The big screen and the sound are rather important things. \n+The typical combination of voices and images can affect people on many different levels. \n+Movies touch not only our minds but also our emotions. \n+When the lights go down, it seems that you find yourself in another world.\n+After watching we share our impressions by the acting and the movie itself. \n+Any film extends our knowledge about people and about the world we live. \n+And owing to films we can keep our family tradition. \n+Our going to the cinema is not only a way of relaxing, but also a lovely way of spending time together.\n\\ No newline at end of file"
  },
  {
    "sha": "59b6343b6c75b61d3d09b3eab7bf7d2dc3726755",
    "filename": "lesson15/src/lesson15/adiitionaltask4/Car.java",
    "status": "added",
    "additions": 72,
    "deletions": 0,
    "changes": 72,
    "blob_url": "https://github.com/Boginsky/TMS/blob/384edf596b50e77fea98bb3017d2005c3a3e3300/lesson15/src/lesson15/adiitionaltask4/Car.java",
    "raw_url": "https://github.com/Boginsky/TMS/raw/384edf596b50e77fea98bb3017d2005c3a3e3300/lesson15/src/lesson15/adiitionaltask4/Car.java",
    "contents_url": "https://api.github.com/repos/Boginsky/TMS/contents/lesson15/src/lesson15/adiitionaltask4/Car.java?ref=384edf596b50e77fea98bb3017d2005c3a3e3300",
    "patch": "@@ -0,0 +1,72 @@\n+package lesson15.adiitionaltask4;\n+//4) Сеарилизовать объект Автомобиль(Марка, скорость, цена). После\n+//сериализации произвести обратный процесс\n+\n+import java.io.*;\n+\n+public class Car implements Serializable {\n+    private String brand;\n+    private int speed;\n+    private int price;\n+\n+    public Car(){\n+    }\n+\n+    public Car(String brand, int speed, int price) {\n+        this.brand = brand;\n+        this.speed = speed;\n+        this.price = price;\n+    }\n+\n+    public String getBrand() {\n+        return brand;\n+    }\n+\n+    public void setBrand(String brand) {\n+        this.brand = brand;\n+    }\n+\n+    public int getSpeed() {\n+        return speed;\n+    }\n+\n+    public void setSpeed(int speed) {\n+        this.speed = speed;\n+    }\n+\n+    public int getPrice() {\n+        return price;\n+    }\n+\n+    public void setPrice(int price) {\n+        this.price = price;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"Car{\" +\n+                \"brand='\" + brand + '\\'' +\n+                \", speed=\" + speed +\n+                \", price=\" + price +\n+                '}';\n+    }\n+}\n+\n+class Main{\n+    public static void main(String[] args) {\n+        Car car = new Car(\"BMW\",200,10000);\n+\n+        File f = new File(\"E:\\\\TMS_DEV\\\\TMS\\\\lesson15\\\\src\\\\lesson15\\\\adiitionaltask4\\\\Car.txt\");\n+\n+        try(ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(f));\n+            ObjectInputStream in = new ObjectInputStream(new FileInputStream(f))){\n+            oos.writeObject(car);\n+            car = null;\n+            car = (Car) in.readObject();\n+            System.out.println(car);\n+        } catch (IOException | ClassNotFoundException e) {\n+            e.printStackTrace();\n+        }\n+    }\n+\n+}"
  },
  {
    "sha": "92f81c70eb59c085c5156872857f41f0c70d51a7",
    "filename": "lesson15/src/lesson15/adiitionaltask4/Car.txt",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/Boginsky/TMS/blob/384edf596b50e77fea98bb3017d2005c3a3e3300/lesson15/src/lesson15/adiitionaltask4/Car.txt",
    "raw_url": "https://github.com/Boginsky/TMS/raw/384edf596b50e77fea98bb3017d2005c3a3e3300/lesson15/src/lesson15/adiitionaltask4/Car.txt",
    "contents_url": "https://api.github.com/repos/Boginsky/TMS/contents/lesson15/src/lesson15/adiitionaltask4/Car.txt?ref=384edf596b50e77fea98bb3017d2005c3a3e3300"
  },
  {
    "sha": "421c3e6c715cc35e07d9a6721e700006b55ffdfb",
    "filename": "lesson15/src/lesson15/task33/Task33.java",
    "status": "added",
    "additions": 36,
    "deletions": 0,
    "changes": 36,
    "blob_url": "https://github.com/Boginsky/TMS/blob/384edf596b50e77fea98bb3017d2005c3a3e3300/lesson15/src/lesson15/task33/Task33.java",
    "raw_url": "https://github.com/Boginsky/TMS/raw/384edf596b50e77fea98bb3017d2005c3a3e3300/lesson15/src/lesson15/task33/Task33.java",
    "contents_url": "https://api.github.com/repos/Boginsky/TMS/contents/lesson15/src/lesson15/task33/Task33.java?ref=384edf596b50e77fea98bb3017d2005c3a3e3300",
    "patch": "@@ -0,0 +1,36 @@\n+package lesson15.task33;\n+\n+//Создать файл с текстом, прочитать, подсчитать в тексте количество знаков\n+//препинания и слов.\n+\n+import java.io.*;\n+import java.util.Scanner;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+public class Task33 {\n+    public static void main(String[] args) throws IOException {\n+        Scanner sc = new Scanner(new FileInputStream(\"E:\\\\TMS_DEV\\\\TMS\\\\lesson15\\\\src\\\\lesson15\\\\task33\\\\Task33.txt\"));\n+        int amountOfWords = 0;\n+        while(sc.hasNext()){\n+            sc.next();\n+            amountOfWords++;\n+        }\n+\n+        BufferedReader bufferedReader = new BufferedReader(new FileReader(\"E:\\\\TMS_DEV\\\\TMS\\\\lesson15\\\\src\\\\lesson15\\\\task33\\\\Task33.txt\"));\n+        String res = bufferedReader.readLine();\n+        int amountOfMarks = 0;\n+        while (res != null) {\n+            Pattern pattern = Pattern.compile(\"[.,?/;']+\");\n+            Matcher matcher = pattern.matcher(res);\n+            while (matcher.find()) {\n+                amountOfMarks++;\n+            }\n+            res = bufferedReader.readLine();\n+        }\n+            System.out.println(\"Количество слов: \" + amountOfWords + \". Количество знаков препинания: \" + amountOfMarks + \".\");\n+\n+\n+\n+    }\n+}"
  },
  {
    "sha": "ace90ac144ae5405cdf07757e503ca1881c6adf6",
    "filename": "lesson15/src/lesson15/task33/Task33.txt",
    "status": "added",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/Boginsky/TMS/blob/384edf596b50e77fea98bb3017d2005c3a3e3300/lesson15/src/lesson15/task33/Task33.txt",
    "raw_url": "https://github.com/Boginsky/TMS/raw/384edf596b50e77fea98bb3017d2005c3a3e3300/lesson15/src/lesson15/task33/Task33.txt",
    "contents_url": "https://api.github.com/repos/Boginsky/TMS/contents/lesson15/src/lesson15/task33/Task33.txt?ref=384edf596b50e77fea98bb3017d2005c3a3e3300",
    "patch": "@@ -0,0 +1,2 @@\n+John is American. He’s from Boston. He arrived in Saint Petersburg 2 years ago and he doesn’t want to go back to the United States. He often thinks about his country, but he likes Saint Petersburg way of life. In fact, he would like to live here and work in the United States but that’s difficult.\n+John likes to go out, , , , , he often meets friends on the weekends or he goes to have. a bite with them. In general, they can talk about everything such as work, girls, sports, etc. He often goes to the cinema; he goes there once a week. He would like to go there more often but he doesn’t have much time because of his work.\n\\ No newline at end of file"
  },
  {
    "sha": "9df502b82eb5b0c22fc0f62319605a51d14eb95c",
    "filename": "lesson15/src/lesson15/task34/Task34.java",
    "status": "added",
    "additions": 47,
    "deletions": 0,
    "changes": 47,
    "blob_url": "https://github.com/Boginsky/TMS/blob/384edf596b50e77fea98bb3017d2005c3a3e3300/lesson15/src/lesson15/task34/Task34.java",
    "raw_url": "https://github.com/Boginsky/TMS/raw/384edf596b50e77fea98bb3017d2005c3a3e3300/lesson15/src/lesson15/task34/Task34.java",
    "contents_url": "https://api.github.com/repos/Boginsky/TMS/contents/lesson15/src/lesson15/task34/Task34.java?ref=384edf596b50e77fea98bb3017d2005c3a3e3300",
    "patch": "@@ -0,0 +1,47 @@\n+package lesson15.task34;\n+\n+import java.io.BufferedReader;\n+import java.io.FileNotFoundException;\n+import java.io.FileReader;\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.HashSet;\n+import java.util.Set;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+//Имеется файл с текстом, в котором присутствуют числа. Найти все числа,\n+//распечатать, посчитать сумму, убрать все повторяющиеся числа и снова\n+//распечатать.\n+public class Task34 {\n+    public static void main(String[] args) throws IOException {\n+\n+        ArrayList<Integer> list = new ArrayList<>();\n+\n+        BufferedReader bufferedReader = new BufferedReader(new FileReader(\"E:\\\\TMS_DEV\\\\TMS\\\\lesson15\\\\src\\\\lesson15\\\\task34\\\\Task34.txt\"));\n+        String res = bufferedReader.readLine();\n+        int sum = 0;\n+        System.out.println(\"Все числа:\");\n+        while (res != null){\n+            Pattern pattern = Pattern.compile(\"\\\\d+\");\n+            Matcher matcher = pattern.matcher(res);\n+            while ( matcher.find()){\n+                list.add(Integer.parseInt(matcher.group()));\n+                sum +=  Integer.parseInt(matcher.group());\n+                System.out.print(matcher.group() +\" \");\n+            }\n+            res = bufferedReader.readLine();\n+        }\n+        System.out.println(\"\");\n+        System.out.println(\"Сумма чисел равна: \" + sum);\n+\n+\n+        Set<Integer> set = new HashSet<>(list);\n+        list.clear();\n+        list.addAll(set);\n+        System.out.println(\"Числа после удаления одинаковых чисел:\");\n+        System.out.println(list);\n+    }\n+\n+}"
  },
  {
    "sha": "2c6a01340e859fbc1469f42ee6a31ee18f337d5f",
    "filename": "lesson15/src/lesson15/task34/Task34.txt",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/Boginsky/TMS/blob/384edf596b50e77fea98bb3017d2005c3a3e3300/lesson15/src/lesson15/task34/Task34.txt",
    "raw_url": "https://github.com/Boginsky/TMS/raw/384edf596b50e77fea98bb3017d2005c3a3e3300/lesson15/src/lesson15/task34/Task34.txt",
    "contents_url": "https://api.github.com/repos/Boginsky/TMS/contents/lesson15/src/lesson15/task34/Task34.txt?ref=384edf596b50e77fea98bb3017d2005c3a3e3300",
    "patch": "@@ -0,0 +1 @@\n+asdlasjkdas;dlalsd 11 11 11 12 22 13 12 k;alsdjkas;ldaksd;lasdkas;da a;'sldkas;ldkas;ldkasd;a as;ldkasd;lasdkas;l as 22 11 33333 3452343 34234 12312 ldfsd 23123 s32123\n\\ No newline at end of file"
  },
  {
    "sha": "4ca487df244d7b191d7cba0dfc54b47e55a496ab",
    "filename": "lesson15/src/lesson15/task35/Task35.java",
    "status": "added",
    "additions": 30,
    "deletions": 0,
    "changes": 30,
    "blob_url": "https://github.com/Boginsky/TMS/blob/384edf596b50e77fea98bb3017d2005c3a3e3300/lesson15/src/lesson15/task35/Task35.java",
    "raw_url": "https://github.com/Boginsky/TMS/raw/384edf596b50e77fea98bb3017d2005c3a3e3300/lesson15/src/lesson15/task35/Task35.java",
    "contents_url": "https://api.github.com/repos/Boginsky/TMS/contents/lesson15/src/lesson15/task35/Task35.java?ref=384edf596b50e77fea98bb3017d2005c3a3e3300",
    "patch": "@@ -0,0 +1,30 @@\n+package lesson15.task35;\n+\n+import java.io.*;\n+\n+//Записать в двоичный файл 20 случайных чисел. Прочитать записанный файл,\n+//распечатать числа и их среднее арифметическое.\n+\n+public class Task35 {\n+    public static void main(String[] args) {\n+        File f = new File(\"E:\\\\TMS_DEV\\\\TMS\\\\lesson15\\\\src\\\\lesson15\\\\task35\\\\Task35.txt\");\n+\n+        try (BufferedOutputStream bufferedOutputStream = new BufferedOutputStream(new ObjectOutputStream(new FileOutputStream(f)))) {\n+            for (int i = 0; i < 20; i++) {\n+                bufferedOutputStream.write(i);\n+            }\n+        } catch (FileNotFoundException e) {\n+            e.printStackTrace();\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+        try (BufferedInputStream bufferedInputStream = new BufferedInputStream(new ObjectInputStream(new FileInputStream(f)))) {\n+            System.out.println(\"Все числа: \");\n+            while(bufferedInputStream.available() != 0) {\n+                    System.out.print(bufferedInputStream.read() +\" \");\n+                }\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "c577bf24bdefb23b05dd51a78b5ca04c00f18a35",
    "filename": "lesson15/src/lesson15/task35/Task35.txt",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/Boginsky/TMS/blob/384edf596b50e77fea98bb3017d2005c3a3e3300/lesson15/src/lesson15/task35/Task35.txt",
    "raw_url": "https://github.com/Boginsky/TMS/raw/384edf596b50e77fea98bb3017d2005c3a3e3300/lesson15/src/lesson15/task35/Task35.txt",
    "contents_url": "https://api.github.com/repos/Boginsky/TMS/contents/lesson15/src/lesson15/task35/Task35.txt?ref=384edf596b50e77fea98bb3017d2005c3a3e3300"
  },
  {
    "sha": "7b28510608aace512bfa490baeef674febaf605d",
    "filename": "lesson15/src/lesson15/task36/Task36.java",
    "status": "added",
    "additions": 33,
    "deletions": 0,
    "changes": 33,
    "blob_url": "https://github.com/Boginsky/TMS/blob/384edf596b50e77fea98bb3017d2005c3a3e3300/lesson15/src/lesson15/task36/Task36.java",
    "raw_url": "https://github.com/Boginsky/TMS/raw/384edf596b50e77fea98bb3017d2005c3a3e3300/lesson15/src/lesson15/task36/Task36.java",
    "contents_url": "https://api.github.com/repos/Boginsky/TMS/contents/lesson15/src/lesson15/task36/Task36.java?ref=384edf596b50e77fea98bb3017d2005c3a3e3300",
    "patch": "@@ -0,0 +1,33 @@\n+package lesson15.task36;\n+\n+//Вывести список файлов и каталогов выбранного каталога на диске. Файлы и каталоги\n+//        должны быть распечатаны отдельно.\n+\n+import java.io.File;\n+import java.io.InputStream;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+public class Task36 {\n+    public static void main(String[] args) {\n+        File dir = new File(\"F:\\\\Anno 1800\\\\maindata\\\\\");\n+        String arrFiles = dir.getParent();\n+//        List<String> lst = Arrays.asList(arrFiles);\n+        System.out.println(\"Директория:\");\n+        System.out.println(arrFiles);\n+\n+        System.out.println(\"\");\n+        System.out.println(\"Список файлов в директории:\");\n+        String[] array = dir.list();\n+        List<String> lst1 = Arrays.asList(array);\n+        System.out.println(lst1);\n+\n+    }\n+}\n+//Вывод в консоль:\n+//Директория:\n+//        F:\\Anno 1800\n+//\n+//        Список файлов в директории:\n+//        [checksum.db, data0.rda, data1.rda, data10.rda, data11.rda, data12.rda, data13.rda, data14.rda, data15.rda, data16.rda, data2.rda, data3.rda, data4.rda, data5.rda, data6.rda, data7.rda, data8.rda, data9.rda, en_us0.rda, en_us1.rda, en_us2.rda, en_us3.rda, en_us4.rda, en_us5.rda, file.db, ru_ru0.rda, ru_ru1.rda, ru_ru2.rda, ru_ru3.rda, ru_ru4.rda, ru_ru5.rda]"
  }
]
