[
  {
    "sha": "d95de53620490d27251ba50e2265f0f9f2a4227b",
    "filename": "README.md",
    "status": "modified",
    "additions": 8,
    "deletions": 5,
    "changes": 13,
    "blob_url": "https://github.com/michaelruocco/idv-context/blob/54632ad9a25845eccd3158352bbd4f6659119c90/README.md",
    "raw_url": "https://github.com/michaelruocco/idv-context/raw/54632ad9a25845eccd3158352bbd4f6659119c90/README.md",
    "contents_url": "https://api.github.com/repos/michaelruocco/idv-context/contents/README.md?ref=54632ad9a25845eccd3158352bbd4f6659119c90",
    "patch": "@@ -12,6 +12,7 @@\n \n ## Todo\n \n+*   Add log masking on verifications endpoint\n *   Raise PR for system stubs to return console output as collection of lines?\n *   Token validation?\n *   Performance tests in pipeline / nightly build?\n@@ -71,25 +72,27 @@ A great description of how these templates work is [here](https://reflectoring.i\n \n ```aws\n //generate network resources using cloud formation\n-aws cloudformation create-stack --stack-name idv-dev-network --template-body file://cloud-formation/network.yml --capabilities CAPABILITY_IAM\n+aws cloudformation create-stack --stack-name idv-test-network --template-body file://cloud-formation/network.yml --capabilities CAPABILITY_IAM\n ```\n \n ```aws\n //generate service resources using cloud formation (relies on network stack already being created)\n-aws cloudformation create-stack --stack-name idv-dev-verification-context-service --template-body file://cloud-formation/service.yml --parameters ParameterKey=MongoConnectionString,ParameterValue=<mongo-connection-string>\n+aws cloudformation create-stack --stack-name idv-test-context-service --template-body file://cloud-formation/context-service.yml --parameters ParameterKey=MongoConnectionString,ParameterValue=<mongo-connection-string>\n+aws cloudformation create-stack --stack-name idv-test-otp-service --template-body file://cloud-formation/otp-service.yml --parameters ParameterKey=MongoConnectionString,ParameterValue=<mongo-connection-string>\n ```\n \n #### Update image used by running task\n \n ```aws\n-aws ecs update-service --cluster idv-dev --service verification-context --force-new-deployment\n+aws ecs update-service --cluster idv-test --service idv-context --force-new-deployment\n ```\n \n #### Deleting AWS resources\n \n ```aws\n-aws cloudformation delete-stack --stack-name idv-dev-verification-context-service;\n-aws cloudformation delete-stack --stack-name idv-dev-network;\n+aws cloudformation delete-stack --stack-name idv-test-context-service;\n+aws cloudformation delete-stack --stack-name idv-test-otp-service;\n+aws cloudformation delete-stack --stack-name idv-test-network;\n ```\n \n ### JMeter"
  },
  {
    "sha": "915d50d09ad3dfeb551e66585a4f97d79a62b35f",
    "filename": "app/spring/Dockerfile",
    "status": "modified",
    "additions": 4,
    "deletions": 2,
    "changes": 6,
    "blob_url": "https://github.com/michaelruocco/idv-context/blob/54632ad9a25845eccd3158352bbd4f6659119c90/app/spring/Dockerfile",
    "raw_url": "https://github.com/michaelruocco/idv-context/raw/54632ad9a25845eccd3158352bbd4f6659119c90/app/spring/Dockerfile",
    "contents_url": "https://api.github.com/repos/michaelruocco/idv-context/contents/app/spring/Dockerfile?ref=54632ad9a25845eccd3158352bbd4f6659119c90",
    "patch": "@@ -1,4 +1,4 @@\n-FROM adoptopenjdk/openjdk13:alpine-jre\n+FROM adoptopenjdk/openjdk15:alpine-jre\n \n ARG VERSION\n \n@@ -14,7 +14,8 @@ ENV SERVER_PORT=80 \\\n     REQUEST_LOGGING_ENABLED=false \\\n     RESPONSE_LOGGING_ENABLED=false \\\n     POLICY_REFRESH_THREAD_POOL_SIZE=4 \\\n-    POLICY_REFRESH_DELAY=3600000\n+    POLICY_REFRESH_DELAY=3600000 \\\n+    SERVER_SERVLET_CONTEXT_PATH=/\n \n COPY build/libs/idv-context-spring-app-${VERSION}.jar /opt/app.jar\n \n@@ -35,4 +36,5 @@ CMD java \\\n   -Dresponse.logging.enabled=${RESPONSE_LOGGING_ENABLED} \\\n   -Dpolicy.refresh.thread.pool.size=${POLICY_REFRESH_THREAD_POOL_SIZE} \\\n   -Dpolicy.refresh.delay=${POLICY_REFRESH_DELAY} \\\n+  -Dserver.servlet.contextPath=${SERVER_SERVLET_CONTEXT_PATH} \\\n   -jar /opt/app.jar\n\\ No newline at end of file"
  },
  {
    "sha": "566e555f1a0e36a9fc055f3997823546a389687e",
    "filename": "app/spring/src/main/java/uk/co/idv/app/spring/config/FilterConfig.java",
    "status": "modified",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/michaelruocco/idv-context/blob/54632ad9a25845eccd3158352bbd4f6659119c90/app/spring/src/main/java/uk/co/idv/app/spring/config/FilterConfig.java",
    "raw_url": "https://github.com/michaelruocco/idv-context/raw/54632ad9a25845eccd3158352bbd4f6659119c90/app/spring/src/main/java/uk/co/idv/app/spring/config/FilterConfig.java",
    "contents_url": "https://api.github.com/repos/michaelruocco/idv-context/contents/app/spring/src/main/java/uk/co/idv/app/spring/config/FilterConfig.java?ref=54632ad9a25845eccd3158352bbd4f6659119c90",
    "patch": "@@ -165,14 +165,14 @@\n         return patterns.toArray(new String[0]);\n     }\n \n+    //TODO set up logging masking for verifications endpoint responses\n+\n     private static String[] getContextUrlPatterns() {\n-        return new String[]{\n-                \"/v1/contexts/*\"\n-        };\n+        return new String[]{\"/v1/contexts/*\"};\n     }\n \n     private static String[] getIdentityUrlPatterns() {\n-        return new String[]{\"/identities/*\"};\n+        return new String[]{\"/v1/identities/*\"};\n     }\n \n     private static String[] getDefaultUrlPatterns() {"
  },
  {
    "sha": "23064e13a66a46370ebd9be328daa8bf5bf6e9d7",
    "filename": "app/spring/src/main/java/uk/co/idv/app/spring/filters/logging/context/ContextResponseLoggingFilter.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/michaelruocco/idv-context/blob/54632ad9a25845eccd3158352bbd4f6659119c90/app/spring/src/main/java/uk/co/idv/app/spring/filters/logging/context/ContextResponseLoggingFilter.java",
    "raw_url": "https://github.com/michaelruocco/idv-context/raw/54632ad9a25845eccd3158352bbd4f6659119c90/app/spring/src/main/java/uk/co/idv/app/spring/filters/logging/context/ContextResponseLoggingFilter.java",
    "contents_url": "https://api.github.com/repos/michaelruocco/idv-context/contents/app/spring/src/main/java/uk/co/idv/app/spring/filters/logging/context/ContextResponseLoggingFilter.java?ref=54632ad9a25845eccd3158352bbd4f6659119c90",
    "patch": "@@ -1,7 +1,7 @@\n package uk.co.idv.app.spring.filters.logging.context;\n \n import com.fasterxml.jackson.databind.ObjectMapper;\n-import uk.co.idv.context.adapter.json.context.mask.ContextJsonMasker;\n+import uk.co.idv.context.adapter.json.context.mask.ApiContextJsonMasker;\n import uk.co.mruoc.spring.filter.logging.response.ResponseBodyExtractor;\n import uk.co.mruoc.spring.filter.logging.response.ResponseLoggingFilter;\n import uk.co.mruoc.spring.filter.logging.response.TransformingResponseBodyExtractor;\n@@ -13,7 +13,7 @@ public ContextResponseLoggingFilter(ObjectMapper mapper) {\n     }\n \n     private static ResponseBodyExtractor buildResponseBodyExtractor(ObjectMapper mapper) {\n-        return new TransformingResponseBodyExtractor(new ContextJsonMasker(mapper));\n+        return new TransformingResponseBodyExtractor(new ApiContextJsonMasker(mapper));\n     }\n \n }"
  },
  {
    "sha": "30f9780468b99efeb439ae5e0fb9d3be04ff3fb5",
    "filename": "build.gradle",
    "status": "modified",
    "additions": 4,
    "deletions": 5,
    "changes": 9,
    "blob_url": "https://github.com/michaelruocco/idv-context/blob/54632ad9a25845eccd3158352bbd4f6659119c90/build.gradle",
    "raw_url": "https://github.com/michaelruocco/idv-context/raw/54632ad9a25845eccd3158352bbd4f6659119c90/build.gradle",
    "contents_url": "https://api.github.com/repos/michaelruocco/idv-context/contents/build.gradle?ref=54632ad9a25845eccd3158352bbd4f6659119c90",
    "patch": "@@ -34,6 +34,10 @@ allprojects {\n     apply plugin: \"nebula.lint\"\n \n     group \"com.github.michaelruocco.idv\"\n+    version = rootProject.version\n+\n+    sourceCompatibility = 15\n+    targetCompatibility = 15\n \n     repositories {\n         mavenCentral()\n@@ -54,11 +58,6 @@ subprojects {\n     apply plugin: \"java-library\"\n     apply plugin: \"com.diffplug.spotless\"\n \n-    version = rootProject.version\n-\n-    sourceCompatibility = 13\n-    targetCompatibility = 13\n-\n     ext {\n         testSetsPluginVersion = \"3.0.1\"\n         shadowPluginVersion = \"6.1.0\""
  },
  {
    "sha": "f5319be57b929299b9a4f7318e91439888e139db",
    "filename": "cloud-formation/context-service.yml",
    "status": "renamed",
    "additions": 10,
    "deletions": 58,
    "changes": 68,
    "blob_url": "https://github.com/michaelruocco/idv-context/blob/54632ad9a25845eccd3158352bbd4f6659119c90/cloud-formation/context-service.yml",
    "raw_url": "https://github.com/michaelruocco/idv-context/raw/54632ad9a25845eccd3158352bbd4f6659119c90/cloud-formation/context-service.yml",
    "contents_url": "https://api.github.com/repos/michaelruocco/idv-context/contents/cloud-formation/context-service.yml?ref=54632ad9a25845eccd3158352bbd4f6659119c90",
    "patch": "@@ -7,11 +7,11 @@ Parameters:\n     Description: Connection string of the mongo database the service should connect to\n   EnvironmentName:\n     Type: String\n-    Default: idv-dev\n+    Default: idv-test\n     Description: The name of the environment to add this service to\n   StackName:\n     Type: String\n-    Default: idv-dev-network\n+    Default: idv-test-network\n     Description: The name of the networking stack that\n       these resources are put into.\n   ServiceName:\n@@ -20,15 +20,15 @@ Parameters:\n     Description: A human-readable name for the service.\n   HealthCheckPath:\n     Type: String\n-    Default: /actuator/health\n+    Default: /idv-context/actuator/health\n     Description: Path to perform the healthcheck on each instance.\n   HealthCheckIntervalSeconds:\n     Type: Number\n     Default: 60\n     Description: Number of seconds to wait between each health check.\n   ImageUrl:\n     Type: String\n-    Default: michaelruocco/idv-context-spring-app:latest\n+    Default: michaelruocco/idv-context-spring-app:0.1.9-java-15-SNAPSHOT\n     Description: The url of a docker image that will handle incoming traffic.\n   ContainerPort:\n     Type: Number\n@@ -45,7 +45,7 @@ Parameters:\n     Description: How much memory in megabytes to give the container.\n   Path:\n     Type: String\n-    Default: \"*\"\n+    Default: /idv-context/\n     Description: A path on the public load balancer that this service\n       should be connected to.\n   DesiredCount:\n@@ -54,8 +54,7 @@ Parameters:\n     Description: How many copies of the service task to run.\n   Role:\n     Type: String\n-    #create a role with elasticache and dynamo access as required and use that instead\n-    Default: \"ecsTaskExecutionRole\"\n+    Default: \"\"\n     Description: (Optional) An IAM role to give the service's containers if the code within needs to\n       access other AWS resources like S3 buckets, DynamoDB tables, etc\n \n@@ -64,45 +63,6 @@ Conditions:\n \n Resources:\n \n-  ElasticacheSecurityGroup:\n-    Type: AWS::EC2::SecurityGroup\n-    Properties:\n-      GroupDescription: Elasticache Security Group\n-      VpcId:\n-        Fn::ImportValue:\n-          !Join [':', [!Ref 'StackName', 'VPCId']]\n-      SecurityGroupIngress:\n-        - IpProtocol: tcp\n-          FromPort: '6379'\n-          ToPort: '6379'\n-          SourceSecurityGroupId:\n-            Fn::ImportValue:\n-              !Join [':', [!Ref 'StackName', 'ECSSecurityGroup']]\n-\n-  ElasticacheSubnetGroup:\n-    Type: AWS::ElastiCache::SubnetGroup\n-    Properties:\n-      CacheSubnetGroupName: !Sub ${EnvironmentName}-redis-subnet-group\n-      Description: Cache Subnet Group\n-      SubnetIds:\n-        - Fn::ImportValue:\n-            !Join [':', [!Ref 'StackName', 'PublicSubnetOne']]\n-        - Fn::ImportValue:\n-            !Join [':', [!Ref 'StackName', 'PublicSubnetTwo']]\n-\n-  ElastiCacheCluster:\n-    Type: 'AWS::ElastiCache::CacheCluster'\n-    Properties:\n-      CacheSubnetGroupName: !Ref ElasticacheSubnetGroup\n-      AutoMinorVersionUpgrade: 'true'\n-      Engine: redis\n-      CacheNodeType: cache.t2.micro\n-      NumCacheNodes: '1'\n-      VpcSecurityGroupIds:\n-        - !GetAtt\n-          - ElasticacheSecurityGroup\n-          - GroupId\n-\n   TargetGroup:\n     Type: AWS::ElasticLoadBalancingV2::TargetGroup\n     Properties:\n@@ -128,7 +88,8 @@ Resources:\n           Type: 'forward'\n       Conditions:\n         - Field: path-pattern\n-          Values: [!Ref 'Path']\n+          Values:\n+            - !Sub '${Path}*'\n       ListenerArn:\n         Fn::ImportValue:\n           !Join [':', [!Ref 'StackName', 'PublicListener']]\n@@ -169,21 +130,12 @@ Resources:\n               Value: !Ref 'EnvironmentName'\n             - Name: MONGO_CONNECTION_STRING\n               Value: !Ref 'MongoConnectionString'\n-            - Name: REDIS_ENDPOINT_URI\n-              Value: !Join\n-                - ''\n-                - - 'redis://'\n-                  - !GetAtt\n-                    - ElastiCacheCluster\n-                    - RedisEndpoint.Address\n-                  - ':'\n-                  - !GetAtt\n-                    - ElastiCacheCluster\n-                    - RedisEndpoint.Port\n             - Name: REQUEST_LOGGING_ENABLED\n               Value: true\n             - Name: RESPONSE_LOGGING_ENABLED\n               Value: true\n+            - Name: SERVER_SERVLET_CONTEXT_PATH\n+              Value: !Ref 'Path'\n           LogConfiguration:\n             LogDriver: 'awslogs'\n             Options:",
    "previous_filename": "cloud-formation/service.yml"
  },
  {
    "sha": "467c89494af977c0030635623c593272c525ed1a",
    "filename": "cloud-formation/network.yml",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/michaelruocco/idv-context/blob/54632ad9a25845eccd3158352bbd4f6659119c90/cloud-formation/network.yml",
    "raw_url": "https://github.com/michaelruocco/idv-context/raw/54632ad9a25845eccd3158352bbd4f6659119c90/cloud-formation/network.yml",
    "contents_url": "https://api.github.com/repos/michaelruocco/idv-context/contents/cloud-formation/network.yml?ref=54632ad9a25845eccd3158352bbd4f6659119c90",
    "patch": "@@ -5,7 +5,7 @@ Description: A network stack for deploying containers in AWS ECS.\n Parameters:\n   EnvironmentName:\n     Type: String\n-    Default: idv-dev\n+    Default: idv-test\n     Description: Name to give to the created ECS cluster\n \n Resources:"
  },
  {
    "sha": "6967612abca6e4ac9726a06e42aa78a05cebec4a",
    "filename": "cloud-formation/otp-service.yml",
    "status": "added",
    "additions": 174,
    "deletions": 0,
    "changes": 174,
    "blob_url": "https://github.com/michaelruocco/idv-context/blob/54632ad9a25845eccd3158352bbd4f6659119c90/cloud-formation/otp-service.yml",
    "raw_url": "https://github.com/michaelruocco/idv-context/raw/54632ad9a25845eccd3158352bbd4f6659119c90/cloud-formation/otp-service.yml",
    "contents_url": "https://api.github.com/repos/michaelruocco/idv-context/contents/cloud-formation/otp-service.yml?ref=54632ad9a25845eccd3158352bbd4f6659119c90",
    "patch": "@@ -0,0 +1,174 @@\n+AWSTemplateFormatVersion: '2010-09-09'\n+Description: Deploy a service on AWS Fargate, hosted in two public subnets and accessible via a public load balancer.\n+  Derived from a template at https://github.com/nathanpeck/aws-cloudformation-fargate.\n+Parameters:\n+  MongoConnectionString:\n+    Type: String\n+    Description: Connection string of the mongo database the service should connect to\n+  EnvironmentName:\n+    Type: String\n+    Default: idv-test\n+    Description: The name of the environment to add this service to\n+  StackName:\n+    Type: String\n+    Default: idv-test-network\n+    Description: The name of the networking stack that\n+      these resources are put into.\n+  ServiceName:\n+    Type: String\n+    Default: idv-otp\n+    Description: A human-readable name for the service.\n+  HealthCheckPath:\n+    Type: String\n+    Default: /idv-otp/actuator/health\n+    Description: Path to perform the healthcheck on each instance.\n+  HealthCheckIntervalSeconds:\n+    Type: Number\n+    Default: 60\n+    Description: Number of seconds to wait between each health check.\n+  ImageUrl:\n+    Type: String\n+    Default: michaelruocco/idv-one-time-passcode-spring-app:0.1.3-implement-protect-sensitive-data-SNAPSHOT\n+    Description: The url of a docker image that will handle incoming traffic.\n+  ContainerPort:\n+    Type: Number\n+    Default: 80\n+    Description: The port number the application inside the docker container\n+      is binding to.\n+  ContainerCpu:\n+    Type: Number\n+    Default: 1024\n+    Description: How much CPU to give the container. 1024 is 1 CPU.\n+  ContainerMemory:\n+    Type: Number\n+    Default: 2048\n+    Description: How much memory in megabytes to give the container.\n+  Path:\n+    Type: String\n+    Default: /idv-otp/\n+    Description: A path on the public load balancer that this service\n+      should be connected to.\n+  DesiredCount:\n+    Type: Number\n+    Default: 1\n+    Description: How many copies of the service task to run.\n+  Role:\n+    Type: String\n+    Default: \"ecsTaskExecutionRole\"\n+    Description: (Optional) An IAM role to give the service's containers if the code within needs to\n+      access other AWS resources like S3 buckets, DynamoDB tables, etc\n+\n+Conditions:\n+  HasCustomRole: !Not [ !Equals [!Ref 'Role', ''] ]\n+\n+Resources:\n+\n+  TargetGroup:\n+    Type: AWS::ElasticLoadBalancingV2::TargetGroup\n+    Properties:\n+      HealthCheckIntervalSeconds: !Ref 'HealthCheckIntervalSeconds'\n+      HealthCheckPath: !Ref 'HealthCheckPath'\n+      HealthCheckProtocol: HTTP\n+      HealthCheckTimeoutSeconds: 5\n+      HealthyThresholdCount: 2\n+      TargetType: ip\n+      Name: !Ref 'ServiceName'\n+      Port: !Ref 'ContainerPort'\n+      Protocol: HTTP\n+      UnhealthyThresholdCount: 2\n+      VpcId:\n+        Fn::ImportValue:\n+          !Join [':', [!Ref 'StackName', 'VPCId']]\n+\n+  LoadBalancerRule:\n+    Type: AWS::ElasticLoadBalancingV2::ListenerRule\n+    Properties:\n+      Actions:\n+        - TargetGroupArn: !Ref 'TargetGroup'\n+          Type: 'forward'\n+      Conditions:\n+        - Field: path-pattern\n+          Values:\n+            - !Sub '${Path}*'\n+      ListenerArn:\n+        Fn::ImportValue:\n+          !Join [':', [!Ref 'StackName', 'PublicListener']]\n+      Priority: 2\n+\n+  TaskDefinition:\n+    Type: AWS::ECS::TaskDefinition\n+    Properties:\n+      Family: !Ref 'ServiceName'\n+      Cpu: !Ref 'ContainerCpu'\n+      Memory: !Ref 'ContainerMemory'\n+      NetworkMode: awsvpc\n+      RequiresCompatibilities:\n+        - FARGATE\n+      ExecutionRoleArn:\n+        Fn::ImportValue:\n+          !Join [':', [!Ref 'StackName', 'ECSTaskExecutionRole']]\n+      TaskRoleArn:\n+        Fn::If:\n+          - 'HasCustomRole'\n+          - !Ref 'Role'\n+          - !Ref \"AWS::NoValue\"\n+      ContainerDefinitions:\n+        - Name: !Ref 'ServiceName'\n+          Cpu: !Ref 'ContainerCpu'\n+          Memory: !Ref 'ContainerMemory'\n+          Image: !Ref 'ImageUrl'\n+          PortMappings:\n+            - ContainerPort: !Ref 'ContainerPort'\n+          Environment:\n+            - Name: ENVIRONMENT\n+              Value: !Ref 'EnvironmentName'\n+            - Name: MONGO_CONNECTION_STRING\n+              Value: !Ref 'MongoConnectionString'\n+            - Name: REQUEST_LOGGING_ENABLED\n+              Value: true\n+            - Name: RESPONSE_LOGGING_ENABLED\n+              Value: true\n+            - Name: SERVER_SERVLET_CONTEXT_PATH\n+              Value: !Ref 'Path'\n+            - Name: CONTEXT_URI\n+              Value: http://idv-test-1672227626.eu-west-1.elb.amazonaws.com/idv-context\n+            - Name: AWS_SNS_ENDPOINT_URI\n+              Value: https://sns.eu-west-1.amazonaws.com\n+            - Name: AWS_SES_ENDPOINT_URI\n+              Value: https://email.eu-west-1.amazonaws.com\n+          LogConfiguration:\n+            LogDriver: 'awslogs'\n+            Options:\n+              awslogs-group: !Sub /aws/ecs/${EnvironmentName}\n+              awslogs-region: !Ref AWS::Region\n+              awslogs-stream-prefix: !Ref 'ServiceName'\n+\n+  Service:\n+    Type: AWS::ECS::Service\n+    DependsOn: LoadBalancerRule\n+    Properties:\n+      ServiceName: !Ref 'ServiceName'\n+      Cluster:\n+        Fn::ImportValue:\n+          !Join [':', [!Ref 'StackName', 'ClusterName']]\n+      LaunchType: FARGATE\n+      DeploymentConfiguration:\n+        MaximumPercent: 200\n+        MinimumHealthyPercent: 50\n+      DesiredCount: !Ref 'DesiredCount'\n+      NetworkConfiguration:\n+        AwsvpcConfiguration:\n+          AssignPublicIp: ENABLED\n+          SecurityGroups:\n+            - Fn::ImportValue:\n+                !Join [':', [!Ref 'StackName', 'ECSSecurityGroup']]\n+          Subnets:\n+            - Fn::ImportValue:\n+                !Join [':', [!Ref 'StackName', 'PublicSubnetOne']]\n+            - Fn::ImportValue:\n+                !Join [':', [!Ref 'StackName', 'PublicSubnetTwo']]\n+      TaskDefinition: !Ref 'TaskDefinition'\n+      LoadBalancers:\n+        - ContainerName: !Ref 'ServiceName'\n+          ContainerPort: !Ref 'ContainerPort'\n+          TargetGroupArn: !Ref 'TargetGroup'\n\\ No newline at end of file"
  },
  {
    "sha": "d7ce95fbac70fbecb32e1ac6a98370c8b8b3c269",
    "filename": "context/adapter/json/src/main/java/uk/co/idv/context/adapter/json/context/mask/ApiContextJsonMasker.java",
    "status": "added",
    "additions": 52,
    "deletions": 0,
    "changes": 52,
    "blob_url": "https://github.com/michaelruocco/idv-context/blob/54632ad9a25845eccd3158352bbd4f6659119c90/context/adapter/json/src/main/java/uk/co/idv/context/adapter/json/context/mask/ApiContextJsonMasker.java",
    "raw_url": "https://github.com/michaelruocco/idv-context/raw/54632ad9a25845eccd3158352bbd4f6659119c90/context/adapter/json/src/main/java/uk/co/idv/context/adapter/json/context/mask/ApiContextJsonMasker.java",
    "contents_url": "https://api.github.com/repos/michaelruocco/idv-context/contents/context/adapter/json/src/main/java/uk/co/idv/context/adapter/json/context/mask/ApiContextJsonMasker.java?ref=54632ad9a25845eccd3158352bbd4f6659119c90",
    "patch": "@@ -0,0 +1,52 @@\n+package uk.co.idv.context.adapter.json.context.mask;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.jayway.jsonpath.JsonPath;\n+import uk.co.idv.identity.adapter.json.emailaddress.mask.EmailAddressJsonMasker;\n+import uk.co.idv.identity.adapter.json.phonenumber.mask.PhoneNumberJsonMasker;\n+import uk.co.mruoc.json.mask.CompositeJsonMasker;\n+import uk.co.mruoc.json.mask.JsonPathFactory;\n+\n+import java.util.Collection;\n+\n+public class ApiContextJsonMasker extends CompositeJsonMasker {\n+\n+    public ApiContextJsonMasker(ObjectMapper mapper) {\n+        super(\n+                new ApiContextEmailAddressJsonMasker(mapper),\n+                new ApiContextPhoneNumberJsonMasker(mapper)\n+        );\n+    }\n+\n+    private static class ApiContextEmailAddressJsonMasker extends EmailAddressJsonMasker {\n+\n+        public ApiContextEmailAddressJsonMasker(ObjectMapper mapper) {\n+            super(mapper, paths());\n+        }\n+\n+        private static Collection<JsonPath> paths() {\n+            return JsonPathFactory.toJsonPaths(\n+                    \"$.sequences[*].stages[*].methods[?(@.name=='one-time-passcode')].deliveryMethods[?(@.type=='email')].value\",\n+                    \"$.channel.emailAddresses[*]\"\n+            );\n+        }\n+\n+    }\n+\n+    private static class ApiContextPhoneNumberJsonMasker extends PhoneNumberJsonMasker {\n+\n+        public ApiContextPhoneNumberJsonMasker(ObjectMapper mapper) {\n+            super(mapper, paths());\n+        }\n+\n+        private static Collection<JsonPath> paths() {\n+            return JsonPathFactory.toJsonPaths(\n+                    \"$.sequences[*].stages[*].methods[?(@.name=='one-time-passcode')].deliveryMethods[?(@.type=='sms')].value\",\n+                    \"$.sequences[*].stages[*].methods[?(@.name=='one-time-passcode')].deliveryMethods[?(@.type=='voice')].value\",\n+                    \"$.channel.phoneNumbers[*].value\"\n+            );\n+        }\n+\n+    }\n+\n+}"
  },
  {
    "sha": "cc955b1284c449be35054287c7b9f1779d81c69c",
    "filename": "context/adapter/json/src/main/java/uk/co/idv/context/adapter/json/context/mask/ContextJsonMasker.java",
    "status": "removed",
    "additions": 0,
    "deletions": 52,
    "changes": 52,
    "blob_url": "https://github.com/michaelruocco/idv-context/blob/8fc5ba56790cfe85a2b259ee8e163af5cb1813ca/context/adapter/json/src/main/java/uk/co/idv/context/adapter/json/context/mask/ContextJsonMasker.java",
    "raw_url": "https://github.com/michaelruocco/idv-context/raw/8fc5ba56790cfe85a2b259ee8e163af5cb1813ca/context/adapter/json/src/main/java/uk/co/idv/context/adapter/json/context/mask/ContextJsonMasker.java",
    "contents_url": "https://api.github.com/repos/michaelruocco/idv-context/contents/context/adapter/json/src/main/java/uk/co/idv/context/adapter/json/context/mask/ContextJsonMasker.java?ref=8fc5ba56790cfe85a2b259ee8e163af5cb1813ca",
    "patch": "@@ -1,52 +0,0 @@\n-package uk.co.idv.context.adapter.json.context.mask;\n-\n-import com.fasterxml.jackson.databind.ObjectMapper;\n-import com.jayway.jsonpath.JsonPath;\n-import uk.co.idv.identity.adapter.json.emailaddress.mask.EmailAddressJsonMasker;\n-import uk.co.idv.identity.adapter.json.phonenumber.mask.PhoneNumberJsonMasker;\n-import uk.co.mruoc.json.mask.CompositeJsonMasker;\n-import uk.co.mruoc.json.mask.JsonPathFactory;\n-\n-import java.util.Collection;\n-\n-public class ContextJsonMasker extends CompositeJsonMasker {\n-\n-    public ContextJsonMasker(ObjectMapper mapper) {\n-        super(\n-                new ContextEmailAddressJsonMasker(mapper),\n-                new ContextPhoneNumberJsonMasker(mapper)\n-        );\n-    }\n-\n-    private static class ContextEmailAddressJsonMasker extends EmailAddressJsonMasker {\n-\n-        public ContextEmailAddressJsonMasker(ObjectMapper mapper) {\n-            super(mapper, paths());\n-        }\n-\n-        private static Collection<JsonPath> paths() {\n-            return JsonPathFactory.toJsonPaths(\n-                    \"$.sequences[*].methods[?(@.name=='one-time-passcode')].deliveryMethods[?(@.name=='email')].value\",\n-                    \"$.request.identity.emailAddresses[*]\"\n-            );\n-        }\n-\n-    }\n-\n-    private static class ContextPhoneNumberJsonMasker extends PhoneNumberJsonMasker {\n-\n-        public ContextPhoneNumberJsonMasker(ObjectMapper mapper) {\n-            super(mapper, paths());\n-        }\n-\n-        private static Collection<JsonPath> paths() {\n-            return JsonPathFactory.toJsonPaths(\n-                    \"$.sequences[*].methods[?(@.name=='one-time-passcode')].deliveryMethods[?(@.type=='sms')].value\",\n-                    \"$.sequences[*].methods[?(@.name=='one-time-passcode')].deliveryMethods[?(@.type=='voice')].value\",\n-                    \"$.request.identity.phoneNumbers[*].value\"\n-            );\n-        }\n-\n-    }\n-\n-}"
  },
  {
    "sha": "02b477deff809232e67afa81305a279a0bd526da",
    "filename": "context/adapter/json/src/test/java/uk/co/idv/context/adapter/json/context/mask/ApiContextJsonMaskerTest.java",
    "status": "renamed",
    "additions": 5,
    "deletions": 5,
    "changes": 10,
    "blob_url": "https://github.com/michaelruocco/idv-context/blob/54632ad9a25845eccd3158352bbd4f6659119c90/context/adapter/json/src/test/java/uk/co/idv/context/adapter/json/context/mask/ApiContextJsonMaskerTest.java",
    "raw_url": "https://github.com/michaelruocco/idv-context/raw/54632ad9a25845eccd3158352bbd4f6659119c90/context/adapter/json/src/test/java/uk/co/idv/context/adapter/json/context/mask/ApiContextJsonMaskerTest.java",
    "contents_url": "https://api.github.com/repos/michaelruocco/idv-context/contents/context/adapter/json/src/test/java/uk/co/idv/context/adapter/json/context/mask/ApiContextJsonMaskerTest.java?ref=54632ad9a25845eccd3158352bbd4f6659119c90",
    "patch": "@@ -3,28 +3,28 @@\n import com.fasterxml.jackson.databind.ObjectMapper;\n import org.junit.jupiter.api.Test;\n import uk.co.idv.common.adapter.json.ObjectMapperFactory;\n-import uk.co.idv.context.adapter.json.context.ContextJsonMother;\n+import uk.co.idv.context.adapter.json.context.ApiContextJsonMother;\n import uk.co.idv.context.adapter.json.context.create.CreateContextModule;\n \n import java.util.function.UnaryOperator;\n \n import static net.javacrumbs.jsonunit.assertj.JsonAssertions.assertThatJson;\n \n-class ContextJsonMaskerTest {\n+class ApiContextJsonMaskerTest {\n \n     private static final ObjectMapper MAPPER = ObjectMapperFactory.build(new CreateContextModule());\n \n-    private final UnaryOperator<String> masker = new ContextJsonMasker(MAPPER);\n+    private final UnaryOperator<String> masker = new ApiContextJsonMasker(MAPPER);\n \n     @Test\n     void shouldProtectSensitiveDataInRequest() {\n-        String json = ContextJsonMother.build();\n+        String json = ApiContextJsonMother.build();\n \n         String maskedJson = masker.apply(json);\n \n         assertThatJson(maskedJson)\n                 .whenIgnoringPaths(\"$.request.policy.protectSensitiveData\")\n-                .isEqualTo(ContextJsonMother.buildWithProtectedSensitiveData());\n+                .isEqualTo(ApiContextJsonMother.buildWithProtectedSensitiveData());\n     }\n \n }",
    "previous_filename": "context/adapter/json/src/test/java/uk/co/idv/context/adapter/json/context/mask/ContextJsonMaskerTest.java"
  },
  {
    "sha": "da5da8672c18a71db84c94dca41fa86233f949f4",
    "filename": "context/adapter/json/src/testFixtures/java/uk/co/idv/context/adapter/json/context/ApiContextJsonMother.java",
    "status": "added",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/michaelruocco/idv-context/blob/54632ad9a25845eccd3158352bbd4f6659119c90/context/adapter/json/src/testFixtures/java/uk/co/idv/context/adapter/json/context/ApiContextJsonMother.java",
    "raw_url": "https://github.com/michaelruocco/idv-context/raw/54632ad9a25845eccd3158352bbd4f6659119c90/context/adapter/json/src/testFixtures/java/uk/co/idv/context/adapter/json/context/ApiContextJsonMother.java",
    "contents_url": "https://api.github.com/repos/michaelruocco/idv-context/contents/context/adapter/json/src/testFixtures/java/uk/co/idv/context/adapter/json/context/ApiContextJsonMother.java?ref=54632ad9a25845eccd3158352bbd4f6659119c90",
    "patch": "@@ -0,0 +1,15 @@\n+package uk.co.idv.context.adapter.json.context;\n+\n+import static uk.co.mruoc.file.content.ContentLoader.loadContentFromClasspath;\n+\n+public interface ApiContextJsonMother {\n+\n+    static String build() {\n+        return loadContentFromClasspath(\"context/api/api-context.json\");\n+    }\n+\n+    static String buildWithProtectedSensitiveData() {\n+        return loadContentFromClasspath(\"context/api/api-context-with-protected-sensitive-data.json\");\n+    }\n+\n+}"
  },
  {
    "sha": "11295ecbdd9330764e8a856e3f2f196c88c6c132",
    "filename": "context/adapter/json/src/testFixtures/resources/context/api/api-context-with-protected-sensitive-data.json",
    "status": "added",
    "additions": 61,
    "deletions": 0,
    "changes": 61,
    "blob_url": "https://github.com/michaelruocco/idv-context/blob/54632ad9a25845eccd3158352bbd4f6659119c90/context/adapter/json/src/testFixtures/resources/context/api/api-context-with-protected-sensitive-data.json",
    "raw_url": "https://github.com/michaelruocco/idv-context/raw/54632ad9a25845eccd3158352bbd4f6659119c90/context/adapter/json/src/testFixtures/resources/context/api/api-context-with-protected-sensitive-data.json",
    "contents_url": "https://api.github.com/repos/michaelruocco/idv-context/contents/context/adapter/json/src/testFixtures/resources/context/api/api-context-with-protected-sensitive-data.json?ref=54632ad9a25845eccd3158352bbd4f6659119c90",
    "patch": "@@ -0,0 +1,61 @@\n+{\n+  \"id\": \"2948aadc-7f63-4b00-875b-77a4e6608e5c\",\n+  \"created\": \"2020-09-14T20:02:02.002Z\",\n+  \"expiry\": \"2020-09-14T20:08:02.002Z\",\n+  \"eligible\": true,\n+  \"complete\": false,\n+  \"successful\": false,\n+  \"channel\": {\n+    \"id\": \"fake-channel\",\n+    \"country\": \"GB\",\n+    \"phoneNumbers\": [\n+      {\n+        \"value\": \"**********111\"\n+      },\n+      {\n+        \"value\": \"**********212\"\n+      }\n+    ],\n+    \"emailAddresses\": [\n+      \"joe.**************.co.uk\",\n+      \"joeb***********.co.uk\"\n+    ]\n+  },\n+  \"aliases\": [\n+    {\n+      \"type\": \"credit-card-number\",\n+      \"value\": \"4929111111111111\"\n+    }\n+  ],\n+  \"activity\": {\n+    \"name\": \"simple-activity\",\n+    \"timestamp\": \"2020-06-06T12:36:15.179Z\"\n+  },\n+  \"sequences\": [\n+    {\n+      \"name\": \"default-sequence\",\n+      \"stages\": [\n+        {\n+          \"type\": \"all-methods\",\n+          \"methods\": [\n+            {\n+              \"name\": \"fake-method\",\n+              \"eligibility\": {\n+                \"eligible\": true\n+              },\n+              \"config\": {\n+                \"maxNumberOfAttempts\": 3,\n+                \"duration\": 300000,\n+                \"fakeValue\": \"fake\"\n+              }\n+            }\n+          ]\n+        }\n+      ],\n+      \"duration\": 300000,\n+      \"eligibility\": {\n+        \"eligible\": true\n+      }\n+    }\n+  ]\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "71960add14a804a79a8858f875ba11b8df8bb357",
    "filename": "context/adapter/json/src/testFixtures/resources/context/api/api-context.json",
    "status": "added",
    "additions": 61,
    "deletions": 0,
    "changes": 61,
    "blob_url": "https://github.com/michaelruocco/idv-context/blob/54632ad9a25845eccd3158352bbd4f6659119c90/context/adapter/json/src/testFixtures/resources/context/api/api-context.json",
    "raw_url": "https://github.com/michaelruocco/idv-context/raw/54632ad9a25845eccd3158352bbd4f6659119c90/context/adapter/json/src/testFixtures/resources/context/api/api-context.json",
    "contents_url": "https://api.github.com/repos/michaelruocco/idv-context/contents/context/adapter/json/src/testFixtures/resources/context/api/api-context.json?ref=54632ad9a25845eccd3158352bbd4f6659119c90",
    "patch": "@@ -0,0 +1,61 @@\n+{\n+  \"id\": \"2948aadc-7f63-4b00-875b-77a4e6608e5c\",\n+  \"created\": \"2020-09-14T20:02:02.002Z\",\n+  \"expiry\": \"2020-09-14T20:08:02.002Z\",\n+  \"eligible\": true,\n+  \"complete\": false,\n+  \"successful\": false,\n+  \"channel\": {\n+    \"id\": \"fake-channel\",\n+    \"country\": \"GB\",\n+    \"phoneNumbers\": [\n+      {\n+        \"value\": \"+447089111111\"\n+      },\n+      {\n+        \"value\": \"+447089121212\"\n+      }\n+    ],\n+    \"emailAddresses\": [\n+      \"joe.bloggs@hotmail.co.uk\",\n+      \"joebloggs@yahoo.co.uk\"\n+    ]\n+  },\n+  \"aliases\": [\n+    {\n+      \"type\": \"credit-card-number\",\n+      \"value\": \"4929111111111111\"\n+    }\n+  ],\n+  \"activity\": {\n+    \"name\": \"simple-activity\",\n+    \"timestamp\": \"2020-06-06T12:36:15.179Z\"\n+  },\n+  \"sequences\": [\n+    {\n+      \"name\": \"default-sequence\",\n+      \"stages\": [\n+        {\n+          \"type\": \"all-methods\",\n+          \"methods\": [\n+            {\n+              \"name\": \"fake-method\",\n+              \"eligibility\": {\n+                \"eligible\": true\n+              },\n+              \"config\": {\n+                \"maxNumberOfAttempts\": 3,\n+                \"duration\": 300000,\n+                \"fakeValue\": \"fake\"\n+              }\n+            }\n+          ]\n+        }\n+      ],\n+      \"duration\": 300000,\n+      \"eligibility\": {\n+        \"eligible\": true\n+      }\n+    }\n+  ]\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "730ef71cdb2994603f0b807b94b11fc2327aed7a",
    "filename": "context/domain/entities/src/testFixtures/java/uk/co/idv/context/entities/context/ApiContextMother.java",
    "status": "added",
    "additions": 26,
    "deletions": 0,
    "changes": 26,
    "blob_url": "https://github.com/michaelruocco/idv-context/blob/54632ad9a25845eccd3158352bbd4f6659119c90/context/domain/entities/src/testFixtures/java/uk/co/idv/context/entities/context/ApiContextMother.java",
    "raw_url": "https://github.com/michaelruocco/idv-context/raw/54632ad9a25845eccd3158352bbd4f6659119c90/context/domain/entities/src/testFixtures/java/uk/co/idv/context/entities/context/ApiContextMother.java",
    "contents_url": "https://api.github.com/repos/michaelruocco/idv-context/contents/context/domain/entities/src/testFixtures/java/uk/co/idv/context/entities/context/ApiContextMother.java?ref=54632ad9a25845eccd3158352bbd4f6659119c90",
    "patch": "@@ -0,0 +1,26 @@\n+package uk.co.idv.context.entities.context;\n+\n+import uk.co.idv.context.entities.context.sequence.SequencesMother;\n+import uk.co.idv.identity.entities.channel.DefaultChannelMother;\n+import uk.co.idv.method.entities.verification.VerificationsMother;\n+\n+import java.time.Instant;\n+import java.util.UUID;\n+\n+public interface ApiContextMother {\n+\n+    static ApiContext build() {\n+        return builder().build();\n+    }\n+\n+    static ApiContext.ApiContextBuilder builder() {\n+        return ApiContext.builder()\n+                .id(UUID.fromString(\"2948aadc-7f63-4b00-875b-77a4e6608e5c\"))\n+                .created(Instant.parse(\"2020-09-14T20:02:02.002Z\"))\n+                .expiry(Instant.parse(\"2020-09-14T20:08:02.002Z\"))\n+                .channel(DefaultChannelMother.withData())\n+                .verifications(VerificationsMother.oneIncomplete())\n+                .sequences(SequencesMother.fakeOnly());\n+    }\n+\n+}"
  },
  {
    "sha": "c8fe27303c0fb230d5401cb8ee70abc3ab7660f9",
    "filename": "identity/adapter/json/src/testFixtures/resources/channel/default-channel-with-data.json",
    "status": "modified",
    "additions": 5,
    "deletions": 1,
    "changes": 6,
    "blob_url": "https://github.com/michaelruocco/idv-context/blob/54632ad9a25845eccd3158352bbd4f6659119c90/identity/adapter/json/src/testFixtures/resources/channel/default-channel-with-data.json",
    "raw_url": "https://github.com/michaelruocco/idv-context/raw/54632ad9a25845eccd3158352bbd4f6659119c90/identity/adapter/json/src/testFixtures/resources/channel/default-channel-with-data.json",
    "contents_url": "https://api.github.com/repos/michaelruocco/idv-context/contents/identity/adapter/json/src/testFixtures/resources/channel/default-channel-with-data.json?ref=54632ad9a25845eccd3158352bbd4f6659119c90",
    "patch": "@@ -5,9 +5,13 @@\n     {\n       \"value\": \"+447089111111\",\n       \"lastUpdated\":\"2020-08-29T20:55:12.825Z\"\n+    },\n+    {\n+      \"value\":\"+447089121212\"\n     }\n   ],\n   \"emailAddresses\": [\n-    \"bugs.bunny@sky.co.uk\"\n+    \"joe.bloggs@hotmail.co.uk\",\n+    \"joebloggs@yahoo.co.uk\"\n   ]\n }\n\\ No newline at end of file"
  },
  {
    "sha": "fdb9d89602e51b1407375e299d8f817f6bce7136",
    "filename": "identity/domain/entities/src/testFixtures/java/uk/co/idv/identity/entities/channel/DefaultChannelMother.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/michaelruocco/idv-context/blob/54632ad9a25845eccd3158352bbd4f6659119c90/identity/domain/entities/src/testFixtures/java/uk/co/idv/identity/entities/channel/DefaultChannelMother.java",
    "raw_url": "https://github.com/michaelruocco/idv-context/raw/54632ad9a25845eccd3158352bbd4f6659119c90/identity/domain/entities/src/testFixtures/java/uk/co/idv/identity/entities/channel/DefaultChannelMother.java",
    "contents_url": "https://api.github.com/repos/michaelruocco/idv-context/contents/identity/domain/entities/src/testFixtures/java/uk/co/idv/identity/entities/channel/DefaultChannelMother.java?ref=54632ad9a25845eccd3158352bbd4f6659119c90",
    "patch": "@@ -36,8 +36,8 @@ static DefaultChannel withEmailAddresses(EmailAddresses emailAddresses) {\n \n     static DefaultChannel withData() {\n         return builder()\n-                .phoneNumbers(PhoneNumbersMother.one())\n-                .emailAddresses(EmailAddressesMother.one())\n+                .phoneNumbers(PhoneNumbersMother.two())\n+                .emailAddresses(EmailAddressesMother.two())\n                 .build();\n     }\n "
  },
  {
    "sha": "d96edae393b6252bf96a074a70c7e079fe3622fb",
    "filename": "identity/domain/entities/src/testFixtures/java/uk/co/idv/identity/entities/channel/fake/FakeChannelMother.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/michaelruocco/idv-context/blob/54632ad9a25845eccd3158352bbd4f6659119c90/identity/domain/entities/src/testFixtures/java/uk/co/idv/identity/entities/channel/fake/FakeChannelMother.java",
    "raw_url": "https://github.com/michaelruocco/idv-context/raw/54632ad9a25845eccd3158352bbd4f6659119c90/identity/domain/entities/src/testFixtures/java/uk/co/idv/identity/entities/channel/fake/FakeChannelMother.java",
    "contents_url": "https://api.github.com/repos/michaelruocco/idv-context/contents/identity/domain/entities/src/testFixtures/java/uk/co/idv/identity/entities/channel/fake/FakeChannelMother.java?ref=54632ad9a25845eccd3158352bbd4f6659119c90",
    "patch": "@@ -1,6 +1,6 @@\n package uk.co.idv.identity.entities.channel.fake;\n \n-public interface FakeChannelMother{\n+public interface FakeChannelMother {\n \n     static FakeChannel build() {\n         return new FakeChannel();"
  }
]
