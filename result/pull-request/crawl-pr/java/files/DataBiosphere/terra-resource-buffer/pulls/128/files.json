[
  {
    "sha": "6357f9360462058cd97022b1b23ff165e9f18b38",
    "filename": "build.gradle",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/DataBiosphere/terra-resource-buffer/blob/48d3bf500381f2a063649681c1ad98ea7535268a/build.gradle",
    "raw_url": "https://github.com/DataBiosphere/terra-resource-buffer/raw/48d3bf500381f2a063649681c1ad98ea7535268a/build.gradle",
    "contents_url": "https://api.github.com/repos/DataBiosphere/terra-resource-buffer/contents/build.gradle?ref=48d3bf500381f2a063649681c1ad98ea7535268a",
    "patch": "@@ -56,6 +56,7 @@ allprojects {\n }\n \n repositories {\n+    mavenLocal()\n     mavenCentral()\n     maven {\n         url 'https://broadinstitute.jfrog.io/broadinstitute/libs-release/'\n@@ -68,7 +69,7 @@ repositories {\n dependencies {\n     // Terra deps\n     implementation group: 'bio.terra', name: 'stairway', version: '0.0.38-SNAPSHOT'\n-    implementation group: \"bio.terra\", name: 'terra-common-lib', version: \"0.0.17-SNAPSHOT\"\n+    implementation group: \"bio.terra\", name: 'terra-common-lib', version: \"0.0.31-SNAPSHOT\"\n     implementation group: 'bio.terra.cloud-resource-lib', name: 'cloud-resource-schema'\n     implementation group: 'bio.terra.cloud-resource-lib', name: 'google-billing', version: '0.4.0'\n     implementation group: 'bio.terra.cloud-resource-lib', name: 'google-cloudresourcemanager', version: '0.4.0'"
  },
  {
    "sha": "4428748bef83bc27141fedee0c8625ae7d73334b",
    "filename": "gradle.lockfile",
    "status": "modified",
    "additions": 25,
    "deletions": 11,
    "changes": 36,
    "blob_url": "https://github.com/DataBiosphere/terra-resource-buffer/blob/48d3bf500381f2a063649681c1ad98ea7535268a/gradle.lockfile",
    "raw_url": "https://github.com/DataBiosphere/terra-resource-buffer/raw/48d3bf500381f2a063649681c1ad98ea7535268a/gradle.lockfile",
    "contents_url": "https://api.github.com/repos/DataBiosphere/terra-resource-buffer/contents/gradle.lockfile?ref=48d3bf500381f2a063649681c1ad98ea7535268a",
    "patch": "@@ -13,7 +13,8 @@ bio.terra.cloud-resource-lib:google-serviceusage:0.4.0=compileClasspath,producti\n bio.terra.cloud-resource-lib:google-storage:0.5.0=compileClasspath,productionRuntimeClasspath,runtimeClasspath,testCompileClasspath,testRuntimeClasspath\n bio.terra.janitor:terra-resource-janitor-client:0.0.2-SNAPSHOT=compileClasspath,productionRuntimeClasspath,runtimeClasspath,testCompileClasspath,testRuntimeClasspath\n bio.terra:stairway:0.0.38-SNAPSHOT=compileClasspath,productionRuntimeClasspath,runtimeClasspath,testCompileClasspath,testRuntimeClasspath\n-bio.terra:terra-common-lib:0.0.17-SNAPSHOT=compileClasspath,productionRuntimeClasspath,runtimeClasspath,testCompileClasspath,testRuntimeClasspath\n+bio.terra:terra-common-lib:0.0.31-SNAPSHOT=compileClasspath,productionRuntimeClasspath,runtimeClasspath,testCompileClasspath,testRuntimeClasspath\n+ch.qos.logback.contrib:logback-jackson:0.1.5=productionRuntimeClasspath,runtimeClasspath,testRuntimeClasspath\n ch.qos.logback.contrib:logback-json-classic:0.1.5=compileClasspath,productionRuntimeClasspath,runtimeClasspath,testCompileClasspath,testRuntimeClasspath\n ch.qos.logback.contrib:logback-json-core:0.1.5=compileClasspath,productionRuntimeClasspath,runtimeClasspath,testCompileClasspath,testRuntimeClasspath\n ch.qos.logback:logback-classic:1.2.3=compileClasspath,productionRuntimeClasspath,runtimeClasspath,testCompileClasspath,testRuntimeClasspath\n@@ -29,7 +30,8 @@ com.fasterxml.jackson.module:jackson-module-parameter-names:2.11.0=compileClassp\n com.github.spotbugs:spotbugs-annotations:4.1.1=spotbugs\n com.github.spotbugs:spotbugs:4.1.1=spotbugs\n com.google.android:annotations:4.1.1.4=productionRuntimeClasspath,runtimeClasspath,testRuntimeClasspath\n-com.google.api-client:google-api-client:1.30.10=compileClasspath,productionRuntimeClasspath,runtimeClasspath,testCompileClasspath,testRuntimeClasspath\n+com.google.api-client:google-api-client:1.30.10=compileClasspath,testCompileClasspath\n+com.google.api-client:google-api-client:1.31.1=productionRuntimeClasspath,runtimeClasspath,testRuntimeClasspath\n com.google.api.grpc:proto-google-cloud-billing-v1:1.0.2=productionRuntimeClasspath,runtimeClasspath,testRuntimeClasspath\n com.google.api.grpc:proto-google-cloud-billing-v1:1.1.1=compileClasspath,testCompileClasspath\n com.google.api.grpc:proto-google-cloud-logging-v2:0.84.1=productionRuntimeClasspath,runtimeClasspath,testRuntimeClasspath\n@@ -57,6 +59,7 @@ com.google.apis:google-api-services-cloudresourcemanager:v1-rev20200810-1.30.10=\n com.google.apis:google-api-services-compute:v1-rev20200811-1.30.10=compileClasspath,productionRuntimeClasspath,runtimeClasspath,testCompileClasspath,testRuntimeClasspath\n com.google.apis:google-api-services-dns:v1-rev20200806-1.30.10=compileClasspath,productionRuntimeClasspath,runtimeClasspath,testCompileClasspath,testRuntimeClasspath\n com.google.apis:google-api-services-iam:v1-rev20201112-1.30.10=compileClasspath,productionRuntimeClasspath,runtimeClasspath,testCompileClasspath,testRuntimeClasspath\n+com.google.apis:google-api-services-logging:v2-rev20210217-1.31.0=productionRuntimeClasspath,runtimeClasspath,testRuntimeClasspath\n com.google.apis:google-api-services-serviceusage:v1-rev20200821-1.30.10=compileClasspath,productionRuntimeClasspath,runtimeClasspath,testCompileClasspath,testRuntimeClasspath\n com.google.apis:google-api-services-storage:v1-rev20200326-1.30.9=compileClasspath,productionRuntimeClasspath,runtimeClasspath,testCompileClasspath,testRuntimeClasspath\n com.google.auth:google-auth-library-credentials:0.20.0=productionRuntimeClasspath,runtimeClasspath,testRuntimeClasspath\n@@ -85,21 +88,23 @@ com.google.cloud:google-cloud-storage:1.108.0=compileClasspath,testCompileClassp\n com.google.cloud:google-cloud-trace:0.100.0-beta=compileClasspath,testCompileClasspath\n com.google.cloud:google-cloud-trace:1.0.3=productionRuntimeClasspath,runtimeClasspath,testRuntimeClasspath\n com.google.cloud:libraries-bom:5.3.0=productionRuntimeClasspath,runtimeClasspath,testRuntimeClasspath\n-com.google.code.findbugs:annotations:3.0.1=productionRuntimeClasspath,runtimeClasspath,testRuntimeClasspath\n+com.google.code.findbugs:annotations:3.0.1=compileClasspath,productionRuntimeClasspath,runtimeClasspath,testCompileClasspath,testRuntimeClasspath\n com.google.code.findbugs:jsr305:3.0.2=compileClasspath,productionRuntimeClasspath,runtimeClasspath,spotbugs,testCompileClasspath,testRuntimeClasspath\n com.google.code.gson:gson:2.8.6=compileClasspath,productionRuntimeClasspath,runtimeClasspath,testCompileClasspath,testRuntimeClasspath\n com.google.errorprone:error_prone_annotations:2.3.4=productionRuntimeClasspath,runtimeClasspath,testRuntimeClasspath\n com.google.errorprone:error_prone_annotations:2.4.0=compileClasspath,testCompileClasspath\n com.google.guava:failureaccess:1.0.1=compileClasspath,productionRuntimeClasspath,runtimeClasspath,testCompileClasspath,testRuntimeClasspath\n com.google.guava:guava:29.0-jre=compileClasspath,productionRuntimeClasspath,runtimeClasspath,testCompileClasspath,testRuntimeClasspath\n com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava=compileClasspath,productionRuntimeClasspath,runtimeClasspath,testCompileClasspath,testRuntimeClasspath\n+com.google.http-client:google-http-client-apache-v2:1.35.0=productionRuntimeClasspath,runtimeClasspath,testRuntimeClasspath\n com.google.http-client:google-http-client-appengine:1.35.0=compileClasspath,productionRuntimeClasspath,runtimeClasspath,testCompileClasspath,testRuntimeClasspath\n com.google.http-client:google-http-client-jackson2:1.35.0=productionRuntimeClasspath,runtimeClasspath,testRuntimeClasspath\n com.google.http-client:google-http-client-jackson2:1.37.0=compileClasspath,testCompileClasspath\n com.google.http-client:google-http-client:1.35.0=productionRuntimeClasspath,runtimeClasspath,testRuntimeClasspath\n com.google.http-client:google-http-client:1.37.0=compileClasspath,testCompileClasspath\n com.google.j2objc:j2objc-annotations:1.3=compileClasspath,productionRuntimeClasspath,runtimeClasspath,testCompileClasspath,testRuntimeClasspath\n-com.google.oauth-client:google-oauth-client:1.31.0=compileClasspath,productionRuntimeClasspath,runtimeClasspath,testCompileClasspath,testRuntimeClasspath\n+com.google.oauth-client:google-oauth-client:1.31.0=compileClasspath,testCompileClasspath\n+com.google.oauth-client:google-oauth-client:1.31.2=productionRuntimeClasspath,runtimeClasspath,testRuntimeClasspath\n com.google.protobuf:protobuf-java-util:3.11.4=productionRuntimeClasspath,runtimeClasspath,testRuntimeClasspath\n com.google.protobuf:protobuf-java-util:3.13.0=compileClasspath,testCompileClasspath\n com.google.protobuf:protobuf-java:3.11.4=productionRuntimeClasspath,runtimeClasspath,testRuntimeClasspath\n@@ -138,15 +143,19 @@ io.gsonfire:gson-fire:1.8.4=productionRuntimeClasspath,runtimeClasspath,testRunt\n io.kubernetes:client-java-api:10.0.0=productionRuntimeClasspath,runtimeClasspath,testRuntimeClasspath\n io.kubernetes:client-java-proto:10.0.0=productionRuntimeClasspath,runtimeClasspath,testRuntimeClasspath\n io.kubernetes:client-java:10.0.0=productionRuntimeClasspath,runtimeClasspath,testRuntimeClasspath\n-io.opencensus:opencensus-api:0.26.0=compileClasspath,productionRuntimeClasspath,runtimeClasspath,testCompileClasspath,testRuntimeClasspath\n+io.opencensus:opencensus-api:0.28.3=compileClasspath,productionRuntimeClasspath,runtimeClasspath,testCompileClasspath,testRuntimeClasspath\n io.opencensus:opencensus-contrib-exemplar-util:0.26.0=compileClasspath,productionRuntimeClasspath,runtimeClasspath,testCompileClasspath,testRuntimeClasspath\n-io.opencensus:opencensus-contrib-http-util:0.24.0=compileClasspath,productionRuntimeClasspath,runtimeClasspath,testCompileClasspath,testRuntimeClasspath\n-io.opencensus:opencensus-contrib-resource-util:0.26.0=compileClasspath,productionRuntimeClasspath,runtimeClasspath,testCompileClasspath,testRuntimeClasspath\n+io.opencensus:opencensus-contrib-http-servlet:0.26.0=compileClasspath,productionRuntimeClasspath,runtimeClasspath,testCompileClasspath,testRuntimeClasspath\n+io.opencensus:opencensus-contrib-http-util:0.26.0=compileClasspath,productionRuntimeClasspath,runtimeClasspath,testCompileClasspath,testRuntimeClasspath\n+io.opencensus:opencensus-contrib-resource-util:0.26.0=compileClasspath,testCompileClasspath\n+io.opencensus:opencensus-contrib-resource-util:0.28.3=productionRuntimeClasspath,runtimeClasspath,testRuntimeClasspath\n+io.opencensus:opencensus-contrib-spring:0.26.0=compileClasspath,productionRuntimeClasspath,runtimeClasspath,testCompileClasspath,testRuntimeClasspath\n io.opencensus:opencensus-exporter-metrics-util:0.26.0=compileClasspath,productionRuntimeClasspath,runtimeClasspath,testCompileClasspath,testRuntimeClasspath\n io.opencensus:opencensus-exporter-stats-stackdriver:0.26.0=compileClasspath,productionRuntimeClasspath,runtimeClasspath,testCompileClasspath,testRuntimeClasspath\n-io.opencensus:opencensus-exporter-trace-stackdriver:0.26.0=compileClasspath,productionRuntimeClasspath,runtimeClasspath,testCompileClasspath,testRuntimeClasspath\n-io.opencensus:opencensus-impl-core:0.26.0=productionRuntimeClasspath,runtimeClasspath,testRuntimeClasspath\n-io.opencensus:opencensus-impl:0.26.0=productionRuntimeClasspath,runtimeClasspath,testRuntimeClasspath\n+io.opencensus:opencensus-exporter-trace-stackdriver:0.26.0=compileClasspath,testCompileClasspath\n+io.opencensus:opencensus-exporter-trace-stackdriver:0.28.3=productionRuntimeClasspath,runtimeClasspath,testRuntimeClasspath\n+io.opencensus:opencensus-impl-core:0.28.3=productionRuntimeClasspath,runtimeClasspath,testRuntimeClasspath\n+io.opencensus:opencensus-impl:0.28.3=productionRuntimeClasspath,runtimeClasspath,testRuntimeClasspath\n io.perfmark:perfmark-api:0.19.0=productionRuntimeClasspath,runtimeClasspath,testRuntimeClasspath\n io.prometheus:simpleclient:0.9.0=productionRuntimeClasspath,runtimeClasspath,testRuntimeClasspath\n io.prometheus:simpleclient_common:0.9.0=productionRuntimeClasspath,runtimeClasspath,testRuntimeClasspath\n@@ -165,13 +174,15 @@ jakarta.ws.rs:jakarta.ws.rs-api:2.1.6=productionRuntimeClasspath,runtimeClasspat\n jakarta.xml.bind:jakarta.xml.bind-api:2.3.3=compileClasspath,productionRuntimeClasspath,runtimeClasspath,testCompileClasspath,testRuntimeClasspath\n javax.activation:javax.activation-api:1.2.0=compileClasspath,productionRuntimeClasspath,runtimeClasspath,testCompileClasspath,testRuntimeClasspath\n javax.annotation:javax.annotation-api:1.3.2=compileClasspath,productionRuntimeClasspath,runtimeClasspath,testCompileClasspath,testRuntimeClasspath\n+javax.inject:javax.inject:1=productionRuntimeClasspath,runtimeClasspath,testRuntimeClasspath\n+javax.servlet:javax.servlet-api:4.0.1=compileClasspath,productionRuntimeClasspath,runtimeClasspath,testCompileClasspath,testRuntimeClasspath\n javax.validation:validation-api:2.0.1.Final=compileClasspath,productionRuntimeClasspath,runtimeClasspath,testCompileClasspath,testRuntimeClasspath\n javax.xml.bind:jaxb-api:2.3.1=compileClasspath,productionRuntimeClasspath,runtimeClasspath,testCompileClasspath,testRuntimeClasspath\n jaxen:jaxen:1.2.0=spotbugs\n joda-time:joda-time:2.10.6=productionRuntimeClasspath,runtimeClasspath,testRuntimeClasspath\n net.bytebuddy:byte-buddy-agent:1.10.11=testCompileClasspath,testRuntimeClasspath\n net.bytebuddy:byte-buddy:1.10.11=testCompileClasspath,testRuntimeClasspath\n-net.jcip:jcip-annotations:1.0=productionRuntimeClasspath,runtimeClasspath,spotbugs,testRuntimeClasspath\n+net.jcip:jcip-annotations:1.0=compileClasspath,productionRuntimeClasspath,runtimeClasspath,spotbugs,testCompileClasspath,testRuntimeClasspath\n net.minidev:accessors-smart:1.2=testCompileClasspath,testRuntimeClasspath\n net.minidev:json-smart:2.3=testCompileClasspath,testRuntimeClasspath\n net.sf.saxon:Saxon-HE:10.1=spotbugs\n@@ -189,6 +200,7 @@ org.apache.logging.log4j:log4j-to-slf4j:2.13.3=compileClasspath,productionRuntim\n org.apache.tomcat.embed:tomcat-embed-core:9.0.36=compileClasspath,productionRuntimeClasspath,runtimeClasspath,testCompileClasspath,testRuntimeClasspath\n org.apache.tomcat.embed:tomcat-embed-websocket:9.0.36=compileClasspath,productionRuntimeClasspath,runtimeClasspath,testCompileClasspath,testRuntimeClasspath\n org.apiguardian:apiguardian-api:1.1.0=testCompileClasspath,testRuntimeClasspath\n+org.aspectj:aspectjweaver:1.9.5=compileClasspath,productionRuntimeClasspath,runtimeClasspath,testCompileClasspath,testRuntimeClasspath\n org.assertj:assertj-core:3.16.1=testCompileClasspath,testRuntimeClasspath\n org.bitbucket.b_c:jose4j:0.7.2=productionRuntimeClasspath,runtimeClasspath,testRuntimeClasspath\n org.bouncycastle:bcpkix-jdk15on:1.66=productionRuntimeClasspath,runtimeClasspath,testRuntimeClasspath\n@@ -208,6 +220,7 @@ org.glassfish.jersey.media:jersey-media-json-jackson:2.30.1=productionRuntimeCla\n org.glassfish.jersey.media:jersey-media-multipart:2.30.1=productionRuntimeClasspath,runtimeClasspath,testRuntimeClasspath\n org.glassfish:jakarta.el:3.0.3=compileClasspath,productionRuntimeClasspath,runtimeClasspath,testCompileClasspath,testRuntimeClasspath\n org.hamcrest:hamcrest:2.2=testCompileClasspath,testRuntimeClasspath\n+org.hashids:hashids:1.0.3=productionRuntimeClasspath,runtimeClasspath,testRuntimeClasspath\n org.jacoco:org.jacoco.agent:0.8.6=jacocoAgent,jacocoAnt\n org.jacoco:org.jacoco.ant:0.8.6=jacocoAnt\n org.jacoco:org.jacoco.core:0.8.6=jacocoAnt\n@@ -262,6 +275,7 @@ org.springframework.data:spring-data-commons:2.3.1.RELEASE=compileClasspath,prod\n org.springframework.data:spring-data-jdbc:2.0.1.RELEASE=compileClasspath,productionRuntimeClasspath,runtimeClasspath,testCompileClasspath,testRuntimeClasspath\n org.springframework.data:spring-data-relational:2.0.1.RELEASE=compileClasspath,productionRuntimeClasspath,runtimeClasspath,testCompileClasspath,testRuntimeClasspath\n org.springframework:spring-aop:5.2.7.RELEASE=compileClasspath,productionRuntimeClasspath,runtimeClasspath,testCompileClasspath,testRuntimeClasspath\n+org.springframework:spring-aspects:5.2.7.RELEASE=compileClasspath,productionRuntimeClasspath,runtimeClasspath,testCompileClasspath,testRuntimeClasspath\n org.springframework:spring-beans:5.2.7.RELEASE=compileClasspath,productionRuntimeClasspath,runtimeClasspath,testCompileClasspath,testRuntimeClasspath\n org.springframework:spring-context:5.2.7.RELEASE=compileClasspath,productionRuntimeClasspath,runtimeClasspath,testCompileClasspath,testRuntimeClasspath\n org.springframework:spring-core:5.2.7.RELEASE=compileClasspath,productionRuntimeClasspath,runtimeClasspath,testCompileClasspath,testRuntimeClasspath"
  },
  {
    "sha": "d8a2e338e2455e997f0c3a01e7d6e15bb53f63b9",
    "filename": "src/main/java/bio/terra/buffer/app/StartupInitializer.java",
    "status": "modified",
    "additions": 5,
    "deletions": 5,
    "changes": 10,
    "blob_url": "https://github.com/DataBiosphere/terra-resource-buffer/blob/48d3bf500381f2a063649681c1ad98ea7535268a/src/main/java/bio/terra/buffer/app/StartupInitializer.java",
    "raw_url": "https://github.com/DataBiosphere/terra-resource-buffer/raw/48d3bf500381f2a063649681c1ad98ea7535268a/src/main/java/bio/terra/buffer/app/StartupInitializer.java",
    "contents_url": "https://api.github.com/repos/DataBiosphere/terra-resource-buffer/contents/src/main/java/bio/terra/buffer/app/StartupInitializer.java?ref=48d3bf500381f2a063649681c1ad98ea7535268a",
    "patch": "@@ -1,12 +1,12 @@\n package bio.terra.buffer.app;\n \n-import bio.terra.buffer.app.configuration.BufferJdbcConfiguration;\n+import bio.terra.buffer.app.configuration.BufferJdbcThing;\n import bio.terra.buffer.service.cleanup.CleanupScheduler;\n import bio.terra.buffer.service.pool.PoolService;\n import bio.terra.buffer.service.resource.FlightScheduler;\n import bio.terra.buffer.service.stackdriver.StackdriverExporter;\n-import bio.terra.buffer.service.stairway.StairwayComponent;\n import bio.terra.common.migrate.LiquibaseMigrator;\n+import bio.terra.common.stairway.StairwayLifecycleManager;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.context.ApplicationContext;\n@@ -23,15 +23,15 @@ public static void initialize(ApplicationContext applicationContext) {\n     applicationContext.getBean(StackdriverExporter.class).initialize();\n     // Initialize or upgrade the database depending on the configuration\n     LiquibaseMigrator migrateService = applicationContext.getBean(LiquibaseMigrator.class);\n-    BufferJdbcConfiguration bufferJdbcConfiguration =\n-        applicationContext.getBean(BufferJdbcConfiguration.class);\n+    BufferJdbcThing bufferJdbcConfiguration =\n+        applicationContext.getBean(BufferJdbcThing.class);\n \n     if (bufferJdbcConfiguration.isRecreateDbOnStart()) {\n       migrateService.initialize(changelogPath, bufferJdbcConfiguration.getDataSource());\n     } else if (bufferJdbcConfiguration.isUpdateDbOnStart()) {\n       migrateService.upgrade(changelogPath, bufferJdbcConfiguration.getDataSource());\n     }\n-    applicationContext.getBean(StairwayComponent.class).initialize();\n+    applicationContext.getBean(StairwayLifecycleManager.class).initialize();\n     applicationContext.getBean(PoolService.class).initialize();\n     applicationContext.getBean(FlightScheduler.class).initialize();\n     applicationContext.getBean(CleanupScheduler.class).initialize();"
  },
  {
    "sha": "7cd90a2b73b60eb9dee2707adfc7c4cc8ca03ab6",
    "filename": "src/main/java/bio/terra/buffer/app/configuration/ApplicationConfiguration.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/DataBiosphere/terra-resource-buffer/blob/48d3bf500381f2a063649681c1ad98ea7535268a/src/main/java/bio/terra/buffer/app/configuration/ApplicationConfiguration.java",
    "raw_url": "https://github.com/DataBiosphere/terra-resource-buffer/raw/48d3bf500381f2a063649681c1ad98ea7535268a/src/main/java/bio/terra/buffer/app/configuration/ApplicationConfiguration.java",
    "contents_url": "https://api.github.com/repos/DataBiosphere/terra-resource-buffer/contents/src/main/java/bio/terra/buffer/app/configuration/ApplicationConfiguration.java?ref=48d3bf500381f2a063649681c1ad98ea7535268a",
    "patch": "@@ -20,7 +20,7 @@\n @Configuration\n public class ApplicationConfiguration {\n   @Bean(JDBC_TEMPLATE)\n-  public NamedParameterJdbcTemplate getNamedParameterJdbcTemplate(BufferJdbcConfiguration config) {\n+  public NamedParameterJdbcTemplate getNamedParameterJdbcTemplate(BufferJdbcThing config) {\n     return new NamedParameterJdbcTemplate(config.getDataSource());\n   }\n "
  },
  {
    "sha": "f64152ca7a1479ecc2bf93a98bbeec44f0da1107",
    "filename": "src/main/java/bio/terra/buffer/app/configuration/BufferJdbcThing.java",
    "status": "renamed",
    "additions": 3,
    "deletions": 1,
    "changes": 4,
    "blob_url": "https://github.com/DataBiosphere/terra-resource-buffer/blob/48d3bf500381f2a063649681c1ad98ea7535268a/src/main/java/bio/terra/buffer/app/configuration/BufferJdbcThing.java",
    "raw_url": "https://github.com/DataBiosphere/terra-resource-buffer/raw/48d3bf500381f2a063649681c1ad98ea7535268a/src/main/java/bio/terra/buffer/app/configuration/BufferJdbcThing.java",
    "contents_url": "https://api.github.com/repos/DataBiosphere/terra-resource-buffer/contents/src/main/java/bio/terra/buffer/app/configuration/BufferJdbcThing.java?ref=48d3bf500381f2a063649681c1ad98ea7535268a",
    "patch": "@@ -1,5 +1,7 @@\n package bio.terra.buffer.app.configuration;\n \n+import bio.terra.common.db.JdbcConfig;\n+import bio.terra.common.db.JdbcProperties;\n import org.springframework.boot.context.properties.ConfigurationProperties;\n import org.springframework.boot.context.properties.EnableConfigurationProperties;\n import org.springframework.context.annotation.Bean;\n@@ -12,7 +14,7 @@\n @EnableConfigurationProperties\n @EnableTransactionManagement\n @ConfigurationProperties(prefix = \"buffer.db\")\n-public class BufferJdbcConfiguration extends JdbcConfiguration {\n+public class BufferJdbcThing extends JdbcProperties {\n   // These properties control code in the StartupInitializer. We would not use these in production,\n   // but they are handy to set for development and testing. There are only three interesting states:\n   // 1. recreateDbOnStart is true; updateDbOnStart is irrelevant - initialize and recreate an empty",
    "previous_filename": "src/main/java/bio/terra/buffer/app/configuration/BufferJdbcConfiguration.java"
  },
  {
    "sha": "91790186b5d595a11c4b59c0b8dc07fcd5f2b872",
    "filename": "src/main/java/bio/terra/buffer/app/configuration/JdbcConfiguration.java",
    "status": "removed",
    "additions": 0,
    "deletions": 79,
    "changes": 79,
    "blob_url": "https://github.com/DataBiosphere/terra-resource-buffer/blob/c319d27654cbd5910b978017c3e207dc57f221a8/src/main/java/bio/terra/buffer/app/configuration/JdbcConfiguration.java",
    "raw_url": "https://github.com/DataBiosphere/terra-resource-buffer/raw/c319d27654cbd5910b978017c3e207dc57f221a8/src/main/java/bio/terra/buffer/app/configuration/JdbcConfiguration.java",
    "contents_url": "https://api.github.com/repos/DataBiosphere/terra-resource-buffer/contents/src/main/java/bio/terra/buffer/app/configuration/JdbcConfiguration.java?ref=c319d27654cbd5910b978017c3e207dc57f221a8",
    "patch": "@@ -1,79 +0,0 @@\n-package bio.terra.buffer.app.configuration;\n-\n-import java.util.Properties;\n-import org.apache.commons.dbcp2.*;\n-import org.apache.commons.lang3.builder.ToStringBuilder;\n-import org.apache.commons.lang3.builder.ToStringStyle;\n-import org.apache.commons.pool2.ObjectPool;\n-import org.apache.commons.pool2.impl.GenericObjectPool;\n-\n-/** Base class for accessing JDBC configuration properties. */\n-public class JdbcConfiguration {\n-  private String uri;\n-  private String username;\n-  private String password;\n-\n-  // Not a property\n-  private PoolingDataSource<PoolableConnection> dataSource;\n-\n-  public String getUri() {\n-    return uri;\n-  }\n-\n-  public String getUsername() {\n-    return username;\n-  }\n-\n-  public String getPassword() {\n-    return password;\n-  }\n-\n-  // NOTE: even though the setters appear unused, the Spring infrastructure uses them to populate\n-  // the properties.\n-  public void setUri(String uri) {\n-    this.uri = uri;\n-  }\n-\n-  public void setUsername(String username) {\n-    this.username = username;\n-  }\n-\n-  public void setPassword(String password) {\n-    this.password = password;\n-  }\n-\n-  // Main use of the configuration is this pooling data source object.\n-  public PoolingDataSource<PoolableConnection> getDataSource() {\n-    // Lazy allocation of the data source\n-    if (dataSource == null) {\n-      configureDataSource();\n-    }\n-    return dataSource;\n-  }\n-\n-  private void configureDataSource() {\n-    Properties props = new Properties();\n-    props.setProperty(\"user\", getUsername());\n-    props.setProperty(\"password\", getPassword());\n-\n-    ConnectionFactory connectionFactory = new DriverManagerConnectionFactory(getUri(), props);\n-\n-    PoolableConnectionFactory poolableConnectionFactory =\n-        new PoolableConnectionFactory(connectionFactory, null);\n-\n-    ObjectPool<PoolableConnection> connectionPool =\n-        new GenericObjectPool<>(poolableConnectionFactory);\n-\n-    poolableConnectionFactory.setPool(connectionPool);\n-\n-    dataSource = new PoolingDataSource<>(connectionPool);\n-  }\n-\n-  @Override\n-  public String toString() {\n-    return new ToStringBuilder(this, ToStringStyle.JSON_STYLE)\n-        .append(\"uri\", uri)\n-        .append(\"username\", username)\n-        .toString();\n-  }\n-}"
  },
  {
    "sha": "62aabd1e0d6ba977d0168e8cfef1ebf3d81ba92d",
    "filename": "src/main/java/bio/terra/buffer/app/configuration/KubernetesConfiguration.java",
    "status": "removed",
    "additions": 0,
    "deletions": 47,
    "changes": 47,
    "blob_url": "https://github.com/DataBiosphere/terra-resource-buffer/blob/c319d27654cbd5910b978017c3e207dc57f221a8/src/main/java/bio/terra/buffer/app/configuration/KubernetesConfiguration.java",
    "raw_url": "https://github.com/DataBiosphere/terra-resource-buffer/raw/c319d27654cbd5910b978017c3e207dc57f221a8/src/main/java/bio/terra/buffer/app/configuration/KubernetesConfiguration.java",
    "contents_url": "https://api.github.com/repos/DataBiosphere/terra-resource-buffer/contents/src/main/java/bio/terra/buffer/app/configuration/KubernetesConfiguration.java?ref=c319d27654cbd5910b978017c3e207dc57f221a8",
    "patch": "@@ -1,47 +0,0 @@\n-package bio.terra.buffer.app.configuration;\n-\n-import org.springframework.boot.context.properties.ConfigurationProperties;\n-import org.springframework.boot.context.properties.EnableConfigurationProperties;\n-import org.springframework.context.annotation.Configuration;\n-\n-/** Configurations for running Buffer Services in Kubernetes and support multi-instance Stairway. */\n-@Configuration\n-@EnableConfigurationProperties\n-@ConfigurationProperties(prefix = \"buffer.kubernetes\")\n-public class KubernetesConfiguration {\n-  // The pod that host the Buffer service app.\n-  private String podNameFilter;\n-\n-  // Name of the Kubernetes pods we are running in. We uses common library uses this to list all\n-  // pods in the deployment, then uses podNameFilter to find the pod that host the app.\n-  // e.g.m podName can gives us buffer-service, buffer-cloudsql-proxy, and we use podNameFilter to\n-  // find buffer-service.\n-  private String podName;\n-\n-  // Whether the app is running in Kubernetes.\n-  private boolean inKubernetes;\n-\n-  public String getPodName() {\n-    return podName;\n-  }\n-\n-  public void setPodName(String podName) {\n-    this.podName = podName;\n-  }\n-\n-  public String getPodNameFilter() {\n-    return podNameFilter;\n-  }\n-\n-  public void setPodNameFilter(String podNameFilter) {\n-    this.podNameFilter = podNameFilter;\n-  }\n-\n-  public boolean isInKubernetes() {\n-    return inKubernetes;\n-  }\n-\n-  public void setInKubernetes(boolean inKubernetes) {\n-    this.inKubernetes = inKubernetes;\n-  }\n-}"
  },
  {
    "sha": "7fc19496fa28db7f43d62b1ab112477605aa190c",
    "filename": "src/main/java/bio/terra/buffer/app/configuration/StairwayConfiguration.java",
    "status": "removed",
    "additions": 0,
    "deletions": 57,
    "changes": 57,
    "blob_url": "https://github.com/DataBiosphere/terra-resource-buffer/blob/c319d27654cbd5910b978017c3e207dc57f221a8/src/main/java/bio/terra/buffer/app/configuration/StairwayConfiguration.java",
    "raw_url": "https://github.com/DataBiosphere/terra-resource-buffer/raw/c319d27654cbd5910b978017c3e207dc57f221a8/src/main/java/bio/terra/buffer/app/configuration/StairwayConfiguration.java",
    "contents_url": "https://api.github.com/repos/DataBiosphere/terra-resource-buffer/contents/src/main/java/bio/terra/buffer/app/configuration/StairwayConfiguration.java?ref=c319d27654cbd5910b978017c3e207dc57f221a8",
    "patch": "@@ -1,57 +0,0 @@\n-package bio.terra.buffer.app.configuration;\n-\n-import java.time.Duration;\n-import org.springframework.boot.context.properties.ConfigurationProperties;\n-import org.springframework.boot.context.properties.EnableConfigurationProperties;\n-import org.springframework.context.annotation.Configuration;\n-\n-@Configuration\n-@EnableConfigurationProperties\n-@ConfigurationProperties(prefix = \"buffer.stairway\")\n-public class StairwayConfiguration {\n-  private boolean forceCleanStart;\n-  private boolean migrateUpgrade;\n-  private int maxParallelFlights;\n-  private Duration quietDownTimeout;\n-  private Duration terminateTimeout;\n-\n-  public boolean isForceCleanStart() {\n-    return forceCleanStart;\n-  }\n-\n-  public boolean isMigrateUpgrade() {\n-    return migrateUpgrade;\n-  }\n-\n-  public int getMaxParallelFlights() {\n-    return maxParallelFlights;\n-  }\n-\n-  public Duration getQuietDownTimeout() {\n-    return quietDownTimeout;\n-  }\n-\n-  public Duration getTerminateTimeout() {\n-    return terminateTimeout;\n-  }\n-\n-  public void setForceCleanStart(boolean forceCleanStart) {\n-    this.forceCleanStart = forceCleanStart;\n-  }\n-\n-  public void setMigrateUpgrade(boolean migrateUpgrade) {\n-    this.migrateUpgrade = migrateUpgrade;\n-  }\n-\n-  public void setMaxParallelFlights(int maxParallelFlights) {\n-    this.maxParallelFlights = maxParallelFlights;\n-  }\n-\n-  public void setQuietDownTimeout(Duration quietDownTimeout) {\n-    this.quietDownTimeout = quietDownTimeout;\n-  }\n-\n-  public void setTerminateTimeout(Duration terminateTimeout) {\n-    this.terminateTimeout = terminateTimeout;\n-  }\n-}"
  },
  {
    "sha": "88c22aeda5ba4ea8558dde0ab6f9e75804aba4f1",
    "filename": "src/main/java/bio/terra/buffer/app/configuration/StairwayJdbcConfiguration.java",
    "status": "removed",
    "additions": 0,
    "deletions": 10,
    "changes": 10,
    "blob_url": "https://github.com/DataBiosphere/terra-resource-buffer/blob/c319d27654cbd5910b978017c3e207dc57f221a8/src/main/java/bio/terra/buffer/app/configuration/StairwayJdbcConfiguration.java",
    "raw_url": "https://github.com/DataBiosphere/terra-resource-buffer/raw/c319d27654cbd5910b978017c3e207dc57f221a8/src/main/java/bio/terra/buffer/app/configuration/StairwayJdbcConfiguration.java",
    "contents_url": "https://api.github.com/repos/DataBiosphere/terra-resource-buffer/contents/src/main/java/bio/terra/buffer/app/configuration/StairwayJdbcConfiguration.java?ref=c319d27654cbd5910b978017c3e207dc57f221a8",
    "patch": "@@ -1,10 +0,0 @@\n-package bio.terra.buffer.app.configuration;\n-\n-import org.springframework.boot.context.properties.ConfigurationProperties;\n-import org.springframework.boot.context.properties.EnableConfigurationProperties;\n-import org.springframework.context.annotation.Configuration;\n-\n-@Configuration\n-@EnableConfigurationProperties\n-@ConfigurationProperties(prefix = \"buffer.stairway.db\")\n-public class StairwayJdbcConfiguration extends JdbcConfiguration {}"
  },
  {
    "sha": "513185012cbf6d5ce1093fc19ed09310c41d2048",
    "filename": "src/main/java/bio/terra/buffer/app/controller/BufferApiController.java",
    "status": "modified",
    "additions": 6,
    "deletions": 6,
    "changes": 12,
    "blob_url": "https://github.com/DataBiosphere/terra-resource-buffer/blob/48d3bf500381f2a063649681c1ad98ea7535268a/src/main/java/bio/terra/buffer/app/controller/BufferApiController.java",
    "raw_url": "https://github.com/DataBiosphere/terra-resource-buffer/raw/48d3bf500381f2a063649681c1ad98ea7535268a/src/main/java/bio/terra/buffer/app/controller/BufferApiController.java",
    "contents_url": "https://api.github.com/repos/DataBiosphere/terra-resource-buffer/contents/src/main/java/bio/terra/buffer/app/controller/BufferApiController.java?ref=48d3bf500381f2a063649681c1ad98ea7535268a",
    "patch": "@@ -2,15 +2,15 @@\n \n import static bio.terra.buffer.common.MetricsHelper.recordHandoutResourceRequest;\n \n-import bio.terra.buffer.app.configuration.BufferJdbcConfiguration;\n+import bio.terra.buffer.app.configuration.BufferJdbcThing;\n import bio.terra.buffer.common.PoolId;\n import bio.terra.buffer.common.RequestHandoutId;\n import bio.terra.buffer.generated.controller.BufferApi;\n import bio.terra.buffer.generated.model.HandoutRequestBody;\n import bio.terra.buffer.generated.model.PoolInfo;\n import bio.terra.buffer.generated.model.ResourceInfo;\n import bio.terra.buffer.service.pool.PoolService;\n-import bio.terra.buffer.service.stairway.StairwayComponent;\n+import bio.terra.common.stairway.StairwayLifecycleManager;\n import com.fasterxml.jackson.databind.ObjectMapper;\n import java.util.Optional;\n import javax.servlet.http.HttpServletRequest;\n@@ -23,16 +23,16 @@\n @Controller\n public class BufferApiController implements BufferApi {\n   private final NamedParameterJdbcTemplate jdbcTemplate;\n-  private final StairwayComponent stairwayComponent;\n+  private final StairwayLifecycleManager stairwayLifecycleManager;\n   private final PoolService poolService;\n \n   @Autowired\n   BufferApiController(\n-      BufferJdbcConfiguration jdbcConfiguration,\n-      StairwayComponent stairwayComponent,\n+      BufferJdbcThing jdbcConfiguration,\n+      StairwayLifecycleManager stairwayLifecycleManager,\n       PoolService poolService) {\n     this.jdbcTemplate = new NamedParameterJdbcTemplate(jdbcConfiguration.getDataSource());\n-    this.stairwayComponent = stairwayComponent;\n+    this.stairwayLifecycleManager = stairwayLifecycleManager;\n     this.poolService = poolService;\n   }\n "
  },
  {
    "sha": "7bd2632b03aadd0aa33c627b2ab7fa40799555b1",
    "filename": "src/main/java/bio/terra/buffer/app/controller/UnauthenticatedApiController.java",
    "status": "modified",
    "additions": 8,
    "deletions": 7,
    "changes": 15,
    "blob_url": "https://github.com/DataBiosphere/terra-resource-buffer/blob/48d3bf500381f2a063649681c1ad98ea7535268a/src/main/java/bio/terra/buffer/app/controller/UnauthenticatedApiController.java",
    "raw_url": "https://github.com/DataBiosphere/terra-resource-buffer/raw/48d3bf500381f2a063649681c1ad98ea7535268a/src/main/java/bio/terra/buffer/app/controller/UnauthenticatedApiController.java",
    "contents_url": "https://api.github.com/repos/DataBiosphere/terra-resource-buffer/contents/src/main/java/bio/terra/buffer/app/controller/UnauthenticatedApiController.java?ref=48d3bf500381f2a063649681c1ad98ea7535268a",
    "patch": "@@ -1,10 +1,10 @@\n package bio.terra.buffer.app.controller;\n \n-import bio.terra.buffer.app.configuration.BufferJdbcConfiguration;\n+import bio.terra.buffer.app.configuration.BufferJdbcThing;\n import bio.terra.buffer.generated.controller.UnauthenticatedApi;\n import bio.terra.buffer.generated.model.SystemStatus;\n import bio.terra.buffer.generated.model.SystemStatusSystems;\n-import bio.terra.buffer.service.stairway.StairwayComponent;\n+import bio.terra.common.stairway.StairwayLifecycleManager;\n import com.fasterxml.jackson.databind.ObjectMapper;\n import java.sql.Connection;\n import java.util.Optional;\n@@ -18,13 +18,14 @@\n @Controller\n public class UnauthenticatedApiController implements UnauthenticatedApi {\n   private final NamedParameterJdbcTemplate jdbcTemplate;\n-  private final StairwayComponent stairwayComponent;\n+  private final StairwayLifecycleManager stairwayLifecycleManager;\n \n   @Autowired\n   UnauthenticatedApiController(\n-      BufferJdbcConfiguration jdbcConfiguration, StairwayComponent stairwayComponent) {\n+      BufferJdbcThing jdbcConfiguration,\n+      StairwayLifecycleManager StairwayLifecycleManager) {\n     this.jdbcTemplate = new NamedParameterJdbcTemplate(jdbcConfiguration.getDataSource());\n-    this.stairwayComponent = stairwayComponent;\n+    this.stairwayLifecycleManager = StairwayLifecycleManager;\n   }\n \n   @Override\n@@ -35,8 +36,8 @@\n         jdbcTemplate.getJdbcTemplate().execute((Connection connection) -> connection.isValid(0));\n     systemStatus.putSystemsItem(\"postgres\", new SystemStatusSystems().ok(postgresOk));\n \n-    StairwayComponent.Status stairwayStatus = stairwayComponent.getStatus();\n-    final boolean stairwayOk = stairwayStatus.equals(StairwayComponent.Status.OK);\n+    StairwayLifecycleManager.Status stairwayStatus = stairwayLifecycleManager.getStatus();\n+    final boolean stairwayOk = stairwayStatus.equals(StairwayLifecycleManager.Status.OK);\n     systemStatus.putSystemsItem(\n         \"stairway\",\n         new SystemStatusSystems().ok(stairwayOk).addMessagesItem(stairwayStatus.toString()));"
  },
  {
    "sha": "5b0fcce678c5bd67c7500b97f5d87cf33a9ef3b6",
    "filename": "src/main/java/bio/terra/buffer/service/kubernetes/KubernetesComponent.java",
    "status": "removed",
    "additions": 0,
    "deletions": 32,
    "changes": 32,
    "blob_url": "https://github.com/DataBiosphere/terra-resource-buffer/blob/c319d27654cbd5910b978017c3e207dc57f221a8/src/main/java/bio/terra/buffer/service/kubernetes/KubernetesComponent.java",
    "raw_url": "https://github.com/DataBiosphere/terra-resource-buffer/raw/c319d27654cbd5910b978017c3e207dc57f221a8/src/main/java/bio/terra/buffer/service/kubernetes/KubernetesComponent.java",
    "contents_url": "https://api.github.com/repos/DataBiosphere/terra-resource-buffer/contents/src/main/java/bio/terra/buffer/service/kubernetes/KubernetesComponent.java?ref=c319d27654cbd5910b978017c3e207dc57f221a8",
    "patch": "@@ -1,32 +0,0 @@\n-package bio.terra.buffer.service.kubernetes;\n-\n-import bio.terra.buffer.app.configuration.KubernetesConfiguration;\n-import bio.terra.common.kubernetes.KubeService;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.stereotype.Component;\n-\n-/** A Spring Component for exposing an initialized {@link KubeService}. */\n-@Component\n-public class KubernetesComponent {\n-  private final KubeService kubeService;\n-  private final KubernetesConfiguration kubernetesConfiguration;\n-\n-  @Autowired\n-  public KubernetesComponent(KubernetesConfiguration kubernetesConfiguration) {\n-    this.kubernetesConfiguration = kubernetesConfiguration;\n-    this.kubeService =\n-        new KubeService(\n-            kubernetesConfiguration.getPodName(),\n-            kubernetesConfiguration.isInKubernetes(),\n-            kubernetesConfiguration.getPodNameFilter());\n-  }\n-\n-  public KubeService get() {\n-    return kubeService;\n-  }\n-\n-  /** Returns {@link true} if in Kubernetes. */\n-  public boolean isInKubernetes() {\n-    return kubernetesConfiguration.isInKubernetes();\n-  }\n-}"
  },
  {
    "sha": "ea73af173da48022a2e24a312aeff21e3807e3a2",
    "filename": "src/main/java/bio/terra/buffer/service/resource/FlightManager.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/DataBiosphere/terra-resource-buffer/blob/48d3bf500381f2a063649681c1ad98ea7535268a/src/main/java/bio/terra/buffer/service/resource/FlightManager.java",
    "raw_url": "https://github.com/DataBiosphere/terra-resource-buffer/raw/48d3bf500381f2a063649681c1ad98ea7535268a/src/main/java/bio/terra/buffer/service/resource/FlightManager.java",
    "contents_url": "https://api.github.com/repos/DataBiosphere/terra-resource-buffer/contents/src/main/java/bio/terra/buffer/service/resource/FlightManager.java?ref=48d3bf500381f2a063649681c1ad98ea7535268a",
    "patch": "@@ -6,7 +6,7 @@\n import bio.terra.buffer.common.ResourceState;\n import bio.terra.buffer.common.ResourceType;\n import bio.terra.buffer.db.BufferDao;\n-import bio.terra.buffer.service.stairway.StairwayComponent;\n+import bio.terra.common.stairway.StairwayLifecycleManager;\n import bio.terra.stairway.Stairway;\n import bio.terra.stairway.exception.StairwayException;\n import java.time.Instant;\n@@ -33,11 +33,11 @@\n   public FlightManager(\n       BufferDao bufferDao,\n       FlightSubmissionFactory flightSubmissionFactory,\n-      StairwayComponent stairwayComponent,\n+      StairwayLifecycleManager stairwayLifecycleManager,\n       TransactionTemplate transactionTemplate) {\n     this.bufferDao = bufferDao;\n     this.flightSubmissionFactory = flightSubmissionFactory;\n-    this.stairway = stairwayComponent.get();\n+    this.stairway = stairwayLifecycleManager.get();\n     this.transactionTemplate = transactionTemplate;\n   }\n "
  },
  {
    "sha": "47096b6053ed6a6591299d0e16c48fd241c1f054",
    "filename": "src/main/java/bio/terra/buffer/service/resource/FlightScheduler.java",
    "status": "modified",
    "additions": 6,
    "deletions": 6,
    "changes": 12,
    "blob_url": "https://github.com/DataBiosphere/terra-resource-buffer/blob/48d3bf500381f2a063649681c1ad98ea7535268a/src/main/java/bio/terra/buffer/service/resource/FlightScheduler.java",
    "raw_url": "https://github.com/DataBiosphere/terra-resource-buffer/raw/48d3bf500381f2a063649681c1ad98ea7535268a/src/main/java/bio/terra/buffer/service/resource/FlightScheduler.java",
    "contents_url": "https://api.github.com/repos/DataBiosphere/terra-resource-buffer/contents/src/main/java/bio/terra/buffer/service/resource/FlightScheduler.java?ref=48d3bf500381f2a063649681c1ad98ea7535268a",
    "patch": "@@ -5,7 +5,7 @@\n import bio.terra.buffer.app.configuration.PrimaryConfiguration;\n import bio.terra.buffer.common.*;\n import bio.terra.buffer.db.*;\n-import bio.terra.buffer.service.stairway.StairwayComponent;\n+import bio.terra.common.stairway.StairwayLifecycleManager;\n import com.google.common.base.Preconditions;\n import java.util.List;\n import java.util.concurrent.ScheduledExecutorService;\n@@ -29,29 +29,29 @@\n \n   private final FlightManager flightManager;\n   private final PrimaryConfiguration primaryConfiguration;\n-  private final StairwayComponent stairwayComponent;\n+  private final StairwayLifecycleManager stairwayLifecycleManager;\n   private final BufferDao bufferDao;\n \n   @Autowired\n   public FlightScheduler(\n       FlightManager flightManager,\n       PrimaryConfiguration primaryConfiguration,\n-      StairwayComponent stairwayComponent,\n+      StairwayLifecycleManager stairwayLifecycleManager,\n       BufferDao bufferDao) {\n     this.flightManager = flightManager;\n     this.primaryConfiguration = primaryConfiguration;\n-    this.stairwayComponent = stairwayComponent;\n+    this.stairwayLifecycleManager = stairwayLifecycleManager;\n     this.bufferDao = bufferDao;\n   }\n \n   /**\n    * Initialize the FlightScheduler, kicking off its tasks.\n    *\n-   * <p>The StairwayComponent must be ready before calling this function.\n+   * <p>The StairwayLifecycleManager must be ready before calling this function.\n    */\n   public void initialize() {\n     Preconditions.checkState(\n-        stairwayComponent.getStatus().equals(StairwayComponent.Status.OK),\n+        stairwayLifecycleManager.getStatus().equals(StairwayLifecycleManager.Status.OK),\n         \"Stairway must be ready before FlightScheduler can be initialized.\");\n     if (primaryConfiguration.isSchedulerEnabled()) {\n       logger.info(\"Buffer scheduling enabled.\");"
  },
  {
    "sha": "af7fa9d3b2b515270da45a6d8748031db23348ee",
    "filename": "src/main/java/bio/terra/buffer/service/stairway/StairwayComponent.java",
    "status": "removed",
    "additions": 0,
    "deletions": 141,
    "changes": 141,
    "blob_url": "https://github.com/DataBiosphere/terra-resource-buffer/blob/c319d27654cbd5910b978017c3e207dc57f221a8/src/main/java/bio/terra/buffer/service/stairway/StairwayComponent.java",
    "raw_url": "https://github.com/DataBiosphere/terra-resource-buffer/raw/c319d27654cbd5910b978017c3e207dc57f221a8/src/main/java/bio/terra/buffer/service/stairway/StairwayComponent.java",
    "contents_url": "https://api.github.com/repos/DataBiosphere/terra-resource-buffer/contents/src/main/java/bio/terra/buffer/service/stairway/StairwayComponent.java?ref=c319d27654cbd5910b978017c3e207dc57f221a8",
    "patch": "@@ -1,141 +0,0 @@\n-package bio.terra.buffer.service.stairway;\n-\n-import static com.google.cloud.ServiceOptions.getDefaultProjectId;\n-\n-import bio.terra.buffer.app.configuration.StairwayConfiguration;\n-import bio.terra.buffer.app.configuration.StairwayJdbcConfiguration;\n-import bio.terra.buffer.service.kubernetes.KubernetesComponent;\n-import bio.terra.common.kubernetes.KubeService;\n-import bio.terra.common.stairway.TracingHook;\n-import bio.terra.stairway.Stairway;\n-import bio.terra.stairway.exception.StairwayException;\n-import bio.terra.stairway.exception.StairwayExecutionException;\n-import java.util.LinkedList;\n-import java.util.List;\n-import java.util.Set;\n-import java.util.concurrent.TimeUnit;\n-import java.util.concurrent.atomic.AtomicReference;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.context.ApplicationContext;\n-import org.springframework.stereotype.Component;\n-\n-/** A Spring Component for exposing an initialized {@link Stairway}. */\n-@Component\n-public class StairwayComponent {\n-  private final Logger logger = LoggerFactory.getLogger(StairwayComponent.class);\n-\n-  private final StairwayConfiguration stairwayConfiguration;\n-  private final StairwayJdbcConfiguration stairwayJdbcConfiguration;\n-  private final Stairway stairway;\n-  private final KubeService kubeService;\n-\n-  public enum Status {\n-    INITIALIZING,\n-    OK,\n-    ERROR,\n-    SHUTDOWN,\n-  }\n-\n-  private final AtomicReference<Status> status = new AtomicReference<>(Status.INITIALIZING);\n-\n-  @Autowired\n-  public StairwayComponent(\n-      ApplicationContext applicationContext,\n-      StairwayConfiguration stairwayConfiguration,\n-      StairwayJdbcConfiguration stairwayJdbcConfiguration,\n-      KubernetesComponent kubernetesComponent) {\n-    this.stairwayConfiguration = stairwayConfiguration;\n-    this.stairwayJdbcConfiguration = stairwayJdbcConfiguration;\n-    this.kubeService = kubernetesComponent.get();\n-    String stairwayClusterName = kubeService.getNamespace() + \"buffer--stairwaycluster\";\n-    logger.info(\n-        \"Creating Stairway: name: [{}]  cluster name: [{}]\",\n-        kubeService.getPodName(),\n-        stairwayClusterName);\n-\n-    // TODO(PF-314): Cleanup old flightlogs.\n-    // TODO(PF-456):\n-    Stairway.Builder builder =\n-        Stairway.newBuilder()\n-            .maxParallelFlights(stairwayConfiguration.getMaxParallelFlights())\n-            .applicationContext(applicationContext)\n-            .keepFlightLog(true)\n-            .stairwayName(kubeService.getPodName())\n-            .stairwayClusterName(stairwayClusterName)\n-            .workQueueProjectId(getDefaultProjectId())\n-            .enableWorkQueue(kubernetesComponent.isInKubernetes())\n-            .stairwayHook(new TracingHook());\n-    try {\n-      stairway = builder.build();\n-    } catch (StairwayExecutionException e) {\n-      throw new IllegalArgumentException(\"Failed to build Stairway.\", e);\n-    }\n-  }\n-\n-  public void initialize() {\n-    logger.info(\"Initializing Stairway...\");\n-    logger.info(\"stairway username {}\", stairwayJdbcConfiguration.getUsername());\n-    try {\n-      // TODO(PF-161): Determine if Stairway and buffer database migrations need to be coordinated.\n-      List<String> recordedStairways =\n-          stairway.initialize(\n-              stairwayJdbcConfiguration.getDataSource(),\n-              stairwayConfiguration.isForceCleanStart(),\n-              stairwayConfiguration.isMigrateUpgrade());\n-\n-      kubeService.startPodListener(stairway);\n-\n-      // Lookup all of the stairway instances we know about\n-      Set<String> existingStairways = kubeService.getPodSet();\n-      List<String> obsoleteStairways = new LinkedList<>();\n-\n-      // Any instances that stairway knows about, but we cannot see are obsolete.\n-      for (String recordedStairway : recordedStairways) {\n-        if (!existingStairways.contains(recordedStairway)) {\n-          obsoleteStairways.add(recordedStairway);\n-        }\n-      }\n-\n-      // Add our own pod name to the list of obsolete stairways. Sometimes Kubernetes will\n-      // restart the container without redeploying the pod. In that case we must ask\n-      // Stairway to recover the flights we were working on before being restarted.\n-      obsoleteStairways.add(kubeService.getPodName());\n-\n-      logger.info(\n-          \"existingStairways: {}. obsoleteStairways: {}\", existingStairways, obsoleteStairways);\n-      // Recover and start stairway - step 3 of the stairway startup sequence\n-      stairway.recoverAndStart(obsoleteStairways);\n-    } catch (StairwayException | InterruptedException e) {\n-      status.compareAndSet(Status.INITIALIZING, Status.ERROR);\n-      throw new RuntimeException(\"Error starting Stairway\", e);\n-    }\n-    status.compareAndSet(Status.INITIALIZING, Status.OK);\n-  }\n-\n-  /** Stop accepting jobs and shutdown stairway. Returns true if successful. */\n-  public boolean shutdown() throws InterruptedException {\n-    status.set(Status.SHUTDOWN);\n-    logger.info(\"Request Stairway shutdown\");\n-    boolean shutdownSuccess =\n-        stairway.quietDown(\n-            stairwayConfiguration.getQuietDownTimeout().toMillis(), TimeUnit.MILLISECONDS);\n-    if (!shutdownSuccess) {\n-      logger.info(\"Request Stairway terminate\");\n-      shutdownSuccess =\n-          stairway.terminate(\n-              stairwayConfiguration.getTerminateTimeout().toMillis(), TimeUnit.MILLISECONDS);\n-    }\n-    logger.info(\"Finished Stairway shutdown?: {}\", shutdownSuccess);\n-    return shutdownSuccess;\n-  }\n-\n-  public Stairway get() {\n-    return stairway;\n-  }\n-\n-  public StairwayComponent.Status getStatus() {\n-    return status.get();\n-  }\n-}"
  },
  {
    "sha": "fe7aa5be12fec88355a2929079240277c01829a4",
    "filename": "src/main/resources/application.yml",
    "status": "modified",
    "additions": 14,
    "deletions": 12,
    "changes": 26,
    "blob_url": "https://github.com/DataBiosphere/terra-resource-buffer/blob/48d3bf500381f2a063649681c1ad98ea7535268a/src/main/resources/application.yml",
    "raw_url": "https://github.com/DataBiosphere/terra-resource-buffer/raw/48d3bf500381f2a063649681c1ad98ea7535268a/src/main/resources/application.yml",
    "contents_url": "https://api.github.com/repos/DataBiosphere/terra-resource-buffer/contents/src/main/resources/application.yml?ref=48d3bf500381f2a063649681c1ad98ea7535268a",
    "patch": "@@ -14,18 +14,20 @@ buffer:\n     # Whether to update pool when config changes during server startup.\n     # Might be useful to avoid potential backward compatibility caused by config change and make tests easier.\n     update-pool-on-start: true\n-  stairway:\n-    db:\n-      password:\n-      uri: jdbc:postgresql://127.0.0.1:5432/${BUFFER_STAIRWAY_DATABASE_NAME}\n-      username:\n-    force-clean-start: false\n-    # This decides how soon we can fill a pool. Example: if total pools size is 3000 and each flight takes 10 minutes.\n-    # having 500 here means it takes 3000 resources / 500 threads * 10minute = 60 minutes to create this pool\n-    max-parallel-flights: 500\n-    migrate-upgrade: true\n-    quiet-down-timeout: 20s\n-    terminate-timeout: 5s\n+terra:\n+  common:\n+    stairway:\n+      db:\n+        password:\n+        uri: jdbc:postgresql://127.0.0.1:5432/${BUFFER_STAIRWAY_DATABASE_NAME}\n+        username:\n+      force-clean-start: false\n+      # This decides how soon we can fill a pool. Example: if total pools size is 3000 and each flight takes 10 minutes.\n+      # having 500 here means it takes 3000 resources / 500 threads * 10minute = 60 minutes to create this pool\n+      max-parallel-flights: 500\n+      migrate-upgrade: true\n+      quiet-down-timeout: 20s\n+      terminate-timeout: 5s\n \n server:\n   compression:"
  },
  {
    "sha": "b689402e3fa5dc12d3d5f98b3c5b1b92be3ac1ba",
    "filename": "src/test/java/bio/terra/buffer/common/PoolIdTest.java",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/DataBiosphere/terra-resource-buffer/blob/48d3bf500381f2a063649681c1ad98ea7535268a/src/test/java/bio/terra/buffer/common/PoolIdTest.java",
    "raw_url": "https://github.com/DataBiosphere/terra-resource-buffer/raw/48d3bf500381f2a063649681c1ad98ea7535268a/src/test/java/bio/terra/buffer/common/PoolIdTest.java",
    "contents_url": "https://api.github.com/repos/DataBiosphere/terra-resource-buffer/contents/src/test/java/bio/terra/buffer/common/PoolIdTest.java?ref=48d3bf500381f2a063649681c1ad98ea7535268a",
    "patch": "@@ -10,6 +10,7 @@\n   public void storeAndRetrieveFromFlightMap() throws Exception {\n     PoolId id = PoolId.create(\"poolId\");\n     FlightMap flightMap = new FlightMap();\n+    flightMap.put(\"key\", 123);\n     id.store(flightMap);\n     assertEquals(id, PoolId.retrieve(flightMap));\n   }"
  },
  {
    "sha": "2c9a8a6adb5460b1193961d25225af2e1a8a27bc",
    "filename": "src/test/java/bio/terra/buffer/db/BufferDaoTest.java",
    "status": "modified",
    "additions": 3,
    "deletions": 2,
    "changes": 5,
    "blob_url": "https://github.com/DataBiosphere/terra-resource-buffer/blob/48d3bf500381f2a063649681c1ad98ea7535268a/src/test/java/bio/terra/buffer/db/BufferDaoTest.java",
    "raw_url": "https://github.com/DataBiosphere/terra-resource-buffer/raw/48d3bf500381f2a063649681c1ad98ea7535268a/src/test/java/bio/terra/buffer/db/BufferDaoTest.java",
    "contents_url": "https://api.github.com/repos/DataBiosphere/terra-resource-buffer/contents/src/test/java/bio/terra/buffer/db/BufferDaoTest.java?ref=48d3bf500381f2a063649681c1ad98ea7535268a",
    "patch": "@@ -3,7 +3,7 @@\n import static org.hamcrest.MatcherAssert.assertThat;\n import static org.junit.jupiter.api.Assertions.*;\n \n-import bio.terra.buffer.app.configuration.BufferJdbcConfiguration;\n+import bio.terra.buffer.app.configuration.BufferJdbcThing;\n import bio.terra.buffer.common.*;\n import bio.terra.buffer.common.PoolStatus;\n import bio.terra.buffer.generated.model.*;\n@@ -22,7 +22,8 @@\n @AutoConfigureMockMvc\n @DirtiesContext(classMode = DirtiesContext.ClassMode.AFTER_EACH_TEST_METHOD)\n public class BufferDaoTest extends BaseUnitTest {\n-  @Autowired BufferJdbcConfiguration jdbcConfiguration;\n+  @Autowired\n+  BufferJdbcThing jdbcConfiguration;\n   @Autowired BufferDao bufferDao;\n \n   private NamedParameterJdbcTemplate jdbcTemplate;"
  },
  {
    "sha": "de4c2d5f92dec5bd7672dad060b75b2cb48d43cc",
    "filename": "src/test/java/bio/terra/buffer/integration/CreateProjectFlightIntegrationTest.java",
    "status": "modified",
    "additions": 26,
    "deletions": 19,
    "changes": 45,
    "blob_url": "https://github.com/DataBiosphere/terra-resource-buffer/blob/48d3bf500381f2a063649681c1ad98ea7535268a/src/test/java/bio/terra/buffer/integration/CreateProjectFlightIntegrationTest.java",
    "raw_url": "https://github.com/DataBiosphere/terra-resource-buffer/raw/48d3bf500381f2a063649681c1ad98ea7535268a/src/test/java/bio/terra/buffer/integration/CreateProjectFlightIntegrationTest.java",
    "contents_url": "https://api.github.com/repos/DataBiosphere/terra-resource-buffer/contents/src/test/java/bio/terra/buffer/integration/CreateProjectFlightIntegrationTest.java?ref=48d3bf500381f2a063649681c1ad98ea7535268a",
    "patch": "@@ -58,7 +58,6 @@\n import bio.terra.buffer.service.resource.flight.LatchStep;\n import bio.terra.buffer.service.resource.flight.UndoCreatingDbEntityStep;\n import bio.terra.buffer.service.resource.projectid.GcpProjectIdGenerator;\n-import bio.terra.buffer.service.stairway.StairwayComponent;\n import bio.terra.cloudres.common.ClientConfig;\n import bio.terra.cloudres.google.billing.CloudBillingClientCow;\n import bio.terra.cloudres.google.cloudresourcemanager.CloudResourceManagerCow;\n@@ -67,6 +66,7 @@\n import bio.terra.cloudres.google.iam.IamCow;\n import bio.terra.cloudres.google.serviceusage.ServiceUsageCow;\n import bio.terra.cloudres.google.storage.StorageCow;\n+import bio.terra.common.stairway.StairwayLifecycleManager;\n import bio.terra.stairway.Flight;\n import bio.terra.stairway.FlightContext;\n import bio.terra.stairway.FlightMap;\n@@ -107,7 +107,7 @@\n @DirtiesContext(classMode = DirtiesContext.ClassMode.AFTER_EACH_TEST_METHOD)\n public class CreateProjectFlightIntegrationTest extends BaseIntegrationTest {\n   @Autowired BufferDao bufferDao;\n-  @Autowired StairwayComponent stairwayComponent;\n+  @Autowired StairwayLifecycleManager stairwayLifecycleManager;\n   @Autowired CloudComputeCow computeCow;\n   @Autowired CloudResourceManagerCow rmCow;\n   @Autowired CloudBillingClientCow billingCow;\n@@ -127,12 +127,13 @@\n   public void testCreateGoogleProject_basicCreation() throws Exception {\n     FlightManager manager =\n         new FlightManager(\n-            bufferDao, flightSubmissionFactoryImpl, stairwayComponent, transactionTemplate);\n+            bufferDao, flightSubmissionFactoryImpl, stairwayLifecycleManager, transactionTemplate);\n     Pool pool = preparePool(bufferDao, newBasicGcpConfig());\n \n     String flightId = manager.submitCreationFlight(pool).get();\n     ResourceId resourceId =\n-        extractResourceIdFromFlightState(blockUntilFlightComplete(stairwayComponent, flightId));\n+        extractResourceIdFromFlightState(\n+            blockUntilFlightComplete(stairwayLifecycleManager, flightId));\n     Project project = assertProjectExists(resourceId);\n     assertBillingIs(project, pool.resourceConfig().getGcpProjectConfig().getBillingAccount());\n     assertEnableApisContains(project, pool.resourceConfig().getGcpProjectConfig().getEnabledApis());\n@@ -151,12 +152,13 @@ public void testCreateGoogleProject_witIamBindings() throws Exception {\n     // Basic GCP project with IAM Bindings\n     FlightManager manager =\n         new FlightManager(\n-            bufferDao, flightSubmissionFactoryImpl, stairwayComponent, transactionTemplate);\n+            bufferDao, flightSubmissionFactoryImpl, stairwayLifecycleManager, transactionTemplate);\n     Pool pool = preparePool(bufferDao, newBasicGcpConfig().iamBindings(IAM_BINDINGS));\n \n     String flightId = manager.submitCreationFlight(pool).get();\n     ResourceId resourceId =\n-        extractResourceIdFromFlightState(blockUntilFlightComplete(stairwayComponent, flightId));\n+        extractResourceIdFromFlightState(\n+            blockUntilFlightComplete(stairwayLifecycleManager, flightId));\n     Project project = assertProjectExists(resourceId);\n     assertIamBindingsContains(project, IAM_BINDINGS);\n   }\n@@ -165,7 +167,7 @@ public void testCreateGoogleProject_witIamBindings() throws Exception {\n   public void testCreateGoogleProject_enableNetworkMonitoring() throws Exception {\n     FlightManager manager =\n         new FlightManager(\n-            bufferDao, flightSubmissionFactoryImpl, stairwayComponent, transactionTemplate);\n+            bufferDao, flightSubmissionFactoryImpl, stairwayLifecycleManager, transactionTemplate);\n     Pool pool =\n         preparePool(\n             bufferDao,\n@@ -175,7 +177,8 @@ public void testCreateGoogleProject_enableNetworkMonitoring() throws Exception {\n \n     String flightId = manager.submitCreationFlight(pool).get();\n     ResourceId resourceId =\n-        extractResourceIdFromFlightState(blockUntilFlightComplete(stairwayComponent, flightId));\n+        extractResourceIdFromFlightState(\n+            blockUntilFlightComplete(stairwayLifecycleManager, flightId));\n     Project project = assertProjectExists(resourceId);\n     assertNetworkExists(project);\n     assertSubnetsExist(project, NetworkMonitoring.ENABLED);\n@@ -191,13 +194,14 @@ public void testCreateGoogleProject_multipleSteps() throws Exception {\n         new FlightManager(\n             bufferDao,\n             new StubSubmissionFlightFactory(MultiInstanceStepFlight.class),\n-            stairwayComponent,\n+            stairwayLifecycleManager,\n             transactionTemplate);\n     Pool pool = preparePool(bufferDao, newFullGcpConfig());\n \n     String flightId = manager.submitCreationFlight(pool).get();\n     ResourceId resourceId =\n-        extractResourceIdFromFlightState(blockUntilFlightComplete(stairwayComponent, flightId));\n+        extractResourceIdFromFlightState(\n+            blockUntilFlightComplete(stairwayLifecycleManager, flightId));\n     Project project = assertProjectExists(resourceId);\n     assertIamBindingsContains(project, IAM_BINDINGS);\n     assertNetworkExists(project);\n@@ -215,7 +219,7 @@ public void testCreateGoogleProject_errorDuringProjectCreation() throws Exceptio\n         new FlightManager(\n             bufferDao,\n             new StubSubmissionFlightFactory(ErrorCreateProjectFlight.class),\n-            stairwayComponent,\n+            stairwayLifecycleManager,\n             transactionTemplate);\n     Pool pool = preparePool(bufferDao, newBasicGcpConfig());\n \n@@ -225,11 +229,12 @@ public void testCreateGoogleProject_errorDuringProjectCreation() throws Exceptio\n         pollUntilResourcesMatch(bufferDao, pool.id(), ResourceState.CREATING, 1).get(0);\n \n     LatchStep.releaseLatch();\n-    extractResourceIdFromFlightState(blockUntilFlightComplete(stairwayComponent, flightId));\n+    extractResourceIdFromFlightState(blockUntilFlightComplete(stairwayLifecycleManager, flightId));\n     // Resource is deleted.\n     assertFalse(bufferDao.retrieveResource(resource.id()).isPresent());\n     assertEquals(\n-        FlightStatus.ERROR, stairwayComponent.get().getFlightState(flightId).getFlightStatus());\n+        FlightStatus.ERROR,\n+        stairwayLifecycleManager.get().getFlightState(flightId).getFlightStatus());\n   }\n \n   @Test\n@@ -239,12 +244,12 @@ public void errorCreateProject_noRollbackAfterResourceReady() throws Exception {\n         new FlightManager(\n             bufferDao,\n             new StubSubmissionFlightFactory(ErrorAfterCreateResourceFlight.class),\n-            stairwayComponent,\n+            stairwayLifecycleManager,\n             transactionTemplate);\n \n     Pool pool = preparePool(bufferDao, newBasicGcpConfig());\n     String flightId = manager.submitCreationFlight(pool).get();\n-    extractResourceIdFromFlightState(blockUntilFlightComplete(stairwayComponent, flightId));\n+    extractResourceIdFromFlightState(blockUntilFlightComplete(stairwayLifecycleManager, flightId));\n \n     Resource resource =\n         bufferDao.retrieveResourcesRandomly(pool.id(), ResourceState.READY, 1).get(0);\n@@ -256,7 +261,8 @@ public void errorCreateProject_noRollbackAfterResourceReady() throws Exception {\n             .execute()\n             .getLifecycleState());\n     assertEquals(\n-        FlightStatus.ERROR, stairwayComponent.get().getFlightState(flightId).getFlightStatus());\n+        FlightStatus.ERROR,\n+        stairwayLifecycleManager.get().getFlightState(flightId).getFlightStatus());\n   }\n \n   @Test\n@@ -289,7 +295,7 @@ public void testCreateGoogleProject_errorWhenResourceStateChange() throws Except\n         new FlightManager(\n             bufferDao,\n             new StubSubmissionFlightFactory(LatchBeforeAssertResourceStep.class),\n-            stairwayComponent,\n+            stairwayLifecycleManager,\n             transactionTemplate);\n     Pool pool = preparePool(bufferDao, newBasicGcpConfig());\n \n@@ -303,11 +309,12 @@ public void testCreateGoogleProject_errorWhenResourceStateChange() throws Except\n \n     // Release the latch, and resume the flight, assert flight failed.\n     LatchStep.releaseLatch();\n-    extractResourceIdFromFlightState(blockUntilFlightComplete(stairwayComponent, flightId));\n+    extractResourceIdFromFlightState(blockUntilFlightComplete(stairwayLifecycleManager, flightId));\n     // Resource is deleted.\n     assertFalse(bufferDao.retrieveResource(resource.id()).isPresent());\n     assertEquals(\n-        FlightStatus.ERROR, stairwayComponent.get().getFlightState(flightId).getFlightStatus());\n+        FlightStatus.ERROR,\n+        stairwayLifecycleManager.get().getFlightState(flightId).getFlightStatus());\n   }\n \n   /** A {@link Flight} that will fail to create Google Project. */"
  },
  {
    "sha": "0132173c07265390166deac9a6f2f9d5c74a77ba",
    "filename": "src/test/java/bio/terra/buffer/integration/DeleteProjectFlightIntegrationTest.java",
    "status": "modified",
    "additions": 14,
    "deletions": 13,
    "changes": 27,
    "blob_url": "https://github.com/DataBiosphere/terra-resource-buffer/blob/48d3bf500381f2a063649681c1ad98ea7535268a/src/test/java/bio/terra/buffer/integration/DeleteProjectFlightIntegrationTest.java",
    "raw_url": "https://github.com/DataBiosphere/terra-resource-buffer/raw/48d3bf500381f2a063649681c1ad98ea7535268a/src/test/java/bio/terra/buffer/integration/DeleteProjectFlightIntegrationTest.java",
    "contents_url": "https://api.github.com/repos/DataBiosphere/terra-resource-buffer/contents/src/test/java/bio/terra/buffer/integration/DeleteProjectFlightIntegrationTest.java?ref=48d3bf500381f2a063649681c1ad98ea7535268a",
    "patch": "@@ -23,8 +23,8 @@\n import bio.terra.buffer.service.resource.flight.ErrorStep;\n import bio.terra.buffer.service.resource.flight.GoogleProjectDeletionFlight;\n import bio.terra.buffer.service.resource.flight.LatchStep;\n-import bio.terra.buffer.service.stairway.StairwayComponent;\n import bio.terra.cloudres.google.cloudresourcemanager.CloudResourceManagerCow;\n+import bio.terra.common.stairway.StairwayLifecycleManager;\n import bio.terra.stairway.Flight;\n import bio.terra.stairway.FlightMap;\n import bio.terra.stairway.FlightStatus;\n@@ -43,7 +43,7 @@\n @DirtiesContext(classMode = DirtiesContext.ClassMode.AFTER_EACH_TEST_METHOD)\n public class DeleteProjectFlightIntegrationTest extends BaseIntegrationTest {\n   @Autowired BufferDao bufferDao;\n-  @Autowired StairwayComponent stairwayComponent;\n+  @Autowired StairwayLifecycleManager stairwayLifecycleManager;\n   @Autowired CloudResourceManagerCow rmCow;\n   @Autowired FlightSubmissionFactoryImpl flightSubmissionFactoryImpl;\n   @Autowired TransactionTemplate transactionTemplate;\n@@ -52,20 +52,20 @@\n   public void testDeleteGoogleProject_success() throws Exception {\n     FlightManager manager =\n         new FlightManager(\n-            bufferDao, flightSubmissionFactoryImpl, stairwayComponent, transactionTemplate);\n+            bufferDao, flightSubmissionFactoryImpl, stairwayLifecycleManager, transactionTemplate);\n     Pool pool = preparePool(bufferDao, newFullGcpConfig());\n \n     String createFlightId = manager.submitCreationFlight(pool).get();\n     ResourceId resourceId =\n         extractResourceIdFromFlightState(\n-            blockUntilFlightComplete(stairwayComponent, createFlightId));\n+            blockUntilFlightComplete(stairwayLifecycleManager, createFlightId));\n     Project project = assertProjectExists(resourceId);\n     Resource resource =\n         bufferDao.retrieveResourcesRandomly(pool.id(), ResourceState.READY, 1).get(0);\n \n     String deleteFlightId =\n         manager.submitDeletionFlight(resource, ResourceType.GOOGLE_PROJECT).get();\n-    blockUntilFlightComplete(stairwayComponent, deleteFlightId);\n+    blockUntilFlightComplete(stairwayLifecycleManager, deleteFlightId);\n \n     assertProjectDeleting(project.getProjectId());\n   }\n@@ -74,13 +74,13 @@ public void testDeleteGoogleProject_success() throws Exception {\n   public void testDeleteGoogleProject_fatalIfHasError() throws Exception {\n     FlightManager manager =\n         new FlightManager(\n-            bufferDao, flightSubmissionFactoryImpl, stairwayComponent, transactionTemplate);\n+            bufferDao, flightSubmissionFactoryImpl, stairwayLifecycleManager, transactionTemplate);\n     Pool pool = preparePool(bufferDao, newBasicGcpConfig());\n \n     String createFlightId = manager.submitCreationFlight(pool).get();\n     ResourceId resourceId =\n         extractResourceIdFromFlightState(\n-            blockUntilFlightComplete(stairwayComponent, createFlightId));\n+            blockUntilFlightComplete(stairwayLifecycleManager, createFlightId));\n     Resource resource = bufferDao.retrieveResource(resourceId).get();\n \n     // An errors occurs after resource deleted. Expect project is deleted, but we resource state is\n@@ -89,14 +89,14 @@ public void testDeleteGoogleProject_fatalIfHasError() throws Exception {\n         new FlightManager(\n             bufferDao,\n             new StubSubmissionFlightFactory(ErrorAfterDeleteResourceFlight.class),\n-            stairwayComponent,\n+            stairwayLifecycleManager,\n             transactionTemplate);\n     String deleteFlightId =\n         errorManager.submitDeletionFlight(resource, ResourceType.GOOGLE_PROJECT).get();\n-    blockUntilFlightComplete(stairwayComponent, deleteFlightId);\n+    blockUntilFlightComplete(stairwayLifecycleManager, deleteFlightId);\n     assertEquals(\n         FlightStatus.FATAL,\n-        stairwayComponent.get().getFlightState(deleteFlightId).getFlightStatus());\n+        stairwayLifecycleManager.get().getFlightState(deleteFlightId).getFlightStatus());\n   }\n \n   @Test\n@@ -117,7 +117,7 @@ public void testDeleteGoogleProject_errorWhenResourceStateChange() throws Except\n         new FlightManager(\n             bufferDao,\n             new StubSubmissionFlightFactory(LatchBeforeAssertResourceStep.class),\n-            stairwayComponent,\n+            stairwayLifecycleManager,\n             transactionTemplate);\n     String deleteFlightId =\n         manager.submitDeletionFlight(resource, ResourceType.GOOGLE_PROJECT).get();\n@@ -127,12 +127,13 @@ public void testDeleteGoogleProject_errorWhenResourceStateChange() throws Except\n \n     // Release the latch, and resume the flight, assert flight failed.\n     LatchStep.releaseLatch();\n-    extractResourceIdFromFlightState(blockUntilFlightComplete(stairwayComponent, deleteFlightId));\n+    extractResourceIdFromFlightState(\n+        blockUntilFlightComplete(stairwayLifecycleManager, deleteFlightId));\n     // Resource is deleted.\n     assertFalse(bufferDao.retrieveResource(resource.id()).isPresent());\n     assertEquals(\n         FlightStatus.ERROR,\n-        stairwayComponent.get().getFlightState(deleteFlightId).getFlightStatus());\n+        stairwayLifecycleManager.get().getFlightState(deleteFlightId).getFlightStatus());\n   }\n \n   private Project assertProjectExists(ResourceId resourceId) throws Exception {"
  },
  {
    "sha": "677005882c3eb21287c9733bb8cd79698c59d860",
    "filename": "src/test/java/bio/terra/buffer/integration/IntegrationUtils.java",
    "status": "modified",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/DataBiosphere/terra-resource-buffer/blob/48d3bf500381f2a063649681c1ad98ea7535268a/src/test/java/bio/terra/buffer/integration/IntegrationUtils.java",
    "raw_url": "https://github.com/DataBiosphere/terra-resource-buffer/raw/48d3bf500381f2a063649681c1ad98ea7535268a/src/test/java/bio/terra/buffer/integration/IntegrationUtils.java",
    "contents_url": "https://api.github.com/repos/DataBiosphere/terra-resource-buffer/contents/src/test/java/bio/terra/buffer/integration/IntegrationUtils.java?ref=48d3bf500381f2a063649681c1ad98ea7535268a",
    "patch": "@@ -9,7 +9,7 @@\n import bio.terra.buffer.generated.model.*;\n import bio.terra.buffer.service.resource.FlightMapKeys;\n import bio.terra.buffer.service.resource.FlightSubmissionFactory;\n-import bio.terra.buffer.service.stairway.StairwayComponent;\n+import bio.terra.common.stairway.StairwayLifecycleManager;\n import bio.terra.stairway.Flight;\n import bio.terra.stairway.FlightMap;\n import bio.terra.stairway.FlightState;\n@@ -69,13 +69,13 @@\n \n   /** Poll until flight finished, and return {@link FlightState}. */\n   public static FlightState blockUntilFlightComplete(\n-      StairwayComponent stairwayComponent, String flightId)\n+      StairwayLifecycleManager stairwayLifecycleManager, String flightId)\n       throws InterruptedException, DatabaseOperationException {\n     Duration maxWait = Duration.ofSeconds(500);\n     Duration waited = Duration.ZERO;\n     while (waited.compareTo(maxWait) < 0) {\n-      if (!stairwayComponent.get().getFlightState(flightId).isActive()) {\n-        return stairwayComponent.get().getFlightState(flightId);\n+      if (!stairwayLifecycleManager.get().getFlightState(flightId).isActive()) {\n+        return stairwayLifecycleManager.get().getFlightState(flightId);\n       }\n       Duration poll = Duration.ofMillis(4000);\n       waited = waited.plus(Duration.ofMillis(poll.toMillis()));"
  },
  {
    "sha": "972f98d705765534ac3ce8f388273ecb391abbf5",
    "filename": "src/test/java/bio/terra/buffer/service/resource/FlightManagerTest.java",
    "status": "modified",
    "additions": 7,
    "deletions": 4,
    "changes": 11,
    "blob_url": "https://github.com/DataBiosphere/terra-resource-buffer/blob/48d3bf500381f2a063649681c1ad98ea7535268a/src/test/java/bio/terra/buffer/service/resource/FlightManagerTest.java",
    "raw_url": "https://github.com/DataBiosphere/terra-resource-buffer/raw/48d3bf500381f2a063649681c1ad98ea7535268a/src/test/java/bio/terra/buffer/service/resource/FlightManagerTest.java",
    "contents_url": "https://api.github.com/repos/DataBiosphere/terra-resource-buffer/contents/src/test/java/bio/terra/buffer/service/resource/FlightManagerTest.java?ref=48d3bf500381f2a063649681c1ad98ea7535268a",
    "patch": "@@ -6,7 +6,7 @@\n import bio.terra.buffer.common.*;\n import bio.terra.buffer.db.BufferDao;\n import bio.terra.buffer.generated.model.ResourceConfig;\n-import bio.terra.buffer.service.stairway.StairwayComponent;\n+import bio.terra.common.stairway.StairwayLifecycleManager;\n import bio.terra.stairway.Stairway;\n import bio.terra.stairway.exception.StairwayExecutionException;\n import com.google.common.collect.ImmutableList;\n@@ -23,7 +23,10 @@\n @AutoConfigureMockMvc\n @DirtiesContext(classMode = DirtiesContext.ClassMode.AFTER_EACH_TEST_METHOD)\n public class FlightManagerTest extends BaseUnitTest {\n-  @Mock private final StairwayComponent mockStairwayComponent = mock(StairwayComponent.class);\n+  @Mock\n+  private final StairwayLifecycleManager mockStairwayLifecycleManager =\n+      mock(StairwayLifecycleManager.class);\n+\n   @Mock private final Stairway mockStairway = mock(Stairway.class);\n \n   @Autowired private BufferDao bufferDao;\n@@ -34,15 +37,15 @@\n \n   @BeforeEach\n   public void setup() throws Exception {\n-    when(mockStairwayComponent.get()).thenReturn(mockStairway);\n+    when(mockStairwayLifecycleManager.get()).thenReturn(mockStairway);\n     when(mockStairway.createFlightId()).thenReturn(\"flightId\");\n     doThrow(new StairwayExecutionException(\"test\"))\n         .when(mockStairway)\n         .submitToQueue(anyString(), any(), any());\n \n     flightManager =\n         new FlightManager(\n-            bufferDao, flightSubmissionFactory, mockStairwayComponent, transactionTemplate);\n+            bufferDao, flightSubmissionFactory, mockStairwayLifecycleManager, transactionTemplate);\n   }\n \n   @Test"
  },
  {
    "sha": "f2f6347678cf467a5ccdd404612ce7caf12cadc4",
    "filename": "src/test/java/bio/terra/buffer/service/resource/FlightSchedulerTest.java",
    "status": "modified",
    "additions": 4,
    "deletions": 3,
    "changes": 7,
    "blob_url": "https://github.com/DataBiosphere/terra-resource-buffer/blob/48d3bf500381f2a063649681c1ad98ea7535268a/src/test/java/bio/terra/buffer/service/resource/FlightSchedulerTest.java",
    "raw_url": "https://github.com/DataBiosphere/terra-resource-buffer/raw/48d3bf500381f2a063649681c1ad98ea7535268a/src/test/java/bio/terra/buffer/service/resource/FlightSchedulerTest.java",
    "contents_url": "https://api.github.com/repos/DataBiosphere/terra-resource-buffer/contents/src/test/java/bio/terra/buffer/service/resource/FlightSchedulerTest.java?ref=48d3bf500381f2a063649681c1ad98ea7535268a",
    "patch": "@@ -11,7 +11,7 @@\n import bio.terra.buffer.common.testing.MetricsTestUtil;\n import bio.terra.buffer.db.*;\n import bio.terra.buffer.generated.model.ResourceConfig;\n-import bio.terra.buffer.service.stairway.StairwayComponent;\n+import bio.terra.common.stairway.StairwayLifecycleManager;\n import com.google.common.collect.ImmutableList;\n import com.google.common.collect.ImmutableMultiset;\n import com.google.common.collect.Multiset;\n@@ -38,7 +38,7 @@\n       ArgumentCaptor.forClass(Resource.class);\n \n   @Autowired BufferDao bufferDao;\n-  @Autowired StairwayComponent stairwayComponent;\n+  @Autowired StairwayLifecycleManager stairwayLifecycleManager;\n   @MockBean FlightManager flightManager;\n \n   private void initializeScheduler() {\n@@ -47,7 +47,8 @@ private void initializeScheduler() {\n \n   private void initializeScheduler(PrimaryConfiguration primaryConfiguration) {\n     flightScheduler =\n-        new FlightScheduler(flightManager, primaryConfiguration, stairwayComponent, bufferDao);\n+        new FlightScheduler(\n+            flightManager, primaryConfiguration, stairwayLifecycleManager, bufferDao);\n     flightScheduler.initialize();\n   }\n "
  },
  {
    "sha": "4ef8e551bb6aa1516eea5aa7388ff80fc42c9822",
    "filename": "src/test/java/bio/terra/buffer/service/resource/flight/LatchStepTest.java",
    "status": "modified",
    "additions": 6,
    "deletions": 6,
    "changes": 12,
    "blob_url": "https://github.com/DataBiosphere/terra-resource-buffer/blob/48d3bf500381f2a063649681c1ad98ea7535268a/src/test/java/bio/terra/buffer/service/resource/flight/LatchStepTest.java",
    "raw_url": "https://github.com/DataBiosphere/terra-resource-buffer/raw/48d3bf500381f2a063649681c1ad98ea7535268a/src/test/java/bio/terra/buffer/service/resource/flight/LatchStepTest.java",
    "contents_url": "https://api.github.com/repos/DataBiosphere/terra-resource-buffer/contents/src/test/java/bio/terra/buffer/service/resource/flight/LatchStepTest.java?ref=48d3bf500381f2a063649681c1ad98ea7535268a",
    "patch": "@@ -4,7 +4,7 @@\n import static org.junit.jupiter.api.Assertions.assertTrue;\n \n import bio.terra.buffer.common.BaseUnitTest;\n-import bio.terra.buffer.service.stairway.StairwayComponent;\n+import bio.terra.common.stairway.StairwayLifecycleManager;\n import bio.terra.stairway.Flight;\n import bio.terra.stairway.FlightMap;\n import java.util.concurrent.TimeUnit;\n@@ -20,20 +20,20 @@\n @AutoConfigureMockMvc\n @DirtiesContext(classMode = DirtiesContext.ClassMode.AFTER_EACH_TEST_METHOD)\n public class LatchStepTest extends BaseUnitTest {\n-  @Autowired StairwayComponent stairwayComponent;\n+  @Autowired StairwayLifecycleManager stairwayLifecycleManager;\n \n   @Test\n   public void latchBlocksUntilReleased() throws Exception {\n-    String flightId = stairwayComponent.get().createFlightId();\n-    stairwayComponent.get().submit(flightId, LatchFlight.class, new FlightMap());\n+    String flightId = stairwayLifecycleManager.get().createFlightId();\n+    stairwayLifecycleManager.get().submit(flightId, LatchFlight.class, new FlightMap());\n \n     LatchStep.startNewLatch();\n     TimeUnit.SECONDS.sleep(2);\n-    assertTrue(stairwayComponent.get().getFlightState(flightId).isActive());\n+    assertTrue(stairwayLifecycleManager.get().getFlightState(flightId).isActive());\n \n     LatchStep.releaseLatch();\n     TimeUnit.SECONDS.sleep(2);\n-    assertFalse(stairwayComponent.get().getFlightState(flightId).isActive());\n+    assertFalse(stairwayLifecycleManager.get().getFlightState(flightId).isActive());\n   }\n \n   public static class LatchFlight extends Flight {"
  },
  {
    "sha": "a2c8efe74a343310291d68a74c8fe832dbaa9e87",
    "filename": "src/test/resources/application-test.yml",
    "status": "modified",
    "additions": 16,
    "deletions": 10,
    "changes": 26,
    "blob_url": "https://github.com/DataBiosphere/terra-resource-buffer/blob/48d3bf500381f2a063649681c1ad98ea7535268a/src/test/resources/application-test.yml",
    "raw_url": "https://github.com/DataBiosphere/terra-resource-buffer/raw/48d3bf500381f2a063649681c1ad98ea7535268a/src/test/resources/application-test.yml",
    "contents_url": "https://api.github.com/repos/DataBiosphere/terra-resource-buffer/contents/src/test/resources/application-test.yml?ref=48d3bf500381f2a063649681c1ad98ea7535268a",
    "patch": "@@ -5,22 +5,28 @@ buffer:\n     update-db-on-start: true\n     uri: jdbc:postgresql://127.0.0.1:5432/testdb\n     username: dbuser\n-  kubernetes:\n-    pod-name: buffer-test-pod\n-    in-kubernetes: false\n+#  kubernetes:\n+#    pod-name: buffer-test-pod\n+#    in-kubernetes: false\n   primary:\n     # Disable this for test to avoid all tests invoking submit flights and making cloud calls.\n     scheduler-enabled: false\n   pool:\n     update-pool-on-start: false\n   stackdriver:\n     enabled: false\n-  stairway:\n-    db:\n-      password: dbpwd_stairway\n-      uri: jdbc:postgresql://127.0.0.1:5432/testdb_stairway\n-      username: dbuser_stairway\n-    force-clean-start: true\n-    migrate-upgrade: true\n+terra:\n+  common:\n+    kubernetes:\n+      pod-name: buffer-test-pod\n+      in-kubernetes: false\n+      namespace-suffix: buffer\n+    stairway:\n+      db:\n+        password: dbpwd_stairway\n+        uri: jdbc:postgresql://127.0.0.1:5432/testdb_stairway\n+        username: dbuser_stairway\n+      force-clean-start: true\n+      migrate-upgrade: true\n \n spring.profiles.include: human-readable-logging"
  }
]
