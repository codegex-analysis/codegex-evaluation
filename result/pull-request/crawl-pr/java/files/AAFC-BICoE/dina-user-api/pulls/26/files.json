[
  {
    "sha": "13b89fe689385d18fca9e6498a2342317594bac4",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/AAFC-BICoE/dina-user-api/blob/6e3c8adef233d6234e1a8fc8466fc9f2dfcc9e5b/pom.xml",
    "raw_url": "https://github.com/AAFC-BICoE/dina-user-api/raw/6e3c8adef233d6234e1a8fc8466fc9f2dfcc9e5b/pom.xml",
    "contents_url": "https://api.github.com/repos/AAFC-BICoE/dina-user-api/contents/pom.xml?ref=6e3c8adef233d6234e1a8fc8466fc9f2dfcc9e5b",
    "patch": "@@ -35,8 +35,11 @@\n     <keycloak-admin-client.version>11.0.2</keycloak-admin-client.version>\n     <testcontainers-keycloak.version>1.4.1</testcontainers-keycloak.version>\n     <testcontainers.version>1.15.1</testcontainers.version>\n+    <powermock-module-junit4.version>2.0.7</powermock-module-junit4.version>\n+    <powermock-api-mockito2.version>2.0.7</powermock-api-mockito2.version>\n     <spring-boot-maven-plugin.fork>false</spring-boot-maven-plugin.fork>\n   </properties>\n+\n   <repositories>\n     <!-- dina-base-api binstray repository -->\n     <repository>\n@@ -151,6 +154,19 @@\n       <version>${testcontainers-keycloak.version}</version>\n       <scope>test</scope>\n     </dependency>\n+\n+    <dependency>\n+      <groupId>org.powermock</groupId>\n+      <artifactId>powermock-module-junit4</artifactId>\n+      <version>${powermock-module-junit4.version}</version>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.powermock</groupId>\n+      <artifactId>powermock-api-mockito2</artifactId>\n+      <version>${powermock-api-mockito2.version}</version>\n+      <scope>test</scope>\n+    </dependency>    \n  \n   </dependencies>\n "
  },
  {
    "sha": "4477f2515fee02d4999ef9d77a8a338f430b2644",
    "filename": "src/main/java/ca/gc/aafc/dinauser/api/service/KeycloakClientService.java",
    "status": "modified",
    "additions": 5,
    "deletions": 3,
    "changes": 8,
    "blob_url": "https://github.com/AAFC-BICoE/dina-user-api/blob/6e3c8adef233d6234e1a8fc8466fc9f2dfcc9e5b/src/main/java/ca/gc/aafc/dinauser/api/service/KeycloakClientService.java",
    "raw_url": "https://github.com/AAFC-BICoE/dina-user-api/raw/6e3c8adef233d6234e1a8fc8466fc9f2dfcc9e5b/src/main/java/ca/gc/aafc/dinauser/api/service/KeycloakClientService.java",
    "contents_url": "https://api.github.com/repos/AAFC-BICoE/dina-user-api/contents/src/main/java/ca/gc/aafc/dinauser/api/service/KeycloakClientService.java?ref=6e3c8adef233d6234e1a8fc8466fc9f2dfcc9e5b",
    "patch": "@@ -1,13 +1,15 @@\n package ca.gc.aafc.dinauser.api.service;\n \n+import org.jboss.resteasy.client.jaxrs.ResteasyClientBuilder;\n import org.keycloak.OAuth2Constants;\n import org.keycloak.adapters.springboot.KeycloakSpringBootProperties;\n import org.keycloak.admin.client.Keycloak;\n import org.keycloak.admin.client.KeycloakBuilder;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.context.annotation.Bean;\n import org.springframework.stereotype.Service;\n-import org.springframework.web.context.annotation.RequestScope;\n+\n+import org.springframework.web.context.annotation.SessionScope;\n \n import lombok.extern.log4j.Log4j2;\n \n@@ -23,7 +25,6 @@\n   private KeycloakBuilder serviceClientBuilder;\n   \n   @Bean\n-  @RequestScope\n   public Keycloak getKeycloakClient() {\n     return getKeycloakBuilder().build();\n   }\n@@ -41,7 +42,8 @@ private KeycloakBuilder getKeycloakBuilder() {\n           .realm(realm)\n           .grantType(OAuth2Constants.CLIENT_CREDENTIALS)\n           .clientId(clientId)\n-          .clientSecret(secret);\n+          .clientSecret(secret)\n+          .resteasyClient(new ResteasyClientBuilder().connectionPoolSize(10).build());\n     }\n     \n     log.debug(\"returning keycloak service client builder\");"
  },
  {
    "sha": "6dc0d7b090769684f30593a56c6922916c3c4953",
    "filename": "src/test/java/ca/gc/aafc/dinauser/api/UserRepoTest.java",
    "status": "modified",
    "additions": 51,
    "deletions": 25,
    "changes": 76,
    "blob_url": "https://github.com/AAFC-BICoE/dina-user-api/blob/6e3c8adef233d6234e1a8fc8466fc9f2dfcc9e5b/src/test/java/ca/gc/aafc/dinauser/api/UserRepoTest.java",
    "raw_url": "https://github.com/AAFC-BICoE/dina-user-api/raw/6e3c8adef233d6234e1a8fc8466fc9f2dfcc9e5b/src/test/java/ca/gc/aafc/dinauser/api/UserRepoTest.java",
    "contents_url": "https://api.github.com/repos/AAFC-BICoE/dina-user-api/contents/src/test/java/ca/gc/aafc/dinauser/api/UserRepoTest.java?ref=6e3c8adef233d6234e1a8fc8466fc9f2dfcc9e5b",
    "patch": "@@ -1,26 +1,28 @@\n package ca.gc.aafc.dinauser.api;\n \n-import ca.gc.aafc.dina.testsupport.PostgresTestContainerInitializer;\n-import ca.gc.aafc.dina.testsupport.security.WithMockKeycloakUser;\n-import ca.gc.aafc.dinauser.api.dto.DinaUserDto;\n-import ca.gc.aafc.dinauser.api.repository.UserRepository;\n-import ca.gc.aafc.dinauser.api.service.DinaUserService;\n-import ca.gc.aafc.dinauser.api.service.KeycloakClientService;\n-import io.crnk.core.exception.ForbiddenException;\n-import io.crnk.core.queryspec.QuerySpec;\n-import io.crnk.core.resource.list.ResourceList;\n+import java.util.List;\n+import java.util.UUID;\n+import java.util.stream.Collectors;\n+\n+import javax.inject.Inject;\n+import javax.ws.rs.NotFoundException;\n+\n import org.hamcrest.MatcherAssert;\n import org.hamcrest.Matchers;\n import org.junit.jupiter.api.AfterEach;\n import org.junit.jupiter.api.Assertions;\n import org.junit.jupiter.api.BeforeAll;\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n+import org.junit.runner.RunWith;\n import org.keycloak.OAuth2Constants;\n import org.keycloak.adapters.springsecurity.token.KeycloakAuthenticationToken;\n+import org.keycloak.admin.client.Keycloak;\n import org.keycloak.admin.client.KeycloakBuilder;\n import org.mockito.Answers;\n import org.mockito.Mockito;\n+import org.powermock.core.classloader.annotations.PrepareForTest;\n+import org.powermock.modules.junit4.PowerMockRunner;\n import org.springframework.boot.test.context.SpringBootTest;\n import org.springframework.boot.test.mock.mockito.MockBean;\n import org.springframework.security.core.context.SecurityContextHolder;\n@@ -29,15 +31,23 @@\n import org.testcontainers.junit.jupiter.Container;\n import org.testcontainers.shaded.org.apache.commons.lang.RandomStringUtils;\n \n-import javax.inject.Inject;\n-import javax.ws.rs.NotFoundException;\n-import java.util.List;\n-import java.util.UUID;\n-import java.util.stream.Collectors;\n+import ca.gc.aafc.dina.testsupport.PostgresTestContainerInitializer;\n+import ca.gc.aafc.dina.testsupport.security.WithMockKeycloakUser;\n+import ca.gc.aafc.dinauser.api.dto.DinaUserDto;\n+import ca.gc.aafc.dinauser.api.repository.UserRepository;\n+import ca.gc.aafc.dinauser.api.service.DinaUserService;\n+import ca.gc.aafc.dinauser.api.service.KeycloakClientService;\n+import io.crnk.core.exception.ForbiddenException;\n+import io.crnk.core.queryspec.QuerySpec;\n+import io.crnk.core.resource.list.ResourceList;\n+\n+import static org.powermock.api.mockito.PowerMockito.*;\n \n @SpringBootTest(classes = DinaUserModuleApiLauncher.class)\n @TestPropertySource(properties = \"spring.config.additional-location=classpath:application-test.yml\")\n @ContextConfiguration(initializers = {PostgresTestContainerInitializer.class})\n+@RunWith(PowerMockRunner.class)\n+@PrepareForTest(fullyQualifiedNames = \"ca.gc.aafc.dinauser.api.*\")\n public class UserRepoTest {\n \n   @Container\n@@ -49,7 +59,6 @@\n   @Inject\n   private DinaUserService service;\n \n-  @MockBean\n   KeycloakClientService keycloakClientService;\n \n   private DinaUserDto persisted;\n@@ -60,7 +69,7 @@ static void beforeAll() {\n   }\n \n   @BeforeEach\n-  void setUp() {\n+  void setUp() throws Exception{\n     mockKeycloakClienService();\n     persisted = service.create(newUserDto());\n   }\n@@ -248,15 +257,32 @@ private DinaUserDto newUserDto() {\n       .build();\n   }\n \n-  private void mockKeycloakClienService() {\n-    Mockito.when(keycloakClientService.getKeycloakClient()).thenReturn(\n-      KeycloakBuilder.builder()\n-        .serverUrl(\"http://localhost:\" + keycloak.getHttpPort() + \"/auth\")\n-        .realm(\"dina\")\n-        .grantType(OAuth2Constants.CLIENT_CREDENTIALS)\n-        .clientId(\"user-svc\")\n-        .clientSecret(\"120c0b7a-5ed2-4295-9a31-29c2fcbc714f\").build());\n-    Mockito.when(keycloakClientService.getRealm()).thenReturn(\"dina\");\n+  private void mockKeycloakClienService() throws Exception{\n+    // Mockito.when(keycloakClientService.getKeycloakClient()).thenReturn(\n+    //   KeycloakBuilder.builder()\n+    //     .serverUrl(\"http://localhost:\" + keycloak.getHttpPort() + \"/auth\")\n+    //     .realm(\"dina\")\n+    //     .grantType(OAuth2Constants.CLIENT_CREDENTIALS)\n+    //     .clientId(\"user-svc\")\n+    //     .clientSecret(\"120c0b7a-5ed2-4295-9a31-29c2fcbc714f\").build());\n+    // Mockito.when(keycloakClientService.getRealm()).thenReturn(\"dina\");\n+\n+      // KeycloakClientService collaborator = new KeycloakClientService();\n+      // keycloakClientService = spy(collaborator);   \n+      \n+      KeycloakClientService mock = mock(KeycloakClientService.class);\n+      whenNew(KeycloakClientService.class).withNoArguments().thenReturn(mock);\n+\n+      keycloakClientService = new KeycloakClientService();\n+      verifyNew(KeycloakClientService.class).withNoArguments();\n+      \n+      when(keycloakClientService.getKeycloakClient()).thenReturn(KeycloakBuilder.builder()\n+      .serverUrl(\"http://localhost:\" + keycloak.getHttpPort() + \"/auth\")\n+      .realm(\"dina\")\n+      .grantType(OAuth2Constants.CLIENT_CREDENTIALS)\n+      .clientId(\"user-svc\")\n+      .clientSecret(\"120c0b7a-5ed2-4295-9a31-29c2fcbc714f\").build());\n+       when(keycloakClientService.getRealm()).thenReturn(\"dina\");\n   }\n \n   private void mockAuthenticatedUserWithPersisted(String group) {"
  }
]
