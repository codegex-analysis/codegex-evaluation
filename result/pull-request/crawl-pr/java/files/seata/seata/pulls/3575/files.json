[
  {
    "sha": "eb32e9155f8ac6c9bbb9a0bc3797ecd72ed5a899",
    "filename": "changes/1.5.0.md",
    "status": "modified",
    "additions": 3,
    "deletions": 2,
    "changes": 5,
    "blob_url": "https://github.com/seata/seata/blob/5b786639fdc8c85166bc9d7b57ae55be0bc52759/changes/1.5.0.md",
    "raw_url": "https://github.com/seata/seata/raw/5b786639fdc8c85166bc9d7b57ae55be0bc52759/changes/1.5.0.md",
    "contents_url": "https://api.github.com/repos/seata/seata/contents/changes/1.5.0.md?ref=5b786639fdc8c85166bc9d7b57ae55be0bc52759",
    "patch": "@@ -24,6 +24,7 @@ Seata 是一款开源的分布式事务解决方案，提供高性能和简单\n   - [[#2667](https://github.com/seata/seata/pull/2667)] 支持db和redis密码加解密\n   - [[#3427](https://github.com/seata/seata/pull/3427)] 添加分布式锁接口\n   - [[#3443](https://github.com/seata/seata/pull/3443)] 将`seata-server`的日志发送到`logstash`或`kafka`中，再存入`ElasticSearch`\n+  - [[#3575](https://github.com/seata/seata/pull/3575)] 支持对锁和会话不同存储的混合使用\n   - [[#3486](https://github.com/seata/seata/pull/3486)] Metrics增加事务分组属性\n \n \n@@ -81,8 +82,8 @@ Seata 是一款开源的分布式事务解决方案，提供高性能和简单\n   - [[#3544](https://github.com/seata/seata/pull/3544)] 优化无法通过Statement#getGeneratedKeys时，只能获取到批量插入的第一个主键的问题\n   - [[#3549](https://github.com/seata/seata/pull/3549)] 统一不同表中的xid字段的长度\n   - [[#3551](https://github.com/seata/seata/pull/3551)] 调大RETRY_DEAD_THRESHOLD的值以及设置成可配置\n-  \n-  \n+\n+\n   ### test\n \n   - [[#3381](https://github.com/seata/seata/pull/3381)] 添加 TmClient 的测试用例"
  },
  {
    "sha": "82ce3ff5c0c5e4cdd5dfa6de1d9e70f6c64dcbe6",
    "filename": "changes/en-us/1.5.0.md",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/seata/seata/blob/5b786639fdc8c85166bc9d7b57ae55be0bc52759/changes/en-us/1.5.0.md",
    "raw_url": "https://github.com/seata/seata/raw/5b786639fdc8c85166bc9d7b57ae55be0bc52759/changes/en-us/1.5.0.md",
    "contents_url": "https://api.github.com/repos/seata/seata/contents/changes/en-us/1.5.0.md?ref=5b786639fdc8c85166bc9d7b57ae55be0bc52759",
    "patch": "@@ -22,6 +22,7 @@\n   - [[#3411](https://github.com/seata/seata/pull/3411)] support seata server thread pool parameters configuration\n   - [[#3348](https://github.com/seata/seata/pull/3348)] support redis sentinel mode\n   - [[#2667](https://github.com/seata/seata/pull/2667)] support password decryption\n+  - [[#3575](https://github.com/seata/seata/pull/3575)] support the mixed use of different storages of locks and sessions\n   - [[#3427](https://github.com/seata/seata/pull/3427)] add distributed lock interface\n \n \n@@ -178,7 +179,7 @@\n   - [[#3544](https://github.com/seata/seata/pull/3544)] optimize the get pks by auto when auto generated keys is false\n   - [[#3549](https://github.com/seata/seata/pull/3549)] unified the length of xid in scripts\n   - [[#3551](https://github.com/seata/seata/pull/3551)] make RETRY_DEAD_THRESHOLD bigger and configurable\n-  \n+\n \n   ### test\t\n "
  },
  {
    "sha": "6ca7c49ac7b355513cd07d39b2ddf72d5fd2fbe7",
    "filename": "core/src/main/java/io/seata/core/constants/ConfigurationKeys.java",
    "status": "modified",
    "additions": 17,
    "deletions": 2,
    "changes": 19,
    "blob_url": "https://github.com/seata/seata/blob/5b786639fdc8c85166bc9d7b57ae55be0bc52759/core/src/main/java/io/seata/core/constants/ConfigurationKeys.java",
    "raw_url": "https://github.com/seata/seata/raw/5b786639fdc8c85166bc9d7b57ae55be0bc52759/core/src/main/java/io/seata/core/constants/ConfigurationKeys.java",
    "contents_url": "https://api.github.com/repos/seata/seata/contents/core/src/main/java/io/seata/core/constants/ConfigurationKeys.java?ref=5b786639fdc8c85166bc9d7b57ae55be0bc52759",
    "patch": "@@ -37,15 +37,30 @@\n      */\n     String STORE_PREFIX = \"store.\";\n \n+    /**\n+     * The constant MODE.\n+     */\n+    String MODE = \"mode\";\n+\n     /**\n      * The constant STORE_MODE.\n      */\n-    String STORE_MODE = STORE_PREFIX + \"mode\";\n+    String STORE_MODE = STORE_PREFIX + MODE;\n+\n+    /**\n+     * The constant STORE_LOCK_MODE.\n+     */\n+    String STORE_LOCK_MODE = STORE_PREFIX + \"lock.\" + MODE;\n+\n+    /**\n+     * The constant STORE_SESSION_MODE.\n+     */\n+    String STORE_SESSION_MODE = STORE_PREFIX + \"session.\" + MODE;\n \n     /**\n      * The constant STORE_PUBLIC_KEY.\n      */\n-    public static final String STORE_PUBLIC_KEY = STORE_PREFIX + \"publicKey\";\n+    String STORE_PUBLIC_KEY = STORE_PREFIX + \"publicKey\";\n \n     /**\n      * The constant STORE_FILE_PREFIX"
  },
  {
    "sha": "8ac1c2857fea93411aa5f3d936bdc5e7f2a5a640",
    "filename": "script/config-center/config.txt",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/seata/seata/blob/5b786639fdc8c85166bc9d7b57ae55be0bc52759/script/config-center/config.txt",
    "raw_url": "https://github.com/seata/seata/raw/5b786639fdc8c85166bc9d7b57ae55be0bc52759/script/config-center/config.txt",
    "contents_url": "https://api.github.com/repos/seata/seata/contents/script/config-center/config.txt?ref=5b786639fdc8c85166bc9d7b57ae55be0bc52759",
    "patch": "@@ -33,6 +33,8 @@ client.tm.degradeCheck=false\n client.tm.degradeCheckAllowTimes=10\n client.tm.degradeCheckPeriod=2000\n store.mode=file\n+store.lock.mode=file\n+store.session.mode=file\n store.publicKey=\n store.file.dir=file_store/data\n store.file.maxBranchSessionSize=16384"
  },
  {
    "sha": "192c6a92ff5b6155e77e2bc684d6df3e2ed5492c",
    "filename": "script/server/config/file.conf",
    "status": "modified",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/seata/seata/blob/5b786639fdc8c85166bc9d7b57ae55be0bc52759/script/server/config/file.conf",
    "raw_url": "https://github.com/seata/seata/raw/5b786639fdc8c85166bc9d7b57ae55be0bc52759/script/server/config/file.conf",
    "contents_url": "https://api.github.com/repos/seata/seata/contents/script/server/config/file.conf?ref=5b786639fdc8c85166bc9d7b57ae55be0bc52759",
    "patch": "@@ -4,6 +4,14 @@ store {\n   ## store mode: file、db、redis\n   mode = \"file\"\n \n+  ##store lock mode: file、db、redis\n+  lock {\n+    mode = \"file\"\n+  }\n+  ##store session mode: file、db、redis\n+  session {\n+    mode = \"file\"\n+  }\n   ## file store property\n   file {\n     ## store location dir"
  },
  {
    "sha": "471faf38e60b5b27b3d5c52a7e70e6cdc91e7440",
    "filename": "script/server/config/file.properties",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/seata/seata/blob/5b786639fdc8c85166bc9d7b57ae55be0bc52759/script/server/config/file.properties",
    "raw_url": "https://github.com/seata/seata/raw/5b786639fdc8c85166bc9d7b57ae55be0bc52759/script/server/config/file.properties",
    "contents_url": "https://api.github.com/repos/seata/seata/contents/script/server/config/file.properties?ref=5b786639fdc8c85166bc9d7b57ae55be0bc52759",
    "patch": "@@ -1,4 +1,6 @@\n store.mode=file\n+store.lock.mode=file\n+store.session.mode=file\n store.file.dir=sessionStore\n store.file.maxBranchSessionSize=16384\n store.file.maxGlobalSessionSize=512"
  },
  {
    "sha": "10ba10803f7b067fe5596d836ce827310a5161f9",
    "filename": "script/server/config/file.yml",
    "status": "modified",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/seata/seata/blob/5b786639fdc8c85166bc9d7b57ae55be0bc52759/script/server/config/file.yml",
    "raw_url": "https://github.com/seata/seata/raw/5b786639fdc8c85166bc9d7b57ae55be0bc52759/script/server/config/file.yml",
    "contents_url": "https://api.github.com/repos/seata/seata/contents/script/server/config/file.yml?ref=5b786639fdc8c85166bc9d7b57ae55be0bc52759",
    "patch": "@@ -4,6 +4,10 @@ store:\n \n   ## store mode: file、db、redis\n   mode: file\n+  lock:\n+    mode: file\n+  session:\n+    mode: file\n   ## file store property\n   file:\n     ## store location dir"
  },
  {
    "sha": "2969bfc66a64c3aa81774c73ba6fa412f1b3f340",
    "filename": "server/src/main/java/io/seata/server/ParameterParser.java",
    "status": "modified",
    "additions": 5,
    "deletions": 2,
    "changes": 7,
    "blob_url": "https://github.com/seata/seata/blob/5b786639fdc8c85166bc9d7b57ae55be0bc52759/server/src/main/java/io/seata/server/ParameterParser.java",
    "raw_url": "https://github.com/seata/seata/raw/5b786639fdc8c85166bc9d7b57ae55be0bc52759/server/src/main/java/io/seata/server/ParameterParser.java",
    "contents_url": "https://api.github.com/repos/seata/seata/contents/server/src/main/java/io/seata/server/ParameterParser.java?ref=5b786639fdc8c85166bc9d7b57ae55be0bc52759",
    "patch": "@@ -19,6 +19,7 @@\n import com.beust.jcommander.Parameter;\n import com.beust.jcommander.ParameterException;\n import io.seata.common.util.StringUtils;\n+import io.seata.config.Configuration;\n import io.seata.config.ConfigurationFactory;\n import io.seata.core.constants.ConfigurationKeys;\n import io.seata.server.env.ContainerHelper;\n@@ -37,6 +38,8 @@\n     private static final String PROGRAM_NAME\n         = \"sh seata-server.sh(for linux and mac) or cmd seata-server.bat(for windows)\";\n \n+    private static final Configuration CONFIG = ConfigurationFactory.getInstance();\n+    \n     @Parameter(names = \"--help\", help = true)\n     private boolean help;\n     @Parameter(names = {\"--host\", \"-h\"}, description = \"The ip to register to registry center.\", order = 1)\n@@ -81,8 +84,8 @@ private void init(String[] args) {\n                 System.setProperty(ENV_PROPERTY_KEY, seataEnv);\n             }\n             if (StringUtils.isBlank(storeMode)) {\n-                storeMode = ConfigurationFactory.getInstance().getConfig(ConfigurationKeys.STORE_MODE,\n-                    SERVER_DEFAULT_STORE_MODE);\n+                storeMode = CONFIG.getConfig(ConfigurationKeys.STORE_SESSION_MODE,\n+                    CONFIG.getConfig(ConfigurationKeys.STORE_MODE, SERVER_DEFAULT_STORE_MODE));\n             }\n         } catch (ParameterException e) {\n             printError(e);"
  },
  {
    "sha": "466472bd7bcfd17e1bc290211718c89063faeab3",
    "filename": "server/src/main/java/io/seata/server/lock/LockerManagerFactory.java",
    "status": "modified",
    "additions": 5,
    "deletions": 1,
    "changes": 6,
    "blob_url": "https://github.com/seata/seata/blob/5b786639fdc8c85166bc9d7b57ae55be0bc52759/server/src/main/java/io/seata/server/lock/LockerManagerFactory.java",
    "raw_url": "https://github.com/seata/seata/raw/5b786639fdc8c85166bc9d7b57ae55be0bc52759/server/src/main/java/io/seata/server/lock/LockerManagerFactory.java",
    "contents_url": "https://api.github.com/repos/seata/seata/contents/server/src/main/java/io/seata/server/lock/LockerManagerFactory.java?ref=5b786639fdc8c85166bc9d7b57ae55be0bc52759",
    "patch": "@@ -16,6 +16,7 @@\n package io.seata.server.lock;\n \n import io.seata.common.loader.EnhancedServiceLoader;\n+import io.seata.config.Configuration;\n import io.seata.config.ConfigurationFactory;\n import io.seata.core.constants.ConfigurationKeys;\n \n@@ -26,11 +27,13 @@\n  */\n public class LockerManagerFactory {\n \n+    private static final Configuration CONFIG = ConfigurationFactory.getInstance();\n+\n     /**\n      * the lock manager\n      */\n     private static final LockManager LOCK_MANAGER = EnhancedServiceLoader.load(LockManager.class,\n-            ConfigurationFactory.getInstance().getConfig(ConfigurationKeys.STORE_MODE));\n+        CONFIG.getConfig(ConfigurationKeys.STORE_LOCK_MODE, CONFIG.getConfig(ConfigurationKeys.STORE_MODE)));\n \n     /**\n      * Get lock manager.\n@@ -40,4 +43,5 @@\n     public static LockManager getLockManager() {\n         return LOCK_MANAGER;\n     }\n+\n }"
  },
  {
    "sha": "951f7875d66e3b918620463129bd0c93e6cbf475",
    "filename": "server/src/main/java/io/seata/server/session/SessionHolder.java",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/seata/seata/blob/5b786639fdc8c85166bc9d7b57ae55be0bc52759/server/src/main/java/io/seata/server/session/SessionHolder.java",
    "raw_url": "https://github.com/seata/seata/raw/5b786639fdc8c85166bc9d7b57ae55be0bc52759/server/src/main/java/io/seata/server/session/SessionHolder.java",
    "contents_url": "https://api.github.com/repos/seata/seata/contents/server/src/main/java/io/seata/server/session/SessionHolder.java?ref=5b786639fdc8c85166bc9d7b57ae55be0bc52759",
    "patch": "@@ -90,7 +90,8 @@\n      */\n     public static void init(String mode) {\n         if (StringUtils.isBlank(mode)) {\n-            mode = CONFIG.getConfig(ConfigurationKeys.STORE_MODE);\n+            mode =\n+                CONFIG.getConfig(ConfigurationKeys.STORE_SESSION_MODE, CONFIG.getConfig(ConfigurationKeys.STORE_MODE));\n         }\n         StoreMode storeMode = StoreMode.get(mode);\n         if (StoreMode.DB.equals(storeMode)) {"
  },
  {
    "sha": "db6f3fb9f38b5efe9cacf1d2222c757fb742c8c1",
    "filename": "server/src/main/resources/file.conf",
    "status": "modified",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/seata/seata/blob/5b786639fdc8c85166bc9d7b57ae55be0bc52759/server/src/main/resources/file.conf",
    "raw_url": "https://github.com/seata/seata/raw/5b786639fdc8c85166bc9d7b57ae55be0bc52759/server/src/main/resources/file.conf",
    "contents_url": "https://api.github.com/repos/seata/seata/contents/server/src/main/resources/file.conf?ref=5b786639fdc8c85166bc9d7b57ae55be0bc52759",
    "patch": "@@ -2,6 +2,16 @@\n store {\n   ## store mode: file、db、redis\n   mode = \"file\"\n+\n+  ##store session mode: file、db、redis\n+  lock {\n+    mode = \"file\"\n+  }\n+  ##store session mode: file、db、redis\n+  session {\n+    mode = \"file\"\n+  }\n+\n   ## rsa decryption public key\n   publicKey = \"\"\n   ## file store property"
  }
]
