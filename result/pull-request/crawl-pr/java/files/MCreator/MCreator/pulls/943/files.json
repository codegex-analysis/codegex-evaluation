[
  {
    "sha": "717c5c71d1a89c566ff1a0e85ea30625e32ad1d1",
    "filename": "plugins/generator-1.15.2/forge-1.15.2/templates/fluid.java.ftl",
    "status": "modified",
    "additions": 50,
    "deletions": 2,
    "changes": 52,
    "blob_url": "https://github.com/MCreator/MCreator/blob/8142f804cd6f30c133845fb08acf8475710de94c/plugins/generator-1.15.2/forge-1.15.2/templates/fluid.java.ftl",
    "raw_url": "https://github.com/MCreator/MCreator/raw/8142f804cd6f30c133845fb08acf8475710de94c/plugins/generator-1.15.2/forge-1.15.2/templates/fluid.java.ftl",
    "contents_url": "https://api.github.com/repos/MCreator/MCreator/contents/plugins/generator-1.15.2/forge-1.15.2/templates/fluid.java.ftl?ref=8142f804cd6f30c133845fb08acf8475710de94c",
    "patch": "@@ -70,13 +70,39 @@ import net.minecraft.block.material.Material;\n \t\t\t\t\t.density(${data.density})\r\n \t\t\t\t\t.viscosity(${data.viscosity})\r\n \t\t\t\t\t<#if data.isGas>.gaseous()</#if>)\r\n-                    <#if data.generateBucket>.bucket(() -> bucket)</#if>\r\n+\t\t\t\t\t.explosionResistance(${data.resistance}f)\r\n+\t\t\t\t\t<#if data.generateBucket>.bucket(() -> bucket)</#if>\r\n \t\t\t\t\t.block(() -> block);\r\n \r\n \t\tstill = (FlowingFluid) new ForgeFlowingFluid.Source(fluidproperties).setRegistryName(\"${registryname}\");\r\n \t\tflowing = (FlowingFluid) new ForgeFlowingFluid.Flowing(fluidproperties).setRegistryName(\"${registryname}_flowing\");\r\n \r\n-\t\telements.blocks.add(() -> new FlowingFluidBlock(still, Block.Properties.create(Material.${data.type})){\r\n+\t\telements.blocks.add(() -> new FlowingFluidBlock(still,\r\n+\t\t\t<#if generator.map(data.colorOnMap, \"mapcolors\") != \"DEFAULT\">\r\n+\t\t\tBlock.Properties.create(Material.${data.type}, MaterialColor.${generator.map(data.colorOnMap, \"mapcolors\")})\r\n+\t\t\t<#else>\r\n+\t\t\tBlock.Properties.create(Material.${data.type})\r\n+\t\t\t</#if>\r\n+\t\t\t.lightValue(${data.luminance})\r\n+\t\t\t){\r\n+\t\t\t<#if data.flammability != 0>\r\n+\t\t\t@Override public int getFlammability(BlockState state, IBlockReader world, BlockPos pos, Direction face) {\r\n+\t\t\t\treturn ${data.flammability};\r\n+\t\t\t}\r\n+\t\t\t</#if>\r\n+\r\n+\t\t\t<#if data.fireSpreadSpeed != 0>\r\n+\t\t\t@Override public int getFireSpreadSpeed(BlockState state, IBlockReader world, BlockPos pos, Direction face) {\r\n+\t\t\t\treturn ${data.fireSpreadSpeed};\r\n+\t\t\t}\r\n+\t\t\t</#if>\r\n+\r\n+\t\t\t<#if data.emissiveRendering>\r\n+\t\t\t@OnlyIn(Dist.CLIENT) @Override public boolean isEmissiveRendering(BlockState blockState) {\r\n+\t\t\t\treturn true;\r\n+\t\t\t}\r\n+\t\t\t</#if>\r\n+\r\n \t\t\t<#if hasProcedure(data.onBlockAdded)>\r\n \t\t\t@Override public void onBlockAdded(BlockState state, World world, BlockPos pos, BlockState oldState, boolean moving) {\r\n \t\t\t\tsuper.onBlockAdded(state, world, pos, oldState, moving);\r\n@@ -117,6 +143,28 @@ import net.minecraft.block.material.Material;\n     \t\t\t<@procedureOBJToCode data.onEntityCollides/>\r\n \t\t\t}\r\n \t\t\t</#if>\r\n+\r\n+\t\t\t<#if hasProcedure(data.onRandomUpdateEvent)>\r\n+\t\t\t@OnlyIn(Dist.CLIENT) @Override\r\n+\t\t\tpublic void animateTick(BlockState state, World world, BlockPos pos, Random random) {\r\n+\t\t\t\tsuper.animateTick(state, world, pos, random);\r\n+\t\t\t\tPlayerEntity entity = Minecraft.getInstance().player;\r\n+\t\t\t\tint x = pos.getX();\r\n+\t\t\t\tint y = pos.getY();\r\n+\t\t\t\tint z = pos.getZ();\r\n+\t\t\t\t<@procedureOBJToCode data.onRandomUpdateEvent/>\r\n+\t\t\t}\r\n+\t\t\t</#if>\r\n+\r\n+\t\t\t<#if hasProcedure(data.onDestroyedByExplosion)>\r\n+\t\t\t@Override public void onExplosionDestroy(World world, BlockPos pos, Explosion e) {\r\n+\t\t\t\tsuper.onExplosionDestroy(world, pos, e);\r\n+\t\t\t\tint x = pos.getX();\r\n+\t\t\t\tint y = pos.getY();\r\n+\t\t\t\tint z = pos.getZ();\r\n+\t\t\t\t<@procedureOBJToCode data.onDestroyedByExplosion/>\r\n+\t\t\t}\r\n+\t\t\t</#if>\r\n \t\t}.setRegistryName(\"${registryname}\"));\r\n \r\n \t\t<#if data.generateBucket>\r"
  },
  {
    "sha": "3ea4b73ec205cb6768c89015b4e8249cb20c6fee",
    "filename": "plugins/generator-1.16.4/forge-1.16.4/templates/fluid.java.ftl",
    "status": "modified",
    "additions": 46,
    "deletions": 1,
    "changes": 47,
    "blob_url": "https://github.com/MCreator/MCreator/blob/8142f804cd6f30c133845fb08acf8475710de94c/plugins/generator-1.16.4/forge-1.16.4/templates/fluid.java.ftl",
    "raw_url": "https://github.com/MCreator/MCreator/raw/8142f804cd6f30c133845fb08acf8475710de94c/plugins/generator-1.16.4/forge-1.16.4/templates/fluid.java.ftl",
    "contents_url": "https://api.github.com/repos/MCreator/MCreator/contents/plugins/generator-1.16.4/forge-1.16.4/templates/fluid.java.ftl?ref=8142f804cd6f30c133845fb08acf8475710de94c",
    "patch": "@@ -78,13 +78,36 @@ import net.minecraft.block.material.Material;\n \t\t\t\t\t.density(${data.density})\r\n \t\t\t\t\t.viscosity(${data.viscosity})\r\n \t\t\t\t\t<#if data.isGas>.gaseous()</#if>)\r\n+\t\t\t\t\t.explosionResistance(${data.resistance}f)\r\n                     <#if data.generateBucket>.bucket(() -> bucket)</#if>\r\n \t\t\t\t\t.block(() -> block);\r\n \r\n \t\tstill = (FlowingFluid) new ForgeFlowingFluid.Source(fluidproperties).setRegistryName(\"${registryname}\");\r\n \t\tflowing = (FlowingFluid) new ForgeFlowingFluid.Flowing(fluidproperties).setRegistryName(\"${registryname}_flowing\");\r\n \r\n-\t\telements.blocks.add(() -> new FlowingFluidBlock(still, Block.Properties.create(Material.${data.type})){\r\n+\t\telements.blocks.add(() -> new FlowingFluidBlock(still,\r\n+\t\t\t<#if generator.map(data.colorOnMap, \"mapcolors\") != \"DEFAULT\">\r\n+\t\t\tBlock.Properties.create(Material.${data.type}, MaterialColor.${generator.map(data.colorOnMap, \"mapcolors\")})\r\n+\t\t\t<#else>\r\n+\t\t\tBlock.Properties.create(Material.${data.type})\r\n+\t\t\t</#if>\r\n+\t\t\t<#if data.emissiveRendering>\r\n+\t\t\t.setNeedsPostProcessing((bs, br, bp) -> true).setEmmisiveRendering((bs, br, bp) -> true)\r\n+\t\t\t</#if>\r\n+\t\t\t.setLightLevel(s -> ${data.luminance})\r\n+\t\t\t){\r\n+\t\t\t<#if data.flammability != 0>\r\n+\t\t\t@Override public int getFlammability(BlockState state, IBlockReader world, BlockPos pos, Direction face) {\r\n+\t\t\t\treturn ${data.flammability};\r\n+\t\t\t}\r\n+\t\t\t</#if>\r\n+\r\n+\t\t\t<#if data.fireSpreadSpeed != 0>\r\n+\t\t\t@Override public int getFireSpreadSpeed(BlockState state, IBlockReader world, BlockPos pos, Direction face) {\r\n+\t\t\t\treturn ${data.fireSpreadSpeed};\r\n+\t\t\t}\r\n+\t\t\t</#if>\r\n+\r\n \t\t\t<#if hasProcedure(data.onBlockAdded)>\r\n \t\t\t@Override public void onBlockAdded(BlockState state, World world, BlockPos pos, BlockState oldState, boolean moving) {\r\n \t\t\t\tsuper.onBlockAdded(state, world, pos, oldState, moving);\r\n@@ -125,6 +148,28 @@ import net.minecraft.block.material.Material;\n     \t\t\t<@procedureOBJToCode data.onEntityCollides/>\r\n \t\t\t}\r\n \t\t\t</#if>\r\n+\r\n+\t\t\t<#if hasProcedure(data.onRandomUpdateEvent)>\r\n+\t\t\t@OnlyIn(Dist.CLIENT) @Override\r\n+\t\t\tpublic void animateTick(BlockState state, World world, BlockPos pos, Random random) {\r\n+\t\t\t\tsuper.animateTick(state, world, pos, random);\r\n+\t\t\t\tPlayerEntity entity = Minecraft.getInstance().player;\r\n+\t\t\t\tint x = pos.getX();\r\n+\t\t\t\tint y = pos.getY();\r\n+\t\t\t\tint z = pos.getZ();\r\n+\t\t\t\t<@procedureOBJToCode data.onRandomUpdateEvent/>\r\n+\t\t\t}\r\n+\t\t\t</#if>\r\n+\r\n+\t\t\t<#if hasProcedure(data.onDestroyedByExplosion)>\r\n+\t\t\t@Override public void onExplosionDestroy(World world, BlockPos pos, Explosion e) {\r\n+\t\t\t\tsuper.onExplosionDestroy(world, pos, e);\r\n+\t\t\t\tint x = pos.getX();\r\n+\t\t\t\tint y = pos.getY();\r\n+\t\t\t\tint z = pos.getZ();\r\n+\t\t\t\t<@procedureOBJToCode data.onDestroyedByExplosion/>\r\n+\t\t\t}\r\n+\t\t\t</#if>\r\n \t\t}.setRegistryName(\"${registryname}\"));\r\n \r\n \t\t<#if data.generateBucket>\r"
  },
  {
    "sha": "cfad0816c6961dfef175f0d470751cc958a6cfff",
    "filename": "plugins/mcreator-localization/lang/texts.properties",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/MCreator/MCreator/blob/8142f804cd6f30c133845fb08acf8475710de94c/plugins/mcreator-localization/lang/texts.properties",
    "raw_url": "https://github.com/MCreator/MCreator/raw/8142f804cd6f30c133845fb08acf8475710de94c/plugins/mcreator-localization/lang/texts.properties",
    "contents_url": "https://api.github.com/repos/MCreator/MCreator/contents/plugins/mcreator-localization/lang/texts.properties?ref=8142f804cd6f30c133845fb08acf8475710de94c",
    "patch": "@@ -1650,6 +1650,8 @@ elementgui.gamerule.type=Game rule type:\n elementgui.gamerule.default_value=Default value:\n elementgui.gamerule.gamerule_needs_name=Game rule needs a name\n elementgui.gamerule.gamerule_needs_description=Game rule needs a description\n+elementgui.fluid.block_properties=Block properties\n+elementgui.fluid.fluid_properties=Fluid properties\n elementgui.fluid.generate_bucket=Check to enable the fluid bucket\n elementgui.fluid.is_gas_checkbox=Check if this fluid is gas\n elementgui.fluid.when_added=When block added"
  },
  {
    "sha": "c51584df345de5ed8e2acb9d538fcc39eb9b6c6d",
    "filename": "src/main/java/net/mcreator/element/types/Fluid.java",
    "status": "modified",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/MCreator/MCreator/blob/8142f804cd6f30c133845fb08acf8475710de94c/src/main/java/net/mcreator/element/types/Fluid.java",
    "raw_url": "https://github.com/MCreator/MCreator/raw/8142f804cd6f30c133845fb08acf8475710de94c/src/main/java/net/mcreator/element/types/Fluid.java",
    "contents_url": "https://api.github.com/repos/MCreator/MCreator/contents/src/main/java/net/mcreator/element/types/Fluid.java?ref=8142f804cd6f30c133845fb08acf8475710de94c",
    "patch": "@@ -46,6 +46,13 @@\n \tpublic boolean generateBucket;\r\n \tpublic TabEntry creativeTab;\r\n \r\n+\tpublic double resistance;\r\n+\tpublic int luminance;\r\n+\tpublic boolean emissiveRendering;\r\n+\tpublic int flammability;\r\n+\tpublic int fireSpreadSpeed;\r\n+\tpublic String colorOnMap;\r\n+\r\n \tpublic int frequencyOnChunks;\r\n \tpublic List<String> spawnWorldTypes;\r\n \tpublic List<BiomeEntry> restrictionBiomes;\r\n@@ -55,6 +62,8 @@\n \tpublic Procedure onNeighbourChanges;\r\n \tpublic Procedure onTickUpdate;\r\n \tpublic Procedure onEntityCollides;\r\n+\tpublic Procedure onRandomUpdateEvent;\r\n+\tpublic Procedure onDestroyedByExplosion;\r\n \r\n \tprivate Fluid() {\r\n \t\tthis(null);\r\n@@ -63,6 +72,9 @@ private Fluid() {\n \tpublic Fluid(ModElement element) {\r\n \t\tsuper(element);\r\n \r\n+\t\tthis.resistance = 100;\r\n+\t\tthis.colorOnMap = \"DEFAULT\";\r\n+\r\n \t\tthis.spawnWorldTypes = new ArrayList<>();\r\n \t\tthis.frequencyOnChunks = 5;\r\n \t\tthis.restrictionBiomes = new ArrayList<>();\r"
  },
  {
    "sha": "fae799834db4fb330915c0217b91ee4d5236c62e",
    "filename": "src/main/java/net/mcreator/ui/modgui/FluidGUI.java",
    "status": "modified",
    "additions": 85,
    "deletions": 5,
    "changes": 90,
    "blob_url": "https://github.com/MCreator/MCreator/blob/8142f804cd6f30c133845fb08acf8475710de94c/src/main/java/net/mcreator/ui/modgui/FluidGUI.java",
    "raw_url": "https://github.com/MCreator/MCreator/raw/8142f804cd6f30c133845fb08acf8475710de94c/src/main/java/net/mcreator/ui/modgui/FluidGUI.java",
    "contents_url": "https://api.github.com/repos/MCreator/MCreator/contents/src/main/java/net/mcreator/ui/modgui/FluidGUI.java?ref=8142f804cd6f30c133845fb08acf8475710de94c",
    "patch": "@@ -41,9 +41,11 @@\n import org.jetbrains.annotations.Nullable;\r\n \r\n import javax.swing.*;\r\n+import javax.swing.border.TitledBorder;\r\n import java.awt.*;\r\n import java.net.URI;\r\n import java.net.URISyntaxException;\r\n+import java.util.Arrays;\r\n import java.util.Collections;\r\n \r\n public class FluidGUI extends ModElementGUI<Fluid> {\r\n@@ -63,10 +65,19 @@\n \tprivate final JCheckBox isGas = L10N.checkbox(\"elementgui.fluid.is_gas_checkbox\");\r\n \tprivate final JComboBox<String> fluidtype = new JComboBox<>(new String[] { \"WATER\", \"LAVA\" });\r\n \r\n+\tprivate final JSpinner resistance = new JSpinner(new SpinnerNumberModel(100, 0, Integer.MAX_VALUE, 0.5));\r\n+\tprivate final JSpinner luminance = new JSpinner(new SpinnerNumberModel(0, 0, 15, 1));\r\n+\tprivate final JCheckBox emissiveRendering = L10N.checkbox(\"elementgui.common.enable\");\r\n+\tprivate final JSpinner flammability = new JSpinner(new SpinnerNumberModel(0, 0, 1024, 1));\r\n+\tprivate final JSpinner fireSpreadSpeed = new JSpinner(new SpinnerNumberModel(0, 0, 1024, 1));\r\n+\tprivate final JComboBox<String> colorOnMap = new JComboBox<>();\r\n+\r\n \tprivate ProcedureSelector onBlockAdded;\r\n \tprivate ProcedureSelector onNeighbourChanges;\r\n \tprivate ProcedureSelector onTickUpdate;\r\n \tprivate ProcedureSelector onEntityCollides;\r\n+\tprivate ProcedureSelector onRandomUpdateEvent;\r\n+\tprivate ProcedureSelector onDestroyedByExplosion;\r\n \r\n \tprivate ProcedureSelector generateCondition;\r\n \r\n@@ -95,6 +106,12 @@ public FluidGUI(MCreator mcreator, ModElement modElement, boolean editingMode) {\n \t\tonEntityCollides = new ProcedureSelector(this.withEntry(\"block/when_entity_collides\"), mcreator,\r\n \t\t\t\tL10N.t(\"elementgui.fluid.when_entity_collides\"),\r\n \t\t\t\tDependency.fromString(\"x:number/y:number/z:number/world:world/entity:entity\"));\r\n+\t\tonRandomUpdateEvent = new ProcedureSelector(this.withEntry(\"block/display_tick_update\"), mcreator,\r\n+\t\t\t\tL10N.t(\"elementgui.common.event_on_random_update\"), ProcedureSelector.Side.CLIENT,\r\n+\t\t\t\tDependency.fromString(\"x:number/y:number/z:number/world:world/entity:entity\"));\r\n+\t\tonDestroyedByExplosion = new ProcedureSelector(this.withEntry(\"block/when_destroyed_explosion\"), mcreator,\r\n+\t\t\t\tL10N.t(\"elementgui.block.event_on_block_destroyed_by_explosion\"),\r\n+\t\t\t\tDependency.fromString(\"x:number/y:number/z:number/world:world\"));\r\n \r\n \t\tgenerateCondition = new ProcedureSelector(this.withEntry(\"block/generation_condition\"), mcreator,\r\n \t\t\t\t\"Additional generation condition\", VariableElementType.LOGIC,\r\n@@ -169,23 +186,66 @@ public FluidGUI(MCreator mcreator, ModElement modElement, boolean editingMode) {\n \r\n \t\tgenerateBucket.setSelected(true);\r\n \r\n-\t\tJPanel render = new JPanel();\r\n-\t\trender.setLayout(new BoxLayout(render, BoxLayout.PAGE_AXIS));\r\n+\t\tdestal.setBorder(BorderFactory.createTitledBorder(\r\n+\t\t\t\tBorderFactory.createLineBorder((Color) UIManager.get(\"MCreatorLAF.BRIGHT_COLOR\"), 1),\r\n+\t\t\t\tL10N.t(\"elementgui.fluid.fluid_properties\"), TitledBorder.LEADING, TitledBorder.DEFAULT_POSITION,\r\n+\t\t\t\tgetFont().deriveFont(12.0f), (Color) UIManager.get(\"MCreatorLAF.BRIGHT_COLOR\")));\r\n+\r\n+\t\tJPanel blockProperties = new JPanel(new GridLayout(6, 2, 0, 2));\r\n+\t\tblockProperties.setOpaque(false);\r\n+\r\n+\t\tresistance.setOpaque(false);\r\n+\t\tluminance.setOpaque(false);\r\n+\t\temissiveRendering.setOpaque(false);\r\n+\t\tflammability.setOpaque(false);\r\n+\t\tfireSpreadSpeed.setOpaque(false);\r\n+\r\n+\t\tblockProperties.add(HelpUtils\r\n+\t\t\t\t.wrapWithHelpButton(this.withEntry(\"block/resistance\"), L10N.label(\"elementgui.common.resistance\")));\r\n+\t\tblockProperties.add(resistance);\r\n+\r\n+\t\tblockProperties.add(HelpUtils\r\n+\t\t\t\t.wrapWithHelpButton(this.withEntry(\"block/luminance\"), L10N.label(\"elementgui.common.luminance\")));\r\n+\t\tblockProperties.add(luminance);\r\n \r\n-\t\trender.setOpaque(false);\r\n+\t\tblockProperties.add(HelpUtils.wrapWithHelpButton(this.withEntry(\"block/emissive_rendering\"),\r\n+\t\t\t\tL10N.label(\"elementgui.common.emissive_rendering\")));\r\n+\t\tblockProperties.add(emissiveRendering);\r\n+\r\n+\t\tblockProperties.add(HelpUtils\r\n+\t\t\t\t.wrapWithHelpButton(this.withEntry(\"block/flammability\"), L10N.label(\"elementgui.block.flammability\")));\r\n+\t\tblockProperties.add(flammability);\r\n+\r\n+\t\tblockProperties.add(HelpUtils.wrapWithHelpButton(this.withEntry(\"block/fire_spread_speed\"),\r\n+\t\t\t\tL10N.label(\"elementgui.common.fire_spread_speed\")));\r\n+\t\tblockProperties.add(fireSpreadSpeed);\r\n+\r\n+\t\tblockProperties.add(HelpUtils\r\n+\t\t\t\t.wrapWithHelpButton(this.withEntry(\"block/color_on_map\"), L10N.label(\"elementgui.block.color_on_map\")));\r\n+\t\tblockProperties.add(colorOnMap);\r\n+\r\n+\t\tblockProperties.setBorder(BorderFactory.createTitledBorder(\r\n+\t\t\t\tBorderFactory.createLineBorder((Color) UIManager.get(\"MCreatorLAF.BRIGHT_COLOR\"), 1),\r\n+\t\t\t\tL10N.t(\"elementgui.fluid.block_properties\"), TitledBorder.LEADING, TitledBorder.DEFAULT_POSITION,\r\n+\t\t\t\tgetFont().deriveFont(12.0f), (Color) UIManager.get(\"MCreatorLAF.BRIGHT_COLOR\")));\r\n+\r\n+\t\tJComponent properties = PanelUtils.westAndEastElement(destal, PanelUtils.pullElementUp(blockProperties));\r\n+\t\tproperties.setOpaque(false);\r\n \r\n \t\tpane2.setOpaque(false);\r\n \t\tpane1.setOpaque(false);\r\n-\t\tpane2.add(\"Center\", PanelUtils.totalCenterInPanel(destal));\r\n+\t\tpane2.add(\"Center\", PanelUtils.totalCenterInPanel(properties));\r\n \r\n \t\tJPanel events = new JPanel();\r\n \t\tevents.setLayout(new BoxLayout(events, BoxLayout.PAGE_AXIS));\r\n-\t\tJPanel events2 = new JPanel(new GridLayout(1, 4, 8, 8));\r\n+\t\tJPanel events2 = new JPanel(new GridLayout(2, 3, 6, 8));\r\n \t\tevents2.setOpaque(false);\r\n \t\tevents2.add(onBlockAdded);\r\n \t\tevents2.add(onNeighbourChanges);\r\n \t\tevents2.add(onTickUpdate);\r\n \t\tevents2.add(onEntityCollides);\r\n+\t\tevents2.add(onRandomUpdateEvent);\r\n+\t\tevents2.add(onDestroyedByExplosion);\r\n \t\tevents.add(PanelUtils.join(events2));\r\n \t\tevents.setOpaque(false);\r\n \t\tpane4.add(\"Center\", PanelUtils.totalCenterInPanel(events));\r\n@@ -235,11 +295,15 @@ public FluidGUI(MCreator mcreator, ModElement modElement, boolean editingMode) {\n \t\tonNeighbourChanges.refreshListKeepSelected();\r\n \t\tonTickUpdate.refreshListKeepSelected();\r\n \t\tonEntityCollides.refreshListKeepSelected();\r\n+\t\tonRandomUpdateEvent.refreshListKeepSelected();\r\n+\t\tonDestroyedByExplosion.refreshListKeepSelected();\r\n \r\n \t\tgenerateCondition.refreshListKeepSelected();\r\n \r\n \t\tComboBoxUtil.updateComboBoxContents(creativeTab, ElementUtil.loadAllTabs(mcreator.getWorkspace()),\r\n \t\t\t\tnew DataListEntry.Dummy(\"MISC\"));\r\n+\r\n+\t\tComboBoxUtil.updateComboBoxContents(colorOnMap, Arrays.asList(ElementUtil.loadMapColors()), \"DEFAULT\");\r\n \t}\r\n \r\n \t@Override protected AggregatedValidationResult validatePage(int page) {\r\n@@ -256,11 +320,19 @@ public FluidGUI(MCreator mcreator, ModElement modElement, boolean editingMode) {\n \t\tviscosity.setValue(fluid.viscosity);\r\n \t\tisGas.setSelected(fluid.isGas);\r\n \t\tgenerateBucket.setSelected(fluid.generateBucket);\r\n+\t\tresistance.setValue(fluid.resistance);\r\n+\t\tluminance.setValue(fluid.luminance);\r\n+\t\temissiveRendering.setSelected(fluid.emissiveRendering);\r\n+\t\tflammability.setValue(fluid.flammability);\r\n+\t\tfireSpreadSpeed.setValue(fluid.fireSpreadSpeed);\r\n+\t\tcolorOnMap.setSelectedItem(fluid.colorOnMap);\r\n \t\tspawnWorldTypes.setListElements(fluid.spawnWorldTypes);\r\n \t\tonBlockAdded.setSelectedProcedure(fluid.onBlockAdded);\r\n \t\tonNeighbourChanges.setSelectedProcedure(fluid.onNeighbourChanges);\r\n \t\tonTickUpdate.setSelectedProcedure(fluid.onTickUpdate);\r\n \t\tonEntityCollides.setSelectedProcedure(fluid.onEntityCollides);\r\n+\t\tonRandomUpdateEvent.setSelectedProcedure(fluid.onRandomUpdateEvent);\r\n+\t\tonDestroyedByExplosion.setSelectedProcedure(fluid.onDestroyedByExplosion);\r\n \t\tfluidtype.setSelectedItem(fluid.type);\r\n \t\tfrequencyOnChunks.setValue(fluid.frequencyOnChunks);\r\n \t\tgenerateCondition.setSelectedProcedure(fluid.generateCondition);\r\n@@ -279,10 +351,18 @@ public FluidGUI(MCreator mcreator, ModElement modElement, boolean editingMode) {\n \t\tfluid.viscosity = (int) viscosity.getValue();\r\n \t\tfluid.isGas = isGas.isSelected();\r\n \t\tfluid.generateBucket = generateBucket.isSelected();\r\n+\t\tfluid.resistance = (double) resistance.getValue();\r\n+\t\tfluid.luminance = (int) luminance.getValue();\r\n+\t\tfluid.emissiveRendering = emissiveRendering.isSelected();\r\n+\t\tfluid.flammability = (int) flammability.getValue();\r\n+\t\tfluid.fireSpreadSpeed = (int) fireSpreadSpeed.getValue();\r\n+\t\tfluid.colorOnMap = (String) colorOnMap.getSelectedItem();\r\n \t\tfluid.onBlockAdded = onBlockAdded.getSelectedProcedure();\r\n \t\tfluid.onNeighbourChanges = onNeighbourChanges.getSelectedProcedure();\r\n \t\tfluid.onTickUpdate = onTickUpdate.getSelectedProcedure();\r\n \t\tfluid.onEntityCollides = onEntityCollides.getSelectedProcedure();\r\n+\t\tfluid.onRandomUpdateEvent = onRandomUpdateEvent.getSelectedProcedure();\r\n+\t\tfluid.onDestroyedByExplosion = onDestroyedByExplosion.getSelectedProcedure();\r\n \t\tfluid.type = (String) fluidtype.getSelectedItem();\r\n \t\tfluid.spawnWorldTypes = spawnWorldTypes.getListElements();\r\n \t\tfluid.restrictionBiomes = restrictionBiomes.getListElements();\r"
  },
  {
    "sha": "95d06f86128626d2df4710b3317187ada31d9915",
    "filename": "src/test/java/net/mcreator/integration/TestWorkspaceDataProvider.java",
    "status": "modified",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/MCreator/MCreator/blob/8142f804cd6f30c133845fb08acf8475710de94c/src/test/java/net/mcreator/integration/TestWorkspaceDataProvider.java",
    "raw_url": "https://github.com/MCreator/MCreator/raw/8142f804cd6f30c133845fb08acf8475710de94c/src/test/java/net/mcreator/integration/TestWorkspaceDataProvider.java",
    "contents_url": "https://api.github.com/repos/MCreator/MCreator/contents/src/test/java/net/mcreator/integration/TestWorkspaceDataProvider.java?ref=8142f804cd6f30c133845fb08acf8475710de94c",
    "patch": "@@ -342,10 +342,17 @@ private static GeneratableElement getExampleFor(ModElement modElement, Random ra\n \t\t\tfluid.generateBucket = !_true;\r\n \t\t\tfluid.creativeTab = new TabEntry(modElement.getWorkspace(),\r\n \t\t\t\t\tgetRandomDataListEntry(random, ElementUtil.loadAllTabs(modElement.getWorkspace())));\r\n+\t\t\tfluid.resistance = 52.2;\r\n+\t\t\tfluid.emissiveRendering = _true;\r\n+\t\t\tfluid.luminance = 6;\r\n+\t\t\tfluid.flammability = 5;\r\n+\t\t\tfluid.fireSpreadSpeed = 12;\r\n \t\t\tfluid.onBlockAdded = new Procedure(\"procedure1\");\r\n \t\t\tfluid.onNeighbourChanges = new Procedure(\"procedure2\");\r\n \t\t\tfluid.onTickUpdate = new Procedure(\"procedure3\");\r\n \t\t\tfluid.onEntityCollides = new Procedure(\"procedure4\");\r\n+\t\t\tfluid.onRandomUpdateEvent = new Procedure(\"procedure5\");\r\n+\t\t\tfluid.onDestroyedByExplosion = new Procedure(\"procedure6\");\r\n \t\t\tfluid.type = _true ? \"WATER\" : \"LAVA\";\r\n \t\t\tfluid.spawnWorldTypes = new ArrayList<>(Arrays.asList(\"Nether\", \"End\"));\r\n \t\t\tfluid.restrictionBiomes = new ArrayList<>();\r"
  }
]
