[
  {
    "sha": "934133e7238aa522a7182fcbbb60efe0a7ce711a",
    "filename": "computer-core/src/main/java/com/baidu/hugegraph/computer/core/output/ComputerOutput.java",
    "status": "added",
    "additions": 47,
    "deletions": 0,
    "changes": 47,
    "blob_url": "https://github.com/hugegraph-ee/hugegraph-computer/blob/e767ef09c4ef125f0dc77dc13dfcca6d534a25d3/computer-core/src/main/java/com/baidu/hugegraph/computer/core/output/ComputerOutput.java",
    "raw_url": "https://github.com/hugegraph-ee/hugegraph-computer/raw/e767ef09c4ef125f0dc77dc13dfcca6d534a25d3/computer-core/src/main/java/com/baidu/hugegraph/computer/core/output/ComputerOutput.java",
    "contents_url": "https://api.github.com/repos/hugegraph-ee/hugegraph-computer/contents/computer-core/src/main/java/com/baidu/hugegraph/computer/core/output/ComputerOutput.java?ref=e767ef09c4ef125f0dc77dc13dfcca6d534a25d3",
    "patch": "@@ -0,0 +1,47 @@\n+/*\n+ * Copyright 2017 HugeGraph Authors\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements. See the NOTICE file distributed with this\n+ * work for additional information regarding copyright ownership. The ASF\n+ * licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package com.baidu.hugegraph.computer.core.output;\n+\n+import com.baidu.hugegraph.computer.core.config.Config;\n+import com.baidu.hugegraph.computer.core.graph.vertex.Vertex;\n+\n+/**\n+ * Computer output is used to output computer results. There is a output object\n+ * for every partition.\n+ */\n+public interface ComputerOutput {\n+\n+    /**\n+     * Initialize the output. Create connection to target output system.\n+     */\n+    void init(Config config, int partition);\n+\n+    /**\n+     * For each vertex in partition, this method is called regardless\n+     * vertex's status.\n+     */\n+    void write(Vertex vertex);\n+\n+    /**\n+     * Close the connection to target output system. Commit if target output\n+     * required.\n+     */\n+    void close();\n+}"
  }
]
