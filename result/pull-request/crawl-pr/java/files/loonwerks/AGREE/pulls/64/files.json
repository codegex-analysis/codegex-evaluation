[
  {
    "sha": "24f110aadf2d30860edc3c833369ec035d1f266b",
    "filename": "com.rockwellcollins.atc.agree.analysis/src/com/rockwellcollins/atc/agree/analysis/AgreeRenaming.java",
    "status": "modified",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/loonwerks/AGREE/blob/8fcb32160c4012a37c0381e923c9b27564a609d0/com.rockwellcollins.atc.agree.analysis/src/com/rockwellcollins/atc/agree/analysis/AgreeRenaming.java",
    "raw_url": "https://github.com/loonwerks/AGREE/raw/8fcb32160c4012a37c0381e923c9b27564a609d0/com.rockwellcollins.atc.agree.analysis/src/com/rockwellcollins/atc/agree/analysis/AgreeRenaming.java",
    "contents_url": "https://api.github.com/repos/loonwerks/AGREE/contents/com.rockwellcollins.atc.agree.analysis/src/com/rockwellcollins/atc/agree/analysis/AgreeRenaming.java?ref=8fcb32160c4012a37c0381e923c9b27564a609d0",
    "patch": "@@ -1,7 +1,9 @@\n package com.rockwellcollins.atc.agree.analysis;\n \n import java.util.HashMap;\n+import java.util.HashSet;\n import java.util.Map;\n+import java.util.Set;\n \n import org.eclipse.emf.ecore.EObject;\n \n@@ -38,6 +40,7 @@\n \tprivate Map<String, String> supportRenames = new HashMap<>();\n \tprivate Map<String, String> supportRefStrings = new HashMap<>();\n \tprivate Map<String, EObject> refMap;\n+\tprivate Set<String> invertedProperties = new HashSet<>();\n \n \tpublic AgreeRenaming() {\n \t\trefMap = new HashMap<>();\n@@ -95,6 +98,18 @@ public void addToRefMap(String str, EObject ref) {\n \t\treturn refMap;\n \t}\n \n+\tpublic void addInvertedProperty(String propertyName) {\n+\t\tinvertedProperties.add(propertyName);\n+\t}\n+\n+\tpublic boolean propertyIsInverted(String propertyName) {\n+\t\treturn invertedProperties.contains(propertyName);\n+\t}\n+\n+\tpublic Set<String> getInvertedProperties() {\n+\t\treturn invertedProperties;\n+\t}\n+\n \tpublic String forceRename(String original) {\n \n \t\t// magic to remove the prefix"
  },
  {
    "sha": "a312a415346850dafba48e57967810e01ecca845",
    "filename": "com.rockwellcollins.atc.agree.analysis/src/com/rockwellcollins/atc/agree/analysis/ast/AgreeASTBuilder.java",
    "status": "modified",
    "additions": 27,
    "deletions": 0,
    "changes": 27,
    "blob_url": "https://github.com/loonwerks/AGREE/blob/8fcb32160c4012a37c0381e923c9b27564a609d0/com.rockwellcollins.atc.agree.analysis/src/com/rockwellcollins/atc/agree/analysis/ast/AgreeASTBuilder.java",
    "raw_url": "https://github.com/loonwerks/AGREE/raw/8fcb32160c4012a37c0381e923c9b27564a609d0/com.rockwellcollins.atc.agree.analysis/src/com/rockwellcollins/atc/agree/analysis/ast/AgreeASTBuilder.java",
    "contents_url": "https://api.github.com/repos/loonwerks/AGREE/contents/com.rockwellcollins.atc.agree.analysis/src/com/rockwellcollins/atc/agree/analysis/ast/AgreeASTBuilder.java?ref=8fcb32160c4012a37c0381e923c9b27564a609d0",
    "patch": "@@ -109,6 +109,7 @@\n import com.rockwellcollins.atc.agree.agree.PreExpr;\n import com.rockwellcollins.atc.agree.agree.PrevExpr;\n import com.rockwellcollins.atc.agree.agree.PropertyStatement;\n+import com.rockwellcollins.atc.agree.agree.ReachableStatement;\n import com.rockwellcollins.atc.agree.agree.RealCast;\n import com.rockwellcollins.atc.agree.agree.RealLitExpr;\n import com.rockwellcollins.atc.agree.agree.RecordDef;\n@@ -359,6 +360,7 @@ private AgreeNode getAgreeNode(ComponentInstance compInst, boolean isTop) {\n \t\t\t\t\t\tuserDefinedConections.addAll(getConnectionStatements(contract.getSpecs()));\n \n \t\t\t\t\t\tlemmas.addAll(getLemmaStatements(contract.getSpecs()));\n+\t\t\t\t\t\tlemmas.addAll(getReachableStatements(contract.getSpecs(), portRewriteMap));\n \t\t\t\t\t\taddLustreNodes(contract.getSpecs());\n \t\t\t\t\t\tgatherLustreTypes(contract.getSpecs());\n \t\t\t\t\t\t// the clock constraints contain other nodes that we add\n@@ -454,6 +456,7 @@ private AgreeNode getAgreeNode(ComponentInstance compInst, boolean isTop) {\n \t\t\t\tif (!isMonolithic || isTop || !hasSubcomponents) {\n \t\t\t\t\tassumptions.addAll(getAssumptionStatements(contract.getSpecs(), portRewriteMap));\n \t\t\t\t\tguarantees.addAll(getGuaranteeStatements(contract.getSpecs(), portRewriteMap));\n+\t\t\t\t\tlemmas.addAll(getReachableStatements(contract.getSpecs(), portRewriteMap));\n \t\t\t\t}\n \n \t\t\t\t// Count eq statements with expressions as assertions\n@@ -607,6 +610,30 @@ private GatheredVariablesAndConstraints getAgreeInputVars(List<SpecStatement> sp\n \t\treturn lemmas;\n \t}\n \n+\tprivate List<AgreeStatement> getReachableStatements(EList<SpecStatement> specs,\n+\t\t\tMap<String, jkind.lustre.Expr> rewriteMap) {\n+\t\tList<AgreeStatement> reachables = new ArrayList<>();\n+\t\tfor (SpecStatement spec : specs) {\n+\t\t\tif (spec instanceof ReachableStatement) {\n+\t\t\t\tReachableStatement reachable = (ReachableStatement) spec;\n+\t\t\t\tif (reachable.getExpr() != null) {\n+\t\t\t\t\treachables.add(new AgreeStatement(reachable.getStr(),\n+\t\t\t\t\t\t\tnew jkind.lustre.UnaryExpr(jkind.lustre.UnaryOp.NOT,\n+\t\t\t\t\t\t\t\t\tdoSwitch(reachable.getExpr()).accept(new SubstitutionVisitor(rewriteMap))),\n+\t\t\t\t\t\t\tspec));\n+\t\t\t\t} else {\n+\t\t\t\t\tPatternStatement pattern = reachable.getPattern();\n+\t\t\t\t\tAgreeStatement patStatement = new AgreePatternBuilder(reachable.getStr(), reachable, this)\n+\t\t\t\t\t\t\t.doSwitch(pattern);\n+\t\t\t\t\tpatStatement.expr = new jkind.lustre.UnaryExpr(jkind.lustre.UnaryOp.NOT,\n+\t\t\t\t\t\t\tpatStatement.expr.accept(new SubstitutionVisitor(rewriteMap)));\n+\t\t\t\t\treachables.add(patStatement);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t\treturn reachables;\n+\t}\n+\n \tprivate TimingModel getTimingModel(EList<SpecStatement> specs) {\n \t\tfor (SpecStatement spec : specs) {\n \t\t\tif (spec instanceof MNSynchStatement) {"
  },
  {
    "sha": "4470da19630a34418bdcee4cb98001aaa9f5dac6",
    "filename": "com.rockwellcollins.atc.agree.analysis/src/com/rockwellcollins/atc/agree/analysis/handlers/VerifyHandler.java",
    "status": "modified",
    "additions": 5,
    "deletions": 1,
    "changes": 6,
    "blob_url": "https://github.com/loonwerks/AGREE/blob/8fcb32160c4012a37c0381e923c9b27564a609d0/com.rockwellcollins.atc.agree.analysis/src/com/rockwellcollins/atc/agree/analysis/handlers/VerifyHandler.java",
    "raw_url": "https://github.com/loonwerks/AGREE/raw/8fcb32160c4012a37c0381e923c9b27564a609d0/com.rockwellcollins.atc.agree.analysis/src/com/rockwellcollins/atc/agree/analysis/handlers/VerifyHandler.java",
    "contents_url": "https://api.github.com/repos/loonwerks/AGREE/contents/com.rockwellcollins.atc.agree.analysis/src/com/rockwellcollins/atc/agree/analysis/handlers/VerifyHandler.java?ref=8fcb32160c4012a37c0381e923c9b27564a609d0",
    "patch": "@@ -12,6 +12,7 @@\n import java.util.Queue;\n import java.util.Set;\n import java.util.concurrent.atomic.AtomicReference;\n+import java.util.stream.Collectors;\n \n import org.eclipse.core.resources.IFile;\n import org.eclipse.core.resources.IResource;\n@@ -392,7 +393,10 @@ private AnalysisResult createVerification(String resultName, ComponentInstance c\n \t\t\tresult = new JRealizabilityResult(resultName, renaming);\n \t\t\tbreak;\n \t\tcase AssumeGuarantee:\n-\t\t\tresult = new JKindResult(resultName, properties, renaming);\n+\t\t\tfinal Set<String> invertedProperties = renaming.getInvertedProperties();\n+\t\t\tList<Boolean> invertedPropertyMask = mainNode.properties.stream().map(p -> invertedProperties.contains(p))\n+\t\t\t\t\t.collect(Collectors.toList());\n+\t\t\tresult = new JKindResult(resultName, properties, invertedPropertyMask, renaming);\n \t\t\tbreak;\n \t\tdefault:\n \t\t\tthrow new AgreeException(\"Unhandled Analysis Type\");"
  },
  {
    "sha": "8122a864115b3d705fc8b184c9ddf9547875c869",
    "filename": "com.rockwellcollins.atc.agree.analysis/src/com/rockwellcollins/atc/agree/analysis/lustre/visitors/RenamingVisitor.java",
    "status": "modified",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/loonwerks/AGREE/blob/8fcb32160c4012a37c0381e923c9b27564a609d0/com.rockwellcollins.atc.agree.analysis/src/com/rockwellcollins/atc/agree/analysis/lustre/visitors/RenamingVisitor.java",
    "raw_url": "https://github.com/loonwerks/AGREE/raw/8fcb32160c4012a37c0381e923c9b27564a609d0/com.rockwellcollins.atc.agree.analysis/src/com/rockwellcollins/atc/agree/analysis/lustre/visitors/RenamingVisitor.java",
    "contents_url": "https://api.github.com/repos/loonwerks/AGREE/contents/com.rockwellcollins.atc.agree.analysis/src/com/rockwellcollins/atc/agree/analysis/lustre/visitors/RenamingVisitor.java?ref=8fcb32160c4012a37c0381e923c9b27564a609d0",
    "patch": "@@ -24,6 +24,7 @@\n import com.rockwellcollins.atc.agree.agree.LemmaStatement;\n import com.rockwellcollins.atc.agree.agree.PrimType;\n import com.rockwellcollins.atc.agree.agree.PropertyStatement;\n+import com.rockwellcollins.atc.agree.agree.ReachableStatement;\n import com.rockwellcollins.atc.agree.analysis.AgreeException;\n import com.rockwellcollins.atc.agree.analysis.AgreeLayout;\n import com.rockwellcollins.atc.agree.analysis.AgreeLayout.SigType;\n@@ -188,6 +189,15 @@ private String getReferenceStr(AgreeVar var) {\n \t\t\t\tid = \"[\" + id + \"] \";\n \t\t\t}\n \t\t\treturn prefix + \" lemma: \" + id + ((LemmaStatement) reference).getStr();\n+\t\t} else if (reference instanceof ReachableStatement) {\n+\t\t\trenaming.addInvertedProperty(var.id);\n+\t\t\tString id = ((ReachableStatement) reference).getName();\n+\t\t\tif (id == null || id.isEmpty()) {\n+\t\t\t\tid = \"\";\n+\t\t\t} else {\n+\t\t\t\tid = \"[\" + id + \"] \";\n+\t\t\t}\n+\t\t\treturn prefix + \" reachable: \" + id + ((ReachableStatement) reference).getStr();\n \t\t} else if (reference instanceof AssertStatement) {\n \t\t\tthrow new AgreeException(\"We really didn't expect to see an assert statement here\");\n \t\t} else if (reference instanceof Arg) {"
  },
  {
    "sha": "b3e2ad83c7b959aaef5415b3493c771a6246d6d3",
    "filename": "com.rockwellcollins.atc.agree.doc/src/user-guide/03.06-Statements.markdown",
    "status": "modified",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/loonwerks/AGREE/blob/8fcb32160c4012a37c0381e923c9b27564a609d0/com.rockwellcollins.atc.agree.doc/src/user-guide/03.06-Statements.markdown",
    "raw_url": "https://github.com/loonwerks/AGREE/raw/8fcb32160c4012a37c0381e923c9b27564a609d0/com.rockwellcollins.atc.agree.doc/src/user-guide/03.06-Statements.markdown",
    "contents_url": "https://api.github.com/repos/loonwerks/AGREE/contents/com.rockwellcollins.atc.agree.doc/src/user-guide/03.06-Statements.markdown?ref=8fcb32160c4012a37c0381e923c9b27564a609d0",
    "patch": "@@ -303,6 +303,26 @@ unlike guarantees, lemmas are not made visible when trying to prove\n properties at the next level of abstraction. Subcomponent lemmas are not\n used to prove other subcomponent guarantees or system guarantees.\n \n+### Advanced Topic: Reachable Statements{#sec:reachable_statements}\n+\n+Reachable statements may be used to check for vacuity of a guarantee or lemma\n+statement.  The typical use is where a guarantee statement is written in the\n+form of an implication.  The reachable statement may be used to check that the\n+antecedent (the left hand side) of the guarantee statement is reachable in at\n+least one possible combination of inputs to the model.\n+\n+Like lemma statments, reachable statements do not affect the compositional\n+contract analysis, but may assist the model checker when performing\n+verification.  That is, reachable statements  are not used to prove other\n+subcomponent guarantees or system guarantees.\n+\n+An example would be:\n+\n+~~~\n+reachable \"drug flow might not be stopped\" :\n+    (not drug_flow_stopped);\n+~~~\n+\n ### Advanced Topic: Linearization Definitions{#sec:linearization_definitions}\n \n The linearization definition provides the declaration of a linear"
  },
  {
    "sha": "8d5d3f95575f4e0e3f076f7290ed2b2a55fb33f0",
    "filename": "com.rockwellcollins.atc.agree.ui/src-gen/com/rockwellcollins/atc/agree/ui/contentassist/antlr/AgreeParser.java",
    "status": "modified",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/loonwerks/AGREE/blob/8fcb32160c4012a37c0381e923c9b27564a609d0/com.rockwellcollins.atc.agree.ui/src-gen/com/rockwellcollins/atc/agree/ui/contentassist/antlr/AgreeParser.java",
    "raw_url": "https://github.com/loonwerks/AGREE/raw/8fcb32160c4012a37c0381e923c9b27564a609d0/com.rockwellcollins.atc.agree.ui/src-gen/com/rockwellcollins/atc/agree/ui/contentassist/antlr/AgreeParser.java",
    "contents_url": "https://api.github.com/repos/loonwerks/AGREE/contents/com.rockwellcollins.atc.agree.ui/src-gen/com/rockwellcollins/atc/agree/ui/contentassist/antlr/AgreeParser.java?ref=8fcb32160c4012a37c0381e923c9b27564a609d0",
    "patch": "@@ -45,6 +45,7 @@ protected String getRuleName(AbstractElement element) {\n \t\t\t\t\tput(grammarAccess.getNamedSpecStatementAccess().getAlternatives_1_5(), \"rule__NamedSpecStatement__Alternatives_1_5\");\n \t\t\t\t\tput(grammarAccess.getNamedSpecStatementAccess().getAlternatives_2_3(), \"rule__NamedSpecStatement__Alternatives_2_3\");\n \t\t\t\t\tput(grammarAccess.getNamedSpecStatementAccess().getAlternatives_3_5(), \"rule__NamedSpecStatement__Alternatives_3_5\");\n+\t\t\t\t\tput(grammarAccess.getNamedSpecStatementAccess().getAlternatives_4_5(), \"rule__NamedSpecStatement__Alternatives_4_5\");\n \t\t\t\t\tput(grammarAccess.getPatternStatementAccess().getAlternatives(), \"rule__PatternStatement__Alternatives\");\n \t\t\t\t\tput(grammarAccess.getWhenStatementAccess().getAlternatives(), \"rule__WhenStatement__Alternatives\");\n \t\t\t\t\tput(grammarAccess.getWheneverStatementAccess().getAlternatives(), \"rule__WheneverStatement__Alternatives\");\n@@ -96,6 +97,7 @@ protected String getRuleName(AbstractElement element) {\n \t\t\t\t\tput(grammarAccess.getNamedSpecStatementAccess().getGroup_2(), \"rule__NamedSpecStatement__Group_2__0\");\n \t\t\t\t\tput(grammarAccess.getNamedSpecStatementAccess().getGroup_2_2(), \"rule__NamedSpecStatement__Group_2_2__0\");\n \t\t\t\t\tput(grammarAccess.getNamedSpecStatementAccess().getGroup_3(), \"rule__NamedSpecStatement__Group_3__0\");\n+\t\t\t\t\tput(grammarAccess.getNamedSpecStatementAccess().getGroup_4(), \"rule__NamedSpecStatement__Group_4__0\");\n \t\t\t\t\tput(grammarAccess.getPatternStatementAccess().getGroup_1(), \"rule__PatternStatement__Group_1__0\");\n \t\t\t\t\tput(grammarAccess.getWhenStatementAccess().getGroup_0(), \"rule__WhenStatement__Group_0__0\");\n \t\t\t\t\tput(grammarAccess.getWhenStatementAccess().getGroup_0_0(), \"rule__WhenStatement__Group_0_0__0\");\n@@ -363,6 +365,10 @@ protected String getRuleName(AbstractElement element) {\n \t\t\t\t\tput(grammarAccess.getNamedSpecStatementAccess().getStrAssignment_3_3(), \"rule__NamedSpecStatement__StrAssignment_3_3\");\n \t\t\t\t\tput(grammarAccess.getNamedSpecStatementAccess().getExprAssignment_3_5_0(), \"rule__NamedSpecStatement__ExprAssignment_3_5_0\");\n \t\t\t\t\tput(grammarAccess.getNamedSpecStatementAccess().getPatternAssignment_3_5_1(), \"rule__NamedSpecStatement__PatternAssignment_3_5_1\");\n+\t\t\t\t\tput(grammarAccess.getNamedSpecStatementAccess().getNameAssignment_4_2(), \"rule__NamedSpecStatement__NameAssignment_4_2\");\n+\t\t\t\t\tput(grammarAccess.getNamedSpecStatementAccess().getStrAssignment_4_3(), \"rule__NamedSpecStatement__StrAssignment_4_3\");\n+\t\t\t\t\tput(grammarAccess.getNamedSpecStatementAccess().getExprAssignment_4_5_0(), \"rule__NamedSpecStatement__ExprAssignment_4_5_0\");\n+\t\t\t\t\tput(grammarAccess.getNamedSpecStatementAccess().getPatternAssignment_4_5_1(), \"rule__NamedSpecStatement__PatternAssignment_4_5_1\");\n \t\t\t\t\tput(grammarAccess.getPatternStatementAccess().getExprAssignment_1_2(), \"rule__PatternStatement__ExprAssignment_1_2\");\n \t\t\t\t\tput(grammarAccess.getWhenStatementAccess().getConditionAssignment_0_0_0_2(), \"rule__WhenStatement__ConditionAssignment_0_0_0_2\");\n \t\t\t\t\tput(grammarAccess.getWhenStatementAccess().getConditionIntervalAssignment_0_2(), \"rule__WhenStatement__ConditionIntervalAssignment_0_2\");"
  },
  {
    "sha": "d0d8e8311a36adb55337319d67d219fcbc92c8f1",
    "filename": "com.rockwellcollins.atc.agree.ui/src-gen/com/rockwellcollins/atc/agree/ui/contentassist/antlr/internal/InternalAgreeParser.g",
    "status": "modified",
    "additions": 313,
    "deletions": 0,
    "changes": 313,
    "blob_url": "https://github.com/loonwerks/AGREE/blob/8fcb32160c4012a37c0381e923c9b27564a609d0/com.rockwellcollins.atc.agree.ui/src-gen/com/rockwellcollins/atc/agree/ui/contentassist/antlr/internal/InternalAgreeParser.g",
    "raw_url": "https://github.com/loonwerks/AGREE/raw/8fcb32160c4012a37c0381e923c9b27564a609d0/com.rockwellcollins.atc.agree.ui/src-gen/com/rockwellcollins/atc/agree/ui/contentassist/antlr/internal/InternalAgreeParser.g",
    "contents_url": "https://api.github.com/repos/loonwerks/AGREE/contents/com.rockwellcollins.atc.agree.ui/src-gen/com/rockwellcollins/atc/agree/ui/contentassist/antlr/internal/InternalAgreeParser.g?ref=8fcb32160c4012a37c0381e923c9b27564a609d0",
    "patch": "@@ -155,6 +155,7 @@ import com.rockwellcollins.atc.agree.services.AgreeGrammarAccess;\n \t\ttokenNameToValue.put(\"Initially\", \"'initially'\");\n \t\ttokenNameToValue.put(\"No_simult\", \"'no_simult'\");\n \t\ttokenNameToValue.put(\"Parameter\", \"'parameter'\");\n+\t\ttokenNameToValue.put(\"Reachable\", \"'reachable'\");\n \t\ttokenNameToValue.put(\"Reference\", \"'reference'\");\n \t\ttokenNameToValue.put(\"Synchrony\", \"'synchrony'\");\n \t\ttokenNameToValue.put(\"Classifier\", \"'classifier'\");\n@@ -3178,6 +3179,12 @@ rule__NamedSpecStatement__Alternatives\n { before(grammarAccess.getNamedSpecStatementAccess().getGroup_3()); }\n (rule__NamedSpecStatement__Group_3__0)\n { after(grammarAccess.getNamedSpecStatementAccess().getGroup_3()); }\n+)\n+\n+    |(\n+{ before(grammarAccess.getNamedSpecStatementAccess().getGroup_4()); }\n+(rule__NamedSpecStatement__Group_4__0)\n+{ after(grammarAccess.getNamedSpecStatementAccess().getGroup_4()); }\n )\n \n ;\n@@ -3273,6 +3280,28 @@ finally {\n \trestoreStackSize(stackSize);\n }\n \n+rule__NamedSpecStatement__Alternatives_4_5\n+    @init {\n+\t\tint stackSize = keepStackSize();\n+    }\n+:\n+(\n+{ before(grammarAccess.getNamedSpecStatementAccess().getExprAssignment_4_5_0()); }\n+(rule__NamedSpecStatement__ExprAssignment_4_5_0)\n+{ after(grammarAccess.getNamedSpecStatementAccess().getExprAssignment_4_5_0()); }\n+)\n+\n+    |(\n+{ before(grammarAccess.getNamedSpecStatementAccess().getPatternAssignment_4_5_1()); }\n+(rule__NamedSpecStatement__PatternAssignment_4_5_1)\n+{ after(grammarAccess.getNamedSpecStatementAccess().getPatternAssignment_4_5_1()); }\n+)\n+\n+;\n+finally {\n+\trestoreStackSize(stackSize);\n+}\n+\n rule__PatternStatement__Alternatives\n     @init {\n \t\tint stackSize = keepStackSize();\n@@ -6278,6 +6307,230 @@ finally {\n \n \n \n+rule__NamedSpecStatement__Group_4__0\n+    @init {\n+\t\tint stackSize = keepStackSize();\n+    }\n+:\n+\trule__NamedSpecStatement__Group_4__0__Impl\n+\trule__NamedSpecStatement__Group_4__1\n+;\n+finally {\n+\trestoreStackSize(stackSize);\n+}\n+\n+rule__NamedSpecStatement__Group_4__0__Impl\n+    @init {\n+\t\tint stackSize = keepStackSize();\n+    }\n+:\n+(\n+{ before(grammarAccess.getNamedSpecStatementAccess().getReachableStatementAction_4_0()); }\n+(\n+\n+)\n+{ after(grammarAccess.getNamedSpecStatementAccess().getReachableStatementAction_4_0()); }\n+)\n+\n+;\n+finally {\n+\trestoreStackSize(stackSize);\n+}\n+\n+\n+rule__NamedSpecStatement__Group_4__1\n+    @init {\n+\t\tint stackSize = keepStackSize();\n+    }\n+:\n+\trule__NamedSpecStatement__Group_4__1__Impl\n+\trule__NamedSpecStatement__Group_4__2\n+;\n+finally {\n+\trestoreStackSize(stackSize);\n+}\n+\n+rule__NamedSpecStatement__Group_4__1__Impl\n+    @init {\n+\t\tint stackSize = keepStackSize();\n+    }\n+:\n+(\n+{ before(grammarAccess.getNamedSpecStatementAccess().getReachableKeyword_4_1()); }\n+\n+\tReachable \n+\n+{ after(grammarAccess.getNamedSpecStatementAccess().getReachableKeyword_4_1()); }\n+)\n+\n+;\n+finally {\n+\trestoreStackSize(stackSize);\n+}\n+\n+\n+rule__NamedSpecStatement__Group_4__2\n+    @init {\n+\t\tint stackSize = keepStackSize();\n+    }\n+:\n+\trule__NamedSpecStatement__Group_4__2__Impl\n+\trule__NamedSpecStatement__Group_4__3\n+;\n+finally {\n+\trestoreStackSize(stackSize);\n+}\n+\n+rule__NamedSpecStatement__Group_4__2__Impl\n+    @init {\n+\t\tint stackSize = keepStackSize();\n+    }\n+:\n+(\n+{ before(grammarAccess.getNamedSpecStatementAccess().getNameAssignment_4_2()); }\n+(rule__NamedSpecStatement__NameAssignment_4_2)?\n+{ after(grammarAccess.getNamedSpecStatementAccess().getNameAssignment_4_2()); }\n+)\n+\n+;\n+finally {\n+\trestoreStackSize(stackSize);\n+}\n+\n+\n+rule__NamedSpecStatement__Group_4__3\n+    @init {\n+\t\tint stackSize = keepStackSize();\n+    }\n+:\n+\trule__NamedSpecStatement__Group_4__3__Impl\n+\trule__NamedSpecStatement__Group_4__4\n+;\n+finally {\n+\trestoreStackSize(stackSize);\n+}\n+\n+rule__NamedSpecStatement__Group_4__3__Impl\n+    @init {\n+\t\tint stackSize = keepStackSize();\n+    }\n+:\n+(\n+{ before(grammarAccess.getNamedSpecStatementAccess().getStrAssignment_4_3()); }\n+(rule__NamedSpecStatement__StrAssignment_4_3)\n+{ after(grammarAccess.getNamedSpecStatementAccess().getStrAssignment_4_3()); }\n+)\n+\n+;\n+finally {\n+\trestoreStackSize(stackSize);\n+}\n+\n+\n+rule__NamedSpecStatement__Group_4__4\n+    @init {\n+\t\tint stackSize = keepStackSize();\n+    }\n+:\n+\trule__NamedSpecStatement__Group_4__4__Impl\n+\trule__NamedSpecStatement__Group_4__5\n+;\n+finally {\n+\trestoreStackSize(stackSize);\n+}\n+\n+rule__NamedSpecStatement__Group_4__4__Impl\n+    @init {\n+\t\tint stackSize = keepStackSize();\n+    }\n+:\n+(\n+{ before(grammarAccess.getNamedSpecStatementAccess().getColonKeyword_4_4()); }\n+\n+\tColon \n+\n+{ after(grammarAccess.getNamedSpecStatementAccess().getColonKeyword_4_4()); }\n+)\n+\n+;\n+finally {\n+\trestoreStackSize(stackSize);\n+}\n+\n+\n+rule__NamedSpecStatement__Group_4__5\n+    @init {\n+\t\tint stackSize = keepStackSize();\n+    }\n+:\n+\trule__NamedSpecStatement__Group_4__5__Impl\n+\trule__NamedSpecStatement__Group_4__6\n+;\n+finally {\n+\trestoreStackSize(stackSize);\n+}\n+\n+rule__NamedSpecStatement__Group_4__5__Impl\n+    @init {\n+\t\tint stackSize = keepStackSize();\n+    }\n+:\n+(\n+{ before(grammarAccess.getNamedSpecStatementAccess().getAlternatives_4_5()); }\n+(rule__NamedSpecStatement__Alternatives_4_5)\n+{ after(grammarAccess.getNamedSpecStatementAccess().getAlternatives_4_5()); }\n+)\n+\n+;\n+finally {\n+\trestoreStackSize(stackSize);\n+}\n+\n+\n+rule__NamedSpecStatement__Group_4__6\n+    @init {\n+\t\tint stackSize = keepStackSize();\n+    }\n+:\n+\trule__NamedSpecStatement__Group_4__6__Impl\n+;\n+finally {\n+\trestoreStackSize(stackSize);\n+}\n+\n+rule__NamedSpecStatement__Group_4__6__Impl\n+    @init {\n+\t\tint stackSize = keepStackSize();\n+    }\n+:\n+(\n+{ before(grammarAccess.getNamedSpecStatementAccess().getSemicolonKeyword_4_6()); }\n+\n+\tSemicolon \n+\n+{ after(grammarAccess.getNamedSpecStatementAccess().getSemicolonKeyword_4_6()); }\n+)\n+\n+;\n+finally {\n+\trestoreStackSize(stackSize);\n+}\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n rule__PatternStatement__Group_1__0\n     @init {\n \t\tint stackSize = keepStackSize();\n@@ -30323,6 +30576,66 @@ finally {\n \trestoreStackSize(stackSize);\n }\n \n+rule__NamedSpecStatement__NameAssignment_4_2\n+    @init {\n+\t\tint stackSize = keepStackSize();\n+    }\n+:\n+(\n+{ before(grammarAccess.getNamedSpecStatementAccess().getNameIDTerminalRuleCall_4_2_0()); }\n+\tRULE_ID{ after(grammarAccess.getNamedSpecStatementAccess().getNameIDTerminalRuleCall_4_2_0()); }\n+)\n+\n+;\n+finally {\n+\trestoreStackSize(stackSize);\n+}\n+\n+rule__NamedSpecStatement__StrAssignment_4_3\n+    @init {\n+\t\tint stackSize = keepStackSize();\n+    }\n+:\n+(\n+{ before(grammarAccess.getNamedSpecStatementAccess().getStrSTRINGTerminalRuleCall_4_3_0()); }\n+\tRULE_STRING{ after(grammarAccess.getNamedSpecStatementAccess().getStrSTRINGTerminalRuleCall_4_3_0()); }\n+)\n+\n+;\n+finally {\n+\trestoreStackSize(stackSize);\n+}\n+\n+rule__NamedSpecStatement__ExprAssignment_4_5_0\n+    @init {\n+\t\tint stackSize = keepStackSize();\n+    }\n+:\n+(\n+{ before(grammarAccess.getNamedSpecStatementAccess().getExprExprParserRuleCall_4_5_0_0()); }\n+\truleExpr{ after(grammarAccess.getNamedSpecStatementAccess().getExprExprParserRuleCall_4_5_0_0()); }\n+)\n+\n+;\n+finally {\n+\trestoreStackSize(stackSize);\n+}\n+\n+rule__NamedSpecStatement__PatternAssignment_4_5_1\n+    @init {\n+\t\tint stackSize = keepStackSize();\n+    }\n+:\n+(\n+{ before(grammarAccess.getNamedSpecStatementAccess().getPatternPatternStatementParserRuleCall_4_5_1_0()); }\n+\trulePatternStatement{ after(grammarAccess.getNamedSpecStatementAccess().getPatternPatternStatementParserRuleCall_4_5_1_0()); }\n+)\n+\n+;\n+finally {\n+\trestoreStackSize(stackSize);\n+}\n+\n rule__PatternStatement__ExprAssignment_1_2\n     @init {\n \t\tint stackSize = keepStackSize();"
  },
  {
    "sha": "655f6c21b470b3196c0aa38756465bbb8fdc0cdd",
    "filename": "com.rockwellcollins.atc.agree.ui/src-gen/com/rockwellcollins/atc/agree/ui/contentassist/antlr/internal/InternalAgreeParser.java",
    "status": "modified",
    "additions": 13083,
    "deletions": 12184,
    "changes": 25267,
    "blob_url": "https://github.com/loonwerks/AGREE/blob/8fcb32160c4012a37c0381e923c9b27564a609d0/com.rockwellcollins.atc.agree.ui/src-gen/com/rockwellcollins/atc/agree/ui/contentassist/antlr/internal/InternalAgreeParser.java",
    "raw_url": "https://github.com/loonwerks/AGREE/raw/8fcb32160c4012a37c0381e923c9b27564a609d0/com.rockwellcollins.atc.agree.ui/src-gen/com/rockwellcollins/atc/agree/ui/contentassist/antlr/internal/InternalAgreeParser.java",
    "contents_url": "https://api.github.com/repos/loonwerks/AGREE/contents/com.rockwellcollins.atc.agree.ui/src-gen/com/rockwellcollins/atc/agree/ui/contentassist/antlr/internal/InternalAgreeParser.java?ref=8fcb32160c4012a37c0381e923c9b27564a609d0"
  },
  {
    "sha": "06c707ab8db615407fb542a488842c3adb093eca",
    "filename": "com.rockwellcollins.atc.agree.ui/src-gen/com/rockwellcollins/atc/agree/ui/contentassist/antlr/internal/InternalAgreeParser.tokens",
    "status": "modified",
    "additions": 127,
    "deletions": 126,
    "changes": 253,
    "blob_url": "https://github.com/loonwerks/AGREE/blob/8fcb32160c4012a37c0381e923c9b27564a609d0/com.rockwellcollins.atc.agree.ui/src-gen/com/rockwellcollins/atc/agree/ui/contentassist/antlr/internal/InternalAgreeParser.tokens",
    "raw_url": "https://github.com/loonwerks/AGREE/raw/8fcb32160c4012a37c0381e923c9b27564a609d0/com.rockwellcollins.atc.agree.ui/src-gen/com/rockwellcollins/atc/agree/ui/contentassist/antlr/internal/InternalAgreeParser.tokens",
    "contents_url": "https://api.github.com/repos/loonwerks/AGREE/contents/com.rockwellcollins.atc.agree.ui/src-gen/com/rockwellcollins/atc/agree/ui/contentassist/antlr/internal/InternalAgreeParser.tokens?ref=8fcb32160c4012a37c0381e923c9b27564a609d0",
    "patch": "@@ -1,138 +1,139 @@\n Agree_input=7\n-Always=40\n-And=87\n-Applies=30\n-Assert=41\n-Assign=42\n-Assume=43\n-Asterisk=115\n+Always=41\n+And=88\n+Applies=31\n+Assert=42\n+Assign=43\n+Assume=44\n+Asterisk=116\n Asynchronous=6\n-Becomes=31\n-Binding=32\n-Bool=67\n-Calendar=18\n-CircumflexAccent=128\n+Becomes=32\n+Binding=33\n+Bool=68\n+Calendar=19\n+CircumflexAccent=129\n Classifier=9\n-Colon=121\n-ColonColon=100\n-ColonEqualsSign=101\n-Comma=117\n-Compute=33\n+Colon=122\n+ColonColon=101\n+ColonEqualsSign=102\n+Comma=118\n+Compute=34\n Condition=11\n Connection=10\n-Const=54\n-Constant=19\n-Contract=20\n-Delta=55\n-Div=88\n-During=44\n-Each=68\n-Else=69\n-Enum=70\n-Eq=107\n-EqualsSign=124\n-EqualsSignGreaterThanSign=104\n-Event=56\n-ExclamationMarkEqualsSign=97\n+Const=55\n+Constant=20\n+Contract=21\n+Delta=56\n+Div=89\n+During=45\n+Each=69\n+Else=70\n+Enum=71\n+Eq=108\n+EqualsSign=125\n+EqualsSignGreaterThanSign=105\n+Event=57\n+ExclamationMarkEqualsSign=98\n Exclusively=8\n-Exists=45\n-External=21\n-False=57\n-Flatmap=34\n-Floor=58\n-Foldl=59\n-Foldr=60\n-Forall=46\n-FullStop=119\n-FullStopFullStop=99\n-Fun=89\n+Exists=46\n+External=22\n+False=58\n+Flatmap=35\n+Floor=59\n+Foldl=60\n+Foldr=61\n+Forall=47\n+FullStop=120\n+FullStopFullStop=100\n+Fun=90\n Get_Property=5\n-GreaterThanSign=125\n-GreaterThanSignEqualsSign=105\n+GreaterThanSign=126\n+GreaterThanSignEqualsSign=106\n Guarantee=12\n-Holds=61\n-HyphenMinus=118\n-HyphenMinusGreaterThanSign=98\n-IAT=86\n-If=108\n-Implies=35\n-In=109\n-Indices=36\n+Holds=62\n+HyphenMinus=119\n+HyphenMinusGreaterThanSign=99\n+IAT=87\n+If=109\n+Implies=36\n+In=110\n+Indices=37\n Initially=13\n-Int=90\n-Into=71\n-Jitter=47\n-KW__CLK=66\n-KW__COUNT=39\n-KW__INSERT=28\n-KW__REMOVE=29\n-Latched=37\n-LeftCurlyBracket=129\n-LeftParenthesis=113\n-LeftSquareBracket=126\n-LeftSquareBracketVerticalLine=106\n-Lemma=62\n-LessThanSign=123\n-LessThanSignEqualsSign=102\n-LessThanSignEqualsSignGreaterThanSign=85\n-LessThanSignGreaterThanSign=103\n-Let=91\n-Lift=72\n+Int=91\n+Into=72\n+Jitter=48\n+KW__CLK=67\n+KW__COUNT=40\n+KW__INSERT=29\n+KW__REMOVE=30\n+Latched=38\n+LeftCurlyBracket=130\n+LeftParenthesis=114\n+LeftSquareBracket=127\n+LeftSquareBracketVerticalLine=107\n+Lemma=63\n+LessThanSign=124\n+LessThanSignEqualsSign=103\n+LessThanSignEqualsSignGreaterThanSign=86\n+LessThanSignGreaterThanSign=104\n+Let=92\n+Lift=73\n Linearization=4\n-Mod=92\n-Modes=63\n+Mod=93\n+Modes=64\n No_simult=14\n-Node=73\n-Not=93\n-Occur=64\n-Occurs=48\n-Or=110\n-Ordering=22\n-Over=74\n+Node=74\n+Not=94\n+Occur=65\n+Occurs=49\n+Or=111\n+Ordering=23\n+Over=75\n Parameter=15\n-PlusSign=116\n-PlusSignEqualsSignGreaterThanSign=84\n-Pre=94\n-Prev=75\n-Property=23\n-RULE_BASED_INTEGER=136\n-RULE_DIGIT=132\n-RULE_EXPONENT=133\n-RULE_EXTENDED_DIGIT=138\n-RULE_ID=140\n-RULE_INTEGER_LIT=137\n-RULE_INT_EXPONENT=134\n-RULE_REAL_LIT=135\n-RULE_SL_COMMENT=131\n-RULE_STRING=139\n-RULE_WS=141\n-Raises=49\n-Real=76\n-Reference=16\n-Returns=38\n-RightCurlyBracket=130\n-RightParenthesis=114\n-RightSquareBracket=127\n-Semicolon=122\n-Simult=50\n-Solidus=120\n-Sporadic=24\n-Struct=51\n-Synchrony=17\n-Tel=95\n-Then=77\n-This=78\n-Time=79\n-Timefall=25\n-Timeof=52\n-Timerise=26\n-Times=65\n-To=111\n-True=80\n-Type=81\n-Var=96\n-VerticalLineRightSquareBracket=112\n-When=82\n-Whenever=27\n-With=83\n-Within=53\n+PlusSign=117\n+PlusSignEqualsSignGreaterThanSign=85\n+Pre=95\n+Prev=76\n+Property=24\n+RULE_BASED_INTEGER=137\n+RULE_DIGIT=133\n+RULE_EXPONENT=134\n+RULE_EXTENDED_DIGIT=139\n+RULE_ID=141\n+RULE_INTEGER_LIT=138\n+RULE_INT_EXPONENT=135\n+RULE_REAL_LIT=136\n+RULE_SL_COMMENT=132\n+RULE_STRING=140\n+RULE_WS=142\n+Raises=50\n+Reachable=16\n+Real=77\n+Reference=17\n+Returns=39\n+RightCurlyBracket=131\n+RightParenthesis=115\n+RightSquareBracket=128\n+Semicolon=123\n+Simult=51\n+Solidus=121\n+Sporadic=25\n+Struct=52\n+Synchrony=18\n+Tel=96\n+Then=78\n+This=79\n+Time=80\n+Timefall=26\n+Timeof=53\n+Timerise=27\n+Times=66\n+To=112\n+True=81\n+Type=82\n+Var=97\n+VerticalLineRightSquareBracket=113\n+When=83\n+Whenever=28\n+With=84\n+Within=54"
  },
  {
    "sha": "2195e2e193afdbb986ee5d713058cccce215f6af",
    "filename": "com.rockwellcollins.atc.agree.ui/src-gen/com/rockwellcollins/atc/agree/ui/contentassist/antlr/lexer/InternalAgreeLexer.g",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/loonwerks/AGREE/blob/8fcb32160c4012a37c0381e923c9b27564a609d0/com.rockwellcollins.atc.agree.ui/src-gen/com/rockwellcollins/atc/agree/ui/contentassist/antlr/lexer/InternalAgreeLexer.g",
    "raw_url": "https://github.com/loonwerks/AGREE/raw/8fcb32160c4012a37c0381e923c9b27564a609d0/com.rockwellcollins.atc.agree.ui/src-gen/com/rockwellcollins/atc/agree/ui/contentassist/antlr/lexer/InternalAgreeLexer.g",
    "contents_url": "https://api.github.com/repos/loonwerks/AGREE/contents/com.rockwellcollins.atc.agree.ui/src-gen/com/rockwellcollins/atc/agree/ui/contentassist/antlr/lexer/InternalAgreeLexer.g?ref=8fcb32160c4012a37c0381e923c9b27564a609d0",
    "patch": "@@ -40,6 +40,8 @@ No_simult : ('N'|'n')('O'|'o')'_'('S'|'s')('I'|'i')('M'|'m')('U'|'u')('L'|'l')('\n \n Parameter : ('P'|'p')('A'|'a')('R'|'r')('A'|'a')('M'|'m')('E'|'e')('T'|'t')('E'|'e')('R'|'r');\n \n+Reachable : ('R'|'r')('E'|'e')('A'|'a')('C'|'c')('H'|'h')('A'|'a')('B'|'b')('L'|'l')('E'|'e');\n+\n Reference : ('R'|'r')('E'|'e')('F'|'f')('E'|'e')('R'|'r')('E'|'e')('N'|'n')('C'|'c')('E'|'e');\n \n Synchrony : ('S'|'s')('Y'|'y')('N'|'n')('C'|'c')('H'|'h')('R'|'r')('O'|'o')('N'|'n')('Y'|'y');"
  },
  {
    "sha": "582b8ecd1c6de50b03cb768404df4b8a3070d4ea",
    "filename": "com.rockwellcollins.atc.agree.ui/src-gen/com/rockwellcollins/atc/agree/ui/contentassist/antlr/lexer/InternalAgreeLexer.java",
    "status": "modified",
    "additions": 922,
    "deletions": 807,
    "changes": 1729,
    "blob_url": "https://github.com/loonwerks/AGREE/blob/8fcb32160c4012a37c0381e923c9b27564a609d0/com.rockwellcollins.atc.agree.ui/src-gen/com/rockwellcollins/atc/agree/ui/contentassist/antlr/lexer/InternalAgreeLexer.java",
    "raw_url": "https://github.com/loonwerks/AGREE/raw/8fcb32160c4012a37c0381e923c9b27564a609d0/com.rockwellcollins.atc.agree.ui/src-gen/com/rockwellcollins/atc/agree/ui/contentassist/antlr/lexer/InternalAgreeLexer.java",
    "contents_url": "https://api.github.com/repos/loonwerks/AGREE/contents/com.rockwellcollins.atc.agree.ui/src-gen/com/rockwellcollins/atc/agree/ui/contentassist/antlr/lexer/InternalAgreeLexer.java?ref=8fcb32160c4012a37c0381e923c9b27564a609d0"
  },
  {
    "sha": "06c707ab8db615407fb542a488842c3adb093eca",
    "filename": "com.rockwellcollins.atc.agree.ui/src-gen/com/rockwellcollins/atc/agree/ui/contentassist/antlr/lexer/InternalAgreeLexer.tokens",
    "status": "modified",
    "additions": 127,
    "deletions": 126,
    "changes": 253,
    "blob_url": "https://github.com/loonwerks/AGREE/blob/8fcb32160c4012a37c0381e923c9b27564a609d0/com.rockwellcollins.atc.agree.ui/src-gen/com/rockwellcollins/atc/agree/ui/contentassist/antlr/lexer/InternalAgreeLexer.tokens",
    "raw_url": "https://github.com/loonwerks/AGREE/raw/8fcb32160c4012a37c0381e923c9b27564a609d0/com.rockwellcollins.atc.agree.ui/src-gen/com/rockwellcollins/atc/agree/ui/contentassist/antlr/lexer/InternalAgreeLexer.tokens",
    "contents_url": "https://api.github.com/repos/loonwerks/AGREE/contents/com.rockwellcollins.atc.agree.ui/src-gen/com/rockwellcollins/atc/agree/ui/contentassist/antlr/lexer/InternalAgreeLexer.tokens?ref=8fcb32160c4012a37c0381e923c9b27564a609d0",
    "patch": "@@ -1,138 +1,139 @@\n Agree_input=7\n-Always=40\n-And=87\n-Applies=30\n-Assert=41\n-Assign=42\n-Assume=43\n-Asterisk=115\n+Always=41\n+And=88\n+Applies=31\n+Assert=42\n+Assign=43\n+Assume=44\n+Asterisk=116\n Asynchronous=6\n-Becomes=31\n-Binding=32\n-Bool=67\n-Calendar=18\n-CircumflexAccent=128\n+Becomes=32\n+Binding=33\n+Bool=68\n+Calendar=19\n+CircumflexAccent=129\n Classifier=9\n-Colon=121\n-ColonColon=100\n-ColonEqualsSign=101\n-Comma=117\n-Compute=33\n+Colon=122\n+ColonColon=101\n+ColonEqualsSign=102\n+Comma=118\n+Compute=34\n Condition=11\n Connection=10\n-Const=54\n-Constant=19\n-Contract=20\n-Delta=55\n-Div=88\n-During=44\n-Each=68\n-Else=69\n-Enum=70\n-Eq=107\n-EqualsSign=124\n-EqualsSignGreaterThanSign=104\n-Event=56\n-ExclamationMarkEqualsSign=97\n+Const=55\n+Constant=20\n+Contract=21\n+Delta=56\n+Div=89\n+During=45\n+Each=69\n+Else=70\n+Enum=71\n+Eq=108\n+EqualsSign=125\n+EqualsSignGreaterThanSign=105\n+Event=57\n+ExclamationMarkEqualsSign=98\n Exclusively=8\n-Exists=45\n-External=21\n-False=57\n-Flatmap=34\n-Floor=58\n-Foldl=59\n-Foldr=60\n-Forall=46\n-FullStop=119\n-FullStopFullStop=99\n-Fun=89\n+Exists=46\n+External=22\n+False=58\n+Flatmap=35\n+Floor=59\n+Foldl=60\n+Foldr=61\n+Forall=47\n+FullStop=120\n+FullStopFullStop=100\n+Fun=90\n Get_Property=5\n-GreaterThanSign=125\n-GreaterThanSignEqualsSign=105\n+GreaterThanSign=126\n+GreaterThanSignEqualsSign=106\n Guarantee=12\n-Holds=61\n-HyphenMinus=118\n-HyphenMinusGreaterThanSign=98\n-IAT=86\n-If=108\n-Implies=35\n-In=109\n-Indices=36\n+Holds=62\n+HyphenMinus=119\n+HyphenMinusGreaterThanSign=99\n+IAT=87\n+If=109\n+Implies=36\n+In=110\n+Indices=37\n Initially=13\n-Int=90\n-Into=71\n-Jitter=47\n-KW__CLK=66\n-KW__COUNT=39\n-KW__INSERT=28\n-KW__REMOVE=29\n-Latched=37\n-LeftCurlyBracket=129\n-LeftParenthesis=113\n-LeftSquareBracket=126\n-LeftSquareBracketVerticalLine=106\n-Lemma=62\n-LessThanSign=123\n-LessThanSignEqualsSign=102\n-LessThanSignEqualsSignGreaterThanSign=85\n-LessThanSignGreaterThanSign=103\n-Let=91\n-Lift=72\n+Int=91\n+Into=72\n+Jitter=48\n+KW__CLK=67\n+KW__COUNT=40\n+KW__INSERT=29\n+KW__REMOVE=30\n+Latched=38\n+LeftCurlyBracket=130\n+LeftParenthesis=114\n+LeftSquareBracket=127\n+LeftSquareBracketVerticalLine=107\n+Lemma=63\n+LessThanSign=124\n+LessThanSignEqualsSign=103\n+LessThanSignEqualsSignGreaterThanSign=86\n+LessThanSignGreaterThanSign=104\n+Let=92\n+Lift=73\n Linearization=4\n-Mod=92\n-Modes=63\n+Mod=93\n+Modes=64\n No_simult=14\n-Node=73\n-Not=93\n-Occur=64\n-Occurs=48\n-Or=110\n-Ordering=22\n-Over=74\n+Node=74\n+Not=94\n+Occur=65\n+Occurs=49\n+Or=111\n+Ordering=23\n+Over=75\n Parameter=15\n-PlusSign=116\n-PlusSignEqualsSignGreaterThanSign=84\n-Pre=94\n-Prev=75\n-Property=23\n-RULE_BASED_INTEGER=136\n-RULE_DIGIT=132\n-RULE_EXPONENT=133\n-RULE_EXTENDED_DIGIT=138\n-RULE_ID=140\n-RULE_INTEGER_LIT=137\n-RULE_INT_EXPONENT=134\n-RULE_REAL_LIT=135\n-RULE_SL_COMMENT=131\n-RULE_STRING=139\n-RULE_WS=141\n-Raises=49\n-Real=76\n-Reference=16\n-Returns=38\n-RightCurlyBracket=130\n-RightParenthesis=114\n-RightSquareBracket=127\n-Semicolon=122\n-Simult=50\n-Solidus=120\n-Sporadic=24\n-Struct=51\n-Synchrony=17\n-Tel=95\n-Then=77\n-This=78\n-Time=79\n-Timefall=25\n-Timeof=52\n-Timerise=26\n-Times=65\n-To=111\n-True=80\n-Type=81\n-Var=96\n-VerticalLineRightSquareBracket=112\n-When=82\n-Whenever=27\n-With=83\n-Within=53\n+PlusSign=117\n+PlusSignEqualsSignGreaterThanSign=85\n+Pre=95\n+Prev=76\n+Property=24\n+RULE_BASED_INTEGER=137\n+RULE_DIGIT=133\n+RULE_EXPONENT=134\n+RULE_EXTENDED_DIGIT=139\n+RULE_ID=141\n+RULE_INTEGER_LIT=138\n+RULE_INT_EXPONENT=135\n+RULE_REAL_LIT=136\n+RULE_SL_COMMENT=132\n+RULE_STRING=140\n+RULE_WS=142\n+Raises=50\n+Reachable=16\n+Real=77\n+Reference=17\n+Returns=39\n+RightCurlyBracket=131\n+RightParenthesis=115\n+RightSquareBracket=128\n+Semicolon=123\n+Simult=51\n+Solidus=121\n+Sporadic=25\n+Struct=52\n+Synchrony=18\n+Tel=96\n+Then=78\n+This=79\n+Time=80\n+Timefall=26\n+Timeof=53\n+Timerise=27\n+Times=66\n+To=112\n+True=81\n+Type=82\n+Var=97\n+VerticalLineRightSquareBracket=113\n+When=83\n+Whenever=28\n+With=84\n+Within=54"
  },
  {
    "sha": "47d022461d74f45ec5a5fdc83ebc552fbd3bd04d",
    "filename": "com.rockwellcollins.atc.agree/model/generated/Agree.ecore",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/loonwerks/AGREE/blob/8fcb32160c4012a37c0381e923c9b27564a609d0/com.rockwellcollins.atc.agree/model/generated/Agree.ecore",
    "raw_url": "https://github.com/loonwerks/AGREE/raw/8fcb32160c4012a37c0381e923c9b27564a609d0/com.rockwellcollins.atc.agree/model/generated/Agree.ecore",
    "contents_url": "https://api.github.com/repos/loonwerks/AGREE/contents/com.rockwellcollins.atc.agree/model/generated/Agree.ecore?ref=8fcb32160c4012a37c0381e923c9b27564a609d0",
    "patch": "@@ -160,6 +160,7 @@\n   <eClassifiers xsi:type=\"ecore:EClass\" name=\"GuaranteeStatement\" eSuperTypes=\"#//NamedSpecStatement\"/>\n   <eClassifiers xsi:type=\"ecore:EClass\" name=\"AssertStatement\" eSuperTypes=\"#//NamedSpecStatement\"/>\n   <eClassifiers xsi:type=\"ecore:EClass\" name=\"LemmaStatement\" eSuperTypes=\"#//NamedSpecStatement\"/>\n+  <eClassifiers xsi:type=\"ecore:EClass\" name=\"ReachableStatement\" eSuperTypes=\"#//NamedSpecStatement\"/>\n   <eClassifiers xsi:type=\"ecore:EClass\" name=\"AlwaysStatement\" eSuperTypes=\"#//PatternStatement\">\n     <eStructuralFeatures xsi:type=\"ecore:EReference\" name=\"expr\" eType=\"#//Expr\" containment=\"true\"/>\n   </eClassifiers>"
  },
  {
    "sha": "2609ac3c57f1ce3fb5c9b690005f55ae1fd4a273",
    "filename": "com.rockwellcollins.atc.agree/model/generated/Agree.genmodel",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/loonwerks/AGREE/blob/8fcb32160c4012a37c0381e923c9b27564a609d0/com.rockwellcollins.atc.agree/model/generated/Agree.genmodel",
    "raw_url": "https://github.com/loonwerks/AGREE/raw/8fcb32160c4012a37c0381e923c9b27564a609d0/com.rockwellcollins.atc.agree/model/generated/Agree.genmodel",
    "contents_url": "https://api.github.com/repos/loonwerks/AGREE/contents/com.rockwellcollins.atc.agree/model/generated/Agree.genmodel?ref=8fcb32160c4012a37c0381e923c9b27564a609d0",
    "patch": "@@ -137,6 +137,7 @@\n     <genClasses ecoreClass=\"Agree.ecore#//GuaranteeStatement\"/>\n     <genClasses ecoreClass=\"Agree.ecore#//AssertStatement\"/>\n     <genClasses ecoreClass=\"Agree.ecore#//LemmaStatement\"/>\n+    <genClasses ecoreClass=\"Agree.ecore#//ReachableStatement\"/>\n     <genClasses ecoreClass=\"Agree.ecore#//AlwaysStatement\">\n       <genFeatures property=\"None\" children=\"true\" createChild=\"true\" ecoreFeature=\"ecore:EReference Agree.ecore#//AlwaysStatement/expr\"/>\n     </genClasses>"
  },
  {
    "sha": "6e051e3c26a6a69d18d38caba00eab0a3d0cb467",
    "filename": "com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/Agree.xtextbin",
    "status": "modified",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/loonwerks/AGREE/blob/8fcb32160c4012a37c0381e923c9b27564a609d0/com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/Agree.xtextbin",
    "raw_url": "https://github.com/loonwerks/AGREE/raw/8fcb32160c4012a37c0381e923c9b27564a609d0/com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/Agree.xtextbin",
    "contents_url": "https://api.github.com/repos/loonwerks/AGREE/contents/com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/Agree.xtextbin?ref=8fcb32160c4012a37c0381e923c9b27564a609d0"
  },
  {
    "sha": "8b1cf935d68447b8aa0218430cbc0f9672377514",
    "filename": "com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/agree/AgreeFactory.java",
    "status": "modified",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/loonwerks/AGREE/blob/8fcb32160c4012a37c0381e923c9b27564a609d0/com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/agree/AgreeFactory.java",
    "raw_url": "https://github.com/loonwerks/AGREE/raw/8fcb32160c4012a37c0381e923c9b27564a609d0/com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/agree/AgreeFactory.java",
    "contents_url": "https://api.github.com/repos/loonwerks/AGREE/contents/com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/agree/AgreeFactory.java?ref=8fcb32160c4012a37c0381e923c9b27564a609d0",
    "patch": "@@ -427,6 +427,15 @@\n    */\n   LemmaStatement createLemmaStatement();\n \n+  /**\n+   * Returns a new object of class '<em>Reachable Statement</em>'.\n+   * <!-- begin-user-doc -->\n+   * <!-- end-user-doc -->\n+   * @return a new object of class '<em>Reachable Statement</em>'.\n+   * @generated\n+   */\n+  ReachableStatement createReachableStatement();\n+\n   /**\n    * Returns a new object of class '<em>Always Statement</em>'.\n    * <!-- begin-user-doc -->"
  },
  {
    "sha": "fe60d626f28f26bd587a784f8a13088793b5edb8",
    "filename": "com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/agree/AgreePackage.java",
    "status": "modified",
    "additions": 165,
    "deletions": 54,
    "changes": 219,
    "blob_url": "https://github.com/loonwerks/AGREE/blob/8fcb32160c4012a37c0381e923c9b27564a609d0/com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/agree/AgreePackage.java",
    "raw_url": "https://github.com/loonwerks/AGREE/raw/8fcb32160c4012a37c0381e923c9b27564a609d0/com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/agree/AgreePackage.java",
    "contents_url": "https://api.github.com/repos/loonwerks/AGREE/contents/com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/agree/AgreePackage.java?ref=8fcb32160c4012a37c0381e923c9b27564a609d0",
    "patch": "@@ -2776,6 +2776,97 @@\n    */\n   int LEMMA_STATEMENT_FEATURE_COUNT = NAMED_SPEC_STATEMENT_FEATURE_COUNT + 0;\n \n+  /**\n+   * The meta object id for the '{@link com.rockwellcollins.atc.agree.agree.impl.ReachableStatementImpl <em>Reachable Statement</em>}' class.\n+   * <!-- begin-user-doc -->\n+   * <!-- end-user-doc -->\n+   * @see com.rockwellcollins.atc.agree.agree.impl.ReachableStatementImpl\n+   * @see com.rockwellcollins.atc.agree.agree.impl.AgreePackageImpl#getReachableStatement()\n+   * @generated\n+   */\n+  int REACHABLE_STATEMENT = 45;\n+\n+  /**\n+   * The feature id for the '<em><b>Owned Element</b></em>' reference list.\n+   * <!-- begin-user-doc -->\n+   * <!-- end-user-doc -->\n+   * @generated\n+   * @ordered\n+   */\n+  int REACHABLE_STATEMENT__OWNED_ELEMENT = NAMED_SPEC_STATEMENT__OWNED_ELEMENT;\n+\n+  /**\n+   * The feature id for the '<em><b>Owned Comment</b></em>' containment reference list.\n+   * <!-- begin-user-doc -->\n+   * <!-- end-user-doc -->\n+   * @generated\n+   * @ordered\n+   */\n+  int REACHABLE_STATEMENT__OWNED_COMMENT = NAMED_SPEC_STATEMENT__OWNED_COMMENT;\n+\n+  /**\n+   * The feature id for the '<em><b>Name</b></em>' attribute.\n+   * <!-- begin-user-doc -->\n+   * <!-- end-user-doc -->\n+   * @generated\n+   * @ordered\n+   */\n+  int REACHABLE_STATEMENT__NAME = NAMED_SPEC_STATEMENT__NAME;\n+\n+  /**\n+   * The feature id for the '<em><b>Qualified Name</b></em>' attribute.\n+   * <!-- begin-user-doc -->\n+   * <!-- end-user-doc -->\n+   * @generated\n+   * @ordered\n+   */\n+  int REACHABLE_STATEMENT__QUALIFIED_NAME = NAMED_SPEC_STATEMENT__QUALIFIED_NAME;\n+\n+  /**\n+   * The feature id for the '<em><b>Owned Property Association</b></em>' containment reference list.\n+   * <!-- begin-user-doc -->\n+   * <!-- end-user-doc -->\n+   * @generated\n+   * @ordered\n+   */\n+  int REACHABLE_STATEMENT__OWNED_PROPERTY_ASSOCIATION = NAMED_SPEC_STATEMENT__OWNED_PROPERTY_ASSOCIATION;\n+\n+  /**\n+   * The feature id for the '<em><b>Str</b></em>' attribute.\n+   * <!-- begin-user-doc -->\n+   * <!-- end-user-doc -->\n+   * @generated\n+   * @ordered\n+   */\n+  int REACHABLE_STATEMENT__STR = NAMED_SPEC_STATEMENT__STR;\n+\n+  /**\n+   * The feature id for the '<em><b>Expr</b></em>' containment reference.\n+   * <!-- begin-user-doc -->\n+   * <!-- end-user-doc -->\n+   * @generated\n+   * @ordered\n+   */\n+  int REACHABLE_STATEMENT__EXPR = NAMED_SPEC_STATEMENT__EXPR;\n+\n+  /**\n+   * The feature id for the '<em><b>Pattern</b></em>' containment reference.\n+   * <!-- begin-user-doc -->\n+   * <!-- end-user-doc -->\n+   * @generated\n+   * @ordered\n+   */\n+  int REACHABLE_STATEMENT__PATTERN = NAMED_SPEC_STATEMENT__PATTERN;\n+\n+  /**\n+   * The number of structural features of the '<em>Reachable Statement</em>' class.\n+   * <!-- begin-user-doc -->\n+   * <!-- end-user-doc -->\n+   * @generated\n+   * @ordered\n+   */\n+  int REACHABLE_STATEMENT_FEATURE_COUNT = NAMED_SPEC_STATEMENT_FEATURE_COUNT + 0;\n+\n   /**\n    * The meta object id for the '{@link com.rockwellcollins.atc.agree.agree.impl.AlwaysStatementImpl <em>Always Statement</em>}' class.\n    * <!-- begin-user-doc -->\n@@ -2784,7 +2875,7 @@\n    * @see com.rockwellcollins.atc.agree.agree.impl.AgreePackageImpl#getAlwaysStatement()\n    * @generated\n    */\n-  int ALWAYS_STATEMENT = 45;\n+  int ALWAYS_STATEMENT = 46;\n \n   /**\n    * The feature id for the '<em><b>Expr</b></em>' containment reference.\n@@ -2812,7 +2903,7 @@\n    * @see com.rockwellcollins.atc.agree.agree.impl.AgreePackageImpl#getWhenHoldsStatement()\n    * @generated\n    */\n-  int WHEN_HOLDS_STATEMENT = 46;\n+  int WHEN_HOLDS_STATEMENT = 47;\n \n   /**\n    * The feature id for the '<em><b>Condition</b></em>' containment reference.\n@@ -2876,7 +2967,7 @@\n    * @see com.rockwellcollins.atc.agree.agree.impl.AgreePackageImpl#getWhenOccursStatment()\n    * @generated\n    */\n-  int WHEN_OCCURS_STATMENT = 47;\n+  int WHEN_OCCURS_STATMENT = 48;\n \n   /**\n    * The feature id for the '<em><b>Condition</b></em>' containment reference.\n@@ -2940,7 +3031,7 @@\n    * @see com.rockwellcollins.atc.agree.agree.impl.AgreePackageImpl#getWheneverOccursStatement()\n    * @generated\n    */\n-  int WHENEVER_OCCURS_STATEMENT = 48;\n+  int WHENEVER_OCCURS_STATEMENT = 49;\n \n   /**\n    * The feature id for the '<em><b>Cause</b></em>' containment reference.\n@@ -2995,7 +3086,7 @@\n    * @see com.rockwellcollins.atc.agree.agree.impl.AgreePackageImpl#getWheneverBecomesTrueStatement()\n    * @generated\n    */\n-  int WHENEVER_BECOMES_TRUE_STATEMENT = 49;\n+  int WHENEVER_BECOMES_TRUE_STATEMENT = 50;\n \n   /**\n    * The feature id for the '<em><b>Cause</b></em>' containment reference.\n@@ -3050,7 +3141,7 @@\n    * @see com.rockwellcollins.atc.agree.agree.impl.AgreePackageImpl#getWheneverHoldsStatement()\n    * @generated\n    */\n-  int WHENEVER_HOLDS_STATEMENT = 50;\n+  int WHENEVER_HOLDS_STATEMENT = 51;\n \n   /**\n    * The feature id for the '<em><b>Cause</b></em>' containment reference.\n@@ -3105,7 +3196,7 @@\n    * @see com.rockwellcollins.atc.agree.agree.impl.AgreePackageImpl#getWheneverImpliesStatement()\n    * @generated\n    */\n-  int WHENEVER_IMPLIES_STATEMENT = 51;\n+  int WHENEVER_IMPLIES_STATEMENT = 52;\n \n   /**\n    * The feature id for the '<em><b>Cause</b></em>' containment reference.\n@@ -3169,7 +3260,7 @@\n    * @see com.rockwellcollins.atc.agree.agree.impl.AgreePackageImpl#getPeriodicStatement()\n    * @generated\n    */\n-  int PERIODIC_STATEMENT = 52;\n+  int PERIODIC_STATEMENT = 53;\n \n   /**\n    * The feature id for the '<em><b>Event</b></em>' containment reference.\n@@ -3215,7 +3306,7 @@\n    * @see com.rockwellcollins.atc.agree.agree.impl.AgreePackageImpl#getSporadicStatement()\n    * @generated\n    */\n-  int SPORADIC_STATEMENT = 53;\n+  int SPORADIC_STATEMENT = 54;\n \n   /**\n    * The feature id for the '<em><b>Event</b></em>' containment reference.\n@@ -3261,7 +3352,7 @@\n    * @see com.rockwellcollins.atc.agree.agree.impl.AgreePackageImpl#getClosedTimeInterval()\n    * @generated\n    */\n-  int CLOSED_TIME_INTERVAL = 54;\n+  int CLOSED_TIME_INTERVAL = 55;\n \n   /**\n    * The feature id for the '<em><b>Low</b></em>' containment reference.\n@@ -3298,7 +3389,7 @@\n    * @see com.rockwellcollins.atc.agree.agree.impl.AgreePackageImpl#getOpenLeftTimeInterval()\n    * @generated\n    */\n-  int OPEN_LEFT_TIME_INTERVAL = 55;\n+  int OPEN_LEFT_TIME_INTERVAL = 56;\n \n   /**\n    * The feature id for the '<em><b>Low</b></em>' containment reference.\n@@ -3335,7 +3426,7 @@\n    * @see com.rockwellcollins.atc.agree.agree.impl.AgreePackageImpl#getOpenRightTimeInterval()\n    * @generated\n    */\n-  int OPEN_RIGHT_TIME_INTERVAL = 56;\n+  int OPEN_RIGHT_TIME_INTERVAL = 57;\n \n   /**\n    * The feature id for the '<em><b>Low</b></em>' containment reference.\n@@ -3372,7 +3463,7 @@\n    * @see com.rockwellcollins.atc.agree.agree.impl.AgreePackageImpl#getOpenTimeInterval()\n    * @generated\n    */\n-  int OPEN_TIME_INTERVAL = 57;\n+  int OPEN_TIME_INTERVAL = 58;\n \n   /**\n    * The feature id for the '<em><b>Low</b></em>' containment reference.\n@@ -3409,7 +3500,7 @@\n    * @see com.rockwellcollins.atc.agree.agree.impl.AgreePackageImpl#getMNSynchStatement()\n    * @generated\n    */\n-  int MN_SYNCH_STATEMENT = 58;\n+  int MN_SYNCH_STATEMENT = 59;\n \n   /**\n    * The feature id for the '<em><b>Owned Element</b></em>' reference list.\n@@ -3509,7 +3600,7 @@\n    * @see com.rockwellcollins.atc.agree.agree.impl.AgreePackageImpl#getCalenStatement()\n    * @generated\n    */\n-  int CALEN_STATEMENT = 59;\n+  int CALEN_STATEMENT = 60;\n \n   /**\n    * The feature id for the '<em><b>Owned Element</b></em>' reference list.\n@@ -3582,7 +3673,7 @@\n    * @see com.rockwellcollins.atc.agree.agree.impl.AgreePackageImpl#getAsynchStatement()\n    * @generated\n    */\n-  int ASYNCH_STATEMENT = 60;\n+  int ASYNCH_STATEMENT = 61;\n \n   /**\n    * The feature id for the '<em><b>Owned Element</b></em>' reference list.\n@@ -3646,7 +3737,7 @@\n    * @see com.rockwellcollins.atc.agree.agree.impl.AgreePackageImpl#getLatchedStatement()\n    * @generated\n    */\n-  int LATCHED_STATEMENT = 61;\n+  int LATCHED_STATEMENT = 62;\n \n   /**\n    * The feature id for the '<em><b>Owned Element</b></em>' reference list.\n@@ -3710,7 +3801,7 @@\n    * @see com.rockwellcollins.atc.agree.agree.impl.AgreePackageImpl#getNodeEq()\n    * @generated\n    */\n-  int NODE_EQ = 62;\n+  int NODE_EQ = 63;\n \n   /**\n    * The feature id for the '<em><b>Owned Element</b></em>' reference list.\n@@ -3765,7 +3856,7 @@\n    * @see com.rockwellcollins.atc.agree.agree.impl.AgreePackageImpl#getNodeLemma()\n    * @generated\n    */\n-  int NODE_LEMMA = 63;\n+  int NODE_LEMMA = 64;\n \n   /**\n    * The feature id for the '<em><b>Owned Element</b></em>' reference list.\n@@ -3820,7 +3911,7 @@\n    * @see com.rockwellcollins.atc.agree.agree.impl.AgreePackageImpl#getArrayType()\n    * @generated\n    */\n-  int ARRAY_TYPE = 64;\n+  int ARRAY_TYPE = 65;\n \n   /**\n    * The feature id for the '<em><b>Owned Element</b></em>' reference list.\n@@ -3875,7 +3966,7 @@\n    * @see com.rockwellcollins.atc.agree.agree.impl.AgreePackageImpl#getPrimType()\n    * @generated\n    */\n-  int PRIM_TYPE = 65;\n+  int PRIM_TYPE = 66;\n \n   /**\n    * The feature id for the '<em><b>Owned Element</b></em>' reference list.\n@@ -3957,7 +4048,7 @@\n    * @see com.rockwellcollins.atc.agree.agree.impl.AgreePackageImpl#getForallExpr()\n    * @generated\n    */\n-  int FORALL_EXPR = 66;\n+  int FORALL_EXPR = 67;\n \n   /**\n    * The feature id for the '<em><b>Owned Element</b></em>' reference list.\n@@ -4021,7 +4112,7 @@\n    * @see com.rockwellcollins.atc.agree.agree.impl.AgreePackageImpl#getExistsExpr()\n    * @generated\n    */\n-  int EXISTS_EXPR = 67;\n+  int EXISTS_EXPR = 68;\n \n   /**\n    * The feature id for the '<em><b>Owned Element</b></em>' reference list.\n@@ -4085,7 +4176,7 @@\n    * @see com.rockwellcollins.atc.agree.agree.impl.AgreePackageImpl#getFlatmapExpr()\n    * @generated\n    */\n-  int FLATMAP_EXPR = 68;\n+  int FLATMAP_EXPR = 69;\n \n   /**\n    * The feature id for the '<em><b>Owned Element</b></em>' reference list.\n@@ -4149,7 +4240,7 @@\n    * @see com.rockwellcollins.atc.agree.agree.impl.AgreePackageImpl#getFoldLeftExpr()\n    * @generated\n    */\n-  int FOLD_LEFT_EXPR = 69;\n+  int FOLD_LEFT_EXPR = 70;\n \n   /**\n    * The feature id for the '<em><b>Owned Element</b></em>' reference list.\n@@ -4231,7 +4322,7 @@\n    * @see com.rockwellcollins.atc.agree.agree.impl.AgreePackageImpl#getFoldRightExpr()\n    * @generated\n    */\n-  int FOLD_RIGHT_EXPR = 70;\n+  int FOLD_RIGHT_EXPR = 71;\n \n   /**\n    * The feature id for the '<em><b>Owned Element</b></em>' reference list.\n@@ -4313,7 +4404,7 @@\n    * @see com.rockwellcollins.atc.agree.agree.impl.AgreePackageImpl#getBinaryExpr()\n    * @generated\n    */\n-  int BINARY_EXPR = 71;\n+  int BINARY_EXPR = 72;\n \n   /**\n    * The feature id for the '<em><b>Owned Element</b></em>' reference list.\n@@ -4377,7 +4468,7 @@\n    * @see com.rockwellcollins.atc.agree.agree.impl.AgreePackageImpl#getUnaryExpr()\n    * @generated\n    */\n-  int UNARY_EXPR = 72;\n+  int UNARY_EXPR = 73;\n \n   /**\n    * The feature id for the '<em><b>Owned Element</b></em>' reference list.\n@@ -4432,7 +4523,7 @@\n    * @see com.rockwellcollins.atc.agree.agree.impl.AgreePackageImpl#getIfThenElseExpr()\n    * @generated\n    */\n-  int IF_THEN_ELSE_EXPR = 73;\n+  int IF_THEN_ELSE_EXPR = 74;\n \n   /**\n    * The feature id for the '<em><b>Owned Element</b></em>' reference list.\n@@ -4496,7 +4587,7 @@\n    * @see com.rockwellcollins.atc.agree.agree.impl.AgreePackageImpl#getThisRef()\n    * @generated\n    */\n-  int THIS_REF = 74;\n+  int THIS_REF = 75;\n \n   /**\n    * The number of structural features of the '<em>This Ref</em>' class.\n@@ -4515,7 +4606,7 @@\n    * @see com.rockwellcollins.atc.agree.agree.impl.AgreePackageImpl#getPrevExpr()\n    * @generated\n    */\n-  int PREV_EXPR = 75;\n+  int PREV_EXPR = 76;\n \n   /**\n    * The feature id for the '<em><b>Owned Element</b></em>' reference list.\n@@ -4570,7 +4661,7 @@\n    * @see com.rockwellcollins.atc.agree.agree.impl.AgreePackageImpl#getGetPropertyExpr()\n    * @generated\n    */\n-  int GET_PROPERTY_EXPR = 76;\n+  int GET_PROPERTY_EXPR = 77;\n \n   /**\n    * The feature id for the '<em><b>Owned Element</b></em>' reference list.\n@@ -4625,7 +4716,7 @@\n    * @see com.rockwellcollins.atc.agree.agree.impl.AgreePackageImpl#getArrayUpdateExpr()\n    * @generated\n    */\n-  int ARRAY_UPDATE_EXPR = 77;\n+  int ARRAY_UPDATE_EXPR = 78;\n \n   /**\n    * The feature id for the '<em><b>Owned Element</b></em>' reference list.\n@@ -4689,7 +4780,7 @@\n    * @see com.rockwellcollins.atc.agree.agree.impl.AgreePackageImpl#getRecordUpdateExpr()\n    * @generated\n    */\n-  int RECORD_UPDATE_EXPR = 78;\n+  int RECORD_UPDATE_EXPR = 79;\n \n   /**\n    * The feature id for the '<em><b>Owned Element</b></em>' reference list.\n@@ -4753,7 +4844,7 @@\n    * @see com.rockwellcollins.atc.agree.agree.impl.AgreePackageImpl#getArraySubExpr()\n    * @generated\n    */\n-  int ARRAY_SUB_EXPR = 79;\n+  int ARRAY_SUB_EXPR = 80;\n \n   /**\n    * The feature id for the '<em><b>Owned Element</b></em>' reference list.\n@@ -4808,7 +4899,7 @@\n    * @see com.rockwellcollins.atc.agree.agree.impl.AgreePackageImpl#getTagExpr()\n    * @generated\n    */\n-  int TAG_EXPR = 80;\n+  int TAG_EXPR = 81;\n \n   /**\n    * The feature id for the '<em><b>Owned Element</b></em>' reference list.\n@@ -4863,7 +4954,7 @@\n    * @see com.rockwellcollins.atc.agree.agree.impl.AgreePackageImpl#getSelectionExpr()\n    * @generated\n    */\n-  int SELECTION_EXPR = 81;\n+  int SELECTION_EXPR = 82;\n \n   /**\n    * The feature id for the '<em><b>Owned Element</b></em>' reference list.\n@@ -4918,7 +5009,7 @@\n    * @see com.rockwellcollins.atc.agree.agree.impl.AgreePackageImpl#getNamedElmExpr()\n    * @generated\n    */\n-  int NAMED_ELM_EXPR = 82;\n+  int NAMED_ELM_EXPR = 83;\n \n   /**\n    * The feature id for the '<em><b>Owned Element</b></em>' reference list.\n@@ -4964,7 +5055,7 @@\n    * @see com.rockwellcollins.atc.agree.agree.impl.AgreePackageImpl#getTimeExpr()\n    * @generated\n    */\n-  int TIME_EXPR = 83;\n+  int TIME_EXPR = 84;\n \n   /**\n    * The feature id for the '<em><b>Owned Element</b></em>' reference list.\n@@ -5001,7 +5092,7 @@\n    * @see com.rockwellcollins.atc.agree.agree.impl.AgreePackageImpl#getIndicesExpr()\n    * @generated\n    */\n-  int INDICES_EXPR = 84;\n+  int INDICES_EXPR = 85;\n \n   /**\n    * The feature id for the '<em><b>Owned Element</b></em>' reference list.\n@@ -5047,7 +5138,7 @@\n    * @see com.rockwellcollins.atc.agree.agree.impl.AgreePackageImpl#getCallExpr()\n    * @generated\n    */\n-  int CALL_EXPR = 85;\n+  int CALL_EXPR = 86;\n \n   /**\n    * The feature id for the '<em><b>Owned Element</b></em>' reference list.\n@@ -5102,7 +5193,7 @@\n    * @see com.rockwellcollins.atc.agree.agree.impl.AgreePackageImpl#getRecordLitExpr()\n    * @generated\n    */\n-  int RECORD_LIT_EXPR = 86;\n+  int RECORD_LIT_EXPR = 87;\n \n   /**\n    * The feature id for the '<em><b>Owned Element</b></em>' reference list.\n@@ -5166,7 +5257,7 @@\n    * @see com.rockwellcollins.atc.agree.agree.impl.AgreePackageImpl#getEnumLitExpr()\n    * @generated\n    */\n-  int ENUM_LIT_EXPR = 87;\n+  int ENUM_LIT_EXPR = 88;\n \n   /**\n    * The feature id for the '<em><b>Owned Element</b></em>' reference list.\n@@ -5221,7 +5312,7 @@\n    * @see com.rockwellcollins.atc.agree.agree.impl.AgreePackageImpl#getIntLitExpr()\n    * @generated\n    */\n-  int INT_LIT_EXPR = 88;\n+  int INT_LIT_EXPR = 89;\n \n   /**\n    * The feature id for the '<em><b>Owned Element</b></em>' reference list.\n@@ -5267,7 +5358,7 @@\n    * @see com.rockwellcollins.atc.agree.agree.impl.AgreePackageImpl#getPreExpr()\n    * @generated\n    */\n-  int PRE_EXPR = 89;\n+  int PRE_EXPR = 90;\n \n   /**\n    * The feature id for the '<em><b>Owned Element</b></em>' reference list.\n@@ -5313,7 +5404,7 @@\n    * @see com.rockwellcollins.atc.agree.agree.impl.AgreePackageImpl#getEventExpr()\n    * @generated\n    */\n-  int EVENT_EXPR = 90;\n+  int EVENT_EXPR = 91;\n \n   /**\n    * The feature id for the '<em><b>Owned Element</b></em>' reference list.\n@@ -5359,7 +5450,7 @@\n    * @see com.rockwellcollins.atc.agree.agree.impl.AgreePackageImpl#getLatchedExpr()\n    * @generated\n    */\n-  int LATCHED_EXPR = 91;\n+  int LATCHED_EXPR = 92;\n \n   /**\n    * The feature id for the '<em><b>Owned Element</b></em>' reference list.\n@@ -5405,7 +5496,7 @@\n    * @see com.rockwellcollins.atc.agree.agree.impl.AgreePackageImpl#getTimeOfExpr()\n    * @generated\n    */\n-  int TIME_OF_EXPR = 92;\n+  int TIME_OF_EXPR = 93;\n \n   /**\n    * The feature id for the '<em><b>Owned Element</b></em>' reference list.\n@@ -5451,7 +5542,7 @@\n    * @see com.rockwellcollins.atc.agree.agree.impl.AgreePackageImpl#getTimeRiseExpr()\n    * @generated\n    */\n-  int TIME_RISE_EXPR = 93;\n+  int TIME_RISE_EXPR = 94;\n \n   /**\n    * The feature id for the '<em><b>Owned Element</b></em>' reference list.\n@@ -5497,7 +5588,7 @@\n    * @see com.rockwellcollins.atc.agree.agree.impl.AgreePackageImpl#getTimeFallExpr()\n    * @generated\n    */\n-  int TIME_FALL_EXPR = 94;\n+  int TIME_FALL_EXPR = 95;\n \n   /**\n    * The feature id for the '<em><b>Owned Element</b></em>' reference list.\n@@ -5543,7 +5634,7 @@\n    * @see com.rockwellcollins.atc.agree.agree.impl.AgreePackageImpl#getRealLitExpr()\n    * @generated\n    */\n-  int REAL_LIT_EXPR = 95;\n+  int REAL_LIT_EXPR = 96;\n \n   /**\n    * The feature id for the '<em><b>Owned Element</b></em>' reference list.\n@@ -5589,7 +5680,7 @@\n    * @see com.rockwellcollins.atc.agree.agree.impl.AgreePackageImpl#getBoolLitExpr()\n    * @generated\n    */\n-  int BOOL_LIT_EXPR = 96;\n+  int BOOL_LIT_EXPR = 97;\n \n   /**\n    * The feature id for the '<em><b>Owned Element</b></em>' reference list.\n@@ -5635,7 +5726,7 @@\n    * @see com.rockwellcollins.atc.agree.agree.impl.AgreePackageImpl#getFloorCast()\n    * @generated\n    */\n-  int FLOOR_CAST = 97;\n+  int FLOOR_CAST = 98;\n \n   /**\n    * The feature id for the '<em><b>Owned Element</b></em>' reference list.\n@@ -5681,7 +5772,7 @@\n    * @see com.rockwellcollins.atc.agree.agree.impl.AgreePackageImpl#getRealCast()\n    * @generated\n    */\n-  int REAL_CAST = 98;\n+  int REAL_CAST = 99;\n \n   /**\n    * The feature id for the '<em><b>Owned Element</b></em>' reference list.\n@@ -6775,6 +6866,16 @@\n    */\n   EClass getLemmaStatement();\n \n+  /**\n+   * Returns the meta object for class '{@link com.rockwellcollins.atc.agree.agree.ReachableStatement <em>Reachable Statement</em>}'.\n+   * <!-- begin-user-doc -->\n+   * <!-- end-user-doc -->\n+   * @return the meta object for class '<em>Reachable Statement</em>'.\n+   * @see com.rockwellcollins.atc.agree.agree.ReachableStatement\n+   * @generated\n+   */\n+  EClass getReachableStatement();\n+\n   /**\n    * Returns the meta object for class '{@link com.rockwellcollins.atc.agree.agree.AlwaysStatement <em>Always Statement</em>}'.\n    * <!-- begin-user-doc -->\n@@ -9207,6 +9308,16 @@\n      */\n     EClass LEMMA_STATEMENT = eINSTANCE.getLemmaStatement();\n \n+    /**\n+     * The meta object literal for the '{@link com.rockwellcollins.atc.agree.agree.impl.ReachableStatementImpl <em>Reachable Statement</em>}' class.\n+     * <!-- begin-user-doc -->\n+     * <!-- end-user-doc -->\n+     * @see com.rockwellcollins.atc.agree.agree.impl.ReachableStatementImpl\n+     * @see com.rockwellcollins.atc.agree.agree.impl.AgreePackageImpl#getReachableStatement()\n+     * @generated\n+     */\n+    EClass REACHABLE_STATEMENT = eINSTANCE.getReachableStatement();\n+\n     /**\n      * The meta object literal for the '{@link com.rockwellcollins.atc.agree.agree.impl.AlwaysStatementImpl <em>Always Statement</em>}' class.\n      * <!-- begin-user-doc -->"
  },
  {
    "sha": "55bf58bc8a01628ea5873bf795110f157696ba07",
    "filename": "com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/agree/ReachableStatement.java",
    "status": "added",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/loonwerks/AGREE/blob/8fcb32160c4012a37c0381e923c9b27564a609d0/com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/agree/ReachableStatement.java",
    "raw_url": "https://github.com/loonwerks/AGREE/raw/8fcb32160c4012a37c0381e923c9b27564a609d0/com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/agree/ReachableStatement.java",
    "contents_url": "https://api.github.com/repos/loonwerks/AGREE/contents/com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/agree/ReachableStatement.java?ref=8fcb32160c4012a37c0381e923c9b27564a609d0",
    "patch": "@@ -0,0 +1,18 @@\n+/**\n+ */\n+package com.rockwellcollins.atc.agree.agree;\n+\n+\n+/**\n+ * <!-- begin-user-doc -->\n+ * A representation of the model object '<em><b>Reachable Statement</b></em>'.\n+ * <!-- end-user-doc -->\n+ *\n+ *\n+ * @see com.rockwellcollins.atc.agree.agree.AgreePackage#getReachableStatement()\n+ * @model\n+ * @generated\n+ */\n+public interface ReachableStatement extends NamedSpecStatement\n+{\n+} // ReachableStatement"
  },
  {
    "sha": "388468fdcaaab935af59d0d2044464f935c11c1b",
    "filename": "com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/agree/impl/AgreeFactoryImpl.java",
    "status": "modified",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/loonwerks/AGREE/blob/8fcb32160c4012a37c0381e923c9b27564a609d0/com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/agree/impl/AgreeFactoryImpl.java",
    "raw_url": "https://github.com/loonwerks/AGREE/raw/8fcb32160c4012a37c0381e923c9b27564a609d0/com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/agree/impl/AgreeFactoryImpl.java",
    "contents_url": "https://api.github.com/repos/loonwerks/AGREE/contents/com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/agree/impl/AgreeFactoryImpl.java?ref=8fcb32160c4012a37c0381e923c9b27564a609d0",
    "patch": "@@ -109,6 +109,7 @@ public EObject create(EClass eClass)\n       case AgreePackage.GUARANTEE_STATEMENT: return createGuaranteeStatement();\n       case AgreePackage.ASSERT_STATEMENT: return createAssertStatement();\n       case AgreePackage.LEMMA_STATEMENT: return createLemmaStatement();\n+      case AgreePackage.REACHABLE_STATEMENT: return createReachableStatement();\n       case AgreePackage.ALWAYS_STATEMENT: return createAlwaysStatement();\n       case AgreePackage.WHEN_HOLDS_STATEMENT: return createWhenHoldsStatement();\n       case AgreePackage.WHEN_OCCURS_STATMENT: return createWhenOccursStatment();\n@@ -708,6 +709,18 @@ public LemmaStatement createLemmaStatement()\n     return lemmaStatement;\n   }\n \n+  /**\n+   * <!-- begin-user-doc -->\n+   * <!-- end-user-doc -->\n+   * @generated\n+   */\n+  @Override\n+  public ReachableStatement createReachableStatement()\n+  {\n+    ReachableStatementImpl reachableStatement = new ReachableStatementImpl();\n+    return reachableStatement;\n+  }\n+\n   /**\n    * <!-- begin-user-doc -->\n    * <!-- end-user-doc -->"
  },
  {
    "sha": "f21ff54201b2b808602c84e06841214623b7057f",
    "filename": "com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/agree/impl/AgreePackageImpl.java",
    "status": "modified",
    "additions": 24,
    "deletions": 0,
    "changes": 24,
    "blob_url": "https://github.com/loonwerks/AGREE/blob/8fcb32160c4012a37c0381e923c9b27564a609d0/com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/agree/impl/AgreePackageImpl.java",
    "raw_url": "https://github.com/loonwerks/AGREE/raw/8fcb32160c4012a37c0381e923c9b27564a609d0/com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/agree/impl/AgreePackageImpl.java",
    "contents_url": "https://api.github.com/repos/loonwerks/AGREE/contents/com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/agree/impl/AgreePackageImpl.java?ref=8fcb32160c4012a37c0381e923c9b27564a609d0",
    "patch": "@@ -76,6 +76,7 @@\n import com.rockwellcollins.atc.agree.agree.PrevExpr;\n import com.rockwellcollins.atc.agree.agree.PrimType;\n import com.rockwellcollins.atc.agree.agree.PropertyStatement;\n+import com.rockwellcollins.atc.agree.agree.ReachableStatement;\n import com.rockwellcollins.atc.agree.agree.RealCast;\n import com.rockwellcollins.atc.agree.agree.RealLitExpr;\n import com.rockwellcollins.atc.agree.agree.RealTimeStatement;\n@@ -437,6 +438,13 @@\n    */\n   private EClass lemmaStatementEClass = null;\n \n+  /**\n+   * <!-- begin-user-doc -->\n+   * <!-- end-user-doc -->\n+   * @generated\n+   */\n+  private EClass reachableStatementEClass = null;\n+\n   /**\n    * <!-- begin-user-doc -->\n    * <!-- end-user-doc -->\n@@ -1982,6 +1990,17 @@ public EClass getLemmaStatement()\n     return lemmaStatementEClass;\n   }\n \n+  /**\n+   * <!-- begin-user-doc -->\n+   * <!-- end-user-doc -->\n+   * @generated\n+   */\n+  @Override\n+  public EClass getReachableStatement()\n+  {\n+    return reachableStatementEClass;\n+  }\n+\n   /**\n    * <!-- begin-user-doc -->\n    * <!-- end-user-doc -->\n@@ -3731,6 +3750,8 @@ public void createPackageContents()\n \n     lemmaStatementEClass = createEClass(LEMMA_STATEMENT);\n \n+    reachableStatementEClass = createEClass(REACHABLE_STATEMENT);\n+\n     alwaysStatementEClass = createEClass(ALWAYS_STATEMENT);\n     createEReference(alwaysStatementEClass, ALWAYS_STATEMENT__EXPR);\n \n@@ -4020,6 +4041,7 @@ public void initializePackageContents()\n     guaranteeStatementEClass.getESuperTypes().add(this.getNamedSpecStatement());\n     assertStatementEClass.getESuperTypes().add(this.getNamedSpecStatement());\n     lemmaStatementEClass.getESuperTypes().add(this.getNamedSpecStatement());\n+    reachableStatementEClass.getESuperTypes().add(this.getNamedSpecStatement());\n     alwaysStatementEClass.getESuperTypes().add(this.getPatternStatement());\n     whenHoldsStatementEClass.getESuperTypes().add(this.getWhenStatement());\n     whenOccursStatmentEClass.getESuperTypes().add(this.getWhenStatement());\n@@ -4221,6 +4243,8 @@ public void initializePackageContents()\n \n     initEClass(lemmaStatementEClass, LemmaStatement.class, \"LemmaStatement\", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);\n \n+    initEClass(reachableStatementEClass, ReachableStatement.class, \"ReachableStatement\", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);\n+\n     initEClass(alwaysStatementEClass, AlwaysStatement.class, \"AlwaysStatement\", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);\n     initEReference(getAlwaysStatement_Expr(), this.getExpr(), null, \"expr\", null, 0, 1, AlwaysStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);\n "
  },
  {
    "sha": "e29955bfac8c8fbe5b0459b4d7b226bb8968a1eb",
    "filename": "com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/agree/impl/ReachableStatementImpl.java",
    "status": "added",
    "additions": 40,
    "deletions": 0,
    "changes": 40,
    "blob_url": "https://github.com/loonwerks/AGREE/blob/8fcb32160c4012a37c0381e923c9b27564a609d0/com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/agree/impl/ReachableStatementImpl.java",
    "raw_url": "https://github.com/loonwerks/AGREE/raw/8fcb32160c4012a37c0381e923c9b27564a609d0/com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/agree/impl/ReachableStatementImpl.java",
    "contents_url": "https://api.github.com/repos/loonwerks/AGREE/contents/com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/agree/impl/ReachableStatementImpl.java?ref=8fcb32160c4012a37c0381e923c9b27564a609d0",
    "patch": "@@ -0,0 +1,40 @@\n+/**\n+ */\n+package com.rockwellcollins.atc.agree.agree.impl;\n+\n+import com.rockwellcollins.atc.agree.agree.AgreePackage;\n+import com.rockwellcollins.atc.agree.agree.ReachableStatement;\n+\n+import org.eclipse.emf.ecore.EClass;\n+\n+/**\n+ * <!-- begin-user-doc -->\n+ * An implementation of the model object '<em><b>Reachable Statement</b></em>'.\n+ * <!-- end-user-doc -->\n+ *\n+ * @generated\n+ */\n+public class ReachableStatementImpl extends NamedSpecStatementImpl implements ReachableStatement\n+{\n+  /**\n+   * <!-- begin-user-doc -->\n+   * <!-- end-user-doc -->\n+   * @generated\n+   */\n+  protected ReachableStatementImpl()\n+  {\n+    super();\n+  }\n+\n+  /**\n+   * <!-- begin-user-doc -->\n+   * <!-- end-user-doc -->\n+   * @generated\n+   */\n+  @Override\n+  protected EClass eStaticClass()\n+  {\n+    return AgreePackage.Literals.REACHABLE_STATEMENT;\n+  }\n+\n+} //ReachableStatementImpl"
  },
  {
    "sha": "78d84e85a03f7572d9d4c221ce10ce63f69fbfef",
    "filename": "com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/agree/util/AgreeAdapterFactory.java",
    "status": "modified",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/loonwerks/AGREE/blob/8fcb32160c4012a37c0381e923c9b27564a609d0/com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/agree/util/AgreeAdapterFactory.java",
    "raw_url": "https://github.com/loonwerks/AGREE/raw/8fcb32160c4012a37c0381e923c9b27564a609d0/com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/agree/util/AgreeAdapterFactory.java",
    "contents_url": "https://api.github.com/repos/loonwerks/AGREE/contents/com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/agree/util/AgreeAdapterFactory.java?ref=8fcb32160c4012a37c0381e923c9b27564a609d0",
    "patch": "@@ -306,6 +306,11 @@ public Adapter caseLemmaStatement(LemmaStatement object)\n         return createLemmaStatementAdapter();\n       }\n       @Override\n+      public Adapter caseReachableStatement(ReachableStatement object)\n+      {\n+        return createReachableStatementAdapter();\n+      }\n+      @Override\n       public Adapter caseAlwaysStatement(AlwaysStatement object)\n       {\n         return createAlwaysStatementAdapter();\n@@ -1297,6 +1302,21 @@ public Adapter createLemmaStatementAdapter()\n     return null;\n   }\n \n+  /**\n+   * Creates a new adapter for an object of class '{@link com.rockwellcollins.atc.agree.agree.ReachableStatement <em>Reachable Statement</em>}'.\n+   * <!-- begin-user-doc -->\n+   * This default implementation returns null so that we can easily ignore cases;\n+   * it's useful to ignore a case when inheritance will catch all the cases anyway.\n+   * <!-- end-user-doc -->\n+   * @return the new adapter.\n+   * @see com.rockwellcollins.atc.agree.agree.ReachableStatement\n+   * @generated\n+   */\n+  public Adapter createReachableStatementAdapter()\n+  {\n+    return null;\n+  }\n+\n   /**\n    * Creates a new adapter for an object of class '{@link com.rockwellcollins.atc.agree.agree.AlwaysStatement <em>Always Statement</em>}'.\n    * <!-- begin-user-doc -->"
  },
  {
    "sha": "3678ee271d9eb0bdb545a5c38b83db25be78280e",
    "filename": "com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/agree/util/AgreeSwitch.java",
    "status": "modified",
    "additions": 27,
    "deletions": 0,
    "changes": 27,
    "blob_url": "https://github.com/loonwerks/AGREE/blob/8fcb32160c4012a37c0381e923c9b27564a609d0/com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/agree/util/AgreeSwitch.java",
    "raw_url": "https://github.com/loonwerks/AGREE/raw/8fcb32160c4012a37c0381e923c9b27564a609d0/com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/agree/util/AgreeSwitch.java",
    "contents_url": "https://api.github.com/repos/loonwerks/AGREE/contents/com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/agree/util/AgreeSwitch.java?ref=8fcb32160c4012a37c0381e923c9b27564a609d0",
    "patch": "@@ -497,6 +497,17 @@ protected T doSwitch(int classifierID, EObject theEObject)\n         if (result == null) result = defaultCase(theEObject);\n         return result;\n       }\n+      case AgreePackage.REACHABLE_STATEMENT:\n+      {\n+        ReachableStatement reachableStatement = (ReachableStatement)theEObject;\n+        T result = caseReachableStatement(reachableStatement);\n+        if (result == null) result = caseNamedSpecStatement(reachableStatement);\n+        if (result == null) result = caseNamedElement(reachableStatement);\n+        if (result == null) result = caseSpecStatement(reachableStatement);\n+        if (result == null) result = caseElement(reachableStatement);\n+        if (result == null) result = defaultCase(theEObject);\n+        return result;\n+      }\n       case AgreePackage.ALWAYS_STATEMENT:\n       {\n         AlwaysStatement alwaysStatement = (AlwaysStatement)theEObject;\n@@ -1705,6 +1716,22 @@ public T caseLemmaStatement(LemmaStatement object)\n     return null;\n   }\n \n+  /**\n+   * Returns the result of interpreting the object as an instance of '<em>Reachable Statement</em>'.\n+   * <!-- begin-user-doc -->\n+   * This implementation returns null;\n+   * returning a non-null result will terminate the switch.\n+   * <!-- end-user-doc -->\n+   * @param object the target of the switch.\n+   * @return the result of interpreting the object as an instance of '<em>Reachable Statement</em>'.\n+   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)\n+   * @generated\n+   */\n+  public T caseReachableStatement(ReachableStatement object)\n+  {\n+    return null;\n+  }\n+\n   /**\n    * Returns the result of interpreting the object as an instance of '<em>Always Statement</em>'.\n    * <!-- begin-user-doc -->"
  },
  {
    "sha": "6407a42d3932b3121e1f6f41e61193d90383d48b",
    "filename": "com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/parser/antlr/internal/InternalAgreeParser.g",
    "status": "modified",
    "additions": 95,
    "deletions": 0,
    "changes": 95,
    "blob_url": "https://github.com/loonwerks/AGREE/blob/8fcb32160c4012a37c0381e923c9b27564a609d0/com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/parser/antlr/internal/InternalAgreeParser.g",
    "raw_url": "https://github.com/loonwerks/AGREE/raw/8fcb32160c4012a37c0381e923c9b27564a609d0/com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/parser/antlr/internal/InternalAgreeParser.g",
    "contents_url": "https://api.github.com/repos/loonwerks/AGREE/contents/com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/parser/antlr/internal/InternalAgreeParser.g?ref=8fcb32160c4012a37c0381e923c9b27564a609d0",
    "patch": "@@ -1054,6 +1054,101 @@ ruleNamedSpecStatement returns [EObject current=null]\n     {\n     \tnewLeafNode(otherlv_31, grammarAccess.getNamedSpecStatementAccess().getSemicolonKeyword_3_6());\n     }\n+)\n+    |((\n+    {\n+        $current = forceCreateModelElement(\n+            grammarAccess.getNamedSpecStatementAccess().getReachableStatementAction_4_0(),\n+            $current);\n+    }\n+)\n+\totherlv_33=Reachable\n+    {\n+    \tnewLeafNode(otherlv_33, grammarAccess.getNamedSpecStatementAccess().getReachableKeyword_4_1());\n+    }\n+(\n+(\n+\t\tlv_name_34_0=RULE_ID\n+\t\t{\n+\t\t\tnewLeafNode(lv_name_34_0, grammarAccess.getNamedSpecStatementAccess().getNameIDTerminalRuleCall_4_2_0()); \n+\t\t}\n+\t\t{\n+\t        if ($current==null) {\n+\t            $current = createModelElement(grammarAccess.getNamedSpecStatementRule());\n+\t        }\n+       \t\tsetWithLastConsumed(\n+       \t\t\t$current, \n+       \t\t\t\"name\",\n+        \t\tlv_name_34_0, \n+        \t\t\"org.osate.xtext.aadl2.properties.Properties.ID\");\n+\t    }\n+\n+)\n+)?(\n+(\n+\t\tlv_str_35_0=RULE_STRING\n+\t\t{\n+\t\t\tnewLeafNode(lv_str_35_0, grammarAccess.getNamedSpecStatementAccess().getStrSTRINGTerminalRuleCall_4_3_0()); \n+\t\t}\n+\t\t{\n+\t        if ($current==null) {\n+\t            $current = createModelElement(grammarAccess.getNamedSpecStatementRule());\n+\t        }\n+       \t\tsetWithLastConsumed(\n+       \t\t\t$current, \n+       \t\t\t\"str\",\n+        \t\tlv_str_35_0, \n+        \t\t\"org.osate.xtext.aadl2.properties.Properties.STRING\");\n+\t    }\n+\n+)\n+)\n+\totherlv_36=Colon\n+    {\n+    \tnewLeafNode(otherlv_36, grammarAccess.getNamedSpecStatementAccess().getColonKeyword_4_4());\n+    }\n+((\n+(\n+\t\t{ \n+\t        newCompositeNode(grammarAccess.getNamedSpecStatementAccess().getExprExprParserRuleCall_4_5_0_0()); \n+\t    }\n+\t\tlv_expr_37_0=ruleExpr\t\t{\n+\t        if ($current==null) {\n+\t            $current = createModelElementForParent(grammarAccess.getNamedSpecStatementRule());\n+\t        }\n+       \t\tset(\n+       \t\t\t$current, \n+       \t\t\t\"expr\",\n+        \t\tlv_expr_37_0, \n+        \t\t\"com.rockwellcollins.atc.agree.Agree.Expr\");\n+\t        afterParserOrEnumRuleCall();\n+\t    }\n+\n+)\n+)\n+    |(\n+(\n+\t\t{ \n+\t        newCompositeNode(grammarAccess.getNamedSpecStatementAccess().getPatternPatternStatementParserRuleCall_4_5_1_0()); \n+\t    }\n+\t\tlv_pattern_38_0=rulePatternStatement\t\t{\n+\t        if ($current==null) {\n+\t            $current = createModelElementForParent(grammarAccess.getNamedSpecStatementRule());\n+\t        }\n+       \t\tset(\n+       \t\t\t$current, \n+       \t\t\t\"pattern\",\n+        \t\tlv_pattern_38_0, \n+        \t\t\"com.rockwellcollins.atc.agree.Agree.PatternStatement\");\n+\t        afterParserOrEnumRuleCall();\n+\t    }\n+\n+)\n+))\n+\totherlv_39=Semicolon\n+    {\n+    \tnewLeafNode(otherlv_39, grammarAccess.getNamedSpecStatementAccess().getSemicolonKeyword_4_6());\n+    }\n ))\n ;\n "
  },
  {
    "sha": "1fef7072e2fa2b74731f9280dbeaee126356cad6",
    "filename": "com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/parser/antlr/internal/InternalAgreeParser.java",
    "status": "modified",
    "additions": 4148,
    "deletions": 3915,
    "changes": 8063,
    "blob_url": "https://github.com/loonwerks/AGREE/blob/8fcb32160c4012a37c0381e923c9b27564a609d0/com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/parser/antlr/internal/InternalAgreeParser.java",
    "raw_url": "https://github.com/loonwerks/AGREE/raw/8fcb32160c4012a37c0381e923c9b27564a609d0/com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/parser/antlr/internal/InternalAgreeParser.java",
    "contents_url": "https://api.github.com/repos/loonwerks/AGREE/contents/com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/parser/antlr/internal/InternalAgreeParser.java?ref=8fcb32160c4012a37c0381e923c9b27564a609d0"
  },
  {
    "sha": "f94186a315492eb83c4034484a833f924b306ef6",
    "filename": "com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/parser/antlr/internal/InternalAgreeParser.tokens",
    "status": "modified",
    "additions": 127,
    "deletions": 126,
    "changes": 253,
    "blob_url": "https://github.com/loonwerks/AGREE/blob/8fcb32160c4012a37c0381e923c9b27564a609d0/com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/parser/antlr/internal/InternalAgreeParser.tokens",
    "raw_url": "https://github.com/loonwerks/AGREE/raw/8fcb32160c4012a37c0381e923c9b27564a609d0/com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/parser/antlr/internal/InternalAgreeParser.tokens",
    "contents_url": "https://api.github.com/repos/loonwerks/AGREE/contents/com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/parser/antlr/internal/InternalAgreeParser.tokens?ref=8fcb32160c4012a37c0381e923c9b27564a609d0",
    "patch": "@@ -1,138 +1,139 @@\n-'!='=97\n-'('=113\n-')'=114\n-'*'=115\n-'+'=116\n-'+=>'=84\n-','=117\n-'-'=118\n-'->'=98\n-'.'=119\n-'..'=99\n-'/'=120\n-':'=121\n-'::'=100\n-':='=101\n-';'=122\n-'<'=123\n-'<='=102\n-'<=>'=85\n-'<>'=103\n-'='=124\n-'=>'=104\n-'>'=125\n-'>='=105\n+'!='=98\n+'('=114\n+')'=115\n+'*'=116\n+'+'=117\n+'+=>'=85\n+','=118\n+'-'=119\n+'->'=99\n+'.'=120\n+'..'=100\n+'/'=121\n+':'=122\n+'::'=101\n+':='=102\n+';'=123\n+'<'=124\n+'<='=103\n+'<=>'=86\n+'<>'=104\n+'='=125\n+'=>'=105\n+'>'=126\n+'>='=106\n 'Get_Property'=5\n-'IAT'=86\n-'['=126\n-'[|'=106\n-']'=127\n-'^'=128\n-'_CLK'=66\n-'_COUNT'=39\n-'_INSERT'=28\n-'_REMOVE'=29\n+'IAT'=87\n+'['=127\n+'[|'=107\n+']'=128\n+'^'=129\n+'_CLK'=67\n+'_COUNT'=40\n+'_INSERT'=29\n+'_REMOVE'=30\n 'agree_input'=7\n-'always'=40\n-'and'=87\n-'applies'=30\n-'assert'=41\n-'assign'=42\n-'assume'=43\n+'always'=41\n+'and'=88\n+'applies'=31\n+'assert'=42\n+'assign'=43\n+'assume'=44\n 'asynchronous'=6\n-'becomes'=31\n-'binding'=32\n-'bool'=67\n-'calendar'=18\n+'becomes'=32\n+'binding'=33\n+'bool'=68\n+'calendar'=19\n 'classifier'=9\n-'compute'=33\n+'compute'=34\n 'condition'=11\n 'connection'=10\n-'const'=54\n-'constant'=19\n-'contract'=20\n-'delta'=55\n-'div'=88\n-'during'=44\n-'each'=68\n-'else'=69\n-'enum'=70\n-'eq'=107\n-'event'=56\n+'const'=55\n+'constant'=20\n+'contract'=21\n+'delta'=56\n+'div'=89\n+'during'=45\n+'each'=69\n+'else'=70\n+'enum'=71\n+'eq'=108\n+'event'=57\n 'exclusively'=8\n-'exists'=45\n-'external'=21\n-'false'=57\n-'flatmap'=34\n-'floor'=58\n-'foldl'=59\n-'foldr'=60\n-'forall'=46\n-'fun'=89\n+'exists'=46\n+'external'=22\n+'false'=58\n+'flatmap'=35\n+'floor'=59\n+'foldl'=60\n+'foldr'=61\n+'forall'=47\n+'fun'=90\n 'guarantee'=12\n-'holds'=61\n-'if'=108\n-'implies'=35\n-'in'=109\n-'indices'=36\n+'holds'=62\n+'if'=109\n+'implies'=36\n+'in'=110\n+'indices'=37\n 'initially'=13\n-'int'=90\n-'into'=71\n-'jitter'=47\n-'latched'=37\n-'lemma'=62\n-'let'=91\n-'lift'=72\n+'int'=91\n+'into'=72\n+'jitter'=48\n+'latched'=38\n+'lemma'=63\n+'let'=92\n+'lift'=73\n 'linearization'=4\n-'mod'=92\n-'modes'=63\n+'mod'=93\n+'modes'=64\n 'no_simult'=14\n-'node'=73\n-'not'=93\n-'occur'=64\n-'occurs'=48\n-'or'=110\n-'ordering'=22\n-'over'=74\n+'node'=74\n+'not'=94\n+'occur'=65\n+'occurs'=49\n+'or'=111\n+'ordering'=23\n+'over'=75\n 'parameter'=15\n-'pre'=94\n-'prev'=75\n-'property'=23\n-'raises'=49\n-'real'=76\n-'reference'=16\n-'returns'=38\n-'simult'=50\n-'sporadic'=24\n-'struct'=51\n-'synchrony'=17\n-'tel'=95\n-'then'=77\n-'this'=78\n-'time'=79\n-'timefall'=25\n-'timeof'=52\n-'timerise'=26\n-'times'=65\n-'to'=111\n-'true'=80\n-'type'=81\n-'var'=96\n-'when'=82\n-'whenever'=27\n-'with'=83\n-'within'=53\n-'{'=129\n-'|]'=112\n-'}'=130\n-RULE_BASED_INTEGER=136\n-RULE_DIGIT=132\n-RULE_EXPONENT=133\n-RULE_EXTENDED_DIGIT=138\n-RULE_ID=140\n-RULE_INTEGER_LIT=137\n-RULE_INT_EXPONENT=134\n-RULE_REAL_LIT=135\n-RULE_SL_COMMENT=131\n-RULE_STRING=139\n-RULE_WS=141\n+'pre'=95\n+'prev'=76\n+'property'=24\n+'raises'=50\n+'reachable'=16\n+'real'=77\n+'reference'=17\n+'returns'=39\n+'simult'=51\n+'sporadic'=25\n+'struct'=52\n+'synchrony'=18\n+'tel'=96\n+'then'=78\n+'this'=79\n+'time'=80\n+'timefall'=26\n+'timeof'=53\n+'timerise'=27\n+'times'=66\n+'to'=112\n+'true'=81\n+'type'=82\n+'var'=97\n+'when'=83\n+'whenever'=28\n+'with'=84\n+'within'=54\n+'{'=130\n+'|]'=113\n+'}'=131\n+RULE_BASED_INTEGER=137\n+RULE_DIGIT=133\n+RULE_EXPONENT=134\n+RULE_EXTENDED_DIGIT=139\n+RULE_ID=141\n+RULE_INTEGER_LIT=138\n+RULE_INT_EXPONENT=135\n+RULE_REAL_LIT=136\n+RULE_SL_COMMENT=132\n+RULE_STRING=140\n+RULE_WS=142"
  },
  {
    "sha": "a6dfff92f60c1901c526918119a3559314144ff2",
    "filename": "com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/parser/antlr/lexer/InternalAgreeLexer.g",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/loonwerks/AGREE/blob/8fcb32160c4012a37c0381e923c9b27564a609d0/com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/parser/antlr/lexer/InternalAgreeLexer.g",
    "raw_url": "https://github.com/loonwerks/AGREE/raw/8fcb32160c4012a37c0381e923c9b27564a609d0/com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/parser/antlr/lexer/InternalAgreeLexer.g",
    "contents_url": "https://api.github.com/repos/loonwerks/AGREE/contents/com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/parser/antlr/lexer/InternalAgreeLexer.g?ref=8fcb32160c4012a37c0381e923c9b27564a609d0",
    "patch": "@@ -40,6 +40,8 @@ No_simult : ('N'|'n')('O'|'o')'_'('S'|'s')('I'|'i')('M'|'m')('U'|'u')('L'|'l')('\n \n Parameter : ('P'|'p')('A'|'a')('R'|'r')('A'|'a')('M'|'m')('E'|'e')('T'|'t')('E'|'e')('R'|'r');\n \n+Reachable : ('R'|'r')('E'|'e')('A'|'a')('C'|'c')('H'|'h')('A'|'a')('B'|'b')('L'|'l')('E'|'e');\n+\n Reference : ('R'|'r')('E'|'e')('F'|'f')('E'|'e')('R'|'r')('E'|'e')('N'|'n')('C'|'c')('E'|'e');\n \n Synchrony : ('S'|'s')('Y'|'y')('N'|'n')('C'|'c')('H'|'h')('R'|'r')('O'|'o')('N'|'n')('Y'|'y');"
  },
  {
    "sha": "5803514b272da6959f0a66bd5e7789976fc5cd6d",
    "filename": "com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/parser/antlr/lexer/InternalAgreeLexer.java",
    "status": "modified",
    "additions": 922,
    "deletions": 807,
    "changes": 1729,
    "blob_url": "https://github.com/loonwerks/AGREE/blob/8fcb32160c4012a37c0381e923c9b27564a609d0/com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/parser/antlr/lexer/InternalAgreeLexer.java",
    "raw_url": "https://github.com/loonwerks/AGREE/raw/8fcb32160c4012a37c0381e923c9b27564a609d0/com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/parser/antlr/lexer/InternalAgreeLexer.java",
    "contents_url": "https://api.github.com/repos/loonwerks/AGREE/contents/com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/parser/antlr/lexer/InternalAgreeLexer.java?ref=8fcb32160c4012a37c0381e923c9b27564a609d0"
  },
  {
    "sha": "06c707ab8db615407fb542a488842c3adb093eca",
    "filename": "com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/parser/antlr/lexer/InternalAgreeLexer.tokens",
    "status": "modified",
    "additions": 127,
    "deletions": 126,
    "changes": 253,
    "blob_url": "https://github.com/loonwerks/AGREE/blob/8fcb32160c4012a37c0381e923c9b27564a609d0/com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/parser/antlr/lexer/InternalAgreeLexer.tokens",
    "raw_url": "https://github.com/loonwerks/AGREE/raw/8fcb32160c4012a37c0381e923c9b27564a609d0/com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/parser/antlr/lexer/InternalAgreeLexer.tokens",
    "contents_url": "https://api.github.com/repos/loonwerks/AGREE/contents/com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/parser/antlr/lexer/InternalAgreeLexer.tokens?ref=8fcb32160c4012a37c0381e923c9b27564a609d0",
    "patch": "@@ -1,138 +1,139 @@\n Agree_input=7\n-Always=40\n-And=87\n-Applies=30\n-Assert=41\n-Assign=42\n-Assume=43\n-Asterisk=115\n+Always=41\n+And=88\n+Applies=31\n+Assert=42\n+Assign=43\n+Assume=44\n+Asterisk=116\n Asynchronous=6\n-Becomes=31\n-Binding=32\n-Bool=67\n-Calendar=18\n-CircumflexAccent=128\n+Becomes=32\n+Binding=33\n+Bool=68\n+Calendar=19\n+CircumflexAccent=129\n Classifier=9\n-Colon=121\n-ColonColon=100\n-ColonEqualsSign=101\n-Comma=117\n-Compute=33\n+Colon=122\n+ColonColon=101\n+ColonEqualsSign=102\n+Comma=118\n+Compute=34\n Condition=11\n Connection=10\n-Const=54\n-Constant=19\n-Contract=20\n-Delta=55\n-Div=88\n-During=44\n-Each=68\n-Else=69\n-Enum=70\n-Eq=107\n-EqualsSign=124\n-EqualsSignGreaterThanSign=104\n-Event=56\n-ExclamationMarkEqualsSign=97\n+Const=55\n+Constant=20\n+Contract=21\n+Delta=56\n+Div=89\n+During=45\n+Each=69\n+Else=70\n+Enum=71\n+Eq=108\n+EqualsSign=125\n+EqualsSignGreaterThanSign=105\n+Event=57\n+ExclamationMarkEqualsSign=98\n Exclusively=8\n-Exists=45\n-External=21\n-False=57\n-Flatmap=34\n-Floor=58\n-Foldl=59\n-Foldr=60\n-Forall=46\n-FullStop=119\n-FullStopFullStop=99\n-Fun=89\n+Exists=46\n+External=22\n+False=58\n+Flatmap=35\n+Floor=59\n+Foldl=60\n+Foldr=61\n+Forall=47\n+FullStop=120\n+FullStopFullStop=100\n+Fun=90\n Get_Property=5\n-GreaterThanSign=125\n-GreaterThanSignEqualsSign=105\n+GreaterThanSign=126\n+GreaterThanSignEqualsSign=106\n Guarantee=12\n-Holds=61\n-HyphenMinus=118\n-HyphenMinusGreaterThanSign=98\n-IAT=86\n-If=108\n-Implies=35\n-In=109\n-Indices=36\n+Holds=62\n+HyphenMinus=119\n+HyphenMinusGreaterThanSign=99\n+IAT=87\n+If=109\n+Implies=36\n+In=110\n+Indices=37\n Initially=13\n-Int=90\n-Into=71\n-Jitter=47\n-KW__CLK=66\n-KW__COUNT=39\n-KW__INSERT=28\n-KW__REMOVE=29\n-Latched=37\n-LeftCurlyBracket=129\n-LeftParenthesis=113\n-LeftSquareBracket=126\n-LeftSquareBracketVerticalLine=106\n-Lemma=62\n-LessThanSign=123\n-LessThanSignEqualsSign=102\n-LessThanSignEqualsSignGreaterThanSign=85\n-LessThanSignGreaterThanSign=103\n-Let=91\n-Lift=72\n+Int=91\n+Into=72\n+Jitter=48\n+KW__CLK=67\n+KW__COUNT=40\n+KW__INSERT=29\n+KW__REMOVE=30\n+Latched=38\n+LeftCurlyBracket=130\n+LeftParenthesis=114\n+LeftSquareBracket=127\n+LeftSquareBracketVerticalLine=107\n+Lemma=63\n+LessThanSign=124\n+LessThanSignEqualsSign=103\n+LessThanSignEqualsSignGreaterThanSign=86\n+LessThanSignGreaterThanSign=104\n+Let=92\n+Lift=73\n Linearization=4\n-Mod=92\n-Modes=63\n+Mod=93\n+Modes=64\n No_simult=14\n-Node=73\n-Not=93\n-Occur=64\n-Occurs=48\n-Or=110\n-Ordering=22\n-Over=74\n+Node=74\n+Not=94\n+Occur=65\n+Occurs=49\n+Or=111\n+Ordering=23\n+Over=75\n Parameter=15\n-PlusSign=116\n-PlusSignEqualsSignGreaterThanSign=84\n-Pre=94\n-Prev=75\n-Property=23\n-RULE_BASED_INTEGER=136\n-RULE_DIGIT=132\n-RULE_EXPONENT=133\n-RULE_EXTENDED_DIGIT=138\n-RULE_ID=140\n-RULE_INTEGER_LIT=137\n-RULE_INT_EXPONENT=134\n-RULE_REAL_LIT=135\n-RULE_SL_COMMENT=131\n-RULE_STRING=139\n-RULE_WS=141\n-Raises=49\n-Real=76\n-Reference=16\n-Returns=38\n-RightCurlyBracket=130\n-RightParenthesis=114\n-RightSquareBracket=127\n-Semicolon=122\n-Simult=50\n-Solidus=120\n-Sporadic=24\n-Struct=51\n-Synchrony=17\n-Tel=95\n-Then=77\n-This=78\n-Time=79\n-Timefall=25\n-Timeof=52\n-Timerise=26\n-Times=65\n-To=111\n-True=80\n-Type=81\n-Var=96\n-VerticalLineRightSquareBracket=112\n-When=82\n-Whenever=27\n-With=83\n-Within=53\n+PlusSign=117\n+PlusSignEqualsSignGreaterThanSign=85\n+Pre=95\n+Prev=76\n+Property=24\n+RULE_BASED_INTEGER=137\n+RULE_DIGIT=133\n+RULE_EXPONENT=134\n+RULE_EXTENDED_DIGIT=139\n+RULE_ID=141\n+RULE_INTEGER_LIT=138\n+RULE_INT_EXPONENT=135\n+RULE_REAL_LIT=136\n+RULE_SL_COMMENT=132\n+RULE_STRING=140\n+RULE_WS=142\n+Raises=50\n+Reachable=16\n+Real=77\n+Reference=17\n+Returns=39\n+RightCurlyBracket=131\n+RightParenthesis=115\n+RightSquareBracket=128\n+Semicolon=123\n+Simult=51\n+Solidus=121\n+Sporadic=25\n+Struct=52\n+Synchrony=18\n+Tel=96\n+Then=78\n+This=79\n+Time=80\n+Timefall=26\n+Timeof=53\n+Timerise=27\n+Times=66\n+To=112\n+True=81\n+Type=82\n+Var=97\n+VerticalLineRightSquareBracket=113\n+When=83\n+Whenever=28\n+With=84\n+Within=54"
  },
  {
    "sha": "70b7a7674fdc8d2e9b3596ff3c42194f7265ab6e",
    "filename": "com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/serializer/AbstractAgreeSemanticSequencer.java",
    "status": "modified",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/loonwerks/AGREE/blob/8fcb32160c4012a37c0381e923c9b27564a609d0/com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/serializer/AbstractAgreeSemanticSequencer.java",
    "raw_url": "https://github.com/loonwerks/AGREE/raw/8fcb32160c4012a37c0381e923c9b27564a609d0/com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/serializer/AbstractAgreeSemanticSequencer.java",
    "contents_url": "https://api.github.com/repos/loonwerks/AGREE/contents/com.rockwellcollins.atc.agree/src-gen/com/rockwellcollins/atc/agree/serializer/AbstractAgreeSemanticSequencer.java?ref=8fcb32160c4012a37c0381e923c9b27564a609d0",
    "patch": "@@ -68,6 +68,7 @@\n import com.rockwellcollins.atc.agree.agree.PrevExpr;\n import com.rockwellcollins.atc.agree.agree.PrimType;\n import com.rockwellcollins.atc.agree.agree.PropertyStatement;\n+import com.rockwellcollins.atc.agree.agree.ReachableStatement;\n import com.rockwellcollins.atc.agree.agree.RealCast;\n import com.rockwellcollins.atc.agree.agree.RealLitExpr;\n import com.rockwellcollins.atc.agree.agree.RecordDef;\n@@ -420,6 +421,9 @@ else if (epackage == AgreePackage.eINSTANCE)\n \t\t\tcase AgreePackage.PROPERTY_STATEMENT:\n \t\t\t\tsequence_PropertyStatement(context, (PropertyStatement) semanticObject); \n \t\t\t\treturn; \n+\t\t\tcase AgreePackage.REACHABLE_STATEMENT:\n+\t\t\t\tsequence_NamedSpecStatement(context, (ReachableStatement) semanticObject); \n+\t\t\t\treturn; \n \t\t\tcase AgreePackage.REAL_CAST:\n \t\t\t\tsequence_TermExpr(context, (RealCast) semanticObject); \n \t\t\t\treturn; \n@@ -1468,6 +1472,21 @@ protected void sequence_NamedSpecStatement(ISerializationContext context, LemmaS\n \t}\n \t\n \t\n+\t/**\n+\t * Contexts:\n+\t *     NamedElement returns ReachableStatement\n+\t *     Element returns ReachableStatement\n+\t *     SpecStatement returns ReachableStatement\n+\t *     NamedSpecStatement returns ReachableStatement\n+\t *\n+\t * Constraint:\n+\t *     (name=ID? str=STRING (expr=Expr | pattern=PatternStatement))\n+\t */\n+\tprotected void sequence_NamedSpecStatement(ISerializationContext context, ReachableStatement semanticObject) {\n+\t\tgenericSequencer.createSequence(context, semanticObject);\n+\t}\n+\t\n+\t\n \t/**\n \t * Contexts:\n \t *     Element returns NodeBodyExpr"
  }
]
