[
  {
    "sha": "2d9464eb486e42e71e1e8abbe966eae93de375b4",
    "filename": "src/main/java/com/example/volunteer/Controller/ActivityController.java",
    "status": "modified",
    "additions": 29,
    "deletions": 4,
    "changes": 33,
    "blob_url": "https://github.com/zwh1314/volunteer/blob/ac074456ce3a10fb2295f6c728d469d49bc990af/src/main/java/com/example/volunteer/Controller/ActivityController.java",
    "raw_url": "https://github.com/zwh1314/volunteer/raw/ac074456ce3a10fb2295f6c728d469d49bc990af/src/main/java/com/example/volunteer/Controller/ActivityController.java",
    "contents_url": "https://api.github.com/repos/zwh1314/volunteer/contents/src/main/java/com/example/volunteer/Controller/ActivityController.java?ref=ac074456ce3a10fb2295f6c728d469d49bc990af",
    "patch": "@@ -18,6 +18,7 @@\n import java.text.ParsePosition;\n import java.text.SimpleDateFormat;\n import java.util.Date;\n+import java.util.List;\n \n \n @Api(tags = \"活动Controller\")\n@@ -63,12 +64,12 @@\n     public Response<Boolean> addActivity(@RequestParam(\"activityName\")String activityName,\n                                          @RequestParam(\"activityContent\")String activityContent,\n                                          @RequestParam(\"activityOrganizer\")String activityOrganizer,\n-                                         @RequestParam(\"activityDate\") String activityDate) {\n+                                         @RequestParam(\"activityDate\") String activityDate, @RequestParam(\"activityPicture\")String activityPicture) {\n         Response<Boolean> response = new Response<>();\n         SimpleDateFormat formatter = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n         ParsePosition pos = new ParsePosition(0);\n         Date NewActivityDate = formatter.parse(activityDate, pos);\n-        Activity activity = new Activity(activityName, activityContent,activityOrganizer,NewActivityDate);\n+        Activity activity = new Activity(activityName, activityContent,activityOrganizer,NewActivityDate,activityPicture);\n         try {\n \n             return activityService.addActivity(activity);\n@@ -96,12 +97,12 @@\n                                             @RequestParam(\"activityName\")String activityName,\n                                             @RequestParam(\"activityContent\")String activityContent,\n                                             @RequestParam(\"activityOrganizer\")String activityOrganizer,\n-                                            @RequestParam(\"activityDate\") String activityDate) {\n+                                            @RequestParam(\"activityDate\") String activityDate, @RequestParam(\"activityPicture\") String activityPicture) {\n         Response<Boolean> response = new Response<>();\n         SimpleDateFormat formatter = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n         ParsePosition pos = new ParsePosition(0);\n         Date NewActivityDate = formatter.parse(activityDate, pos);\n-        Activity activity = new Activity(activityName, activityContent,activityOrganizer,NewActivityDate);\n+        Activity activity = new Activity(activityName, activityContent,activityOrganizer,NewActivityDate,activityPicture);\n         activity.setActivityId(activityId);\n         try {\n             return activityService.updateActivity(activity);\n@@ -145,5 +146,29 @@\n         }\n     }\n \n+    @GetMapping(\"/getActivityByNumber\")\n+    @ApiOperation(\"获得活动by Number\")\n+    @ApiImplicitParams({\n+            @ApiImplicitParam(name = \"number\", value = \"需要的活动个数\", paramType = \"query\", dataType = \"long\"),\n+    })\n+    public Response<List<Activity>> getActivityByNumber(@RequestParam(\"number\") long number) {\n+        Response<List<Activity>> response = new Response<>();\n+        try {\n+            return activityService.getActivityByNumber(number);\n+        } catch (IllegalArgumentException e) {\n+            logger.warn(\"[getActivityByNumber Illegal Argument], number: {}\", number, e);\n+            response.setFail(ResponseEnum.ILLEGAL_PARAM);\n+            return response;\n+        } catch (VolunteerRuntimeException e) {\n+            logger.error(\"[getActivityByNumber Runtime Exception], number: {}\", number, e);\n+            response.setFail(e.getExceptionCode(), e.getMessage());\n+            return response;\n+        }  catch (Exception e) {\n+            logger.error(\"[getActivityByNumber Exception], number: {}\", number, e);\n+            response.setFail(ResponseEnum.SERVER_ERROR);\n+            return response;\n+        }\n+    }\n+\n \n }"
  },
  {
    "sha": "46d07055d78d143339135b10dbc7373be922b5bb",
    "filename": "src/main/java/com/example/volunteer/Controller/ActivityNewsController.java",
    "status": "modified",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/zwh1314/volunteer/blob/ac074456ce3a10fb2295f6c728d469d49bc990af/src/main/java/com/example/volunteer/Controller/ActivityNewsController.java",
    "raw_url": "https://github.com/zwh1314/volunteer/raw/ac074456ce3a10fb2295f6c728d469d49bc990af/src/main/java/com/example/volunteer/Controller/ActivityNewsController.java",
    "contents_url": "https://api.github.com/repos/zwh1314/volunteer/contents/src/main/java/com/example/volunteer/Controller/ActivityNewsController.java?ref=ac074456ce3a10fb2295f6c728d469d49bc990af",
    "patch": "@@ -51,6 +51,28 @@\n         }\n     }\n \n+    @GetMapping(\"/getActivityNewsByNumber\")\n+    @ApiOperation(\"获得活动 byNumber\")\n+\n+    public Response<List<ActivityNews>> getActivityNewsByNumber(@RequestParam(\"number\") long number) {\n+        Response<List<ActivityNews>> response = new Response<>();\n+        try {\n+            return activityNewsService.getActivityNewsByNumber(number);\n+        } catch (IllegalArgumentException e) {\n+            logger.warn(\"[getActivityNewsByNumber Illegal Argument], number: {}\", number, e);\n+            response.setFail(ResponseEnum.ILLEGAL_PARAM);\n+            return response;\n+        } catch (VolunteerRuntimeException e) {\n+            logger.error(\"[getActivityNewsByNumber Runtime Exception], number: {}\", number, e);\n+            response.setFail(e.getExceptionCode(), e.getMessage());\n+            return response;\n+        }  catch (Exception e) {\n+            logger.error(\"[getActivityNewsByNumber Exception], number: {}\", number, e);\n+            response.setFail(ResponseEnum.SERVER_ERROR);\n+            return response;\n+        }\n+    }\n+\n \n     @PostMapping(\"/addActivityNews\")\n     @ApiOperation(\"添加活动新闻\")"
  },
  {
    "sha": "48cb8a014837db4fe11293c7876afb82d362a2b4",
    "filename": "src/main/java/com/example/volunteer/Controller/CommentController.java",
    "status": "modified",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/zwh1314/volunteer/blob/ac074456ce3a10fb2295f6c728d469d49bc990af/src/main/java/com/example/volunteer/Controller/CommentController.java",
    "raw_url": "https://github.com/zwh1314/volunteer/raw/ac074456ce3a10fb2295f6c728d469d49bc990af/src/main/java/com/example/volunteer/Controller/CommentController.java",
    "contents_url": "https://api.github.com/repos/zwh1314/volunteer/contents/src/main/java/com/example/volunteer/Controller/CommentController.java?ref=ac074456ce3a10fb2295f6c728d469d49bc990af",
    "patch": "@@ -99,6 +99,28 @@\n         }\n     }\n \n+    @GetMapping(\"/getCommentByNumber\")\n+    @ApiOperation(\"获得评论 ByNumber\")\n+    public Response<List<Comment>> getCommentByNumber(long number) {\n+        Response<List<Comment>> response = new Response<>();\n+        try {\n+            return commentService.getCommentByNumber(number);\n+        } catch (IllegalArgumentException e) {\n+            logger.warn(\"[getCommentByNumber Illegal Argument], number: {}\", number, e);\n+            response.setFail(ResponseEnum.ILLEGAL_PARAM);\n+            return response;\n+        } catch (VolunteerRuntimeException e) {\n+            logger.error(\"[getCommentByNumber Runtime Exception], number: {}\", number, e);\n+            response.setFail(e.getExceptionCode(), e.getMessage());\n+            return response;\n+        }  catch (Exception e) {\n+            logger.error(\"[getCommentByNumber Exception], number: {}\", number, e);\n+            response.setFail(ResponseEnum.SERVER_ERROR);\n+            return response;\n+        }\n+    }\n+\n+\n \n     @PostMapping(\"/addComment\")\n         @ApiOperation(\"添加评论\")"
  },
  {
    "sha": "a65ad32c8d04127982b9a1b7774d875c673b9bf6",
    "filename": "src/main/java/com/example/volunteer/Controller/CommentResponseController.java",
    "status": "modified",
    "additions": 20,
    "deletions": 47,
    "changes": 67,
    "blob_url": "https://github.com/zwh1314/volunteer/blob/ac074456ce3a10fb2295f6c728d469d49bc990af/src/main/java/com/example/volunteer/Controller/CommentResponseController.java",
    "raw_url": "https://github.com/zwh1314/volunteer/raw/ac074456ce3a10fb2295f6c728d469d49bc990af/src/main/java/com/example/volunteer/Controller/CommentResponseController.java",
    "contents_url": "https://api.github.com/repos/zwh1314/volunteer/contents/src/main/java/com/example/volunteer/Controller/CommentResponseController.java?ref=ac074456ce3a10fb2295f6c728d469d49bc990af",
    "patch": "@@ -79,6 +79,26 @@\n             return response;\n         }\n     }\n+    @GetMapping(\"/getVideoCommentResponseByNumber\")\n+    @ApiOperation(\"获得视频评论回复ByNumber\")\n+    public Response<List<CommentResponse>> getVideoCommentResponseByNumber(long number) {\n+        Response<List<CommentResponse>> response = new Response<>();\n+        try {\n+            return responseService.getVideoCommentResponseByNumber(number);\n+        } catch (IllegalArgumentException e) {\n+            logger.warn(\"[getVideoCommentResponseByNumber Illegal Argument], number: {}\", number, e);\n+            response.setFail(ResponseEnum.ILLEGAL_PARAM);\n+            return response;\n+        } catch (VolunteerRuntimeException e) {\n+            logger.error(\"[getVideoCommentResponseByNumber Runtime Exception], number: {}\", number, e);\n+            response.setFail(e.getExceptionCode(), e.getMessage());\n+            return response;\n+        }  catch (Exception e) {\n+            logger.error(\"[getVideoCommentResponseByNumber Exception], number: {}\", number, e);\n+            response.setFail(ResponseEnum.SERVER_ERROR);\n+            return response;\n+        }\n+    }\n \n     @GetMapping(\"/getCommentResponseInOneWeek\")\n     @ApiOperation(\"获得一周评论回复\")\n@@ -305,51 +325,4 @@\n         }\n     }\n \n-   /* @GetMapping(\"/getResponseLikeByResponseId\")\n-    @ApiOperation(\"通过responseId查询点赞\")\n-    public Response<Long> getResponseLikeByResponseId(@RequestParam(\"responseId\") long responseId) {\n-        Response<Long> response = new Response<>();\n-        try {\n-          return responseRedisService.getResponseLikeByResponseId(responseId);\n-        } catch (IllegalArgumentException e) {\n-            logger.warn(\"[getResponseLikeByResponseId Illegal Argument], responseId: {}\", responseId, e);\n-            response.setFail(ResponseEnum.ILLEGAL_PARAM);\n-            return response;\n-        } catch (VolunteerRuntimeException e) {\n-            logger.error(\"[getResponseLikeByResponseId Runtime Exception],responseId: {}\",responseId, e);\n-            response.setFail(e.getExceptionCode(), e.getMessage());\n-            return response;\n-        }  catch (Exception e) {\n-            logger.error(\"getResponseLikeByResponseId Exception], responseId: {}\",responseId, e);\n-            response.setFail(ResponseEnum.SERVER_ERROR);\n-            return response;\n-        }\n-\n-    }\n-\n-\n-    @PostMapping(\"likesResponse\")\n-    @ApiOperation(\"点赞评论回复\")\n-    public Response<Boolean> likesResponse(@RequestParam(\"responseId\") long responseId){\n-        Response<Boolean> response = new Response<>();\n-        try {\n-         return  responseRedisService.likesResponse(responseId);\n-        } catch (IllegalArgumentException e) {\n-            logger.warn(\"[likesResponse Illegal Argument], : commentId {}\", responseId, e);\n-            response.setFail(ResponseEnum.ILLEGAL_PARAM);\n-            return response;\n-        } catch (VolunteerRuntimeException e) {\n-            logger.error(\"[likesResponse Runtime Exception], : commentId {}\", responseId, e);\n-            response.setFail(e.getExceptionCode(), e.getMessage());\n-            return response;\n-        } catch (Exception e) {\n-            logger.error(\"[likesResponse Exception], :commentId {}\", responseId, e);\n-            response.setFail(ResponseEnum.SERVER_ERROR);\n-            return response;\n-        }\n-\n-    }\n-\n-    */\n-\n }"
  },
  {
    "sha": "3cef38991cb9dbcf217cfcf6fa53aa43c1729aab",
    "filename": "src/main/java/com/example/volunteer/Controller/SwiperContorller.java",
    "status": "modified",
    "additions": 23,
    "deletions": 0,
    "changes": 23,
    "blob_url": "https://github.com/zwh1314/volunteer/blob/ac074456ce3a10fb2295f6c728d469d49bc990af/src/main/java/com/example/volunteer/Controller/SwiperContorller.java",
    "raw_url": "https://github.com/zwh1314/volunteer/raw/ac074456ce3a10fb2295f6c728d469d49bc990af/src/main/java/com/example/volunteer/Controller/SwiperContorller.java",
    "contents_url": "https://api.github.com/repos/zwh1314/volunteer/contents/src/main/java/com/example/volunteer/Controller/SwiperContorller.java?ref=ac074456ce3a10fb2295f6c728d469d49bc990af",
    "patch": "@@ -49,6 +49,29 @@\n             return response;\n         }\n     }\n+    @GetMapping(\"/getSwiperByNumber\")\n+    @ApiOperation(\"获得轮播图by Number\")\n+    @ApiImplicitParams({\n+            @ApiImplicitParam(name = \"number\", value = \"需要轮播图个数\", paramType = \"query\", dataType = \"long\"),\n+    })\n+    public Response<List<Swiper>> getSwiperByNumber(@RequestParam(\"number\") long number) {\n+        Response<List<Swiper>> response = new Response<>();\n+        try {\n+            return swiperService.getSwiperByNumber(number);\n+        } catch (IllegalArgumentException e) {\n+            logger.warn(\"[getSwiperByNumber Illegal Argument], number: {}\", number, e);\n+            response.setFail(ResponseEnum.ILLEGAL_PARAM);\n+            return response;\n+        } catch (VolunteerRuntimeException e) {\n+            logger.error(\"[getSwiperByNumber Runtime Exception], number: {}\", number, e);\n+            response.setFail(e.getExceptionCode(), e.getMessage());\n+            return response;\n+        }  catch (Exception e) {\n+            logger.error(\"[getSwiperByNumber Exception], number: {}\", number, e);\n+            response.setFail(ResponseEnum.SERVER_ERROR);\n+            return response;\n+        }\n+    }\n     @GetMapping(\"/getSwiperByPriority\")\n     @ApiOperation(\"获得轮播图by priority\")\n     @ApiImplicitParams({"
  },
  {
    "sha": "a5a7d938d0bea1644d8a5203b238e33f8c65af28",
    "filename": "src/main/java/com/example/volunteer/Controller/VideoController.java",
    "status": "modified",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/zwh1314/volunteer/blob/ac074456ce3a10fb2295f6c728d469d49bc990af/src/main/java/com/example/volunteer/Controller/VideoController.java",
    "raw_url": "https://github.com/zwh1314/volunteer/raw/ac074456ce3a10fb2295f6c728d469d49bc990af/src/main/java/com/example/volunteer/Controller/VideoController.java",
    "contents_url": "https://api.github.com/repos/zwh1314/volunteer/contents/src/main/java/com/example/volunteer/Controller/VideoController.java?ref=ac074456ce3a10fb2295f6c728d469d49bc990af",
    "patch": "@@ -78,6 +78,28 @@\n         }\n     }\n \n+    @GetMapping(\"/getVideoByNumber\")\n+    @ApiOperation(\"获得视频by number\")\n+\n+    public Response<List<Video>> getVideoByNumber(@RequestParam(\"number\") long number) {\n+        Response<List<Video>> response = new Response<>();\n+        try {\n+            return videoService.getVideoByNumber(number);\n+        } catch (IllegalArgumentException e) {\n+            logger.warn(\"[getVideoByNumber Illegal Argument], number: {}\", number, e);\n+            response.setFail(ResponseEnum.ILLEGAL_PARAM);\n+            return response;\n+        } catch (VolunteerRuntimeException e) {\n+            logger.error(\"[getVideoByNumber Runtime Exception], number: {}\", number, e);\n+            response.setFail(e.getExceptionCode(), e.getMessage());\n+            return response;\n+        }  catch (Exception e) {\n+            logger.error(\"[getVideoByNumber Exception], number: {}\", number, e);\n+            response.setFail(ResponseEnum.SERVER_ERROR);\n+            return response;\n+        }\n+    }\n+\n \n     @GetMapping(\"/getVideoInOneWeek\")\n     @ApiOperation(\"获得一周视频\")"
  },
  {
    "sha": "223bfdd116bde782c9640f25b39608549ebedac1",
    "filename": "src/main/java/com/example/volunteer/Dao/ActivityDao.java",
    "status": "modified",
    "additions": 10,
    "deletions": 5,
    "changes": 15,
    "blob_url": "https://github.com/zwh1314/volunteer/blob/ac074456ce3a10fb2295f6c728d469d49bc990af/src/main/java/com/example/volunteer/Dao/ActivityDao.java",
    "raw_url": "https://github.com/zwh1314/volunteer/raw/ac074456ce3a10fb2295f6c728d469d49bc990af/src/main/java/com/example/volunteer/Dao/ActivityDao.java",
    "contents_url": "https://api.github.com/repos/zwh1314/volunteer/contents/src/main/java/com/example/volunteer/Dao/ActivityDao.java?ref=ac074456ce3a10fb2295f6c728d469d49bc990af",
    "patch": "@@ -9,24 +9,29 @@\n \n @Mapper\n public  interface ActivityDao {\n-    @Insert(\"INSERT INTO activity(activity_name,activity_content,activity_organizer,activity_date) VALUES (#{activityName},#{activityContent},#{activityOrganizer},#{activityDate});\")\n+    @Insert(\"INSERT INTO activity(activity_name,activity_content,activity_organizer,activity_date,activity_picture) VALUES (#{activityName},#{activityContent},#{activityOrganizer},#{activityDate});\")\n     int insertActivity(Activity activity);\n \n     @ResultType(ActivityDTO.class)\n-    @Select(\"SELECT activity_id as activityId,activity_name as activityName,activity_content as activityContent,activity_organizer as activityOrganizer,activity_date as activityDate FROM activity WHERE activity_id = #{activityId}\")\n+    @Select(\"SELECT activity_id as activityId,activity_name as activityName,activity_content as activityContent,activity_organizer as activityOrganizer,activity_date as activityDate,activity_picture as activityPicture FROM activity WHERE activity_id = #{activityId}\")\n     ActivityDTO getActivityByActivityId(@Param(\"activityId\") long activityId);\n \n     @ResultType(ActivityDTO.class)\n-    @Select(\"SELECT activity_id as activityId,activity_name as activityName,activity_content as activityContent,activity_organizer as activityOrganizer,activity_date as activityDate FROM activity WHERE activity_name = #{activityName}\")\n+    @Select(\"SELECT activity_id as activityId,activity_name as activityName,activity_content as activityContent,activity_organizer as activityOrganizer,activity_date as activityDate,activity_picture as activityPicture FROM activity WHERE activity_name = #{activityName}\")\n     ActivityDTO getActivityByActivityName(@Param(\"activityName\") String activityName);\n \n     @ResultType(ActivityDTO.class)\n-    @Select(\"SELECT activity_id as activityId,activity_name as activityName,activity_content as activityContent,activity_organizer as activityOrganizer,activity_date as activityDate FROM activity WHERE activity_organizer = #{activityOrganizer}\")\n+    @Select(\"SELECT activity_id as activityId,activity_name as activityName,activity_content as activityContent,activity_organizer as activityOrganizer,activity_date as activityDate,activity_picture as activityPicture FROM activity WHERE activity_organizer = #{activityOrganizer}\")\n     ActivityDTO getActivityByOrganizer(@Param(\"activityOrganizer\") String activityOrganizer);\n \n-    @Update(\"UPDATE activity SET activity_name = #{activityName},activity_organizer = #{activityOrganizer}, activity_content = #{activityContent},activity_date = #{activityDate} WHERE activity_id = #{activityId}\")\n+    @Update(\"UPDATE activity SET activity_name = #{activityName},activity_organizer = #{activityOrganizer}, activity_content = #{activityContent},activity_date = #{activityDate},activity_picture = #{activityPicture} WHERE activity_id = #{activityId}\")\n     int updateActivity(Activity activity);\n \n+    @ResultType(Activity.class)\n+    @Select(\"SELECT activity_id as activityId,activity_name as activityName,activity_content as activityContent,activity_organizer as activityOrganizer,activity_date as activityDate,activity_picture as activityPicture FROM activity\" +\n+            \" WHERE activity_id >= (SELECT FLOOR( MAX(activity_id) * RAND()) FROM `activity` ) ORDER BY activity_id LIMIT #{number}\")\n+    List<Activity> findActivityByNumber(@Param(\"number\")long number);\n+\n     @Delete(\"Delete From activity WHERE activity_id=#{activityId}\")\n     int deleteActivityByActivityId(@Param(\"activityId\")long activityId);\n }"
  },
  {
    "sha": "0e1dca660391cd4c291bf15e9b620eb50bdfc9fc",
    "filename": "src/main/java/com/example/volunteer/Dao/ActivityNewsDao.java",
    "status": "modified",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/zwh1314/volunteer/blob/ac074456ce3a10fb2295f6c728d469d49bc990af/src/main/java/com/example/volunteer/Dao/ActivityNewsDao.java",
    "raw_url": "https://github.com/zwh1314/volunteer/raw/ac074456ce3a10fb2295f6c728d469d49bc990af/src/main/java/com/example/volunteer/Dao/ActivityNewsDao.java",
    "contents_url": "https://api.github.com/repos/zwh1314/volunteer/contents/src/main/java/com/example/volunteer/Dao/ActivityNewsDao.java?ref=ac074456ce3a10fb2295f6c728d469d49bc990af",
    "patch": "@@ -33,6 +33,13 @@\n             \"news_date as newsDate FROM activity_news WHERE TO_DAYS(NOW()) - TO_DAYS(news_date) <= 7\")\n     List<ActivityNews> findActivityNewsInOneWeek();\n \n+    @ResultType(ActivityNews.class)\n+    @Select(\"SELECT news_id as newsId, activity_id as activityId, news_content as newsContent, \" +\n+            \"news_picture as newsPicture, news_title as newsTitle, news_publisher as newsPublisher, \" +\n+            \"news_date as newsDate FROM activity_news \" +\n+            \"WHERE news_id >= (SELECT FLOOR( MAX(news_id) * RAND()) FROM `activity_news` ) ORDER BY news_id LIMIT #{number}\")\n+    List<ActivityNews> findActivityNewsByNumber(@Param(\"number\")long number);\n+\n     @ResultType(ActivityNews.class)\n     @Select(\"SELECT news_id as newsId, activity_id as activityId, news_content as newsContent, \" +\n             \"news_picture as newsPicture, news_title as newsTitle, news_publisher as newsPublisher, \" +"
  },
  {
    "sha": "9a01f9511afeb59f5757fde03c5e34361267e465",
    "filename": "src/main/java/com/example/volunteer/Dao/CommentDao.java",
    "status": "modified",
    "additions": 6,
    "deletions": 1,
    "changes": 7,
    "blob_url": "https://github.com/zwh1314/volunteer/blob/ac074456ce3a10fb2295f6c728d469d49bc990af/src/main/java/com/example/volunteer/Dao/CommentDao.java",
    "raw_url": "https://github.com/zwh1314/volunteer/raw/ac074456ce3a10fb2295f6c728d469d49bc990af/src/main/java/com/example/volunteer/Dao/CommentDao.java",
    "contents_url": "https://api.github.com/repos/zwh1314/volunteer/contents/src/main/java/com/example/volunteer/Dao/CommentDao.java?ref=ac074456ce3a10fb2295f6c728d469d49bc990af",
    "patch": "@@ -39,6 +39,11 @@\n     @Select(\"SELECT comment_like as commentLike FROM comment WHERE comment_id =#{commentId}\")\n     Long getCommentLikeByCommentId(@Param(\"commentId\") long commentId);\n \n-    @Select(\"SELECT comment_id from comment as commentId\")\n+    @Select(\"SELECT comment_id as commentId FROM comment\")\n     List<Long> getCommentIds();\n+\n+    @ResultType(Comment.class)\n+    @Select(\"SELECT comment_id as commentId,comment_text as commentText,comment_publisher as commentPublisher,\" +\n+            \"comment_like as commentLike,comment_date as commentDate FROM comment WHERE comment_id>=(SELECT FLOOR( MAX(comment_id) * RAND()) FROM `comment` ) ORDER BY comment_id LIMIT #{number}\")\n+    List<Comment>findCommentByNumber(@Param(\"number\")long number);\n }"
  },
  {
    "sha": "cdb969a9d8a41827020c8ac4fe8cb8b453e0bdf2",
    "filename": "src/main/java/com/example/volunteer/Dao/CommentResponseDao.java",
    "status": "modified",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/zwh1314/volunteer/blob/ac074456ce3a10fb2295f6c728d469d49bc990af/src/main/java/com/example/volunteer/Dao/CommentResponseDao.java",
    "raw_url": "https://github.com/zwh1314/volunteer/raw/ac074456ce3a10fb2295f6c728d469d49bc990af/src/main/java/com/example/volunteer/Dao/CommentResponseDao.java",
    "contents_url": "https://api.github.com/repos/zwh1314/volunteer/contents/src/main/java/com/example/volunteer/Dao/CommentResponseDao.java?ref=ac074456ce3a10fb2295f6c728d469d49bc990af",
    "patch": "@@ -54,4 +54,11 @@\n \n     @Select(\"SELECT response_id from comment_response as responseId\")\n     List<Long> getResponseIds();\n+\n+    @ResultType(CommentResponse.class)\n+    @Select(\"SELECT response_id as responseId, response_comment as commentId, response_text as \" +\n+            \"responseText, response_publisher as responsePublisher, response_type as responseType, \" +\n+            \"response_like as responseLike, response_date as responseDate FROM comment_response \" +\n+            \"WHERE  response_type = #{responseType} AND response_id>=(SELECT FLOOR( MAX(response_id) * RAND()) FROM `comment_response` ) ORDER BY response_id LIMIT #{number}\")\n+    List<CommentResponse> findCommentResponseByNumber(@Param(\"number\")long number,@Param(\"responseType\")long responseType);\n }"
  },
  {
    "sha": "643856eac10f8b09aa23528904b601d511e24299",
    "filename": "src/main/java/com/example/volunteer/Dao/SwiperDao.java",
    "status": "modified",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/zwh1314/volunteer/blob/ac074456ce3a10fb2295f6c728d469d49bc990af/src/main/java/com/example/volunteer/Dao/SwiperDao.java",
    "raw_url": "https://github.com/zwh1314/volunteer/raw/ac074456ce3a10fb2295f6c728d469d49bc990af/src/main/java/com/example/volunteer/Dao/SwiperDao.java",
    "contents_url": "https://api.github.com/repos/zwh1314/volunteer/contents/src/main/java/com/example/volunteer/Dao/SwiperDao.java?ref=ac074456ce3a10fb2295f6c728d469d49bc990af",
    "patch": "@@ -22,6 +22,13 @@\n             \"swiper_priority as swiperPriority, swiper_text as swiperText FROM swiper WHERE news_id = #{newsId}\")\n     List<Swiper> findSwiperByNews(@Param(\"newsId\")long newsId);\n \n+    @ResultType(Swiper.class)\n+    @Select(\"SELECT swiper_id as swiperId, news_id as newsId, swiper_picture as swiperPicture, \" +\n+            \"swiper_priority as swiperPriority, swiper_text as swiperText FROM swiper \" +\n+            \"WHERE swiper_id >= (SELECT FLOOR( MAX(swiper_id) * RAND()) FROM `swiper` ) ORDER BY swiper_id LIMIT #{number}\")\n+    List<Swiper> findSwiperByNumber(@Param(\"number\")long number);\n+\n+\n     @ResultType(Swiper.class)\n     @Select(\"SELECT swiper_id as swiperId, news_id as newsId, swiper_picture as swiperPicture, \" +\n             \"swiper_priority as swiperPriority, swiper_text as swiperText FROM swiper WHERE \" +"
  },
  {
    "sha": "7728054a2bfa575bc59cb5d320f1e9f00882b37e",
    "filename": "src/main/java/com/example/volunteer/Dao/VideoDao.java",
    "status": "modified",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/zwh1314/volunteer/blob/ac074456ce3a10fb2295f6c728d469d49bc990af/src/main/java/com/example/volunteer/Dao/VideoDao.java",
    "raw_url": "https://github.com/zwh1314/volunteer/raw/ac074456ce3a10fb2295f6c728d469d49bc990af/src/main/java/com/example/volunteer/Dao/VideoDao.java",
    "contents_url": "https://api.github.com/repos/zwh1314/volunteer/contents/src/main/java/com/example/volunteer/Dao/VideoDao.java?ref=ac074456ce3a10fb2295f6c728d469d49bc990af",
    "patch": "@@ -29,6 +29,12 @@\n             \"FROM video WHERE video_text LIKE CONCAT('%',#{textInclude},'%')\")\n     List<Video> findVideoByText(@Param(\"textInclude\")String textInclude);\n \n+    @ResultType(Video.class)\n+    @Select(\"SELECT video_id as videoId, video_url as videoUrl, video_text as videoText, \" +\n+            \"video_publisher as videoPublisher, video_like as videoLike, video_date as videoDate \" +\n+            \"FROM video WHERE video_id >= (SELECT FLOOR( MAX(video_id) * RAND()) FROM `video` ) ORDER BY video_id LIMIT #{number}\")\n+    List<Video> findVideoByNumber(long number);\n+\n     @ResultType(Video.class)\n     @Select(\"SELECT video_id as videoId, video_url as videoUrl, video_text as videoText, \" +\n             \"video_publisher as videoPublisher, video_like as videoLike, video_date as videoDate \" +"
  },
  {
    "sha": "7496b1a89bff99d8bf4fcdd4374f06f676ea1e49",
    "filename": "src/main/java/com/example/volunteer/Entity/Activity.java",
    "status": "modified",
    "additions": 7,
    "deletions": 1,
    "changes": 8,
    "blob_url": "https://github.com/zwh1314/volunteer/blob/ac074456ce3a10fb2295f6c728d469d49bc990af/src/main/java/com/example/volunteer/Entity/Activity.java",
    "raw_url": "https://github.com/zwh1314/volunteer/raw/ac074456ce3a10fb2295f6c728d469d49bc990af/src/main/java/com/example/volunteer/Entity/Activity.java",
    "contents_url": "https://api.github.com/repos/zwh1314/volunteer/contents/src/main/java/com/example/volunteer/Entity/Activity.java?ref=ac074456ce3a10fb2295f6c728d469d49bc990af",
    "patch": "@@ -36,13 +36,19 @@\n     @DateTimeFormat(pattern=\"yyyy-MM-dd HH:mm:ss\")\n     private Date activityDate;\n \n+    @Column(name = \"activity_picture\")\n+    @ApiModelProperty(value = \"活动图片\")\n+    private String activityPicture;\n+\n+\n     public Activity(){}\n \n-     public Activity(String activityName, String activityContent, String activityOrganizer, Date activityDate) {\n+     public Activity(String activityName, String activityContent, String activityOrganizer, Date activityDate, String activityPicture) {\n         this.activityName = activityName;\n         this.activityDate = activityDate;\n         this.activityContent = activityContent;\n         this.activityOrganizer = activityOrganizer;\n+        this.activityPicture = activityPicture;\n     }\n \n "
  },
  {
    "sha": "c27d586d5bb8c9d5945ee5c41d645011b5df93a2",
    "filename": "src/main/java/com/example/volunteer/Service/ActivityNewsService.java",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/zwh1314/volunteer/blob/ac074456ce3a10fb2295f6c728d469d49bc990af/src/main/java/com/example/volunteer/Service/ActivityNewsService.java",
    "raw_url": "https://github.com/zwh1314/volunteer/raw/ac074456ce3a10fb2295f6c728d469d49bc990af/src/main/java/com/example/volunteer/Service/ActivityNewsService.java",
    "contents_url": "https://api.github.com/repos/zwh1314/volunteer/contents/src/main/java/com/example/volunteer/Service/ActivityNewsService.java?ref=ac074456ce3a10fb2295f6c728d469d49bc990af",
    "patch": "@@ -21,6 +21,8 @@\n \n     Response<List<ActivityNews>> getActivityNewsInOneWeek();\n \n+    Response<List<ActivityNews>> getActivityNewsByNumber(long number);\n+\n     Response<List<ActivityNews>> getActivityNewsByRelativeText(String relativeText);\n \n     Response<Boolean> deleteActivityNewsById(long activityNewsId);"
  },
  {
    "sha": "b8278fcce785af24e18206a5bbfa3e7c6aa71863",
    "filename": "src/main/java/com/example/volunteer/Service/ActivityService.java",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/zwh1314/volunteer/blob/ac074456ce3a10fb2295f6c728d469d49bc990af/src/main/java/com/example/volunteer/Service/ActivityService.java",
    "raw_url": "https://github.com/zwh1314/volunteer/raw/ac074456ce3a10fb2295f6c728d469d49bc990af/src/main/java/com/example/volunteer/Service/ActivityService.java",
    "contents_url": "https://api.github.com/repos/zwh1314/volunteer/contents/src/main/java/com/example/volunteer/Service/ActivityService.java?ref=ac074456ce3a10fb2295f6c728d469d49bc990af",
    "patch": "@@ -36,4 +36,6 @@\n      * @return成功返回true，失败返回false\n      */\n     Response<Boolean> deleteActivityByActivityId(long activityId);\n+\n+    Response<List<Activity>> getActivityByNumber(long number);\n }"
  },
  {
    "sha": "9849914d79e708214b7ce4128ba7c314237006c1",
    "filename": "src/main/java/com/example/volunteer/Service/CommentResponseService.java",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/zwh1314/volunteer/blob/ac074456ce3a10fb2295f6c728d469d49bc990af/src/main/java/com/example/volunteer/Service/CommentResponseService.java",
    "raw_url": "https://github.com/zwh1314/volunteer/raw/ac074456ce3a10fb2295f6c728d469d49bc990af/src/main/java/com/example/volunteer/Service/CommentResponseService.java",
    "contents_url": "https://api.github.com/repos/zwh1314/volunteer/contents/src/main/java/com/example/volunteer/Service/CommentResponseService.java?ref=ac074456ce3a10fb2295f6c728d469d49bc990af",
    "patch": "@@ -19,6 +19,8 @@\n \n     Response<List<CommentResponse>> getCommentResponseInOneWeek();\n \n+    Response<List<CommentResponse>> getVideoCommentResponseByNumber(long number);\n+\n     Response<List<CommentResponse>> getVideoCommentResponseInOneWeek();\n \n     Response<List<CommentResponse>> getCommentResponseByRelativeText(String relativeText);"
  },
  {
    "sha": "bac7b99915904de79f7547efe2ceed9102b5fd61",
    "filename": "src/main/java/com/example/volunteer/Service/CommentService.java",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/zwh1314/volunteer/blob/ac074456ce3a10fb2295f6c728d469d49bc990af/src/main/java/com/example/volunteer/Service/CommentService.java",
    "raw_url": "https://github.com/zwh1314/volunteer/raw/ac074456ce3a10fb2295f6c728d469d49bc990af/src/main/java/com/example/volunteer/Service/CommentService.java",
    "contents_url": "https://api.github.com/repos/zwh1314/volunteer/contents/src/main/java/com/example/volunteer/Service/CommentService.java?ref=ac074456ce3a10fb2295f6c728d469d49bc990af",
    "patch": "@@ -17,6 +17,8 @@\n \n     Response<List<Comment>> getCommentInOneWeek();\n \n+    Response<List<Comment>> getCommentByNumber(long number);\n+\n     Response<List<Comment>> getCommentByRelativeText(String relativeText);\n \n     Response<Boolean> deleteCommentById(long commentId);"
  },
  {
    "sha": "f1651ccff0598cd2e0fbf61c2f21eabc636ba567",
    "filename": "src/main/java/com/example/volunteer/Service/ServiceImpl/ActivityNewsServiceImpl.java",
    "status": "modified",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/zwh1314/volunteer/blob/ac074456ce3a10fb2295f6c728d469d49bc990af/src/main/java/com/example/volunteer/Service/ServiceImpl/ActivityNewsServiceImpl.java",
    "raw_url": "https://github.com/zwh1314/volunteer/raw/ac074456ce3a10fb2295f6c728d469d49bc990af/src/main/java/com/example/volunteer/Service/ServiceImpl/ActivityNewsServiceImpl.java",
    "contents_url": "https://api.github.com/repos/zwh1314/volunteer/contents/src/main/java/com/example/volunteer/Service/ServiceImpl/ActivityNewsServiceImpl.java?ref=ac074456ce3a10fb2295f6c728d469d49bc990af",
    "patch": "@@ -94,6 +94,20 @@\n         return response;\n     }\n \n+    @Override\n+    public Response<List<ActivityNews>> getActivityNewsByNumber(long number){\n+        Response<List<ActivityNews>> response=new Response<>();\n+\n+        List<ActivityNews> activityNewsList = activityNewsDao.findActivityNewsByNumber(number);\n+        if (activityNewsList.size() == 0) {\n+            response.setFail(ResponseEnum.ACTIVITY_NEWS_ACTIVITY_NOT_FOUND);\n+        }\n+        else{\n+            response.setSuc(activityNewsList);\n+        }\n+        return response;\n+    }\n+\n     @Override\n     public Response<List<ActivityNews>> getActivityNewsByPublisherId(long publisherId){\n         Response<List<ActivityNews>> response=new Response<>();"
  },
  {
    "sha": "4bac0c06818fc3bacd3aa3a6c466e5ae3386647b",
    "filename": "src/main/java/com/example/volunteer/Service/ServiceImpl/ActivityServiceImpl.java",
    "status": "modified",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/zwh1314/volunteer/blob/ac074456ce3a10fb2295f6c728d469d49bc990af/src/main/java/com/example/volunteer/Service/ServiceImpl/ActivityServiceImpl.java",
    "raw_url": "https://github.com/zwh1314/volunteer/raw/ac074456ce3a10fb2295f6c728d469d49bc990af/src/main/java/com/example/volunteer/Service/ServiceImpl/ActivityServiceImpl.java",
    "contents_url": "https://api.github.com/repos/zwh1314/volunteer/contents/src/main/java/com/example/volunteer/Service/ServiceImpl/ActivityServiceImpl.java?ref=ac074456ce3a10fb2295f6c728d469d49bc990af",
    "patch": "@@ -12,6 +12,8 @@\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Service;\n \n+import java.util.List;\n+\n @Service\n public class ActivityServiceImpl implements ActivityService {\n     private static final Logger logger = LoggerFactory.getLogger(ActivityServiceImpl.class);\n@@ -80,4 +82,17 @@\n         }\n         return response;\n     }\n+\n+    @Override\n+    public Response<List<Activity>> getActivityByNumber(long number){\n+        Response<List<Activity>> response=new Response<>();\n+        List<Activity> activityList = activityDao.findActivityByNumber(number);\n+        if (activityList.size() == 0) {\n+            response.setFail(ResponseEnum.SWIPER_NEWS_NOT_FOUND);\n+        }\n+        else {\n+            response.setSuc(activityList);\n+        }\n+        return response;\n+    }\n }"
  },
  {
    "sha": "c8283516477f9dfae09ffaeffd6082df5a90d722",
    "filename": "src/main/java/com/example/volunteer/Service/ServiceImpl/CommentResponseServiceImpl.java",
    "status": "modified",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/zwh1314/volunteer/blob/ac074456ce3a10fb2295f6c728d469d49bc990af/src/main/java/com/example/volunteer/Service/ServiceImpl/CommentResponseServiceImpl.java",
    "raw_url": "https://github.com/zwh1314/volunteer/raw/ac074456ce3a10fb2295f6c728d469d49bc990af/src/main/java/com/example/volunteer/Service/ServiceImpl/CommentResponseServiceImpl.java",
    "contents_url": "https://api.github.com/repos/zwh1314/volunteer/contents/src/main/java/com/example/volunteer/Service/ServiceImpl/CommentResponseServiceImpl.java?ref=ac074456ce3a10fb2295f6c728d469d49bc990af",
    "patch": "@@ -122,6 +122,20 @@\n         return response;\n     }\n \n+    @Override\n+    public Response<List<CommentResponse>> getVideoCommentResponseByNumber(long number){\n+        Response<List<CommentResponse>> response=new Response<>();\n+\n+        List<CommentResponse> commentResponseList = commentResponseDao.findCommentResponseByNumber(number,1);//假设1对应Video类型\n+        if (commentResponseList.size() == 0) {\n+            response.setFail(ResponseEnum.OBJECT_IN_ONE_WEEK_NOT_FOUND);\n+        }\n+        else{\n+            response.setSuc(commentResponseList);\n+        }\n+        return response;\n+    }\n+\n     @Override\n     public Response<List<CommentResponse>> getCommentResponseByRelativeText(String relativeText){\n         Response<List<CommentResponse>> response=new Response<>();"
  },
  {
    "sha": "8db5d66d0b835ca63cc8adf808e7ffe6e7eff96a",
    "filename": "src/main/java/com/example/volunteer/Service/ServiceImpl/CommentServiceImpl.java",
    "status": "modified",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/zwh1314/volunteer/blob/ac074456ce3a10fb2295f6c728d469d49bc990af/src/main/java/com/example/volunteer/Service/ServiceImpl/CommentServiceImpl.java",
    "raw_url": "https://github.com/zwh1314/volunteer/raw/ac074456ce3a10fb2295f6c728d469d49bc990af/src/main/java/com/example/volunteer/Service/ServiceImpl/CommentServiceImpl.java",
    "contents_url": "https://api.github.com/repos/zwh1314/volunteer/contents/src/main/java/com/example/volunteer/Service/ServiceImpl/CommentServiceImpl.java?ref=ac074456ce3a10fb2295f6c728d469d49bc990af",
    "patch": "@@ -85,6 +85,21 @@\n         return response;\n     }\n \n+    @Override\n+    public Response<List<Comment>> getCommentByNumber(long number){\n+        Response<List<Comment>> response=new Response<>();\n+\n+        List<Comment> commentList = commentDao.findCommentByNumber(number);\n+        if (commentList.size() == 0) {\n+            response.setFail(ResponseEnum.OBJECT_PUBLISHER_NOT_FOUND);\n+        }\n+        else\n+        {\n+            response.setSuc(commentList);\n+        }\n+        return response;\n+    }\n+\n     @Override\n     public Response<List<Comment>> getCommentInOneWeek(){\n         Response<List<Comment>> response=new Response<>();"
  },
  {
    "sha": "362cfd6e07767bbd963967672d0fe3c1207126a5",
    "filename": "src/main/java/com/example/volunteer/Service/ServiceImpl/SwiperServiceImpl.java",
    "status": "modified",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/zwh1314/volunteer/blob/ac074456ce3a10fb2295f6c728d469d49bc990af/src/main/java/com/example/volunteer/Service/ServiceImpl/SwiperServiceImpl.java",
    "raw_url": "https://github.com/zwh1314/volunteer/raw/ac074456ce3a10fb2295f6c728d469d49bc990af/src/main/java/com/example/volunteer/Service/ServiceImpl/SwiperServiceImpl.java",
    "contents_url": "https://api.github.com/repos/zwh1314/volunteer/contents/src/main/java/com/example/volunteer/Service/ServiceImpl/SwiperServiceImpl.java?ref=ac074456ce3a10fb2295f6c728d469d49bc990af",
    "patch": "@@ -110,6 +110,19 @@\n         }\n         return response;\n     }\n+    @Override\n+    public Response<List<Swiper>> getSwiperByNumber(long number){\n+        Response<List<Swiper>> response=new Response<>();\n+        List<Swiper> swiperList = swiperDao.findSwiperByNumber(number);\n+        if (swiperList.size() == 0) {\n+            response.setFail(ResponseEnum.SWIPER_NEWS_NOT_FOUND);\n+        }\n+        else {\n+            response.setSuc(swiperList);\n+        }\n+        return response;\n+    }\n+\n \n     @Override\n     public Response<Boolean> deleteSwiperById(long swiperId){"
  },
  {
    "sha": "486b07c9045589a08c7796abb22fcd0f1f475b3d",
    "filename": "src/main/java/com/example/volunteer/Service/ServiceImpl/VideoServiceImpl.java",
    "status": "modified",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/zwh1314/volunteer/blob/ac074456ce3a10fb2295f6c728d469d49bc990af/src/main/java/com/example/volunteer/Service/ServiceImpl/VideoServiceImpl.java",
    "raw_url": "https://github.com/zwh1314/volunteer/raw/ac074456ce3a10fb2295f6c728d469d49bc990af/src/main/java/com/example/volunteer/Service/ServiceImpl/VideoServiceImpl.java",
    "contents_url": "https://api.github.com/repos/zwh1314/volunteer/contents/src/main/java/com/example/volunteer/Service/ServiceImpl/VideoServiceImpl.java?ref=ac074456ce3a10fb2295f6c728d469d49bc990af",
    "patch": "@@ -95,6 +95,20 @@\n         return response;\n     }\n \n+    @Override\n+    public Response<List<Video>> getVideoByNumber(long number){\n+        Response<List<Video>> response=new Response<>();\n+\n+        List<Video> videoList = videoDao.findVideoByNumber(number);\n+        if (videoList.size() == 0) {\n+            response.setFail(ResponseEnum.OBJECT_RELATIVE_TEXT_NOT_FOUND);\n+        }\n+        else {\n+            response.setSuc(videoList);\n+        }\n+        return response;\n+    }\n+\n     @Override\n     public Response<List<Video>> getVideoInOneWeek(){\n         Response<List<Video>> response=new Response<>();"
  },
  {
    "sha": "4c1678f6182e588b00f18ac9c4b497823ffbb65b",
    "filename": "src/main/java/com/example/volunteer/Service/SwiperService.java",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/zwh1314/volunteer/blob/ac074456ce3a10fb2295f6c728d469d49bc990af/src/main/java/com/example/volunteer/Service/SwiperService.java",
    "raw_url": "https://github.com/zwh1314/volunteer/raw/ac074456ce3a10fb2295f6c728d469d49bc990af/src/main/java/com/example/volunteer/Service/SwiperService.java",
    "contents_url": "https://api.github.com/repos/zwh1314/volunteer/contents/src/main/java/com/example/volunteer/Service/SwiperService.java?ref=ac074456ce3a10fb2295f6c728d469d49bc990af",
    "patch": "@@ -18,4 +18,6 @@\n     Response<List<Swiper>> getSwiperByPriority(String priority);\n \n     Response<Boolean> deleteSwiperById(long swiperId);\n+\n+    Response<List<Swiper>> getSwiperByNumber(long number);\n }"
  },
  {
    "sha": "5deb01330a88b9862e18eef970f5568e8f28150c",
    "filename": "src/main/java/com/example/volunteer/Service/VideoService.java",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/zwh1314/volunteer/blob/ac074456ce3a10fb2295f6c728d469d49bc990af/src/main/java/com/example/volunteer/Service/VideoService.java",
    "raw_url": "https://github.com/zwh1314/volunteer/raw/ac074456ce3a10fb2295f6c728d469d49bc990af/src/main/java/com/example/volunteer/Service/VideoService.java",
    "contents_url": "https://api.github.com/repos/zwh1314/volunteer/contents/src/main/java/com/example/volunteer/Service/VideoService.java?ref=ac074456ce3a10fb2295f6c728d469d49bc990af",
    "patch": "@@ -19,5 +19,7 @@\n \n   Response<List<Video>> getVideoInOneWeek();\n \n+  Response<List<Video>> getVideoByNumber(long number);\n+\n   Response<Boolean> deleteVideoById(long videoId);\n }"
  }
]
