[
  {
    "sha": "3730e431ed9939fc70f36dbd61b7a32b94892d4f",
    "filename": "src/main/java/zmaster587/advancedRocketry/AdvancedRocketry.java",
    "status": "modified",
    "additions": 77,
    "deletions": 80,
    "changes": 157,
    "blob_url": "https://github.com/zmaster587/AdvancedRocketry/blob/ab257d1ab576e644f88ddc84b5a7495ec8ee7885/src/main/java/zmaster587/advancedRocketry/AdvancedRocketry.java",
    "raw_url": "https://github.com/zmaster587/AdvancedRocketry/raw/ab257d1ab576e644f88ddc84b5a7495ec8ee7885/src/main/java/zmaster587/advancedRocketry/AdvancedRocketry.java",
    "contents_url": "https://api.github.com/repos/zmaster587/AdvancedRocketry/contents/src/main/java/zmaster587/advancedRocketry/AdvancedRocketry.java?ref=ab257d1ab576e644f88ddc84b5a7495ec8ee7885",
    "patch": "@@ -1,16 +1,11 @@\n package zmaster587.advancedRocketry;\n \n-import com.google.common.collect.Lists;\n-\n import net.minecraft.block.Block;\n import net.minecraft.block.material.MapColor;\n import net.minecraft.block.material.Material;\n import net.minecraft.block.material.MaterialLiquid;\n import net.minecraft.creativetab.CreativeTabs;\n import net.minecraft.enchantment.Enchantment;\n-import net.minecraft.entity.Entity;\n-import net.minecraft.entity.EntityList;\n-import net.minecraft.entity.item.EntityArmorStand;\n import net.minecraft.init.Biomes;\n import net.minecraft.init.Blocks;\n import net.minecraft.init.Items;\n@@ -26,16 +21,12 @@\n import net.minecraft.world.World;\n import net.minecraft.world.WorldType;\n import net.minecraft.world.biome.Biome;\n-import net.minecraft.world.biome.Biome.SpawnListEntry;\n import net.minecraftforge.client.event.ModelRegistryEvent;\n import net.minecraftforge.common.BiomeDictionary;\n import net.minecraftforge.common.ForgeChunkManager;\n import net.minecraftforge.common.MinecraftForge;\n import net.minecraftforge.common.config.Configuration;\n import net.minecraftforge.event.RegistryEvent;\n-import net.minecraftforge.event.RegistryEvent.MissingMappings.Action;\n-import net.minecraftforge.event.RegistryEvent.MissingMappings.Mapping;\n-import net.minecraftforge.fluids.Fluid;\n import net.minecraftforge.fluids.FluidRegistry;\n import net.minecraftforge.fml.common.FMLCommonHandler;\n import net.minecraftforge.fml.common.Loader;\n@@ -53,10 +44,6 @@\n import net.minecraftforge.fml.relauncher.SideOnly;\n import net.minecraftforge.oredict.OreDictionary;\n import net.minecraftforge.oredict.OreDictionary.OreRegisterEvent;\n-import net.minecraftforge.oredict.ShapedOreRecipe;\n-import net.minecraftforge.oredict.ShapelessOreRecipe;\n-import net.minecraftforge.registries.GameData;\n-import net.minecraftforge.registries.IForgeRegistryEntry;\n \n import org.apache.logging.log4j.LogManager;\n import org.apache.logging.log4j.Logger;\n@@ -65,19 +52,10 @@\n import zmaster587.advancedRocketry.api.*;\n import zmaster587.advancedRocketry.api.atmosphere.AtmosphereRegister;\n import zmaster587.advancedRocketry.api.capability.CapabilitySpaceArmor;\n-import zmaster587.advancedRocketry.api.dimension.solar.StellarBody;\n-import zmaster587.advancedRocketry.api.fuel.FuelRegistry;\n-import zmaster587.advancedRocketry.api.fuel.FuelRegistry.FuelType;\n import zmaster587.advancedRocketry.api.satellite.SatelliteProperties;\n-import zmaster587.advancedRocketry.api.stations.ISpaceObject;\n import zmaster587.advancedRocketry.armor.ItemSpaceArmor;\n import zmaster587.advancedRocketry.armor.ItemSpaceChest;\n-import zmaster587.advancedRocketry.atmosphere.AtmosphereVacuum;\n-import zmaster587.advancedRocketry.backwardCompat.VersionCompat;\n import zmaster587.advancedRocketry.block.*;\n-import zmaster587.advancedRocketry.block.cable.BlockDataCable;\n-import zmaster587.advancedRocketry.block.cable.BlockEnergyCable;\n-import zmaster587.advancedRocketry.block.cable.BlockLiquidPipe;\n import zmaster587.advancedRocketry.block.multiblock.BlockARHatch;\n import zmaster587.advancedRocketry.block.plant.BlockAlienLeaves;\n import zmaster587.advancedRocketry.block.plant.BlockAlienPlank;\n@@ -109,8 +87,9 @@\n import zmaster587.advancedRocketry.satellite.*;\n import zmaster587.advancedRocketry.stations.SpaceStationObject;\n import zmaster587.advancedRocketry.stations.SpaceObjectManager;\n-import zmaster587.advancedRocketry.tile.Satellite.TileEntitySatelliteControlCenter;\n-import zmaster587.advancedRocketry.tile.Satellite.TileSatelliteBuilder;\n+import zmaster587.advancedRocketry.tile.multiblock.energy.TileSolarArray;\n+import zmaster587.advancedRocketry.tile.satellite.TileSatelliteTerminal;\n+import zmaster587.advancedRocketry.tile.satellite.TileSatelliteBuilder;\n import zmaster587.advancedRocketry.tile.*;\n import zmaster587.advancedRocketry.tile.cables.TileDataPipe;\n import zmaster587.advancedRocketry.tile.cables.TileEnergyPipe;\n@@ -124,11 +103,10 @@\n import zmaster587.advancedRocketry.tile.multiblock.energy.TileMicrowaveReciever;\n import zmaster587.advancedRocketry.tile.multiblock.machine.*;\n import zmaster587.advancedRocketry.tile.oxygen.TileCO2Scrubber;\n-import zmaster587.advancedRocketry.tile.oxygen.TileOxygenCharger;\n+import zmaster587.advancedRocketry.tile.oxygen.TileGasChargePad;\n import zmaster587.advancedRocketry.tile.oxygen.TileOxygenVent;\n import zmaster587.advancedRocketry.tile.station.*;\n import zmaster587.advancedRocketry.util.*;\n-import zmaster587.advancedRocketry.util.XMLPlanetLoader.DimensionPropertyCoupling;\n import zmaster587.advancedRocketry.world.biome.*;\n import zmaster587.advancedRocketry.world.decoration.MapGenLander;\n import zmaster587.advancedRocketry.world.ore.OreGenerator;\n@@ -345,13 +323,12 @@ public void preInit(FMLPreInitializationEvent event)\n \n \t\t//Satellites ---------------------------------------------------------------------------------------------\n \t\tSatelliteRegistry.registerSatellite(\"optical\", SatelliteOptical.class);\n-\t\tSatelliteRegistry.registerSatellite(\"solar\", SatelliteEnergy.class);\n \t\tSatelliteRegistry.registerSatellite(\"density\", SatelliteDensity.class);\n \t\tSatelliteRegistry.registerSatellite(\"composition\", SatelliteComposition.class);\n \t\tSatelliteRegistry.registerSatellite(\"mass\", SatelliteMassScanner.class);\n \t\tSatelliteRegistry.registerSatellite(\"asteroidMiner\", MissionOreMining.class);\n \t\tSatelliteRegistry.registerSatellite(\"gasMining\", MissionGasCollection.class);\n-\t\tSatelliteRegistry.registerSatellite(\"solarEnergy\", SatelliteEnergy.class);\n+\t\tSatelliteRegistry.registerSatellite(\"solarEnergy\", SatelliteMicrowaveEnergy.class);\n \t\tSatelliteRegistry.registerSatellite(\"oreScanner\", SatelliteOreMapping.class);\n \t\tSatelliteRegistry.registerSatellite(\"biomeChanger\", SatelliteBiomeChanger.class);\n \n@@ -369,22 +346,22 @@ public void preInit(FMLPreInitializationEvent event)\n \t\tEntityRegistry.registerModEntity(new ResourceLocation(Constants.modId, \"ARHoverCraft\") , EntityHoverCraft.class, \"hovercraft\", 9, this, 64, 3, true);\n \t\t\n \t\t//TileEntity Registration ---------------------------------------------------------------------------------------------\n-\t\tGameRegistry.registerTileEntity(TileRocketBuilder.class, \"ARrocketBuilder\");\n+\t\tGameRegistry.registerTileEntity(TileRocketAssemblingMachine.class, \"ARrocketBuilder\");\n \t\tGameRegistry.registerTileEntity(TileWarpCore.class, \"ARwarpCore\");\n \t\t//GameRegistry.registerTileEntity(TileModelRender.class, \"ARmodelRenderer\");\n-\t\tGameRegistry.registerTileEntity(TileEntityFuelingStation.class, \"ARfuelingStation\");\n-\t\tGameRegistry.registerTileEntity(TileEntityMoniteringStation.class, \"ARmonitoringStation\");\n+\t\tGameRegistry.registerTileEntity(TileFuelingStation.class, \"ARfuelingStation\");\n+\t\tGameRegistry.registerTileEntity(TileRocketMonitoringStation.class, \"ARmonitoringStation\");\n \t\t//GameRegistry.registerTileEntity(TileMissionController.class, \"ARmissionControlComp\");\n-\t\tGameRegistry.registerTileEntity(TileSpaceLaser.class, \"ARspaceLaser\");\n+\t\tGameRegistry.registerTileEntity(TileOrbitalLaserDrill.class, \"ARspaceLaser\");\n \t\tGameRegistry.registerTileEntity(TilePrecisionAssembler.class, \"ARprecisionAssembler\");\n \t\tGameRegistry.registerTileEntity(TileObservatory.class, \"ARobservatory\");\n \t\tGameRegistry.registerTileEntity(TileCrystallizer.class, \"ARcrystallizer\");\n \t\tGameRegistry.registerTileEntity(TileCuttingMachine.class, \"ARcuttingmachine\");\n \t\tGameRegistry.registerTileEntity(TileDataBus.class, \"ARdataBus\");\n \t\tGameRegistry.registerTileEntity(TileSatelliteHatch.class, \"ARsatelliteHatch\");\n-\t\tGameRegistry.registerTileEntity(TileGuidanceComputerHatch.class, \"ARguidanceComputerHatch\");\n+\t\tGameRegistry.registerTileEntity(TileGuidanceComputerAccessHatch.class, \"ARguidanceComputerHatch\");\n \t\tGameRegistry.registerTileEntity(TileSatelliteBuilder.class, \"ARsatelliteBuilder\");\n-\t\tGameRegistry.registerTileEntity(TileEntitySatelliteControlCenter.class, \"ARTileEntitySatelliteControlCenter\");\n+\t\tGameRegistry.registerTileEntity(TileSatelliteTerminal.class, \"ARTileEntitySatelliteControlCenter\");\n \t\tGameRegistry.registerTileEntity(TileAstrobodyDataProcessor.class, \"ARplanetAnalyser\");\n \t\tGameRegistry.registerTileEntity(TileGuidanceComputer.class, \"ARguidanceComputer\");\n \t\tGameRegistry.registerTileEntity(TileElectricArcFurnace.class, \"ARelectricArcFurnace\");\n@@ -393,36 +370,35 @@ public void preInit(FMLPreInitializationEvent event)\n \t\tGameRegistry.registerTileEntity(TileMaterial.class, \"ARTileMaterial\");\n \t\tGameRegistry.registerTileEntity(TileLathe.class, \"ARTileLathe\");\n \t\tGameRegistry.registerTileEntity(TileRollingMachine.class, \"ARTileMetalBender\");\n-\t\tGameRegistry.registerTileEntity(TileStationBuilder.class, \"ARStationBuilder\");\n+\t\tGameRegistry.registerTileEntity(TileStationAssembler.class, \"ARStationBuilder\");\n \t\tGameRegistry.registerTileEntity(TileElectrolyser.class, \"ARElectrolyser\");\n \t\tGameRegistry.registerTileEntity(TileChemicalReactor.class, \"ARChemicalReactor\");\n \t\tGameRegistry.registerTileEntity(TileOxygenVent.class, \"AROxygenVent\");\n-\t\tGameRegistry.registerTileEntity(TileOxygenCharger.class, \"AROxygenCharger\");\n+\t\tGameRegistry.registerTileEntity(TileGasChargePad.class, \"AROxygenCharger\");\n \t\tGameRegistry.registerTileEntity(TileCO2Scrubber.class, \"ARCO2Scrubber\");\n-\t\tGameRegistry.registerTileEntity(TileWarpShipMonitor.class, \"ARStationMonitor\");\n+\t\tGameRegistry.registerTileEntity(TileWarpController.class, \"ARStationMonitor\");\n \t\tGameRegistry.registerTileEntity(TileAtmosphereDetector.class, \"AROxygenDetector\");\n-\t\tGameRegistry.registerTileEntity(TileStationOrientationControl.class, \"AROrientationControl\");\n+\t\tGameRegistry.registerTileEntity(TileStationOrientationController.class, \"AROrientationControl\");\n \t\tGameRegistry.registerTileEntity(TileStationGravityController.class, \"ARGravityControl\");\n \t\tGameRegistry.registerTileEntity(TileLiquidPipe.class, \"ARLiquidPipe\");\n \t\tGameRegistry.registerTileEntity(TileDataPipe.class, \"ARDataPipe\");\n \t\tGameRegistry.registerTileEntity(TileEnergyPipe.class, \"AREnergyPipe\");\n-\t\tGameRegistry.registerTileEntity(TileDrill.class, \"ARDrill\");\n \t\tGameRegistry.registerTileEntity(TileMicrowaveReciever.class, \"ARMicrowaveReciever\");\n \t\tGameRegistry.registerTileEntity(TileSuitWorkStation.class, \"ARSuitWorkStation\");\n \t\tGameRegistry.registerTileEntity(TileRocketLoader.class, \"ARRocketLoader\");\n \t\tGameRegistry.registerTileEntity(TileRocketUnloader.class, \"ARRocketUnloader\");\n \t\tGameRegistry.registerTileEntity(TileBiomeScanner.class, \"ARBiomeScanner\");\n \t\tGameRegistry.registerTileEntity(TileAtmosphereTerraformer.class, \"ARAttTerraformer\");\n \t\tGameRegistry.registerTileEntity(TileLandingPad.class, \"ARLandingPad\");\n-\t\tGameRegistry.registerTileEntity(TileStationDeployedAssembler.class, \"ARStationDeployableRocketAssembler\");\n+\t\tGameRegistry.registerTileEntity(TileUnmannedVehicleAssembler.class, \"ARStationDeployableRocketAssembler\");\n \t\tGameRegistry.registerTileEntity(TileFluidTank.class, \"ARFluidTank\");\n \t\tGameRegistry.registerTileEntity(TileRocketFluidUnloader.class, \"ARFluidUnloader\");\n \t\tGameRegistry.registerTileEntity(TileRocketFluidLoader.class, \"ARFluidLoader\");\n \t\tGameRegistry.registerTileEntity(TileSolarPanel.class, \"ARSolarGenerator\");\n \t\tGameRegistry.registerTileEntity(TileDockingPort.class, \"ARDockingPort\");\n \t\tGameRegistry.registerTileEntity(TileStationAltitudeController.class, \"ARStationAltitudeController\");\n \t\tGameRegistry.registerTileEntity(TileRailgun.class, \"ARRailgun\");\n-\t\tGameRegistry.registerTileEntity(TilePlanetaryHologram.class, \"ARplanetHoloSelector\");\n+\t\tGameRegistry.registerTileEntity(TileHolographicPlanetSelector.class, \"ARplanetHoloSelector\");\n \t\tGameRegistry.registerTileEntity(TileForceFieldProjector.class, \"ARForceFieldProjector\");\n \t\tGameRegistry.registerTileEntity(TileSeal.class, \"ARBlockSeal\");\n \t\tGameRegistry.registerTileEntity(TileSpaceElevator.class, \"ARSpaceElevator\");\n@@ -431,9 +407,11 @@ public void preInit(FMLPreInitializationEvent event)\n \t\tGameRegistry.registerTileEntity(TileBlackHoleGenerator.class, \"ARblackholegenerator\");\n \t\tGameRegistry.registerTileEntity(TilePump.class, new ResourceLocation(Constants.modId, \"ARpump\"));\n \t\tGameRegistry.registerTileEntity(TileCentrifuge.class, new ResourceLocation(Constants.modId, \"ARCentrifuge\"));\n+\t\tGameRegistry.registerTileEntity(TilePrecisionLaserEtcher.class, new ResourceLocation(Constants.modId, \"ARPrecisionLaserEtcher\"));\n+\t\tGameRegistry.registerTileEntity(TileSolarArray.class, new ResourceLocation(Constants.modId, \"ARSolarArray\"));\n \t\t\n \t\tif(zmaster587.advancedRocketry.api.ARConfiguration.getCurrentConfig().enableGravityController)\n-\t\t\tGameRegistry.registerTileEntity(TileGravityController.class, \"ARGravityMachine\");\n+\t\t\tGameRegistry.registerTileEntity(TileAreaGravityController.class, \"ARGravityMachine\");\n \n \n \t\t//Register machine recipes\n@@ -445,8 +423,9 @@ public void preInit(FMLPreInitializationEvent event)\n \t\tLibVulpes.registerRecipeHandler(TileElectricArcFurnace.class, event.getModConfigurationDirectory().getAbsolutePath() + \"/\" + zmaster587.advancedRocketry.api.ARConfiguration.configFolder + \"/ElectricArcFurnace.xml\");\n \t\tLibVulpes.registerRecipeHandler(TileLathe.class, event.getModConfigurationDirectory().getAbsolutePath() + \"/\" + zmaster587.advancedRocketry.api.ARConfiguration.configFolder + \"/Lathe.xml\");\n \t\tLibVulpes.registerRecipeHandler(TileRollingMachine.class, event.getModConfigurationDirectory().getAbsolutePath() + \"/\" + zmaster587.advancedRocketry.api.ARConfiguration.configFolder + \"/RollingMachine.xml\");\n-\t\tLibVulpes.registerRecipeHandler(BlockPress.class, event.getModConfigurationDirectory().getAbsolutePath() + \"/\" + zmaster587.advancedRocketry.api.ARConfiguration.configFolder + \"/SmallPlatePress.xml\");\n+\t\tLibVulpes.registerRecipeHandler(BlockSmallPlatePress.class, event.getModConfigurationDirectory().getAbsolutePath() + \"/\" + zmaster587.advancedRocketry.api.ARConfiguration.configFolder + \"/SmallPlatePress.xml\");\n \t\tLibVulpes.registerRecipeHandler(TileCentrifuge.class, event.getModConfigurationDirectory().getAbsolutePath() + \"/\" + zmaster587.advancedRocketry.api.ARConfiguration.configFolder + \"/Centrifuge.xml\");\n+\t\tLibVulpes.registerRecipeHandler(TilePrecisionLaserEtcher.class, event.getModConfigurationDirectory().getAbsolutePath() + \"/\" + zmaster587.advancedRocketry.api.ARConfiguration.configFolder + \"/PrecisionLaserEtcher.xml\");\n \n \n \t\t\n@@ -473,6 +452,7 @@ public void preInit(FMLPreInitializationEvent event)\n         machineRecipes.registerMachine(TileRollingMachine.class);\n         machineRecipes.registerMachine(TileCrystallizer.class);\n         machineRecipes.registerMachine(TileCentrifuge.class);\n+\t\tmachineRecipes.registerMachine(TilePrecisionLaserEtcher.class);\n \t}\n \t\n \t@SubscribeEvent(priority=EventPriority.HIGH)\n@@ -553,13 +533,13 @@ public void registerItems(RegistryEvent.Register<Item> evt)\n \t\tSatelliteRegistry.registerSatelliteProperty(new ItemStack(AdvancedRocketryItems.itemSatellitePrimaryFunction, 1, 0), new SatelliteProperties().setSatelliteType(SatelliteRegistry.getKey(SatelliteOptical.class)));\n \t\tSatelliteRegistry.registerSatelliteProperty(new ItemStack(AdvancedRocketryItems.itemSatellitePrimaryFunction, 1, 1), new SatelliteProperties().setSatelliteType(SatelliteRegistry.getKey(SatelliteComposition.class)));\n \t\tSatelliteRegistry.registerSatelliteProperty(new ItemStack(AdvancedRocketryItems.itemSatellitePrimaryFunction, 1, 2), new SatelliteProperties().setSatelliteType(SatelliteRegistry.getKey(SatelliteMassScanner.class)));\n-\t\tSatelliteRegistry.registerSatelliteProperty(new ItemStack(AdvancedRocketryItems.itemSatellitePrimaryFunction, 1, 3), new SatelliteProperties().setSatelliteType(SatelliteRegistry.getKey(SatelliteEnergy.class)));\n+\t\tSatelliteRegistry.registerSatelliteProperty(new ItemStack(AdvancedRocketryItems.itemSatellitePrimaryFunction, 1, 3), new SatelliteProperties().setSatelliteType(SatelliteRegistry.getKey(SatelliteMicrowaveEnergy.class)));\n \t\tSatelliteRegistry.registerSatelliteProperty(new ItemStack(AdvancedRocketryItems.itemSatellitePrimaryFunction, 1, 4), new SatelliteProperties().setSatelliteType(SatelliteRegistry.getKey(SatelliteOreMapping.class)));\n \t\tSatelliteRegistry.registerSatelliteProperty(new ItemStack(AdvancedRocketryItems.itemSatellitePrimaryFunction, 1, 5), new SatelliteProperties().setSatelliteType(SatelliteRegistry.getKey(SatelliteBiomeChanger.class)));\n-\t\tSatelliteRegistry.registerSatelliteProperty(new ItemStack(AdvancedRocketryItems.itemSatellitePowerSource,1,0), new SatelliteProperties().setPowerGeneration(1));\n-\t\tSatelliteRegistry.registerSatelliteProperty(new ItemStack(AdvancedRocketryItems.itemSatellitePowerSource,1,1), new SatelliteProperties().setPowerGeneration(10));\n-\t\tSatelliteRegistry.registerSatelliteProperty(new ItemStack(LibVulpesItems.itemBattery, 1, 0), new SatelliteProperties().setPowerStorage(100));\n-\t\tSatelliteRegistry.registerSatelliteProperty(new ItemStack(LibVulpesItems.itemBattery, 1, 1), new SatelliteProperties().setPowerStorage(400));\n+\t\tSatelliteRegistry.registerSatelliteProperty(new ItemStack(AdvancedRocketryItems.itemSatellitePowerSource,1,0), new SatelliteProperties().setPowerGeneration(4));\n+\t\tSatelliteRegistry.registerSatelliteProperty(new ItemStack(AdvancedRocketryItems.itemSatellitePowerSource,1,1), new SatelliteProperties().setPowerGeneration(40));\n+\t\tSatelliteRegistry.registerSatelliteProperty(new ItemStack(LibVulpesItems.itemBattery, 1, 0), new SatelliteProperties().setPowerStorage(10000));\n+\t\tSatelliteRegistry.registerSatelliteProperty(new ItemStack(LibVulpesItems.itemBattery, 1, 1), new SatelliteProperties().setPowerStorage(40000));\n \t\tSatelliteRegistry.registerSatelliteProperty(new ItemStack(AdvancedRocketryItems.itemDataUnit, 1, 0), new SatelliteProperties().setMaxData(1000));\n \n \n@@ -610,6 +590,7 @@ public void registerItems(RegistryEvent.Register<Item> evt)\n         OreDictionary.registerOre(\"waferSilicon\", new ItemStack(AdvancedRocketryItems.itemWafer,1,0));\n         OreDictionary.registerOre(\"ingotCarbon\", new ItemStack(AdvancedRocketryItems.itemMisc, 1, 1));\n         OreDictionary.registerOre(\"itemLens\", AdvancedRocketryItems.itemLens);\n+\t\tOreDictionary.registerOre(\"lensPrecisionLaserEtcher\", AdvancedRocketryItems.itemLens);\n         OreDictionary.registerOre(\"itemSilicon\", MaterialRegistry.getItemStackFromMaterialAndType(\"Silicon\", AllowedProducts.getProductByName(\"INGOT\")));\n         OreDictionary.registerOre(\"dustThermite\", new ItemStack(AdvancedRocketryItems.itemThermite));\n         OreDictionary.registerOre(\"slab\", new ItemStack(Blocks.STONE_SLAB));\n@@ -636,7 +617,7 @@ public void registerBlocks(RegistryEvent.Register<Block> evt)\n \t\tAdvancedRocketryBlocks.blockSawBlade = new BlockMotor(Material.IRON,1f).setCreativeTab(tabAdvRocketry).setUnlocalizedName(\"sawBlade\").setHardness(2f);\n \n \t\tAdvancedRocketryBlocks.blockConcrete = new Block(Material.ROCK).setUnlocalizedName(\"concrete\").setCreativeTab(tabAdvRocketry).setHardness(3f).setResistance(16f);\n-\t\tAdvancedRocketryBlocks.blockPlatePress = new BlockPress().setUnlocalizedName(\"blockHandPress\").setCreativeTab(tabAdvRocketry).setHardness(2f);\n+\t\tAdvancedRocketryBlocks.blockPlatePress = new BlockSmallPlatePress().setUnlocalizedName(\"blockHandPress\").setCreativeTab(tabAdvRocketry).setHardness(2f);\n \t\tAdvancedRocketryBlocks.blockAirLock = new BlockDoor2(Material.ROCK).setUnlocalizedName(\"smallAirlockDoor\").setHardness(3f).setResistance(8f);\n \t\tAdvancedRocketryBlocks.blockLandingPad = new BlockLandingPad(Material.ROCK).setUnlocalizedName(\"dockingPad\").setHardness(3f).setCreativeTab(tabAdvRocketry);\n \t\tAdvancedRocketryBlocks.blockOxygenDetection = new BlockRedstoneEmitter(Material.ROCK,\"advancedrocketry:atmosphereDetector_active\").setUnlocalizedName(\"atmosphereDetector\").setHardness(3f).setCreativeTab(tabAdvRocketry);\n@@ -646,33 +627,34 @@ public void registerBlocks(RegistryEvent.Register<Block> evt)\n \t\tAdvancedRocketryBlocks.blockCharcoalLog = new BlockCharcoalLog().setUnlocalizedName(\"charcoallog\").setCreativeTab(CreativeTabs.BUILDING_BLOCKS);\n \t\tAdvancedRocketryBlocks.blockElectricMushroom = new BlockElectricMushroom().setUnlocalizedName(\"electricMushroom\").setCreativeTab(tabAdvRocketry).setHardness(0.0F);\n \t\tAdvancedRocketryBlocks.blockCrystal = new BlockCrystal().setUnlocalizedName(\"crystal\").setCreativeTab(LibVulpes.tabLibVulpesOres).setHardness(2f);\n-\t\tAdvancedRocketryBlocks.blockOrientationController = new BlockTile(TileStationOrientationControl.class,  GuiHandler.guiId.MODULAR.ordinal()).setCreativeTab(tabAdvRocketry).setUnlocalizedName(\"orientationControl\").setHardness(3f);\n+\t\tAdvancedRocketryBlocks.blockOrientationController = new BlockTile(TileStationOrientationController.class,  GuiHandler.guiId.MODULAR.ordinal()).setCreativeTab(tabAdvRocketry).setUnlocalizedName(\"orientationControl\").setHardness(3f);\n \t\tAdvancedRocketryBlocks.blockGravityController = new BlockTile(TileStationGravityController.class,  GuiHandler.guiId.MODULAR.ordinal()).setCreativeTab(tabAdvRocketry).setUnlocalizedName(\"gravityControl\").setHardness(3f);\n \t\tAdvancedRocketryBlocks.blockAltitudeController = new BlockTile(TileStationAltitudeController.class,  GuiHandler.guiId.MODULAR.ordinal()).setCreativeTab(tabAdvRocketry).setUnlocalizedName(\"altitudeController\").setHardness(3f);\n-\t\tAdvancedRocketryBlocks.blockOxygenCharger = new BlockHalfTile(TileOxygenCharger.class, GuiHandler.guiId.MODULAR.ordinal()).setUnlocalizedName(\"oxygenCharger\").setCreativeTab(tabAdvRocketry).setHardness(3f);\n+\t\tAdvancedRocketryBlocks.blockOxygenCharger = new BlockHalfTile(TileGasChargePad.class, GuiHandler.guiId.MODULAR.ordinal()).setUnlocalizedName(\"oxygenCharger\").setCreativeTab(tabAdvRocketry).setHardness(3f);\n \t\tAdvancedRocketryBlocks.blockOxygenVent = new BlockTile(TileOxygenVent.class, GuiHandler.guiId.MODULAR.ordinal()).setUnlocalizedName(\"oxygenVent\").setCreativeTab(tabAdvRocketry).setHardness(3f);\n \t\tAdvancedRocketryBlocks.blockCircleLight = new Block(Material.IRON).setUnlocalizedName(\"circleLight\").setCreativeTab(tabAdvRocketry).setHardness(2f).setLightLevel(1f);\n \t\tAdvancedRocketryBlocks.blockLens = new BlockLens().setUnlocalizedName(\"lens\").setCreativeTab(tabAdvRocketry).setHardness(0.3f);\n-\t\tAdvancedRocketryBlocks.blockRocketBuilder = new BlockTileWithMultitooltip(TileRocketBuilder.class, GuiHandler.guiId.MODULARNOINV.ordinal()).setUnlocalizedName(\"rocketAssembler\").setCreativeTab(tabAdvRocketry).setHardness(3f);\n+\t\tAdvancedRocketryBlocks.blockRocketBuilder = new BlockTileWithMultitooltip(TileRocketAssemblingMachine.class, GuiHandler.guiId.MODULARNOINV.ordinal()).setUnlocalizedName(\"rocketAssembler\").setCreativeTab(tabAdvRocketry).setHardness(3f);\n \t\tAdvancedRocketryBlocks.blockForceField = new BlockForceField(Material.ROCK).setBlockUnbreakable().setResistance(6000000.0F).setUnlocalizedName(\"forceField\");\n \t\tAdvancedRocketryBlocks.blockForceFieldProjector = new BlockForceFieldProjector(Material.ROCK).setUnlocalizedName(\"forceFieldProjector\").setCreativeTab(tabAdvRocketry).setHardness(3f);\n+\t\tAdvancedRocketryBlocks.blockVacuumLaser = new BlockVacuumLaser(Material.IRON).setUnlocalizedName(\"vacuumLaser\").setCreativeTab(tabAdvRocketry).setHardness(4f);\n \n-\t\tAdvancedRocketryBlocks.blockDeployableRocketBuilder = new BlockTileWithMultitooltip(TileStationDeployedAssembler.class, GuiHandler.guiId.MODULARNOINV.ordinal()).setUnlocalizedName(\"deployableRocketAssembler\").setCreativeTab(tabAdvRocketry).setHardness(3f);\n+\t\tAdvancedRocketryBlocks.blockDeployableRocketBuilder = new BlockTileWithMultitooltip(TileUnmannedVehicleAssembler.class, GuiHandler.guiId.MODULARNOINV.ordinal()).setUnlocalizedName(\"deployableRocketAssembler\").setCreativeTab(tabAdvRocketry).setHardness(3f);\n \n-\t\tAdvancedRocketryBlocks.blockStationBuilder = new BlockTileWithMultitooltip(TileStationBuilder.class, GuiHandler.guiId.MODULAR.ordinal()).setUnlocalizedName(\"stationAssembler\").setCreativeTab(tabAdvRocketry).setHardness(3f);\n+\t\tAdvancedRocketryBlocks.blockStationBuilder = new BlockTileWithMultitooltip(TileStationAssembler.class, GuiHandler.guiId.MODULAR.ordinal()).setUnlocalizedName(\"stationAssembler\").setCreativeTab(tabAdvRocketry).setHardness(3f);\n \n-\t\tAdvancedRocketryBlocks.blockFuelingStation = new BlockTileRedstoneEmitter(TileEntityFuelingStation.class, GuiHandler.guiId.MODULAR.ordinal()).setUnlocalizedName(\"fuelStation\").setCreativeTab(tabAdvRocketry).setHardness(3f);\n+\t\tAdvancedRocketryBlocks.blockFuelingStation = new BlockTileRedstoneEmitter(TileFuelingStation.class, GuiHandler.guiId.MODULAR.ordinal()).setUnlocalizedName(\"fuelStation\").setCreativeTab(tabAdvRocketry).setHardness(3f);\n \n-\t\tAdvancedRocketryBlocks.blockMonitoringStation = new BlockTileNeighborUpdate(TileEntityMoniteringStation.class, GuiHandler.guiId.MODULARNOINV.ordinal()).setCreativeTab(tabAdvRocketry).setHardness(3f);\n+\t\tAdvancedRocketryBlocks.blockMonitoringStation = new BlockTileNeighborUpdate(TileRocketMonitoringStation.class, GuiHandler.guiId.MODULARNOINV.ordinal()).setCreativeTab(tabAdvRocketry).setHardness(3f);\n \t\tAdvancedRocketryBlocks.blockMonitoringStation.setUnlocalizedName(\"monitoringstation\");\n \n-\t\tAdvancedRocketryBlocks.blockWarpShipMonitor = new BlockWarpShipMonitor(TileWarpShipMonitor.class, GuiHandler.guiId.MODULARNOINV.ordinal()).setCreativeTab(tabAdvRocketry).setHardness(3f);\n+\t\tAdvancedRocketryBlocks.blockWarpShipMonitor = new BlockWarpController(TileWarpController.class, GuiHandler.guiId.MODULARNOINV.ordinal()).setCreativeTab(tabAdvRocketry).setHardness(3f);\n \t\tAdvancedRocketryBlocks.blockWarpShipMonitor.setUnlocalizedName(\"stationmonitor\");\n \n \t\tAdvancedRocketryBlocks.blockSatelliteBuilder = new BlockMultiblockMachine(TileSatelliteBuilder.class, GuiHandler.guiId.MODULAR.ordinal()).setCreativeTab(tabAdvRocketry).setHardness(3f);\n \t\tAdvancedRocketryBlocks.blockSatelliteBuilder.setUnlocalizedName(\"satelliteBuilder\");\n \n-\t\tAdvancedRocketryBlocks.blockSatelliteControlCenter = new BlockTile(TileEntitySatelliteControlCenter.class, GuiHandler.guiId.MODULAR.ordinal()).setCreativeTab(tabAdvRocketry).setHardness(3f);\n+\t\tAdvancedRocketryBlocks.blockSatelliteControlCenter = new BlockTile(TileSatelliteTerminal.class, GuiHandler.guiId.MODULAR.ordinal()).setCreativeTab(tabAdvRocketry).setHardness(3f);\n \t\tAdvancedRocketryBlocks.blockSatelliteControlCenter.setUnlocalizedName(\"satelliteMonitor\");\n \n \t\tAdvancedRocketryBlocks.blockMicrowaveReciever = new BlockMultiblockMachine(TileMicrowaveReciever.class, GuiHandler.guiId.MODULAR.ordinal()).setCreativeTab(tabAdvRocketry).setHardness(3f);\n@@ -684,9 +666,9 @@ public void registerBlocks(RegistryEvent.Register<Block> evt)\n \t\t//Arcfurnace\n \t\tAdvancedRocketryBlocks.blockArcFurnace = new BlockMultiblockMachine(TileElectricArcFurnace.class, GuiHandler.guiId.MODULAR.ordinal()).setUnlocalizedName(\"electricArcFurnace\").setCreativeTab(tabAdvRocketry).setHardness(3f);\n \n-\t\tAdvancedRocketryBlocks.blockMoonTurf = new BlockPlanetSoil().setMapColor(MapColor.SNOW).setHardness(0.5F).setUnlocalizedName(\"turf\").setCreativeTab(tabAdvRocketry);\n-\t\tAdvancedRocketryBlocks.blockMoonTurfDark = new BlockPlanetSoil().setMapColor(MapColor.SNOW).setHardness(0.5F).setUnlocalizedName(\"turfDark\").setCreativeTab(tabAdvRocketry);\n-\t\tAdvancedRocketryBlocks.blockHotTurf = new BlockPlanetSoil().setMapColor(MapColor.NETHERRACK).setHardness(0.5F).setUnlocalizedName(\"hotDryturf\").setCreativeTab(tabAdvRocketry);\n+\t\tAdvancedRocketryBlocks.blockMoonTurf = new BlockRegolith().setMapColor(MapColor.SNOW).setHardness(0.5F).setUnlocalizedName(\"turf\").setCreativeTab(tabAdvRocketry);\n+\t\tAdvancedRocketryBlocks.blockMoonTurfDark = new BlockRegolith().setMapColor(MapColor.SNOW).setHardness(0.5F).setUnlocalizedName(\"turfDark\").setCreativeTab(tabAdvRocketry);\n+\t\tAdvancedRocketryBlocks.blockHotTurf = new BlockRegolith().setMapColor(MapColor.NETHERRACK).setHardness(0.5F).setUnlocalizedName(\"hotDryturf\").setCreativeTab(tabAdvRocketry);\n \n \t\tAdvancedRocketryBlocks.blockLoader = new BlockARHatch(Material.ROCK).setUnlocalizedName(\"loader\").setCreativeTab(tabAdvRocketry).setHardness(3f);\n \n@@ -706,6 +688,7 @@ public void registerBlocks(RegistryEvent.Register<Block> evt)\n \t\tAdvancedRocketryBlocks.blockCrystallizer = new BlockMultiblockMachine(TileCrystallizer.class, GuiHandler.guiId.MODULAR.ordinal()).setUnlocalizedName(\"Crystallizer\").setCreativeTab(tabAdvRocketry).setHardness(3f);\n \t\tAdvancedRocketryBlocks.blockWarpCore = new BlockWarpCore(TileWarpCore.class, GuiHandler.guiId.MODULAR.ordinal()).setUnlocalizedName(\"warpCore\").setCreativeTab(tabAdvRocketry).setHardness(3f);\n \t\tAdvancedRocketryBlocks.blockChemicalReactor = new BlockMultiblockMachine(TileChemicalReactor.class, GuiHandler.guiId.MODULAR.ordinal()).setUnlocalizedName(\"chemreactor\").setCreativeTab(tabAdvRocketry).setHardness(3f);\n+\t\tAdvancedRocketryBlocks.blockPrecisionLaserEngraver = new BlockMultiblockMachine(TilePrecisionLaserEtcher.class, GuiHandler.guiId.MODULAR.ordinal()).setUnlocalizedName(\"precisionlaseretcher\").setCreativeTab(tabAdvRocketry).setHardness(3f);\n \t\tAdvancedRocketryBlocks.blockLathe = new BlockMultiblockMachine(TileLathe.class, GuiHandler.guiId.MODULAR.ordinal()).setUnlocalizedName(\"lathe\").setCreativeTab(tabAdvRocketry).setHardness(3f);\n \t\tAdvancedRocketryBlocks.blockRollingMachine = new BlockMultiblockMachine(TileRollingMachine.class, GuiHandler.guiId.MODULAR.ordinal()).setUnlocalizedName(\"rollingMachine\").setCreativeTab(tabAdvRocketry).setHardness(3f);\n \t\tAdvancedRocketryBlocks.blockElectrolyser = new BlockMultiblockMachine(TileElectrolyser.class, GuiHandler.guiId.MODULAR.ordinal()).setUnlocalizedName(\"electrolyser\").setCreativeTab(tabAdvRocketry).setHardness(3f);\n@@ -714,10 +697,11 @@ public void registerBlocks(RegistryEvent.Register<Block> evt)\n \t\tAdvancedRocketryBlocks.blockObservatory = new BlockMultiblockMachine(TileObservatory.class, GuiHandler.guiId.MODULARNOINV.ordinal()).setUnlocalizedName(\"observatory\").setCreativeTab(tabAdvRocketry).setHardness(3f);\n \t\tAdvancedRocketryBlocks.blockBlackHoleGenerator = new BlockMultiblockMachine(TileBlackHoleGenerator.class, GuiHandler.guiId.MODULAR.ordinal()).setUnlocalizedName(\"blackholegenerator\").setCreativeTab(tabAdvRocketry).setHardness(3f);\n \t\tAdvancedRocketryBlocks.blockPump = new BlockTile(TilePump.class, GuiHandler.guiId.MODULAR.ordinal()).setUnlocalizedName(\"pump\").setCreativeTab(tabAdvRocketry).setHardness(3f);\n-\t\t\n+\t\tAdvancedRocketryBlocks.blockSolarArray = new BlockMultiblockMachine(TileSolarArray.class, GuiHandler.guiId.MODULAR.ordinal()).setUnlocalizedName(\"solararray\").setCreativeTab(tabAdvRocketry).setHardness(3f);\n+\n \t\tAdvancedRocketryBlocks.blockGuidanceComputer = new BlockTile(TileGuidanceComputer.class,GuiHandler.guiId.MODULAR.ordinal()).setUnlocalizedName(\"guidanceComputer\").setCreativeTab(tabAdvRocketry).setHardness(3f);\n \t\tAdvancedRocketryBlocks.blockPlanetSelector = new BlockTile(TilePlanetSelector.class,GuiHandler.guiId.MODULARFULLSCREEN.ordinal()).setUnlocalizedName(\"planetSelector\").setCreativeTab(tabAdvRocketry).setHardness(3f);\n-\t\tAdvancedRocketryBlocks.blockPlanetHoloSelector = new BlockHalfTile(TilePlanetaryHologram.class,GuiHandler.guiId.MODULAR.ordinal()).setUnlocalizedName(\"planetHoloSelector\").setCreativeTab(tabAdvRocketry).setHardness(3f);\n+\t\tAdvancedRocketryBlocks.blockPlanetHoloSelector = new BlockHalfTile(TileHolographicPlanetSelector.class,GuiHandler.guiId.MODULAR.ordinal()).setUnlocalizedName(\"planetHoloSelector\").setCreativeTab(tabAdvRocketry).setHardness(3f);\n \t\tAdvancedRocketryBlocks.blockBiomeScanner = new BlockMultiblockMachine(TileBiomeScanner.class,GuiHandler.guiId.MODULARNOINV.ordinal()).setUnlocalizedName(\"biomeScanner\").setCreativeTab(tabAdvRocketry).setHardness(3f);\n \t\tAdvancedRocketryBlocks.blockDrill = new BlockMiningDrill().setUnlocalizedName(\"drill\").setCreativeTab(tabAdvRocketry).setHardness(3f);\n \t\tAdvancedRocketryBlocks.blockSuitWorkStation = new BlockSuitWorkstation(TileSuitWorkStation.class, GuiHandler.guiId.MODULAR.ordinal()).setUnlocalizedName(\"suitWorkStation\").setCreativeTab(tabAdvRocketry).setHardness(3f);\n@@ -734,14 +718,16 @@ public void registerBlocks(RegistryEvent.Register<Block> evt)\n \t\tAdvancedRocketryBlocks.blockBasalt = new Block(Material.ROCK).setUnlocalizedName(\"basalt\").setCreativeTab(tabAdvRocketry).setHardness(5f).setResistance(15f);\n \t\tAdvancedRocketryBlocks.blockLandingFloat = new Block(Material.ROCK).setUnlocalizedName(\"landingfloat\").setCreativeTab(tabAdvRocketry).setHardness(1).setResistance(1f);\n \t\tAdvancedRocketryBlocks.blockTransciever = new BlockTransciever(TileWirelessTransciever.class, GuiHandler.guiId.MODULAR.ordinal()).setUnlocalizedName(\"wirelessTransciever\").setCreativeTab(tabAdvRocketry).setHardness(3f);\n-\t\t\n+\t\tAdvancedRocketryBlocks.blockSolarArrayPanel = new BlockMultiBlockComponentVisible(Material.IRON).setUnlocalizedName(\"solararraypanel\").setCreativeTab(tabAdvRocketry).setHardness(1).setResistance(1f);\n+\n+\n \t\t//Configurable stuff\n \t\tif(zmaster587.advancedRocketry.api.ARConfiguration.getCurrentConfig().enableGravityController)\n-\t\t\tAdvancedRocketryBlocks.blockGravityMachine = new BlockMultiblockMachine(TileGravityController.class,GuiHandler.guiId.MODULARNOINV.ordinal()).setUnlocalizedName(\"gravityMachine\").setCreativeTab(tabAdvRocketry).setHardness(3f);\n+\t\t\tAdvancedRocketryBlocks.blockGravityMachine = new BlockMultiblockMachine(TileAreaGravityController.class,GuiHandler.guiId.MODULARNOINV.ordinal()).setUnlocalizedName(\"gravityMachine\").setCreativeTab(tabAdvRocketry).setHardness(3f);\n \n \n \t\tif(zmaster587.advancedRocketry.api.ARConfiguration.getCurrentConfig().enableLaserDrill) {\n-\t\t\tAdvancedRocketryBlocks.blockSpaceLaser = new BlockLaser().setHardness(2f);\n+\t\t\tAdvancedRocketryBlocks.blockSpaceLaser = new BlockOrbitalLaserDrill().setHardness(2f);\n \t\t\tAdvancedRocketryBlocks.blockSpaceLaser.setCreativeTab(tabAdvRocketry);\n \t\t}\n \n@@ -840,6 +826,7 @@ public void registerBlocks(RegistryEvent.Register<Block> evt)\n \t\tLibVulpesBlocks.registerBlock(AdvancedRocketryBlocks.blockStationBuilder.setRegistryName(\"stationBuilder\"));\n \t\tLibVulpesBlocks.registerBlock(AdvancedRocketryBlocks.blockElectrolyser.setRegistryName(\"electrolyser\"));\n \t\tLibVulpesBlocks.registerBlock(AdvancedRocketryBlocks.blockChemicalReactor.setRegistryName(\"chemicalReactor\"));\n+\t\tLibVulpesBlocks.registerBlock(AdvancedRocketryBlocks.blockPrecisionLaserEngraver.setRegistryName(\"precisionlaseretcher\"));\n \t\tLibVulpesBlocks.registerBlock(AdvancedRocketryBlocks.blockOxygenScrubber.setRegistryName(\"oxygenScrubber\"));\n \t\tLibVulpesBlocks.registerBlock(AdvancedRocketryBlocks.blockOxygenVent.setRegistryName(\"oxygenVent\"));\n \t\tLibVulpesBlocks.registerBlock(AdvancedRocketryBlocks.blockOxygenCharger.setRegistryName(\"oxygenCharger\"));\n@@ -881,6 +868,7 @@ public void registerBlocks(RegistryEvent.Register<Block> evt)\n \t\tLibVulpesBlocks.registerBlock(AdvancedRocketryBlocks.blockLens.setRegistryName(\"blockLens\"));\n \t\tLibVulpesBlocks.registerBlock(AdvancedRocketryBlocks.blockForceField.setRegistryName(\"forceField\"));\n \t\tLibVulpesBlocks.registerBlock(AdvancedRocketryBlocks.blockForceFieldProjector.setRegistryName(\"forceFieldProjector\"));\n+\t\tLibVulpesBlocks.registerBlock(AdvancedRocketryBlocks.blockVacuumLaser.setRegistryName(\"vacuumLaser\"));\n \t\tLibVulpesBlocks.registerBlock(AdvancedRocketryBlocks.blockPipeSealer.setRegistryName(\"pipeSealer\"));\n \t\tLibVulpesBlocks.registerBlock(AdvancedRocketryBlocks.blockSpaceElevatorController.setRegistryName(\"spaceElevatorController\"));\n \t\tLibVulpesBlocks.registerBlock(AdvancedRocketryBlocks.blockBeacon.setRegistryName(\"beacon\"));\n@@ -891,6 +879,8 @@ public void registerBlocks(RegistryEvent.Register<Block> evt)\n \t\tLibVulpesBlocks.registerBlock(AdvancedRocketryBlocks.blockCentrifuge.setRegistryName(\"centrifuge\"));\n \t\tLibVulpesBlocks.registerBlock(AdvancedRocketryBlocks.blockBasalt.setRegistryName(\"basalt\"));\n \t\tLibVulpesBlocks.registerBlock(AdvancedRocketryBlocks.blockLandingFloat.setRegistryName(\"landingfloat\"));\n+\t\tLibVulpesBlocks.registerBlock(AdvancedRocketryBlocks.blockSolarArray.setRegistryName(\"solararray\"));\n+\t\tLibVulpesBlocks.registerBlock(AdvancedRocketryBlocks.blockSolarArrayPanel.setRegistryName(\"solararraypanel\"));\n \t\t\n \t\tif(zmaster587.advancedRocketry.api.ARConfiguration.getCurrentConfig().enableGravityController)\n \t\t\tLibVulpesBlocks.registerBlock(AdvancedRocketryBlocks.blockGravityMachine.setRegistryName(\"gravityMachine\"));\n@@ -914,6 +904,7 @@ public void registerBlocks(RegistryEvent.Register<Block> evt)\n         OreDictionary.registerOre(\"treeLeaves\", new ItemStack(AdvancedRocketryBlocks.blockAlienLeaves));\n         OreDictionary.registerOre(\"treeSapling\", new ItemStack(AdvancedRocketryBlocks.blockAlienSapling));\n         OreDictionary.registerOre(\"concrete\", new ItemStack(AdvancedRocketryBlocks.blockConcrete));\n+\t\tOreDictionary.registerOre(\"casingCentrifuge\", new ItemStack(LibVulpesBlocks.blockAdvStructureBlock));\n \t}\n \n \t@SideOnly(Side.CLIENT)\n@@ -1039,31 +1030,37 @@ public void postInit(FMLPostInitializationEvent event)\n \t\tWorld.MAX_ENTITY_RADIUS = 20;\n \n \t\t//Register multiblock items with the projector\n-\t\t((ItemProjector)LibVulpesItems.itemHoloProjector).registerMachine(new TileCuttingMachine(), (BlockTile)AdvancedRocketryBlocks.blockCuttingMachine);\n+\t\t//Basic processing machines\n+\t\t((ItemProjector)LibVulpesItems.itemHoloProjector).registerMachine(new TileElectricArcFurnace(), (BlockTile)AdvancedRocketryBlocks.blockArcFurnace);\n+\t\t((ItemProjector)LibVulpesItems.itemHoloProjector).registerMachine(new TileRollingMachine(), (BlockTile)AdvancedRocketryBlocks.blockRollingMachine);\n \t\t((ItemProjector)LibVulpesItems.itemHoloProjector).registerMachine(new TileLathe(), (BlockTile)AdvancedRocketryBlocks.blockLathe);\n \t\t((ItemProjector)LibVulpesItems.itemHoloProjector).registerMachine(new TileCrystallizer(), (BlockTile)AdvancedRocketryBlocks.blockCrystallizer);\n+\t\t((ItemProjector)LibVulpesItems.itemHoloProjector).registerMachine(new TileCuttingMachine(), (BlockTile)AdvancedRocketryBlocks.blockCuttingMachine);\n \t\t((ItemProjector)LibVulpesItems.itemHoloProjector).registerMachine(new TilePrecisionAssembler(), (BlockTile)AdvancedRocketryBlocks.blockPrecisionAssembler);\n-\t\t((ItemProjector)LibVulpesItems.itemHoloProjector).registerMachine(new TileObservatory(), (BlockTile)AdvancedRocketryBlocks.blockObservatory);\n-\t\t((ItemProjector)LibVulpesItems.itemHoloProjector).registerMachine(new TileAstrobodyDataProcessor(), (BlockTile)AdvancedRocketryBlocks.blockPlanetAnalyser);\n-\t\t((ItemProjector)LibVulpesItems.itemHoloProjector).registerMachine(new TileRollingMachine(), (BlockTile)AdvancedRocketryBlocks.blockRollingMachine);\n-\t\t((ItemProjector)LibVulpesItems.itemHoloProjector).registerMachine(new TileElectricArcFurnace(), (BlockTile)AdvancedRocketryBlocks.blockArcFurnace);\n \t\t((ItemProjector)LibVulpesItems.itemHoloProjector).registerMachine(new TileElectrolyser(), (BlockTile)AdvancedRocketryBlocks.blockElectrolyser);\n \t\t((ItemProjector)LibVulpesItems.itemHoloProjector).registerMachine(new TileChemicalReactor(), (BlockTile)AdvancedRocketryBlocks.blockChemicalReactor);\n-\t\t((ItemProjector)LibVulpesItems.itemHoloProjector).registerMachine(new TileWarpCore(), (BlockTile)AdvancedRocketryBlocks.blockWarpCore);\n+\t\t//T2 processing machines\n+\t\t((ItemProjector)LibVulpesItems.itemHoloProjector).registerMachine(new TilePrecisionLaserEtcher(), (BlockTile)AdvancedRocketryBlocks.blockPrecisionLaserEngraver);\n+\t\t((ItemProjector)LibVulpesItems.itemHoloProjector).registerMachine(new TileObservatory(), (BlockTile)AdvancedRocketryBlocks.blockObservatory);\n+\t\t((ItemProjector)LibVulpesItems.itemHoloProjector).registerMachine(new TileAstrobodyDataProcessor(), (BlockTile)AdvancedRocketryBlocks.blockPlanetAnalyser);\n+\t\t((ItemProjector)LibVulpesItems.itemHoloProjector).registerMachine(new TileCentrifuge(), (BlockTile)AdvancedRocketryBlocks.blockCentrifuge);\n+\t\t((ItemProjector)LibVulpesItems.itemHoloProjector).registerMachine(new TileSatelliteBuilder(), (BlockTile)AdvancedRocketryBlocks.blockSatelliteBuilder);\n+\t\t//Power generation\n+\t\t((ItemProjector)LibVulpesItems.itemHoloProjector).registerMachine(new TileBlackHoleGenerator(), (BlockTile)AdvancedRocketryBlocks.blockBlackHoleGenerator);\n \t\t((ItemProjector)LibVulpesItems.itemHoloProjector).registerMachine(new TileMicrowaveReciever(), (BlockTile)AdvancedRocketryBlocks.blockMicrowaveReciever);\n+\t\t((ItemProjector)LibVulpesItems.itemHoloProjector).registerMachine(new TileSolarArray(), (BlockTile)AdvancedRocketryBlocks.blockSolarArray);\n+\t\t//Auxillary machines\n+\t\t((ItemProjector)LibVulpesItems.itemHoloProjector).registerMachine(new TileWarpCore(), (BlockTile)AdvancedRocketryBlocks.blockWarpCore);\n+\t\t((ItemProjector)LibVulpesItems.itemHoloProjector).registerMachine(new TileBeacon(), (BlockTile)AdvancedRocketryBlocks.blockBeacon);\n \t\t((ItemProjector)LibVulpesItems.itemHoloProjector).registerMachine(new TileBiomeScanner(), (BlockTile)AdvancedRocketryBlocks.blockBiomeScanner);\n-\t\t((ItemProjector)LibVulpesItems.itemHoloProjector).registerMachine(new TileAtmosphereTerraformer(), (BlockTile)AdvancedRocketryBlocks.blockAtmosphereTerraformer);\n \t\t((ItemProjector)LibVulpesItems.itemHoloProjector).registerMachine(new TileRailgun(), (BlockTile)AdvancedRocketryBlocks.blockRailgun);\n \t\t((ItemProjector)LibVulpesItems.itemHoloProjector).registerMachine(new TileSpaceElevator(), (BlockTile)AdvancedRocketryBlocks.blockSpaceElevatorController);\n-\t\t((ItemProjector)LibVulpesItems.itemHoloProjector).registerMachine(new TileBeacon(), (BlockTile)AdvancedRocketryBlocks.blockBeacon);\n-\t\t((ItemProjector)LibVulpesItems.itemHoloProjector).registerMachine(new TileBlackHoleGenerator(), (BlockTile)AdvancedRocketryBlocks.blockBlackHoleGenerator);\n-\t\t((ItemProjector)LibVulpesItems.itemHoloProjector).registerMachine(new TileCentrifuge(), (BlockTile)AdvancedRocketryBlocks.blockCentrifuge);\n-\n+\t\t((ItemProjector)LibVulpesItems.itemHoloProjector).registerMachine(new TileAtmosphereTerraformer(), (BlockTile)AdvancedRocketryBlocks.blockAtmosphereTerraformer);\n+\t\t//Config-controlled machines\n \t\tif(zmaster587.advancedRocketry.api.ARConfiguration.getCurrentConfig().enableGravityController)\n-\t\t\t((ItemProjector)LibVulpesItems.itemHoloProjector).registerMachine(new TileGravityController(), (BlockTile)AdvancedRocketryBlocks.blockGravityMachine);\n-\n+\t\t\t((ItemProjector)LibVulpesItems.itemHoloProjector).registerMachine(new TileAreaGravityController(), (BlockTile)AdvancedRocketryBlocks.blockGravityMachine);\n \t\tif(zmaster587.advancedRocketry.api.ARConfiguration.getCurrentConfig().enableLaserDrill)\n-\t\t\t((ItemProjector)LibVulpesItems.itemHoloProjector).registerMachine(new TileSpaceLaser(), (BlockTile)AdvancedRocketryBlocks.blockSpaceLaser);\n+\t\t\t((ItemProjector)LibVulpesItems.itemHoloProjector).registerMachine(new TileOrbitalLaserDrill(), (BlockTile)AdvancedRocketryBlocks.blockSpaceLaser);\n \n \t\tproxy.registerEventHandlers();\n \t\tproxy.registerKeyBindings();"
  },
  {
    "sha": "62a63b91a0b6161748dfb8a030c83dd336804d7f",
    "filename": "src/main/java/zmaster587/advancedRocketry/api/ARConfiguration.java",
    "status": "modified",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/zmaster587/AdvancedRocketry/blob/ab257d1ab576e644f88ddc84b5a7495ec8ee7885/src/main/java/zmaster587/advancedRocketry/api/ARConfiguration.java",
    "raw_url": "https://github.com/zmaster587/AdvancedRocketry/raw/ab257d1ab576e644f88ddc84b5a7495ec8ee7885/src/main/java/zmaster587/advancedRocketry/api/ARConfiguration.java",
    "contents_url": "https://api.github.com/repos/zmaster587/AdvancedRocketry/contents/src/main/java/zmaster587/advancedRocketry/api/ARConfiguration.java?ref=ab257d1ab576e644f88ddc84b5a7495ec8ee7885",
    "patch": "@@ -456,6 +456,8 @@ public static void loadPreInit()\n \t\tarConfig.terraformRequiresFluid = config.get(Configuration.CATEGORY_GENERAL, \"TerraformerRequiresFluids\", true).getBoolean();\n \t\tarConfig.terraformliquidRate = config.get(Configuration.CATEGORY_GENERAL, \"TerraformerFluidConsumeRate\", 40, \"how many millibuckets/t are required to keep the terraformer running\").getInt();\n \t\tarConfig.allowTerraformNonAR = config.get(Configuration.CATEGORY_GENERAL, \"allowTerraformingNonARWorlds\", false, \"If true dimensions not added by AR can be terraformed, including the overworld\").getBoolean();\n+\t\tarConfig.crystalliserMaximumGravity = (float)config.get(Configuration.CATEGORY_GENERAL, \"crystalliserMaximumGravity\", 0f, \"Maximum gravity the crystalliser will function at. Use 0.0 to disable!\").getDouble();\n+\n \n \t\tliquidMonopropellant = config.get(ROCKET, \"rocketFuels\", new String[] {\"rocketfuel;2\"}, \"List of fluid names for fluids that can be used as rocket monopropellants\").getStringList();\n \t\tliquidBipropellantFuel = config.get(ROCKET, \"rocketBipropellants\", new String[] {\"hydrogen\"}, \"List of fluid names for fluids that can be used as rocket bipropellant fuels\").getStringList();\n@@ -1095,6 +1097,9 @@ public static void loadPostInit()\n \t@ConfigProperty\n \tpublic boolean allowTerraformNonAR;\n \n+\t@ConfigProperty\n+\tpublic float crystalliserMaximumGravity;\n+\n \t@ConfigProperty\n \tpublic boolean allowZeroGSpacestations;\n "
  },
  {
    "sha": "62765f822e161be38574484266f49c01189bd017",
    "filename": "src/main/java/zmaster587/advancedRocketry/api/AdvancedRocketryBlocks.java",
    "status": "modified",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/zmaster587/AdvancedRocketry/blob/ab257d1ab576e644f88ddc84b5a7495ec8ee7885/src/main/java/zmaster587/advancedRocketry/api/AdvancedRocketryBlocks.java",
    "raw_url": "https://github.com/zmaster587/AdvancedRocketry/raw/ab257d1ab576e644f88ddc84b5a7495ec8ee7885/src/main/java/zmaster587/advancedRocketry/api/AdvancedRocketryBlocks.java",
    "contents_url": "https://api.github.com/repos/zmaster587/AdvancedRocketry/contents/src/main/java/zmaster587/advancedRocketry/api/AdvancedRocketryBlocks.java?ref=ab257d1ab576e644f88ddc84b5a7495ec8ee7885",
    "patch": "@@ -46,6 +46,7 @@\n \tpublic static Block blockOxygenFluid;\n \tpublic static Block blockHydrogenFluid;\n \tpublic static Block blockChemicalReactor;\n+\tpublic static Block blockPrecisionLaserEngraver;\n \tpublic static Block blockFuelFluid;\n \tpublic static Block test;\n \tpublic static Block blockOxygenVent;\n@@ -90,6 +91,7 @@\n \tpublic static Block blockLens;\n \tpublic static Block blockForceField;\n \tpublic static Block blockForceFieldProjector;\n+\tpublic static Block blockVacuumLaser;\n \tpublic static Block blockGravityMachine;\n \tpublic static Block blockPipeSealer;\n \tpublic static Block blockSpaceElevatorController;\n@@ -104,4 +106,6 @@\n \tpublic static Block blockCentrifuge;\n \tpublic static Block blockBasalt;\n \tpublic static Block blockLandingFloat;\n+\tpublic static Block blockSolarArray;\n+\tpublic static Block blockSolarArrayPanel;\n }"
  },
  {
    "sha": "2add2a3cf6eb7fc1f10a16ad7bd2d8fcb366c5bf",
    "filename": "src/main/java/zmaster587/advancedRocketry/api/SatelliteRegistry.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/zmaster587/AdvancedRocketry/blob/ab257d1ab576e644f88ddc84b5a7495ec8ee7885/src/main/java/zmaster587/advancedRocketry/api/SatelliteRegistry.java",
    "raw_url": "https://github.com/zmaster587/AdvancedRocketry/raw/ab257d1ab576e644f88ddc84b5a7495ec8ee7885/src/main/java/zmaster587/advancedRocketry/api/SatelliteRegistry.java",
    "contents_url": "https://api.github.com/repos/zmaster587/AdvancedRocketry/contents/src/main/java/zmaster587/advancedRocketry/api/SatelliteRegistry.java?ref=ab257d1ab576e644f88ddc84b5a7495ec8ee7885",
    "patch": "@@ -73,7 +73,7 @@ public static String getKey(Class<? extends SatelliteBase> clazz) {\n \t * @return Satellite constructed from the passed NBT\n \t */\n \tpublic static SatelliteBase createFromNBT(NBTTagCompound nbt) {\n-\t\tSatelliteBase satellite = getSatallite(nbt.getString(\"dataType\"));\n+\t\tSatelliteBase satellite = getSatellite(nbt.getString(\"dataType\"));\n \n \t\tsatellite.readFromNBT(nbt);\n \n@@ -84,7 +84,7 @@ public static SatelliteBase createFromNBT(NBTTagCompound nbt) {\n \t * @param name String identifier for a satellite\n \t * @return new satellite registered to the String identifier, SatelliteDefunct otherwise\n \t */\n-\tpublic static SatelliteBase getSatallite(String name) {\n+\tpublic static SatelliteBase getSatellite(String name) {\n \t\tClass<? extends SatelliteBase> clazz = registry.get(name);\n \n \t\tif(clazz == null) {"
  },
  {
    "sha": "0e2fc5f1fc490b2a95fdd6c37e7c5246e9ce2dc4",
    "filename": "src/main/java/zmaster587/advancedRocketry/api/dimension/IDimensionProperties.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/zmaster587/AdvancedRocketry/blob/ab257d1ab576e644f88ddc84b5a7495ec8ee7885/src/main/java/zmaster587/advancedRocketry/api/dimension/IDimensionProperties.java",
    "raw_url": "https://github.com/zmaster587/AdvancedRocketry/raw/ab257d1ab576e644f88ddc84b5a7495ec8ee7885/src/main/java/zmaster587/advancedRocketry/api/dimension/IDimensionProperties.java",
    "contents_url": "https://api.github.com/repos/zmaster587/AdvancedRocketry/contents/src/main/java/zmaster587/advancedRocketry/api/dimension/IDimensionProperties.java?ref=ab257d1ab576e644f88ddc84b5a7495ec8ee7885",
    "patch": "@@ -117,8 +117,8 @@\n \t * @param satellite satellite to add\n \t * @param world world to add the satellite to\n \t */\n-\tpublic void addSatallite(SatelliteBase satellite, World world);\n-\tpublic void addSatallite(SatelliteBase satellte);\n+\tpublic void addSatellite(SatelliteBase satellite, World world);\n+\tpublic void addSatellite(SatelliteBase satellte);\n \t\n \t/**\n \t * Returns the satellite with that ID"
  },
  {
    "sha": "4b4ee4392bd8ed5d5a2db962120948b101c4b1d9",
    "filename": "src/main/java/zmaster587/advancedRocketry/api/dimension/solar/Planet.java",
    "status": "modified",
    "additions": 17,
    "deletions": 17,
    "changes": 34,
    "blob_url": "https://github.com/zmaster587/AdvancedRocketry/blob/ab257d1ab576e644f88ddc84b5a7495ec8ee7885/src/main/java/zmaster587/advancedRocketry/api/dimension/solar/Planet.java",
    "raw_url": "https://github.com/zmaster587/AdvancedRocketry/raw/ab257d1ab576e644f88ddc84b5a7495ec8ee7885/src/main/java/zmaster587/advancedRocketry/api/dimension/solar/Planet.java",
    "contents_url": "https://api.github.com/repos/zmaster587/AdvancedRocketry/contents/src/main/java/zmaster587/advancedRocketry/api/dimension/solar/Planet.java?ref=ab257d1ab576e644f88ddc84b5a7495ec8ee7885",
    "patch": "@@ -9,8 +9,8 @@\n \tprivate int dimId;\n \tprivate StellarBody star;\n \tprivate List<Planet> moons;\n-\tprivate List<SatelliteBase> satallites;\n-\tprivate List<SatelliteBase> tickingSatallites;\n+\tprivate List<SatelliteBase> satellites;\n+\tprivate List<SatelliteBase> tickingSatellites;\n \t\n \t//Between 0 and 2pi\n \tprivate double orbit;\n@@ -29,45 +29,45 @@ public void addMoon(Planet moon) {\n \t\n \t/**\n \t * Adds a satellite orbiting this body\n-\t * @param satallite\n+\t * @param satellite\n \t */\n-\tpublic void addSatallite(SatelliteBase satallite) {\n-\t\tsatallites.add(satallite);\n+\tpublic void addSatellite(SatelliteBase satellite) {\n+\t\tsatellites.add(satellite);\n \t\t\n-\t\tif(satallite.canTick())\n-\t\t\ttickingSatallites.add(satallite);\n+\t\tif(satellite.canTick())\n+\t\t\ttickingSatellites.add(satellite);\n \t}\n \t\n \t/**\n \t * Removes a satellite orbiting this body\n-\t * @param satallite\n+\t * @param satellite\n \t * @return true if the satellite was removed, false if it doesn't exist\n \t */\n-\tpublic boolean removeSatallite(SatelliteBase satallite) {\n+\tpublic boolean removeSatellite(SatelliteBase satellite) {\n \t\t\n-\t\tif(satallite.canTick())\n-\t\t\ttickingSatallites.remove(satallite);\n+\t\tif(satellite.canTick())\n+\t\t\ttickingSatellites.remove(satellite);\n \t\t\n-\t\treturn satallites.remove(satallite);\n+\t\treturn satellites.remove(satellite);\n \t}\n \t\n \t/**\n \t * @return a list of satellites orbiting this body\n \t */\n-\tpublic List<SatelliteBase> getSatallites() {\n-\t\treturn satallites;\n+\tpublic List<SatelliteBase> getSatellites() {\n+\t\treturn satellites;\n \t}\n \t\n \t//TODO: multithreading\n \t/**\n \t * If a satellite is registered to tick, then it is ticked in this method\n \t */\n \tpublic void tick() {\n-\t\tIterator<SatelliteBase> iterator = tickingSatallites.iterator();\n+\t\tIterator<SatelliteBase> iterator = tickingSatellites.iterator();\n \t\t\n \t\twhile(iterator.hasNext()) {\n-\t\t\tSatelliteBase satallite = iterator.next();\n-\t\t\tsatallite.tickEntity();\n+\t\t\tSatelliteBase satellite = iterator.next();\n+\t\t\tsatellite.tickEntity();\n \t\t}\n \t}\n \t"
  },
  {
    "sha": "79471edd77e7ae19e0335fc50a854d7b6f60be92",
    "filename": "src/main/java/zmaster587/advancedRocketry/api/satellite/SatelliteBase.java",
    "status": "modified",
    "additions": 30,
    "deletions": 4,
    "changes": 34,
    "blob_url": "https://github.com/zmaster587/AdvancedRocketry/blob/ab257d1ab576e644f88ddc84b5a7495ec8ee7885/src/main/java/zmaster587/advancedRocketry/api/satellite/SatelliteBase.java",
    "raw_url": "https://github.com/zmaster587/AdvancedRocketry/raw/ab257d1ab576e644f88ddc84b5a7495ec8ee7885/src/main/java/zmaster587/advancedRocketry/api/satellite/SatelliteBase.java",
    "contents_url": "https://api.github.com/repos/zmaster587/AdvancedRocketry/contents/src/main/java/zmaster587/advancedRocketry/api/satellite/SatelliteBase.java?ref=ab257d1ab576e644f88ddc84b5a7495ec8ee7885",
    "patch": "@@ -9,11 +9,13 @@\n import net.minecraft.util.math.BlockPos;\n import net.minecraft.world.World;\n import net.minecraftforge.fml.relauncher.Side;\n+import zmaster587.advancedRocketry.AdvancedRocketry;\n import zmaster587.advancedRocketry.api.AdvancedRocketryItems;\n import zmaster587.advancedRocketry.api.Constants;\n import zmaster587.advancedRocketry.api.ISatelliteIdItem;\n import zmaster587.advancedRocketry.api.SatelliteRegistry;\n import zmaster587.advancedRocketry.item.ItemSatellite;\n+import zmaster587.libVulpes.util.UniversalBattery;\n \n public abstract class SatelliteBase {\n \t\n@@ -23,17 +25,24 @@\n \tprotected ItemStack satellite;\n \n \tprivate boolean isDead;\n+\n+\t//Satellite energy storage\n+\tprotected UniversalBattery battery;\n \t\n \tpublic SatelliteBase() {\n \t\tsatelliteProperties = new SatelliteProperties();\n \t\tsatelliteProperties.setSatelliteType(SatelliteRegistry.getKey(this.getClass()));\n \t\tisDead = false;\n \t\tsatellite = ItemStack.EMPTY;\n+\n+\t\t//Satellite energy storage\n+\t\tbattery = new UniversalBattery(this.satelliteProperties.getPowerStorage());\n+\n \t}\n \t\n \tpublic boolean acceptsItemInConstruction(ItemStack item) {\n \t\tint flag = SatelliteRegistry.getSatelliteProperty(item).getPropertyFlag();\n-\t\treturn SatelliteProperties.Property.MAIN.isOfType(flag);\n+\t\treturn SatelliteProperties.Property.MAIN.isOfType(flag) || SatelliteProperties.Property.POWER_GEN.isOfType(flag) || SatelliteProperties.Property.BATTERY.isOfType(flag);\n \t}\n \t\n \t/**\n@@ -60,7 +69,14 @@ public boolean acceptsItemInConstruction(ItemStack item) {\n \t * @return chance from 0 to 1 of failing this tick\n \t */\n \tpublic abstract double failureChance();\n-\t\n+\n+\t/**\n+\t * @return the power per tick the satellite produces\n+\t */\n+\tpublic int getPowerPerTick() {\n+\t\treturn satelliteProperties.getPowerGeneration();\n+\t}\n+\n \t/**\n \t * @return an item that can be used to control the satellite, normally a satellite ID chip but can be something else\n \t */\n@@ -82,13 +98,16 @@ public boolean isAcceptableControllerItemStack(ItemStack stack) {\n \t * @return true if the satellite can tick\n \t */\n \tpublic boolean canTick() {\n-\t\treturn false;\n+\t\treturn true;\n \t}\n \t\n \t/**\n \t * called every tick if satellite can tick\n \t */\n-\tpublic void tickEntity() {}\n+\tpublic void tickEntity() {\n+\t\t//Base power consumption is 1 energy per tick. Think of it like a communications & positioning upkeep amount. Some satellites may end up overriding this\n+\t\tbattery.acceptEnergy(getPowerPerTick() - 1, false);\n+\t}\n \t\n \t/**\n \t * @return the long id of the satellite, used to get a satellite from the main list\n@@ -130,6 +149,7 @@ public void setDimensionId(int world) {\n \t */\n \tpublic void setProperties(ItemStack stack) {\n \t\tthis.satelliteProperties = ((ItemSatellite)stack.getItem()).getSatellite(stack);\n+\t\tthis.battery.setMaxEnergyStored(satelliteProperties.getPowerStorage());\n \t\tthis.satellite = stack;\n \t}\n \t\n@@ -154,6 +174,7 @@ public void writeToNBT(NBTTagCompound nbt) {\n \t\tsatelliteProperties.writeToNBT(properties);\n \t\tnbt.setTag(\"properties\", properties);\n \t\tnbt.setInteger(\"dimId\", dimId);\n+\t\tbattery.writeToNBT(nbt);\n \t\t\n \t\tNBTTagCompound itemNBT = new NBTTagCompound();\n \t\t//Transition\n@@ -167,6 +188,11 @@ public void readFromNBT(NBTTagCompound nbt) {\n \t\tsatelliteProperties.readFromNBT(nbt.getCompoundTag(\"properties\"));\n \t\tdimId = nbt.getInteger(\"dimId\");\n \t\tsatellite = new ItemStack(nbt.getCompoundTag(\"item\"));\n+\t\tbattery.readFromNBT(nbt);\n+\t\tif (satelliteProperties.getPowerStorage() == 0) {\n+\t\t\tsatelliteProperties.setPowerStorage(720);\n+\t\t\tbattery = new UniversalBattery(720);\n+\t\t}\n \t}\n \t\n \tpublic void writeDataToNetwork(ByteBuf out, byte packetId) {"
  },
  {
    "sha": "562bb749086045fb24e0cacc04621d19519668e9",
    "filename": "src/main/java/zmaster587/advancedRocketry/api/stations/ISpaceObject.java",
    "status": "modified",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/zmaster587/AdvancedRocketry/blob/ab257d1ab576e644f88ddc84b5a7495ec8ee7885/src/main/java/zmaster587/advancedRocketry/api/stations/ISpaceObject.java",
    "raw_url": "https://github.com/zmaster587/AdvancedRocketry/raw/ab257d1ab576e644f88ddc84b5a7495ec8ee7885/src/main/java/zmaster587/advancedRocketry/api/stations/ISpaceObject.java",
    "contents_url": "https://api.github.com/repos/zmaster587/AdvancedRocketry/contents/src/main/java/zmaster587/advancedRocketry/api/stations/ISpaceObject.java?ref=ab257d1ab576e644f88ddc84b5a7495ec8ee7885",
    "patch": "@@ -26,6 +26,16 @@\n \t * @return the DIMID of the planet the object is currently orbiting, Constants.INVALID_PLANET if none\n \t */\n \tpublic int getOrbitingPlanetId();\n+\n+\t/**\n+\t * @return if the object is anchored in place by anything\n+\t */\n+\tpublic boolean isAnchored();\n+\n+\t/**\n+\t * Sets if the object is anchored or not\n+\t */\n+\tpublic void setIsAnchored(boolean anchored);\n \t\n \t/**\n \t * @param id the space object id of this object (NOT DIMID)"
  },
  {
    "sha": "6c9c31ddd1ec7c8301e00b073a1c7c1e51b44f28",
    "filename": "src/main/java/zmaster587/advancedRocketry/block/BlockOrbitalLaserDrill.java",
    "status": "renamed",
    "additions": 12,
    "deletions": 12,
    "changes": 24,
    "blob_url": "https://github.com/zmaster587/AdvancedRocketry/blob/ab257d1ab576e644f88ddc84b5a7495ec8ee7885/src/main/java/zmaster587/advancedRocketry/block/BlockOrbitalLaserDrill.java",
    "raw_url": "https://github.com/zmaster587/AdvancedRocketry/raw/ab257d1ab576e644f88ddc84b5a7495ec8ee7885/src/main/java/zmaster587/advancedRocketry/block/BlockOrbitalLaserDrill.java",
    "contents_url": "https://api.github.com/repos/zmaster587/AdvancedRocketry/contents/src/main/java/zmaster587/advancedRocketry/block/BlockOrbitalLaserDrill.java?ref=ab257d1ab576e644f88ddc84b5a7495ec8ee7885",
    "patch": "@@ -7,22 +7,22 @@\n import net.minecraft.world.Explosion;\n import net.minecraft.world.IBlockAccess;\n import net.minecraft.world.World;\n-import zmaster587.advancedRocketry.tile.multiblock.TileSpaceLaser;\n+import zmaster587.advancedRocketry.tile.multiblock.TileOrbitalLaserDrill;\n import zmaster587.libVulpes.block.multiblock.BlockMultiblockMachine;\n import zmaster587.libVulpes.inventory.GuiHandler;\n \n import java.util.Random;\n \n-public class BlockLaser extends BlockMultiblockMachine {\n+public class BlockOrbitalLaserDrill extends BlockMultiblockMachine {\n \n-\tpublic BlockLaser() {\n-\t\tsuper(TileSpaceLaser.class, (int)GuiHandler.guiId.MODULAR.ordinal());\n+\tpublic BlockOrbitalLaserDrill() {\n+\t\tsuper(TileOrbitalLaserDrill.class, (int)GuiHandler.guiId.MODULAR.ordinal());\n \t\tsetTickRandomly(true).setUnlocalizedName(\"spaceLaser\");\n \t}\n \n \t@Override\n \tpublic TileEntity createTileEntity(World world, IBlockState state) {\n-\t\treturn new TileSpaceLaser();\n+\t\treturn new TileOrbitalLaserDrill();\n \t}\n \n \t@Override\n@@ -34,30 +34,30 @@ public boolean hasTileEntity(IBlockState state) {\n \tpublic void neighborChanged(IBlockState state, World worldIn, BlockPos pos,\n \t\t\tBlock blockIn, BlockPos fromPos) {\n \t\tif(blockIn != this)\n-\t\t\t((TileSpaceLaser)worldIn.getTileEntity(pos)).checkCanRun();\n+\t\t\t((TileOrbitalLaserDrill)worldIn.getTileEntity(pos)).checkCanRun();\n \t}\n \n \t//can happen when lever is flipped... Update the state of the tile\n \t@Override\n \tpublic void onNeighborChange(IBlockAccess world, BlockPos pos,\n \t\t\tBlockPos neighbor) {\n-\t\tif(!(world.getTileEntity(neighbor) instanceof TileSpaceLaser))\n-\t\t\t((TileSpaceLaser)world.getTileEntity(pos)).checkCanRun();\n+\t\tif(!(world.getTileEntity(neighbor) instanceof TileOrbitalLaserDrill))\n+\t\t\t((TileOrbitalLaserDrill)world.getTileEntity(pos)).checkCanRun();\n \t}\n \n \t@Override\n \tpublic void breakBlock(World worldIn, BlockPos pos, IBlockState state) {\n \t\tsuper.breakBlock(worldIn, pos, state);\n-\t\tif(worldIn.getTileEntity(pos) instanceof TileSpaceLaser)\n-\t\t\t((TileSpaceLaser)worldIn.getTileEntity(pos)).onDestroy();\n+\t\tif(worldIn.getTileEntity(pos) instanceof TileOrbitalLaserDrill)\n+\t\t\t((TileOrbitalLaserDrill)worldIn.getTileEntity(pos)).onDestroy();\n \t}\n \n \t@Override\n \tpublic void onBlockDestroyedByExplosion(World worldIn, BlockPos pos,\n \t\t\tExplosion explosionIn) {\n \t\t// TODO Auto-generated method stub\n \t\tsuper.onBlockDestroyedByExplosion(worldIn, pos, explosionIn);\n-\t\t((TileSpaceLaser)worldIn.getTileEntity(pos)).onDestroy();\n+\t\t((TileOrbitalLaserDrill)worldIn.getTileEntity(pos)).onDestroy();\n \t}\n \n \t//To check if the laser is jammed\n@@ -66,7 +66,7 @@ public void updateTick(World worldIn, BlockPos pos, IBlockState state,\n \t\t\tRandom rand) {\n \t\tsuper.updateTick(worldIn, pos, state, rand);\n \n-\t\tTileSpaceLaser tile = (TileSpaceLaser)worldIn.getTileEntity(pos);\n+\t\tTileOrbitalLaserDrill tile = (TileOrbitalLaserDrill)worldIn.getTileEntity(pos);\n \n \t\tif(tile.isJammed())\n \t\t\ttile.attempUnjam();",
    "previous_filename": "src/main/java/zmaster587/advancedRocketry/block/BlockLaser.java"
  },
  {
    "sha": "10c279c8228e18c56da1bc9c08e24b4219a970ba",
    "filename": "src/main/java/zmaster587/advancedRocketry/block/BlockRegolith.java",
    "status": "renamed",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/zmaster587/AdvancedRocketry/blob/ab257d1ab576e644f88ddc84b5a7495ec8ee7885/src/main/java/zmaster587/advancedRocketry/block/BlockRegolith.java",
    "raw_url": "https://github.com/zmaster587/AdvancedRocketry/raw/ab257d1ab576e644f88ddc84b5a7495ec8ee7885/src/main/java/zmaster587/advancedRocketry/block/BlockRegolith.java",
    "contents_url": "https://api.github.com/repos/zmaster587/AdvancedRocketry/contents/src/main/java/zmaster587/advancedRocketry/block/BlockRegolith.java?ref=ab257d1ab576e644f88ddc84b5a7495ec8ee7885",
    "patch": "@@ -5,11 +5,11 @@\n import net.minecraft.block.material.MapColor;\n import net.minecraft.block.material.Material;\n \n-public class BlockPlanetSoil extends Block {\n+public class BlockRegolith extends Block {\n \n \tMapColor extraMapColor;\n \t\n-\tpublic BlockPlanetSoil() {\n+\tpublic BlockRegolith() {\n \t\tsuper(Material.GROUND);\n \t\tsetHarvestLevel(\"shovel\", 0);\n \t\tsetSoundType(SoundType.SAND);",
    "previous_filename": "src/main/java/zmaster587/advancedRocketry/block/BlockPlanetSoil.java"
  },
  {
    "sha": "8dc565695037e3ccb1b2a4847a560dd2f5177598",
    "filename": "src/main/java/zmaster587/advancedRocketry/block/BlockSmallPlatePress.java",
    "status": "renamed",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/zmaster587/AdvancedRocketry/blob/ab257d1ab576e644f88ddc84b5a7495ec8ee7885/src/main/java/zmaster587/advancedRocketry/block/BlockSmallPlatePress.java",
    "raw_url": "https://github.com/zmaster587/AdvancedRocketry/raw/ab257d1ab576e644f88ddc84b5a7495ec8ee7885/src/main/java/zmaster587/advancedRocketry/block/BlockSmallPlatePress.java",
    "contents_url": "https://api.github.com/repos/zmaster587/AdvancedRocketry/contents/src/main/java/zmaster587/advancedRocketry/block/BlockSmallPlatePress.java?ref=ab257d1ab576e644f88ddc84b5a7495ec8ee7885",
    "patch": "@@ -20,9 +20,9 @@\n \n import java.util.List;\n \n-public class BlockPress extends BlockPistonBase {\n+public class BlockSmallPlatePress extends BlockPistonBase {\n \n-\tpublic BlockPress() {\n+\tpublic BlockSmallPlatePress() {\n \t\tsuper(false);\n \t}\n ",
    "previous_filename": "src/main/java/zmaster587/advancedRocketry/block/BlockPress.java"
  },
  {
    "sha": "669c5a198676cbff743fa70e92128bfb468d922a",
    "filename": "src/main/java/zmaster587/advancedRocketry/block/BlockVacuumLaser.java",
    "status": "added",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/zmaster587/AdvancedRocketry/blob/ab257d1ab576e644f88ddc84b5a7495ec8ee7885/src/main/java/zmaster587/advancedRocketry/block/BlockVacuumLaser.java",
    "raw_url": "https://github.com/zmaster587/AdvancedRocketry/raw/ab257d1ab576e644f88ddc84b5a7495ec8ee7885/src/main/java/zmaster587/advancedRocketry/block/BlockVacuumLaser.java",
    "contents_url": "https://api.github.com/repos/zmaster587/AdvancedRocketry/contents/src/main/java/zmaster587/advancedRocketry/block/BlockVacuumLaser.java?ref=ab257d1ab576e644f88ddc84b5a7495ec8ee7885",
    "patch": "@@ -0,0 +1,20 @@\n+package zmaster587.advancedRocketry.block;\n+\n+import net.minecraft.block.material.Material;\n+import net.minecraft.block.state.IBlockState;\n+import net.minecraft.entity.EntityLivingBase;\n+import net.minecraft.item.ItemStack;\n+import net.minecraft.tileentity.TileEntity;\n+import net.minecraft.util.EnumFacing;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraft.world.World;\n+import zmaster587.advancedRocketry.tile.TileForceFieldProjector;\n+import zmaster587.libVulpes.block.BlockFullyRotatable;\n+\n+public class BlockVacuumLaser extends BlockFullyRotatable {\n+\n+\tpublic BlockVacuumLaser(Material material) {\n+\t\tsuper(material);\n+\t}\n+\n+}"
  },
  {
    "sha": "fc3f1e22b2dfd656e4d5463fccf212ad6e3ad223",
    "filename": "src/main/java/zmaster587/advancedRocketry/block/BlockWarpController.java",
    "status": "renamed",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/zmaster587/AdvancedRocketry/blob/ab257d1ab576e644f88ddc84b5a7495ec8ee7885/src/main/java/zmaster587/advancedRocketry/block/BlockWarpController.java",
    "raw_url": "https://github.com/zmaster587/AdvancedRocketry/raw/ab257d1ab576e644f88ddc84b5a7495ec8ee7885/src/main/java/zmaster587/advancedRocketry/block/BlockWarpController.java",
    "contents_url": "https://api.github.com/repos/zmaster587/AdvancedRocketry/contents/src/main/java/zmaster587/advancedRocketry/block/BlockWarpController.java?ref=ab257d1ab576e644f88ddc84b5a7495ec8ee7885",
    "patch": "@@ -11,9 +11,9 @@\n import zmaster587.advancedRocketry.stations.SpaceObjectManager;\n import zmaster587.libVulpes.block.BlockTile;\n \n-public class BlockWarpShipMonitor extends BlockTile {\n+public class BlockWarpController extends BlockTile {\n \n-\tpublic BlockWarpShipMonitor(Class<? extends TileEntity> tileClass, int guiId) {\n+\tpublic BlockWarpController(Class<? extends TileEntity> tileClass, int guiId) {\n \t\tsuper(tileClass, guiId);\n \t}\n ",
    "previous_filename": "src/main/java/zmaster587/advancedRocketry/block/BlockWarpShipMonitor.java"
  },
  {
    "sha": "588fc95a52414dc4b37f1ac8b8f20c5cdb2efae9",
    "filename": "src/main/java/zmaster587/advancedRocketry/block/multiblock/BlockARHatch.java",
    "status": "modified",
    "additions": 4,
    "deletions": 3,
    "changes": 7,
    "blob_url": "https://github.com/zmaster587/AdvancedRocketry/blob/ab257d1ab576e644f88ddc84b5a7495ec8ee7885/src/main/java/zmaster587/advancedRocketry/block/multiblock/BlockARHatch.java",
    "raw_url": "https://github.com/zmaster587/AdvancedRocketry/raw/ab257d1ab576e644f88ddc84b5a7495ec8ee7885/src/main/java/zmaster587/advancedRocketry/block/multiblock/BlockARHatch.java",
    "contents_url": "https://api.github.com/repos/zmaster587/AdvancedRocketry/contents/src/main/java/zmaster587/advancedRocketry/block/multiblock/BlockARHatch.java?ref=ab257d1ab576e644f88ddc84b5a7495ec8ee7885",
    "patch": "@@ -40,7 +40,8 @@ public boolean shouldSideBeRendered(IBlockState blockState,\n \n \n \t\tboolean isPointer = blockAccess.getTileEntity(pos.offset(direction.getOpposite())) instanceof TilePointer;\n-\t\t\n+\t\tif (blockState.getValue(VARIANT) == 8)\n+\t\t\treturn false;\n \t\tif(isPointer || blockState.getValue(VARIANT) < 2)\n \t\t\treturn super.shouldSideBeRendered(blockState, blockAccess, pos, direction);\n \t\treturn true;\n@@ -80,7 +81,7 @@ public TileEntity createTileEntity(World world, IBlockState state) {\n \t\t\n \t\t//TODO: multiple sized Hatches\n \t\tif((metadata & 7) == 0)\n-\t\t\treturn new TileDataBus(4);\n+\t\t\treturn new TileDataBus(2);\n \t\telse if((metadata & 7) == 1)\n \t\t\treturn new TileSatelliteHatch(1);\t\n \t\telse if((metadata & 7) == 2)\n@@ -92,7 +93,7 @@ else if((metadata & 7) == 4)\n \t\telse if((metadata & 7) == 5)\n \t\t\treturn new TileRocketFluidLoader();\n \t\telse if((metadata & 7) == 6)\n-\t\t\treturn new TileGuidanceComputerHatch();\n+\t\t\treturn new TileGuidanceComputerAccessHatch();\n \t\t\n \t\treturn null;\n \t}"
  },
  {
    "sha": "32cbcf7008cf967679a34a7bdbe34cf216d96c9f",
    "filename": "src/main/java/zmaster587/advancedRocketry/client/ClientProxy.java",
    "status": "modified",
    "additions": 9,
    "deletions": 110,
    "changes": 119,
    "blob_url": "https://github.com/zmaster587/AdvancedRocketry/blob/ab257d1ab576e644f88ddc84b5a7495ec8ee7885/src/main/java/zmaster587/advancedRocketry/client/ClientProxy.java",
    "raw_url": "https://github.com/zmaster587/AdvancedRocketry/raw/ab257d1ab576e644f88ddc84b5a7495ec8ee7885/src/main/java/zmaster587/advancedRocketry/client/ClientProxy.java",
    "contents_url": "https://api.github.com/repos/zmaster587/AdvancedRocketry/contents/src/main/java/zmaster587/advancedRocketry/client/ClientProxy.java?ref=ab257d1ab576e644f88ddc84b5a7495ec8ee7885",
    "patch": "@@ -1,7 +1,5 @@\n package zmaster587.advancedRocketry.client;\n \n-import java.util.LinkedList;\n-\n import net.minecraft.block.Block;\n import net.minecraft.block.state.IBlockState;\n import net.minecraft.client.Minecraft;\n@@ -13,7 +11,6 @@\n import net.minecraft.client.renderer.color.IBlockColor;\n import net.minecraft.client.renderer.color.IItemColor;\n import net.minecraft.entity.Entity;\n-import net.minecraft.init.Blocks;\n import net.minecraft.item.Item;\n import net.minecraft.item.ItemArmor;\n import net.minecraft.item.ItemStack;\n@@ -46,14 +43,13 @@\n import zmaster587.advancedRocketry.client.render.entity.*;\n import zmaster587.advancedRocketry.client.render.multiblocks.*;\n import zmaster587.advancedRocketry.common.CommonProxy;\n-import zmaster587.advancedRocketry.dimension.DimensionManager;\n import zmaster587.advancedRocketry.entity.*;\n import zmaster587.advancedRocketry.entity.fx.*;\n import zmaster587.advancedRocketry.event.PlanetEventHandler;\n import zmaster587.advancedRocketry.event.RocketEventHandler;\n import zmaster587.advancedRocketry.stations.SpaceObjectManager;\n import zmaster587.advancedRocketry.tile.TileFluidTank;\n-import zmaster587.advancedRocketry.tile.TileRocketBuilder;\n+import zmaster587.advancedRocketry.tile.TileRocketAssemblingMachine;\n import zmaster587.advancedRocketry.tile.cables.TileDataPipe;\n import zmaster587.advancedRocketry.tile.cables.TileEnergyPipe;\n import zmaster587.advancedRocketry.tile.cables.TileLiquidPipe;\n@@ -73,35 +69,36 @@\n \tpublic void registerRenderers() {\n \n \n-\t\tClientRegistry.bindTileEntitySpecialRenderer(TileRocketBuilder.class, new RendererRocketBuilder());\n+\t\tClientRegistry.bindTileEntitySpecialRenderer(TileRocketAssemblingMachine.class, new RendererRocketAssemblingMachine());\n \t\t//ClientRegistry.bindTileEntitySpecialRenderer(TileModelRender.class, modelBlock);\n \t\tClientRegistry.bindTileEntitySpecialRenderer(TilePrecisionAssembler.class, new RendererPrecisionAssembler());\n \t\tClientRegistry.bindTileEntitySpecialRenderer(TileCuttingMachine.class, new RendererCuttingMachine());\n \t\tClientRegistry.bindTileEntitySpecialRenderer(TileCrystallizer.class, new RendererCrystallizer());\n \t\tClientRegistry.bindTileEntitySpecialRenderer(TileObservatory.class, new RendererObservatory());\n-\t\tClientRegistry.bindTileEntitySpecialRenderer(TileAstrobodyDataProcessor.class, new RenderPlanetAnalyser());\n+\t\tClientRegistry.bindTileEntitySpecialRenderer(TileAstrobodyDataProcessor.class, new RenderAstrobodyDataProcessor());\n \t\tClientRegistry.bindTileEntitySpecialRenderer(TileLathe.class, new RendererLathe());\n \t\tClientRegistry.bindTileEntitySpecialRenderer(TileRollingMachine.class, new RendererRollingMachine());\n \t\tClientRegistry.bindTileEntitySpecialRenderer(TileElectrolyser.class, new RendererElectrolyser());\n \t\tClientRegistry.bindTileEntitySpecialRenderer(TileWarpCore.class, new RendererWarpCore());\n-\t\tClientRegistry.bindTileEntitySpecialRenderer(TileChemicalReactor.class, new RendererChemicalReactor(\"advancedrocketry:models/ChemicalReactor.obj\", \"advancedrocketry:textures/models/ChemicalReactor.png\"));\n+\t\tClientRegistry.bindTileEntitySpecialRenderer(TileChemicalReactor.class, new RendererChemicalReactor(\"advancedrocketry:models/chemicalreactor.obj\", \"advancedrocketry:textures/models/chemicalreactor.png\"));\n \t\tClientRegistry.bindTileEntitySpecialRenderer(TileSchematic.class, new RendererPhantomBlock());\n \t\t//ClientRegistry.bindTileEntitySpecialRenderer(TileDrill.class, new RendererDrill());\n \t\tClientRegistry.bindTileEntitySpecialRenderer(TileLiquidPipe.class, new RendererPipe(new ResourceLocation(\"AdvancedRocketry:textures/blocks/pipeLiquid.png\")));\n \t\tClientRegistry.bindTileEntitySpecialRenderer(TileDataPipe.class, new RendererPipe(new ResourceLocation(\"AdvancedRocketry:textures/blocks/pipeData.png\")));\n \t\tClientRegistry.bindTileEntitySpecialRenderer(TileEnergyPipe.class, new RendererPipe(new ResourceLocation(\"AdvancedRocketry:textures/blocks/pipeEnergy.png\")));\n \t\tClientRegistry.bindTileEntitySpecialRenderer(TileMicrowaveReciever.class, new RendererMicrowaveReciever());\n-\t\tClientRegistry.bindTileEntitySpecialRenderer(TileSpaceLaser.class, new RenderLaserTile());\n+\t\tClientRegistry.bindTileEntitySpecialRenderer(TileOrbitalLaserDrill.class, new RenderOrbitalLaserDrillTile());\n \t\tClientRegistry.bindTileEntitySpecialRenderer(TileBiomeScanner.class, new RenderBiomeScanner());\n-\t\tClientRegistry.bindTileEntitySpecialRenderer(TileBlackHoleGenerator.class, new RenderBlackHoleEnergy());\n+\t\tClientRegistry.bindTileEntitySpecialRenderer(TileBlackHoleGenerator.class, new RenderBlackHoleGenerator());\n \t\tClientRegistry.bindTileEntitySpecialRenderer(TileAtmosphereTerraformer.class, new RenderTerraformerAtm());\n \t\tClientRegistry.bindTileEntitySpecialRenderer(TileFluidTank.class, new RenderTank());\n-\t\tClientRegistry.bindTileEntitySpecialRenderer(zmaster587.advancedRocketry.tile.multiblock.TileSpaceLaser.class, new zmaster587.advancedRocketry.client.render.multiblocks.RenderLaser());\n+\t\tClientRegistry.bindTileEntitySpecialRenderer(TileOrbitalLaserDrill.class, new RenderOrbitalLaserDrill());\n \t\tClientRegistry.bindTileEntitySpecialRenderer(zmaster587.advancedRocketry.tile.multiblock.TileRailgun.class, new zmaster587.advancedRocketry.client.render.multiblocks.RendererRailgun());\n-\t\tClientRegistry.bindTileEntitySpecialRenderer(zmaster587.advancedRocketry.tile.multiblock.TileGravityController.class, new zmaster587.advancedRocketry.client.render.multiblocks.RenderGravityMachine());\n+\t\tClientRegistry.bindTileEntitySpecialRenderer(TileAreaGravityController.class, new RenderAreaGravityController());\n \t\tClientRegistry.bindTileEntitySpecialRenderer(zmaster587.advancedRocketry.tile.multiblock.TileSpaceElevator.class, new zmaster587.advancedRocketry.client.render.multiblocks.RendererSpaceElevator());\n \t\tClientRegistry.bindTileEntitySpecialRenderer(zmaster587.advancedRocketry.tile.multiblock.TileBeacon.class, new zmaster587.advancedRocketry.client.render.multiblocks.RenderBeacon());\n \t\tClientRegistry.bindTileEntitySpecialRenderer(zmaster587.advancedRocketry.tile.multiblock.machine.TileCentrifuge.class, new zmaster587.advancedRocketry.client.render.multiblocks.RenderCentrifuge());\n+\t\tClientRegistry.bindTileEntitySpecialRenderer(TilePrecisionLaserEtcher.class, new RendererPrecisionLaserEtcher());\n \n \t\t//ClientRegistry.bindTileEntitySpecialRenderer(TileModelRenderRotatable.class, modelBlock);\n \n@@ -158,104 +155,6 @@ public void preInitBlocks()\n \t\tblockItem = Item.getItemFromBlock(AdvancedRocketryBlocks.blockCrystal);\n \t\tfor(int i = 0; i < BlockCrystal.numMetas; i++)\n \t\t\tModelLoader.setCustomModelResourceLocation(blockItem, i, new ModelResourceLocation(\"advancedrocketry:crystal\", \"inventory\"));\n-\n-\n-\t\tblockItem = Item.getItemFromBlock(AdvancedRocketryBlocks.blockAirLock);\n-\n-\t\tblockItem = Item.getItemFromBlock(AdvancedRocketryBlocks.blockLaunchpad);\n-\t\tModelLoader.setCustomModelResourceLocation(blockItem, 0, new ModelResourceLocation(\"advancedrocketry:launchpad_all\", \"inventory\"));\n-\n-\t\tblockItem = Item.getItemFromBlock(AdvancedRocketryBlocks.blockPlatePress);\n-\t\tModelLoader.setCustomModelResourceLocation(blockItem, 0, new ModelResourceLocation(\"advancedrocketry:platePress\", \"inventory\"));\n-\t\t\n-\t\tblockItem = Item.getItemFromBlock(AdvancedRocketryBlocks.blockAdvEngine);\n-\t\t\n-\t\t\n-\t\tLinkedList<Item> blockItems = new LinkedList<Item>();\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockAdvEngine));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockAdvBipropellantEngine));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockAlienLeaves));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockAlienPlanks));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockAlienSapling));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockAlienWood));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockAltitudeController));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockArcFurnace));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockAtmosphereTerraformer));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockBeacon));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockBiomeScanner));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockBlastBrick));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockCharcoalLog));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockChemicalReactor));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockCircleLight));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockConcrete));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockCrystallizer));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockCuttingMachine));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockDataPipe));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockDeployableRocketBuilder));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockDockingPort));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockDrill));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockElectricMushroom));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockElectrolyser));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockEnergyPipe));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockEngine));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockBipropellantEngine));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockFluidPipe));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockForceField));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockForceFieldProjector));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockFuelingStation));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockFuelTank));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockBipropellantFuelTank));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockOxidizerFuelTank));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockGenericSeat));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockGravityController));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockGravityMachine));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockGuidanceComputer));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockHotTurf));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockIntake));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockLandingPad));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockLathe));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockLens));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockMicrowaveReciever));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockMonitoringStation));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockMoonTurf));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockMoonTurfDark));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockObservatory));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockOrientationController));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockOxygenCharger));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockOxygenDetection));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockOxygenScrubber));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockOxygenVent));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockPipeSealer));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockPlanetAnalyser));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockPlanetHoloSelector));\t\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockPlanetSelector));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockPrecisionAssembler));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockPressureTank));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockQuartzCrucible));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockRailgun));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockRocketBuilder));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockRollingMachine));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockSatelliteBuilder));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockSatelliteControlCenter));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockSawBlade));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blocksGeode));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockSolarGenerator));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockSolarPanel));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockSpaceElevatorController));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockSpaceLaser));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockStationBuilder));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockStructureTower));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockSuitWorkStation));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockThermiteTorch));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockTransciever));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockUnlitTorch));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockVitrifiedSand));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockWarpCore));\n-\t\tblockItems.add(Item.getItemFromBlock(AdvancedRocketryBlocks.blockWarpShipMonitor));\n-\t\t\n-\t\tfor(Item blockItem2 : blockItems)\n-\t\t\tModelLoader.setCustomModelResourceLocation(blockItem2, 0, new ModelResourceLocation(blockItem2.getRegistryName(), \"inventory\"));\n-\t\t\n \t\t\n \t\t//TODO fluids\n \t\tregisterFluidModel((IFluidBlock) AdvancedRocketryBlocks.blockOxygenFluid);"
  },
  {
    "sha": "51ef3bd587ba22cee1309c1fbb0bb88feb46e874",
    "filename": "src/main/java/zmaster587/advancedRocketry/client/render/RenderOrbitalLaserDrillTile.java",
    "status": "renamed",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/zmaster587/AdvancedRocketry/blob/ab257d1ab576e644f88ddc84b5a7495ec8ee7885/src/main/java/zmaster587/advancedRocketry/client/render/RenderOrbitalLaserDrillTile.java",
    "raw_url": "https://github.com/zmaster587/AdvancedRocketry/raw/ab257d1ab576e644f88ddc84b5a7495ec8ee7885/src/main/java/zmaster587/advancedRocketry/client/render/RenderOrbitalLaserDrillTile.java",
    "contents_url": "https://api.github.com/repos/zmaster587/AdvancedRocketry/contents/src/main/java/zmaster587/advancedRocketry/client/render/RenderOrbitalLaserDrillTile.java?ref=ab257d1ab576e644f88ddc84b5a7495ec8ee7885",
    "patch": "@@ -7,15 +7,15 @@\n import net.minecraft.client.renderer.vertex.DefaultVertexFormats;\n import net.minecraft.tileentity.TileEntity;\n import org.lwjgl.opengl.GL11;\n-import zmaster587.advancedRocketry.tile.multiblock.TileSpaceLaser;\n+import zmaster587.advancedRocketry.tile.multiblock.TileOrbitalLaserDrill;\n \n-public class RenderLaserTile extends TileEntitySpecialRenderer {\n+public class RenderOrbitalLaserDrillTile extends TileEntitySpecialRenderer {\n \n \t@Override\n \tpublic void render(TileEntity tileentity, double x, double y,\n \t\t\tdouble z, float f, int damage, float a) {\n \n-\t\tif(!((TileSpaceLaser)tileentity).isRunning())\n+\t\tif(!((TileOrbitalLaserDrill)tileentity).isRunning())\n \t\t\treturn;\n \t\t\n \t\tGL11.glPushMatrix();",
    "previous_filename": "src/main/java/zmaster587/advancedRocketry/client/render/RenderLaserTile.java"
  },
  {
    "sha": "ac9f60a9da2ff177e87553fe4b27fd0318e81dd5",
    "filename": "src/main/java/zmaster587/advancedRocketry/client/render/RendererRocketAssemblingMachine.java",
    "status": "renamed",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/zmaster587/AdvancedRocketry/blob/ab257d1ab576e644f88ddc84b5a7495ec8ee7885/src/main/java/zmaster587/advancedRocketry/client/render/RendererRocketAssemblingMachine.java",
    "raw_url": "https://github.com/zmaster587/AdvancedRocketry/raw/ab257d1ab576e644f88ddc84b5a7495ec8ee7885/src/main/java/zmaster587/advancedRocketry/client/render/RendererRocketAssemblingMachine.java",
    "contents_url": "https://api.github.com/repos/zmaster587/AdvancedRocketry/contents/src/main/java/zmaster587/advancedRocketry/client/render/RendererRocketAssemblingMachine.java?ref=ab257d1ab576e644f88ddc84b5a7495ec8ee7885",
    "patch": "@@ -12,10 +12,10 @@\n \n import org.lwjgl.opengl.GL11;\n \n-import zmaster587.advancedRocketry.tile.TileRocketBuilder;\n+import zmaster587.advancedRocketry.tile.TileRocketAssemblingMachine;\n import zmaster587.libVulpes.render.RenderHelper;\n \n-public class RendererRocketBuilder extends TileEntitySpecialRenderer {\n+public class RendererRocketAssemblingMachine extends TileEntitySpecialRenderer {\n \n \t\n \tprivate ResourceLocation grid = new ResourceLocation(\"advancedrocketry:textures/models/grid.png\");\n@@ -28,7 +28,7 @@ public void render(TileEntity tile, double x,\n \n \n \n-\t\tTileRocketBuilder renderTile = (TileRocketBuilder)tile;\n+\t\tTileRocketAssemblingMachine renderTile = (TileRocketAssemblingMachine)tile;\n \t\tAxisAlignedBB bb;\n \t\t\n \t\t//If the rocketbuilder is scanning and a valid bounding box for the rocket exists",
    "previous_filename": "src/main/java/zmaster587/advancedRocketry/client/render/RendererRocketBuilder.java"
  },
  {
    "sha": "c0046c79242b10b47be7670b4ddaa07b9e29f75b",
    "filename": "src/main/java/zmaster587/advancedRocketry/client/render/multiblocks/RenderAreaGravityController.java",
    "status": "renamed",
    "additions": 7,
    "deletions": 7,
    "changes": 14,
    "blob_url": "https://github.com/zmaster587/AdvancedRocketry/blob/ab257d1ab576e644f88ddc84b5a7495ec8ee7885/src/main/java/zmaster587/advancedRocketry/client/render/multiblocks/RenderAreaGravityController.java",
    "raw_url": "https://github.com/zmaster587/AdvancedRocketry/raw/ab257d1ab576e644f88ddc84b5a7495ec8ee7885/src/main/java/zmaster587/advancedRocketry/client/render/multiblocks/RenderAreaGravityController.java",
    "contents_url": "https://api.github.com/repos/zmaster587/AdvancedRocketry/contents/src/main/java/zmaster587/advancedRocketry/client/render/multiblocks/RenderAreaGravityController.java?ref=ab257d1ab576e644f88ddc84b5a7495ec8ee7885",
    "patch": "@@ -8,18 +8,18 @@\n import org.lwjgl.opengl.GL11;\n import zmaster587.advancedRocketry.backwardCompat.ModelFormatException;\n import zmaster587.advancedRocketry.backwardCompat.WavefrontObject;\n-import zmaster587.advancedRocketry.tile.multiblock.TileGravityController;\n+import zmaster587.advancedRocketry.tile.multiblock.TileAreaGravityController;\n import zmaster587.libVulpes.block.RotatableBlock;\n \n-public class RenderGravityMachine extends TileEntitySpecialRenderer {\n+public class RenderAreaGravityController extends TileEntitySpecialRenderer {\n \t\n \tWavefrontObject model;\n \n-\tResourceLocation texture =  new ResourceLocation(\"advancedRocketry:textures/models/gravityMachine.png\");\n+\tResourceLocation texture =  new ResourceLocation(\"advancedRocketry:textures/models/areagravitycontroller.png\");\n \t\n-\tpublic RenderGravityMachine() {\n+\tpublic RenderAreaGravityController() {\n \t\ttry {\n-\t\t\tmodel = new WavefrontObject(new ResourceLocation(\"advancedrocketry:models/gravityMachine.obj\"));\n+\t\t\tmodel = new WavefrontObject(new ResourceLocation(\"advancedrocketry:models/areagravitycontroller.obj\"));\n \t\t} catch (ModelFormatException e) {\n \t\t\te.printStackTrace();\n \t\t}\n@@ -28,7 +28,7 @@ public RenderGravityMachine() {\n \t@Override\n \tpublic void render(TileEntity tile, double x,\n \t\t\tdouble y, double z, float f, int damage, float a) {\n-\t\tTileGravityController multiBlockTile = (TileGravityController)tile;\n+\t\tTileAreaGravityController multiBlockTile = (TileAreaGravityController)tile;\n \n \t\tif(!multiBlockTile.canRender())\n \t\t\treturn;\n@@ -44,7 +44,7 @@ public void render(TileEntity tile, double x,\n \t\t//GL11.glTranslated(2f, 0, 0f);\n \t\tbindTexture(texture);\n \t\t\n-\t\tmodel.renderOnly(\"Base\");\n+\t\tmodel.renderOnly(\"Hull\");\n \t\tGL11.glDisable(GL11.GL_LIGHTING);\n \t\tint maxSize = 5;\n \t\t",
    "previous_filename": "src/main/java/zmaster587/advancedRocketry/client/render/multiblocks/RenderGravityMachine.java"
  },
  {
    "sha": "072c52c5b92721f4f7800637dc154767bb3e8987",
    "filename": "src/main/java/zmaster587/advancedRocketry/client/render/multiblocks/RenderAstrobodyDataProcessor.java",
    "status": "renamed",
    "additions": 5,
    "deletions": 5,
    "changes": 10,
    "blob_url": "https://github.com/zmaster587/AdvancedRocketry/blob/ab257d1ab576e644f88ddc84b5a7495ec8ee7885/src/main/java/zmaster587/advancedRocketry/client/render/multiblocks/RenderAstrobodyDataProcessor.java",
    "raw_url": "https://github.com/zmaster587/AdvancedRocketry/raw/ab257d1ab576e644f88ddc84b5a7495ec8ee7885/src/main/java/zmaster587/advancedRocketry/client/render/multiblocks/RenderAstrobodyDataProcessor.java",
    "contents_url": "https://api.github.com/repos/zmaster587/AdvancedRocketry/contents/src/main/java/zmaster587/advancedRocketry/client/render/multiblocks/RenderAstrobodyDataProcessor.java?ref=ab257d1ab576e644f88ddc84b5a7495ec8ee7885",
    "patch": "@@ -10,15 +10,15 @@\n import zmaster587.libVulpes.block.RotatableBlock;\n import zmaster587.libVulpes.tile.multiblock.TileMultiPowerConsumer;\n \n-public class RenderPlanetAnalyser extends TileEntitySpecialRenderer {\n+public class RenderAstrobodyDataProcessor extends TileEntitySpecialRenderer {\n \n \tWavefrontObject model;\n \n-\tResourceLocation texture = new ResourceLocation(\"advancedrocketry:textures/models/planetAnalyser.png\");\n+\tResourceLocation texture = new ResourceLocation(\"advancedrocketry:textures/models/astrobodydataprocessor.png\");\n \n-\tpublic RenderPlanetAnalyser(){\n+\tpublic RenderAstrobodyDataProcessor(){\n \t\ttry {\n-\t\t\tmodel = new WavefrontObject(new ResourceLocation(\"advancedrocketry:models/planetAnalyser.obj\"));\n+\t\t\tmodel = new WavefrontObject(new ResourceLocation(\"advancedrocketry:models/astrobodydataprocessor.obj\"));\n \t\t} catch (ModelFormatException e) {\n \t\t\te.printStackTrace();\n \t\t}\n@@ -39,7 +39,7 @@ public void render(TileEntity tile, double x,\n \t\tGL11.glTranslated(x + .5, y, z + .5);\n \t\tGL11.glRotatef((front.getFrontOffsetX() == 1 ? 180 : 0) + front.getFrontOffsetZ()*90f, 0, 1, 0);\n \t\t\n-\t\tGL11.glTranslated(.5, -1, 0);\n+\t\tGL11.glTranslated(-.5, -1, -1.5);\n \n \t\tbindTexture(texture);\n \t\t",
    "previous_filename": "src/main/java/zmaster587/advancedRocketry/client/render/multiblocks/RenderPlanetAnalyser.java"
  },
  {
    "sha": "ac82f6710bd4ba087b5d620e73962aafb2b80b3b",
    "filename": "src/main/java/zmaster587/advancedRocketry/client/render/multiblocks/RenderBeacon.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/zmaster587/AdvancedRocketry/blob/ab257d1ab576e644f88ddc84b5a7495ec8ee7885/src/main/java/zmaster587/advancedRocketry/client/render/multiblocks/RenderBeacon.java",
    "raw_url": "https://github.com/zmaster587/AdvancedRocketry/raw/ab257d1ab576e644f88ddc84b5a7495ec8ee7885/src/main/java/zmaster587/advancedRocketry/client/render/multiblocks/RenderBeacon.java",
    "contents_url": "https://api.github.com/repos/zmaster587/AdvancedRocketry/contents/src/main/java/zmaster587/advancedRocketry/client/render/multiblocks/RenderBeacon.java?ref=ab257d1ab576e644f88ddc84b5a7495ec8ee7885",
    "patch": "@@ -15,7 +15,7 @@\n \n \tWavefrontObject model;\n \n-\tpublic ResourceLocation baseTexture =  new ResourceLocation(\"advancedRocketry:textures/models/beacon.jpg\");\n+\tpublic ResourceLocation baseTexture =  new ResourceLocation(\"advancedRocketry:textures/models/beacon.png\");\n \tRenderLaser laser;\n \n \tpublic RenderBeacon() {"
  },
  {
    "sha": "abb3f88af6738cadf5111368ea66c3d8a21cb62f",
    "filename": "src/main/java/zmaster587/advancedRocketry/client/render/multiblocks/RenderBiomeScanner.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/zmaster587/AdvancedRocketry/blob/ab257d1ab576e644f88ddc84b5a7495ec8ee7885/src/main/java/zmaster587/advancedRocketry/client/render/multiblocks/RenderBiomeScanner.java",
    "raw_url": "https://github.com/zmaster587/AdvancedRocketry/raw/ab257d1ab576e644f88ddc84b5a7495ec8ee7885/src/main/java/zmaster587/advancedRocketry/client/render/multiblocks/RenderBiomeScanner.java",
    "contents_url": "https://api.github.com/repos/zmaster587/AdvancedRocketry/contents/src/main/java/zmaster587/advancedRocketry/client/render/multiblocks/RenderBiomeScanner.java?ref=ab257d1ab576e644f88ddc84b5a7495ec8ee7885",
    "patch": "@@ -14,11 +14,11 @@\n \n \tWavefrontObject model;\n \n-\tResourceLocation texture = new ResourceLocation(\"advancedrocketry:textures/models/biomeScanner.jpg\");\n+\tResourceLocation texture = new ResourceLocation(\"advancedrocketry:textures/models/biomescanner.png\");\n \n \tpublic RenderBiomeScanner(){\n \t\ttry {\n-\t\t\tmodel = new WavefrontObject(new ResourceLocation(\"advancedrocketry:models/biomeScanner.obj\"));\n+\t\t\tmodel = new WavefrontObject(new ResourceLocation(\"advancedrocketry:models/biomescanner.obj\"));\n \t\t} catch (ModelFormatException e) {\n \t\t\te.printStackTrace();\n \t\t}\n@@ -38,7 +38,7 @@ public void render(TileEntity tile, double x, double y, double z,\n \n \t\t//Rotate and move the model into position\n \t\tEnumFacing front = RotatableBlock.getFront(tile.getWorld().getBlockState(tile.getPos())); //tile.getWorldObj().getBlockMetadata(tile.xCoord, tile.yCoord, tile.zCoord));\n-\t\tGL11.glTranslated(x + .5, y, z + .5);\n+\t\tGL11.glTranslated(x, y, z + 1);\n \n \t\tbindTexture(texture);\n \t\t"
  },
  {
    "sha": "8140908ddd1ed8ac0dc1217ed86fbe28ab2b57ff",
    "filename": "src/main/java/zmaster587/advancedRocketry/client/render/multiblocks/RenderBlackHoleGenerator.java",
    "status": "renamed",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/zmaster587/AdvancedRocketry/blob/ab257d1ab576e644f88ddc84b5a7495ec8ee7885/src/main/java/zmaster587/advancedRocketry/client/render/multiblocks/RenderBlackHoleGenerator.java",
    "raw_url": "https://github.com/zmaster587/AdvancedRocketry/raw/ab257d1ab576e644f88ddc84b5a7495ec8ee7885/src/main/java/zmaster587/advancedRocketry/client/render/multiblocks/RenderBlackHoleGenerator.java",
    "contents_url": "https://api.github.com/repos/zmaster587/AdvancedRocketry/contents/src/main/java/zmaster587/advancedRocketry/client/render/multiblocks/RenderBlackHoleGenerator.java?ref=ab257d1ab576e644f88ddc84b5a7495ec8ee7885",
    "patch": "@@ -17,15 +17,15 @@\n import zmaster587.libVulpes.tile.multiblock.TileMultiPowerConsumer;\n import zmaster587.libVulpes.tile.multiblock.TileMultiPowerProducer;\n \n-public class RenderBlackHoleEnergy extends TileEntitySpecialRenderer {\n+public class RenderBlackHoleGenerator extends TileEntitySpecialRenderer {\n \n \tWavefrontObject model;\n \n-\tResourceLocation texture = new ResourceLocation(\"advancedrocketry:textures/models/black_hole_generator.jpg\");\n+\tResourceLocation texture = new ResourceLocation(\"advancedrocketry:textures/models/blackholegenerator.png\");\n \n-\tpublic RenderBlackHoleEnergy(){\n+\tpublic RenderBlackHoleGenerator(){\n \t\ttry {\n-\t\t\tmodel = new WavefrontObject(new ResourceLocation(\"advancedrocketry:models/black_hole_generator.obj\"));\n+\t\t\tmodel = new WavefrontObject(new ResourceLocation(\"advancedrocketry:models/blackholegenerator.obj\"));\n \t\t} catch (ModelFormatException e) {\n \t\t\te.printStackTrace();\n \t\t}",
    "previous_filename": "src/main/java/zmaster587/advancedRocketry/client/render/multiblocks/RenderBlackHoleEnergy.java"
  },
  {
    "sha": "6c655377fc9304b37864f71567479f195fbdb191",
    "filename": "src/main/java/zmaster587/advancedRocketry/client/render/multiblocks/RenderCentrifuge.java",
    "status": "modified",
    "additions": 14,
    "deletions": 57,
    "changes": 71,
    "blob_url": "https://github.com/zmaster587/AdvancedRocketry/blob/ab257d1ab576e644f88ddc84b5a7495ec8ee7885/src/main/java/zmaster587/advancedRocketry/client/render/multiblocks/RenderCentrifuge.java",
    "raw_url": "https://github.com/zmaster587/AdvancedRocketry/raw/ab257d1ab576e644f88ddc84b5a7495ec8ee7885/src/main/java/zmaster587/advancedRocketry/client/render/multiblocks/RenderCentrifuge.java",
    "contents_url": "https://api.github.com/repos/zmaster587/AdvancedRocketry/contents/src/main/java/zmaster587/advancedRocketry/client/render/multiblocks/RenderCentrifuge.java?ref=ab257d1ab576e644f88ddc84b5a7495ec8ee7885",
    "patch": "@@ -56,71 +56,28 @@ public void render(TileEntity tile, double x, double y, double z,\n \t\tEnumFacing front = RotatableBlock.getFront(tile.getWorld().getBlockState(tile.getPos()));\n \t\tGL11.glTranslated(x + 0.5, y, z + 0.5);\n \t\tGL11.glRotatef((front.getFrontOffsetZ() == 1 ? 180 : 0) - front.getFrontOffsetX()*90f, 0, 1, 0);\n-\t\tGL11.glTranslated(0, 0, 0 + 1);\n+\t\tGL11.glTranslated(-0.5f, -1f, 1.5f);\n \n \t\tbindTexture(texture);\n \n-\t\tmodel.renderOnly(\"Frame\");\n+\t\tmodel.renderOnly(\"Hull\");\n+\n \n \n \t\tif(multiBlockTile.isRunning())\n \t\t{\n-\t\t\tfloat lavaheight = multiBlockTile.getNormallizedProgress(0);\n-\t\t\tGL11.glRotated(multiBlockTile.getWorld().getTotalWorldTime() * -10f, 0, 1, 0);\n-\t\t\tmodel.renderOnly(\"Spinning\");\n-\n-\n-\t\t\tResourceLocation fluidIcon = new ResourceLocation(\"advancedrocketry:textures/blocks/fluid/oxygen_flow.png\");\n-\t\t\tFluid fluid = FluidRegistry.getFluid(\"enrichedlava\");\n-\t\t\tif(fluid != null)\n-\t\t\t{\n-\t\t\t\tGL11.glPushMatrix();\n-\n-\t\t\t\tdouble minU = 0, maxU = 1, minV = 0, maxV = 1;\n-\t\t\t\tTextureMap map = Minecraft.getMinecraft().getTextureMapBlocks();\n-\t\t\t\tTextureAtlasSprite sprite = map.getTextureExtry(fluid.getStill().toString());\n-\t\t\t\tif(sprite != null) {\n-\t\t\t\t\tminU = sprite.getMinU();\n-\t\t\t\t\tmaxU = sprite.getMaxU();\n-\t\t\t\t\tminV = sprite.getMinV();\n-\t\t\t\t\tmaxV = sprite.getMaxV();\n-\t\t\t\t\tGlStateManager.bindTexture(map.getGlTextureId());\n-\t\t\t\t}\n-\t\t\t\telse {\n-\t\t\t\t\tint color = fluid.getColor();\n-\t\t\t\t\tGlStateManager.color(((color >>> 16) & 0xFF)/255f, ((color >>> 8) & 0xFF)/255f, ((color& 0xFF)/255f),1f);\n-\n-\t\t\t\t\tbindTexture(fluidIcon);\n-\t\t\t\t}\n-\t\t\t\tTessellator tess = Tessellator.getInstance();\n-\n-\t\t\t\tfloat amt = 1.0f;\n-\n-\t\t\t\tGlStateManager.disableLighting();\n-\t\t\t\tGlStateManager.enableBlend();\n-\n-\t\t\t\tGlStateManager.blendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA);\n-\n-\t\t\t\tAxisAlignedBB bb = new AxisAlignedBB(-1.2, -0.5, -0.5, 1.2, 0.3 - 0.6*lavaheight, 0.5);\n-\n-\t\t\t\tfor(int i = 0; i < 4; i++)\n-\t\t\t\t{\n-\t\t\t\t\ttess.getBuffer().begin(GL11.GL_QUADS, DefaultVertexFormats.POSITION_TEX);\n-\t\t\t\t\tRenderHelper.renderCubeWithUV(tess.getBuffer(), bb.minX + 0.01, bb.minY + 0.01, bb.minZ + 0.01, bb.maxX - 0.01, bb.maxY*amt - 0.01, bb.maxZ - 0.01, minU, maxU, minV, maxV);\n-\t\t\t\t\ttess.draw();\n-\t\t\t\t\tGL11.glRotatef(45f, 0, 1, 0);\n-\t\t\t\t}\n-\n-\t\t\t\tGlStateManager.enableLighting();\n-\t\t\t\tGlStateManager.disableBlend();\n-\t\t\t\tGL11.glPopMatrix();\n-\t\t\t\tGlStateManager.color(1f, 1f, 1f);\n-\t\t\t}\n-\t\t}\n-\t\telse\n-\t\t{\n-\t\t\tmodel.renderOnly(\"Spinning\");\n+\t\t\tGL11.glPushMatrix();\n+\t\t\tGL11.glRotated(multiBlockTile.getWorld().getTotalWorldTime() * -100f, 0, 1, 0);\n+\t\t\tmodel.renderOnly(\"Cylinder\");\n+\t\t\tGL11.glPopMatrix();\n+\n+\t\t} else {\n+\t\t\tGL11.glPushMatrix();\n+\t\t\tmodel.renderOnly(\"Cylinder\");\n+\t\t\tGL11.glPopMatrix();\n \t\t}\n \t\tGL11.glPopMatrix();\n+\n+\n \t}\n }"
  },
  {
    "sha": "8c4d0cd12407499d73f5b4f67ac9953348d9edb8",
    "filename": "src/main/java/zmaster587/advancedRocketry/client/render/multiblocks/RenderOrbitalLaserDrill.java",
    "status": "renamed",
    "additions": 8,
    "deletions": 8,
    "changes": 16,
    "blob_url": "https://github.com/zmaster587/AdvancedRocketry/blob/ab257d1ab576e644f88ddc84b5a7495ec8ee7885/src/main/java/zmaster587/advancedRocketry/client/render/multiblocks/RenderOrbitalLaserDrill.java",
    "raw_url": "https://github.com/zmaster587/AdvancedRocketry/raw/ab257d1ab576e644f88ddc84b5a7495ec8ee7885/src/main/java/zmaster587/advancedRocketry/client/render/multiblocks/RenderOrbitalLaserDrill.java",
    "contents_url": "https://api.github.com/repos/zmaster587/AdvancedRocketry/contents/src/main/java/zmaster587/advancedRocketry/client/render/multiblocks/RenderOrbitalLaserDrill.java?ref=ab257d1ab576e644f88ddc84b5a7495ec8ee7885",
    "patch": "@@ -11,20 +11,20 @@\n import org.lwjgl.opengl.GL11;\n import zmaster587.advancedRocketry.backwardCompat.ModelFormatException;\n import zmaster587.advancedRocketry.backwardCompat.WavefrontObject;\n-import zmaster587.advancedRocketry.tile.multiblock.TileSpaceLaser;\n+import zmaster587.advancedRocketry.tile.multiblock.TileOrbitalLaserDrill;\n import zmaster587.libVulpes.block.RotatableBlock;\n import zmaster587.libVulpes.tile.multiblock.TileMultiBlock;\n \n-public class RenderLaser extends TileEntitySpecialRenderer {\n+public class RenderOrbitalLaserDrill extends TileEntitySpecialRenderer {\n \t\n \tWavefrontObject model;\n \n-\tResourceLocation texture =  new ResourceLocation(\"advancedRocketry:textures/models/laser.png\");\n+\tResourceLocation texture =  new ResourceLocation(\"advancedRocketry:textures/models/orbitallaserdrill.png\");\n \t\n \t\n-\tpublic RenderLaser() {\n+\tpublic RenderOrbitalLaserDrill() {\n \t\ttry {\n-\t\t\tmodel = new WavefrontObject(new ResourceLocation(\"advancedrocketry:models/laser.obj\"));\n+\t\t\tmodel = new WavefrontObject(new ResourceLocation(\"advancedrocketry:models/orbitallaserdrill.obj\"));\n \t\t} catch (ModelFormatException e) {\n \t\t\te.printStackTrace();\n \t\t}\n@@ -46,16 +46,16 @@ public void render(TileEntity tile, double x,\n \t\tGL11.glTranslated(x + 0.5, y, z + 0.5);\n \t\tEnumFacing front = RotatableBlock.getFront(tile.getWorld().getBlockState(tile.getPos())); //tile.getWorldObj().getBlockMetadata(tile.xCoord, tile.yCoord, tile.zCoord));\n \t\tGL11.glRotatef((front.getFrontOffsetX() == 1 ? 180 : 0) + front.getFrontOffsetZ()*90f, 0, 1, 0);\n-\t\tGL11.glTranslated(2f, 0, 0f);\n+\t\tGL11.glTranslated(2.5f, 0, 4.5f);\n \t\tbindTexture(texture);\n \t\tmodel.renderAll();\n \t\t\n \t\t\n \t\t\n \t\t//Laser\n-\t\tif(((TileSpaceLaser)multiBlockTile).isRunning())\n+\t\tif(((TileOrbitalLaserDrill)multiBlockTile).isRunning())\n \t\t{\n-\t\t\tGL11.glTranslated(-0.5f, 0, -0.5f);\n+\t\t\tGL11.glTranslated(-1.0f, 0, -5f);\n \t\t\tBufferBuilder buffer = Tessellator.getInstance().getBuffer();\n \t\t\tGlStateManager.disableLighting();\n \t\t\tGlStateManager.disableFog();",
    "previous_filename": "src/main/java/zmaster587/advancedRocketry/client/render/multiblocks/RenderLaser.java"
  },
  {
    "sha": "496a91fac376f802a9e8058e2ea5c1d152339ac4",
    "filename": "src/main/java/zmaster587/advancedRocketry/client/render/multiblocks/RendererChemicalReactor.java",
    "status": "modified",
    "additions": 4,
    "deletions": 17,
    "changes": 21,
    "blob_url": "https://github.com/zmaster587/AdvancedRocketry/blob/ab257d1ab576e644f88ddc84b5a7495ec8ee7885/src/main/java/zmaster587/advancedRocketry/client/render/multiblocks/RendererChemicalReactor.java",
    "raw_url": "https://github.com/zmaster587/AdvancedRocketry/raw/ab257d1ab576e644f88ddc84b5a7495ec8ee7885/src/main/java/zmaster587/advancedRocketry/client/render/multiblocks/RendererChemicalReactor.java",
    "contents_url": "https://api.github.com/repos/zmaster587/AdvancedRocketry/contents/src/main/java/zmaster587/advancedRocketry/client/render/multiblocks/RendererChemicalReactor.java?ref=ab257d1ab576e644f88ddc84b5a7495ec8ee7885",
    "patch": "@@ -33,29 +33,16 @@ public void render(TileEntity tile, double x, double y, double z,\n \t\tif(!multiBlockTile.canRender())\n \t\t\treturn;\n \n-\t\tGL11.glPushMatrix();\n-\n-\t\t\n \t\t//Rotate and move the model into position\n \t\tGL11.glPushMatrix();\n \t\tGL11.glTranslated(x+.5f, y, z + 0.5f);\n \t\tEnumFacing front = RotatableBlock.getFront(tile.getWorld().getBlockState(tile.getPos())); //tile.getWorldObj().getBlockMetadata(tile.xCoord, tile.yCoord, tile.zCoord));\n-\t\t\n+\n \t\tGL11.glRotatef((front.getFrontOffsetZ() == 1 ? 180 : 0) - front.getFrontOffsetX()*90f, 0, 1, 0);\n+\t\tGL11.glTranslated(1.5f, -1.0f, -.5f);\n+\n \t\tbindTexture(texture);\n-\t\tmodel.renderOnly(\"mesh\");\n-\t\tGL11.glPopMatrix();\n-\t\t\n-\t\t\n-\t\t\n-\t\tGL11.glTranslated(x+.5f, y, z + 0.5f);\n-\t\tGL11.glRotatef((front.getFrontOffsetZ() == 1 ? 180 : 0) - front.getFrontOffsetX()*90f, 0, 1, 0);\n-\t\t\n-\t\tGL11.glTranslated(0f, -0.5f, 1f );\n-\t\tif(multiBlockTile.isRunning())\n-\t\t\tGL11.glRotated((8*tile.getWorld().getTotalWorldTime()) % 360, 1, 0, 0);\n-\t\tmodel.renderOnly(\"Cylinder\");\n-\t\t\n+\t\tmodel.renderOnly(\"Hull\");\n \t\tGL11.glPopMatrix();\n \t}\n }"
  },
  {
    "sha": "b426cba26dc733e9df3ff8c5e1eed8a6bad38af8",
    "filename": "src/main/java/zmaster587/advancedRocketry/client/render/multiblocks/RendererCrystallizer.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/zmaster587/AdvancedRocketry/blob/ab257d1ab576e644f88ddc84b5a7495ec8ee7885/src/main/java/zmaster587/advancedRocketry/client/render/multiblocks/RendererCrystallizer.java",
    "raw_url": "https://github.com/zmaster587/AdvancedRocketry/raw/ab257d1ab576e644f88ddc84b5a7495ec8ee7885/src/main/java/zmaster587/advancedRocketry/client/render/multiblocks/RendererCrystallizer.java",
    "contents_url": "https://api.github.com/repos/zmaster587/AdvancedRocketry/contents/src/main/java/zmaster587/advancedRocketry/client/render/multiblocks/RendererCrystallizer.java?ref=ab257d1ab576e644f88ddc84b5a7495ec8ee7885",
    "patch": "@@ -19,13 +19,13 @@\n \n \tWavefrontObject model;\n \n-\tResourceLocation texture = new ResourceLocation(\"advancedrocketry:textures/models/crystallizer.png\");\n+\tResourceLocation texture = new ResourceLocation(\"advancedrocketry:textures/models/crystalliser.png\");\n \n \n \tpublic RendererCrystallizer() {\n \n \t\ttry {\n-\t\t\tmodel =  new WavefrontObject(new ResourceLocation(\"advancedrocketry:models/crystallizer.obj\"));\n+\t\t\tmodel =  new WavefrontObject(new ResourceLocation(\"advancedrocketry:models/crystalliser.obj\"));\n \t\t} catch (ModelFormatException e) {\n \t\t\t// TODO Auto-generated catch block\n \t\t\te.printStackTrace();"
  },
  {
    "sha": "b69b9c278df9e64b293eed08861c1e9212166986",
    "filename": "src/main/java/zmaster587/advancedRocketry/client/render/multiblocks/RendererCuttingMachine.java",
    "status": "modified",
    "additions": 18,
    "deletions": 2,
    "changes": 20,
    "blob_url": "https://github.com/zmaster587/AdvancedRocketry/blob/ab257d1ab576e644f88ddc84b5a7495ec8ee7885/src/main/java/zmaster587/advancedRocketry/client/render/multiblocks/RendererCuttingMachine.java",
    "raw_url": "https://github.com/zmaster587/AdvancedRocketry/raw/ab257d1ab576e644f88ddc84b5a7495ec8ee7885/src/main/java/zmaster587/advancedRocketry/client/render/multiblocks/RendererCuttingMachine.java",
    "contents_url": "https://api.github.com/repos/zmaster587/AdvancedRocketry/contents/src/main/java/zmaster587/advancedRocketry/client/render/multiblocks/RendererCuttingMachine.java?ref=ab257d1ab576e644f88ddc84b5a7495ec8ee7885",
    "patch": "@@ -58,13 +58,29 @@ public void render(TileEntity tile, double x, double y, double z,\n \n \n \n+\t\t\tList<ItemStack> inputList = multiBlockTile.getInputs();\n+\t\t\tif(inputList != null && !inputList.isEmpty() && progress < 0.65) {\n+\t\t\t\tItemStack inputStack = null;\n+\t\t\t\tfor (ItemStack stack: inputList) {\n+\t\t\t\t\tif (stack != null && inputStack == null)\n+\t\t\t\t\t\tinputStack = stack;\n+\t\t\t\t}\n+\n+\t\t\t\tGL11.glPushMatrix();\n+\t\t\t\tGL11.glRotatef(90, 1, 0, 0);\n+\t\t\t\tGL11.glTranslated(1f, tray + .45, -1.05);\n+\t\t\t\tRenderHelper.renderItem(multiBlockTile, inputStack, Minecraft.getMinecraft().getRenderItem());\n+\t\t\t\tGL11.glPopMatrix();\n+\t\t\t}\n+\n+\n \t\t\tList<ItemStack> outputList = multiBlockTile.getOutputs();\n-\t\t\tif(outputList != null && !outputList.isEmpty()) {\n+\t\t\tif(outputList != null && !outputList.isEmpty() && progress >= 0.65) {\n \t\t\t\tItemStack stack = outputList.get(0);\n \n \t\t\t\tGL11.glPushMatrix();\n \t\t\t\tGL11.glRotatef(90, 1, 0, 0);\n-\t\t\t\tGL11.glTranslated(1f, tray + .25, -1.05);\n+\t\t\t\tGL11.glTranslated(1f, tray + .45, -1.05);\n \t\t\t\tRenderHelper.renderItem(multiBlockTile, stack, Minecraft.getMinecraft().getRenderItem());\n \t\t\t\tGL11.glPopMatrix();\n \t\t\t}"
  },
  {
    "sha": "c9173ef617c15e76582e4186490830becdd69866",
    "filename": "src/main/java/zmaster587/advancedRocketry/client/render/multiblocks/RendererElectrolyser.java",
    "status": "modified",
    "additions": 4,
    "deletions": 3,
    "changes": 7,
    "blob_url": "https://github.com/zmaster587/AdvancedRocketry/blob/ab257d1ab576e644f88ddc84b5a7495ec8ee7885/src/main/java/zmaster587/advancedRocketry/client/render/multiblocks/RendererElectrolyser.java",
    "raw_url": "https://github.com/zmaster587/AdvancedRocketry/raw/ab257d1ab576e644f88ddc84b5a7495ec8ee7885/src/main/java/zmaster587/advancedRocketry/client/render/multiblocks/RendererElectrolyser.java",
    "contents_url": "https://api.github.com/repos/zmaster587/AdvancedRocketry/contents/src/main/java/zmaster587/advancedRocketry/client/render/multiblocks/RendererElectrolyser.java?ref=ab257d1ab576e644f88ddc84b5a7495ec8ee7885",
    "patch": "@@ -43,9 +43,10 @@ public void render(TileEntity tile, double x,\n \t\tGL11.glPushMatrix();\n \n \t\t//Rotate and move the model into position\n-\t\tGL11.glTranslated(x+.5f, y, z + 0.5f);\n+\t\tGL11.glTranslated(x + 0.5, y, z + 0.5);\n \t\tEnumFacing front = RotatableBlock.getFront(tile.getWorld().getBlockState(tile.getPos())); //tile.getWorldObj().getBlockMetadata(tile.xCoord, tile.yCoord, tile.zCoord));\n \t\tGL11.glRotatef((front.getFrontOffsetZ() == 1 ? 180 : 0) - front.getFrontOffsetX()*90f, 0, 1, 0);\n+\t\tGL11.glTranslated(1.5f, 0f, -0.5f);\n \n \t\tbindTexture(texture);\n \t\tmodel.renderAll();\n@@ -69,8 +70,8 @@ public void render(TileEntity tile, double x,\n \n \t\t\tbuffer.begin(GL11.GL_QUADS, DefaultVertexFormats.POSITION_NORMAL);\n \t\t\tGlStateManager.color(.64f, 0.64f, 1f, 0.4f);\n-\t\t\tdouble xMin = -0.3f;\n-\t\t\tdouble xMax = -.15f;\n+\t\t\tdouble xMin = -1.8f;\n+\t\t\tdouble xMax = -1.65f;\n \t\t\tdouble zMin = 1f;\n \t\t\tdouble zMax = 1;\n \t\t\tRenderHelper.renderCrossXZ(buffer, width, xMin, yPos, zMin, xMax, yPos + ySkew, zMax  + xSkew);"
  },
  {
    "sha": "5617af571f2136928212d5e611ec22fa8584557a",
    "filename": "src/main/java/zmaster587/advancedRocketry/client/render/multiblocks/RendererLathe.java",
    "status": "modified",
    "additions": 21,
    "deletions": 13,
    "changes": 34,
    "blob_url": "https://github.com/zmaster587/AdvancedRocketry/blob/ab257d1ab576e644f88ddc84b5a7495ec8ee7885/src/main/java/zmaster587/advancedRocketry/client/render/multiblocks/RendererLathe.java",
    "raw_url": "https://github.com/zmaster587/AdvancedRocketry/raw/ab257d1ab576e644f88ddc84b5a7495ec8ee7885/src/main/java/zmaster587/advancedRocketry/client/render/multiblocks/RendererLathe.java",
    "contents_url": "https://api.github.com/repos/zmaster587/AdvancedRocketry/contents/src/main/java/zmaster587/advancedRocketry/client/render/multiblocks/RendererLathe.java?ref=ab257d1ab576e644f88ddc84b5a7495ec8ee7885",
    "patch": "@@ -27,7 +27,7 @@ public RendererLathe() {\n \t\t}\n \n \t\tGL11.glNewList(bodyList = GL11.glGenLists(1), GL11.GL_COMPILE);\n-\t\tmodel.renderOnly(\"body\");\n+\t\tmodel.renderOnly(\"Hull\");\n \t\tGL11.glEndList();\n \t}\n \n@@ -44,7 +44,7 @@ public void render(TileEntity tile, double x,\n \t\t//Rotate and move the model into position\n \t\tGL11.glTranslated(x + .5f, y, z + 0.5f);\n \t\tEnumFacing front = RotatableBlock.getFront(tile.getWorld().getBlockState(tile.getPos())); //tile.getWorldObj().getBlockMetadata(tile.xCoord, tile.yCoord, tile.zCoord));\n-\t\tGL11.glRotatef((front.getFrontOffsetX() == 1 ? 180 : 0) + front.getFrontOffsetZ()*90f, 0, 1, 0);\n+\t\tGL11.glRotatef((front.getFrontOffsetX() == 1 ? 0 : 180) + front.getFrontOffsetZ()*90f, 0, 1, 0);\n \t\tGL11.glTranslated(-.5f, -1f, -2.5f);\n \n \n@@ -54,43 +54,51 @@ public void render(TileEntity tile, double x,\n \t\t\tfloat progress = multiBlockTile.getProgress(0)/(float)multiBlockTile.getTotalProgress(0);\n \n \t\t\tbindTexture(texture);\n-\t\t\tmodel.renderPart(\"body\");\n+\t\t\tmodel.renderPart(\"Hull\");\n \n \t\t\tGL11.glPushMatrix();\n \n \t\t\tif(progress < 0.95f)\n-\t\t\t\tGL11.glTranslatef(0f, 0f, progress/.95f);\n+\t\t\t\tGL11.glTranslatef(0f, 0f, -(progress/.85f));\n \t\t\telse\n-\t\t\t\tGL11.glTranslatef(0f, 0f, (1 - progress)/.05f);\n+\t\t\t\tGL11.glTranslatef(0f, 0f, -((1 - progress)/.05f));\n \n-\t\t\tmodel.renderOnly(\"Tray\");\n+\t\t\tmodel.renderOnly(\"Tool\");\n \t\t\tGL11.glPopMatrix();\n \n \t\t\tGL11.glPushMatrix();\n-\t\t\tGL11.glTranslatef(.5f, 1.5625f, 0f);\n+\t\t\tGL11.glTranslatef(0.375f, 0.9375f, 0f);\n \t\t\tGL11.glRotatef(progress*1500, 0, 0, 1);\n-\t\t\tmodel.renderOnly(\"Cylinder\");\n+\t\t\tmodel.renderOnly(\"Shaft\");\n+\t\t\tGL11.glPopMatrix();\n \n \t\t\tint color;\n \t\t\t//Check for rare bug when outputs is null, usually occurs if player opens machine within 1st tick\n \t\t\tif(multiBlockTile.getOutputs() != null && (outputStack = multiBlockTile.getOutputs().get(0)) != null)\n \t\t\t\tcolor = MaterialRegistry.getColorFromItemMaterial(outputStack);\n \t\t\telse\n \t\t\t\tcolor = 0;\n-\t\t\t\n-\t\t\tGL11.glColor3d((0xff & color >> 16)/256f, (0xff & color >> 8)/256f , (color & 0xff)/256f);\n \n-\t\t\tmodel.renderOnly(\"rod\");\n+\t\t\tGL11.glPushMatrix();\n+\t\t\tGL11.glColor3d((0xff & color >> 16)/256f, (0xff & color >> 8)/256f , (color & 0xff)/256f);\n+\t\t\tGL11.glTranslatef(0.375f, 1.1875f, 0f);\n+\t\t\tGL11.glRotatef(progress*1500, 0, 0, 1);\n+\t\t\tmodel.renderOnly(\"Rod\");\n \t\t\tGL11.glPopMatrix();\n \t\t\t\n \t\t\tGL11.glColor4f(1f, 1f, 1f, 1f);\n \t\t}\n \t\telse {\n \t\t\tbindTexture(texture);\n-\t\t\tmodel.renderPart(\"body\");\n+\t\t\tmodel.renderPart(\"Hull\");\n \n-\t\t\tmodel.renderPart(\"Tray\");\n+\t\t\tmodel.renderPart(\"Tool\");\n \t\t\t//model.renderAllExcept(\"rod\", \"Cylinder\");\n+\n+\t\t\tGL11.glPushMatrix();\n+\t\t\tGL11.glTranslatef(0.375f, 0.9375f, 0f);\n+\t\t\tmodel.renderOnly(\"Shaft\");\n+\t\t\tGL11.glPopMatrix();\n \t\t}\n \t\tGL11.glPopMatrix();\n \t}"
  },
  {
    "sha": "41557ecf3a9957e9b39cbc603fe5d50684a12049",
    "filename": "src/main/java/zmaster587/advancedRocketry/client/render/multiblocks/RendererObservatory.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/zmaster587/AdvancedRocketry/blob/ab257d1ab576e644f88ddc84b5a7495ec8ee7885/src/main/java/zmaster587/advancedRocketry/client/render/multiblocks/RendererObservatory.java",
    "raw_url": "https://github.com/zmaster587/AdvancedRocketry/raw/ab257d1ab576e644f88ddc84b5a7495ec8ee7885/src/main/java/zmaster587/advancedRocketry/client/render/multiblocks/RendererObservatory.java",
    "contents_url": "https://api.github.com/repos/zmaster587/AdvancedRocketry/contents/src/main/java/zmaster587/advancedRocketry/client/render/multiblocks/RendererObservatory.java?ref=ab257d1ab576e644f88ddc84b5a7495ec8ee7885",
    "patch": "@@ -16,7 +16,7 @@\n \n \tWavefrontObject model;\n \n-\tResourceLocation texture = new ResourceLocation(\"advancedrocketry:textures/models/T1Observatory.png\");\n+\tResourceLocation texture = new ResourceLocation(\"advancedrocketry:textures/models/observatory.png\");\n \n \tpublic RendererObservatory() {\n \t\ttry {\n@@ -62,12 +62,12 @@ public void render(TileEntity tile, double x,\n \t\t\tmodel.renderPart(\"Axis\");\n \n \t\t\tGL11.glPushMatrix();\n-\t\t\tGL11.glTranslatef(0, 0, -offset);\n+\t\t\tGL11.glTranslatef(0, 0, -offset * 1.125f);\n \t\t\tmodel.renderOnly(\"CasingXMinus\");\n \t\t\tGL11.glPopMatrix();\n \n \t\t\tGL11.glPushMatrix();\n-\t\t\tGL11.glTranslatef(0,0,offset);\n+\t\t\tGL11.glTranslatef(0,0,offset * 1.125f);\n \t\t\tmodel.renderOnly(\"CasingXPlus\");\n \t\t\tGL11.glPopMatrix();\n "
  }
]
