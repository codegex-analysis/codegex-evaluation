[
  {
    "sha": "d1915030a8ffd9a1d10ebc8b5cd0c22968899c93",
    "filename": "src/main/java/org/codehaus/mojo/exec/ExecMojo.java",
    "status": "modified",
    "additions": 15,
    "deletions": 1,
    "changes": 16,
    "blob_url": "https://github.com/mojohaus/exec-maven-plugin/blob/7113de8daa3ddc6a00801d6fa07080bd2ba275d1/src/main/java/org/codehaus/mojo/exec/ExecMojo.java",
    "raw_url": "https://github.com/mojohaus/exec-maven-plugin/raw/7113de8daa3ddc6a00801d6fa07080bd2ba275d1/src/main/java/org/codehaus/mojo/exec/ExecMojo.java",
    "contents_url": "https://api.github.com/repos/mojohaus/exec-maven-plugin/contents/src/main/java/org/codehaus/mojo/exec/ExecMojo.java?ref=7113de8daa3ddc6a00801d6fa07080bd2ba275d1",
    "patch": "@@ -148,6 +148,16 @@\n     @Parameter( property = \"exec.outputFile\" )\n     private File outputFile;\n \n+    /**\n+     * Program standard input, output and error streams will be inherited from the maven process.\n+     * This allow tighter control of the streams and the console.\n+     *\n+     * @since 3.0.1\n+     * @see ProcessBuilder#inheritIO()\n+     */\n+    @Parameter( property = \"exec.inheritIo\" )\n+    private boolean inheritIo;\n+\n     /**\n      * When enabled, program standard and error output will be redirected to the\n      * Maven logger as <i>Info</i> and <i>Error</i> level logs, respectively. If not enabled the\n@@ -384,14 +394,18 @@ else if ( !StringUtils.isEmpty( argsProp ) )\n \n             commandLine.addArguments( args, false );\n \n-            Executor exec = new DefaultExecutor();\n+            Executor exec = new ExtendedExecutor( inheritIo );\n             if ( this.timeout > 0 )\n             {\n                 exec.setWatchdog( new ExecuteWatchdog( this.timeout ) );\n             }\n             exec.setWorkingDirectory( workingDirectory );\n             fillSuccessCodes( exec );\n \n+            if ( OS.isFamilyOpenVms() && inheritIo )\n+            {\n+                getLog().warn(\"The inheritIo flag is not supported on OpenVMS, execution will proceed without stream inheritance.\");\n+            }\n             getLog().debug( \"Executing command line: \" + commandLine );\n \n             try"
  },
  {
    "sha": "fb8e3e32c67e7deabfc0a4e0d6626de209de1f4c",
    "filename": "src/main/java/org/codehaus/mojo/exec/ExtendedExecutor.java",
    "status": "added",
    "additions": 76,
    "deletions": 0,
    "changes": 76,
    "blob_url": "https://github.com/mojohaus/exec-maven-plugin/blob/7113de8daa3ddc6a00801d6fa07080bd2ba275d1/src/main/java/org/codehaus/mojo/exec/ExtendedExecutor.java",
    "raw_url": "https://github.com/mojohaus/exec-maven-plugin/raw/7113de8daa3ddc6a00801d6fa07080bd2ba275d1/src/main/java/org/codehaus/mojo/exec/ExtendedExecutor.java",
    "contents_url": "https://api.github.com/repos/mojohaus/exec-maven-plugin/contents/src/main/java/org/codehaus/mojo/exec/ExtendedExecutor.java?ref=7113de8daa3ddc6a00801d6fa07080bd2ba275d1",
    "patch": "@@ -0,0 +1,76 @@\n+package org.codehaus.mojo.exec;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import org.apache.commons.exec.CommandLine;\n+import org.apache.commons.exec.DefaultExecutor;\n+import org.apache.commons.exec.OS;\n+import org.apache.commons.exec.launcher.CommandLauncherFactory;\n+import org.apache.commons.exec.launcher.VmsCommandLauncher;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.util.Map;\n+\n+/**\n+ * An executor which has the ability to use the {@link ProcessBuilder#inheritIO()} flag.\n+ *\n+ * @author Guillaume Nodet (gnodet@gmail.com)\n+ */\n+public class ExtendedExecutor extends DefaultExecutor\n+{\n+\n+    private final boolean inheritIo;\n+\n+    public ExtendedExecutor( boolean inheritIo )\n+    {\n+        this.inheritIo = inheritIo;\n+    }\n+\n+    @Override\n+    protected Process launch( CommandLine command, Map<String, String> env, File dir ) throws IOException\n+    {\n+        if ( dir != null && !dir.exists() )\n+        {\n+            throw new IOException( dir + \" doesn't exist.\" );\n+        }\n+        if ( OS.isFamilyOpenVms() )\n+        {\n+            return new VmsCommandLauncher().exec( command, env, dir );\n+        }\n+        else\n+        {\n+            ProcessBuilder pb = new ProcessBuilder( command.toStrings() );\n+            for ( Map.Entry<String, String> entry : env.entrySet() )\n+            {\n+                String key = entry.getKey() != null ? entry.getKey() : \"\";\n+                String val = entry.getValue() != null ? entry.getValue() : \"\";\n+                pb.environment().put( key, val );\n+            }\n+            pb.directory( dir );\n+            if ( inheritIo )\n+            {\n+                pb.inheritIO();\n+            }\n+            return pb.start();\n+        }\n+    }\n+\n+}"
  }
]
