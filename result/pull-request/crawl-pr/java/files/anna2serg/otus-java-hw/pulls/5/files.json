[
  {
    "sha": "00a51aff5e5a83d6313f3bd15fadc601a205b66f",
    "filename": "hw06-solid/.gitattributes",
    "status": "added",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/anna2serg/otus-java-hw/blob/d334d41ae1f0ce88f161da0174a8fdeba5ce46d3/hw06-solid/.gitattributes",
    "raw_url": "https://github.com/anna2serg/otus-java-hw/raw/d334d41ae1f0ce88f161da0174a8fdeba5ce46d3/hw06-solid/.gitattributes",
    "contents_url": "https://api.github.com/repos/anna2serg/otus-java-hw/contents/hw06-solid/.gitattributes?ref=d334d41ae1f0ce88f161da0174a8fdeba5ce46d3",
    "patch": "@@ -0,0 +1,6 @@\n+#\n+# https://help.github.com/articles/dealing-with-line-endings/\n+#\n+# These are explicitly windows files and should use crlf\n+*.bat           text eol=crlf\n+"
  },
  {
    "sha": "1b6985c0094c8e3db5f1c6e2c4d66b82f325284f",
    "filename": "hw06-solid/.gitignore",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/anna2serg/otus-java-hw/blob/d334d41ae1f0ce88f161da0174a8fdeba5ce46d3/hw06-solid/.gitignore",
    "raw_url": "https://github.com/anna2serg/otus-java-hw/raw/d334d41ae1f0ce88f161da0174a8fdeba5ce46d3/hw06-solid/.gitignore",
    "contents_url": "https://api.github.com/repos/anna2serg/otus-java-hw/contents/hw06-solid/.gitignore?ref=d334d41ae1f0ce88f161da0174a8fdeba5ce46d3",
    "patch": "@@ -0,0 +1,5 @@\n+# Ignore Gradle project-specific cache directory\n+.gradle\n+\n+# Ignore Gradle build output directory\n+build"
  },
  {
    "sha": "1678db06b53e887d4941d319eb8fc3395eaae02b",
    "filename": "hw06-solid/build.gradle",
    "status": "added",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/anna2serg/otus-java-hw/blob/d334d41ae1f0ce88f161da0174a8fdeba5ce46d3/hw06-solid/build.gradle",
    "raw_url": "https://github.com/anna2serg/otus-java-hw/raw/d334d41ae1f0ce88f161da0174a8fdeba5ce46d3/hw06-solid/build.gradle",
    "contents_url": "https://api.github.com/repos/anna2serg/otus-java-hw/contents/hw06-solid/build.gradle?ref=d334d41ae1f0ce88f161da0174a8fdeba5ce46d3",
    "patch": "@@ -0,0 +1,20 @@\n+    plugins {\n+    id 'java'\n+}\n+\n+sourceCompatibility = JavaVersion.VERSION_15\n+targetCompatibility = JavaVersion.VERSION_15\n+\n+dependencies {\n+    compileOnly 'org.projectlombok:lombok'\n+    annotationProcessor 'org.projectlombok:lombok'\n+    testImplementation ('org.junit.jupiter:junit-jupiter-api')\n+    testImplementation ('org.junit.jupiter:junit-jupiter-engine')\n+}\n+\n+test {\n+    useJUnitPlatform()\n+    testLogging {\n+        events \"passed\", \"skipped\", \"failed\"\n+    }\n+}"
  },
  {
    "sha": "e708b1c023ec8b20f512888fe07c5bd3ff77bb8f",
    "filename": "hw06-solid/gradle/wrapper/gradle-wrapper.jar",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/anna2serg/otus-java-hw/blob/d334d41ae1f0ce88f161da0174a8fdeba5ce46d3/hw06-solid/gradle/wrapper/gradle-wrapper.jar",
    "raw_url": "https://github.com/anna2serg/otus-java-hw/raw/d334d41ae1f0ce88f161da0174a8fdeba5ce46d3/hw06-solid/gradle/wrapper/gradle-wrapper.jar",
    "contents_url": "https://api.github.com/repos/anna2serg/otus-java-hw/contents/hw06-solid/gradle/wrapper/gradle-wrapper.jar?ref=d334d41ae1f0ce88f161da0174a8fdeba5ce46d3"
  },
  {
    "sha": "12d38de6a487379bb3664c6ac06e21443d977e2e",
    "filename": "hw06-solid/gradle/wrapper/gradle-wrapper.properties",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/anna2serg/otus-java-hw/blob/d334d41ae1f0ce88f161da0174a8fdeba5ce46d3/hw06-solid/gradle/wrapper/gradle-wrapper.properties",
    "raw_url": "https://github.com/anna2serg/otus-java-hw/raw/d334d41ae1f0ce88f161da0174a8fdeba5ce46d3/hw06-solid/gradle/wrapper/gradle-wrapper.properties",
    "contents_url": "https://api.github.com/repos/anna2serg/otus-java-hw/contents/hw06-solid/gradle/wrapper/gradle-wrapper.properties?ref=d334d41ae1f0ce88f161da0174a8fdeba5ce46d3",
    "patch": "@@ -0,0 +1,5 @@\n+distributionBase=GRADLE_USER_HOME\n+distributionPath=wrapper/dists\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-6.6.1-bin.zip\n+zipStoreBase=GRADLE_USER_HOME\n+zipStorePath=wrapper/dists"
  },
  {
    "sha": "4f906e0c811fc9e230eb44819f509cd0627f2600",
    "filename": "hw06-solid/gradlew",
    "status": "added",
    "additions": 185,
    "deletions": 0,
    "changes": 185,
    "blob_url": "https://github.com/anna2serg/otus-java-hw/blob/d334d41ae1f0ce88f161da0174a8fdeba5ce46d3/hw06-solid/gradlew",
    "raw_url": "https://github.com/anna2serg/otus-java-hw/raw/d334d41ae1f0ce88f161da0174a8fdeba5ce46d3/hw06-solid/gradlew",
    "contents_url": "https://api.github.com/repos/anna2serg/otus-java-hw/contents/hw06-solid/gradlew?ref=d334d41ae1f0ce88f161da0174a8fdeba5ce46d3",
    "patch": "@@ -0,0 +1,185 @@\n+#!/usr/bin/env sh\n+\n+#\n+# Copyright 2015 the original author or authors.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#      https://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+##############################################################################\n+##\n+##  Gradle start up script for UN*X\n+##\n+##############################################################################\n+\n+# Attempt to set APP_HOME\n+# Resolve links: $0 may be a link\n+PRG=\"$0\"\n+# Need this for relative symlinks.\n+while [ -h \"$PRG\" ] ; do\n+    ls=`ls -ld \"$PRG\"`\n+    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n+    if expr \"$link\" : '/.*' > /dev/null; then\n+        PRG=\"$link\"\n+    else\n+        PRG=`dirname \"$PRG\"`\"/$link\"\n+    fi\n+done\n+SAVED=\"`pwd`\"\n+cd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\n+APP_HOME=\"`pwd -P`\"\n+cd \"$SAVED\" >/dev/null\n+\n+APP_NAME=\"Gradle\"\n+APP_BASE_NAME=`basename \"$0\"`\n+\n+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\n+DEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n+\n+# Use the maximum available, or set MAX_FD != -1 to use that value.\n+MAX_FD=\"maximum\"\n+\n+warn () {\n+    echo \"$*\"\n+}\n+\n+die () {\n+    echo\n+    echo \"$*\"\n+    echo\n+    exit 1\n+}\n+\n+# OS specific support (must be 'true' or 'false').\n+cygwin=false\n+msys=false\n+darwin=false\n+nonstop=false\n+case \"`uname`\" in\n+  CYGWIN* )\n+    cygwin=true\n+    ;;\n+  Darwin* )\n+    darwin=true\n+    ;;\n+  MINGW* )\n+    msys=true\n+    ;;\n+  NONSTOP* )\n+    nonstop=true\n+    ;;\n+esac\n+\n+CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n+\n+\n+# Determine the Java command to use to start the JVM.\n+if [ -n \"$JAVA_HOME\" ] ; then\n+    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n+        # IBM's JDK on AIX uses strange locations for the executables\n+        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n+    else\n+        JAVACMD=\"$JAVA_HOME/bin/java\"\n+    fi\n+    if [ ! -x \"$JAVACMD\" ] ; then\n+        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n+\n+Please set the JAVA_HOME variable in your environment to match the\n+location of your Java installation.\"\n+    fi\n+else\n+    JAVACMD=\"java\"\n+    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n+\n+Please set the JAVA_HOME variable in your environment to match the\n+location of your Java installation.\"\n+fi\n+\n+# Increase the maximum file descriptors if we can.\n+if [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" -a \"$nonstop\" = \"false\" ] ; then\n+    MAX_FD_LIMIT=`ulimit -H -n`\n+    if [ $? -eq 0 ] ; then\n+        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n+            MAX_FD=\"$MAX_FD_LIMIT\"\n+        fi\n+        ulimit -n $MAX_FD\n+        if [ $? -ne 0 ] ; then\n+            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n+        fi\n+    else\n+        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n+    fi\n+fi\n+\n+# For Darwin, add options to specify how the application appears in the dock\n+if $darwin; then\n+    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\n+fi\n+\n+# For Cygwin or MSYS, switch paths to Windows format before running java\n+if [ \"$cygwin\" = \"true\" -o \"$msys\" = \"true\" ] ; then\n+    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n+    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n+\n+    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n+\n+    # We build the pattern for arguments to be converted via cygpath\n+    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n+    SEP=\"\"\n+    for dir in $ROOTDIRSRAW ; do\n+        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n+        SEP=\"|\"\n+    done\n+    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n+    # Add a user-defined pattern to the cygpath arguments\n+    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n+        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n+    fi\n+    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n+    i=0\n+    for arg in \"$@\" ; do\n+        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n+        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n+\n+        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n+            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n+        else\n+            eval `echo args$i`=\"\\\"$arg\\\"\"\n+        fi\n+        i=`expr $i + 1`\n+    done\n+    case $i in\n+        0) set -- ;;\n+        1) set -- \"$args0\" ;;\n+        2) set -- \"$args0\" \"$args1\" ;;\n+        3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n+        4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n+        5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n+        6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n+        7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n+        8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n+        9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n+    esac\n+fi\n+\n+# Escape application args\n+save () {\n+    for i do printf %s\\\\n \"$i\" | sed \"s/'/'\\\\\\\\''/g;1s/^/'/;\\$s/\\$/' \\\\\\\\/\" ; done\n+    echo \" \"\n+}\n+APP_ARGS=`save \"$@\"`\n+\n+# Collect all arguments for the java command, following the shell quoting and substitution rules\n+eval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS \"\\\"-Dorg.gradle.appname=$APP_BASE_NAME\\\"\" -classpath \"\\\"$CLASSPATH\\\"\" org.gradle.wrapper.GradleWrapperMain \"$APP_ARGS\"\n+\n+exec \"$JAVACMD\" \"$@\""
  },
  {
    "sha": "107acd32c4e687021ef32db511e8a206129b88ec",
    "filename": "hw06-solid/gradlew.bat",
    "status": "added",
    "additions": 89,
    "deletions": 0,
    "changes": 89,
    "blob_url": "https://github.com/anna2serg/otus-java-hw/blob/d334d41ae1f0ce88f161da0174a8fdeba5ce46d3/hw06-solid/gradlew.bat",
    "raw_url": "https://github.com/anna2serg/otus-java-hw/raw/d334d41ae1f0ce88f161da0174a8fdeba5ce46d3/hw06-solid/gradlew.bat",
    "contents_url": "https://api.github.com/repos/anna2serg/otus-java-hw/contents/hw06-solid/gradlew.bat?ref=d334d41ae1f0ce88f161da0174a8fdeba5ce46d3",
    "patch": "@@ -0,0 +1,89 @@\n+@rem\n+@rem Copyright 2015 the original author or authors.\n+@rem\n+@rem Licensed under the Apache License, Version 2.0 (the \"License\");\n+@rem you may not use this file except in compliance with the License.\n+@rem You may obtain a copy of the License at\n+@rem\n+@rem      https://www.apache.org/licenses/LICENSE-2.0\n+@rem\n+@rem Unless required by applicable law or agreed to in writing, software\n+@rem distributed under the License is distributed on an \"AS IS\" BASIS,\n+@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+@rem See the License for the specific language governing permissions and\n+@rem limitations under the License.\n+@rem\n+\n+@if \"%DEBUG%\" == \"\" @echo off\n+@rem ##########################################################################\n+@rem\n+@rem  Gradle startup script for Windows\n+@rem\n+@rem ##########################################################################\n+\n+@rem Set local scope for the variables with windows NT shell\n+if \"%OS%\"==\"Windows_NT\" setlocal\n+\n+set DIRNAME=%~dp0\n+if \"%DIRNAME%\" == \"\" set DIRNAME=.\n+set APP_BASE_NAME=%~n0\n+set APP_HOME=%DIRNAME%\n+\n+@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.\n+for %%i in (\"%APP_HOME%\") do set APP_HOME=%%~fi\n+\n+@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\n+set DEFAULT_JVM_OPTS=\"-Xmx64m\" \"-Xms64m\"\n+\n+@rem Find java.exe\n+if defined JAVA_HOME goto findJavaFromJavaHome\n+\n+set JAVA_EXE=java.exe\n+%JAVA_EXE% -version >NUL 2>&1\n+if \"%ERRORLEVEL%\" == \"0\" goto execute\n+\n+echo.\n+echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n+echo.\n+echo Please set the JAVA_HOME variable in your environment to match the\n+echo location of your Java installation.\n+\n+goto fail\n+\n+:findJavaFromJavaHome\n+set JAVA_HOME=%JAVA_HOME:\"=%\n+set JAVA_EXE=%JAVA_HOME%/bin/java.exe\n+\n+if exist \"%JAVA_EXE%\" goto execute\n+\n+echo.\n+echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\n+echo.\n+echo Please set the JAVA_HOME variable in your environment to match the\n+echo location of your Java installation.\n+\n+goto fail\n+\n+:execute\n+@rem Setup the command line\n+\n+set CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n+\n+\n+@rem Execute Gradle\n+\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*\n+\n+:end\n+@rem End local scope for the variables with windows NT shell\n+if \"%ERRORLEVEL%\"==\"0\" goto mainEnd\n+\n+:fail\n+rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\n+rem the _cmd.exe /c_ return code!\n+if  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\n+exit /b 1\n+\n+:mainEnd\n+if \"%OS%\"==\"Windows_NT\" endlocal\n+\n+:omega"
  },
  {
    "sha": "12573ab1351cd0e58a975427694d19417686f75a",
    "filename": "hw06-solid/settings.gradle",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/anna2serg/otus-java-hw/blob/d334d41ae1f0ce88f161da0174a8fdeba5ce46d3/hw06-solid/settings.gradle",
    "raw_url": "https://github.com/anna2serg/otus-java-hw/raw/d334d41ae1f0ce88f161da0174a8fdeba5ce46d3/hw06-solid/settings.gradle",
    "contents_url": "https://api.github.com/repos/anna2serg/otus-java-hw/contents/hw06-solid/settings.gradle?ref=d334d41ae1f0ce88f161da0174a8fdeba5ce46d3",
    "patch": "@@ -0,0 +1 @@\n+rootProject.name = 'hw06-solid'\n\\ No newline at end of file"
  },
  {
    "sha": "90edcf9c464d06a0dabd2d9a2420c45c0508c159",
    "filename": "hw06-solid/src/main/java/ru/otus/atm/ATM.java",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/anna2serg/otus-java-hw/blob/d334d41ae1f0ce88f161da0174a8fdeba5ce46d3/hw06-solid/src/main/java/ru/otus/atm/ATM.java",
    "raw_url": "https://github.com/anna2serg/otus-java-hw/raw/d334d41ae1f0ce88f161da0174a8fdeba5ce46d3/hw06-solid/src/main/java/ru/otus/atm/ATM.java",
    "contents_url": "https://api.github.com/repos/anna2serg/otus-java-hw/contents/hw06-solid/src/main/java/ru/otus/atm/ATM.java?ref=d334d41ae1f0ce88f161da0174a8fdeba5ce46d3",
    "patch": "@@ -0,0 +1,19 @@\n+package ru.otus.atm;\n+\n+import ru.otus.banknote.Combination;\n+\n+import java.util.Comparator;\n+\n+public interface ATM {\n+\n+    void setCombinationStrategy(Comparator<Combination> combinationStrategy);\n+\n+    Combination dispenseCash(double amount);\n+\n+    double getCashBalance();\n+\n+    void addCassette(Cassette cassette);\n+\n+    void removeAllCassette();\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "80d2b638281c24581e8ab065b0e508d8ece5a04d",
    "filename": "hw06-solid/src/main/java/ru/otus/atm/Cassette.java",
    "status": "added",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/anna2serg/otus-java-hw/blob/d334d41ae1f0ce88f161da0174a8fdeba5ce46d3/hw06-solid/src/main/java/ru/otus/atm/Cassette.java",
    "raw_url": "https://github.com/anna2serg/otus-java-hw/raw/d334d41ae1f0ce88f161da0174a8fdeba5ce46d3/hw06-solid/src/main/java/ru/otus/atm/Cassette.java",
    "contents_url": "https://api.github.com/repos/anna2serg/otus-java-hw/contents/hw06-solid/src/main/java/ru/otus/atm/Cassette.java?ref=d334d41ae1f0ce88f161da0174a8fdeba5ce46d3",
    "patch": "@@ -0,0 +1,15 @@\n+package ru.otus.atm;\n+\n+import ru.otus.banknote.Denomination;\n+\n+public interface Cassette {\n+\n+    Denomination getBanknoteDenomination();\n+    int getBanknoteCount();\n+    double getBalance();\n+\n+    void reset();\n+    void pushBanknotes(Denomination denomination, int count);\n+    int pullBanknotes(int count);\n+\n+}"
  },
  {
    "sha": "8d374ca22923bc6860896ed0ba96d00f645defd7",
    "filename": "hw06-solid/src/main/java/ru/otus/atm/impl/ATMImpl.java",
    "status": "added",
    "additions": 82,
    "deletions": 0,
    "changes": 82,
    "blob_url": "https://github.com/anna2serg/otus-java-hw/blob/d334d41ae1f0ce88f161da0174a8fdeba5ce46d3/hw06-solid/src/main/java/ru/otus/atm/impl/ATMImpl.java",
    "raw_url": "https://github.com/anna2serg/otus-java-hw/raw/d334d41ae1f0ce88f161da0174a8fdeba5ce46d3/hw06-solid/src/main/java/ru/otus/atm/impl/ATMImpl.java",
    "contents_url": "https://api.github.com/repos/anna2serg/otus-java-hw/contents/hw06-solid/src/main/java/ru/otus/atm/impl/ATMImpl.java?ref=d334d41ae1f0ce88f161da0174a8fdeba5ce46d3",
    "patch": "@@ -0,0 +1,82 @@\n+package ru.otus.atm.impl;\n+\n+import ru.otus.atm.ATM;\n+import ru.otus.atm.Cassette;\n+import ru.otus.banknote.Combination;\n+import ru.otus.banknote.Combinator;\n+import ru.otus.banknote.impl.CombinatorImpl;\n+import ru.otus.banknote.Denomination;\n+import ru.otus.banknote.exception.UnavailableCountOfBanknotesException;\n+\n+import java.util.ArrayList;\n+import java.util.Comparator;\n+import java.util.List;\n+import java.util.Objects;\n+\n+public class ATMImpl implements ATM {\n+\n+    private final int CASSETTES_CAPACITY = 6;\n+    private final List<Cassette> cassettes = new ArrayList<>();\n+    private final Combinator combinator = new CombinatorImpl();\n+\n+    @Override\n+    public void setCombinationStrategy(Comparator<Combination> combinationStrategy) {\n+        combinator.setCombinationStrategy(combinationStrategy);\n+    }\n+\n+    @Override\n+    public Combination dispenseCash(double amount) {\n+        updateAllAvailableCombinations();\n+        Combination combination = combinator.getCombinationFromAvailable(amount);\n+        pullCash(combination);\n+        return combination;\n+    }\n+\n+    @Override\n+    public double getCashBalance() {\n+        return cassettes.stream()\n+                .map(Cassette::getBalance)\n+                .reduce(0.00, Double::sum);\n+    }\n+\n+    @Override\n+    public void addCassette(Cassette cassette) {\n+        if (cassettes.size() > CASSETTES_CAPACITY) {\n+            throw new UnsupportedOperationException(\"The allowed number of cassettes has been exceeded\");\n+        }\n+        cassettes.add(cassette);\n+        combinator.enrichAvailableCombination(cassette.getBanknoteDenomination(), cassette.getBanknoteCount());\n+    }\n+\n+    @Override\n+    public void removeAllCassette() {\n+        cassettes.clear();\n+        combinator.resetAvailableCombination();\n+    }\n+\n+    private void updateAllAvailableCombinations() {\n+        combinator.resetAvailableCombination();\n+        for (Cassette cassette : cassettes) {\n+            combinator.enrichAvailableCombination(cassette.getBanknoteDenomination(), cassette.getBanknoteCount());\n+        }\n+    }\n+\n+    private void pullCash(Combination cashCombination) {\n+        Combination extractableCombination = new Combination(cashCombination);\n+        for (Cassette cassette : cassettes) {\n+            for (Denomination denomination : extractableCombination.getContainedDenominations()) {\n+                if (Objects.equals(cassette.getBanknoteDenomination(), denomination) && extractableCombination.getCountForDenomination(denomination) > 0) {\n+                    int extractedCount;\n+                    try {\n+                        extractedCount = cassette.pullBanknotes(extractableCombination.getCountForDenomination(denomination));\n+                    } catch (UnavailableCountOfBanknotesException ex) {\n+                        extractedCount = cassette.pullBanknotes(cassette.getBanknoteCount());\n+                    }\n+                    int remainingCount = extractableCombination.getCountForDenomination(denomination) - extractedCount;\n+                    extractableCombination.setCountForDenomination(denomination, remainingCount);\n+                }\n+            }\n+        }\n+        updateAllAvailableCombinations();\n+    }\n+}"
  },
  {
    "sha": "c26527f6850bf9a75327dc95d5fb4f1013933e97",
    "filename": "hw06-solid/src/main/java/ru/otus/atm/impl/CassetteImpl.java",
    "status": "added",
    "additions": 67,
    "deletions": 0,
    "changes": 67,
    "blob_url": "https://github.com/anna2serg/otus-java-hw/blob/d334d41ae1f0ce88f161da0174a8fdeba5ce46d3/hw06-solid/src/main/java/ru/otus/atm/impl/CassetteImpl.java",
    "raw_url": "https://github.com/anna2serg/otus-java-hw/raw/d334d41ae1f0ce88f161da0174a8fdeba5ce46d3/hw06-solid/src/main/java/ru/otus/atm/impl/CassetteImpl.java",
    "contents_url": "https://api.github.com/repos/anna2serg/otus-java-hw/contents/hw06-solid/src/main/java/ru/otus/atm/impl/CassetteImpl.java?ref=d334d41ae1f0ce88f161da0174a8fdeba5ce46d3",
    "patch": "@@ -0,0 +1,67 @@\n+package ru.otus.atm.impl;\n+\n+import ru.otus.banknote.Denomination;\n+import ru.otus.atm.Cassette;\n+import ru.otus.banknote.exception.UnavailableCountOfBanknotesException;\n+\n+import java.util.Objects;\n+\n+public class CassetteImpl implements Cassette {\n+\n+    private final int BANKNOTES_CAPACITY = 2500;\n+    private Denomination banknoteDenomination;\n+    private int banknoteCount;\n+\n+    public CassetteImpl() {\n+    }\n+\n+    public CassetteImpl(Denomination banknoteDenomination, int banknoteCount) {\n+        pushBanknotes(banknoteDenomination, banknoteCount);\n+    }\n+\n+    @Override\n+    public Denomination getBanknoteDenomination() {\n+        return banknoteDenomination;\n+    }\n+\n+    @Override\n+    public int getBanknoteCount() {\n+        return banknoteCount;\n+    }\n+\n+    @Override\n+    public double getBalance() {\n+        return Objects.nonNull(banknoteDenomination) ? banknoteDenomination.getValue() * banknoteCount : 0;\n+    }\n+\n+    @Override\n+    public void reset() {\n+        banknoteDenomination = null;\n+        banknoteCount = 0;\n+    }\n+\n+    @Override\n+    public void pushBanknotes(Denomination denomination, int count) {\n+        if ((this.banknoteCount + count) > BANKNOTES_CAPACITY) {\n+            throw new UnsupportedOperationException(\"The allowed number of banknotes in the cell has been exceeded\");\n+        }\n+        if ((Objects.nonNull(this.banknoteDenomination))\n+                && (!Objects.equals(this.banknoteDenomination, denomination))\n+                && (this.banknoteCount > 0)\n+        ) {\n+            throw new UnsupportedOperationException(String.format(\"The cassette contains banknotes of a other denomination (%s)\", banknoteDenomination));\n+        }\n+        this.banknoteCount = this.banknoteCount + count;\n+        this.banknoteDenomination = denomination;\n+    }\n+\n+    @Override\n+    public int pullBanknotes(int count) {\n+        if (count > this.banknoteCount) {\n+            throw new UnavailableCountOfBanknotesException(count, this.banknoteCount);\n+        }\n+        this.banknoteCount = this.banknoteCount - count;\n+        return count;\n+    }\n+\n+}"
  },
  {
    "sha": "adccafb82b32b2c52fadbf75e87c1ae1dd6aeb63",
    "filename": "hw06-solid/src/main/java/ru/otus/banknote/Combination.java",
    "status": "added",
    "additions": 54,
    "deletions": 0,
    "changes": 54,
    "blob_url": "https://github.com/anna2serg/otus-java-hw/blob/d334d41ae1f0ce88f161da0174a8fdeba5ce46d3/hw06-solid/src/main/java/ru/otus/banknote/Combination.java",
    "raw_url": "https://github.com/anna2serg/otus-java-hw/raw/d334d41ae1f0ce88f161da0174a8fdeba5ce46d3/hw06-solid/src/main/java/ru/otus/banknote/Combination.java",
    "contents_url": "https://api.github.com/repos/anna2serg/otus-java-hw/contents/hw06-solid/src/main/java/ru/otus/banknote/Combination.java?ref=d334d41ae1f0ce88f161da0174a8fdeba5ce46d3",
    "patch": "@@ -0,0 +1,54 @@\n+package ru.otus.banknote;\n+\n+import lombok.Data;\n+\n+import java.util.*;\n+import java.util.stream.Collectors;\n+\n+@Data\n+public class Combination {\n+\n+    private final Map<Denomination, Integer> data = new TreeMap<>(Collections.reverseOrder());\n+\n+    public Combination() {\n+    }\n+\n+    public Combination(Combination other) {\n+        data.clear();\n+        data.putAll(other.data);\n+    }\n+\n+    public void reset() {\n+        data.clear();\n+    }\n+\n+    public void add(Denomination denomination, int count) {\n+        int currentCount = getCountForDenomination(denomination);\n+        data.put(denomination, currentCount + count);\n+    }\n+\n+    public Iterable<Denomination> getContainedDenominations() {\n+        return data.keySet();\n+    }\n+\n+    public int getCountForDenomination(Denomination denomination) {\n+        Integer count = data.get(denomination);\n+        return Objects.isNull(count) ? 0 : count;\n+    }\n+\n+    public void setCountForDenomination(Denomination denomination, int count) {\n+        data.put(denomination, count);\n+    }\n+\n+    public int getBanknotesTotalCount() {\n+        return data.values().stream().reduce(0, Integer::sum);\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return data.keySet().stream()\n+                .map(denomination ->  denomination.getValue() + \" x \" + data.get(denomination))\n+                .collect(Collectors.joining(\"\\n\"));\n+    }\n+\n+}"
  },
  {
    "sha": "61953a65fb9a8ba5188a74ed12051e39edec1a25",
    "filename": "hw06-solid/src/main/java/ru/otus/banknote/Combinator.java",
    "status": "added",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/anna2serg/otus-java-hw/blob/d334d41ae1f0ce88f161da0174a8fdeba5ce46d3/hw06-solid/src/main/java/ru/otus/banknote/Combinator.java",
    "raw_url": "https://github.com/anna2serg/otus-java-hw/raw/d334d41ae1f0ce88f161da0174a8fdeba5ce46d3/hw06-solid/src/main/java/ru/otus/banknote/Combinator.java",
    "contents_url": "https://api.github.com/repos/anna2serg/otus-java-hw/contents/hw06-solid/src/main/java/ru/otus/banknote/Combinator.java?ref=d334d41ae1f0ce88f161da0174a8fdeba5ce46d3",
    "patch": "@@ -0,0 +1,22 @@\n+package ru.otus.banknote;\n+\n+import java.util.Comparator;\n+import java.util.List;\n+\n+public interface Combinator {\n+\n+    void setCombinationStrategy(Comparator<Combination> combinationStrategy);\n+\n+    Combination getCombinationFromAvailable(double amount);\n+\n+    Combination getCombination(double amount);\n+\n+    List<Combination> getAllCombinationsFromAvailable(double amount);\n+\n+    List<Combination> getAllCombinations(double amount);\n+\n+    void resetAvailableCombination();\n+\n+    void enrichAvailableCombination(Denomination denomination, int count);\n+\n+}"
  },
  {
    "sha": "7b0cb5b171c516831c7453a37a32c40096d7e091",
    "filename": "hw06-solid/src/main/java/ru/otus/banknote/Denomination.java",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/anna2serg/otus-java-hw/blob/d334d41ae1f0ce88f161da0174a8fdeba5ce46d3/hw06-solid/src/main/java/ru/otus/banknote/Denomination.java",
    "raw_url": "https://github.com/anna2serg/otus-java-hw/raw/d334d41ae1f0ce88f161da0174a8fdeba5ce46d3/hw06-solid/src/main/java/ru/otus/banknote/Denomination.java",
    "contents_url": "https://api.github.com/repos/anna2serg/otus-java-hw/contents/hw06-solid/src/main/java/ru/otus/banknote/Denomination.java?ref=d334d41ae1f0ce88f161da0174a8fdeba5ce46d3",
    "patch": "@@ -0,0 +1,19 @@\n+package ru.otus.banknote;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Getter;\n+\n+@Getter\n+@AllArgsConstructor\n+public enum Denomination {\n+\n+    ONE_HUNDRED(100.00),\n+    TWO_HUNDRED(200.00),\n+    FIVE_HUNDRED(500.00),\n+    ONE_THOUSAND(1000.00),\n+    TWO_THOUSAND(2000.00),\n+    FIVE_THOUSAND(5000.00);\n+\n+    private double value;\n+\n+}"
  },
  {
    "sha": "d3e91f74352bb58dec50c372644c785a763d93d7",
    "filename": "hw06-solid/src/main/java/ru/otus/banknote/exception/CombinationNotFoundException.java",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/anna2serg/otus-java-hw/blob/d334d41ae1f0ce88f161da0174a8fdeba5ce46d3/hw06-solid/src/main/java/ru/otus/banknote/exception/CombinationNotFoundException.java",
    "raw_url": "https://github.com/anna2serg/otus-java-hw/raw/d334d41ae1f0ce88f161da0174a8fdeba5ce46d3/hw06-solid/src/main/java/ru/otus/banknote/exception/CombinationNotFoundException.java",
    "contents_url": "https://api.github.com/repos/anna2serg/otus-java-hw/contents/hw06-solid/src/main/java/ru/otus/banknote/exception/CombinationNotFoundException.java?ref=d334d41ae1f0ce88f161da0174a8fdeba5ce46d3",
    "patch": "@@ -0,0 +1,11 @@\n+package ru.otus.banknote.exception;\n+\n+public class CombinationNotFoundException extends RuntimeException {\n+\n+    private static final String message = \"Combination for the amount %.2f rub. not found\";\n+\n+    public CombinationNotFoundException(Double amount) {\n+        super(String.format(message, amount));\n+    }\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "f3410125cbb8fb0bb5626fb1ce372fcd0ce8cf98",
    "filename": "hw06-solid/src/main/java/ru/otus/banknote/exception/UnavailableCountOfBanknotesException.java",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/anna2serg/otus-java-hw/blob/d334d41ae1f0ce88f161da0174a8fdeba5ce46d3/hw06-solid/src/main/java/ru/otus/banknote/exception/UnavailableCountOfBanknotesException.java",
    "raw_url": "https://github.com/anna2serg/otus-java-hw/raw/d334d41ae1f0ce88f161da0174a8fdeba5ce46d3/hw06-solid/src/main/java/ru/otus/banknote/exception/UnavailableCountOfBanknotesException.java",
    "contents_url": "https://api.github.com/repos/anna2serg/otus-java-hw/contents/hw06-solid/src/main/java/ru/otus/banknote/exception/UnavailableCountOfBanknotesException.java?ref=d334d41ae1f0ce88f161da0174a8fdeba5ce46d3",
    "patch": "@@ -0,0 +1,11 @@\n+package ru.otus.banknote.exception;\n+\n+public class UnavailableCountOfBanknotesException extends RuntimeException {\n+\n+    private static final String message = \"The requested number of banknotes is not available: requested = %d, available = %d\";\n+\n+    public UnavailableCountOfBanknotesException(int requestedCount, int availableCount) {\n+        super(String.format(message, requestedCount, availableCount));\n+    }\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "41321876a06b95c4e250d9cf259a88f1f34af355",
    "filename": "hw06-solid/src/main/java/ru/otus/banknote/impl/CombinatorImpl.java",
    "status": "added",
    "additions": 124,
    "deletions": 0,
    "changes": 124,
    "blob_url": "https://github.com/anna2serg/otus-java-hw/blob/d334d41ae1f0ce88f161da0174a8fdeba5ce46d3/hw06-solid/src/main/java/ru/otus/banknote/impl/CombinatorImpl.java",
    "raw_url": "https://github.com/anna2serg/otus-java-hw/raw/d334d41ae1f0ce88f161da0174a8fdeba5ce46d3/hw06-solid/src/main/java/ru/otus/banknote/impl/CombinatorImpl.java",
    "contents_url": "https://api.github.com/repos/anna2serg/otus-java-hw/contents/hw06-solid/src/main/java/ru/otus/banknote/impl/CombinatorImpl.java?ref=d334d41ae1f0ce88f161da0174a8fdeba5ce46d3",
    "patch": "@@ -0,0 +1,124 @@\n+package ru.otus.banknote.impl;\n+\n+import java.util.*;\n+import java.util.stream.Collectors;\n+\n+import ru.otus.banknote.Combination;\n+import ru.otus.banknote.Combinator;\n+import ru.otus.banknote.Denomination;\n+import ru.otus.banknote.exception.*;\n+\n+public class CombinatorImpl implements Combinator {\n+\n+    private final Comparator<Combination> defaultCombinationStrategy = (o1, o2) -> {\n+        List<Denomination> denominations = Arrays.stream(Denomination.values()).sorted(Collections.reverseOrder()).collect(Collectors.toList());\n+        for (Denomination denomination : denominations) {\n+            int denominationCount1 = o1.getCountForDenomination(denomination);\n+            int denominationCount2 = o2.getCountForDenomination(denomination);\n+            if (denominationCount1 == denominationCount2) {\n+                continue;\n+            } else {\n+                return denominationCount2 - denominationCount1;\n+            }\n+        }\n+        return 0;\n+    };\n+\n+    private Combination availableCombination;\n+    private Comparator<Combination> combinationStrategy;\n+\n+    public CombinatorImpl() {\n+        this.availableCombination = new Combination();\n+        this.combinationStrategy = defaultCombinationStrategy;\n+    }\n+\n+    public CombinatorImpl(Comparator<Combination> combinationStrategy) {\n+        this();\n+        setCombinationStrategy(combinationStrategy);\n+    }\n+\n+    @Override\n+    public void setCombinationStrategy(Comparator<Combination> combinationStrategy) {\n+        this.combinationStrategy = combinationStrategy;\n+    }\n+\n+    @Override\n+    public void resetAvailableCombination() {\n+        availableCombination.reset();\n+    }\n+\n+    @Override\n+    public void enrichAvailableCombination(Denomination denomination, int count) {\n+        availableCombination.add(denomination, count);\n+    }\n+\n+    @Override\n+    public Combination getCombinationFromAvailable(double amount) {\n+        List<Combination> combinations = getAllCombinationsFromAvailable(amount);\n+        if (combinations.size() == 0) {\n+            throw new CombinationNotFoundException(amount);\n+        }\n+        return combinations.stream().sorted(combinationStrategy).iterator().next();\n+    }\n+\n+    @Override\n+    public Combination getCombination(double amount) {\n+        List<Combination> combinations = getAllCombinations(amount);\n+        if (combinations.size() == 0) {\n+            throw new CombinationNotFoundException(amount);\n+        }\n+        return combinations.stream().sorted(combinationStrategy).iterator().next();\n+    }\n+\n+    @Override\n+    public List<Combination> getAllCombinationsFromAvailable(double amount) {\n+        return getAllCombinationList(amount, availableCombination);\n+    }\n+\n+    @Override\n+    public List<Combination> getAllCombinations(double amount) {\n+        return getAllCombinationList(amount, null);\n+    }\n+\n+    private List<Combination> getAllCombinationList(double amount, Combination availableCombination) {\n+        List<Combination> combinationList = new ArrayList<>();\n+        populateCombinations(amount, new Combination(), combinationList, availableCombination);\n+        return combinationList;\n+    }\n+\n+    private void populateCombinations(double amount, Combination combination, List<Combination> combinationList, Combination availableCombination) {\n+\n+        Iterable<Denomination> denominations;\n+        if (Objects.isNull(availableCombination)) {\n+            denominations = Arrays.stream(Denomination.values()).collect(Collectors.toList());\n+        } else {\n+            denominations = availableCombination.getContainedDenominations();\n+        }\n+\n+        denominations.forEach(denomination -> {\n+            int count = (int)(amount / denomination.getValue());\n+            double residue = amount % denomination.getValue();\n+\n+            if (count == 0) {\n+                return;\n+            }\n+\n+            if (Objects.nonNull(availableCombination)) {\n+                int availableCount = availableCombination.getCountForDenomination(denomination);\n+                if (count > availableCount) {\n+                    return;\n+                }\n+            }\n+\n+            Combination newCombination = new Combination(combination);\n+            newCombination.add(denomination, count);\n+\n+            if (residue == 0) {\n+                combinationList.add(newCombination);\n+            } else {\n+                populateCombinations(residue, newCombination, combinationList, availableCombination);\n+            }\n+\n+        });\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "6a8d64797863b532815587ed45dd532030d3fe9f",
    "filename": "hw06-solid/src/test/java/ru/otus/atm/impl/ATMImplTest.java",
    "status": "added",
    "additions": 122,
    "deletions": 0,
    "changes": 122,
    "blob_url": "https://github.com/anna2serg/otus-java-hw/blob/d334d41ae1f0ce88f161da0174a8fdeba5ce46d3/hw06-solid/src/test/java/ru/otus/atm/impl/ATMImplTest.java",
    "raw_url": "https://github.com/anna2serg/otus-java-hw/raw/d334d41ae1f0ce88f161da0174a8fdeba5ce46d3/hw06-solid/src/test/java/ru/otus/atm/impl/ATMImplTest.java",
    "contents_url": "https://api.github.com/repos/anna2serg/otus-java-hw/contents/hw06-solid/src/test/java/ru/otus/atm/impl/ATMImplTest.java?ref=d334d41ae1f0ce88f161da0174a8fdeba5ce46d3",
    "patch": "@@ -0,0 +1,122 @@\n+package ru.otus.atm.impl;\n+\n+import org.junit.jupiter.api.*;\n+import ru.otus.atm.ATM;\n+import ru.otus.atm.Cassette;\n+import ru.otus.banknote.Combination;\n+import ru.otus.banknote.exception.CombinationNotFoundException;\n+\n+import java.util.Comparator;\n+\n+import static ru.otus.banknote.Denomination.*;\n+import static ru.otus.banknote.Denomination.ONE_HUNDRED;\n+\n+class ATMImplTest {\n+\n+    private ATM atm;\n+    private final int FIVE_HUNDRED_BANKNOTES_INITIAL_COUNT = 8;\n+    private final int TWO_HUNDRED_BANKNOTES_INITIAL_COUNT = 2;\n+    private final int ONE_HUNDRED_BANKNOTES_INITIAL_COUNT = 10;\n+    private final int ONE_THOUSAND_BANKNOTES_ADDED_COUNT = 4;\n+    private final double AMOUNT4900 = 4900.00;\n+\n+    @BeforeEach\n+    void setUp() {\n+        atm = new ATMImpl();\n+        atm.setCombinationStrategy(Comparator.comparingInt(Combination::getBanknotesTotalCount));\n+        Cassette cassette500 = new CassetteImpl(FIVE_HUNDRED, FIVE_HUNDRED_BANKNOTES_INITIAL_COUNT);\n+        atm.addCassette(cassette500);\n+        Cassette cassette200 = new CassetteImpl(TWO_HUNDRED, TWO_HUNDRED_BANKNOTES_INITIAL_COUNT);\n+        atm.addCassette(cassette200);\n+        Cassette cassette100 = new CassetteImpl(ONE_HUNDRED, ONE_HUNDRED_BANKNOTES_INITIAL_COUNT);\n+        atm.addCassette(cassette100);\n+    }\n+\n+    @Test\n+    @DisplayName(\"Проверка стартового баланса банкомата\")\n+    void checkInitialCashBalance() {\n+        double expectedCashBalance = FIVE_HUNDRED.getValue() * FIVE_HUNDRED_BANKNOTES_INITIAL_COUNT\n+                + TWO_HUNDRED.getValue() * TWO_HUNDRED_BANKNOTES_INITIAL_COUNT\n+                + ONE_HUNDRED.getValue() * ONE_HUNDRED_BANKNOTES_INITIAL_COUNT;\n+        double actualCashBalance = atm.getCashBalance();\n+        Assertions.assertEquals(expectedCashBalance, actualCashBalance);\n+    }\n+\n+    @Test\n+    @DisplayName(\"Проверка баланса банкомата после вставки новой денежной кассеты\")\n+    void checkCashBalanceAfterCassetteAdding() {\n+        Cassette cassette1000 = new CassetteImpl(ONE_THOUSAND, ONE_THOUSAND_BANKNOTES_ADDED_COUNT);\n+        atm.addCassette(cassette1000);\n+        double expectedCashBalance = ONE_THOUSAND.getValue() * ONE_THOUSAND_BANKNOTES_ADDED_COUNT\n+                + FIVE_HUNDRED.getValue() * FIVE_HUNDRED_BANKNOTES_INITIAL_COUNT\n+                + TWO_HUNDRED.getValue() * TWO_HUNDRED_BANKNOTES_INITIAL_COUNT\n+                + ONE_HUNDRED.getValue() * ONE_HUNDRED_BANKNOTES_INITIAL_COUNT;\n+        double actualCashBalance = atm.getCashBalance();\n+        Assertions.assertEquals(expectedCashBalance, actualCashBalance);\n+    }\n+\n+    @Test\n+    @DisplayName(\"Проброс исключения в случае недостатка наличных для выдачи запрошенной суммы\")\n+    void throwingExceptionWhenThereIsNotEnoughCash() {\n+        Assertions.assertThrows(CombinationNotFoundException.class, () -> atm.dispenseCash(AMOUNT4900));\n+    }\n+\n+    @Test\n+    @DisplayName(\"Проверка выданной комбинации купюр при наличии достаточной суммы наличных и максимального доступного номинала в 500\")\n+    void checkCombinationWhenThereAreEnough500() {\n+        Cassette cassette500 = new CassetteImpl(FIVE_HUNDRED, 1);\n+        atm.addCassette(cassette500);\n+\n+        Combination actualCombination = atm.dispenseCash(AMOUNT4900);\n+\n+        Combination expectedCombination = new Combination();\n+        expectedCombination.add(FIVE_HUNDRED, 9);\n+        expectedCombination.add(TWO_HUNDRED, 2);\n+\n+        Assertions.assertEquals(expectedCombination, actualCombination);\n+        Assertions.assertEquals(expectedCombination.getBanknotesTotalCount(), actualCombination.getBanknotesTotalCount());\n+    }\n+\n+    @Test\n+    @DisplayName(\"Проверка выданной комбинации купюр при наличии достаточной суммы наличных и максимального доступного номинала в 1000\")\n+    void checkCombinationWhenThereAreEnough1000() {\n+        Cassette cassette1000 = new CassetteImpl(ONE_THOUSAND, ONE_THOUSAND_BANKNOTES_ADDED_COUNT);\n+        atm.addCassette(cassette1000);\n+\n+        Combination actualCombination = atm.dispenseCash(AMOUNT4900);\n+\n+        Combination expectedCombination = new Combination();\n+        expectedCombination.add(ONE_THOUSAND, 4);\n+        expectedCombination.add(FIVE_HUNDRED, 1);\n+        expectedCombination.add(TWO_HUNDRED, 2);\n+\n+        Assertions.assertEquals(expectedCombination, actualCombination);\n+        Assertions.assertEquals(expectedCombination.getBanknotesTotalCount(), actualCombination.getBanknotesTotalCount());\n+    }\n+\n+    @Test\n+    @DisplayName(\"Проверка извлечения купюр одного номинала из разных кассет при наличии достаточной суммы наличных в них\")\n+    void checkCombinationWhenThereAreEnough1000InDifferentCassettes() {\n+        Cassette cassette1000_1 = new CassetteImpl(ONE_THOUSAND, 2);\n+        atm.addCassette(cassette1000_1);\n+        Cassette cassette1000_2 = new CassetteImpl(ONE_THOUSAND, 1);\n+        atm.addCassette(cassette1000_2);\n+        Cassette cassette1000_3 = new CassetteImpl(ONE_THOUSAND, 1);\n+        atm.addCassette(cassette1000_3);\n+\n+        Combination actualCombination = atm.dispenseCash(AMOUNT4900);\n+\n+        Combination expectedCombination = new Combination();\n+        expectedCombination.add(ONE_THOUSAND, 4);\n+        expectedCombination.add(FIVE_HUNDRED, 1);\n+        expectedCombination.add(TWO_HUNDRED, 2);\n+\n+        Assertions.assertEquals(expectedCombination, actualCombination);\n+        Assertions.assertEquals(expectedCombination.getBanknotesTotalCount(), actualCombination.getBanknotesTotalCount());\n+    }\n+\n+    @AfterEach\n+    void tearDown() {\n+        atm.removeAllCassette();\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "4f7ca8c43da1b3526a4ad896d9b710497e15c5eb",
    "filename": "hw06-solid/src/test/java/ru/otus/atm/impl/CassetteImplTest.java",
    "status": "added",
    "additions": 88,
    "deletions": 0,
    "changes": 88,
    "blob_url": "https://github.com/anna2serg/otus-java-hw/blob/d334d41ae1f0ce88f161da0174a8fdeba5ce46d3/hw06-solid/src/test/java/ru/otus/atm/impl/CassetteImplTest.java",
    "raw_url": "https://github.com/anna2serg/otus-java-hw/raw/d334d41ae1f0ce88f161da0174a8fdeba5ce46d3/hw06-solid/src/test/java/ru/otus/atm/impl/CassetteImplTest.java",
    "contents_url": "https://api.github.com/repos/anna2serg/otus-java-hw/contents/hw06-solid/src/test/java/ru/otus/atm/impl/CassetteImplTest.java?ref=d334d41ae1f0ce88f161da0174a8fdeba5ce46d3",
    "patch": "@@ -0,0 +1,88 @@\n+package ru.otus.atm.impl;\n+\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.Test;\n+import ru.otus.atm.Cassette;\n+import ru.otus.banknote.Denomination;\n+import ru.otus.banknote.exception.UnavailableCountOfBanknotesException;\n+\n+import static ru.otus.banknote.Denomination.*;\n+\n+class CassetteImplTest {\n+\n+    private Cassette cassette = new CassetteImpl();\n+    private final int BANKNOTES_INITIAL_COUNT = 5;\n+    private final Denomination BANKNOTES_INITIAL_DENOMINATION = FIVE_THOUSAND;\n+    private final int ADDED_BANKNOTES_COUNT = 4;\n+    private final int EXTRACTED_BANKNOTES_COUNT = 2;\n+    private final int EXTRACTED_MORE_THAN_THERE_IS_BANKNOTES_COUNT = 6;\n+    private final int BANKNOTES_COUNT_TO_EXCEED_CAPACITY = 2496;\n+\n+    @BeforeEach\n+    void setUp() {\n+        cassette.pushBanknotes(BANKNOTES_INITIAL_DENOMINATION, BANKNOTES_INITIAL_COUNT);\n+    }\n+\n+    @Test\n+    @DisplayName(\"Проверка стартового баланса кассеты\")\n+    void checkInitialBalance() {\n+        double expectedBalance = BANKNOTES_INITIAL_DENOMINATION.getValue() * BANKNOTES_INITIAL_COUNT;\n+        double actualBalance = cassette.getBalance();\n+        Assertions.assertEquals(expectedBalance, actualBalance);\n+    }\n+\n+    @Test\n+    @DisplayName(\"Проверка баланса кассеты после пополнения\")\n+    void checkBalanceAfterPushBanknotes() {\n+        cassette.pushBanknotes(BANKNOTES_INITIAL_DENOMINATION, ADDED_BANKNOTES_COUNT);\n+        double expectedBalance = BANKNOTES_INITIAL_DENOMINATION.getValue() * (BANKNOTES_INITIAL_COUNT + ADDED_BANKNOTES_COUNT);\n+        double actualBalance = cassette.getBalance();\n+        Assertions.assertEquals(expectedBalance, actualBalance);\n+    }\n+\n+    @Test\n+    @DisplayName(\"Проброс исключения при попытке добавить в кассету купюры другого номинала\")\n+    void throwingExceptionWhenAddingBanknotesOtherDenomination() {\n+        Assertions.assertThrows(UnsupportedOperationException.class,\n+                () -> cassette.pushBanknotes(TWO_THOUSAND, ADDED_BANKNOTES_COUNT),\n+                String.format(\"The cassette contains banknotes of a other denomination (%s)\", BANKNOTES_INITIAL_DENOMINATION));\n+    }\n+\n+    @Test\n+    @DisplayName(\"Проброс исключения при попытке добавить в кассету купюры в количестве, превышающем емкость\")\n+    void throwingExceptionWhenAddingBanknotesCountOverCapacity() {\n+        Assertions.assertThrows(UnsupportedOperationException.class,\n+                () -> cassette.pushBanknotes(BANKNOTES_INITIAL_DENOMINATION, BANKNOTES_COUNT_TO_EXCEED_CAPACITY),\n+                \"The allowed number of banknotes in the cell has been exceeded\");\n+    }\n+\n+    @Test\n+    @DisplayName(\"Проверка баланса кассеты после частичного извлечения купюр\")\n+    void checkBalanceAfterPullBanknotes() {\n+        cassette.pullBanknotes(EXTRACTED_BANKNOTES_COUNT);\n+        double expectedBalance = BANKNOTES_INITIAL_DENOMINATION.getValue() * (BANKNOTES_INITIAL_COUNT - EXTRACTED_BANKNOTES_COUNT);\n+        double actualBalance = cassette.getBalance();\n+        Assertions.assertEquals(expectedBalance, actualBalance);\n+    }\n+\n+    @Test\n+    @DisplayName(\"Проверка баланса кассеты после полного извлечения купюр\")\n+    void checkBalanceAfterReset() {\n+        cassette.reset();\n+        double expectedBalance = 0;\n+        double actualBalance = cassette.getBalance();\n+        Assertions.assertEquals(expectedBalance, actualBalance);\n+    }\n+\n+    @Test\n+    @DisplayName(\"Проброс исключения при попытке извлечь из кассеты больше купюр, чем она содержит\")\n+    void throwingExceptionWhenPullBanknotesMoreThanThereIs() {\n+        Assertions.assertThrows(UnavailableCountOfBanknotesException.class,\n+                () -> cassette.pullBanknotes(EXTRACTED_MORE_THAN_THERE_IS_BANKNOTES_COUNT),\n+                String.format(\"The requested number of banknotes is not available: requested = %d, available = %d\",\n+                        EXTRACTED_MORE_THAN_THERE_IS_BANKNOTES_COUNT, BANKNOTES_INITIAL_COUNT));\n+    }\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "ccef007f817d02762966b833ea9390511d29054a",
    "filename": "hw06-solid/src/test/java/ru/otus/banknote/impl/CombinatorImplTest.java",
    "status": "added",
    "additions": 100,
    "deletions": 0,
    "changes": 100,
    "blob_url": "https://github.com/anna2serg/otus-java-hw/blob/d334d41ae1f0ce88f161da0174a8fdeba5ce46d3/hw06-solid/src/test/java/ru/otus/banknote/impl/CombinatorImplTest.java",
    "raw_url": "https://github.com/anna2serg/otus-java-hw/raw/d334d41ae1f0ce88f161da0174a8fdeba5ce46d3/hw06-solid/src/test/java/ru/otus/banknote/impl/CombinatorImplTest.java",
    "contents_url": "https://api.github.com/repos/anna2serg/otus-java-hw/contents/hw06-solid/src/test/java/ru/otus/banknote/impl/CombinatorImplTest.java?ref=d334d41ae1f0ce88f161da0174a8fdeba5ce46d3",
    "patch": "@@ -0,0 +1,100 @@\n+package ru.otus.banknote.impl;\n+\n+import org.junit.jupiter.api.*;\n+import ru.otus.banknote.Combination;\n+import ru.otus.banknote.Combinator;\n+\n+import java.util.Comparator;\n+import java.util.List;\n+\n+import static ru.otus.banknote.Denomination.*;\n+\n+class CombinatorImplTest {\n+\n+    private Combinator combinator = new CombinatorImpl();\n+    private final double AMOUNT4900 = 4900.00;\n+\n+    @BeforeEach\n+    void setUp() {\n+        combinator.setCombinationStrategy(Comparator.comparingInt(Combination::getBanknotesTotalCount));\n+    }\n+\n+    @Test\n+    @DisplayName(\"Проверка получения всех из возможных комбинаций выдачи запрошенной суммы\")\n+    void checkingForAllPossibleCombinationsAreReceived() {\n+        int expectedCombinationsCount = 12;\n+        List<Combination> actualCombinationList = combinator.getAllCombinations(AMOUNT4900);\n+        int actualCombinationsCount = actualCombinationList.size();\n+        Assertions.assertEquals(expectedCombinationsCount, actualCombinationsCount);\n+\n+        Combination combination1 = new Combination();\n+        combination1.add(ONE_HUNDRED, 49);\n+        Assertions.assertTrue(actualCombinationList.stream().anyMatch(e -> e.equals(combination1)));\n+\n+        Combination combination2 = new Combination();\n+        combination2.add(TWO_HUNDRED, 24);\n+        combination2.add(ONE_HUNDRED, 1);\n+        Assertions.assertTrue(actualCombinationList.stream().anyMatch(e -> e.equals(combination2)));\n+\n+        Combination combination3 = new Combination();\n+        combination3.add(FIVE_HUNDRED, 9);\n+        combination3.add(ONE_HUNDRED, 4);\n+        Assertions.assertTrue(actualCombinationList.stream().anyMatch(e -> e.equals(combination3)));\n+\n+        Combination combination4 = new Combination();\n+        combination4.add(FIVE_HUNDRED, 9);\n+        combination4.add(TWO_HUNDRED, 2);\n+        Assertions.assertTrue(actualCombinationList.stream().anyMatch(e -> e.equals(combination4)));\n+\n+        Combination combination5 = new Combination();\n+        combination5.add(ONE_THOUSAND, 4);\n+        combination5.add(ONE_HUNDRED, 9);\n+        Assertions.assertTrue(actualCombinationList.stream().anyMatch(e -> e.equals(combination5)));\n+\n+        Combination combination6 = new Combination();\n+        combination6.add(ONE_THOUSAND, 4);\n+        combination6.add(TWO_HUNDRED, 4);\n+        combination6.add(ONE_HUNDRED, 1);\n+        Assertions.assertTrue(actualCombinationList.stream().anyMatch(e -> e.equals(combination6)));\n+\n+        Combination combination7 = new Combination();\n+        combination7.add(ONE_THOUSAND, 4);\n+        combination7.add(FIVE_HUNDRED, 1);\n+        combination7.add(ONE_HUNDRED, 4);\n+        Assertions.assertTrue(actualCombinationList.stream().anyMatch(e -> e.equals(combination7)));\n+\n+        Combination combination8 = new Combination();\n+        combination8.add(ONE_THOUSAND, 4);\n+        combination8.add(FIVE_HUNDRED, 1);\n+        combination8.add(TWO_HUNDRED, 2);\n+        Assertions.assertTrue(actualCombinationList.stream().anyMatch(e -> e.equals(combination8)));\n+\n+        Combination combination9 = new Combination();\n+        combination9.add(TWO_THOUSAND, 2);\n+        combination9.add(ONE_HUNDRED, 9);\n+        Assertions.assertTrue(actualCombinationList.stream().anyMatch(e -> e.equals(combination9)));\n+\n+        Combination combination10 = new Combination();\n+        combination10.add(TWO_THOUSAND, 2);\n+        combination10.add(TWO_HUNDRED, 4);\n+        combination10.add(ONE_HUNDRED, 1);\n+        Assertions.assertTrue(actualCombinationList.stream().anyMatch(e -> e.equals(combination10)));\n+\n+        Combination combination11 = new Combination();\n+        combination11.add(TWO_THOUSAND, 2);\n+        combination11.add(FIVE_HUNDRED, 1);\n+        combination11.add(ONE_HUNDRED, 4);\n+        Assertions.assertTrue(actualCombinationList.stream().anyMatch(e -> e.equals(combination11)));\n+\n+        Combination combination12 = new Combination();\n+        combination12.add(TWO_THOUSAND, 2);\n+        combination12.add(FIVE_HUNDRED, 1);\n+        combination12.add(TWO_HUNDRED, 2);\n+        Assertions.assertTrue(actualCombinationList.stream().anyMatch(e -> e.equals(combination12)));\n+    }\n+\n+    @AfterEach\n+    void tearDown() {\n+        combinator.resetAvailableCombination();\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "dcc3821106edd5af016839f8508c5dd562b623e8",
    "filename": "settings.gradle",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/anna2serg/otus-java-hw/blob/d334d41ae1f0ce88f161da0174a8fdeba5ce46d3/settings.gradle",
    "raw_url": "https://github.com/anna2serg/otus-java-hw/raw/d334d41ae1f0ce88f161da0174a8fdeba5ce46d3/settings.gradle",
    "contents_url": "https://api.github.com/repos/anna2serg/otus-java-hw/contents/settings.gradle?ref=d334d41ae1f0ce88f161da0174a8fdeba5ce46d3",
    "patch": "@@ -2,4 +2,5 @@ rootProject.name = 'otus-java-hw'\n include 'hw01-gradle'\n include 'hw02-generics'\n include 'hw03-reflections'\n-include 'hw05-byteCodes'\n\\ No newline at end of file\n+include 'hw05-byteCodes'\n+include 'hw06-solid'\n\\ No newline at end of file"
  }
]
