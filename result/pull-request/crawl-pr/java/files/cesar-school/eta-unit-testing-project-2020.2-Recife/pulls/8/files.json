[
  {
    "sha": "be11b1e4c1f1e4c9d1aa6531e5640aade888321f",
    "filename": "src/test/java/school/cesar/eta/unit/PersonTest.java",
    "status": "modified",
    "additions": 60,
    "deletions": 13,
    "changes": 73,
    "blob_url": "https://github.com/cesar-school/eta-unit-testing-project-2020.2-Recife/blob/aa3bafe6495eaf376331ba3a70b293dba05a1ca4/src/test/java/school/cesar/eta/unit/PersonTest.java",
    "raw_url": "https://github.com/cesar-school/eta-unit-testing-project-2020.2-Recife/raw/aa3bafe6495eaf376331ba3a70b293dba05a1ca4/src/test/java/school/cesar/eta/unit/PersonTest.java",
    "contents_url": "https://api.github.com/repos/cesar-school/eta-unit-testing-project-2020.2-Recife/contents/src/test/java/school/cesar/eta/unit/PersonTest.java?ref=aa3bafe6495eaf376331ba3a70b293dba05a1ca4",
    "patch": "@@ -1,62 +1,109 @@\n package school.cesar.eta.unit;\n \n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n-\n-import static org.junit.jupiter.api.Assertions.fail;\n+import java.time.LocalDate;\n+import java.util.ArrayList;\n+import java.util.List;\n \n public class PersonTest {\n+\n+    Person person;\n+\n+    class StubPerson extends Person {\n+\n+        List<Person> family = new ArrayList<Person>();\n+        @Override\n+        public void addToFamily(Person person) {\n+            family.add(person);\n+            super.addToFamily(person);\n+        }\n+\n+    }\n+\n+    @BeforeEach\n+    public void setup() {\n+        this.person = new Person();\n+    }\n+\n     @Test\n     public void getName_firstNameJonLastNameSnow_jonSnow() {\n-        fail();\n+        this.person.setName(\"jon\");\n+        this.person.setLastName(\"snow\");\n+        Assertions.assertEquals(\"jon snow\", this.person.getName());\n     }\n \n     @Test\n     public void getName_firstNameJonNoLastName_jon() {\n-        fail();\n+        this.person.setName(\"jon\");\n+        Assertions.assertEquals(\"jon\", this.person.getName());\n     }\n \n     @Test\n     public void getName_noFirstNameLastNameSnow_snow() {\n-        fail();\n+        this.person.setLastName(\"snow\");\n+        Assertions.assertEquals(\"snow\", this.person.getName());\n     }\n \n     @Test\n     public void getName_noFirstNameNorLastName_throwsException() {\n-        fail();\n+        Assertions.assertThrows(RuntimeException.class, () -> {\n+            this.person.getName();\n+        });\n     }\n \n     @Test\n     public void isBirthdayToday_differentMonthAndDay_false() {\n-        fail();\n+        LocalDate birthday = LocalDate.of(2021, 04, 02);\n+        this.person.setBirthday(LocalDate.now());\n+        boolean birthdayValidate = birthday.equals(this.person.getBirthday());\n+        Assertions.assertNotEquals(birthdayValidate, this.person.isBirthdayToday());\n     }\n \n     @Test\n     public void isBirthdayToday_sameMonthDifferentDay_false() {\n-        fail();\n+        LocalDate birthday = LocalDate.of(2021, 02, 02);\n+        this.person.setBirthday(LocalDate.now());\n+        boolean birthdayValidate = birthday.equals(this.person.getBirthday());\n+        Assertions.assertNotEquals(birthdayValidate, this.person.isBirthdayToday());\n     }\n \n     @Test\n     public void isBirthdayToday_sameMonthAndDay_true() {\n-        fail();\n+        LocalDate birthday = LocalDate.now();\n+        this.person.setBirthday(LocalDate.now());\n+        boolean birthdayValidate = birthday.equals(this.person.getBirthday());\n+        Assertions.assertEquals(birthdayValidate, this.person.isBirthdayToday());\n     }\n \n     @Test\n     public void addToFamily_somePerson_familyHasNewMember() {\n-        fail();\n+        this.person.setName(\"Fulano\");\n+        StubPerson somePerson = new StubPerson();\n+        somePerson.addToFamily(this.person);\n+\n+        String newMember = somePerson.family.get(0).getName();\n+        Assertions.assertEquals(\"Fulano\",newMember);\n     }\n \n     @Test\n     public void addToFamily_somePerson_personAddedAlsoHasItsFamilyUpdated() {\n-        fail();\n+        StubPerson somePerson = new StubPerson();\n+        somePerson.addToFamily(this.person);\n+        Assertions.assertTrue(somePerson.isFamily(this.person));\n     }\n \n     @Test\n     public void isFamily_nonRelativePerson_false() {\n-        fail();\n+        Assertions.assertFalse(this.person.isFamily(null));\n     }\n \n     @Test\n     public void isFamily_relativePerson_true() {\n-        fail();\n+        Person anotherPerson = new Person();\n+        anotherPerson.addToFamily(this.person);\n+        Assertions.assertTrue(anotherPerson.isFamily(this.person));\n+        Assertions.assertTrue(this.person.isFamily(anotherPerson));\n     }\n }"
  }
]
