[
  {
    "sha": "32858aad3c383ed1ff0a0f9bdf231d54a00c9e88",
    "filename": ".gitignore",
    "status": "added",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/figueirapedro/estoqueCRUDcomJAVA/blob/d8b4e40508335e1eb8bbc4ea54fc789f87db79b4/.gitignore",
    "raw_url": "https://github.com/figueirapedro/estoqueCRUDcomJAVA/raw/d8b4e40508335e1eb8bbc4ea54fc789f87db79b4/.gitignore",
    "contents_url": "https://api.github.com/repos/figueirapedro/estoqueCRUDcomJAVA/contents/.gitignore?ref=d8b4e40508335e1eb8bbc4ea54fc789f87db79b4",
    "patch": "@@ -0,0 +1,12 @@\n+*.class\n+\n+# Mobile Tools for Java (J2ME)\n+.mtj.tmp/\n+\n+# Package Files #\n+*.jar\n+*.war\n+*.ear\n+\n+# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml\n+hs_err_pid*"
  },
  {
    "sha": "d3f5a12faa99758192ecc4ed3fc22c9249232e86",
    "filename": "README.md",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/figueirapedro/estoqueCRUDcomJAVA/blob/d8b4e40508335e1eb8bbc4ea54fc789f87db79b4/README.md",
    "raw_url": "https://github.com/figueirapedro/estoqueCRUDcomJAVA/raw/d8b4e40508335e1eb8bbc4ea54fc789f87db79b4/README.md",
    "contents_url": "https://api.github.com/repos/figueirapedro/estoqueCRUDcomJAVA/contents/README.md?ref=d8b4e40508335e1eb8bbc4ea54fc789f87db79b4",
    "patch": "@@ -1 +1 @@\n-# estoqueCRUDcomJAVA\n\\ No newline at end of file\n+\r"
  },
  {
    "sha": "d956bb6dd46b23d680922d817731e50cdd269517",
    "filename": "build.xml",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/figueirapedro/estoqueCRUDcomJAVA/blob/d8b4e40508335e1eb8bbc4ea54fc789f87db79b4/build.xml",
    "raw_url": "https://github.com/figueirapedro/estoqueCRUDcomJAVA/raw/d8b4e40508335e1eb8bbc4ea54fc789f87db79b4/build.xml",
    "contents_url": "https://api.github.com/repos/figueirapedro/estoqueCRUDcomJAVA/contents/build.xml?ref=d8b4e40508335e1eb8bbc4ea54fc789f87db79b4",
    "patch": "@@ -7,8 +7,8 @@\n <!-- the Compile on Save feature is turned off for the project. -->\r\n <!-- You can turn off the Compile on Save (or Deploy on Save) setting -->\r\n <!-- in the project's Project Properties dialog box.-->\r\n-<project name=\"DesafioEstoque\" default=\"default\" basedir=\".\">\r\n-    <description>Builds, tests, and runs the project DesafioEstoque.</description>\r\n+<project name=\"Controle_Estoque\" default=\"default\" basedir=\".\">\r\n+    <description>Builds, tests, and runs the project Controle Estoque.</description>\r\n     <import file=\"nbproject/build-impl.xml\"/>\r\n     <!--\r\n \r\n@@ -58,7 +58,7 @@\n \r\n     An example of overriding the target for project execution could look like this:\r\n \r\n-        <target name=\"run\" depends=\"DesafioEstoque-impl.jar\">\r\n+        <target name=\"run\" depends=\"Controle_Estoque-impl.jar\">\r\n             <exec dir=\"bin\" executable=\"launcher.exe\">\r\n                 <arg file=\"${dist.jar}\"/>\r\n             </exec>\r"
  },
  {
    "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
    "filename": "build/classes/.netbeans_automatic_build",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/figueirapedro/estoqueCRUDcomJAVA/blob/d8b4e40508335e1eb8bbc4ea54fc789f87db79b4/build/classes/.netbeans_automatic_build",
    "raw_url": "https://github.com/figueirapedro/estoqueCRUDcomJAVA/raw/d8b4e40508335e1eb8bbc4ea54fc789f87db79b4/build/classes/.netbeans_automatic_build",
    "contents_url": "https://api.github.com/repos/figueirapedro/estoqueCRUDcomJAVA/contents/build/classes/.netbeans_automatic_build?ref=d8b4e40508335e1eb8bbc4ea54fc789f87db79b4"
  },
  {
    "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
    "filename": "build/classes/.netbeans_update_resources",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/figueirapedro/estoqueCRUDcomJAVA/blob/d8b4e40508335e1eb8bbc4ea54fc789f87db79b4/build/classes/.netbeans_update_resources",
    "raw_url": "https://github.com/figueirapedro/estoqueCRUDcomJAVA/raw/d8b4e40508335e1eb8bbc4ea54fc789f87db79b4/build/classes/.netbeans_update_resources",
    "contents_url": "https://api.github.com/repos/figueirapedro/estoqueCRUDcomJAVA/contents/build/classes/.netbeans_update_resources?ref=d8b4e40508335e1eb8bbc4ea54fc789f87db79b4"
  },
  {
    "sha": "9dd7201a9cbe26d1f526eac6fc3dd5bfb4009a45",
    "filename": "build/classes/controleestoque/main.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/figueirapedro/estoqueCRUDcomJAVA/blob/d8b4e40508335e1eb8bbc4ea54fc789f87db79b4/build/classes/controleestoque/main.class",
    "raw_url": "https://github.com/figueirapedro/estoqueCRUDcomJAVA/raw/d8b4e40508335e1eb8bbc4ea54fc789f87db79b4/build/classes/controleestoque/main.class",
    "contents_url": "https://api.github.com/repos/figueirapedro/estoqueCRUDcomJAVA/contents/build/classes/controleestoque/main.class?ref=d8b4e40508335e1eb8bbc4ea54fc789f87db79b4"
  },
  {
    "sha": "5907fc710fda92bc5f3d7f2fbac833ee1e28b97e",
    "filename": "build/classes/dao/ProdutoDAOSQL.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/figueirapedro/estoqueCRUDcomJAVA/blob/d8b4e40508335e1eb8bbc4ea54fc789f87db79b4/build/classes/dao/ProdutoDAOSQL.class",
    "raw_url": "https://github.com/figueirapedro/estoqueCRUDcomJAVA/raw/d8b4e40508335e1eb8bbc4ea54fc789f87db79b4/build/classes/dao/ProdutoDAOSQL.class",
    "contents_url": "https://api.github.com/repos/figueirapedro/estoqueCRUDcomJAVA/contents/build/classes/dao/ProdutoDAOSQL.class?ref=d8b4e40508335e1eb8bbc4ea54fc789f87db79b4"
  },
  {
    "sha": "eb223cacbc86446580b91ecf4303d37f1fde3afb",
    "filename": "build/classes/dao/ProdutoDAOTXT.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/figueirapedro/estoqueCRUDcomJAVA/blob/d8b4e40508335e1eb8bbc4ea54fc789f87db79b4/build/classes/dao/ProdutoDAOTXT.class",
    "raw_url": "https://github.com/figueirapedro/estoqueCRUDcomJAVA/raw/d8b4e40508335e1eb8bbc4ea54fc789f87db79b4/build/classes/dao/ProdutoDAOTXT.class",
    "contents_url": "https://api.github.com/repos/figueirapedro/estoqueCRUDcomJAVA/contents/build/classes/dao/ProdutoDAOTXT.class?ref=d8b4e40508335e1eb8bbc4ea54fc789f87db79b4"
  },
  {
    "sha": "6d06e6f167063ce1b989ee0ca5e2fe5e979c9850",
    "filename": "build/classes/factory/ConnectionFactory.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/figueirapedro/estoqueCRUDcomJAVA/blob/d8b4e40508335e1eb8bbc4ea54fc789f87db79b4/build/classes/factory/ConnectionFactory.class",
    "raw_url": "https://github.com/figueirapedro/estoqueCRUDcomJAVA/raw/d8b4e40508335e1eb8bbc4ea54fc789f87db79b4/build/classes/factory/ConnectionFactory.class",
    "contents_url": "https://api.github.com/repos/figueirapedro/estoqueCRUDcomJAVA/contents/build/classes/factory/ConnectionFactory.class?ref=d8b4e40508335e1eb8bbc4ea54fc789f87db79b4"
  },
  {
    "sha": "cf00f9d11134f821db604fae88a9229a0c4bf0cf",
    "filename": "build/classes/modelo/ModelTable.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/figueirapedro/estoqueCRUDcomJAVA/blob/d8b4e40508335e1eb8bbc4ea54fc789f87db79b4/build/classes/modelo/ModelTable.class",
    "raw_url": "https://github.com/figueirapedro/estoqueCRUDcomJAVA/raw/d8b4e40508335e1eb8bbc4ea54fc789f87db79b4/build/classes/modelo/ModelTable.class",
    "contents_url": "https://api.github.com/repos/figueirapedro/estoqueCRUDcomJAVA/contents/build/classes/modelo/ModelTable.class?ref=d8b4e40508335e1eb8bbc4ea54fc789f87db79b4"
  },
  {
    "sha": "add80c6523a23852f24ac668f78e3e3b65c6be92",
    "filename": "build/classes/modelo/Produto.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/figueirapedro/estoqueCRUDcomJAVA/blob/d8b4e40508335e1eb8bbc4ea54fc789f87db79b4/build/classes/modelo/Produto.class",
    "raw_url": "https://github.com/figueirapedro/estoqueCRUDcomJAVA/raw/d8b4e40508335e1eb8bbc4ea54fc789f87db79b4/build/classes/modelo/Produto.class",
    "contents_url": "https://api.github.com/repos/figueirapedro/estoqueCRUDcomJAVA/contents/build/classes/modelo/Produto.class?ref=d8b4e40508335e1eb8bbc4ea54fc789f87db79b4"
  },
  {
    "sha": "caa4b277810668a1c4a2652c219ebf681e945cf7",
    "filename": "database/db_usuario.sql",
    "status": "added",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/figueirapedro/estoqueCRUDcomJAVA/blob/d8b4e40508335e1eb8bbc4ea54fc789f87db79b4/database/db_usuario.sql",
    "raw_url": "https://github.com/figueirapedro/estoqueCRUDcomJAVA/raw/d8b4e40508335e1eb8bbc4ea54fc789f87db79b4/database/db_usuario.sql",
    "contents_url": "https://api.github.com/repos/figueirapedro/estoqueCRUDcomJAVA/contents/database/db_usuario.sql?ref=d8b4e40508335e1eb8bbc4ea54fc789f87db79b4",
    "patch": "@@ -0,0 +1,10 @@\n+create database db_usuario;\r\n+use db_usuario;\r\n+CREATE TABLE usuario (\r\n+id BIGINT(10) AUTO_INCREMENT,\r\n+nome VARCHAR(255),\r\n+cpf VARCHAR(255),\r\n+email VARCHAR(255),\r\n+telefone VARCHAR(255),\r\n+PRIMARY KEY (id)\r\n+);\n\\ No newline at end of file"
  },
  {
    "sha": "2de49eaadf1416d2da91c74736b5e77a54b51735",
    "filename": "estoque.csv",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/figueirapedro/estoqueCRUDcomJAVA/blob/d8b4e40508335e1eb8bbc4ea54fc789f87db79b4/estoque.csv",
    "raw_url": "https://github.com/figueirapedro/estoqueCRUDcomJAVA/raw/d8b4e40508335e1eb8bbc4ea54fc789f87db79b4/estoque.csv",
    "contents_url": "https://api.github.com/repos/figueirapedro/estoqueCRUDcomJAVA/contents/estoque.csv?ref=d8b4e40508335e1eb8bbc4ea54fc789f87db79b4",
    "patch": "@@ -0,0 +1 @@\n+15,10/02/2021,S�o Matheus,T�nis,Puma,Fofo,34,Branco,100,150,300,100,"
  },
  {
    "sha": "09ac083fcb74148da6f31ebeaed1eb02a377ca46",
    "filename": "nbproject/build-impl.xml",
    "status": "modified",
    "additions": 5,
    "deletions": 5,
    "changes": 10,
    "blob_url": "https://github.com/figueirapedro/estoqueCRUDcomJAVA/blob/d8b4e40508335e1eb8bbc4ea54fc789f87db79b4/nbproject/build-impl.xml",
    "raw_url": "https://github.com/figueirapedro/estoqueCRUDcomJAVA/raw/d8b4e40508335e1eb8bbc4ea54fc789f87db79b4/nbproject/build-impl.xml",
    "contents_url": "https://api.github.com/repos/figueirapedro/estoqueCRUDcomJAVA/contents/nbproject/build-impl.xml?ref=d8b4e40508335e1eb8bbc4ea54fc789f87db79b4",
    "patch": "@@ -19,7 +19,7 @@ is divided into following sections:\n   - cleanup\r\n \r\n         -->\r\n-<project xmlns:j2seproject1=\"http://www.netbeans.org/ns/j2se-project/1\" xmlns:j2seproject3=\"http://www.netbeans.org/ns/j2se-project/3\" xmlns:jaxrpc=\"http://www.netbeans.org/ns/j2se-project/jax-rpc\" basedir=\"..\" default=\"default\" name=\"DesafioEstoque-impl\">\r\n+<project xmlns:j2seproject1=\"http://www.netbeans.org/ns/j2se-project/1\" xmlns:j2seproject3=\"http://www.netbeans.org/ns/j2se-project/3\" xmlns:jaxrpc=\"http://www.netbeans.org/ns/j2se-project/jax-rpc\" basedir=\"..\" default=\"default\" name=\"Controle_Estoque-impl\">\r\n     <fail message=\"Please build using Ant 1.8.0 or higher.\">\r\n         <condition>\r\n             <not>\r\n@@ -450,7 +450,7 @@ is divided into following sections:\n                     </fileset>\r\n                 </union>\r\n                 <taskdef classname=\"org.testng.TestNGAntTask\" classpath=\"${run.test.classpath}\" name=\"testng\"/>\r\n-                <testng classfilesetref=\"test.set\" failureProperty=\"tests.failed\" listeners=\"org.testng.reporters.VerboseReporter\" methods=\"${testng.methods.arg}\" mode=\"${testng.mode}\" outputdir=\"${build.test.results.dir}\" suitename=\"DesafioEstoque\" testname=\"TestNG tests\" workingDir=\"${work.dir}\">\r\n+                <testng classfilesetref=\"test.set\" failureProperty=\"tests.failed\" listeners=\"org.testng.reporters.VerboseReporter\" methods=\"${testng.methods.arg}\" mode=\"${testng.mode}\" outputdir=\"${build.test.results.dir}\" suitename=\"Controle_Estoque\" testname=\"TestNG tests\" workingDir=\"${work.dir}\">\r\n                     <xmlfileset dir=\"${build.test.classes.dir}\" includes=\"@{testincludes}\"/>\r\n                     <propertyset>\r\n                         <propertyref prefix=\"test-sys-prop.\"/>\r\n@@ -601,7 +601,7 @@ is divided into following sections:\n                 <condition else=\"-testclass @{testClass}\" property=\"test.class.or.method\" value=\"-methods @{testClass}.@{testMethod}\">\r\n                     <isset property=\"test.method\"/>\r\n                 </condition>\r\n-                <condition else=\"-suitename DesafioEstoque -testname @{testClass} ${test.class.or.method}\" property=\"testng.cmd.args\" value=\"@{testClass}\">\r\n+                <condition else=\"-suitename Controle_Estoque -testname @{testClass} ${test.class.or.method}\" property=\"testng.cmd.args\" value=\"@{testClass}\">\r\n                     <matches pattern=\".*\\.xml\" string=\"@{testClass}\"/>\r\n                 </condition>\r\n                 <delete dir=\"${build.test.results.dir}\" quiet=\"true\"/>\r\n@@ -893,7 +893,7 @@ is divided into following sections:\n         <delete file=\"${built-jar.properties}\" quiet=\"true\"/>\r\n     </target>\r\n     <target if=\"already.built.jar.${basedir}\" name=\"-warn-already-built-jar\">\r\n-        <echo level=\"warn\" message=\"Cycle detected: DesafioEstoque was already built\"/>\r\n+        <echo level=\"warn\" message=\"Cycle detected: Controle Estoque was already built\"/>\r\n     </target>\r\n     <target depends=\"init,-deps-jar-init\" name=\"deps-jar\" unless=\"no.deps\">\r\n         <mkdir dir=\"${build.dir}\"/>\r\n@@ -1378,7 +1378,7 @@ is divided into following sections:\n         <delete file=\"${built-clean.properties}\" quiet=\"true\"/>\r\n     </target>\r\n     <target if=\"already.built.clean.${basedir}\" name=\"-warn-already-built-clean\">\r\n-        <echo level=\"warn\" message=\"Cycle detected: DesafioEstoque was already built\"/>\r\n+        <echo level=\"warn\" message=\"Cycle detected: Controle Estoque was already built\"/>\r\n     </target>\r\n     <target depends=\"init,-deps-clean-init\" name=\"deps-clean\" unless=\"no.deps\">\r\n         <mkdir dir=\"${build.dir}\"/>\r"
  },
  {
    "sha": "bd8e67ab7f88c4e626eb2a77b59d642dfa60268b",
    "filename": "nbproject/genfiles.properties",
    "status": "modified",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/figueirapedro/estoqueCRUDcomJAVA/blob/d8b4e40508335e1eb8bbc4ea54fc789f87db79b4/nbproject/genfiles.properties",
    "raw_url": "https://github.com/figueirapedro/estoqueCRUDcomJAVA/raw/d8b4e40508335e1eb8bbc4ea54fc789f87db79b4/nbproject/genfiles.properties",
    "contents_url": "https://api.github.com/repos/figueirapedro/estoqueCRUDcomJAVA/contents/nbproject/genfiles.properties?ref=d8b4e40508335e1eb8bbc4ea54fc789f87db79b4",
    "patch": "@@ -1,8 +1,8 @@\n-build.xml.data.CRC32=76424cd6\r\n-build.xml.script.CRC32=9b015a51\r\n+build.xml.data.CRC32=70401679\r\n+build.xml.script.CRC32=51e017ac\r\n build.xml.stylesheet.CRC32=8064a381@1.80.1.48\r\n # This file is used by a NetBeans-based IDE to track changes in generated files such as build-impl.xml.\r\n # Do not edit this file. You may delete it but then the IDE will never regenerate such files for you.\r\n-nbproject/build-impl.xml.data.CRC32=76424cd6\r\n-nbproject/build-impl.xml.script.CRC32=314a9344\r\n+nbproject/build-impl.xml.data.CRC32=70401679\r\n+nbproject/build-impl.xml.script.CRC32=1dd52a0f\r\n nbproject/build-impl.xml.stylesheet.CRC32=830a3534@1.80.1.48\r"
  },
  {
    "sha": "536593df74b278fb030d5a085314c142a68de96e",
    "filename": "nbproject/private/private.xml",
    "status": "modified",
    "additions": 4,
    "deletions": 2,
    "changes": 6,
    "blob_url": "https://github.com/figueirapedro/estoqueCRUDcomJAVA/blob/d8b4e40508335e1eb8bbc4ea54fc789f87db79b4/nbproject/private/private.xml",
    "raw_url": "https://github.com/figueirapedro/estoqueCRUDcomJAVA/raw/d8b4e40508335e1eb8bbc4ea54fc789f87db79b4/nbproject/private/private.xml",
    "contents_url": "https://api.github.com/repos/figueirapedro/estoqueCRUDcomJAVA/contents/nbproject/private/private.xml?ref=d8b4e40508335e1eb8bbc4ea54fc789f87db79b4",
    "patch": "@@ -3,8 +3,10 @@\n     <editor-bookmarks xmlns=\"http://www.netbeans.org/ns/editor-bookmarks/2\" lastBookmarkId=\"0\"/>\r\n     <open-files xmlns=\"http://www.netbeans.org/ns/projectui-open-files/2\">\r\n         <group>\r\n-            <file>file:/C:/Users/Escola/Documents/NetBeansProjects/DesafioEstoque/src/desafioestoque/produto.java</file>\r\n-            <file>file:/C:/Users/Escola/Documents/NetBeansProjects/DesafioEstoque/src/desafioestoque/DesafioEstoque.java</file>\r\n+            <file>file:/C:/Users/Escola/Desktop/crudEstoque/src/dao/ProdutoDAOSQL.java</file>\r\n+            <file>file:/C:/Users/Escola/Desktop/crudEstoque/src/controleestoque/main.java</file>\r\n+            <file>file:/C:/Users/Escola/Desktop/crudEstoque/src/dao/ProdutoDAOTXT.java</file>\r\n+            <file>file:/C:/Users/Escola/Desktop/crudEstoque/src/modelo/Produto.java</file>\r\n         </group>\r\n     </open-files>\r\n </project-private>\r"
  },
  {
    "sha": "955f0f7c18c158a70b71351a2f0b14a94cef80d0",
    "filename": "nbproject/project.properties",
    "status": "modified",
    "additions": 8,
    "deletions": 5,
    "changes": 13,
    "blob_url": "https://github.com/figueirapedro/estoqueCRUDcomJAVA/blob/d8b4e40508335e1eb8bbc4ea54fc789f87db79b4/nbproject/project.properties",
    "raw_url": "https://github.com/figueirapedro/estoqueCRUDcomJAVA/raw/d8b4e40508335e1eb8bbc4ea54fc789f87db79b4/nbproject/project.properties",
    "contents_url": "https://api.github.com/repos/figueirapedro/estoqueCRUDcomJAVA/contents/nbproject/project.properties?ref=d8b4e40508335e1eb8bbc4ea54fc789f87db79b4",
    "patch": "@@ -1,6 +1,6 @@\n annotation.processing.enabled=true\r\n annotation.processing.enabled.in.editor=false\r\n-annotation.processing.processor.options=\r\n+annotation.processing.processor.options=-Aeclipselink.canonicalmodel.use_static_factory=false\r\n annotation.processing.processors.list=\r\n annotation.processing.run.all.processors=true\r\n annotation.processing.source.output=${build.generated.sources.dir}/ap-source-output\r\n@@ -24,12 +24,15 @@ debug.test.classpath=\\\n dist.archive.excludes=\r\n # This directory is removed when the project is cleaned:\r\n dist.dir=dist\r\n-dist.jar=${dist.dir}/DesafioEstoque.jar\r\n+dist.jar=${dist.dir}/Controle_Estoque.jar\r\n dist.javadoc.dir=${dist.dir}/javadoc\r\n excludes=\r\n+file.reference.mysql-connector-java-5.1.41-bin.jar=lib\\\\mysql-connector-java-5.1.41-bin.jar\r\n includes=**\r\n jar.compress=false\r\n-javac.classpath=\r\n+javac.classpath=\\\r\n+    ${file.reference.mysql-connector-java-5.1.41-bin.jar}:\\\r\n+    ${libs.MySQLDriver.classpath}\r\n # Space-separated list of extra javac options\r\n javac.compilerargs=\r\n javac.deprecation=false\r\n@@ -54,7 +57,7 @@ javadoc.splitindex=true\n javadoc.use=true\r\n javadoc.version=false\r\n javadoc.windowtitle=\r\n-main.class=desafioestoque.DesafioEstoque\r\n+main.class=controleestoque.main\r\n manifest.file=manifest.mf\r\n meta.inf.dir=${src.dir}/META-INF\r\n mkdist.disabled=false\r\n@@ -69,6 +72,6 @@ run.jvmargs=\n run.test.classpath=\\\r\n     ${javac.test.classpath}:\\\r\n     ${build.test.classes.dir}\r\n-source.encoding=UTF-8\r\n+source.encoding=ISO-8859-1\r\n src.dir=src\r\n test.src.dir=test\r"
  },
  {
    "sha": "0dd8d81e836ccfdcd850260c335bac9bbd34540e",
    "filename": "nbproject/project.xml",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/figueirapedro/estoqueCRUDcomJAVA/blob/d8b4e40508335e1eb8bbc4ea54fc789f87db79b4/nbproject/project.xml",
    "raw_url": "https://github.com/figueirapedro/estoqueCRUDcomJAVA/raw/d8b4e40508335e1eb8bbc4ea54fc789f87db79b4/nbproject/project.xml",
    "contents_url": "https://api.github.com/repos/figueirapedro/estoqueCRUDcomJAVA/contents/nbproject/project.xml?ref=d8b4e40508335e1eb8bbc4ea54fc789f87db79b4",
    "patch": "@@ -3,7 +3,7 @@\n     <type>org.netbeans.modules.java.j2seproject</type>\r\n     <configuration>\r\n         <data xmlns=\"http://www.netbeans.org/ns/j2se-project/3\">\r\n-            <name>DesafioEstoque</name>\r\n+            <name>Controle Estoque</name>\r\n             <source-roots>\r\n                 <root id=\"src.dir\"/>\r\n             </source-roots>\r"
  },
  {
    "sha": "f70c50e6e4f512c572c63c808d577adfbb4b54ba",
    "filename": "src/controleestoque/main.java",
    "status": "added",
    "additions": 144,
    "deletions": 0,
    "changes": 144,
    "blob_url": "https://github.com/figueirapedro/estoqueCRUDcomJAVA/blob/d8b4e40508335e1eb8bbc4ea54fc789f87db79b4/src/controleestoque/main.java",
    "raw_url": "https://github.com/figueirapedro/estoqueCRUDcomJAVA/raw/d8b4e40508335e1eb8bbc4ea54fc789f87db79b4/src/controleestoque/main.java",
    "contents_url": "https://api.github.com/repos/figueirapedro/estoqueCRUDcomJAVA/contents/src/controleestoque/main.java?ref=d8b4e40508335e1eb8bbc4ea54fc789f87db79b4",
    "patch": "@@ -0,0 +1,144 @@\n+/*\r\n+ * To change this license header, choose License Headers in Project Properties.\r\n+ * To change this template file, choose Tools | Templates\r\n+ * and open the template in the editor.\r\n+ */\r\n+package controleestoque;\r\n+\r\n+import dao.*;\r\n+import java.sql.SQLException;\r\n+import java.util.ArrayList;\r\n+import java.util.Scanner;\r\n+import modelo.ModelTable;\r\n+import modelo.Produto;\r\n+\r\n+/**\r\n+ *\r\n+ * @author upper\r\n+ */\r\n+public class main {\r\n+\r\n+    static String tipoConsulta = \"\";\r\n+    static Scanner scan = new Scanner(System.in);\r\n+\r\n+    public static void main(String[] args) {\r\n+\r\n+        System.out.println(\"Bem Vindo ao registro de Estoque!\\n******~~~~~~~******\");\r\n+\r\n+        while (tipoConsulta.equalsIgnoreCase(\"\")) {\r\n+            System.out.println(\"Deseja consultar o estoque: Localmente (1) ou Remotamente (2)?\\n\");\r\n+            tipoConsulta = scan.nextLine();\r\n+\r\n+            if (!(tipoConsulta.equalsIgnoreCase(\"1\") || tipoConsulta.equalsIgnoreCase(\"2\"))) {\r\n+                tipoConsulta = \"\";\r\n+            }\r\n+        }\r\n+\r\n+        Boolean loop = true;\r\n+\r\n+        while (loop) {\r\n+            System.out.println(\"******~~~~~~~******\\nMenu:\\nListar Produtos (0) | Adicionar Produto (1) | Editar Produto (2) | Excluir Produto (3) | Sair (5)\\n\");\r\n+            String tipo = scan.nextLine();\r\n+\r\n+            switch (tipo) {\r\n+                case \"0\":\r\n+                    listar();\r\n+                    break;\r\n+                case \"1\":\r\n+                    salvar();\r\n+                    break;\r\n+                case \"2\":\r\n+                    editar();\r\n+                    break;\r\n+                case \"3\":\r\n+                    excluir();\r\n+                    break;\r\n+                case \"5\":\r\n+                    loop = false;\r\n+                    break;\r\n+                default:\r\n+                    System.out.println(\"Insira um n�mero V�lido!\");\r\n+                    break;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    public static void salvar() {\r\n+        Produto produto;\r\n+        System.out.println(\"******~~~~~~~******\\nCadastro de produto:\");\r\n+        System.out.println(\"                     Informe:\\n                     C�digo: \");\r\n+        produto = new Produto(scan.nextLine());\r\n+\r\n+        System.out.println(\"                     Informe:\\n                     Data de Entrada: \");\r\n+        produto.setDtEntrada(scan.nextLine());\r\n+\r\n+        System.out.println(\"                     Informe:\\n                     Local Compra: \");\r\n+        produto.setLocalCompra(scan.nextLine());\r\n+\r\n+        System.out.println(\"                     Informe:\\n                     Tipo: \");\r\n+        produto.setTipo(scan.nextLine());\r\n+\r\n+        System.out.println(\"                     Informe:\\n                     Marca: \");\r\n+        produto.setMarca(scan.nextLine());\r\n+\r\n+        System.out.println(\"                     Informe:\\n                     Caracteristicas: \");\r\n+        produto.setCaracteristicas(scan.nextLine());\r\n+\r\n+        System.out.println(\"                     Informe:\\n                     Tamanho: \");\r\n+        produto.setTamanho(scan.nextLine());\r\n+\r\n+        System.out.println(\"                     Informe:\\n                     Cor: \");\r\n+        produto.setCor(scan.nextLine());\r\n+\r\n+        System.out.println(\"                     Informe:\\n                     Valor Etiqueta: \");\r\n+        produto.setValorEtiqueta(scan.nextLine());\r\n+\r\n+        System.out.println(\"                     Informe:\\n                     Valor Pago: \");\r\n+        produto.setValorPago(scan.nextLine());\r\n+\r\n+        System.out.println(\"                     Informe:\\n                     Pre�o Sugerido: \");\r\n+        produto.setPrecoSugerido(scan.nextLine());\r\n+\r\n+        produto.setValorMargem(String.valueOf(Integer.valueOf(produto.getValorPago()) * 2));\r\n+\r\n+        if (tipoConsulta.equalsIgnoreCase(\"1\")) {\r\n+            ProdutoDAOTXT x = new ProdutoDAOTXT();\r\n+            x.salvar(produto);\r\n+        } else {\r\n+            ProdutoDAOSQL x = new ProdutoDAOSQL();\r\n+            x.salvar(produto);\r\n+        }\r\n+    }\r\n+\r\n+    public static void editar() {\r\n+        System.out.println(\"******~~~~~~~******\\nEditar Produto:\\nCadsastre o produto novamente para editar\\n\");\r\n+        salvar();\r\n+    }\r\n+\r\n+    public static void excluir() {\r\n+        System.out.println(\"******~~~~~~~******\\nExcluir Produto:\\nQual o c�digo do produto que deseja excluir?\");\r\n+        Produto a = new Produto(scan.nextLine());\r\n+\r\n+        if (tipoConsulta.equalsIgnoreCase(\"1\")) {\r\n+            ProdutoDAOTXT x = new ProdutoDAOTXT();\r\n+            x.deletar(a);\r\n+        } else {\r\n+            ProdutoDAOSQL x = new ProdutoDAOSQL();\r\n+            x.deletar(a);\r\n+        }\r\n+    }\r\n+\r\n+    public static void listar() {\r\n+        System.out.println(\"******~~~~~~~******\\nLista de Produtos\\n******~~~~~~~******\\n\");\r\n+        \r\n+        if (tipoConsulta.equalsIgnoreCase(\"1\")) {\r\n+            ProdutoDAOTXT x = new ProdutoDAOTXT();\r\n+            for (Produto a : x.listarTodos()) \r\n+                a.imprimirProduto();\r\n+        } else {\r\n+            ProdutoDAOSQL x = new ProdutoDAOSQL();\r\n+            for (Produto a : x.listarTodos()) \r\n+                a.imprimirProduto();\r\n+        }\r\n+    }\r\n+}\r"
  },
  {
    "sha": "9848df41a8f67895f389aa0ac2e674af5a8e4e56",
    "filename": "src/dao/ProdutoDAOSQL.java",
    "status": "added",
    "additions": 187,
    "deletions": 0,
    "changes": 187,
    "blob_url": "https://github.com/figueirapedro/estoqueCRUDcomJAVA/blob/d8b4e40508335e1eb8bbc4ea54fc789f87db79b4/src/dao/ProdutoDAOSQL.java",
    "raw_url": "https://github.com/figueirapedro/estoqueCRUDcomJAVA/raw/d8b4e40508335e1eb8bbc4ea54fc789f87db79b4/src/dao/ProdutoDAOSQL.java",
    "contents_url": "https://api.github.com/repos/figueirapedro/estoqueCRUDcomJAVA/contents/src/dao/ProdutoDAOSQL.java?ref=d8b4e40508335e1eb8bbc4ea54fc789f87db79b4",
    "patch": "@@ -0,0 +1,187 @@\n+/*\r\n+ * To change this license header, choose License Headers in Project Properties.\r\n+ * To change this template file, choose Tools | Templates\r\n+ * and open the template in the editor.\r\n+ */\r\n+package dao;\r\n+\r\n+import factory.ConnectionFactory;\r\n+import modelo.Produto;\r\n+import java.sql.*;\r\n+import java.sql.PreparedStatement;\r\n+import java.util.ArrayList;\r\n+import javax.swing.JOptionPane;\r\n+\r\n+/**\r\n+ *\r\n+ * @author upper\r\n+ */\r\n+public class ProdutoDAOSQL {\r\n+\r\n+    private Connection connection;\r\n+    Long id;\r\n+    String nome;\r\n+    String cpf;\r\n+    String email;\r\n+    String telefone;\r\n+\r\n+    public ProdutoDAOSQL() {\r\n+        this.connection = new ConnectionFactory().getConnection();\r\n+    }\r\n+\r\n+    public void salvar(Produto objProd) {\r\n+        try {\r\n+            String sql;\r\n+            if (String.valueOf(objProd.getCodigo()).isEmpty()) {\r\n+                sql = \"INSERT INTO estoque(codigo,data_entrada,local_compra,tipo,marca,caracteristicas,tamanho,cor,valor_etiqueta,valor_pago,valor_margem,preco_sugerido) VALUES(?,?,?,?,?,?,?,?,?,?,?,?)\";\r\n+                PreparedStatement stmt = connection.prepareStatement(sql);\r\n+\r\n+                stmt.setString(1, objProd.getCodigo());\r\n+                stmt.setString(2, objProd.getDtEntrada());\r\n+                stmt.setString(3, objProd.getLocalCompra());\r\n+                stmt.setString(4, objProd.getTipo());\r\n+                stmt.setString(5, objProd.getMarca());\r\n+                stmt.setString(6, objProd.getCaracteristicas());\r\n+                stmt.setString(7, objProd.getTamanho());\r\n+                stmt.setString(8, objProd.getCor());\r\n+                stmt.setString(9, objProd.getValorEtiqueta());\r\n+                stmt.setString(10, objProd.getValorPago());\r\n+                stmt.setString(11, objProd.getValorMargem());\r\n+                stmt.setString(12, objProd.getPrecoSugerido());\r\n+                stmt.execute();\r\n+                stmt.close();\r\n+\r\n+            } else {\r\n+                sql = \"UPDATE estoque SET data_entrada = ?, local_compra = ?, tipo = ?, marca = ?, caracteristicas = ?, tamanho = ?, cor = ?, valor_etiqueta = ?, valor_pago = ?, valor_margem = ?, preco_sugerido = ? WHERE estoque.codigo = ?\";\r\n+\r\n+                PreparedStatement stmt = connection.prepareStatement(sql);\r\n+\r\n+                stmt.setString(12, objProd.getCodigo());\r\n+                stmt.setString(1, objProd.getDtEntrada());\r\n+                stmt.setString(2, objProd.getLocalCompra());\r\n+                stmt.setString(3, objProd.getTipo());\r\n+                stmt.setString(4, objProd.getMarca());\r\n+                stmt.setString(5, objProd.getCaracteristicas());\r\n+                stmt.setString(6, objProd.getTamanho());\r\n+                stmt.setString(7, objProd.getCor());\r\n+                stmt.setString(8, objProd.getValorEtiqueta());\r\n+                stmt.setString(9, objProd.getValorPago());\r\n+                stmt.setString(10, objProd.getValorMargem());\r\n+                stmt.setString(11, objProd.getPrecoSugerido());\r\n+                stmt.execute();\r\n+                stmt.close();\r\n+\r\n+            }\r\n+        } catch (SQLException u) {\r\n+            throw new RuntimeException(u);\r\n+        }\r\n+    }\r\n+\r\n+    public void deletar(Produto objProd) {\r\n+        try {\r\n+            String sql;\r\n+            if (!String.valueOf(objProd.getCodigo()).isEmpty()) {\r\n+                sql = \"DELETE FROM estoque WHERE usuario.codigo = ?\";\r\n+                PreparedStatement stmt = connection.prepareStatement(sql);\r\n+\r\n+                stmt.setString(1, objProd.getCodigo());\r\n+                stmt.execute();\r\n+                stmt.close();\r\n+\r\n+            }\r\n+        } catch (SQLException u) {\r\n+            throw new RuntimeException(u);\r\n+        }\r\n+    }\r\n+\r\n+    public ArrayList buscar(Produto objProd) {\r\n+        try {\r\n+            String sql = \"\";\r\n+            if (!objProd.getMarca().isEmpty()) {\r\n+                sql = \"SELECT * FROM usuario WHERE nome LIKE '%\" + objProd.getMarca() + \"%' \";\r\n+\r\n+            } else if (!objProd.getTipo().isEmpty()) {\r\n+                sql = \"SELECT * FROM usuario WHERE cpf LIKE '%\" + objProd.getTipo() + \"%' \";\r\n+            } else if (!objProd.getCaracteristicas().isEmpty()) {\r\n+                sql = \"SELECT * FROM usuario WHERE cpf LIKE '%\" + objProd.getCaracteristicas() + \"%' \";\r\n+            }\r\n+            ArrayList dado = new ArrayList();\r\n+\r\n+            PreparedStatement ps = connection.prepareStatement(sql);\r\n+            ResultSet rs = ps.executeQuery();\r\n+            Produto produto;\r\n+            \r\n+            while (rs.next()) {\r\n+                produto = new Produto(rs.getString(\"codigo\"));\r\n+                produto.setDtEntrada(rs.getString(\"data_entrada\"));\r\n+                produto.setLocalCompra(rs.getString(\"local_compra\"));\r\n+                produto.setTipo(rs.getString(\"tipo\"));\r\n+                produto.setMarca(rs.getString(\"marca\"));\r\n+                produto.setCaracteristicas(rs.getString(\"caracteristicas\"));\r\n+                produto.setTamanho(rs.getString(\"tamanho\"));\r\n+                produto.setCor(rs.getString(\"cor\"));\r\n+                produto.setValorEtiqueta(rs.getString(\"valor_etiqueta\"));\r\n+                produto.setValorPago(rs.getString(\"valor_pago\"));\r\n+                produto.setValorMargem(rs.getString(\"valor_margem\"));\r\n+                produto.setPrecoSugerido(rs.getString(\"preco_sugerido\"));\r\n+\r\n+                dado.add(produto);\r\n+            }\r\n+            ps.close();\r\n+            rs.close();\r\n+            connection.close();\r\n+\r\n+            return dado;\r\n+        } catch (SQLException e) {\r\n+            e.getMessage();\r\n+            JOptionPane.showMessageDialog(null, \"Erro preencher o ArrayList\");\r\n+            return null;\r\n+        }\r\n+\r\n+    }\r\n+\r\n+    public ArrayList<Produto> listarTodos() {\r\n+        try {\r\n+\r\n+            ArrayList<Produto> dado = new ArrayList<Produto>();\r\n+\r\n+            PreparedStatement ps = connection.prepareStatement(\"SELECT * FROM estoque\");\r\n+            ResultSet rs = ps.executeQuery();\r\n+\r\n+            while (rs.next()) {\r\n+\r\n+                dado.add(new Object[]{\r\n+                    rs.getInt(\"codigo\"),\r\n+                    rs.getString(\"data_entrada\"),\r\n+                    rs.getString(\"local_compra\"),\r\n+                    rs.getString(\"tipo\"),\r\n+                    rs.getString(\"marca\"),\r\n+                    rs.getString(\"caracteristicas\"),\r\n+                    rs.getString(\"tamanho\"),\r\n+                    rs.getString(\"cor\"),\r\n+                    rs.getString(\"valor_etiqueta\"),\r\n+                    rs.getString(\"valor_pago\"),\r\n+                    rs.getString(\"valor_margem\"),\r\n+                    rs.getString(\"preco_sugerido\"),\r\n+                });\r\n+\r\n+            }\r\n+            ps.close();\r\n+            rs.close();\r\n+            connection.close();\r\n+\r\n+            return dado;\r\n+        } catch (SQLException e) {\r\n+            e.getMessage();\r\n+            JOptionPane.showMessageDialog(null, \"Erro preencher o ArrayList\");\r\n+            return null;\r\n+        }\r\n+    }\r\n+\r\n+    public static void testarConexao() throws SQLException {\r\n+        try (Connection objConnection = new ConnectionFactory().getConnection()) {\r\n+            JOptionPane.showMessageDialog(null, \"Conex�o realizada com sucesso! \");\r\n+        }\r\n+    }\r\n+    \r\n+}\r"
  },
  {
    "sha": "ddc4f4c7735a450636b25b4006eaff3cb12f54a7",
    "filename": "src/dao/ProdutoDAOTXT.java",
    "status": "added",
    "additions": 147,
    "deletions": 0,
    "changes": 147,
    "blob_url": "https://github.com/figueirapedro/estoqueCRUDcomJAVA/blob/d8b4e40508335e1eb8bbc4ea54fc789f87db79b4/src/dao/ProdutoDAOTXT.java",
    "raw_url": "https://github.com/figueirapedro/estoqueCRUDcomJAVA/raw/d8b4e40508335e1eb8bbc4ea54fc789f87db79b4/src/dao/ProdutoDAOTXT.java",
    "contents_url": "https://api.github.com/repos/figueirapedro/estoqueCRUDcomJAVA/contents/src/dao/ProdutoDAOTXT.java?ref=d8b4e40508335e1eb8bbc4ea54fc789f87db79b4",
    "patch": "@@ -0,0 +1,147 @@\n+/*\r\n+ * To change this license header, choose License Headers in Project Properties.\r\n+ * To change this template file, choose Tools | Templates\r\n+ * and open the template in the editor.\r\n+ */\r\n+package dao;\r\n+\r\n+import java.sql.PreparedStatement;\r\n+import java.sql.ResultSet;\r\n+import java.util.ArrayList;\r\n+import modelo.Produto;\r\n+import java.io.File;  // Import the File class\r\n+import java.io.FileNotFoundException;  // Import this class to handle errors\r\n+import java.util.Scanner; // Import the Scanner class to read text files\r\n+import java.io.FileWriter;   // Import the FileWriter class\r\n+import java.io.IOException;  // Import the IOException class to handle errors\r\n+\r\n+\r\n+/**\r\n+ *\r\n+ * @author Escola\r\n+ */\r\n+public class ProdutoDAOTXT {\r\n+\r\n+    public void salvar(ArrayList<Produto> dado) {\r\n+        String estoque = \"\";\r\n+        \r\n+        for(Produto a : dado){\r\n+            estoque = estoque + a.produtoParaString();\r\n+        }\r\n+\r\n+        try {\r\n+            File myObj = new File(\"estoque.csv\");\r\n+            \r\n+            if (myObj.createNewFile()) \r\n+                System.out.println(\"Arquivo Criado: \" + myObj.getName());\r\n+            \r\n+            \r\n+            FileWriter myWriter = new FileWriter(\"estoque.csv\");\r\n+            myWriter.write(estoque);\r\n+            myWriter.close();\r\n+            System.out.println(\"Estoque salvo com sucesso!\");\r\n+        } catch (IOException e) {\r\n+            System.out.println(\"An error occurred.\");\r\n+            e.printStackTrace();\r\n+        }\r\n+    }\r\n+\r\n+    public void salvar(Produto objProd) {\r\n+            \r\n+        ArrayList<Produto> dado = new ArrayList();\r\n+            \r\n+            if(buscar(objProd.getCodigo()) == null){\r\n+                dado.add(objProd);\r\n+                salvar(dado);            \r\n+            } else {\r\n+                salvar(editar(objProd));\r\n+            }\r\n+    }\r\n+\r\n+    public void deletar(Produto objProd) {\r\n+\r\n+        ArrayList<Produto> dado = new ArrayList();\r\n+        dado = listarTodos();\r\n+\r\n+        for (Produto a : dado) {\r\n+            if (a.getCodigo().equals(objProd.getCodigo())) {\r\n+                dado.remove(a);\r\n+            }\r\n+            salvar(dado);\r\n+            \r\n+            System.out.println(\"Produto foi removido!\");\r\n+            return;\r\n+        }\r\n+\r\n+        System.out.println(\"Produto n�o foi encontrado!\");\r\n+    }\r\n+\r\n+    public Produto buscar(String codigo) {\r\n+\r\n+        ArrayList<Produto> dado = new ArrayList();\r\n+        dado = listarTodos();\r\n+\r\n+        for (Produto a : dado) {\r\n+            if (a.getCodigo().equals(codigo)) {\r\n+                return a;\r\n+            }\r\n+        }\r\n+        \r\n+        return null;\r\n+    }\r\n+    \r\n+     public ArrayList<Produto> editar(Produto objProd) {\r\n+\r\n+        ArrayList<Produto> dado = new ArrayList();\r\n+        dado = listarTodos();\r\n+        \r\n+        int i;\r\n+        \r\n+        for (Produto a : dado){\r\n+            if(a.getCodigo().equals(buscar(objProd.getCodigo()).getCodigo()))\r\n+                dado.remove(dado.indexOf(a)); break;\r\n+        }\r\n+        \r\n+        dado.add(objProd);\r\n+        \r\n+        return dado;        \r\n+    }\r\n+\r\n+    public ArrayList<Produto> listarTodos() {\r\n+        try {\r\n+\r\n+            ArrayList<Produto> dado = new ArrayList();\r\n+            Produto produto;\r\n+\r\n+            File myObj = new File(\"estoque.csv\");\r\n+            Scanner myReader = new Scanner(myObj);\r\n+            while (myReader.hasNextLine()) {\r\n+\r\n+                String data[] = myReader.nextLine().split(\",\");\r\n+\r\n+                produto = new Produto(data[0]);\r\n+                produto.setDtEntrada(data[1]);\r\n+                produto.setLocalCompra(data[2]);\r\n+                produto.setTipo(data[3]);\r\n+                produto.setMarca(data[4]);\r\n+                produto.setCaracteristicas(data[5]);\r\n+                produto.setTamanho(data[6]);\r\n+                produto.setCor(data[7]);\r\n+                produto.setValorEtiqueta(data[8]);\r\n+                produto.setValorPago(data[9]);\r\n+                produto.setValorMargem(data[10]);\r\n+                produto.setPrecoSugerido(data[11]);\r\n+\r\n+                dado.add(produto);\r\n+\r\n+            }\r\n+\r\n+            return dado;\r\n+        } catch (FileNotFoundException e) {\r\n+            e.getMessage();\r\n+            System.out.println(\"Ocorreu um Erro, retornando...\");\r\n+            return null;\r\n+        }\r\n+    }\r\n+    \r\n+}\r"
  },
  {
    "sha": "ba5f6192df96053933b67c34b5e52d347570e2ab",
    "filename": "src/factory/ConnectionFactory.java",
    "status": "added",
    "additions": 21,
    "deletions": 0,
    "changes": 21,
    "blob_url": "https://github.com/figueirapedro/estoqueCRUDcomJAVA/blob/d8b4e40508335e1eb8bbc4ea54fc789f87db79b4/src/factory/ConnectionFactory.java",
    "raw_url": "https://github.com/figueirapedro/estoqueCRUDcomJAVA/raw/d8b4e40508335e1eb8bbc4ea54fc789f87db79b4/src/factory/ConnectionFactory.java",
    "contents_url": "https://api.github.com/repos/figueirapedro/estoqueCRUDcomJAVA/contents/src/factory/ConnectionFactory.java?ref=d8b4e40508335e1eb8bbc4ea54fc789f87db79b4",
    "patch": "@@ -0,0 +1,21 @@\n+// situa em qual package ou ?pacote? est� a classe \r\n+package factory;\r\n+// faz as importa��es de classes necess�rias para o funcionamento do programa \r\n+\r\n+import java.sql.Connection;\r\n+// conex�o SQL para Java \r\n+import java.sql.DriverManager;\r\n+// driver de conex�o SQL para Java \r\n+import java.sql.SQLException;\r\n+// classe para tratamento de exce��es \r\n+\r\n+public class ConnectionFactory {\r\n+\r\n+    public Connection getConnection() {\r\n+        try {\r\n+            return DriverManager.getConnection(\"jdbc:mysql://sql10.freemysqlhosting.net/sql10398590\", \"sql10398590\", \"k8Zu6UaKKw\");\r\n+        } catch (SQLException excecao) {\r\n+            throw new RuntimeException(excecao);\r\n+        }\r\n+    }\r\n+}\r"
  },
  {
    "sha": "43fafb303be0ed3c93b3e52b2e34b57ade5ceec6",
    "filename": "src/modelo/ModelTable.java",
    "status": "added",
    "additions": 54,
    "deletions": 0,
    "changes": 54,
    "blob_url": "https://github.com/figueirapedro/estoqueCRUDcomJAVA/blob/d8b4e40508335e1eb8bbc4ea54fc789f87db79b4/src/modelo/ModelTable.java",
    "raw_url": "https://github.com/figueirapedro/estoqueCRUDcomJAVA/raw/d8b4e40508335e1eb8bbc4ea54fc789f87db79b4/src/modelo/ModelTable.java",
    "contents_url": "https://api.github.com/repos/figueirapedro/estoqueCRUDcomJAVA/contents/src/modelo/ModelTable.java?ref=d8b4e40508335e1eb8bbc4ea54fc789f87db79b4",
    "patch": "@@ -0,0 +1,54 @@\n+package modelo;\r\n+\r\n+/*\r\n+ * To change this license header, choose License Headers in Project Properties.\r\n+ * To change this template file, choose Tools | Templates\r\n+ * and open the template in the editor.\r\n+ *\r\n+ * fonte: http://devsv.wordpress.com/2012/07/08/como-implementar-um-tablemodel/\r\n+ */\r\n+import java.util.ArrayList;\r\n+import javax.swing.table.AbstractTableModel;\r\n+\r\n+// Implementacao do modelo da minha JTable.\r\n+public class ModelTable extends AbstractTableModel {\r\n+\r\n+    private ArrayList linhas = null;\r\n+    private String[] colunas = null;\r\n+\r\n+    public ModelTable(ArrayList lin, String[] col) {\r\n+        this.linhas = lin;\r\n+        this.colunas = col;\r\n+    }\r\n+\r\n+    public ArrayList getLinhas() {\r\n+        return linhas;\r\n+    }\r\n+\r\n+    public String[] getColunas() {\r\n+        return colunas;\r\n+    }\r\n+\r\n+    public int getRowCount() {\r\n+        return linhas.size();\r\n+    }\r\n+\r\n+    public int getColumnCount() {\r\n+        return colunas.length;\r\n+    }\r\n+\r\n+    // Expecifica o nome das colunas na tabela\r\n+    @Override\r\n+    public String getColumnName(int numCol) {\r\n+        return colunas[numCol];\r\n+    }\r\n+\r\n+    // Retornas as informacoes na tabela\r\n+    public Object getValueAt(int numLinhas, int numColunas) {\r\n+\r\n+        Object[] linha = (Object[]) getLinhas().get(numLinhas);\r\n+\r\n+        return linha[numColunas];\r\n+    }\r\n+\r\n+}\r"
  },
  {
    "sha": "3d10f1ef7f33ad0a297537975206d4d47df925c6",
    "filename": "src/modelo/Produto.java",
    "status": "added",
    "additions": 162,
    "deletions": 0,
    "changes": 162,
    "blob_url": "https://github.com/figueirapedro/estoqueCRUDcomJAVA/blob/d8b4e40508335e1eb8bbc4ea54fc789f87db79b4/src/modelo/Produto.java",
    "raw_url": "https://github.com/figueirapedro/estoqueCRUDcomJAVA/raw/d8b4e40508335e1eb8bbc4ea54fc789f87db79b4/src/modelo/Produto.java",
    "contents_url": "https://api.github.com/repos/figueirapedro/estoqueCRUDcomJAVA/contents/src/modelo/Produto.java?ref=d8b4e40508335e1eb8bbc4ea54fc789f87db79b4",
    "patch": "@@ -0,0 +1,162 @@\n+/*\r\n+ * To change this license header, choose License Headers in Project Properties.\r\n+ * To change this template file, choose Tools | Templates\r\n+ * and open the template in the editor.\r\n+ */\r\n+package modelo;\r\n+\r\n+/**\r\n+ *\r\n+ * @author upper\r\n+ */\r\n+public class Produto {\r\n+\r\n+    private String codigo;\r\n+    private String data_entrada;\r\n+    private String local_compra;\r\n+    private String tipo;\r\n+    private String marca;\r\n+    private String caracteristicas;\r\n+    private String tamanho;\r\n+    private String cor;\r\n+    private String valor_etiqueta;\r\n+    private String valor_pago;\r\n+    private String valor_margem;\r\n+    private String preco_sugerido;\r\n+    private String[] colunas = new String[]{\"codigo\", \"data_entrada\", \"local_compra\", \"tipo\",\r\n+        \"marca\", \"caracteristicas\", \"tamanho\", \"cor\", \"valor_etiqueta\", \"valor_pago\", \"valor_margem\",\r\n+        \"preco_sugerido\"};\r\n+\r\n+    public Produto(String codigo) {\r\n+        this.codigo = codigo;\r\n+    }\r\n+\r\n+    public String getCodigo() {\r\n+        return codigo;\r\n+    }\r\n+\r\n+    public void setCodigo(String codigo) {\r\n+        this.codigo = codigo;\r\n+    }\r\n+\r\n+    public String getDtEntrada() {\r\n+        return data_entrada;\r\n+    }\r\n+\r\n+    public void setDtEntrada(String data_entrada) {\r\n+        this.data_entrada = data_entrada;\r\n+\r\n+    }\r\n+\r\n+    public String getLocalCompra() {\r\n+        return local_compra;\r\n+    }\r\n+\r\n+    public void setLocalCompra(String local_compra) {\r\n+        this.local_compra = local_compra;\r\n+    }\r\n+\r\n+    public String getTipo() {\r\n+        return tipo;\r\n+    }\r\n+\r\n+    public void setTipo(String tipo) {\r\n+        this.tipo = tipo;\r\n+    }\r\n+\r\n+    public String getMarca() {\r\n+        return marca;\r\n+    }\r\n+\r\n+    public void setMarca(String marca) {\r\n+        this.marca = marca;\r\n+    }\r\n+\r\n+    public String getCaracteristicas() {\r\n+        return caracteristicas;\r\n+    }\r\n+\r\n+    public void setCaracteristicas(String caracteristicas) {\r\n+        this.caracteristicas = caracteristicas;\r\n+    }\r\n+\r\n+    public String getTamanho() {\r\n+        return tamanho;\r\n+    }\r\n+\r\n+    public void setTamanho(String tamanho) {\r\n+        this.tamanho = tamanho;\r\n+    }\r\n+\r\n+    public String getCor() {\r\n+        return cor;\r\n+    }\r\n+\r\n+    public void setCor(String cor) {\r\n+        this.cor = cor;\r\n+    }\r\n+\r\n+    public String getValorEtiqueta() {\r\n+        return valor_etiqueta;\r\n+    }\r\n+\r\n+    public void setValorEtiqueta(String valor_etiqueta) {\r\n+        this.valor_etiqueta = valor_etiqueta;\r\n+    }\r\n+\r\n+    public String getValorPago() {\r\n+        return valor_pago;\r\n+    }\r\n+\r\n+    public void setValorPago(String valor_pago) {\r\n+        this.valor_pago = valor_pago;\r\n+    }\r\n+\r\n+    public String getValorMargem() {\r\n+        return valor_margem;\r\n+    }\r\n+\r\n+    public void setValorMargem(String valor_margem) {\r\n+        this.valor_margem = valor_margem;\r\n+    }\r\n+\r\n+    public String getPrecoSugerido() {\r\n+        return preco_sugerido;\r\n+    }\r\n+\r\n+    public void setPrecoSugerido(String preco_sugerido) {\r\n+        this.preco_sugerido = preco_sugerido;\r\n+    }\r\n+\r\n+    public String[] getColunas() {\r\n+        return colunas;\r\n+    }\r\n+\r\n+    public void setColunas(String[] Colunas) {\r\n+        this.colunas = Colunas;\r\n+    }\r\n+\r\n+    public void imprimirProduto() {\r\n+        System.out.printf(\"C�digo: %s | Data de Entrada: %s | Local da Compra: %s | Tipo: %s | Marca: %s | Caracteristicas: %s | Tamanho: %s | Cor: %s | Valor Etiqueta: %s | Valor Pago: %s | Valor Margem: %s | Pre�o Sugerido: %s\", new Object[]{\r\n+            getCodigo(),\r\n+            getDtEntrada(),\r\n+            getLocalCompra(),\r\n+            getTipo(),\r\n+            getMarca(),\r\n+            getCaracteristicas(),\r\n+            getTamanho(),\r\n+            getCor(),\r\n+            getValorEtiqueta(),\r\n+            getValorPago(),\r\n+            getValorMargem(),\r\n+            getPrecoSugerido()});\r\n+    }\r\n+\r\n+    public String produtoParaString() {\r\n+\r\n+        String[] texto = {getCodigo(), getDtEntrada(), getLocalCompra(), getTipo(), getMarca(), getCaracteristicas(), getTamanho(), getCor(), getValorEtiqueta(), getValorPago(), getValorMargem(), getPrecoSugerido(), \"\\n\"};\r\n+        String a = String.join(\",\", texto);\r\n+        return a;\r\n+    }\r\n+\r\n+}\r"
  }
]
