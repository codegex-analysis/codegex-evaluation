[
  {
    "sha": "ff74531b3af62ebd12ce1b2e9343ca898748d52d",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 41,
    "deletions": 2,
    "changes": 43,
    "blob_url": "https://github.com/Mikhail-Meshcheriakov/happy-market/blob/fc8218cbf071e85f7bc73e89cd2874aefae78dc9/pom.xml",
    "raw_url": "https://github.com/Mikhail-Meshcheriakov/happy-market/raw/fc8218cbf071e85f7bc73e89cd2874aefae78dc9/pom.xml",
    "contents_url": "https://api.github.com/repos/Mikhail-Meshcheriakov/happy-market/contents/pom.xml?ref=fc8218cbf071e85f7bc73e89cd2874aefae78dc9",
    "patch": "@@ -23,19 +23,22 @@\n \t\t\t<groupId>org.springframework.boot</groupId>\n \t\t\t<artifactId>spring-boot-starter-data-jpa</artifactId>\n \t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.springframework.boot</groupId>\n+\t\t\t<artifactId>spring-boot-starter-security</artifactId>\n+\t\t</dependency>\n \t\t<dependency>\n \t\t\t<groupId>org.springframework.boot</groupId>\n \t\t\t<artifactId>spring-boot-starter-web</artifactId>\n \t\t</dependency>\n \t\t<dependency>\n \t\t\t<groupId>org.springframework.boot</groupId>\n-\t\t\t<artifactId>spring-boot-starter-security</artifactId>\n+\t\t\t<artifactId>spring-boot-starter-web-services</artifactId>\n \t\t</dependency>\n \t\t<dependency>\n \t\t\t<groupId>org.flywaydb</groupId>\n \t\t\t<artifactId>flyway-core</artifactId>\n \t\t</dependency>\n-\n \t\t<dependency>\n \t\t\t<groupId>com.h2database</groupId>\n \t\t\t<artifactId>h2</artifactId>\n@@ -56,6 +59,21 @@\n \t\t\t<artifactId>spring-boot-starter-test</artifactId>\n \t\t\t<scope>test</scope>\n \t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>javax.xml.bind</groupId>\n+\t\t\t<artifactId>jaxb-api</artifactId>\n+\t\t\t<version>2.3.1</version>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.glassfish.jaxb</groupId>\n+\t\t\t<artifactId>jaxb-runtime</artifactId>\n+\t\t\t<version>2.3.1</version>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>wsdl4j</groupId>\n+\t\t\t<artifactId>wsdl4j</artifactId>\n+\t\t\t<version>1.6.2</version>\n+\t\t</dependency>\n \t</dependencies>\n \n \t<build>\n@@ -72,6 +90,27 @@\n \t\t\t\t\t</excludes>\n \t\t\t\t</configuration>\n \t\t\t</plugin>\n+\t\t\t<plugin>\n+\t\t\t\t<groupId>org.codehaus.mojo</groupId>\n+\t\t\t\t<artifactId>jaxb2-maven-plugin</artifactId>\n+\t\t\t\t<version>2.5.0</version>\n+\t\t\t\t<executions>\n+\t\t\t\t\t<execution>\n+\t\t\t\t\t\t<id>xjc</id>\n+\t\t\t\t\t\t<goals>\n+\t\t\t\t\t\t\t<goal>xjc</goal>\n+\t\t\t\t\t\t</goals>\n+\t\t\t\t\t</execution>\n+\t\t\t\t</executions>\n+\t\t\t\t<configuration>\n+\t\t\t\t\t<sources>\n+\t\t\t\t\t\t<source>${project.basedir}/src/main/resources/products.xsd</source>\n+\t\t\t\t\t</sources>\n+\t\t\t\t\t<!--\t\t\t\t\t<packageName>soap</packageName>-->\n+\t\t\t\t\t<!--\t\t\t\t\t<outputDirectory>${project.basedir}/src/main/java/com/flamexander/spring/ws/soap</outputDirectory>-->\n+\t\t\t\t\t<!--\t\t\t\t\t<clearOutputDir>false</clearOutputDir>-->\n+\t\t\t\t</configuration>\n+\t\t\t</plugin>\n \t\t</plugins>\n \t</build>\n </project>"
  },
  {
    "sha": "b8736dea6b8dec7d2d69d738efd756e96dfeab81",
    "filename": "src/main/java/ru/geekbrains/happy/market/configs/WebServiceConfig.java",
    "status": "added",
    "additions": 41,
    "deletions": 0,
    "changes": 41,
    "blob_url": "https://github.com/Mikhail-Meshcheriakov/happy-market/blob/fc8218cbf071e85f7bc73e89cd2874aefae78dc9/src/main/java/ru/geekbrains/happy/market/configs/WebServiceConfig.java",
    "raw_url": "https://github.com/Mikhail-Meshcheriakov/happy-market/raw/fc8218cbf071e85f7bc73e89cd2874aefae78dc9/src/main/java/ru/geekbrains/happy/market/configs/WebServiceConfig.java",
    "contents_url": "https://api.github.com/repos/Mikhail-Meshcheriakov/happy-market/contents/src/main/java/ru/geekbrains/happy/market/configs/WebServiceConfig.java?ref=fc8218cbf071e85f7bc73e89cd2874aefae78dc9",
    "patch": "@@ -0,0 +1,41 @@\n+package ru.geekbrains.happy.market.configs;\n+\n+import org.springframework.boot.web.servlet.ServletRegistrationBean;\n+import org.springframework.context.ApplicationContext;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.core.io.ClassPathResource;\n+import org.springframework.ws.config.annotation.EnableWs;\n+import org.springframework.ws.config.annotation.WsConfigurerAdapter;\n+import org.springframework.ws.transport.http.MessageDispatcherServlet;\n+import org.springframework.ws.wsdl.wsdl11.DefaultWsdl11Definition;\n+import org.springframework.xml.xsd.SimpleXsdSchema;\n+import org.springframework.xml.xsd.XsdSchema;\n+\n+@EnableWs\n+@Configuration\n+public class WebServiceConfig extends WsConfigurerAdapter {\n+    @Bean\n+    public ServletRegistrationBean messageDispatcherServlet(ApplicationContext applicationContext) {\n+        MessageDispatcherServlet servlet = new MessageDispatcherServlet();\n+        servlet.setApplicationContext(applicationContext);\n+        servlet.setTransformWsdlLocations(true);\n+        return new ServletRegistrationBean(servlet, \"/ws/*\");\n+    }\n+\n+    // http://localhost:8080/ws/products.wsdl\n+    @Bean(name = \"products\")\n+    public DefaultWsdl11Definition productsWsdl11Definition(XsdSchema productsSchema) {\n+        DefaultWsdl11Definition wsdl11Definition = new DefaultWsdl11Definition();\n+        wsdl11Definition.setPortTypeName(\"ProductsPort\");\n+        wsdl11Definition.setLocationUri(\"/ws\");\n+        wsdl11Definition.setTargetNamespace(\"http://www.geekbrains.ru/happy/market/ws/products\");\n+        wsdl11Definition.setSchema(productsSchema);\n+        return wsdl11Definition;\n+    }\n+\n+    @Bean\n+    public XsdSchema productsSchema() {\n+        return new SimpleXsdSchema(new ClassPathResource(\"products.xsd\"));\n+    }\n+}"
  },
  {
    "sha": "054e5d12218caf16a95730f96e71d6a4c8c9c01c",
    "filename": "src/main/java/ru/geekbrains/happy/market/endpoints/ProductEndpoint.java",
    "status": "added",
    "additions": 33,
    "deletions": 0,
    "changes": 33,
    "blob_url": "https://github.com/Mikhail-Meshcheriakov/happy-market/blob/fc8218cbf071e85f7bc73e89cd2874aefae78dc9/src/main/java/ru/geekbrains/happy/market/endpoints/ProductEndpoint.java",
    "raw_url": "https://github.com/Mikhail-Meshcheriakov/happy-market/raw/fc8218cbf071e85f7bc73e89cd2874aefae78dc9/src/main/java/ru/geekbrains/happy/market/endpoints/ProductEndpoint.java",
    "contents_url": "https://api.github.com/repos/Mikhail-Meshcheriakov/happy-market/contents/src/main/java/ru/geekbrains/happy/market/endpoints/ProductEndpoint.java?ref=fc8218cbf071e85f7bc73e89cd2874aefae78dc9",
    "patch": "@@ -0,0 +1,33 @@\n+package ru.geekbrains.happy.market.endpoints;\n+\n+import lombok.extern.slf4j.Slf4j;\n+import ru.geekbrains.happy.market.services.ProductServiceSOAP;\n+import ru.geekbrains.happy.market.soap.products.*;\n+import lombok.RequiredArgsConstructor;\n+import org.springframework.ws.server.endpoint.annotation.Endpoint;\n+import org.springframework.ws.server.endpoint.annotation.PayloadRoot;\n+import org.springframework.ws.server.endpoint.annotation.RequestPayload;\n+import org.springframework.ws.server.endpoint.annotation.ResponsePayload;\n+\n+@Endpoint\n+@RequiredArgsConstructor\n+public class ProductEndpoint {\n+    private static final String NAMESPACE_URI = \"http://www.geekbrains.ru/happy/market/ws/products\";\n+    private final ProductServiceSOAP productServiceSOAP;\n+\n+    @PayloadRoot(namespace = NAMESPACE_URI, localPart = \"getProductByIdRequest\")\n+    @ResponsePayload\n+    public GetProductByIdResponse getProductByiD(@RequestPayload GetProductByIdRequest request) {\n+        GetProductByIdResponse response = new GetProductByIdResponse();\n+        response.setProduct(productServiceSOAP.getProductById(request.getId()));\n+        return response;\n+    }\n+\n+    @PayloadRoot(namespace = NAMESPACE_URI, localPart = \"getAllProductsRequest\")\n+    @ResponsePayload\n+    public GetAllProductsResponse getAllProducts(@RequestPayload GetAllProductsRequest request) {\n+        GetAllProductsResponse response = new GetAllProductsResponse();\n+        productServiceSOAP.getAllProducts().forEach(response.getProducts()::add);\n+        return response;\n+    }\n+}"
  },
  {
    "sha": "633fe35eea9ee712d7c3649452f33c5d00ee4cf8",
    "filename": "src/main/java/ru/geekbrains/happy/market/services/ProductService.java",
    "status": "modified",
    "additions": 0,
    "deletions": 3,
    "changes": 3,
    "blob_url": "https://github.com/Mikhail-Meshcheriakov/happy-market/blob/fc8218cbf071e85f7bc73e89cd2874aefae78dc9/src/main/java/ru/geekbrains/happy/market/services/ProductService.java",
    "raw_url": "https://github.com/Mikhail-Meshcheriakov/happy-market/raw/fc8218cbf071e85f7bc73e89cd2874aefae78dc9/src/main/java/ru/geekbrains/happy/market/services/ProductService.java",
    "contents_url": "https://api.github.com/repos/Mikhail-Meshcheriakov/happy-market/contents/src/main/java/ru/geekbrains/happy/market/services/ProductService.java?ref=fc8218cbf071e85f7bc73e89cd2874aefae78dc9",
    "patch": "@@ -2,17 +2,14 @@\n \n import lombok.RequiredArgsConstructor;\n import org.springframework.data.domain.Page;\n-import org.springframework.data.domain.PageImpl;\n import org.springframework.data.domain.PageRequest;\n import org.springframework.data.jpa.domain.Specification;\n import org.springframework.stereotype.Service;\n import ru.geekbrains.happy.market.dto.ProductDto;\n import ru.geekbrains.happy.market.model.Product;\n import ru.geekbrains.happy.market.repositories.ProductRepository;\n \n-import java.util.List;\n import java.util.Optional;\n-import java.util.stream.Collectors;\n \n @Service\n @RequiredArgsConstructor"
  },
  {
    "sha": "bd3299e9c66680ed8f7bd298fea99d2bd630b81f",
    "filename": "src/main/java/ru/geekbrains/happy/market/services/ProductServiceSOAP.java",
    "status": "added",
    "additions": 35,
    "deletions": 0,
    "changes": 35,
    "blob_url": "https://github.com/Mikhail-Meshcheriakov/happy-market/blob/fc8218cbf071e85f7bc73e89cd2874aefae78dc9/src/main/java/ru/geekbrains/happy/market/services/ProductServiceSOAP.java",
    "raw_url": "https://github.com/Mikhail-Meshcheriakov/happy-market/raw/fc8218cbf071e85f7bc73e89cd2874aefae78dc9/src/main/java/ru/geekbrains/happy/market/services/ProductServiceSOAP.java",
    "contents_url": "https://api.github.com/repos/Mikhail-Meshcheriakov/happy-market/contents/src/main/java/ru/geekbrains/happy/market/services/ProductServiceSOAP.java?ref=fc8218cbf071e85f7bc73e89cd2874aefae78dc9",
    "patch": "@@ -0,0 +1,35 @@\n+package ru.geekbrains.happy.market.services;\n+\n+import lombok.RequiredArgsConstructor;\n+import lombok.extern.slf4j.Slf4j;\n+import org.springframework.stereotype.Service;\n+import ru.geekbrains.happy.market.model.Product;\n+import ru.geekbrains.happy.market.repositories.ProductRepository;\n+import ru.geekbrains.happy.market.soap.products.ProductSOAP;\n+\n+import java.util.List;\n+import java.util.function.Function;\n+import java.util.stream.Collectors;\n+\n+@Service\n+@RequiredArgsConstructor\n+public class ProductServiceSOAP {\n+    private final ProductRepository productRepository;\n+    private final ProductService productService;\n+\n+    public static final Function<Product, ProductSOAP> functionEntityToSoap = product -> {\n+        ProductSOAP productSOAP = new ProductSOAP();\n+        productSOAP.setId(product.getId());\n+        productSOAP.setTitle(product.getTitle());\n+        productSOAP.setPrice(product.getPrice());\n+        return productSOAP;\n+    };\n+\n+    public List<ProductSOAP> getAllProducts() {\n+        return productRepository.findAll().stream().map(functionEntityToSoap).collect(Collectors.toList());\n+    }\n+\n+    public ProductSOAP getProductById(Long id) {\n+        return productRepository.findById(id).map(functionEntityToSoap).get();\n+    }\n+}"
  },
  {
    "sha": "28a1343b8192f4384af9dc381f01391af86f30bd",
    "filename": "src/main/java/ru/geekbrains/happy/market/soap/products/GetAllProductsRequest.java",
    "status": "added",
    "additions": 39,
    "deletions": 0,
    "changes": 39,
    "blob_url": "https://github.com/Mikhail-Meshcheriakov/happy-market/blob/fc8218cbf071e85f7bc73e89cd2874aefae78dc9/src/main/java/ru/geekbrains/happy/market/soap/products/GetAllProductsRequest.java",
    "raw_url": "https://github.com/Mikhail-Meshcheriakov/happy-market/raw/fc8218cbf071e85f7bc73e89cd2874aefae78dc9/src/main/java/ru/geekbrains/happy/market/soap/products/GetAllProductsRequest.java",
    "contents_url": "https://api.github.com/repos/Mikhail-Meshcheriakov/happy-market/contents/src/main/java/ru/geekbrains/happy/market/soap/products/GetAllProductsRequest.java?ref=fc8218cbf071e85f7bc73e89cd2874aefae78dc9",
    "patch": "@@ -0,0 +1,39 @@\n+//\n+// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.2 \n+// See <a href=\"https://javaee.github.io/jaxb-v2/\">https://javaee.github.io/jaxb-v2/</a> \n+// Any modifications to this file will be lost upon recompilation of the source schema. \n+// Generated on: 2021.03.04 at 04:20:28 PM ICT \n+//\n+\n+\n+package ru.geekbrains.happy.market.soap.products;\n+\n+import javax.xml.bind.annotation.XmlAccessType;\n+import javax.xml.bind.annotation.XmlAccessorType;\n+import javax.xml.bind.annotation.XmlRootElement;\n+import javax.xml.bind.annotation.XmlType;\n+\n+\n+/**\n+ * <p>Java class for anonymous complex type.\n+ * \n+ * <p>The following schema fragment specifies the expected content contained within this class.\n+ * \n+ * <pre>\n+ * &lt;complexType&gt;\n+ *   &lt;complexContent&gt;\n+ *     &lt;restriction base=\"{http://www.w3.org/2001/XMLSchema}anyType\"&gt;\n+ *     &lt;/restriction&gt;\n+ *   &lt;/complexContent&gt;\n+ * &lt;/complexType&gt;\n+ * </pre>\n+ * \n+ * \n+ */\n+@XmlAccessorType(XmlAccessType.FIELD)\n+@XmlType(name = \"\")\n+@XmlRootElement(name = \"getAllProductsRequest\")\n+public class GetAllProductsRequest {\n+\n+\n+}"
  },
  {
    "sha": "2b6447f1fe15d3f7bea9368ceeb495994600e50a",
    "filename": "src/main/java/ru/geekbrains/happy/market/soap/products/GetAllProductsResponse.java",
    "status": "added",
    "additions": 78,
    "deletions": 0,
    "changes": 78,
    "blob_url": "https://github.com/Mikhail-Meshcheriakov/happy-market/blob/fc8218cbf071e85f7bc73e89cd2874aefae78dc9/src/main/java/ru/geekbrains/happy/market/soap/products/GetAllProductsResponse.java",
    "raw_url": "https://github.com/Mikhail-Meshcheriakov/happy-market/raw/fc8218cbf071e85f7bc73e89cd2874aefae78dc9/src/main/java/ru/geekbrains/happy/market/soap/products/GetAllProductsResponse.java",
    "contents_url": "https://api.github.com/repos/Mikhail-Meshcheriakov/happy-market/contents/src/main/java/ru/geekbrains/happy/market/soap/products/GetAllProductsResponse.java?ref=fc8218cbf071e85f7bc73e89cd2874aefae78dc9",
    "patch": "@@ -0,0 +1,78 @@\n+//\n+// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.2 \n+// See <a href=\"https://javaee.github.io/jaxb-v2/\">https://javaee.github.io/jaxb-v2/</a> \n+// Any modifications to this file will be lost upon recompilation of the source schema. \n+// Generated on: 2021.03.04 at 04:20:28 PM ICT \n+//\n+\n+\n+package ru.geekbrains.happy.market.soap.products;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import javax.xml.bind.annotation.XmlAccessType;\n+import javax.xml.bind.annotation.XmlAccessorType;\n+import javax.xml.bind.annotation.XmlElement;\n+import javax.xml.bind.annotation.XmlRootElement;\n+import javax.xml.bind.annotation.XmlType;\n+\n+\n+/**\n+ * <p>Java class for anonymous complex type.\n+ * \n+ * <p>The following schema fragment specifies the expected content contained within this class.\n+ * \n+ * <pre>\n+ * &lt;complexType&gt;\n+ *   &lt;complexContent&gt;\n+ *     &lt;restriction base=\"{http://www.w3.org/2001/XMLSchema}anyType\"&gt;\n+ *       &lt;sequence&gt;\n+ *         &lt;element name=\"products\" type=\"{http://www.geekbrains.ru/happy/market/products}product\" maxOccurs=\"unbounded\"/&gt;\n+ *       &lt;/sequence&gt;\n+ *     &lt;/restriction&gt;\n+ *   &lt;/complexContent&gt;\n+ * &lt;/complexType&gt;\n+ * </pre>\n+ * \n+ * \n+ */\n+@XmlAccessorType(XmlAccessType.FIELD)\n+@XmlType(name = \"\", propOrder = {\n+    \"products\"\n+})\n+@XmlRootElement(name = \"getAllProductsResponse\")\n+public class GetAllProductsResponse {\n+\n+    @XmlElement(required = true)\n+    protected List<ProductSOAP> products;\n+\n+    /**\n+     * Gets the value of the products property.\n+     * \n+     * <p>\n+     * This accessor method returns a reference to the live list,\n+     * not a snapshot. Therefore any modification you make to the\n+     * returned list will be present inside the JAXB object.\n+     * This is why there is not a <CODE>set</CODE> method for the products property.\n+     * \n+     * <p>\n+     * For example, to add a new item, do as follows:\n+     * <pre>\n+     *    getProducts().add(newItem);\n+     * </pre>\n+     * \n+     * \n+     * <p>\n+     * Objects of the following type(s) are allowed in the list\n+     * {@link ProductSOAP }\n+     * \n+     * \n+     */\n+    public List<ProductSOAP> getProducts() {\n+        if (products == null) {\n+            products = new ArrayList<ProductSOAP>();\n+        }\n+        return this.products;\n+    }\n+\n+}"
  },
  {
    "sha": "fb92847f72f170f28d4eb0d9fbb7f43791e74eaf",
    "filename": "src/main/java/ru/geekbrains/happy/market/soap/products/GetProductByIdRequest.java",
    "status": "added",
    "additions": 61,
    "deletions": 0,
    "changes": 61,
    "blob_url": "https://github.com/Mikhail-Meshcheriakov/happy-market/blob/fc8218cbf071e85f7bc73e89cd2874aefae78dc9/src/main/java/ru/geekbrains/happy/market/soap/products/GetProductByIdRequest.java",
    "raw_url": "https://github.com/Mikhail-Meshcheriakov/happy-market/raw/fc8218cbf071e85f7bc73e89cd2874aefae78dc9/src/main/java/ru/geekbrains/happy/market/soap/products/GetProductByIdRequest.java",
    "contents_url": "https://api.github.com/repos/Mikhail-Meshcheriakov/happy-market/contents/src/main/java/ru/geekbrains/happy/market/soap/products/GetProductByIdRequest.java?ref=fc8218cbf071e85f7bc73e89cd2874aefae78dc9",
    "patch": "@@ -0,0 +1,61 @@\n+//\n+// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.2 \n+// See <a href=\"https://javaee.github.io/jaxb-v2/\">https://javaee.github.io/jaxb-v2/</a> \n+// Any modifications to this file will be lost upon recompilation of the source schema. \n+// Generated on: 2021.03.04 at 04:20:28 PM ICT \n+//\n+\n+\n+package ru.geekbrains.happy.market.soap.products;\n+\n+import javax.xml.bind.annotation.XmlAccessType;\n+import javax.xml.bind.annotation.XmlAccessorType;\n+import javax.xml.bind.annotation.XmlRootElement;\n+import javax.xml.bind.annotation.XmlType;\n+\n+\n+/**\n+ * <p>Java class for anonymous complex type.\n+ * \n+ * <p>The following schema fragment specifies the expected content contained within this class.\n+ * \n+ * <pre>\n+ * &lt;complexType&gt;\n+ *   &lt;complexContent&gt;\n+ *     &lt;restriction base=\"{http://www.w3.org/2001/XMLSchema}anyType\"&gt;\n+ *       &lt;sequence&gt;\n+ *         &lt;element name=\"id\" type=\"{http://www.w3.org/2001/XMLSchema}long\"/&gt;\n+ *       &lt;/sequence&gt;\n+ *     &lt;/restriction&gt;\n+ *   &lt;/complexContent&gt;\n+ * &lt;/complexType&gt;\n+ * </pre>\n+ * \n+ * \n+ */\n+@XmlAccessorType(XmlAccessType.FIELD)\n+@XmlType(name = \"\", propOrder = {\n+    \"id\"\n+})\n+@XmlRootElement(name = \"getProductByIdRequest\")\n+public class GetProductByIdRequest {\n+\n+    protected long id;\n+\n+    /**\n+     * Gets the value of the id property.\n+     * \n+     */\n+    public long getId() {\n+        return id;\n+    }\n+\n+    /**\n+     * Sets the value of the id property.\n+     * \n+     */\n+    public void setId(long value) {\n+        this.id = value;\n+    }\n+\n+}"
  },
  {
    "sha": "bea506a8d48d3c84f4c1bee3426e6506cf37d439",
    "filename": "src/main/java/ru/geekbrains/happy/market/soap/products/GetProductByIdResponse.java",
    "status": "added",
    "additions": 71,
    "deletions": 0,
    "changes": 71,
    "blob_url": "https://github.com/Mikhail-Meshcheriakov/happy-market/blob/fc8218cbf071e85f7bc73e89cd2874aefae78dc9/src/main/java/ru/geekbrains/happy/market/soap/products/GetProductByIdResponse.java",
    "raw_url": "https://github.com/Mikhail-Meshcheriakov/happy-market/raw/fc8218cbf071e85f7bc73e89cd2874aefae78dc9/src/main/java/ru/geekbrains/happy/market/soap/products/GetProductByIdResponse.java",
    "contents_url": "https://api.github.com/repos/Mikhail-Meshcheriakov/happy-market/contents/src/main/java/ru/geekbrains/happy/market/soap/products/GetProductByIdResponse.java?ref=fc8218cbf071e85f7bc73e89cd2874aefae78dc9",
    "patch": "@@ -0,0 +1,71 @@\n+//\n+// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.2 \n+// See <a href=\"https://javaee.github.io/jaxb-v2/\">https://javaee.github.io/jaxb-v2/</a> \n+// Any modifications to this file will be lost upon recompilation of the source schema. \n+// Generated on: 2021.03.04 at 04:20:28 PM ICT \n+//\n+\n+\n+package ru.geekbrains.happy.market.soap.products;\n+\n+import javax.xml.bind.annotation.XmlAccessType;\n+import javax.xml.bind.annotation.XmlAccessorType;\n+import javax.xml.bind.annotation.XmlElement;\n+import javax.xml.bind.annotation.XmlRootElement;\n+import javax.xml.bind.annotation.XmlType;\n+\n+\n+/**\n+ * <p>Java class for anonymous complex type.\n+ * \n+ * <p>The following schema fragment specifies the expected content contained within this class.\n+ * \n+ * <pre>\n+ * &lt;complexType&gt;\n+ *   &lt;complexContent&gt;\n+ *     &lt;restriction base=\"{http://www.w3.org/2001/XMLSchema}anyType\"&gt;\n+ *       &lt;sequence&gt;\n+ *         &lt;element name=\"product\" type=\"{http://www.geekbrains.ru/happy/market/products}product\"/&gt;\n+ *       &lt;/sequence&gt;\n+ *     &lt;/restriction&gt;\n+ *   &lt;/complexContent&gt;\n+ * &lt;/complexType&gt;\n+ * </pre>\n+ * \n+ * \n+ */\n+@XmlAccessorType(XmlAccessType.FIELD)\n+@XmlType(name = \"\", propOrder = {\n+    \"product\"\n+})\n+@XmlRootElement(name = \"getProductByIdResponse\")\n+public class GetProductByIdResponse {\n+\n+    @XmlElement(required = true)\n+    protected ProductSOAP product;\n+\n+    /**\n+     * Gets the value of the product property.\n+     * \n+     * @return\n+     *     possible object is\n+     *     {@link ProductSOAP }\n+     *     \n+     */\n+    public ProductSOAP getProduct() {\n+        return product;\n+    }\n+\n+    /**\n+     * Sets the value of the product property.\n+     * \n+     * @param value\n+     *     allowed object is\n+     *     {@link ProductSOAP }\n+     *     \n+     */\n+    public void setProduct(ProductSOAP value) {\n+        this.product = value;\n+    }\n+\n+}"
  },
  {
    "sha": "e117101f9a24d6fcba4a7a98e7452a838c72ae7b",
    "filename": "src/main/java/ru/geekbrains/happy/market/soap/products/ObjectFactory.java",
    "status": "added",
    "additions": 79,
    "deletions": 0,
    "changes": 79,
    "blob_url": "https://github.com/Mikhail-Meshcheriakov/happy-market/blob/fc8218cbf071e85f7bc73e89cd2874aefae78dc9/src/main/java/ru/geekbrains/happy/market/soap/products/ObjectFactory.java",
    "raw_url": "https://github.com/Mikhail-Meshcheriakov/happy-market/raw/fc8218cbf071e85f7bc73e89cd2874aefae78dc9/src/main/java/ru/geekbrains/happy/market/soap/products/ObjectFactory.java",
    "contents_url": "https://api.github.com/repos/Mikhail-Meshcheriakov/happy-market/contents/src/main/java/ru/geekbrains/happy/market/soap/products/ObjectFactory.java?ref=fc8218cbf071e85f7bc73e89cd2874aefae78dc9",
    "patch": "@@ -0,0 +1,79 @@\n+//\n+// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.2 \n+// See <a href=\"https://javaee.github.io/jaxb-v2/\">https://javaee.github.io/jaxb-v2/</a> \n+// Any modifications to this file will be lost upon recompilation of the source schema. \n+// Generated on: 2021.03.04 at 04:20:28 PM ICT \n+//\n+\n+\n+package ru.geekbrains.happy.market.soap.products;\n+\n+import javax.xml.bind.annotation.XmlRegistry;\n+\n+\n+/**\n+ * This object contains factory methods for each \n+ * Java content interface and Java element interface \n+ * generated in the ru.geekbrains.happy.market.products package. \n+ * <p>An ObjectFactory allows you to programatically \n+ * construct new instances of the Java representation \n+ * for XML content. The Java representation of XML \n+ * content can consist of schema derived interfaces \n+ * and classes representing the binding of schema \n+ * type definitions, element declarations and model \n+ * groups.  Factory methods for each of these are \n+ * provided in this class.\n+ * \n+ */\n+@XmlRegistry\n+public class ObjectFactory {\n+\n+\n+    /**\n+     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: ru.geekbrains.happy.market.products\n+     * \n+     */\n+    public ObjectFactory() {\n+    }\n+\n+    /**\n+     * Create an instance of {@link GetProductByIdRequest }\n+     * \n+     */\n+    public GetProductByIdRequest createGetProductByIdRequest() {\n+        return new GetProductByIdRequest();\n+    }\n+\n+    /**\n+     * Create an instance of {@link GetAllProductsRequest }\n+     * \n+     */\n+    public GetAllProductsRequest createGetAllProductsRequest() {\n+        return new GetAllProductsRequest();\n+    }\n+\n+    /**\n+     * Create an instance of {@link GetProductByIdResponse }\n+     * \n+     */\n+    public GetProductByIdResponse createGetProductByIdResponse() {\n+        return new GetProductByIdResponse();\n+    }\n+\n+    /**\n+     * Create an instance of {@link ProductSOAP }\n+     * \n+     */\n+    public ProductSOAP createProduct() {\n+        return new ProductSOAP();\n+    }\n+\n+    /**\n+     * Create an instance of {@link GetAllProductsResponse }\n+     * \n+     */\n+    public GetAllProductsResponse createGetAllProductsResponse() {\n+        return new GetAllProductsResponse();\n+    }\n+\n+}"
  },
  {
    "sha": "39a74e60f1ba7758da6b874590a6b5efa6f38929",
    "filename": "src/main/java/ru/geekbrains/happy/market/soap/products/ProductSOAP.java",
    "status": "added",
    "additions": 107,
    "deletions": 0,
    "changes": 107,
    "blob_url": "https://github.com/Mikhail-Meshcheriakov/happy-market/blob/fc8218cbf071e85f7bc73e89cd2874aefae78dc9/src/main/java/ru/geekbrains/happy/market/soap/products/ProductSOAP.java",
    "raw_url": "https://github.com/Mikhail-Meshcheriakov/happy-market/raw/fc8218cbf071e85f7bc73e89cd2874aefae78dc9/src/main/java/ru/geekbrains/happy/market/soap/products/ProductSOAP.java",
    "contents_url": "https://api.github.com/repos/Mikhail-Meshcheriakov/happy-market/contents/src/main/java/ru/geekbrains/happy/market/soap/products/ProductSOAP.java?ref=fc8218cbf071e85f7bc73e89cd2874aefae78dc9",
    "patch": "@@ -0,0 +1,107 @@\n+//\n+// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.2 \n+// See <a href=\"https://javaee.github.io/jaxb-v2/\">https://javaee.github.io/jaxb-v2/</a> \n+// Any modifications to this file will be lost upon recompilation of the source schema. \n+// Generated on: 2021.03.04 at 04:20:28 PM ICT \n+//\n+\n+\n+package ru.geekbrains.happy.market.soap.products;\n+\n+import javax.xml.bind.annotation.XmlAccessType;\n+import javax.xml.bind.annotation.XmlAccessorType;\n+import javax.xml.bind.annotation.XmlElement;\n+import javax.xml.bind.annotation.XmlType;\n+\n+\n+/**\n+ * <p>Java class for product complex type.\n+ * \n+ * <p>The following schema fragment specifies the expected content contained within this class.\n+ * \n+ * <pre>\n+ * &lt;complexType name=\"product\"&gt;\n+ *   &lt;complexContent&gt;\n+ *     &lt;restriction base=\"{http://www.w3.org/2001/XMLSchema}anyType\"&gt;\n+ *       &lt;sequence&gt;\n+ *         &lt;element name=\"id\" type=\"{http://www.w3.org/2001/XMLSchema}long\"/&gt;\n+ *         &lt;element name=\"title\" type=\"{http://www.w3.org/2001/XMLSchema}string\"/&gt;\n+ *         &lt;element name=\"price\" type=\"{http://www.w3.org/2001/XMLSchema}int\"/&gt;\n+ *       &lt;/sequence&gt;\n+ *     &lt;/restriction&gt;\n+ *   &lt;/complexContent&gt;\n+ * &lt;/complexType&gt;\n+ * </pre>\n+ * \n+ * \n+ */\n+@XmlAccessorType(XmlAccessType.FIELD)\n+@XmlType(name = \"product\", propOrder = {\n+    \"id\",\n+    \"title\",\n+    \"price\"\n+})\n+public class ProductSOAP {\n+\n+    protected long id;\n+    @XmlElement(required = true)\n+    protected String title;\n+    protected int price;\n+\n+    /**\n+     * Gets the value of the id property.\n+     * \n+     */\n+    public long getId() {\n+        return id;\n+    }\n+\n+    /**\n+     * Sets the value of the id property.\n+     * \n+     */\n+    public void setId(long value) {\n+        this.id = value;\n+    }\n+\n+    /**\n+     * Gets the value of the title property.\n+     * \n+     * @return\n+     *     possible object is\n+     *     {@link String }\n+     *     \n+     */\n+    public String getTitle() {\n+        return title;\n+    }\n+\n+    /**\n+     * Sets the value of the title property.\n+     * \n+     * @param value\n+     *     allowed object is\n+     *     {@link String }\n+     *     \n+     */\n+    public void setTitle(String value) {\n+        this.title = value;\n+    }\n+\n+    /**\n+     * Gets the value of the price property.\n+     * \n+     */\n+    public int getPrice() {\n+        return price;\n+    }\n+\n+    /**\n+     * Sets the value of the price property.\n+     * \n+     */\n+    public void setPrice(int value) {\n+        this.price = value;\n+    }\n+\n+}"
  },
  {
    "sha": "6141b98d7ed4a3afb8a8dd2f0f90700e68bd9873",
    "filename": "src/main/java/ru/geekbrains/happy/market/soap/products/package-info.java",
    "status": "added",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/Mikhail-Meshcheriakov/happy-market/blob/fc8218cbf071e85f7bc73e89cd2874aefae78dc9/src/main/java/ru/geekbrains/happy/market/soap/products/package-info.java",
    "raw_url": "https://github.com/Mikhail-Meshcheriakov/happy-market/raw/fc8218cbf071e85f7bc73e89cd2874aefae78dc9/src/main/java/ru/geekbrains/happy/market/soap/products/package-info.java",
    "contents_url": "https://api.github.com/repos/Mikhail-Meshcheriakov/happy-market/contents/src/main/java/ru/geekbrains/happy/market/soap/products/package-info.java?ref=fc8218cbf071e85f7bc73e89cd2874aefae78dc9",
    "patch": "@@ -0,0 +1,9 @@\n+//\n+// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.2 \n+// See <a href=\"https://javaee.github.io/jaxb-v2/\">https://javaee.github.io/jaxb-v2/</a> \n+// Any modifications to this file will be lost upon recompilation of the source schema. \n+// Generated on: 2021.03.04 at 04:20:28 PM ICT \n+//\n+\n+@javax.xml.bind.annotation.XmlSchema(namespace = \"http://www.geekbrains.ru/happy/market/ws/products\", elementFormDefault = javax.xml.bind.annotation.XmlNsForm.QUALIFIED)\n+package ru.geekbrains.happy.market.soap.products;"
  },
  {
    "sha": "481e5b0dbea5ff9dee56b3d6632315e7db7adc97",
    "filename": "src/main/resources/products.xsd",
    "status": "added",
    "additions": 42,
    "deletions": 0,
    "changes": 42,
    "blob_url": "https://github.com/Mikhail-Meshcheriakov/happy-market/blob/fc8218cbf071e85f7bc73e89cd2874aefae78dc9/src/main/resources/products.xsd",
    "raw_url": "https://github.com/Mikhail-Meshcheriakov/happy-market/raw/fc8218cbf071e85f7bc73e89cd2874aefae78dc9/src/main/resources/products.xsd",
    "contents_url": "https://api.github.com/repos/Mikhail-Meshcheriakov/happy-market/contents/src/main/resources/products.xsd?ref=fc8218cbf071e85f7bc73e89cd2874aefae78dc9",
    "patch": "@@ -0,0 +1,42 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n+<xs:schema\n+        xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\n+        xmlns:tns=\"http://www.geekbrains.ru/happy/market/ws/products\"\n+        targetNamespace=\"http://www.geekbrains.ru/happy/market/ws/products\" elementFormDefault=\"qualified\">\n+\n+    <xs:element name=\"getProductByIdRequest\">\n+        <xs:complexType>\n+            <xs:sequence>\n+                <xs:element name=\"id\" type=\"xs:long\"/>\n+            </xs:sequence>\n+        </xs:complexType>\n+    </xs:element>\n+\n+    <xs:element name=\"getAllProductsRequest\">\n+        <xs:complexType/>\n+    </xs:element>\n+\n+    <xs:element name=\"getProductByIdResponse\">\n+        <xs:complexType>\n+            <xs:sequence>\n+                <xs:element name=\"product\" type=\"tns:product\"/>\n+            </xs:sequence>\n+        </xs:complexType>\n+    </xs:element>\n+\n+    <xs:element name=\"getAllProductsResponse\">\n+        <xs:complexType>\n+            <xs:sequence>\n+                <xs:element name=\"products\" maxOccurs=\"unbounded\" type=\"tns:product\"/>\n+            </xs:sequence>\n+        </xs:complexType>\n+    </xs:element>\n+\n+    <xs:complexType name=\"product\">\n+        <xs:sequence>\n+            <xs:element name=\"id\" type=\"xs:long\"/>\n+            <xs:element name=\"title\" type=\"xs:string\"/>\n+            <xs:element name=\"price\" type=\"xs:int\"/>\n+        </xs:sequence>\n+    </xs:complexType>\n+</xs:schema>\n\\ No newline at end of file"
  }
]
