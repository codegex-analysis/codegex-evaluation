[
  {
    "sha": "6bf2c20d05a6fa460a8535666f95c5fdf2263ddc",
    "filename": "nifi-nar-bundles/nifi-confluent-platform-bundle/nifi-confluent-schema-registry-service/src/main/java/org/apache/nifi/confluent/schemaregistry/client/RestSchemaRegistryClient.java",
    "status": "modified",
    "additions": 31,
    "deletions": 13,
    "changes": 44,
    "blob_url": "https://github.com/apache/nifi/blob/62e7d6d27d39482cd2912e4dd7c8caca6e928d49/nifi-nar-bundles/nifi-confluent-platform-bundle/nifi-confluent-schema-registry-service/src/main/java/org/apache/nifi/confluent/schemaregistry/client/RestSchemaRegistryClient.java",
    "raw_url": "https://github.com/apache/nifi/raw/62e7d6d27d39482cd2912e4dd7c8caca6e928d49/nifi-nar-bundles/nifi-confluent-platform-bundle/nifi-confluent-schema-registry-service/src/main/java/org/apache/nifi/confluent/schemaregistry/client/RestSchemaRegistryClient.java",
    "contents_url": "https://api.github.com/repos/apache/nifi/contents/nifi-nar-bundles/nifi-confluent-platform-bundle/nifi-confluent-schema-registry-service/src/main/java/org/apache/nifi/confluent/schemaregistry/client/RestSchemaRegistryClient.java?ref=62e7d6d27d39482cd2912e4dd7c8caca6e928d49",
    "patch": "@@ -109,7 +109,7 @@ public RecordSchema getSchema(final String schemaName, final int schemaVersion)\n \n     @Override\n     public RecordSchema getSchema(final int schemaId) throws IOException, SchemaNotFoundException {\n-        // The Confluent Schema Registry's REST API does not provide us with the 'subject' (name) of a Schema given the ID.\n+        // The Confluent Schema Registry's version below 5.3.1 REST API does not provide us with the 'subject' (name) of a Schema given the ID.\n         // It will provide us only the text of the Schema itself. Therefore, in order to determine the name (which is required for\n         // a SchemaIdentifier), we must obtain a list of all Schema names, and then request each and every one of the schemas to determine\n         // if the ID requested matches the Schema's ID.\n@@ -119,19 +119,37 @@ public RecordSchema getSchema(final int schemaId) throws IOException, SchemaNotF\n \n         final String schemaPath = getSchemaPath(schemaId);\n         final JsonNode responseJson = fetchJsonResponse(schemaPath, \"id \" + schemaId);\n-        final JsonNode subjectsJson = fetchJsonResponse(\"/subjects\", \"subjects array\");\n-        final ArrayNode subjectsList = (ArrayNode) subjectsJson;\n-\n+        //Get subject name by id, works only with v5.3.1+ Confluent Schema Registry\n+        JsonNode subjectsJson = null;\n+        try {\n+            subjectsJson = fetchJsonResponse(schemaPath + \"/subjects\", \"schema name\");\n+        } catch (SchemaNotFoundException e) {\n+            logger.debug(\"Could not find schema name in registry by id in: + \" + schemaPath);\n+        }\n         JsonNode completeSchema = null;\n-        for (JsonNode subject: subjectsList) {\n-            try {\n-                final String subjectName = subject.asText();\n-                completeSchema = postJsonResponse(\"/subjects/\" + subjectName, responseJson, \"schema id: \" + schemaId);\n-                break;\n-            } catch (SchemaNotFoundException e) {\n-                continue;\n+        if(subjectsJson == null) {\n+            final JsonNode subjectsAllJson = fetchJsonResponse(\"/subjects\", \"subjects array\");\n+            final ArrayNode subjectsAllList = (ArrayNode) subjectsAllJson;\n+            for (JsonNode subject: subjectsAllList) {\n+                try {\n+                    final String searchName = subject.asText();\n+                    completeSchema = postJsonResponse(\"/subjects/\" + searchName, responseJson, \"schema id: \" + schemaId);\n+                    break;\n+                } catch (SchemaNotFoundException e) {\n+                    continue;\n+                }\n+            }\n+        } else {\n+            final ArrayNode subjectsList = (ArrayNode) subjectsJson;\n+            for (JsonNode subject: subjectsList) {\n+                try {\n+                    final String searchName = subject.asText();\n+                    completeSchema = postJsonResponse(\"/subjects/\" + searchName, responseJson, \"schema id: \" + schemaId);\n+                    break;\n+                } catch (SchemaNotFoundException e) {\n+                    continue;\n+                }\n             }\n-\n         }\n \n         if(completeSchema == null) {\n@@ -154,7 +172,7 @@ private RecordSchema createRecordSchema(final JsonNode schemaNode) throws Schema\n             return AvroTypeUtil.createSchema(avroSchema, schemaText, schemaId);\n         } catch (final SchemaParseException spe) {\n             throw new SchemaNotFoundException(\"Obtained Schema with id \" + id + \" and name \" + subject\n-                + \" from Confluent Schema Registry but the Schema Text that was returned is not a valid Avro Schema\");\n+                    + \" from Confluent Schema Registry but the Schema Text that was returned is not a valid Avro Schema\");\n         }\n     }\n "
  }
]
