[
  {
    "sha": "96770e6fa75307b1f815aeaf4e7175f17a3b1c4a",
    "filename": "modules/core/src/main/java/org/apache/ignite/internal/pagemem/store/IgnitePageStoreManager.java",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/apache/ignite/blob/79e87fb39302156afb62feceeb629ec841e7eb7f/modules/core/src/main/java/org/apache/ignite/internal/pagemem/store/IgnitePageStoreManager.java",
    "raw_url": "https://github.com/apache/ignite/raw/79e87fb39302156afb62feceeb629ec841e7eb7f/modules/core/src/main/java/org/apache/ignite/internal/pagemem/store/IgnitePageStoreManager.java",
    "contents_url": "https://api.github.com/repos/apache/ignite/contents/modules/core/src/main/java/org/apache/ignite/internal/pagemem/store/IgnitePageStoreManager.java?ref=79e87fb39302156afb62feceeb629ec841e7eb7f",
    "patch": "@@ -24,7 +24,6 @@\n import org.apache.ignite.IgniteCheckedException;\n import org.apache.ignite.configuration.CacheConfiguration;\n import org.apache.ignite.internal.pagemem.PageMemory;\n-import org.apache.ignite.internal.processors.cache.CacheGroupContext;\n import org.apache.ignite.internal.processors.cache.CacheGroupDescriptor;\n import org.apache.ignite.internal.processors.cache.GridCacheSharedManager;\n import org.apache.ignite.internal.processors.cache.StoredCacheData;\n@@ -80,7 +79,7 @@ public void initializeForCache(CacheGroupDescriptor grpDesc, StoredCacheData cac\n      * @param destroy Flag indicating if the cache is being destroyed and data should be cleaned.\n      * @throws IgniteCheckedException If failed to handle cache destroy callback.\n      */\n-    public void shutdownForCacheGroup(CacheGroupContext grp, boolean destroy) throws IgniteCheckedException;\n+    public void shutdownForCacheGroup(CacheGroupDescriptor grp, boolean destroy) throws IgniteCheckedException;\n \n     /**\n      * Callback called when a partition is created on the local node."
  },
  {
    "sha": "55107c1f322a7640b3079521cb77dbdfa68f6743",
    "filename": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCacheProcessor.java",
    "status": "modified",
    "additions": 12,
    "deletions": 3,
    "changes": 15,
    "blob_url": "https://github.com/apache/ignite/blob/79e87fb39302156afb62feceeb629ec841e7eb7f/modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCacheProcessor.java",
    "raw_url": "https://github.com/apache/ignite/raw/79e87fb39302156afb62feceeb629ec841e7eb7f/modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCacheProcessor.java",
    "contents_url": "https://api.github.com/repos/apache/ignite/contents/modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCacheProcessor.java?ref=79e87fb39302156afb62feceeb629ec841e7eb7f",
    "patch": "@@ -2839,12 +2839,19 @@ private void processCacheStopRequestOnExchangeDone(ExchangeActions exchActions)\n             throw new IgniteException(msg, e);\n         }\n \n-        for (IgniteBiTuple<CacheGroupContext, Boolean> grp : grpsToStop)\n-            stopCacheGroup(grp.get1().groupId(), grp.get2());\n+        List<IgniteBiTuple<CacheGroupDescriptor, Boolean>> grpDescs = exchActions.cacheGroupsToStop().stream()\n+            .map(a -> F.t(a.descriptor(), a.destroy()))\n+            .collect(toList());\n+\n+        for (IgniteBiTuple<CacheGroupDescriptor, Boolean> grpDesc : grpDescs)\n+            stopCacheGroup(grpDesc.get1().groupId(), grpDesc.get2());\n \n-        if (!sharedCtx.kernalContext().clientNode())\n+        if (!sharedCtx.kernalContext().clientNode()) {\n             sharedCtx.database().onCacheGroupsStopped(grpsToStop);\n \n+            sharedCtx.database().onCacheGroupsStopped(grpDescs);\n+        }\n+\n         if (exchActions.deactivate())\n             sharedCtx.deactivate();\n     }\n@@ -2949,6 +2956,8 @@ private void stopCacheGroup(int grpId, boolean destroy) {\n \n         if (grp != null)\n             stopCacheGroup(grp, destroy);\n+        else\n+            cachesInfo.cleanupRemovedGroup(grpId);\n     }\n \n     /**"
  },
  {
    "sha": "52f7dc6f2d960ab804cbf259cda4e990adec4aec",
    "filename": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/persistence/GridCacheDatabaseSharedManager.java",
    "status": "modified",
    "additions": 8,
    "deletions": 4,
    "changes": 12,
    "blob_url": "https://github.com/apache/ignite/blob/79e87fb39302156afb62feceeb629ec841e7eb7f/modules/core/src/main/java/org/apache/ignite/internal/processors/cache/persistence/GridCacheDatabaseSharedManager.java",
    "raw_url": "https://github.com/apache/ignite/raw/79e87fb39302156afb62feceeb629ec841e7eb7f/modules/core/src/main/java/org/apache/ignite/internal/processors/cache/persistence/GridCacheDatabaseSharedManager.java",
    "contents_url": "https://api.github.com/repos/apache/ignite/contents/modules/core/src/main/java/org/apache/ignite/internal/processors/cache/persistence/GridCacheDatabaseSharedManager.java?ref=79e87fb39302156afb62feceeb629ec841e7eb7f",
    "patch": "@@ -1538,17 +1538,21 @@ private String cacheInfo(GridCacheContext cacheCtx) {\n                 log.error(\"Failed to clear page memory\", e);\n             }\n         }\n+    }\n \n+    @Override public void onCacheGroupsStopped(\n+        List<IgniteBiTuple<CacheGroupDescriptor, Boolean>> stoppedGrps\n+    ) {\n         if (cctx.pageStore() != null) {\n-            for (IgniteBiTuple<CacheGroupContext, Boolean> tup : stoppedGrps) {\n-                CacheGroupContext grp = tup.get1();\n+            for (IgniteBiTuple<CacheGroupDescriptor, Boolean> tup : stoppedGrps) {\n+                CacheGroupDescriptor desc = tup.get1();\n \n                 try {\n-                    cctx.pageStore().shutdownForCacheGroup(grp, tup.get2());\n+                    cctx.pageStore().shutdownForCacheGroup(desc, tup.get2());\n                 }\n                 catch (IgniteCheckedException e) {\n                     U.error(log, \"Failed to gracefully clean page store resources for destroyed cache \" +\n-                        \"[cache=\" + grp.cacheOrGroupName() + \"]\", e);\n+                        \"[cache=\" + desc.cacheOrGroupName() + \"]\", e);\n                 }\n             }\n         }"
  },
  {
    "sha": "9fab2dff0111f15cd8b4cf72e3280cc225e887fe",
    "filename": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/persistence/IgniteCacheDatabaseSharedManager.java",
    "status": "modified",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/apache/ignite/blob/79e87fb39302156afb62feceeb629ec841e7eb7f/modules/core/src/main/java/org/apache/ignite/internal/processors/cache/persistence/IgniteCacheDatabaseSharedManager.java",
    "raw_url": "https://github.com/apache/ignite/raw/79e87fb39302156afb62feceeb629ec841e7eb7f/modules/core/src/main/java/org/apache/ignite/internal/processors/cache/persistence/IgniteCacheDatabaseSharedManager.java",
    "contents_url": "https://api.github.com/repos/apache/ignite/contents/modules/core/src/main/java/org/apache/ignite/internal/processors/cache/persistence/IgniteCacheDatabaseSharedManager.java?ref=79e87fb39302156afb62feceeb629ec841e7eb7f",
    "patch": "@@ -60,6 +60,7 @@\n import org.apache.ignite.internal.pagemem.impl.PageMemoryNoStoreImpl;\n import org.apache.ignite.internal.processors.affinity.AffinityTopologyVersion;\n import org.apache.ignite.internal.processors.cache.CacheGroupContext;\n+import org.apache.ignite.internal.processors.cache.CacheGroupDescriptor;\n import org.apache.ignite.internal.processors.cache.GridCacheContext;\n import org.apache.ignite.internal.processors.cache.GridCacheSharedManagerAdapter;\n import org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture;\n@@ -1099,6 +1100,13 @@ public void onCacheGroupsStopped(Collection<IgniteBiTuple<CacheGroupContext, Boo\n         // No-op.\n     }\n \n+    /**\n+     * @param stoppedGrps A collection of tuples (cache group, destroy flag).\n+     */\n+    public void onCacheGroupsStopped(List<IgniteBiTuple<CacheGroupDescriptor, Boolean>> stoppedGrps) {\n+        // No-op.\n+    }\n+\n     /**\n      * Reserve update history for exchange.\n      *"
  },
  {
    "sha": "60c3ac281e318ed255dc6886def586a57a4af406",
    "filename": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/persistence/file/FilePageStoreManager.java",
    "status": "modified",
    "additions": 38,
    "deletions": 18,
    "changes": 56,
    "blob_url": "https://github.com/apache/ignite/blob/79e87fb39302156afb62feceeb629ec841e7eb7f/modules/core/src/main/java/org/apache/ignite/internal/processors/cache/persistence/file/FilePageStoreManager.java",
    "raw_url": "https://github.com/apache/ignite/raw/79e87fb39302156afb62feceeb629ec841e7eb7f/modules/core/src/main/java/org/apache/ignite/internal/processors/cache/persistence/file/FilePageStoreManager.java",
    "contents_url": "https://api.github.com/repos/apache/ignite/contents/modules/core/src/main/java/org/apache/ignite/internal/processors/cache/persistence/file/FilePageStoreManager.java?ref=79e87fb39302156afb62feceeb629ec841e7eb7f",
    "patch": "@@ -67,7 +67,6 @@\n import org.apache.ignite.internal.pagemem.store.IgnitePageStoreManager;\n import org.apache.ignite.internal.pagemem.store.PageStore;\n import org.apache.ignite.internal.pagemem.store.PageStoreCollection;\n-import org.apache.ignite.internal.processors.cache.CacheGroupContext;\n import org.apache.ignite.internal.processors.cache.CacheGroupDescriptor;\n import org.apache.ignite.internal.processors.cache.GridCacheSharedManagerAdapter;\n import org.apache.ignite.internal.processors.cache.StoredCacheData;\n@@ -573,20 +572,21 @@ public void removeConfigurationChangeListener(BiConsumer<String, File> lsnr) {\n     }\n \n     /** {@inheritDoc} */\n-    @Override public void shutdownForCacheGroup(CacheGroupContext grp, boolean destroy) throws IgniteCheckedException {\n+    @Override public void shutdownForCacheGroup(CacheGroupDescriptor grp, boolean destroy) throws IgniteCheckedException {\n         grpsWithoutIdx.remove(grp.groupId());\n \n         CacheStoreHolder old = idxCacheStores.remove(grp.groupId());\n \n-        if (old != null) {\n-            IgniteCheckedException ex = shutdown(old, /*clean files if destroy*/destroy, null);\n+        IgniteCheckedException ex = null;\n \n-            if (destroy)\n-                removeCacheGroupConfigurationData(grp);\n+        if (old != null)\n+            ex = shutdown(old, /*clean files if destroy*/destroy, null);\n \n-            if (ex != null)\n-                throw ex;\n-        }\n+        if (destroy)\n+            removeCacheGroupConfigurationData(grp);\n+\n+        if (ex != null)\n+            throw ex;\n     }\n \n     /** {@inheritDoc} */\n@@ -1205,14 +1205,34 @@ private IgniteCheckedException shutdown(CacheStoreHolder holder, boolean cleanFi\n         return aggr;\n     }\n \n-    /**\n-     * Delete caches' configuration data files of cache group.\n-     *\n-     * @param ctx Cache group context.\n-     * @throws IgniteCheckedException If fails.\n-     */\n-    private void removeCacheGroupConfigurationData(CacheGroupContext ctx) throws IgniteCheckedException {\n-        File cacheGrpDir = cacheWorkDir(ctx.sharedGroup(), ctx.cacheOrGroupName());\n+//    /**\n+//     * Delete caches' configuration data files of cache group.\n+//     *\n+//     * @param ctx Cache group context.\n+//     * @throws IgniteCheckedException If fails.\n+//     */\n+//    private void removeCacheGroupConfigurationData(CacheGroupContext ctx) throws IgniteCheckedException {\n+//        File cacheGrpDir = cacheWorkDir(ctx.sharedGroup(), ctx.cacheOrGroupName());\n+//\n+//        if (cacheGrpDir != null && cacheGrpDir.exists()) {\n+//            DirectoryStream.Filter<Path> cacheCfgFileFilter = new DirectoryStream.Filter<Path>() {\n+//                @Override public boolean accept(Path path) {\n+//                    return Files.isRegularFile(path) && path.getFileName().toString().endsWith(CACHE_DATA_FILENAME);\n+//                }\n+//            };\n+//\n+//            try (DirectoryStream<Path> dirStream = newDirectoryStream(cacheGrpDir.toPath(), cacheCfgFileFilter)) {\n+//                for (Path path: dirStream)\n+//                    Files.deleteIfExists(path);\n+//            }\n+//            catch (IOException e) {\n+//                throw new IgniteCheckedException(\"Failed to delete cache configurations of group: \" + ctx.toString(), e);\n+//            }\n+//        }\n+//    }\n+\n+    private void removeCacheGroupConfigurationData(CacheGroupDescriptor desc) throws IgniteCheckedException {\n+        File cacheGrpDir = cacheWorkDir(desc.sharedGroup(), desc.cacheOrGroupName());\n \n         if (cacheGrpDir != null && cacheGrpDir.exists()) {\n             DirectoryStream.Filter<Path> cacheCfgFileFilter = new DirectoryStream.Filter<Path>() {\n@@ -1226,7 +1246,7 @@ private void removeCacheGroupConfigurationData(CacheGroupContext ctx) throws Ign\n                     Files.deleteIfExists(path);\n             }\n             catch (IOException e) {\n-                throw new IgniteCheckedException(\"Failed to delete cache configurations of group: \" + ctx.toString(), e);\n+                throw new IgniteCheckedException(\"Failed to delete cache configurations of group: \" + desc.toString(), e);\n             }\n         }\n     }"
  },
  {
    "sha": "f2ccde61c5b23d89e3703c317bdc7b39960e9482",
    "filename": "modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/IgnitePdsDestroyCacheTest.java",
    "status": "modified",
    "additions": 43,
    "deletions": 0,
    "changes": 43,
    "blob_url": "https://github.com/apache/ignite/blob/79e87fb39302156afb62feceeb629ec841e7eb7f/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/IgnitePdsDestroyCacheTest.java",
    "raw_url": "https://github.com/apache/ignite/raw/79e87fb39302156afb62feceeb629ec841e7eb7f/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/IgnitePdsDestroyCacheTest.java",
    "contents_url": "https://api.github.com/repos/apache/ignite/contents/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/IgnitePdsDestroyCacheTest.java?ref=79e87fb39302156afb62feceeb629ec841e7eb7f",
    "patch": "@@ -18,13 +18,19 @@\n package org.apache.ignite.internal.processors.cache.persistence;\n \n import java.lang.reflect.Field;\n+import java.util.UUID;\n import java.util.concurrent.CountDownLatch;\n import java.util.concurrent.TimeUnit;\n import org.apache.ignite.Ignite;\n+import org.apache.ignite.IgniteCache;\n+import org.apache.ignite.cache.CacheMode;\n+import org.apache.ignite.cluster.ClusterState;\n+import org.apache.ignite.configuration.CacheConfiguration;\n import org.apache.ignite.internal.IgniteEx;\n import org.apache.ignite.internal.IgniteInternalFuture;\n import org.apache.ignite.internal.processors.cache.CacheGroupContext;\n import org.apache.ignite.internal.processors.cache.IgniteCacheOffheapManager;\n+import org.apache.ignite.internal.util.typedef.internal.CU;\n import org.apache.ignite.internal.util.typedef.internal.U;\n import org.junit.Ignore;\n import org.junit.Test;\n@@ -68,6 +74,43 @@ public void testDestroyGroupCaches() throws Exception {\n         checkDestroyCaches(ignite);\n     }\n \n+    @Test\n+    public void testDestroyCacheWithNodeFilter() throws Exception {\n+        String cacheName = \"cache1\";\n+\n+        cleanPersistenceDir();\n+\n+        Ignite ignite = startGrids(2);\n+\n+        ignite.cluster().state(ClusterState.ACTIVE);\n+\n+        UUID nodeId0 = ignite.cluster().localNode().id();\n+\n+        CacheConfiguration<Object, Object> cfg1 = new CacheConfiguration<>(cacheName)\n+            .setCacheMode(CacheMode.REPLICATED)\n+            .setNodeFilter(n -> nodeId0.equals(n.id()));\n+\n+        IgniteCache<?, ?> cache1 = ignite.createCache(cfg1);\n+\n+        cache1.destroy();\n+\n+        forceCheckpoint();\n+\n+        awaitPartitionMapExchange();\n+\n+        assertNull(grid(0).context().cache().cacheGroupDescriptor(CU.cacheId(cacheName)));\n+        assertNull(grid(1).context().cache().cacheGroupDescriptor(CU.cacheId(cacheName)));\n+\n+        stopAllGrids();\n+\n+        ignite = startGrids(2); // failing here\n+\n+        ignite.cluster().state(ClusterState.ACTIVE);\n+\n+        assertNull(grid(0).context().cache().cacheGroupDescriptor(CU.cacheId(cacheName)));\n+        assertNull(grid(1).context().cache().cacheGroupDescriptor(CU.cacheId(cacheName)));\n+    }\n+\n     /**\n      * Test destroy caches abruptly with checkpoints.\n      *"
  },
  {
    "sha": "7348d0ad87e8af4fae745368e5620f67fb4ded5a",
    "filename": "modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/pagemem/NoOpPageStoreManager.java",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/apache/ignite/blob/79e87fb39302156afb62feceeb629ec841e7eb7f/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/pagemem/NoOpPageStoreManager.java",
    "raw_url": "https://github.com/apache/ignite/raw/79e87fb39302156afb62feceeb629ec841e7eb7f/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/pagemem/NoOpPageStoreManager.java",
    "contents_url": "https://api.github.com/repos/apache/ignite/contents/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/pagemem/NoOpPageStoreManager.java?ref=79e87fb39302156afb62feceeb629ec841e7eb7f",
    "patch": "@@ -32,7 +32,6 @@\n import org.apache.ignite.internal.pagemem.PageIdUtils;\n import org.apache.ignite.internal.pagemem.store.IgnitePageStoreManager;\n import org.apache.ignite.internal.pagemem.store.PageStore;\n-import org.apache.ignite.internal.processors.cache.CacheGroupContext;\n import org.apache.ignite.internal.processors.cache.CacheGroupDescriptor;\n import org.apache.ignite.internal.processors.cache.GridCacheSharedContext;\n import org.apache.ignite.internal.processors.cache.StoredCacheData;\n@@ -74,7 +73,7 @@\n     }\n \n     /** {@inheritDoc} */\n-    @Override public void shutdownForCacheGroup(CacheGroupContext grp, boolean destroy) throws IgniteCheckedException {\n+    @Override public void shutdownForCacheGroup(CacheGroupDescriptor grp, boolean destroy) throws IgniteCheckedException {\n         // No-op.\n     }\n "
  },
  {
    "sha": "893f1fe8bc11e7d228342faeb470a3f173431adf",
    "filename": "modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/wal/memtracker/PageMemoryTracker.java",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/apache/ignite/blob/79e87fb39302156afb62feceeb629ec841e7eb7f/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/wal/memtracker/PageMemoryTracker.java",
    "raw_url": "https://github.com/apache/ignite/raw/79e87fb39302156afb62feceeb629ec841e7eb7f/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/wal/memtracker/PageMemoryTracker.java",
    "contents_url": "https://api.github.com/repos/apache/ignite/contents/modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/wal/memtracker/PageMemoryTracker.java?ref=79e87fb39302156afb62feceeb629ec841e7eb7f",
    "patch": "@@ -49,6 +49,7 @@\n import org.apache.ignite.internal.pagemem.wal.record.WALRecord;\n import org.apache.ignite.internal.pagemem.wal.record.delta.PageDeltaRecord;\n import org.apache.ignite.internal.processors.cache.CacheGroupContext;\n+import org.apache.ignite.internal.processors.cache.CacheGroupDescriptor;\n import org.apache.ignite.internal.processors.cache.GridCacheProcessor;\n import org.apache.ignite.internal.processors.cache.GridCacheSharedContext;\n import org.apache.ignite.internal.processors.cache.mvcc.MvccUtils;\n@@ -198,7 +199,7 @@ IgniteWriteAheadLogManager createWalManager() {\n     IgnitePageStoreManager createPageStoreManager() {\n         if (isEnabled()) {\n             return new FilePageStoreManager(gridCtx) {\n-                @Override public void shutdownForCacheGroup(CacheGroupContext grp,\n+                @Override public void shutdownForCacheGroup(CacheGroupDescriptor grp,\n                     boolean destroy) throws IgniteCheckedException {\n                     super.shutdownForCacheGroup(grp, destroy);\n "
  }
]
