[
  {
    "sha": "53184dab39fb11a0466f85422bb9d276d1dd06fc",
    "filename": "modules/calcite/src/main/java/org/apache/ignite/internal/processors/query/calcite/CalciteQueryProcessor.java",
    "status": "modified",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/apache/ignite/blob/79dae82c484e49e32b072fdaab498e6e1bcd8f72/modules/calcite/src/main/java/org/apache/ignite/internal/processors/query/calcite/CalciteQueryProcessor.java",
    "raw_url": "https://github.com/apache/ignite/raw/79dae82c484e49e32b072fdaab498e6e1bcd8f72/modules/calcite/src/main/java/org/apache/ignite/internal/processors/query/calcite/CalciteQueryProcessor.java",
    "contents_url": "https://api.github.com/repos/apache/ignite/contents/modules/calcite/src/main/java/org/apache/ignite/internal/processors/query/calcite/CalciteQueryProcessor.java?ref=79dae82c484e49e32b072fdaab498e6e1bcd8f72",
    "patch": "@@ -71,6 +71,10 @@\n         .executor(EXECUTOR)\n         .sqlToRelConverterConfig(SqlToRelConverter.config()\n             .withTrimUnusedFields(true)\n+            // currently SqlToRelConverter creates not optimal plan for both optimization and execution\n+            // so it's better to disable such rewriting right now\n+            // TODO: remove this after IGNITE-14277\n+            .withInSubQueryThreshold(Integer.MAX_VALUE)\n             .withDecorrelationEnabled(true))\n         .parserConfig(\n             SqlParser.config()"
  },
  {
    "sha": "0d2153063aef3dca715145b0cddb25f1f2aa84b0",
    "filename": "modules/calcite/src/main/java/org/apache/ignite/internal/processors/query/calcite/exec/LogicalRelImplementor.java",
    "status": "modified",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/apache/ignite/blob/79dae82c484e49e32b072fdaab498e6e1bcd8f72/modules/calcite/src/main/java/org/apache/ignite/internal/processors/query/calcite/exec/LogicalRelImplementor.java",
    "raw_url": "https://github.com/apache/ignite/raw/79dae82c484e49e32b072fdaab498e6e1bcd8f72/modules/calcite/src/main/java/org/apache/ignite/internal/processors/query/calcite/exec/LogicalRelImplementor.java",
    "contents_url": "https://api.github.com/repos/apache/ignite/contents/modules/calcite/src/main/java/org/apache/ignite/internal/processors/query/calcite/exec/LogicalRelImplementor.java?ref=79dae82c484e49e32b072fdaab498e6e1bcd8f72",
    "patch": "@@ -37,10 +37,9 @@\n import org.apache.ignite.internal.processors.query.calcite.exec.exp.ExpressionFactory;\n import org.apache.ignite.internal.processors.query.calcite.exec.exp.agg.AccumulatorWrapper;\n import org.apache.ignite.internal.processors.query.calcite.exec.exp.agg.AggregateType;\n-import org.apache.ignite.internal.processors.query.calcite.exec.rel.HashAggregateNode;\n-import org.apache.ignite.internal.processors.query.calcite.exec.rel.SortAggregateNode;\n import org.apache.ignite.internal.processors.query.calcite.exec.rel.CorrelatedNestedLoopJoinNode;\n import org.apache.ignite.internal.processors.query.calcite.exec.rel.FilterNode;\n+import org.apache.ignite.internal.processors.query.calcite.exec.rel.HashAggregateNode;\n import org.apache.ignite.internal.processors.query.calcite.exec.rel.Inbox;\n import org.apache.ignite.internal.processors.query.calcite.exec.rel.IndexSpoolNode;\n import org.apache.ignite.internal.processors.query.calcite.exec.rel.LimitNode;\n@@ -51,16 +50,16 @@\n import org.apache.ignite.internal.processors.query.calcite.exec.rel.Outbox;\n import org.apache.ignite.internal.processors.query.calcite.exec.rel.ProjectNode;\n import org.apache.ignite.internal.processors.query.calcite.exec.rel.ScanNode;\n+import org.apache.ignite.internal.processors.query.calcite.exec.rel.SortAggregateNode;\n import org.apache.ignite.internal.processors.query.calcite.exec.rel.SortNode;\n import org.apache.ignite.internal.processors.query.calcite.exec.rel.TableSpoolNode;\n import org.apache.ignite.internal.processors.query.calcite.exec.rel.UnionAllNode;\n import org.apache.ignite.internal.processors.query.calcite.metadata.AffinityService;\n import org.apache.ignite.internal.processors.query.calcite.metadata.ColocationGroup;\n-import org.apache.ignite.internal.processors.query.calcite.rel.IgniteHashAggregate;\n-import org.apache.ignite.internal.processors.query.calcite.rel.IgniteSortAggregate;\n import org.apache.ignite.internal.processors.query.calcite.rel.IgniteCorrelatedNestedLoopJoin;\n import org.apache.ignite.internal.processors.query.calcite.rel.IgniteExchange;\n import org.apache.ignite.internal.processors.query.calcite.rel.IgniteFilter;\n+import org.apache.ignite.internal.processors.query.calcite.rel.IgniteHashAggregate;\n import org.apache.ignite.internal.processors.query.calcite.rel.IgniteIndexScan;\n import org.apache.ignite.internal.processors.query.calcite.rel.IgniteIndexSpool;\n import org.apache.ignite.internal.processors.query.calcite.rel.IgniteLimit;\n@@ -76,6 +75,7 @@\n import org.apache.ignite.internal.processors.query.calcite.rel.IgniteRelVisitor;\n import org.apache.ignite.internal.processors.query.calcite.rel.IgniteSender;\n import org.apache.ignite.internal.processors.query.calcite.rel.IgniteSort;\n+import org.apache.ignite.internal.processors.query.calcite.rel.IgniteSortAggregate;\n import org.apache.ignite.internal.processors.query.calcite.rel.IgniteTableModify;\n import org.apache.ignite.internal.processors.query.calcite.rel.IgniteTableScan;\n import org.apache.ignite.internal.processors.query.calcite.rel.IgniteTableSpool;"
  },
  {
    "sha": "b0db3893de18264d3c2b80638eb2c71d081e9412",
    "filename": "modules/calcite/src/main/java/org/apache/ignite/internal/processors/query/calcite/exec/QueryTaskExecutorImpl.java",
    "status": "modified",
    "additions": 0,
    "deletions": 3,
    "changes": 3,
    "blob_url": "https://github.com/apache/ignite/blob/79dae82c484e49e32b072fdaab498e6e1bcd8f72/modules/calcite/src/main/java/org/apache/ignite/internal/processors/query/calcite/exec/QueryTaskExecutorImpl.java",
    "raw_url": "https://github.com/apache/ignite/raw/79dae82c484e49e32b072fdaab498e6e1bcd8f72/modules/calcite/src/main/java/org/apache/ignite/internal/processors/query/calcite/exec/QueryTaskExecutorImpl.java",
    "contents_url": "https://api.github.com/repos/apache/ignite/contents/modules/calcite/src/main/java/org/apache/ignite/internal/processors/query/calcite/exec/QueryTaskExecutorImpl.java?ref=79dae82c484e49e32b072fdaab498e6e1bcd8f72",
    "patch": "@@ -20,10 +20,7 @@\n import java.util.Objects;\n import java.util.UUID;\n \n-import org.apache.ignite.failure.FailureContext;\n-import org.apache.ignite.failure.FailureType;\n import org.apache.ignite.internal.GridKernalContext;\n-import org.apache.ignite.internal.processors.failure.FailureProcessor;\n import org.apache.ignite.internal.processors.query.calcite.CalciteQueryProcessor;\n import org.apache.ignite.internal.processors.query.calcite.util.AbstractService;\n import org.apache.ignite.internal.processors.query.calcite.util.Commons;"
  },
  {
    "sha": "04c43a8aafd215838b6f88ac417456e8dc08d78c",
    "filename": "modules/calcite/src/main/java/org/apache/ignite/internal/processors/query/calcite/externalize/RelJson.java",
    "status": "modified",
    "additions": 13,
    "deletions": 1,
    "changes": 14,
    "blob_url": "https://github.com/apache/ignite/blob/79dae82c484e49e32b072fdaab498e6e1bcd8f72/modules/calcite/src/main/java/org/apache/ignite/internal/processors/query/calcite/externalize/RelJson.java",
    "raw_url": "https://github.com/apache/ignite/raw/79dae82c484e49e32b072fdaab498e6e1bcd8f72/modules/calcite/src/main/java/org/apache/ignite/internal/processors/query/calcite/externalize/RelJson.java",
    "contents_url": "https://api.github.com/repos/apache/ignite/contents/modules/calcite/src/main/java/org/apache/ignite/internal/processors/query/calcite/externalize/RelJson.java?ref=79dae82c484e49e32b072fdaab498e6e1bcd8f72",
    "patch": "@@ -28,6 +28,7 @@\n import java.util.Set;\n import java.util.function.Function;\n import java.util.stream.Collectors;\n+\n import com.google.common.cache.CacheBuilder;\n import com.google.common.cache.CacheLoader;\n import com.google.common.cache.LoadingCache;\n@@ -65,6 +66,7 @@\n import org.apache.calcite.rex.RexNode;\n import org.apache.calcite.rex.RexOver;\n import org.apache.calcite.rex.RexSlot;\n+import org.apache.calcite.rex.RexUtil;\n import org.apache.calcite.rex.RexVariable;\n import org.apache.calcite.rex.RexWindow;\n import org.apache.calcite.rex.RexWindowBound;\n@@ -88,7 +90,6 @@\n import org.apache.calcite.sql.SqlSelectKeyword;\n import org.apache.calcite.sql.SqlSyntax;\n import org.apache.calcite.sql.SqlWindow;\n-import org.apache.calcite.sql.fun.SqlStdOperatorTable;\n import org.apache.calcite.sql.fun.SqlTrimFunction;\n import org.apache.calcite.sql.parser.SqlParserPos;\n import org.apache.calcite.sql.type.SqlTypeName;\n@@ -112,6 +113,9 @@\n  */\n @SuppressWarnings({\"rawtypes\", \"unchecked\"})\n class RelJson {\n+    /** */\n+    private final RelOptCluster cluster;\n+\n     /** */\n     @SuppressWarnings(\"PublicInnerClass\") @FunctionalInterface\n     public static interface RelFactory extends Function<RelInput, RelNode> {\n@@ -219,6 +223,11 @@ private static void register(ImmutableMap.Builder<String, Enum<?>> builder, Clas\n             \"org.apache.calcite.adapter.jdbc.\",\n             \"org.apache.calcite.adapter.jdbc.JdbcRules$\");\n \n+    /** */\n+    RelJson(RelOptCluster cluster) {\n+        this.cluster = cluster;\n+    }\n+\n     /** */\n     Function<RelInput, RelNode> factory(String type) {\n         return FACTORIES_CACHE.getUnchecked(type);\n@@ -716,6 +725,9 @@ private Object toJson(CorrelationId node) {\n \n     /** */\n     private Object toJson(RexNode node) {\n+        // removes calls to SEARCH and the included Sarg and converts them to comparisons\n+        node = RexUtil.expandSearch(cluster.getRexBuilder(), null, node);\n+\n         Map<String, Object> map;\n         switch (node.getKind()) {\n             case FIELD_ACCESS:"
  },
  {
    "sha": "3461d8993eaadb6a22649eb36b78ee0e5c0c02a6",
    "filename": "modules/calcite/src/main/java/org/apache/ignite/internal/processors/query/calcite/externalize/RelJsonReader.java",
    "status": "modified",
    "additions": 3,
    "deletions": 1,
    "changes": 4,
    "blob_url": "https://github.com/apache/ignite/blob/79dae82c484e49e32b072fdaab498e6e1bcd8f72/modules/calcite/src/main/java/org/apache/ignite/internal/processors/query/calcite/externalize/RelJsonReader.java",
    "raw_url": "https://github.com/apache/ignite/raw/79dae82c484e49e32b072fdaab498e6e1bcd8f72/modules/calcite/src/main/java/org/apache/ignite/internal/processors/query/calcite/externalize/RelJsonReader.java",
    "contents_url": "https://api.github.com/repos/apache/ignite/contents/modules/calcite/src/main/java/org/apache/ignite/internal/processors/query/calcite/externalize/RelJsonReader.java?ref=79dae82c484e49e32b072fdaab498e6e1bcd8f72",
    "patch": "@@ -63,7 +63,7 @@\n     private final RelOptSchema relOptSchema;\n \n     /** */\n-    private final RelJson relJson = new RelJson();\n+    private final RelJson relJson;\n \n     /** */\n     private final Map<String, RelNode> relMap = new LinkedHashMap<>();\n@@ -82,6 +82,8 @@\n     public RelJsonReader(RelOptCluster cluster, RelOptSchema relOptSchema) {\n         this.cluster = cluster;\n         this.relOptSchema = relOptSchema;\n+\n+        relJson = new RelJson(cluster);\n     }\n \n     /** */"
  },
  {
    "sha": "eade49192069bca64834d9344c361ab6198f9701",
    "filename": "modules/calcite/src/main/java/org/apache/ignite/internal/processors/query/calcite/externalize/RelJsonWriter.java",
    "status": "modified",
    "additions": 7,
    "deletions": 3,
    "changes": 10,
    "blob_url": "https://github.com/apache/ignite/blob/79dae82c484e49e32b072fdaab498e6e1bcd8f72/modules/calcite/src/main/java/org/apache/ignite/internal/processors/query/calcite/externalize/RelJsonWriter.java",
    "raw_url": "https://github.com/apache/ignite/raw/79dae82c484e49e32b072fdaab498e6e1bcd8f72/modules/calcite/src/main/java/org/apache/ignite/internal/processors/query/calcite/externalize/RelJsonWriter.java",
    "contents_url": "https://api.github.com/repos/apache/ignite/contents/modules/calcite/src/main/java/org/apache/ignite/internal/processors/query/calcite/externalize/RelJsonWriter.java?ref=79dae82c484e49e32b072fdaab498e6e1bcd8f72",
    "patch": "@@ -22,9 +22,11 @@\n import java.util.IdentityHashMap;\n import java.util.List;\n import java.util.Map;\n+\n import com.fasterxml.jackson.core.util.DefaultPrettyPrinter;\n import com.fasterxml.jackson.databind.ObjectMapper;\n import com.fasterxml.jackson.databind.ObjectWriter;\n+import org.apache.calcite.plan.RelOptCluster;\n import org.apache.calcite.rel.RelNode;\n import org.apache.calcite.rel.RelWriter;\n import org.apache.calcite.sql.SqlExplainLevel;\n@@ -42,7 +44,7 @@\n     private static final boolean PRETTY_PRINT = IgniteSystemProperties.getBoolean(\"IGNITE_CALCITE_REL_JSON_PRETTY_PRINT\", false);\n \n     /** */\n-    private final RelJson relJson = new RelJson();\n+    private final RelJson relJson;\n \n     /** */\n     private final List<Object> relList = new ArrayList<>();\n@@ -61,15 +63,17 @@\n \n     /** */\n     public static String toJson(RelNode rel) {\n-        RelJsonWriter writer = new RelJsonWriter(PRETTY_PRINT);\n+        RelJsonWriter writer = new RelJsonWriter(rel.getCluster(), PRETTY_PRINT);\n         rel.explain(writer);\n \n         return writer.asString();\n     }\n \n     /** */\n-    public RelJsonWriter(boolean pretty) {\n+    public RelJsonWriter(RelOptCluster cluster, boolean pretty) {\n         this.pretty = pretty;\n+\n+        relJson = new RelJson(cluster);\n     }\n \n     /** {@inheritDoc} */"
  },
  {
    "sha": "602cb78a7db5093d697c509e2404fd12b7edebdf",
    "filename": "modules/calcite/src/main/java/org/apache/ignite/internal/processors/query/calcite/trait/TraitUtils.java",
    "status": "modified",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/apache/ignite/blob/79dae82c484e49e32b072fdaab498e6e1bcd8f72/modules/calcite/src/main/java/org/apache/ignite/internal/processors/query/calcite/trait/TraitUtils.java",
    "raw_url": "https://github.com/apache/ignite/raw/79dae82c484e49e32b072fdaab498e6e1bcd8f72/modules/calcite/src/main/java/org/apache/ignite/internal/processors/query/calcite/trait/TraitUtils.java",
    "contents_url": "https://api.github.com/repos/apache/ignite/contents/modules/calcite/src/main/java/org/apache/ignite/internal/processors/query/calcite/trait/TraitUtils.java?ref=79dae82c484e49e32b072fdaab498e6e1bcd8f72",
    "patch": "@@ -444,7 +444,6 @@ public static IgniteDistribution projectDistribution(IgniteDistribution distribu\n         return res;\n     }\n \n-\n     /**\n      * @param elem Elem.\n      */"
  },
  {
    "sha": "0c9de8db5d5268e07b02044923998e08f076b9ab",
    "filename": "modules/calcite/src/test/java/org/apache/ignite/internal/processors/query/calcite/CalciteBasicSecondaryIndexIntegrationTest.java",
    "status": "modified",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/apache/ignite/blob/79dae82c484e49e32b072fdaab498e6e1bcd8f72/modules/calcite/src/test/java/org/apache/ignite/internal/processors/query/calcite/CalciteBasicSecondaryIndexIntegrationTest.java",
    "raw_url": "https://github.com/apache/ignite/raw/79dae82c484e49e32b072fdaab498e6e1bcd8f72/modules/calcite/src/test/java/org/apache/ignite/internal/processors/query/calcite/CalciteBasicSecondaryIndexIntegrationTest.java",
    "contents_url": "https://api.github.com/repos/apache/ignite/contents/modules/calcite/src/test/java/org/apache/ignite/internal/processors/query/calcite/CalciteBasicSecondaryIndexIntegrationTest.java?ref=79dae82c484e49e32b072fdaab498e6e1bcd8f72",
    "patch": "@@ -899,6 +899,24 @@ public void testOrderByNoIndexedColumn() {\n             .check();\n     }\n \n+    /**\n+     * Test verifies that ranges would be serialized and desirialized without any errors.\n+     */\n+    @Test\n+    public void testSelectWithRanges() {\n+        String sql = \"select depId from Developer \" +\n+            \"where depId in (1,2,3,5,6,7,9,10,13,14,15,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33) \" +\n+            \"   or depId between 7 and 8 order by depId limit 5\";\n+\n+        assertQuery(sql)\n+            .returns(1)\n+            .returns(2)\n+            .returns(2)\n+            .returns(3)\n+            .returns(5)\n+            .check();\n+    }\n+\n     /** */\n     private QueryChecker assertQuery(String qry) {\n         return new QueryChecker(qry) {"
  },
  {
    "sha": "d5d1b8020e3513f21654c91ff51f1220dbc5eeb3",
    "filename": "modules/calcite/src/test/java/org/apache/ignite/internal/processors/query/calcite/exec/rel/AbstractExecutionTest.java",
    "status": "modified",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/apache/ignite/blob/79dae82c484e49e32b072fdaab498e6e1bcd8f72/modules/calcite/src/test/java/org/apache/ignite/internal/processors/query/calcite/exec/rel/AbstractExecutionTest.java",
    "raw_url": "https://github.com/apache/ignite/raw/79dae82c484e49e32b072fdaab498e6e1bcd8f72/modules/calcite/src/test/java/org/apache/ignite/internal/processors/query/calcite/exec/rel/AbstractExecutionTest.java",
    "contents_url": "https://api.github.com/repos/apache/ignite/contents/modules/calcite/src/test/java/org/apache/ignite/internal/processors/query/calcite/exec/rel/AbstractExecutionTest.java?ref=79dae82c484e49e32b072fdaab498e6e1bcd8f72",
    "patch": "@@ -371,7 +371,6 @@ private TestMessageServiceImpl(GridKernalContext kernal, TestIoManager mgr) {\n             this.fieldCreators = fieldCreators;\n         }\n \n-\n         /** */\n         private static Object field(Integer rowNum) {\n             return \"val_\" + rowNum;"
  },
  {
    "sha": "7f1859744ffbacbd535deb16e63f18270c20c3bb",
    "filename": "modules/calcite/src/test/java/org/apache/ignite/internal/processors/query/calcite/exec/rel/BaseAggregateTest.java",
    "status": "modified",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/apache/ignite/blob/79dae82c484e49e32b072fdaab498e6e1bcd8f72/modules/calcite/src/test/java/org/apache/ignite/internal/processors/query/calcite/exec/rel/BaseAggregateTest.java",
    "raw_url": "https://github.com/apache/ignite/raw/79dae82c484e49e32b072fdaab498e6e1bcd8f72/modules/calcite/src/test/java/org/apache/ignite/internal/processors/query/calcite/exec/rel/BaseAggregateTest.java",
    "contents_url": "https://api.github.com/repos/apache/ignite/contents/modules/calcite/src/test/java/org/apache/ignite/internal/processors/query/calcite/exec/rel/BaseAggregateTest.java?ref=79dae82c484e49e32b072fdaab498e6e1bcd8f72",
    "patch": "@@ -360,7 +360,6 @@ public void sumOnDifferentRowsCount() throws IgniteCheckedException {\n         }\n     }\n \n-\n     /** */\n     private SingleNode<Object[]> createAggregateNodesChain(\n         ExecutionContext<Object[]> ctx,"
  },
  {
    "sha": "d0b198c22bc07ab9e12550a8d18830822ad3cdb6",
    "filename": "modules/calcite/src/test/java/org/apache/ignite/internal/processors/query/calcite/exec/rel/ExecutionTest.java",
    "status": "modified",
    "additions": 2,
    "deletions": 4,
    "changes": 6,
    "blob_url": "https://github.com/apache/ignite/blob/79dae82c484e49e32b072fdaab498e6e1bcd8f72/modules/calcite/src/test/java/org/apache/ignite/internal/processors/query/calcite/exec/rel/ExecutionTest.java",
    "raw_url": "https://github.com/apache/ignite/raw/79dae82c484e49e32b072fdaab498e6e1bcd8f72/modules/calcite/src/test/java/org/apache/ignite/internal/processors/query/calcite/exec/rel/ExecutionTest.java",
    "contents_url": "https://api.github.com/repos/apache/ignite/contents/modules/calcite/src/test/java/org/apache/ignite/internal/processors/query/calcite/exec/rel/ExecutionTest.java?ref=79dae82c484e49e32b072fdaab498e6e1bcd8f72",
    "patch": "@@ -604,10 +604,8 @@ public void assertionHandlingTest() {\n         watchDog.interrupt();\n     }\n \n-    /**\n-     *\n-     */\n-    protected Object[] row(Object... fields) {\n+    /** {@inheritDoc} */\n+    @Override protected Object[] row(Object... fields) {\n         return fields;\n     }\n "
  },
  {
    "sha": "08a25959f98006ed763983be0be0ecf28a329a67",
    "filename": "modules/calcite/src/test/java/org/apache/ignite/internal/processors/query/calcite/planner/PlannerTest.java",
    "status": "modified",
    "additions": 0,
    "deletions": 4,
    "changes": 4,
    "blob_url": "https://github.com/apache/ignite/blob/79dae82c484e49e32b072fdaab498e6e1bcd8f72/modules/calcite/src/test/java/org/apache/ignite/internal/processors/query/calcite/planner/PlannerTest.java",
    "raw_url": "https://github.com/apache/ignite/raw/79dae82c484e49e32b072fdaab498e6e1bcd8f72/modules/calcite/src/test/java/org/apache/ignite/internal/processors/query/calcite/planner/PlannerTest.java",
    "contents_url": "https://api.github.com/repos/apache/ignite/contents/modules/calcite/src/test/java/org/apache/ignite/internal/processors/query/calcite/planner/PlannerTest.java?ref=79dae82c484e49e32b072fdaab498e6e1bcd8f72",
    "patch": "@@ -41,9 +41,6 @@\n import org.apache.calcite.rel.RelRoot;\n import org.apache.calcite.rel.RelVisitor;\n import org.apache.calcite.rel.type.RelDataTypeFactory;\n-import org.apache.calcite.rex.RexFieldAccess;\n-import org.apache.calcite.rex.RexLiteral;\n-import org.apache.calcite.rex.RexNode;\n import org.apache.calcite.schema.SchemaPlus;\n import org.apache.calcite.sql.SqlNode;\n import org.apache.calcite.util.ImmutableBitSet;\n@@ -74,7 +71,6 @@\n import org.apache.ignite.internal.processors.query.calcite.prepare.Splitter;\n import org.apache.ignite.internal.processors.query.calcite.rel.IgniteConvention;\n import org.apache.ignite.internal.processors.query.calcite.rel.IgniteFilter;\n-import org.apache.ignite.internal.processors.query.calcite.rel.IgniteIndexSpool;\n import org.apache.ignite.internal.processors.query.calcite.rel.IgniteLimit;\n import org.apache.ignite.internal.processors.query.calcite.rel.IgniteRel;\n import org.apache.ignite.internal.processors.query.calcite.rel.IgniteSort;"
  },
  {
    "sha": "d329f85d0290e635ceeb6498c56bb8c2d4601e19",
    "filename": "modules/calcite/src/test/java/org/apache/ignite/testsuites/PlannerTestSuite.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/apache/ignite/blob/79dae82c484e49e32b072fdaab498e6e1bcd8f72/modules/calcite/src/test/java/org/apache/ignite/testsuites/PlannerTestSuite.java",
    "raw_url": "https://github.com/apache/ignite/raw/79dae82c484e49e32b072fdaab498e6e1bcd8f72/modules/calcite/src/test/java/org/apache/ignite/testsuites/PlannerTestSuite.java",
    "contents_url": "https://api.github.com/repos/apache/ignite/contents/modules/calcite/src/test/java/org/apache/ignite/testsuites/PlannerTestSuite.java?ref=79dae82c484e49e32b072fdaab498e6e1bcd8f72",
    "patch": "@@ -17,10 +17,10 @@\n \n package org.apache.ignite.testsuites;\n \n+import org.apache.ignite.internal.processors.query.calcite.planner.AggregatePlannerTest;\n import org.apache.ignite.internal.processors.query.calcite.planner.CorrelatedNestedLoopJoinPlannerTest;\n import org.apache.ignite.internal.processors.query.calcite.planner.IndexSpoolPlannerTest;\n import org.apache.ignite.internal.processors.query.calcite.planner.PlannerTest;\n-import org.apache.ignite.internal.processors.query.calcite.planner.AggregatePlannerTest;\n import org.apache.ignite.internal.processors.query.calcite.planner.TableSpoolPlannerTest;\n import org.junit.runner.RunWith;\n import org.junit.runners.Suite;"
  },
  {
    "sha": "769e35722ecd823993ccf7194e8a0cfd6846b86e",
    "filename": "modules/core/src/main/java/org/apache/ignite/internal/processors/odbc/jdbc/JdbcRequestHandler.java",
    "status": "modified",
    "additions": 3,
    "deletions": 2,
    "changes": 5,
    "blob_url": "https://github.com/apache/ignite/blob/79dae82c484e49e32b072fdaab498e6e1bcd8f72/modules/core/src/main/java/org/apache/ignite/internal/processors/odbc/jdbc/JdbcRequestHandler.java",
    "raw_url": "https://github.com/apache/ignite/raw/79dae82c484e49e32b072fdaab498e6e1bcd8f72/modules/core/src/main/java/org/apache/ignite/internal/processors/odbc/jdbc/JdbcRequestHandler.java",
    "contents_url": "https://api.github.com/repos/apache/ignite/contents/modules/core/src/main/java/org/apache/ignite/internal/processors/odbc/jdbc/JdbcRequestHandler.java?ref=79dae82c484e49e32b072fdaab498e6e1bcd8f72",
    "patch": "@@ -31,6 +31,7 @@\n import java.util.UUID;\n import java.util.concurrent.ConcurrentHashMap;\n import java.util.concurrent.TimeUnit;\n+\n import javax.cache.configuration.Factory;\n import org.apache.ignite.IgniteCheckedException;\n import org.apache.ignite.IgniteLogger;\n@@ -115,7 +116,7 @@\n import static org.apache.ignite.internal.processors.odbc.jdbc.JdbcRequest.QRY_EXEC;\n import static org.apache.ignite.internal.processors.odbc.jdbc.JdbcRequest.QRY_FETCH;\n import static org.apache.ignite.internal.processors.odbc.jdbc.JdbcRequest.QRY_META;\n-import static org.apache.ignite.internal.processors.query.GridQueryProcessor.H2_REDIRECTION_RULES;\n+import static org.apache.ignite.internal.processors.query.GridQueryProcessor.shouldRedirectToCalcite;\n \n /**\n  * JDBC request handler.\n@@ -786,7 +787,7 @@ private JdbcResponse executeQuery(JdbcQueryExecuteRequest req) {\n     /** */\n     private List<FieldsQueryCursor<List<?>>> querySqlFields(SqlFieldsQueryEx qry, GridQueryCancel cancel) {\n         if (experimentalQueryEngine != null) {\n-            if (!H2_REDIRECTION_RULES.matcher(qry.getSql()).find())\n+            if (shouldRedirectToCalcite(qry.getSql()))\n                 return experimentalQueryEngine.query(QueryContext.of(qry, cancel), qry.getSchema(), qry.getSql(), qry.getArgs());\n         }\n "
  },
  {
    "sha": "59f9488dfa91cb57a8252c425163741a59ef9373",
    "filename": "modules/core/src/main/java/org/apache/ignite/internal/processors/query/GridQueryProcessor.java",
    "status": "modified",
    "additions": 14,
    "deletions": 5,
    "changes": 19,
    "blob_url": "https://github.com/apache/ignite/blob/79dae82c484e49e32b072fdaab498e6e1bcd8f72/modules/core/src/main/java/org/apache/ignite/internal/processors/query/GridQueryProcessor.java",
    "raw_url": "https://github.com/apache/ignite/raw/79dae82c484e49e32b072fdaab498e6e1bcd8f72/modules/core/src/main/java/org/apache/ignite/internal/processors/query/GridQueryProcessor.java",
    "contents_url": "https://api.github.com/repos/apache/ignite/contents/modules/core/src/main/java/org/apache/ignite/internal/processors/query/GridQueryProcessor.java?ref=79dae82c484e49e32b072fdaab498e6e1bcd8f72",
    "patch": "@@ -35,6 +35,7 @@\n import java.util.concurrent.ConcurrentMap;\n import java.util.concurrent.atomic.AtomicBoolean;\n import java.util.regex.Pattern;\n+\n import javax.cache.Cache;\n import javax.cache.CacheException;\n import org.apache.ignite.IgniteCheckedException;\n@@ -165,6 +166,10 @@\n     /** */\n     private static final ThreadLocal<AffinityTopologyVersion> requestTopVer = new ThreadLocal<>();\n \n+    /** Patter to test incoming query to decide whether this query should be executed with Calcite or H2. */\n+    private static final Pattern IS_SELECT_OR_EXPLAIN_PATTERN =\n+        Pattern.compile(\"^\\\\s*(select|explain plan for)\", CASE_INSENSITIVE);\n+\n     /** For tests. */\n     public static Class<? extends GridQueryIndexing> idxCls;\n \n@@ -245,10 +250,6 @@\n     /** Experimental calcite query engine. */\n     private QueryEngine experimentalQueryEngine;\n \n-    /** h2 redirection stub. */\n-    public static final Pattern H2_REDIRECTION_RULES =\n-        Pattern.compile(\"\\\\s*((create|drop)\\\\s*(table|index)|alter\\\\s*table)\", CASE_INSENSITIVE);\n-\n     /** @see IgniteSystemProperties#IGNITE_EXPERIMENTAL_SQL_ENGINE */\n     public static final boolean DFLT_IGNITE_EXPERIMENTAL_SQL_ENGINE = false;\n \n@@ -2837,7 +2838,7 @@ private void checkxEnabled() throws IgniteException {\n             throw new CacheException(\"Execution of local SqlFieldsQuery on client node disallowed.\");\n \n         if (experimentalQueryEngine != null && useExperimentalSqlEngine) {\n-            if (!H2_REDIRECTION_RULES.matcher(qry.getSql()).find())\n+            if (shouldRedirectToCalcite(qry.getSql()))\n                 return experimentalQueryEngine.query(QueryContext.of(qry), qry.getSchema(), qry.getSql(), X.EMPTY_OBJECT_ARRAY);\n         }\n \n@@ -3629,6 +3630,14 @@ public static void setRequestAffinityTopologyVersion(AffinityTopologyVersion ver\n         requestTopVer.set(ver);\n     }\n \n+    /**\n+     * @param sql Query to execute.\n+     * @return {@code true} if the given query should be executed with Calcite-based engine.\n+     */\n+    public static boolean shouldRedirectToCalcite(String sql) {\n+        return IS_SELECT_OR_EXPLAIN_PATTERN.matcher(sql).find();\n+    }\n+\n     /**\n      * @return Affinity topology version of the current request.\n      */"
  }
]
