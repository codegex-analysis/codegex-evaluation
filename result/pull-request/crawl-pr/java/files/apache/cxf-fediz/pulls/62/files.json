[
  {
    "sha": "d9f5a99794ee403d99d8eb5a8428acd4c5817f77",
    "filename": "plugins/core/pom.xml",
    "status": "modified",
    "additions": 19,
    "deletions": 18,
    "changes": 37,
    "blob_url": "https://github.com/apache/cxf-fediz/blob/7c146376d5d4fd868510b6316f94f57bc1904366/plugins/core/pom.xml",
    "raw_url": "https://github.com/apache/cxf-fediz/raw/7c146376d5d4fd868510b6316f94f57bc1904366/plugins/core/pom.xml",
    "contents_url": "https://api.github.com/repos/apache/cxf-fediz/contents/plugins/core/pom.xml?ref=7c146376d5d4fd868510b6316f94f57bc1904366",
    "patch": "@@ -32,12 +32,6 @@\n         <cxf.xjc-utils.version>3.3.1</cxf.xjc-utils.version>\n     </properties>\n     <dependencies>\n-        <dependency>\n-            <groupId>junit</groupId>\n-            <artifactId>junit</artifactId>\n-            <version>${junit.version}</version>\n-            <scope>test</scope>\n-        </dependency>\n         <dependency>\n             <groupId>org.apache.wss4j</groupId>\n             <artifactId>wss4j-ws-security-dom</artifactId>\n@@ -50,18 +44,6 @@\n                 </exclusion>\n             </exclusions>\n         </dependency>\n-        <dependency>\n-            <groupId>net.sf.ehcache</groupId>\n-            <artifactId>ehcache</artifactId>\n-            <version>${ehcache.version}</version>\n-            <scope>compile</scope>\n-        </dependency>\n-        <dependency>\n-            <groupId>org.slf4j</groupId>\n-            <artifactId>slf4j-jdk14</artifactId>\n-            <version>${slf4j.version}</version>\n-            <scope>test</scope>\n-        </dependency>\n         <dependency>\n             <groupId>org.slf4j</groupId>\n             <artifactId>slf4j-api</artifactId>\n@@ -73,12 +55,31 @@\n             <version>${servlet.version}</version>\n             <scope>provided</scope>\n         </dependency>\n+\n+        <dependency>\n+            <groupId>junit</groupId>\n+            <artifactId>junit</artifactId>\n+            <version>${junit.version}</version>\n+            <scope>test</scope>\n+        </dependency>\n         <dependency>\n             <groupId>org.easymock</groupId>\n             <artifactId>easymock</artifactId>\n             <version>${easymock.version}</version>\n             <scope>test</scope>\n         </dependency>\n+        <dependency>\n+            <groupId>org.slf4j</groupId>\n+            <artifactId>slf4j-jdk14</artifactId>\n+            <version>${slf4j.version}</version>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>xerces</groupId>\n+            <artifactId>xercesImpl</artifactId>\n+            <version>2.12.1</version>\n+            <scope>test</scope>\n+       </dependency>\n     </dependencies>\n     <build>\n         <plugins>"
  },
  {
    "sha": "ef38e67de0ce6d3a669f9bc142b0f41edba8dde2",
    "filename": "plugins/core/src/main/java/org/apache/cxf/fediz/core/config/FedizContext.java",
    "status": "modified",
    "additions": 20,
    "deletions": 17,
    "changes": 37,
    "blob_url": "https://github.com/apache/cxf-fediz/blob/7c146376d5d4fd868510b6316f94f57bc1904366/plugins/core/src/main/java/org/apache/cxf/fediz/core/config/FedizContext.java",
    "raw_url": "https://github.com/apache/cxf-fediz/raw/7c146376d5d4fd868510b6316f94f57bc1904366/plugins/core/src/main/java/org/apache/cxf/fediz/core/config/FedizContext.java",
    "contents_url": "https://api.github.com/repos/apache/cxf-fediz/contents/plugins/core/src/main/java/org/apache/cxf/fediz/core/config/FedizContext.java?ref=7c146376d5d4fd868510b6316f94f57bc1904366",
    "patch": "@@ -24,6 +24,8 @@\n import java.io.IOException;\n import java.math.BigInteger;\n import java.net.URL;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n import java.security.cert.CertificateException;\n import java.security.cert.X509Certificate;\n import java.util.ArrayList;\n@@ -44,10 +46,11 @@\n import org.apache.cxf.fediz.core.config.jaxb.TrustedIssuerType;\n import org.apache.cxf.fediz.core.config.jaxb.TrustedIssuers;\n import org.apache.cxf.fediz.core.exception.IllegalConfigurationException;\n+import org.apache.cxf.fediz.core.exception.ProcessingException;\n import org.apache.cxf.fediz.core.processor.ClaimsProcessor;\n import org.apache.cxf.fediz.core.util.CertsUtils;\n+import org.apache.wss4j.common.cache.EHCacheReplayCache;\n import org.apache.wss4j.common.cache.ReplayCache;\n-import org.apache.wss4j.common.cache.ReplayCacheFactory;\n import org.apache.wss4j.common.crypto.CertificateStore;\n import org.apache.wss4j.common.crypto.Crypto;\n import org.apache.wss4j.common.crypto.CryptoFactory;\n@@ -239,26 +242,26 @@ public KeyManager getDecryptionKey() {\n \n     }\n \n-    public ReplayCache getTokenReplayCache() {\n+    public ReplayCache getTokenReplayCache() throws ProcessingException {\n         if (replayCache != null) {\n             return replayCache;\n         }\n-        String replayCacheString = config.getTokenReplayCache();\n-        String cacheKey = CACHE_KEY_PREFIX + \"-\" + config.getName();\n-        ReplayCacheFactory replayCacheFactory = ReplayCacheFactory.newInstance();\n-        if (replayCacheString == null || \"\".equals(replayCacheString)) {\n-            replayCache = replayCacheFactory.newReplayCache(cacheKey, \"/fediz-ehcache.xml\");\n-        } else {\n-            try {\n-                Class<?> replayCacheClass = Loader.loadClass(replayCacheString);\n-                replayCache = (ReplayCache) replayCacheClass.newInstance();\n-            } catch (ClassNotFoundException e) {\n-                replayCache = replayCacheFactory.newReplayCache(cacheKey, \"/fediz-ehcache.xml\");\n-            } catch (InstantiationException e) {\n-                replayCache = replayCacheFactory.newReplayCache(cacheKey, \"/fediz-ehcache.xml\");\n-            } catch (IllegalAccessException e) {\n-                replayCache = replayCacheFactory.newReplayCache(cacheKey, \"/fediz-ehcache.xml\");\n+        final String replayCacheString = config.getTokenReplayCache();\n+        final String cacheKey = CACHE_KEY_PREFIX + '-' + config.getName();\n+        try {\n+            final Path diskstorePath = Files.createTempDirectory(\"fediz\");\n+            if (replayCacheString == null || replayCacheString.isEmpty()) {\n+                replayCache = new EHCacheReplayCache(cacheKey, diskstorePath);\n+            } else {\n+                try {\n+                    Class<?> replayCacheClass = Loader.loadClass(replayCacheString);\n+                    replayCache = (ReplayCache) replayCacheClass.getDeclaredConstructor().newInstance();\n+                } catch (ReflectiveOperationException e) {\n+                    replayCache = new EHCacheReplayCache(cacheKey, diskstorePath);\n+                }\n             }\n+        } catch (Exception e) {\n+            throw new ProcessingException(e.getMessage(), e);\n         }\n         return replayCache;\n     }"
  },
  {
    "sha": "354408c3f5afab9dfd1802fcff059875218e8d68",
    "filename": "plugins/core/src/main/java/org/apache/cxf/fediz/core/processor/AbstractFedizProcessor.java",
    "status": "modified",
    "additions": 1,
    "deletions": 3,
    "changes": 4,
    "blob_url": "https://github.com/apache/cxf-fediz/blob/7c146376d5d4fd868510b6316f94f57bc1904366/plugins/core/src/main/java/org/apache/cxf/fediz/core/processor/AbstractFedizProcessor.java",
    "raw_url": "https://github.com/apache/cxf-fediz/raw/7c146376d5d4fd868510b6316f94f57bc1904366/plugins/core/src/main/java/org/apache/cxf/fediz/core/processor/AbstractFedizProcessor.java",
    "contents_url": "https://api.github.com/repos/apache/cxf-fediz/contents/plugins/core/src/main/java/org/apache/cxf/fediz/core/processor/AbstractFedizProcessor.java?ref=7c146376d5d4fd868510b6316f94f57bc1904366",
    "patch": "@@ -94,9 +94,7 @@ protected void testForReplayAttack(String tokenId, FedizContext config, Instant\n             if (!config.getTokenReplayCache().contains(tokenId)) {\n                 // not cached\n                 if (expires != null) {\n-                    Instant now = Instant.now();\n-                    long ttl = expires.getEpochSecond() - now.getEpochSecond();\n-                    config.getTokenReplayCache().add(tokenId, ttl);\n+                    config.getTokenReplayCache().add(tokenId, expires);\n                 } else {\n                     config.getTokenReplayCache().add(tokenId);\n                 }"
  },
  {
    "sha": "5e15ec9381025eb5a4448810b436be40d49af60d",
    "filename": "plugins/core/src/main/java/org/apache/cxf/fediz/core/samlsso/SAMLSSOResponseValidator.java",
    "status": "modified",
    "additions": 2,
    "deletions": 5,
    "changes": 7,
    "blob_url": "https://github.com/apache/cxf-fediz/blob/7c146376d5d4fd868510b6316f94f57bc1904366/plugins/core/src/main/java/org/apache/cxf/fediz/core/samlsso/SAMLSSOResponseValidator.java",
    "raw_url": "https://github.com/apache/cxf-fediz/raw/7c146376d5d4fd868510b6316f94f57bc1904366/plugins/core/src/main/java/org/apache/cxf/fediz/core/samlsso/SAMLSSOResponseValidator.java",
    "contents_url": "https://api.github.com/repos/apache/cxf-fediz/contents/plugins/core/src/main/java/org/apache/cxf/fediz/core/samlsso/SAMLSSOResponseValidator.java?ref=7c146376d5d4fd868510b6316f94f57bc1904366",
    "patch": "@@ -19,7 +19,6 @@\n package org.apache.cxf.fediz.core.samlsso;\n \n import java.time.Instant;\n-import java.util.Date;\n import java.util.List;\n \n import org.w3c.dom.Element;\n@@ -228,10 +227,8 @@ private void validateSubjectConfirmation(\n         // Need to keep bearer assertion IDs based on NotOnOrAfter to detect replay attacks\n         if (postBinding && replayCache != null) {\n             if (replayCache.contains(id)) {\n-                Date expires = subjectConfData.getNotOnOrAfter().toDate();\n-                Date currentTime = new Date();\n-                long ttl = expires.getTime() - currentTime.getTime();\n-                replayCache.add(id, ttl / 1000L);\n+                Instant expires = subjectConfData.getNotOnOrAfter().toDate().toInstant();\n+                replayCache.add(id, expires);\n             } else {\n                 LOG.debug(\"Replay attack with token id: \" + id);\n                 throw new WSSecurityException(WSSecurityException.ErrorCode.FAILURE, \"invalidSAMLsecurity\");"
  },
  {
    "sha": "b888f0faa0d0a0e5364c2afb3352b171a161e67b",
    "filename": "plugins/core/src/main/resources/fediz-ehcache.xml",
    "status": "removed",
    "additions": 0,
    "deletions": 35,
    "changes": 35,
    "blob_url": "https://github.com/apache/cxf-fediz/blob/278475d85555ffa9f3dd9e4825e41d639d30ba91/plugins/core/src/main/resources/fediz-ehcache.xml",
    "raw_url": "https://github.com/apache/cxf-fediz/raw/278475d85555ffa9f3dd9e4825e41d639d30ba91/plugins/core/src/main/resources/fediz-ehcache.xml",
    "contents_url": "https://api.github.com/repos/apache/cxf-fediz/contents/plugins/core/src/main/resources/fediz-ehcache.xml?ref=278475d85555ffa9f3dd9e4825e41d639d30ba91",
    "patch": "@@ -1,35 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-  Licensed to the Apache Software Foundation (ASF) under one\n-  or more contributor license agreements. See the NOTICE file\n-  distributed with this work for additional information\n-  regarding copyright ownership. The ASF licenses this file\n-  to you under the Apache License, Version 2.0 (the\n-  \"License\"); you may not use this file except in compliance\n-  with the License. You may obtain a copy of the License at\n- \n-  http://www.apache.org/licenses/LICENSE-2.0\n- \n-  Unless required by applicable law or agreed to in writing,\n-  software distributed under the License is distributed on an\n-  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-  KIND, either express or implied. See the License for the\n-  specific language governing permissions and limitations\n-  under the License.\n--->\n-<ehcache xsi:noNamespaceSchemaLocation=\"ehcache.xsd\" updateCheck=\"false\" monitoring=\"autodetect\" dynamicConfig=\"true\">\n-\n-    <diskStore path=\"java.io.tmpdir\"/>\n-\n-    <defaultCache\n-            maxEntriesLocalHeap=\"5000\"\n-            eternal=\"false\"\n-            timeToIdleSeconds=\"3600\"\n-            timeToLiveSeconds=\"3600\"\n-            overflowToDisk=\"true\"\n-            maxElementsOnDisk=\"10000000\"\n-            diskPersistent=\"false\"\n-            diskExpiryThreadIntervalSeconds=\"120\"\n-            memoryStoreEvictionPolicy=\"LRU\"\n-            />\n-</ehcache>"
  },
  {
    "sha": "f7b4a2bee4e4773aef34cbaaa683772a10153754",
    "filename": "plugins/core/src/test/java/org/apache/cxf/fediz/core/AbstractSAMLCallbackHandler.java",
    "status": "modified",
    "additions": 9,
    "deletions": 2,
    "changes": 11,
    "blob_url": "https://github.com/apache/cxf-fediz/blob/7c146376d5d4fd868510b6316f94f57bc1904366/plugins/core/src/test/java/org/apache/cxf/fediz/core/AbstractSAMLCallbackHandler.java",
    "raw_url": "https://github.com/apache/cxf-fediz/raw/7c146376d5d4fd868510b6316f94f57bc1904366/plugins/core/src/test/java/org/apache/cxf/fediz/core/AbstractSAMLCallbackHandler.java",
    "contents_url": "https://api.github.com/repos/apache/cxf-fediz/contents/plugins/core/src/test/java/org/apache/cxf/fediz/core/AbstractSAMLCallbackHandler.java?ref=7c146376d5d4fd868510b6316f94f57bc1904366",
    "patch": "@@ -28,6 +28,8 @@\n import java.util.List;\n import java.util.Map;\n \n+import javax.crypto.KeyGenerator;\n+import javax.crypto.SecretKey;\n import javax.security.auth.callback.CallbackHandler;\n import javax.xml.parsers.DocumentBuilder;\n import javax.xml.parsers.DocumentBuilderFactory;\n@@ -47,6 +49,7 @@\n import org.apache.wss4j.common.saml.bean.SubjectBean;\n import org.apache.wss4j.common.saml.bean.SubjectConfirmationDataBean;\n import org.apache.wss4j.common.saml.bean.SubjectLocalityBean;\n+import org.apache.wss4j.common.util.KeyUtils;\n import org.apache.wss4j.dom.WSConstants;\n import org.apache.wss4j.dom.message.WSSecEncryptedKey;\n \n@@ -422,8 +425,12 @@ protected KeyInfoBean createKeyInfo() throws Exception {\n             WSSecEncryptedKey encrKey = new WSSecEncryptedKey(doc);\n             encrKey.setKeyIdentifierType(WSConstants.ISSUER_SERIAL);\n             encrKey.setUseThisCert(certs[0]);\n-            encrKey.prepare(null);\n-            ephemeralKey = encrKey.getEphemeralKey();\n+\n+            KeyGenerator keyGen = KeyUtils.getKeyGenerator(WSConstants.AES_128);\n+            SecretKey symmetricKey = keyGen.generateKey();\n+\n+            encrKey.prepare(null, symmetricKey);\n+            ephemeralKey = symmetricKey.getEncoded();\n             Element encryptedKeyElement = encrKey.getEncryptedKeyElement();\n \n             // Append the EncryptedKey to a KeyInfo element"
  },
  {
    "sha": "cc725080540731f6bf7d41bb56dc3ccb3be4047c",
    "filename": "plugins/core/src/test/java/org/apache/cxf/fediz/core/config/FedizConfigurationTest.java",
    "status": "modified",
    "additions": 4,
    "deletions": 3,
    "changes": 7,
    "blob_url": "https://github.com/apache/cxf-fediz/blob/7c146376d5d4fd868510b6316f94f57bc1904366/plugins/core/src/test/java/org/apache/cxf/fediz/core/config/FedizConfigurationTest.java",
    "raw_url": "https://github.com/apache/cxf-fediz/raw/7c146376d5d4fd868510b6316f94f57bc1904366/plugins/core/src/test/java/org/apache/cxf/fediz/core/config/FedizConfigurationTest.java",
    "contents_url": "https://api.github.com/repos/apache/cxf-fediz/contents/plugins/core/src/test/java/org/apache/cxf/fediz/core/config/FedizConfigurationTest.java?ref=7c146376d5d4fd868510b6316f94f57bc1904366",
    "patch": "@@ -49,6 +49,7 @@\n import org.apache.cxf.fediz.core.config.jaxb.TrustedIssuerType;\n import org.apache.cxf.fediz.core.config.jaxb.TrustedIssuers;\n import org.apache.cxf.fediz.core.config.jaxb.ValidationType;\n+import org.apache.cxf.fediz.core.exception.ProcessingException;\n import org.apache.cxf.fediz.core.processor.ClaimsProcessor;\n import org.apache.wss4j.common.cache.EHCacheReplayCache;\n import org.apache.wss4j.common.cache.MemoryReplayCache;\n@@ -350,7 +351,7 @@ public void verifyConfigSAML() throws JAXBException {\n     }\n \n     @org.junit.Test\n-    public void testTokenReplayCacheFederation() throws JAXBException, IOException {\n+    public void testTokenReplayCacheFederation() throws Exception {\n         FedizConfig config = createConfiguration(true);\n \n         // Test the default TokenReplayCache\n@@ -375,7 +376,7 @@ public void testTokenReplayCacheFederation() throws JAXBException, IOException {\n     }\n \n     @org.junit.Test\n-    public void testTokenReplayCacheSAML() throws JAXBException, IOException {\n+    public void testTokenReplayCacheSAML() throws Exception {\n         FedizConfig config = createConfiguration(false);\n \n         // Test the default TokenReplayCache\n@@ -400,7 +401,7 @@ public void testTokenReplayCacheSAML() throws JAXBException, IOException {\n     }\n \n     private ReplayCache parseConfigAndReturnTokenReplayCache(FedizConfig config)\n-        throws JAXBException {\n+        throws JAXBException, ProcessingException {\n         final JAXBContext jaxbContext = JAXBContext.newInstance(FedizConfig.class);\n \n         StringWriter writer = new StringWriter();"
  },
  {
    "sha": "abdc062959b2a48f102870e78c10bb5401d0b6e5",
    "filename": "plugins/core/src/test/java/org/apache/cxf/fediz/core/federation/FederationResponseTest.java",
    "status": "modified",
    "additions": 9,
    "deletions": 2,
    "changes": 11,
    "blob_url": "https://github.com/apache/cxf-fediz/blob/7c146376d5d4fd868510b6316f94f57bc1904366/plugins/core/src/test/java/org/apache/cxf/fediz/core/federation/FederationResponseTest.java",
    "raw_url": "https://github.com/apache/cxf-fediz/raw/7c146376d5d4fd868510b6316f94f57bc1904366/plugins/core/src/test/java/org/apache/cxf/fediz/core/federation/FederationResponseTest.java",
    "contents_url": "https://api.github.com/repos/apache/cxf-fediz/contents/plugins/core/src/test/java/org/apache/cxf/fediz/core/federation/FederationResponseTest.java?ref=7c146376d5d4fd868510b6316f94f57bc1904366",
    "patch": "@@ -28,6 +28,8 @@\n import java.util.Collections;\n import java.util.List;\n \n+import javax.crypto.KeyGenerator;\n+import javax.crypto.SecretKey;\n import javax.security.auth.callback.CallbackHandler;\n import javax.security.auth.callback.UnsupportedCallbackException;\n \n@@ -77,6 +79,7 @@\n import org.apache.wss4j.common.saml.builder.SAML1Constants;\n import org.apache.wss4j.common.saml.builder.SAML2Constants;\n import org.apache.wss4j.common.util.DOM2Writer;\n+import org.apache.wss4j.common.util.KeyUtils;\n import org.apache.wss4j.common.util.XMLUtils;\n import org.apache.wss4j.dom.WSConstants;\n import org.apache.wss4j.dom.message.WSSecEncrypt;\n@@ -1757,8 +1760,12 @@ private String encryptAndSignToken(\n         encryptionPart.setElement(token);\n \n         Crypto encrCrypto = CryptoFactory.getInstance(\"signature.properties\");\n-        builder.prepare(encrCrypto);\n-        builder.encryptForRef(null, Collections.singletonList(encryptionPart));\n+\n+        KeyGenerator keyGen = KeyUtils.getKeyGenerator(builder.getSymmetricEncAlgorithm());\n+        SecretKey symmetricKey = keyGen.generateKey();\n+\n+        builder.prepare(encrCrypto, symmetricKey);\n+        builder.encryptForRef(null, Collections.singletonList(encryptionPart), symmetricKey);\n \n         // return doc.getDocumentElement();\n         return DOM2Writer.nodeToString(doc);"
  },
  {
    "sha": "0d8d90243d50e444ec310ee6bfa56b8be0b316a1",
    "filename": "plugins/core/src/test/resources/logging.properties",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/apache/cxf-fediz/blob/7c146376d5d4fd868510b6316f94f57bc1904366/plugins/core/src/test/resources/logging.properties",
    "raw_url": "https://github.com/apache/cxf-fediz/raw/7c146376d5d4fd868510b6316f94f57bc1904366/plugins/core/src/test/resources/logging.properties",
    "contents_url": "https://api.github.com/repos/apache/cxf-fediz/contents/plugins/core/src/test/resources/logging.properties?ref=7c146376d5d4fd868510b6316f94f57bc1904366",
    "patch": "@@ -15,7 +15,7 @@\n # Note that these classes must be on the system classpath.\n # By default we only configure a ConsoleHandler, which will only\n # show messages at the WARNING and above levels.\n-handlers= java.util.logging.ConsoleHandler\n+#handlers= java.util.logging.ConsoleHandler\n #handlers= java.util.logging.FileHandler, java.util.logging.ConsoleHandler\n \n # Default global logging level."
  },
  {
    "sha": "1b5bca472df068b7dd64b32cebac432f5ee97820",
    "filename": "plugins/cxf/pom.xml",
    "status": "modified",
    "additions": 13,
    "deletions": 17,
    "changes": 30,
    "blob_url": "https://github.com/apache/cxf-fediz/blob/7c146376d5d4fd868510b6316f94f57bc1904366/plugins/cxf/pom.xml",
    "raw_url": "https://github.com/apache/cxf-fediz/raw/7c146376d5d4fd868510b6316f94f57bc1904366/plugins/cxf/pom.xml",
    "contents_url": "https://api.github.com/repos/apache/cxf-fediz/contents/plugins/cxf/pom.xml?ref=7c146376d5d4fd868510b6316f94f57bc1904366",
    "patch": "@@ -62,25 +62,21 @@\n             <version>${cxf.version}</version>\n             <scope>compile</scope>\n         </dependency>\n+        <dependency>\n+            <groupId>org.ehcache</groupId>\n+            <artifactId>ehcache</artifactId>\n+            <version>${ehcache3.version}</version>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>junit</groupId>\n+            <artifactId>junit</artifactId>\n+            <version>${junit.version}</version>\n+            <scope>test</scope>\n+        </dependency> \n     </dependencies>\n+\n     <build>\n-        <sourceDirectory>${basedir}/src/main/java</sourceDirectory>\n-        <resources>\n-            <resource>\n-                <directory>src/main/java</directory>\n-                <excludes>\n-                    <exclude>**/*.java</exclude>\n-                </excludes>\n-            </resource>\n-            <resource>\n-                <directory>src/main/resources</directory>\n-                <includes>\n-                    <include>**/*</include>\n-                </includes>\n-            </resource>\n-        </resources>\n-        \n-        \n         <plugins>\n             <plugin>\n                 <groupId>org.apache.maven.plugins</groupId>"
  },
  {
    "sha": "5ad15bf3bac056a94a01811a801f285199cd8021",
    "filename": "plugins/cxf/src/main/java/org/apache/cxf/fediz/cxf/plugin/AbstractServiceProviderFilter.java",
    "status": "modified",
    "additions": 4,
    "deletions": 6,
    "changes": 10,
    "blob_url": "https://github.com/apache/cxf-fediz/blob/7c146376d5d4fd868510b6316f94f57bc1904366/plugins/cxf/src/main/java/org/apache/cxf/fediz/cxf/plugin/AbstractServiceProviderFilter.java",
    "raw_url": "https://github.com/apache/cxf-fediz/raw/7c146376d5d4fd868510b6316f94f57bc1904366/plugins/cxf/src/main/java/org/apache/cxf/fediz/cxf/plugin/AbstractServiceProviderFilter.java",
    "contents_url": "https://api.github.com/repos/apache/cxf-fediz/contents/plugins/cxf/src/main/java/org/apache/cxf/fediz/cxf/plugin/AbstractServiceProviderFilter.java?ref=7c146376d5d4fd868510b6316f94f57bc1904366",
    "patch": "@@ -21,7 +21,6 @@\n import java.io.File;\n import java.io.IOException;\n import java.io.StringReader;\n-import java.net.MalformedURLException;\n import java.net.URI;\n import java.net.URL;\n import java.util.List;\n@@ -117,12 +116,9 @@ public synchronized void configure() throws JAXBException, IOException {\n             } catch (JAXBException e) {\n                 LOG.error(\"Error in parsing configuration\", e);\n                 throw e;\n-            } catch (MalformedURLException e) {\n+            } catch (IOException e) {\n                 LOG.error(\"Error in loading configuration file\", e);\n                 throw e;\n-            } catch (Exception e) {\n-                LOG.error(\"Error in loading configuration file\", e);\n-                throw new IOException(e);\n             }\n         }\n \n@@ -146,7 +142,9 @@ public synchronized void cleanup() throws IOException {\n             }\n         }\n \n-        stateManager.close();\n+        if (stateManager != null) {\n+            stateManager.close();\n+        }\n     }\n \n     protected boolean checkSecurityContext(FedizContext fedConfig, Message m, MultivaluedMap<String, String> params) {"
  },
  {
    "sha": "159a40a2b97e8289066be17222ce924635ad91dc",
    "filename": "plugins/cxf/src/main/java/org/apache/cxf/fediz/cxf/plugin/state/EHCacheSPStateManager.java",
    "status": "modified",
    "additions": 37,
    "deletions": 94,
    "changes": 131,
    "blob_url": "https://github.com/apache/cxf-fediz/blob/7c146376d5d4fd868510b6316f94f57bc1904366/plugins/cxf/src/main/java/org/apache/cxf/fediz/cxf/plugin/state/EHCacheSPStateManager.java",
    "raw_url": "https://github.com/apache/cxf-fediz/raw/7c146376d5d4fd868510b6316f94f57bc1904366/plugins/cxf/src/main/java/org/apache/cxf/fediz/cxf/plugin/state/EHCacheSPStateManager.java",
    "contents_url": "https://api.github.com/repos/apache/cxf-fediz/contents/plugins/cxf/src/main/java/org/apache/cxf/fediz/cxf/plugin/state/EHCacheSPStateManager.java?ref=7c146376d5d4fd868510b6316f94f57bc1904366",
    "patch": "@@ -21,152 +21,95 @@\n import java.io.IOException;\n import java.net.URL;\n \n-import net.sf.ehcache.Cache;\n-import net.sf.ehcache.CacheManager;\n-import net.sf.ehcache.Ehcache;\n-import net.sf.ehcache.Element;\n-import net.sf.ehcache.config.CacheConfiguration;\n import org.apache.cxf.fediz.core.RequestState;\n-import org.apache.wss4j.common.cache.EHCacheManagerHolder;\n import org.apache.wss4j.common.util.Loader;\n+import org.ehcache.Cache;\n+import org.ehcache.CacheManager;\n+import org.ehcache.config.builders.CacheManagerBuilder;\n+import org.ehcache.xml.XmlConfiguration;\n \n /**\n  * An in-memory EHCache implementation of the SPStateManager interface.\n  * The default TTL is 5 minutes.\n  */\n public class EHCacheSPStateManager implements SPStateManager {\n \n-    public static final long DEFAULT_TTL = 60L * 5L;\n     public static final String REQUEST_CACHE_KEY = \"cxf.fediz.samlp.request.state.cache\";\n     public static final String RESPONSE_CACHE_KEY = \"cxf.fediz.samlp.response.state.cache\";\n \n-    private Ehcache requestCache;\n-    private Ehcache responseCache;\n+    private Cache<String, RequestState> requestCache;\n+    private Cache<String, ResponseState> responseCache;\n     private CacheManager cacheManager;\n-    private long ttl = DEFAULT_TTL;\n \n     public EHCacheSPStateManager(String configFile) {\n         this(getConfigFileURL(configFile));\n     }\n \n     public EHCacheSPStateManager(URL configFileURL) {\n-        this(EHCacheManagerHolder.getCacheManager(\"\", configFileURL));\n+        XmlConfiguration xmlConfig = new XmlConfiguration(configFileURL);\n+        cacheManager = CacheManagerBuilder.newCacheManager(xmlConfig); \n+        cacheManager.init();\n+        initCache();\n     }\n \n     public EHCacheSPStateManager(CacheManager cacheManager) {\n         this.cacheManager = cacheManager;\n-\n-        CacheConfiguration requestCC = EHCacheManagerHolder.getCacheConfiguration(REQUEST_CACHE_KEY, cacheManager);\n-\n-        Ehcache newCache = new Cache(requestCC);\n-        requestCache = cacheManager.addCacheIfAbsent(newCache);\n-\n-        CacheConfiguration responseCC = EHCacheManagerHolder.getCacheConfiguration(RESPONSE_CACHE_KEY, cacheManager);\n-\n-        newCache = new Cache(responseCC);\n-        responseCache = cacheManager.addCacheIfAbsent(newCache);\n+        initCache();\n     }\n \n-    private static URL getConfigFileURL(Object o) {\n-        if (o instanceof String) {\n-            try {\n-                URL url = Loader.getResource((String)o);\n-                if (url == null) {\n-                    url = new URL((String)o);\n-                }\n-                return url;\n-            } catch (IOException e) {\n-                // Do nothing\n+    private static URL getConfigFileURL(String configFile) {\n+        try {\n+            URL url = Loader.getResource(configFile);\n+            if (url == null) {\n+                url = new URL(configFile);\n             }\n-        } else if (o instanceof URL) {\n-            return (URL)o;\n+            return url;\n+        } catch (IOException e) {\n+            // Do nothing\n         }\n         return null;\n     }\n \n-    /**\n-     * Set a new (default) TTL value in seconds\n-     * @param newTtl a new (default) TTL value in seconds\n-     */\n-    public void setTTL(long newTtl) {\n-        ttl = newTtl;\n-    }\n-\n-    /**\n-     * Get the (default) TTL value in seconds\n-     * @return the (default) TTL value in seconds\n-     */\n-    public long getTTL() {\n-        return ttl;\n+    private void initCache() {\n+        requestCache = cacheManager.getCache(REQUEST_CACHE_KEY, String.class, RequestState.class);\n+        responseCache = cacheManager.getCache(RESPONSE_CACHE_KEY, String.class, ResponseState.class);\n     }\n \n     public void setRequestState(String relayState, RequestState state) {\n-        if (relayState == null || \"\".equals(relayState)) {\n-            return;\n+        if (relayState != null && !relayState.isEmpty()) {\n+            requestCache.put(relayState, state);\n         }\n-\n-        int parsedTTL = (int)ttl;\n-        if (ttl != (long)parsedTTL) {\n-            // Fall back to 60 minutes if the default TTL is set incorrectly\n-            parsedTTL = 3600;\n-        }\n-\n-        Element element = new Element(relayState, state);\n-        element.setTimeToLive(parsedTTL);\n-        element.setTimeToIdle(parsedTTL);\n-        requestCache.put(element);\n     }\n \n     public RequestState removeRequestState(String relayState) {\n-        Element element = requestCache.get(relayState);\n-        if (element != null) {\n+        RequestState state = requestCache.get(relayState);\n+        if (state != null) {\n             requestCache.remove(relayState);\n-            return (RequestState)element.getObjectValue();\n         }\n-        return null;\n+        return state;\n     }\n \n     public ResponseState getResponseState(String securityContextKey) {\n-        Element element = responseCache.get(securityContextKey);\n-        if (element != null) {\n-            if (responseCache.isExpired(element)) {\n-                responseCache.remove(securityContextKey);\n-                return null;\n-            }\n-            return (ResponseState)element.getObjectValue();\n-        }\n-        return null;\n-    }\n-\n-    public ResponseState removeResponseState(String securityContextKey) {\n-        Element element = responseCache.get(securityContextKey);\n-        if (element != null) {\n-            responseCache.remove(securityContextKey);\n-            return (ResponseState)element.getObjectValue();\n-        }\n-        return null;\n+        return responseCache.get(securityContextKey);\n     }\n \n     public void setResponseState(String securityContextKey, ResponseState state) {\n-        if (securityContextKey == null || \"\".equals(securityContextKey)) {\n-            return;\n+        if (securityContextKey != null && !securityContextKey.isEmpty()) {\n+            responseCache.put(securityContextKey, state);\n         }\n+    }\n \n-        int parsedTTL = (int)ttl;\n-        if (ttl != (long)parsedTTL) {\n-            // Fall back to 5 minutes if the default TTL is set incorrectly\n-            parsedTTL = 60 * 5;\n+    public ResponseState removeResponseState(String securityContextKey) {\n+        ResponseState state = responseCache.get(securityContextKey);\n+        if (state != null) {\n+            responseCache.remove(securityContextKey);\n         }\n-        Element element = new Element(securityContextKey, state);\n-        element.setTimeToLive(parsedTTL);\n-        element.setTimeToIdle(parsedTTL);\n-\n-        responseCache.put(element);\n+        return state;\n     }\n \n     public void close() throws IOException {\n         if (cacheManager != null) {\n-            cacheManager.shutdown();\n+            cacheManager.close();\n             cacheManager = null;\n             requestCache = null;\n             responseCache = null;"
  },
  {
    "sha": "c45fb1898742291f05baff51798678858b758d49",
    "filename": "plugins/cxf/src/main/resources/fediz-ehcache.xml",
    "status": "added",
    "additions": 25,
    "deletions": 0,
    "changes": 25,
    "blob_url": "https://github.com/apache/cxf-fediz/blob/7c146376d5d4fd868510b6316f94f57bc1904366/plugins/cxf/src/main/resources/fediz-ehcache.xml",
    "raw_url": "https://github.com/apache/cxf-fediz/raw/7c146376d5d4fd868510b6316f94f57bc1904366/plugins/cxf/src/main/resources/fediz-ehcache.xml",
    "contents_url": "https://api.github.com/repos/apache/cxf-fediz/contents/plugins/cxf/src/main/resources/fediz-ehcache.xml?ref=7c146376d5d4fd868510b6316f94f57bc1904366",
    "patch": "@@ -0,0 +1,25 @@\n+<config\n+    xmlns='http://www.ehcache.org/v3'\n+    xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'\n+    xsi:schemaLocation=\"http://www.ehcache.org/v3 https://www.ehcache.org/schema/ehcache-core.xsd\">\n+\n+    <cache-template name=\"cxf.fediz.samlp.state.cache.template\">\n+        <key-type>java.lang.String</key-type>\n+        <expiry>\n+            <ttl unit=\"seconds\">300</ttl>\n+        </expiry>\n+        <resources>\n+            <heap unit=\"entries\">5000</heap>\n+            <offheap unit=\"MB\">10</offheap>\n+        </resources>\n+    </cache-template>\n+\n+    <cache alias=\"cxf.fediz.samlp.request.state.cache\" uses-template=\"cxf.fediz.samlp.state.cache.template\">\n+        <value-type>org.apache.cxf.fediz.core.RequestState</value-type>\n+    </cache>\n+\n+    <cache alias=\"cxf.fediz.samlp.response.state.cache\" uses-template=\"cxf.fediz.samlp.state.cache.template\">\n+        <value-type>org.apache.cxf.fediz.cxf.plugin.state.ResponseState</value-type>\n+    </cache>\n+\n+</config>"
  },
  {
    "sha": "13c3d926c1f14df340e5462ed8469d5067b3d512",
    "filename": "plugins/cxf/src/main/resources/org/apache/cxf/fediz/cxf/plugin/Messages.properties",
    "status": "renamed",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/apache/cxf-fediz/blob/7c146376d5d4fd868510b6316f94f57bc1904366/plugins/cxf/src/main/resources/org/apache/cxf/fediz/cxf/plugin/Messages.properties",
    "raw_url": "https://github.com/apache/cxf-fediz/raw/7c146376d5d4fd868510b6316f94f57bc1904366/plugins/cxf/src/main/resources/org/apache/cxf/fediz/cxf/plugin/Messages.properties",
    "contents_url": "https://api.github.com/repos/apache/cxf-fediz/contents/plugins/cxf/src/main/resources/org/apache/cxf/fediz/cxf/plugin/Messages.properties?ref=7c146376d5d4fd868510b6316f94f57bc1904366",
    "previous_filename": "plugins/cxf/src/main/java/org/apache/cxf/fediz/cxf/plugin/Messages.properties"
  },
  {
    "sha": "2a257679aaf533489e853fae6e9c94e7e354f5aa",
    "filename": "plugins/cxf/src/test/java/org/apache/cxf/fediz/cxf/plugin/state/EHCacheSPStateManagerTest.java",
    "status": "added",
    "additions": 78,
    "deletions": 0,
    "changes": 78,
    "blob_url": "https://github.com/apache/cxf-fediz/blob/7c146376d5d4fd868510b6316f94f57bc1904366/plugins/cxf/src/test/java/org/apache/cxf/fediz/cxf/plugin/state/EHCacheSPStateManagerTest.java",
    "raw_url": "https://github.com/apache/cxf-fediz/raw/7c146376d5d4fd868510b6316f94f57bc1904366/plugins/cxf/src/test/java/org/apache/cxf/fediz/cxf/plugin/state/EHCacheSPStateManagerTest.java",
    "contents_url": "https://api.github.com/repos/apache/cxf-fediz/contents/plugins/cxf/src/test/java/org/apache/cxf/fediz/cxf/plugin/state/EHCacheSPStateManagerTest.java?ref=7c146376d5d4fd868510b6316f94f57bc1904366",
    "patch": "@@ -0,0 +1,78 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.cxf.fediz.cxf.plugin.state;\n+\n+import org.apache.cxf.fediz.core.RequestState;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNull;\n+\n+public class EHCacheSPStateManagerTest {\n+\n+    private static final int HEAP_ENTRIES = 5000;\n+\n+    private static SPStateManager stateManager;\n+\n+    @Test\n+    public void testRequestState() {\n+        RequestState requestState = new RequestState();\n+        for (int i = 0; i < 2 * HEAP_ENTRIES; ++i) {\n+            stateManager.setRequestState(String.valueOf(i), requestState);\n+        }\n+        for (int i = 0; i < 2 * HEAP_ENTRIES; ++i) {\n+            assertNotNull(String.valueOf(i), stateManager.removeRequestState(String.valueOf(i)));\n+            assertNull(stateManager.removeRequestState(String.valueOf(i)));\n+        }\n+    }\n+\n+    @Test\n+    public void testResponseState() {\n+        assertNull(stateManager.getResponseState(\"\"));\n+        ResponseState responseState = new ResponseState();\n+        for (int i = 0; i < 2 * HEAP_ENTRIES; ++i) {\n+            stateManager.setResponseState(String.valueOf(i), responseState);\n+        }\n+        for (int i = 0; i < 2 * HEAP_ENTRIES; ++i) {\n+            assertNotNull(String.valueOf(i), stateManager.getResponseState(String.valueOf(i)));\n+            assertNotNull(String.valueOf(i), stateManager.removeResponseState(String.valueOf(i)));\n+            assertNull(stateManager.removeResponseState(String.valueOf(i)));\n+        }\n+    }\n+\n+    @Test\n+    public void testTwoManagers() throws Exception {\n+        try (SPStateManager stateManager = new EHCacheSPStateManager(\"fediz-ehcache.xml\")) {\n+            assertNotNull(stateManager);\n+        }\n+    }\n+\n+    @BeforeClass\n+    public static void beforeClass() throws Exception {\n+        stateManager = new EHCacheSPStateManager(\"fediz-ehcache.xml\");\n+    }\n+\n+    @AfterClass\n+    public static void afterClass() throws Exception {\n+        stateManager.close();\n+    }\n+}"
  },
  {
    "sha": "59df4607d7e806f2852f8cf8a99284ecab3088d9",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 4,
    "deletions": 5,
    "changes": 9,
    "blob_url": "https://github.com/apache/cxf-fediz/blob/7c146376d5d4fd868510b6316f94f57bc1904366/pom.xml",
    "raw_url": "https://github.com/apache/cxf-fediz/raw/7c146376d5d4fd868510b6316f94f57bc1904366/pom.xml",
    "contents_url": "https://api.github.com/repos/apache/cxf-fediz/contents/pom.xml?ref=7c146376d5d4fd868510b6316f94f57bc1904366",
    "patch": "@@ -43,15 +43,14 @@\n         <commons.logging.version>1.2</commons.logging.version>\n         <commons.text.version>1.9</commons.text.version>\n         <commons.validator.version>1.7</commons.validator.version>\n-        <cxf.version>3.3.9</cxf.version>\n+        <cxf.version>3.4.2</cxf.version>\n         <cxf.build-utils.version>3.4.4</cxf.build-utils.version>\n         <easymock.version>4.0.2</easymock.version>\n-        <ehcache.version>2.10.6</ehcache.version>\n         <ehcache3.version>3.8.1</ehcache3.version>\n         <jcache.version>1.0.0</jcache.version>\n         <hsqldb.version>2.5.1</hsqldb.version>\n         <htmlunit.version>2.47.1</htmlunit.version>\n-        <jackson.version>2.10.5</jackson.version>\n+        <jackson.version>2.11.4</jackson.version>\n         <jaxb.version>2.3.2</jaxb.version>\n         <jetty9.version>9.4.37.v20210219</jetty9.version>\n         <junit.version>4.13.2</junit.version>\n@@ -62,11 +61,11 @@\n         <slf4j.version>1.7.30</slf4j.version>\n         <spring.version>4.3.30.RELEASE</spring.version>\n         <spring-ldap-core.version>2.3.3.RELEASE</spring-ldap-core.version>\n-        <spring.security.version>4.2.19.RELEASE</spring.security.version>\n+        <spring.security.version>4.2.20.RELEASE</spring.security.version>\n         <spring-webflow.version>2.5.1.RELEASE</spring-webflow.version>\n         <tomcat.version>9.0.43</tomcat.version>\n         <validation-api.version>2.0.2</validation-api.version>\n-        <wss4j.version>2.2.6</wss4j.version>\n+        <wss4j.version>2.3.1</wss4j.version>\n \n         <tomcat.url>http://localhost:8080/manager/text</tomcat.url>\n         <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>"
  },
  {
    "sha": "0fc37a6e88890a9b0461a4a3e14d6fa4c8b22791",
    "filename": "services/idp-core/src/main/java/org/apache/cxf/fediz/service/idp/protocols/TrustedIdpSAMLProtocolHandler.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/apache/cxf-fediz/blob/7c146376d5d4fd868510b6316f94f57bc1904366/services/idp-core/src/main/java/org/apache/cxf/fediz/service/idp/protocols/TrustedIdpSAMLProtocolHandler.java",
    "raw_url": "https://github.com/apache/cxf-fediz/raw/7c146376d5d4fd868510b6316f94f57bc1904366/services/idp-core/src/main/java/org/apache/cxf/fediz/service/idp/protocols/TrustedIdpSAMLProtocolHandler.java",
    "contents_url": "https://api.github.com/repos/apache/cxf-fediz/contents/services/idp-core/src/main/java/org/apache/cxf/fediz/service/idp/protocols/TrustedIdpSAMLProtocolHandler.java?ref=7c146376d5d4fd868510b6316f94f57bc1904366",
    "patch": "@@ -389,7 +389,7 @@ private SSOValidatorResponse validateSamlSSOResponse(\n             }\n \n             return ssoResponseValidator.validateSamlResponse(samlResponse, post);\n-        } catch (WSSecurityException ex) {\n+        } catch (Exception ex) {\n             LOG.debug(ex.getMessage(), ex);\n             throw ExceptionUtils.toBadRequestException(ex, null);\n         }\n@@ -399,7 +399,7 @@ public void setReplayCache(TokenReplayCache<String> replayCache) {\n         this.replayCache = replayCache;\n     }\n \n-    public TokenReplayCache<String> getReplayCache() {\n+    public TokenReplayCache<String> getReplayCache() throws IllegalAccessException, ReflectiveOperationException {\n         if (replayCache == null) {\n             replayCache = new EHCacheTokenReplayCache();\n         }"
  },
  {
    "sha": "d867383b34b94bcb17749e3a3369fa8ab1589a89",
    "filename": "services/oidc/pom.xml",
    "status": "modified",
    "additions": 0,
    "deletions": 17,
    "changes": 17,
    "blob_url": "https://github.com/apache/cxf-fediz/blob/7c146376d5d4fd868510b6316f94f57bc1904366/services/oidc/pom.xml",
    "raw_url": "https://github.com/apache/cxf-fediz/raw/7c146376d5d4fd868510b6316f94f57bc1904366/services/oidc/pom.xml",
    "contents_url": "https://api.github.com/repos/apache/cxf-fediz/contents/services/oidc/pom.xml?ref=7c146376d5d4fd868510b6316f94f57bc1904366",
    "patch": "@@ -40,29 +40,12 @@\n             <artifactId>fediz-core</artifactId>\n             <version>${project.version}</version>\n             <scope>provided</scope>\n-            <!-- TODO Remove when we pick up WSS4J 2.3.0-SNAPSHOT -->\n-            <exclusions>\n-                <exclusion>\n-                    <groupId>net.sf.ehcache</groupId>\n-                    <artifactId>ehcache</artifactId>\n-                </exclusion>\n-            </exclusions> \n         </dependency>\n         <dependency>\n             <groupId>org.apache.cxf</groupId>\n             <artifactId>cxf-rt-rs-security-sso-oidc</artifactId>\n             <version>${cxf.version}</version>\n         </dependency>\n-        <dependency>\n-            <groupId>javax.cache</groupId>\n-            <artifactId>cache-api</artifactId>\n-            <version>${jcache.version}</version>\n-        </dependency>\n-        <dependency>\n-            <groupId>org.ehcache</groupId>\n-            <artifactId>ehcache</artifactId>\n-            <version>${ehcache3.version}</version>\n-        </dependency> \n         <dependency>\n             <groupId>org.apache.cxf</groupId>\n             <artifactId>cxf-rt-rs-extension-providers</artifactId>"
  },
  {
    "sha": "51ca53db514fe4a7eb4d621d9ab9aac0d8d4ad4e",
    "filename": "services/oidc/src/main/java/org/apache/cxf/fediz/service/oidc/PrivateKeyPasswordProviderImpl.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/apache/cxf-fediz/blob/7c146376d5d4fd868510b6316f94f57bc1904366/services/oidc/src/main/java/org/apache/cxf/fediz/service/oidc/PrivateKeyPasswordProviderImpl.java",
    "raw_url": "https://github.com/apache/cxf-fediz/raw/7c146376d5d4fd868510b6316f94f57bc1904366/services/oidc/src/main/java/org/apache/cxf/fediz/service/oidc/PrivateKeyPasswordProviderImpl.java",
    "contents_url": "https://api.github.com/repos/apache/cxf-fediz/contents/services/oidc/src/main/java/org/apache/cxf/fediz/service/oidc/PrivateKeyPasswordProviderImpl.java?ref=7c146376d5d4fd868510b6316f94f57bc1904366",
    "patch": "@@ -20,7 +20,7 @@\n \n import java.util.Properties;\n \n-import org.apache.cxf.rs.security.jose.common.PrivateKeyPasswordProvider;\n+import org.apache.cxf.rt.security.rs.PrivateKeyPasswordProvider;\n \n public class PrivateKeyPasswordProviderImpl implements PrivateKeyPasswordProvider {\n "
  },
  {
    "sha": "87a741b849d26c18b15ea110777ccb84cbfd5dec",
    "filename": "services/sts/src/main/resources/log4j.properties",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/apache/cxf-fediz/blob/7c146376d5d4fd868510b6316f94f57bc1904366/services/sts/src/main/resources/log4j.properties",
    "raw_url": "https://github.com/apache/cxf-fediz/raw/7c146376d5d4fd868510b6316f94f57bc1904366/services/sts/src/main/resources/log4j.properties",
    "contents_url": "https://api.github.com/repos/apache/cxf-fediz/contents/services/sts/src/main/resources/log4j.properties?ref=7c146376d5d4fd868510b6316f94f57bc1904366",
    "patch": "@@ -28,5 +28,5 @@ log4j.appender.AUDIT.File=${catalina.base}/logs/audit.log\n log4j.appender.AUDIT.DatePattern='.'yyyy-MM-dd\n log4j.appender.AUDIT.Append=true\n log4j.appender.AUDIT.Threshold=DEBUG\n-log4j.appender.AUDIT.layout=org.apache.cxf.sts.event.LoggerPatternLayoutLog4J\n-log4j.appender.AUDIT.layout.ConversionPattern=%m%n\n+log4j.appender.AUDIT.layout=org.apache.log4j.PatternLayout\n+log4j.appender.AUDIT.layout.ConversionPattern=%d [%t] %-5p %c %x - %m%n"
  },
  {
    "sha": "3636a8a2fbfa829ab78d9130ce6804194bcd1da2",
    "filename": "systests/cxf/src/test/java/org/apache/cxf/fediz/systests/cxf/FederationTest.java",
    "status": "modified",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/apache/cxf-fediz/blob/7c146376d5d4fd868510b6316f94f57bc1904366/systests/cxf/src/test/java/org/apache/cxf/fediz/systests/cxf/FederationTest.java",
    "raw_url": "https://github.com/apache/cxf-fediz/raw/7c146376d5d4fd868510b6316f94f57bc1904366/systests/cxf/src/test/java/org/apache/cxf/fediz/systests/cxf/FederationTest.java",
    "contents_url": "https://api.github.com/repos/apache/cxf-fediz/contents/systests/cxf/src/test/java/org/apache/cxf/fediz/systests/cxf/FederationTest.java?ref=7c146376d5d4fd868510b6316f94f57bc1904366",
    "patch": "@@ -56,7 +56,6 @@\n     @BeforeClass\n     public static void init() throws Exception {\n         idpHttpsPort = System.getProperty(\"idp.https.port\");\n-        // idpHttpsPort = \"12345\";\n         Assert.assertNotNull(\"Property 'idp.https.port' null\", idpHttpsPort);\n         rpHttpsPort = System.getProperty(\"rp.https.port\");\n         Assert.assertNotNull(\"Property 'rp.https.port' null\", rpHttpsPort);"
  },
  {
    "sha": "a173f06dd73da1899708de20b9ded7457f319039",
    "filename": "systests/federation/oidcIdpWebapp/src/main/resources/logging.properties",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/apache/cxf-fediz/blob/7c146376d5d4fd868510b6316f94f57bc1904366/systests/federation/oidcIdpWebapp/src/main/resources/logging.properties",
    "raw_url": "https://github.com/apache/cxf-fediz/raw/7c146376d5d4fd868510b6316f94f57bc1904366/systests/federation/oidcIdpWebapp/src/main/resources/logging.properties",
    "contents_url": "https://api.github.com/repos/apache/cxf-fediz/contents/systests/federation/oidcIdpWebapp/src/main/resources/logging.properties?ref=7c146376d5d4fd868510b6316f94f57bc1904366",
    "patch": "@@ -15,7 +15,7 @@\n # Note that these classes must be on the system classpath.\n # By default we only configure a ConsoleHandler, which will only\n # show messages at the WARNING and above levels.\n-handlers= java.util.logging.ConsoleHandler\n+#handlers= java.util.logging.ConsoleHandler\n #handlers= java.util.logging.FileHandler, java.util.logging.ConsoleHandler\n \n # Default global logging level."
  },
  {
    "sha": "a173f06dd73da1899708de20b9ded7457f319039",
    "filename": "systests/federation/samlIdpWebapp/src/main/resources/logging.properties",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/apache/cxf-fediz/blob/7c146376d5d4fd868510b6316f94f57bc1904366/systests/federation/samlIdpWebapp/src/main/resources/logging.properties",
    "raw_url": "https://github.com/apache/cxf-fediz/raw/7c146376d5d4fd868510b6316f94f57bc1904366/systests/federation/samlIdpWebapp/src/main/resources/logging.properties",
    "contents_url": "https://api.github.com/repos/apache/cxf-fediz/contents/systests/federation/samlIdpWebapp/src/main/resources/logging.properties?ref=7c146376d5d4fd868510b6316f94f57bc1904366",
    "patch": "@@ -15,7 +15,7 @@\n # Note that these classes must be on the system classpath.\n # By default we only configure a ConsoleHandler, which will only\n # show messages at the WARNING and above levels.\n-handlers= java.util.logging.ConsoleHandler\n+#handlers= java.util.logging.ConsoleHandler\n #handlers= java.util.logging.FileHandler, java.util.logging.ConsoleHandler\n \n # Default global logging level."
  },
  {
    "sha": "c674f2a7395cf4bcca0f04dba8d77ae897434442",
    "filename": "systests/oidc/pom.xml",
    "status": "modified",
    "additions": 8,
    "deletions": 3,
    "changes": 11,
    "blob_url": "https://github.com/apache/cxf-fediz/blob/7c146376d5d4fd868510b6316f94f57bc1904366/systests/oidc/pom.xml",
    "raw_url": "https://github.com/apache/cxf-fediz/raw/7c146376d5d4fd868510b6316f94f57bc1904366/systests/oidc/pom.xml",
    "contents_url": "https://api.github.com/repos/apache/cxf-fediz/contents/systests/oidc/pom.xml?ref=7c146376d5d4fd868510b6316f94f57bc1904366",
    "patch": "@@ -84,6 +84,11 @@\n             <version>${cxf.version}</version>\n             <scope>test</scope>\n         </dependency>\n+        <dependency>\n+            <groupId>javax.cache</groupId>\n+            <artifactId>cache-api</artifactId>\n+            <version>${jcache.version}</version>\n+        </dependency>\n         <!-- org.apache.cxf.ws.security.trust.STSLoginModule -->\n         <dependency>\n             <groupId>org.apache.cxf</groupId>\n@@ -152,7 +157,7 @@\n                                     <type>war</type>\n                                     <overWrite>true</overWrite>\n                                     <outputDirectory>${project.build.directory}/tomcat/rp/webapps/fediz-oidc-tomcat</outputDirectory>\n-                                    <excludes>META-INF/context.xml,**/jakarta.xml.bind-api-*.jar</excludes>\n+                                    <excludes>META-INF/context.xml,**/jakarta.xml.bind-api-*.jar,**/ehcache-*.jar</excludes>\n                                 </artifactItem>\n                                 <artifactItem>\n                                     <groupId>org.apache.cxf.fediz</groupId>\n@@ -189,7 +194,7 @@\n                         <configuration>\n                             <outputDirectory>${project.build.directory}/tomcat/rp/webapps/fediz-oidc-tomcat/WEB-INF/lib</outputDirectory>\n                             <includeScope>compile</includeScope>\n-                            <excludeGroupIds>org.springframework.security,org.apache.cxf.fediz,jakarta.xml.bind</excludeGroupIds>\n+                            <excludeGroupIds>org.springframework.security,org.apache.cxf.fediz,jakarta.xml.bind,javax.cache,org.ehcache</excludeGroupIds>\n                         </configuration>\n                     </execution>\n                     <execution>\n@@ -200,7 +205,7 @@\n                         </goals>\n                         <configuration>\n                             <outputDirectory>${project.build.directory}/tomcat/rp/webapps/fediz-oidc-spring/WEB-INF/lib</outputDirectory>\n-                             <includeScope>compile</includeScope>\n+                            <includeScope>compile</includeScope>\n                         </configuration>\n                     </execution>\n                 </executions>"
  }
]
