[
  {
    "sha": "74e2351ad6272be08ffeac9ff15ec499b7e964bc",
    "filename": "jspwiki-api/src/main/java/org/apache/wiki/api/core/Engine.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/apache/jspwiki/blob/967b3a28061748067474a998cdf5830b37a92518/jspwiki-api/src/main/java/org/apache/wiki/api/core/Engine.java",
    "raw_url": "https://github.com/apache/jspwiki/raw/967b3a28061748067474a998cdf5830b37a92518/jspwiki-api/src/main/java/org/apache/wiki/api/core/Engine.java",
    "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/jspwiki-api/src/main/java/org/apache/wiki/api/core/Engine.java?ref=967b3a28061748067474a998cdf5830b37a92518",
    "patch": "@@ -26,13 +26,13 @@ Licensed to the Apache Software Foundation (ASF) under one\n import javax.servlet.ServletContext;\n import java.io.File;\n import java.io.FileNotFoundException;\n-import java.io.FileOutputStream;\n import java.io.IOException;\n import java.io.InputStream;\n import java.io.OutputStream;\n import java.net.MalformedURLException;\n import java.net.URL;\n import java.nio.charset.Charset;\n+import java.nio.file.Files;\n import java.util.Collection;\n import java.util.Date;\n import java.util.List;\n@@ -269,7 +269,7 @@ default URL findConfigFile( final String name ) {\n             Logger.getLogger( Engine.class ).info( \"looking for /\" + name + \" on classpath\" );\n             //  create a tmp file of the policy loaded as an InputStream and return the URL to it\n             try( final InputStream is = Engine.class.getResourceAsStream( \"/\" + name );\n-                    final OutputStream os = new FileOutputStream( tmpFile ) ) {\n+                final OutputStream os = Files.newOutputStream( tmpFile.toPath() ) ) {\n                 if( is == null ) {\n                     throw new FileNotFoundException( name + \" not found\" );\n                 }"
  },
  {
    "sha": "a57ee535a2e9b2f61dbd33d45d785d15a07ea33b",
    "filename": "jspwiki-main/src/main/java/org/apache/wiki/attachment/AttachmentManager.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/apache/jspwiki/blob/967b3a28061748067474a998cdf5830b37a92518/jspwiki-main/src/main/java/org/apache/wiki/attachment/AttachmentManager.java",
    "raw_url": "https://github.com/apache/jspwiki/raw/967b3a28061748067474a998cdf5830b37a92518/jspwiki-main/src/main/java/org/apache/wiki/attachment/AttachmentManager.java",
    "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/jspwiki-main/src/main/java/org/apache/wiki/attachment/AttachmentManager.java?ref=967b3a28061748067474a998cdf5830b37a92518",
    "patch": "@@ -29,9 +29,9 @@ Licensed to the Apache Software Foundation (ASF) under one\n import org.apache.wiki.api.providers.WikiProvider;\n \n import java.io.File;\n-import java.io.FileInputStream;\n import java.io.IOException;\n import java.io.InputStream;\n+import java.nio.file.Files;\n import java.util.Collection;\n import java.util.List;\n \n@@ -221,7 +221,7 @@ default InputStream getAttachmentStream( final Attachment att ) throws IOExcepti\n      *  @throws ProviderException If something else went wrong.\n      */\n     default void storeAttachment( final Attachment att, final File source ) throws IOException, ProviderException {\n-        try( final FileInputStream in = new FileInputStream( source ) ) {\n+        try( final InputStream in = Files.newInputStream( source.toPath() ) ) {\n             storeAttachment( att, in );\n         }\n     }"
  },
  {
    "sha": "f2b13e2c1ca33b08d56dd98d19c11558977cb15d",
    "filename": "jspwiki-main/src/main/java/org/apache/wiki/auth/authorize/XMLGroupDatabase.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/apache/jspwiki/blob/967b3a28061748067474a998cdf5830b37a92518/jspwiki-main/src/main/java/org/apache/wiki/auth/authorize/XMLGroupDatabase.java",
    "raw_url": "https://github.com/apache/jspwiki/raw/967b3a28061748067474a998cdf5830b37a92518/jspwiki-main/src/main/java/org/apache/wiki/auth/authorize/XMLGroupDatabase.java",
    "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/jspwiki-main/src/main/java/org/apache/wiki/auth/authorize/XMLGroupDatabase.java?ref=967b3a28061748067474a998cdf5830b37a92518",
    "patch": "@@ -36,10 +36,10 @@ Licensed to the Apache Software Foundation (ASF) under one\n import java.io.BufferedWriter;\n import java.io.File;\n import java.io.FileNotFoundException;\n-import java.io.FileOutputStream;\n import java.io.IOException;\n import java.io.OutputStreamWriter;\n import java.nio.charset.StandardCharsets;\n+import java.nio.file.Files;\n import java.security.Principal;\n import java.text.DateFormat;\n import java.text.ParseException;\n@@ -350,7 +350,7 @@ private void saveDOM() throws WikiSecurityException {\n         }\n \n         final File newFile = new File( m_file.getAbsolutePath() + \".new\" );\n-        try( final BufferedWriter io = new BufferedWriter( new OutputStreamWriter( new FileOutputStream( newFile ), StandardCharsets.UTF_8 ) ) ) {\n+        try( final BufferedWriter io = new BufferedWriter( new OutputStreamWriter( Files.newOutputStream( newFile.toPath() ), StandardCharsets.UTF_8 ) ) ) {\n             // Write the file header and document root\n             io.write( \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n\" );\n             io.write( \"<groups>\\n\" );"
  },
  {
    "sha": "7d1e8e987db39360c7bf7201df53b75a3274128d",
    "filename": "jspwiki-main/src/main/java/org/apache/wiki/auth/login/CookieAuthenticationLoginModule.java",
    "status": "modified",
    "additions": 3,
    "deletions": 4,
    "changes": 7,
    "blob_url": "https://github.com/apache/jspwiki/blob/967b3a28061748067474a998cdf5830b37a92518/jspwiki-main/src/main/java/org/apache/wiki/auth/login/CookieAuthenticationLoginModule.java",
    "raw_url": "https://github.com/apache/jspwiki/raw/967b3a28061748067474a998cdf5830b37a92518/jspwiki-main/src/main/java/org/apache/wiki/auth/login/CookieAuthenticationLoginModule.java",
    "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/jspwiki-main/src/main/java/org/apache/wiki/auth/login/CookieAuthenticationLoginModule.java?ref=967b3a28061748067474a998cdf5830b37a92518",
    "patch": "@@ -34,15 +34,14 @@ Licensed to the Apache Software Foundation (ASF) under one\n import java.io.BufferedReader;\n import java.io.BufferedWriter;\n import java.io.File;\n-import java.io.FileInputStream;\n-import java.io.FileOutputStream;\n import java.io.IOException;\n import java.io.InputStreamReader;\n import java.io.OutputStreamWriter;\n import java.io.Reader;\n import java.io.StringReader;\n import java.io.Writer;\n import java.nio.charset.StandardCharsets;\n+import java.nio.file.Files;\n import java.util.UUID;\n \n \n@@ -123,7 +122,7 @@ public boolean login() throws LoginException {\n \n                 if( cookieFile != null && cookieFile.exists() && cookieFile.canRead() ) {\n \n-                    try( final Reader in = new BufferedReader( new InputStreamReader( new FileInputStream( cookieFile ), StandardCharsets.UTF_8 ) ) ) {\n+                    try( final Reader in = new BufferedReader( new InputStreamReader(Files.newInputStream( cookieFile.toPath() ), StandardCharsets.UTF_8 ) ) ) {\n                         final String username = FileUtil.readContents( in );\n \n                         if( log.isDebugEnabled() ) {\n@@ -224,7 +223,7 @@ public static void setLoginCookie( final Engine engine, final HttpServletRespons\n         final File cf = getCookieFile( engine, uid.toString() );\n         if( cf != null ) {\n             //  Write the cookie content to the cookie store file.\n-            try( final Writer out = new BufferedWriter( new OutputStreamWriter( new FileOutputStream( cf ), StandardCharsets.UTF_8 ) ) ) {\n+            try( final Writer out = new BufferedWriter( new OutputStreamWriter( Files.newOutputStream( cf.toPath() ), StandardCharsets.UTF_8 ) ) ) {\n                 FileUtil.copyContents( new StringReader( username ), out );\n \n                 if( log.isDebugEnabled() ) {"
  },
  {
    "sha": "d0010c94449b83ce3ce783f73d22bc6775cf255a",
    "filename": "jspwiki-main/src/main/java/org/apache/wiki/auth/user/XMLUserDatabase.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/apache/jspwiki/blob/967b3a28061748067474a998cdf5830b37a92518/jspwiki-main/src/main/java/org/apache/wiki/auth/user/XMLUserDatabase.java",
    "raw_url": "https://github.com/apache/jspwiki/raw/967b3a28061748067474a998cdf5830b37a92518/jspwiki-main/src/main/java/org/apache/wiki/auth/user/XMLUserDatabase.java",
    "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/jspwiki-main/src/main/java/org/apache/wiki/auth/user/XMLUserDatabase.java?ref=967b3a28061748067474a998cdf5830b37a92518",
    "patch": "@@ -38,11 +38,11 @@ Licensed to the Apache Software Foundation (ASF) under one\n import java.io.BufferedWriter;\n import java.io.File;\n import java.io.FileNotFoundException;\n-import java.io.FileOutputStream;\n import java.io.IOException;\n import java.io.OutputStreamWriter;\n import java.io.Serializable;\n import java.nio.charset.StandardCharsets;\n+import java.nio.file.Files;\n import java.security.Principal;\n import java.text.DateFormat;\n import java.text.ParseException;\n@@ -233,7 +233,7 @@ private void saveDOM() throws WikiSecurityException {\n         }\n \n         final File newFile = new File( c_file.getAbsolutePath() + \".new\" );\n-        try( final BufferedWriter io = new BufferedWriter( new OutputStreamWriter( new FileOutputStream( newFile ), StandardCharsets.UTF_8 ) ) ) {\n+        try( final BufferedWriter io = new BufferedWriter( new OutputStreamWriter( Files.newOutputStream( newFile.toPath() ), StandardCharsets.UTF_8 ) ) ) {\n \n             // Write the file header and document root\n             io.write( \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n\" );"
  },
  {
    "sha": "768afce1a3defeee4b68cc9cfb6b57e1e3ae6789",
    "filename": "jspwiki-main/src/main/java/org/apache/wiki/filters/DefaultFilterManager.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/apache/jspwiki/blob/967b3a28061748067474a998cdf5830b37a92518/jspwiki-main/src/main/java/org/apache/wiki/filters/DefaultFilterManager.java",
    "raw_url": "https://github.com/apache/jspwiki/raw/967b3a28061748067474a998cdf5830b37a92518/jspwiki-main/src/main/java/org/apache/wiki/filters/DefaultFilterManager.java",
    "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/jspwiki-main/src/main/java/org/apache/wiki/filters/DefaultFilterManager.java?ref=967b3a28061748067474a998cdf5830b37a92518",
    "patch": "@@ -34,9 +34,9 @@ Licensed to the Apache Software Foundation (ASF) under one\n import org.jdom2.Element;\n \n import java.io.File;\n-import java.io.FileInputStream;\n import java.io.IOException;\n import java.io.InputStream;\n+import java.nio.file.Files;\n import java.util.Collection;\n import java.util.HashMap;\n import java.util.List;\n@@ -188,7 +188,7 @@ protected void initialize( final Properties props ) throws WikiException {\n \n             if( (xmlStream == null) && (xmlFile != null) ) {\n                 log.debug(\"Attempting to load property file \"+xmlFile);\n-                xmlStream = new FileInputStream( new File(xmlFile) );\n+                xmlStream = Files.newInputStream( new File(xmlFile).toPath() );\n             }\n \n             if( xmlStream == null ) {"
  },
  {
    "sha": "b6660484a3fb0fb197bac2732f58f0bc73c51cb3",
    "filename": "jspwiki-main/src/main/java/org/apache/wiki/plugin/PageViewPlugin.java",
    "status": "modified",
    "additions": 3,
    "deletions": 4,
    "changes": 7,
    "blob_url": "https://github.com/apache/jspwiki/blob/967b3a28061748067474a998cdf5830b37a92518/jspwiki-main/src/main/java/org/apache/wiki/plugin/PageViewPlugin.java",
    "raw_url": "https://github.com/apache/jspwiki/raw/967b3a28061748067474a998cdf5830b37a92518/jspwiki-main/src/main/java/org/apache/wiki/plugin/PageViewPlugin.java",
    "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/jspwiki-main/src/main/java/org/apache/wiki/plugin/PageViewPlugin.java?ref=967b3a28061748067474a998cdf5830b37a92518",
    "patch": "@@ -45,11 +45,10 @@ Licensed to the Apache Software Foundation (ASF) under one\n import org.apache.wiki.util.TextUtil;\n \n import java.io.File;\n-import java.io.FileInputStream;\n-import java.io.FileOutputStream;\n import java.io.IOException;\n import java.io.InputStream;\n import java.io.OutputStream;\n+import java.nio.file.Files;\n import java.text.MessageFormat;\n import java.util.Collection;\n import java.util.Comparator;\n@@ -510,7 +509,7 @@ private void loadCounters() {\n             if( m_counters != null && m_storage != null ) {\n                 log.info( \"Loading counters.\" );\n                 synchronized( this ) {\n-                    try( final InputStream fis = new FileInputStream( new File( m_workDir, COUNTER_PAGE ) ) ) {\n+                    try( final InputStream fis = Files.newInputStream( new File( m_workDir, COUNTER_PAGE ).toPath() ) ) {\n                         m_storage.load( fis );\n                     } catch( final IOException ioe ) {\n                         log.error( \"Can't load page counter store: \" + ioe.getMessage() + \" , will create a new one!\" );\n@@ -534,7 +533,7 @@ protected void storeCounters() {\n                 log.info( \"Storing \" + m_counters.size() + \" counter values.\" );\n                 synchronized( this ) {\n                     // Write out the collection of counters\n-                    try( final OutputStream fos = new FileOutputStream( new File( m_workDir, COUNTER_PAGE ) ) ) {\n+                    try( final OutputStream fos = Files.newOutputStream( new File( m_workDir, COUNTER_PAGE ).toPath() ) ) {\n                         m_storage.store( fos, \"\\n# The number of times each page has been viewed.\\n# Do not modify.\\n\" );\n                         fos.flush();\n "
  },
  {
    "sha": "b8c69e3cba7f8e47f603554e17b4db3d8624e935",
    "filename": "jspwiki-main/src/main/java/org/apache/wiki/providers/AbstractFileProvider.java",
    "status": "modified",
    "additions": 4,
    "deletions": 5,
    "changes": 9,
    "blob_url": "https://github.com/apache/jspwiki/blob/967b3a28061748067474a998cdf5830b37a92518/jspwiki-main/src/main/java/org/apache/wiki/providers/AbstractFileProvider.java",
    "raw_url": "https://github.com/apache/jspwiki/raw/967b3a28061748067474a998cdf5830b37a92518/jspwiki-main/src/main/java/org/apache/wiki/providers/AbstractFileProvider.java",
    "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/jspwiki-main/src/main/java/org/apache/wiki/providers/AbstractFileProvider.java?ref=967b3a28061748067474a998cdf5830b37a92518",
    "patch": "@@ -35,15 +35,14 @@ Licensed to the Apache Software Foundation (ASF) under one\n import org.apache.wiki.util.TextUtil;\n \n import java.io.File;\n-import java.io.FileInputStream;\n import java.io.FileNotFoundException;\n-import java.io.FileOutputStream;\n import java.io.FilenameFilter;\n import java.io.IOException;\n import java.io.InputStream;\n import java.io.OutputStreamWriter;\n import java.io.PrintWriter;\n import java.nio.charset.StandardCharsets;\n+import java.nio.file.Files;\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Date;\n@@ -247,7 +246,7 @@ private String getPageText( final String page ) {\n         final File pagedata = findPage( page );\n         if( pagedata.exists() ) {\n             if( pagedata.canRead() ) {\n-                try( final InputStream in = new FileInputStream( pagedata ) ) {\n+                try( final InputStream in = Files.newInputStream( pagedata.toPath() ) ) {\n                     result = FileUtil.readContents( in, m_encoding );\n                 } catch( final IOException e ) {\n                     log.error( \"Failed to read\", e );\n@@ -269,7 +268,7 @@ private String getPageText( final String page ) {\n     @Override\n     public void putPageText( final Page page, final String text ) throws ProviderException {\n         final File file = findPage( page.getName() );\n-        try( final PrintWriter out = new PrintWriter( new OutputStreamWriter( new FileOutputStream( file ), m_encoding ) ) ) {\n+        try( final PrintWriter out = new PrintWriter( new OutputStreamWriter( Files.newOutputStream( file.toPath() ), m_encoding ) ) ) {\n             out.print( text );\n         } catch( final IOException e ) {\n             log.error( \"Saving failed\", e );\n@@ -347,7 +346,7 @@ public int getPageCount() {\n                 final String filename = wikipage.getName();\n                 final int cutpoint = filename.lastIndexOf( FILE_EXT );\n                 final String wikiname = unmangleName( filename.substring( 0, cutpoint ) );\n-                try( final FileInputStream input = new FileInputStream( wikipage ) ) {\n+                try( final InputStream input = Files.newInputStream( wikipage.toPath() ) ) {\n                     final String pagetext = FileUtil.readContents( input, m_encoding );\n                     final SearchResult comparison = matcher.matchPageContent( wikiname, pagetext );\n                     if( comparison != null ) {"
  },
  {
    "sha": "907803d057eba023d47b8174968a682e3ee05053",
    "filename": "jspwiki-main/src/main/java/org/apache/wiki/providers/BasicAttachmentProvider.java",
    "status": "modified",
    "additions": 5,
    "deletions": 6,
    "changes": 11,
    "blob_url": "https://github.com/apache/jspwiki/blob/967b3a28061748067474a998cdf5830b37a92518/jspwiki-main/src/main/java/org/apache/wiki/providers/BasicAttachmentProvider.java",
    "raw_url": "https://github.com/apache/jspwiki/raw/967b3a28061748067474a998cdf5830b37a92518/jspwiki-main/src/main/java/org/apache/wiki/providers/BasicAttachmentProvider.java",
    "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/jspwiki-main/src/main/java/org/apache/wiki/providers/BasicAttachmentProvider.java?ref=967b3a28061748067474a998cdf5830b37a92518",
    "patch": "@@ -33,13 +33,12 @@ Licensed to the Apache Software Foundation (ASF) under one\n import org.apache.wiki.util.TextUtil;\n \n import java.io.File;\n-import java.io.FileInputStream;\n import java.io.FileNotFoundException;\n-import java.io.FileOutputStream;\n import java.io.FilenameFilter;\n import java.io.IOException;\n import java.io.InputStream;\n import java.io.OutputStream;\n+import java.nio.file.Files;\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Date;\n@@ -241,7 +240,7 @@ protected static String getFileExtension( final String filename ) {\n     private void putPageProperties( final Attachment att, final Properties properties ) throws IOException, ProviderException {\n         final File attDir = findAttachmentDir( att );\n         final File propertyFile = new File( attDir, PROPERTY_FILE );\n-        try( final OutputStream out = new FileOutputStream( propertyFile ) ) {\n+        try( final OutputStream out = Files.newOutputStream( propertyFile.toPath() ) ) {\n             properties.store( out, \" JSPWiki page properties for \" + att.getName() + \". DO NOT MODIFY!\" );\n         }\n     }\n@@ -253,7 +252,7 @@ private Properties getPageProperties( final Attachment att ) throws IOException,\n         final Properties props = new Properties();\n         final File propertyFile = new File( findAttachmentDir(att), PROPERTY_FILE );\n         if( propertyFile.exists() ) {\n-            try( final InputStream in = new FileInputStream( propertyFile ) ) {\n+            try( final InputStream in = Files.newInputStream( propertyFile.toPath() ) ) {\n                 props.load( in );\n             }\n         }\n@@ -275,7 +274,7 @@ public void putAttachmentData( final Attachment att, final InputStream data ) th\n         final int versionNumber = latestVersion + 1;\n \n         final File newfile = new File( attDir, versionNumber + \".\" + getFileExtension( att.getFileName() ) );\n-        try( final OutputStream out = new FileOutputStream( newfile ) ) {\n+        try( final OutputStream out = Files.newOutputStream( newfile.toPath() ) ) {\n             log.info( \"Uploading attachment \" + att.getFileName() + \" to page \" + att.getParentName() );\n             log.info( \"Saving attachment contents to \" + newfile.getAbsolutePath() );\n             FileUtil.copyContents( data, out );\n@@ -340,7 +339,7 @@ public InputStream getAttachmentData( final Attachment att ) throws IOException,\n         final File attDir = findAttachmentDir( att );\n         try {\n             final File f = findFile( attDir, att );\n-            return new FileInputStream( f );\n+            return Files.newInputStream( f.toPath() );\n         } catch( final FileNotFoundException e ) {\n             log.error( \"File not found: \" + e.getMessage() );\n             throw new ProviderException( \"No such page was found.\" );"
  },
  {
    "sha": "bbbe659f112bfc760bd2572b80833752e3b2c79f",
    "filename": "jspwiki-main/src/main/java/org/apache/wiki/providers/FileSystemProvider.java",
    "status": "modified",
    "additions": 3,
    "deletions": 4,
    "changes": 7,
    "blob_url": "https://github.com/apache/jspwiki/blob/967b3a28061748067474a998cdf5830b37a92518/jspwiki-main/src/main/java/org/apache/wiki/providers/FileSystemProvider.java",
    "raw_url": "https://github.com/apache/jspwiki/raw/967b3a28061748067474a998cdf5830b37a92518/jspwiki-main/src/main/java/org/apache/wiki/providers/FileSystemProvider.java",
    "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/jspwiki-main/src/main/java/org/apache/wiki/providers/FileSystemProvider.java?ref=967b3a28061748067474a998cdf5830b37a92518",
    "patch": "@@ -23,11 +23,10 @@ Licensed to the Apache Software Foundation (ASF) under one\n import org.apache.wiki.api.exceptions.ProviderException;\n \n import java.io.File;\n-import java.io.FileInputStream;\n-import java.io.FileOutputStream;\n import java.io.IOException;\n import java.io.InputStream;\n import java.io.OutputStream;\n+import java.nio.file.Files;\n import java.util.Properties;\n \n /**\n@@ -83,7 +82,7 @@ private void putPageProperties( final Page page ) throws IOException {\n         getCustomProperties( page, props );\n \n         final File file = new File( getPageDirectory(), mangleName( page.getName() ) + PROP_EXT );\n-        try( final OutputStream out = new FileOutputStream( file ) ) {\n+        try( final OutputStream out = Files.newOutputStream( file.toPath() ) ) {\n             props.store( out, \"JSPWiki page properties for page \"+page.getName() );\n         }\n     }\n@@ -94,7 +93,7 @@ private void putPageProperties( final Page page ) throws IOException {\n     private void getPageProperties( final Page page ) throws IOException {\n         final File file = new File( getPageDirectory(), mangleName( page.getName() ) + PROP_EXT );\n         if( file.exists() ) {\n-            try( final InputStream in = new FileInputStream( file ) ) {\n+            try( final InputStream in = Files.newInputStream( file.toPath() ) ) {\n                 final Properties  props = new Properties();\n                 props.load( in );\n                 page.setAuthor( props.getProperty( Page.AUTHOR ) );"
  },
  {
    "sha": "796eb4a1786a7708eeccb2de42c36f45894f2f6f",
    "filename": "jspwiki-main/src/main/java/org/apache/wiki/providers/VersioningFileProvider.java",
    "status": "modified",
    "additions": 9,
    "deletions": 10,
    "changes": 19,
    "blob_url": "https://github.com/apache/jspwiki/blob/967b3a28061748067474a998cdf5830b37a92518/jspwiki-main/src/main/java/org/apache/wiki/providers/VersioningFileProvider.java",
    "raw_url": "https://github.com/apache/jspwiki/raw/967b3a28061748067474a998cdf5830b37a92518/jspwiki-main/src/main/java/org/apache/wiki/providers/VersioningFileProvider.java",
    "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/jspwiki-main/src/main/java/org/apache/wiki/providers/VersioningFileProvider.java?ref=967b3a28061748067474a998cdf5830b37a92518",
    "patch": "@@ -32,11 +32,10 @@ Licensed to the Apache Software Foundation (ASF) under one\n import java.io.BufferedInputStream;\n import java.io.BufferedOutputStream;\n import java.io.File;\n-import java.io.FileInputStream;\n-import java.io.FileOutputStream;\n import java.io.IOException;\n import java.io.InputStream;\n import java.io.OutputStream;\n+import java.nio.file.Files;\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Date;\n@@ -213,7 +212,7 @@ private Properties getPageProperties( final String page ) throws IOException {\n                 return cp.m_props;\n             }\n \n-            try( final InputStream in = new BufferedInputStream(new FileInputStream( propertyFile ) ) ) {\n+            try( final InputStream in = new BufferedInputStream( Files.newInputStream( propertyFile.toPath() ) ) ) {\n                 final Properties props = new Properties();\n                 props.load( in );\n                 cp = new CachedProperties( page, props, lastModified );\n@@ -232,7 +231,7 @@ private Properties getPageProperties( final String page ) throws IOException {\n      */\n     private void putPageProperties( final String page, final Properties properties ) throws IOException {\n         final File propertyFile = new File( findOldPageDir(page), PROPERTYFILE );\n-        try( final OutputStream out = new FileOutputStream( propertyFile ) ) {\n+        try( final OutputStream out = Files.newOutputStream( propertyFile.toPath() ) ) {\n             properties.store( out, \" JSPWiki page properties for \"+page+\". DO NOT MODIFY!\" );\n         }\n \n@@ -292,7 +291,7 @@ private String readFile( final File pagedata ) throws ProviderException {\n         String result = null;\n         if( pagedata.exists() ) {\n             if( pagedata.canRead() ) {\n-                try( final InputStream in = new FileInputStream( pagedata ) ) {\n+                try( final InputStream in = Files.newInputStream( pagedata.toPath() ) ) {\n                     result = FileUtil.readContents( in, m_encoding );\n                 } catch( final IOException e ) {\n                     log.error(\"Failed to read\", e);\n@@ -346,8 +345,8 @@ public synchronized void putPageText( final Page page, final String text ) throw\n \n             if( oldFile != null && oldFile.exists() ) {\n                 final File pageFile = new File( pageDir, versionNumber + FILE_EXT );\n-                try( final InputStream in = new BufferedInputStream( new FileInputStream( oldFile ) );\n-                     final OutputStream out = new BufferedOutputStream( new FileOutputStream( pageFile ) ) ) {\n+                try( final InputStream in = new BufferedInputStream( Files.newInputStream( oldFile.toPath() ) );\n+                     final OutputStream out = new BufferedOutputStream( Files.newOutputStream( pageFile.toPath() ) ) ) {\n                     FileUtil.copyContents( in, out );\n \n                     // We need also to set the date, since we rely on this.\n@@ -517,7 +516,7 @@ private Properties getHeritagePageProperties( final String page ) throws IOExcep\n                 return cp.m_props;\n             }\n \n-            try( final InputStream in = new BufferedInputStream( new FileInputStream( propertyFile ) ) ) {\n+            try( final InputStream in = new BufferedInputStream( Files.newInputStream( propertyFile.toPath() ) ) ) {\n                 final Properties props = new Properties();\n                 props.load( in );\n \n@@ -599,8 +598,8 @@ public void deleteVersion( final String page, final int version ) throws Provide\n             final File pageDir = findOldPageDir( page );\n             final File previousFile = new File( pageDir, latest + FILE_EXT );\n             final File pageFile = findPage(page);\n-            try( final InputStream in = new BufferedInputStream( new FileInputStream( previousFile ) );\n-                 final OutputStream out = new BufferedOutputStream( new FileOutputStream( pageFile ) ) ) {\n+            try( final InputStream in = new BufferedInputStream( Files.newInputStream( previousFile.toPath() ) );\n+                 final OutputStream out = new BufferedOutputStream( Files.newOutputStream( pageFile.toPath() ) ) ) {\n                 if( previousFile.exists() ) {\n                     FileUtil.copyContents( in, out );\n                     // We need also to set the date, since we rely on this."
  },
  {
    "sha": "a7ae5b48276174fff4945ae0f46b41ce3a30b2a7",
    "filename": "jspwiki-main/src/main/java/org/apache/wiki/references/DefaultReferenceManager.java",
    "status": "modified",
    "additions": 5,
    "deletions": 4,
    "changes": 9,
    "blob_url": "https://github.com/apache/jspwiki/blob/967b3a28061748067474a998cdf5830b37a92518/jspwiki-main/src/main/java/org/apache/wiki/references/DefaultReferenceManager.java",
    "raw_url": "https://github.com/apache/jspwiki/raw/967b3a28061748067474a998cdf5830b37a92518/jspwiki-main/src/main/java/org/apache/wiki/references/DefaultReferenceManager.java",
    "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/jspwiki-main/src/main/java/org/apache/wiki/references/DefaultReferenceManager.java?ref=967b3a28061748067474a998cdf5830b37a92518",
    "patch": "@@ -41,6 +41,7 @@ Licensed to the Apache Software Foundation (ASF) under one\n \n import java.io.*;\n import java.nio.charset.StandardCharsets;\n+import java.nio.file.Files;\n import java.security.MessageDigest;\n import java.security.NoSuchAlgorithmException;\n import java.util.*;\n@@ -234,7 +235,7 @@ private synchronized long unserializeFromDisk() throws IOException, ClassNotFoun\n         final long saved;\n \n         final File f = new File( m_engine.getWorkDir(), SERIALIZATION_FILE );\n-        try( final ObjectInputStream in = new ObjectInputStream( new BufferedInputStream( new FileInputStream( f ) ) ) ) {\n+        try( final ObjectInputStream in = new ObjectInputStream( new BufferedInputStream( Files.newInputStream( f.toPath() ) ) ) ) {\n             final StopWatch sw = new StopWatch();\n             sw.start();\n \n@@ -263,7 +264,7 @@ private synchronized long unserializeFromDisk() throws IOException, ClassNotFoun\n      */\n     private synchronized void serializeToDisk() {\n         final File f = new File( m_engine.getWorkDir(), SERIALIZATION_FILE );\n-        try( final ObjectOutputStream out = new ObjectOutputStream( new BufferedOutputStream( new FileOutputStream( f ) ) ) ) {\n+        try( final ObjectOutputStream out = new ObjectOutputStream( new BufferedOutputStream( Files.newOutputStream( f.toPath() ) ) ) ) {\n             final StopWatch sw = new StopWatch();\n             sw.start();\n \n@@ -310,7 +311,7 @@ private synchronized long unserializeAttrsFromDisk( final Page p ) throws IOExce\n                 return 0L;\n             }\n \n-            try( final ObjectInputStream in = new ObjectInputStream( new BufferedInputStream( new FileInputStream( f ) ) ) ) {\n+            try( final ObjectInputStream in = new ObjectInputStream( new BufferedInputStream( Files.newInputStream( f.toPath() ) ) ) ) {\n                 final StopWatch sw = new StopWatch();\n                 sw.start();\n                 log.debug( \"Deserializing attributes for \" + p.getName() );\n@@ -362,7 +363,7 @@ private synchronized void serializeAttrsToDisk( final Page p ) {\n             //  Create a digest for the name\n             f = new File( f, hashName );\n \n-            try( final ObjectOutputStream out =  new ObjectOutputStream( new BufferedOutputStream( new FileOutputStream( f ) ) ) ) {\n+            try( final ObjectOutputStream out =  new ObjectOutputStream( new BufferedOutputStream( Files.newOutputStream( f.toPath() ) ) ) ) {\n                 // new Set to avoid concurrency issues\n                 final Set< Map.Entry < String, Object > > entries = new HashSet<>( p.getAttributes().entrySet() );\n "
  },
  {
    "sha": "5bec2b7c394a0082529c0125d8688136b6a2eaa5",
    "filename": "jspwiki-main/src/main/java/org/apache/wiki/rss/RSSThread.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/apache/jspwiki/blob/967b3a28061748067474a998cdf5830b37a92518/jspwiki-main/src/main/java/org/apache/wiki/rss/RSSThread.java",
    "raw_url": "https://github.com/apache/jspwiki/raw/967b3a28061748067474a998cdf5830b37a92518/jspwiki-main/src/main/java/org/apache/wiki/rss/RSSThread.java",
    "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/jspwiki-main/src/main/java/org/apache/wiki/rss/RSSThread.java?ref=967b3a28061748067474a998cdf5830b37a92518",
    "patch": "@@ -26,13 +26,13 @@ Licensed to the Apache Software Foundation (ASF) under one\n \n import java.io.BufferedWriter;\n import java.io.File;\n-import java.io.FileOutputStream;\n import java.io.IOException;\n import java.io.OutputStreamWriter;\n import java.io.Reader;\n import java.io.StringReader;\n import java.io.Writer;\n import java.nio.charset.StandardCharsets;\n+import java.nio.file.Files;\n \n \n /**\n@@ -87,7 +87,7 @@ public void backgroundTask() throws Exception {\n \n             // Generate RSS file, output it to default \"rss.rdf\".\n             try( final Reader in  = new StringReader( feed );\n-                 final Writer out = new BufferedWriter( new OutputStreamWriter( new FileOutputStream( m_rssFile ), StandardCharsets.UTF_8 ) ) ) {\n+                final Writer out = new BufferedWriter( new OutputStreamWriter( Files.newOutputStream( m_rssFile.toPath() ), StandardCharsets.UTF_8 ) ) ) {\n                 FileUtil.copyContents( in, out );\n             } catch( final IOException e ) {\n                 log.error( \"Cannot generate RSS feed to \" + m_rssFile.getAbsolutePath(), e );"
  },
  {
    "sha": "50b5900de164cebe57ddd5d595b6c7cb8adbe64f",
    "filename": "jspwiki-main/src/main/java/org/apache/wiki/ui/Installer.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/apache/jspwiki/blob/967b3a28061748067474a998cdf5830b37a92518/jspwiki-main/src/main/java/org/apache/wiki/ui/Installer.java",
    "raw_url": "https://github.com/apache/jspwiki/raw/967b3a28061748067474a998cdf5830b37a92518/jspwiki-main/src/main/java/org/apache/wiki/ui/Installer.java",
    "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/jspwiki-main/src/main/java/org/apache/wiki/ui/Installer.java?ref=967b3a28061748067474a998cdf5830b37a92518",
    "patch": "@@ -38,9 +38,9 @@ Licensed to the Apache Software Foundation (ASF) under one\n import javax.servlet.ServletConfig;\n import javax.servlet.http.HttpServletRequest;\n import java.io.File;\n-import java.io.FileOutputStream;\n import java.io.IOException;\n import java.io.OutputStream;\n+import java.nio.file.Files;\n import java.text.MessageFormat;\n import java.util.Properties;\n import java.util.ResourceBundle;\n@@ -202,7 +202,7 @@ public void saveProperties() {\n         final ResourceBundle rb = ResourceBundle.getBundle( InternationalizationManager.CORE_BUNDLE, m_session.getLocale() );\n         // Write the file back to disk\n         try {\n-            try( final OutputStream out = new FileOutputStream( m_propertyFile ) ) {\n+            try( final OutputStream out = Files.newOutputStream( m_propertyFile.toPath() ) ) {\n                 m_props.store( out, null );\n             }\n             m_session.addMessage( INSTALL_INFO, MessageFormat.format(rb.getString(\"install.installer.props.saved\"), m_propertyFile) );"
  },
  {
    "sha": "5d597a03206bdc64207f56440d2090d79dbeb66a",
    "filename": "jspwiki-main/src/main/java/org/apache/wiki/workflow/DefaultWorkflowManager.java",
    "status": "modified",
    "additions": 3,
    "deletions": 2,
    "changes": 5,
    "blob_url": "https://github.com/apache/jspwiki/blob/967b3a28061748067474a998cdf5830b37a92518/jspwiki-main/src/main/java/org/apache/wiki/workflow/DefaultWorkflowManager.java",
    "raw_url": "https://github.com/apache/jspwiki/raw/967b3a28061748067474a998cdf5830b37a92518/jspwiki-main/src/main/java/org/apache/wiki/workflow/DefaultWorkflowManager.java",
    "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/jspwiki-main/src/main/java/org/apache/wiki/workflow/DefaultWorkflowManager.java?ref=967b3a28061748067474a998cdf5830b37a92518",
    "patch": "@@ -33,6 +33,7 @@ Licensed to the Apache Software Foundation (ASF) under one\n import org.apache.wiki.util.TextUtil;\n \n import java.io.*;\n+import java.nio.file.Files;\n import java.security.Principal;\n import java.util.*;\n import java.util.concurrent.ConcurrentHashMap;\n@@ -132,7 +133,7 @@ synchronized long unserializeFromDisk( final File f ) {\n         long saved = 0L;\n         final StopWatch sw = new StopWatch();\n         sw.start();\n-        try( final ObjectInputStream in = new ObjectInputStream( new BufferedInputStream( new FileInputStream( f ) ) ) ) {\n+        try( final ObjectInputStream in = new ObjectInputStream( new BufferedInputStream( Files.newInputStream( f.toPath() ) ) ) ) {\n             final long ver = in.readLong();\n             if( ver != serialVersionUID ) {\n                 LOG.warn( \"File format has changed; Unable to recover workflows and decision queue from disk.\" );\n@@ -156,7 +157,7 @@ synchronized long unserializeFromDisk( final File f ) {\n      *  Serializes workflows and decisionqueue to disk.  The format is private, don't touch it.\n      */\n     synchronized void serializeToDisk( final File f ) {\n-        try( final ObjectOutputStream out = new ObjectOutputStream( new BufferedOutputStream( new FileOutputStream( f ) ) ) ) {\n+        try( final ObjectOutputStream out = new ObjectOutputStream( new BufferedOutputStream( Files.newOutputStream( f.toPath() ) ) ) ) {\n             final StopWatch sw = new StopWatch();\n             sw.start();\n "
  },
  {
    "sha": "d0e3fd0cd60d65874260dbfdafb18e8fb0e1984a",
    "filename": "jspwiki-util/src/main/java/org/apache/wiki/util/FileUtil.java",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/apache/jspwiki/blob/967b3a28061748067474a998cdf5830b37a92518/jspwiki-util/src/main/java/org/apache/wiki/util/FileUtil.java",
    "raw_url": "https://github.com/apache/jspwiki/raw/967b3a28061748067474a998cdf5830b37a92518/jspwiki-util/src/main/java/org/apache/wiki/util/FileUtil.java",
    "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/jspwiki-util/src/main/java/org/apache/wiki/util/FileUtil.java?ref=967b3a28061748067474a998cdf5830b37a92518",
    "patch": "@@ -41,6 +41,7 @@ Licensed to the Apache Software Foundation (ASF) under one\n import java.nio.charset.CharsetDecoder;\n import java.nio.charset.CodingErrorAction;\n import java.nio.charset.StandardCharsets;\n+import java.nio.file.Files;\n \n /**\n  *  Generic utilities related to file and stream handling.\n@@ -71,7 +72,7 @@ private FileUtil()\n     public static File newTmpFile( final String content, final Charset encoding ) throws IOException {\n         final File f = File.createTempFile( \"jspwiki\", null );\n         try( final Reader in = new StringReader( content );\n-             final Writer out = new OutputStreamWriter( new FileOutputStream( f ), encoding ) ) {\n+            final Writer out = new OutputStreamWriter( Files.newOutputStream( f.toPath() ), encoding ) ) {\n             copyContents( in, out );\n         }\n "
  },
  {
    "sha": "b7b2c2f7d85fba36c69f3f09d31577666efecaea",
    "filename": "jspwiki-util/src/main/java/org/apache/wiki/util/PropertyReader.java",
    "status": "modified",
    "additions": 5,
    "deletions": 4,
    "changes": 9,
    "blob_url": "https://github.com/apache/jspwiki/blob/967b3a28061748067474a998cdf5830b37a92518/jspwiki-util/src/main/java/org/apache/wiki/util/PropertyReader.java",
    "raw_url": "https://github.com/apache/jspwiki/raw/967b3a28061748067474a998cdf5830b37a92518/jspwiki-util/src/main/java/org/apache/wiki/util/PropertyReader.java",
    "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/jspwiki-util/src/main/java/org/apache/wiki/util/PropertyReader.java?ref=967b3a28061748067474a998cdf5830b37a92518",
    "patch": "@@ -23,10 +23,11 @@ Licensed to the Apache Software Foundation (ASF) under one\n import org.apache.log4j.Logger;\n \n import javax.servlet.ServletContext;\n-import java.io.FileInputStream;\n+import java.io.File;\n import java.io.FileNotFoundException;\n import java.io.IOException;\n import java.io.InputStream;\n+import java.nio.file.Files;\n import java.util.Enumeration;\n import java.util.HashMap;\n import java.util.Map;\n@@ -141,15 +142,15 @@ public static Properties loadWebAppProps( final ServletContext context ) {\n      * @return inputstream holding the properties file\n      * @throws FileNotFoundException properties file not found\n      */\n-\tstatic InputStream loadCustomPropertiesFile( final ServletContext context, final String propertyFile ) throws FileNotFoundException {\n+\tstatic InputStream loadCustomPropertiesFile( final ServletContext context, final String propertyFile ) throws IOException {\n         final InputStream propertyStream;\n \t\tif( propertyFile == null ) {\n \t\t    LOG.info( \"No \" + PARAM_CUSTOMCONFIG + \" defined for this context, looking for custom properties file with default name of: \" + CUSTOM_JSPWIKI_CONFIG );\n \t\t    //  Use the custom property file at the default location\n \t\t    propertyStream =  locateClassPathResource(context, CUSTOM_JSPWIKI_CONFIG);\n \t\t} else {\n \t\t    LOG.info( PARAM_CUSTOMCONFIG + \" defined, using \" + propertyFile + \" as the custom properties file.\" );\n-\t\t    propertyStream = new FileInputStream( propertyFile );\n+\t\t    propertyStream = Files.newInputStream( new File(propertyFile).toPath() );\n \t\t}\n \t\treturn propertyStream;\n \t}\n@@ -228,7 +229,7 @@ private static void loadWebAppPropsCascade( final ServletContext context, final\n                 break;\n             }\n \n-            try( final InputStream propertyStream = new FileInputStream( propertyFile ) ) {\n+            try( final InputStream propertyStream = Files.newInputStream( new File(propertyFile).toPath() ) ) {\n                 LOG.info( \" Reading additional properties from \" + propertyFile + \" and merge to cascade.\" );\n                 final Properties additionalProps = new Properties();\n                 additionalProps.load( propertyStream );"
  }
]
