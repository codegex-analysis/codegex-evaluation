[
  {
    "sha": "4fed9e19bcf25b8b8cf81f8d20c704b7e0704a90",
    "filename": "flink-runtime/src/main/java/org/apache/flink/runtime/entrypoint/component/DefaultDispatcherResourceManagerComponentFactory.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/apache/flink/blob/694f77c5efd6d4bd53279451152fe9e311463e6e/flink-runtime/src/main/java/org/apache/flink/runtime/entrypoint/component/DefaultDispatcherResourceManagerComponentFactory.java",
    "raw_url": "https://github.com/apache/flink/raw/694f77c5efd6d4bd53279451152fe9e311463e6e/flink-runtime/src/main/java/org/apache/flink/runtime/entrypoint/component/DefaultDispatcherResourceManagerComponentFactory.java",
    "contents_url": "https://api.github.com/repos/apache/flink/contents/flink-runtime/src/main/java/org/apache/flink/runtime/entrypoint/component/DefaultDispatcherResourceManagerComponentFactory.java?ref=694f77c5efd6d4bd53279451152fe9e311463e6e",
    "patch": "@@ -40,7 +40,7 @@\n import org.apache.flink.runtime.jobmanager.HaServicesJobGraphStoreFactory;\n import org.apache.flink.runtime.leaderretrieval.LeaderRetrievalService;\n import org.apache.flink.runtime.metrics.MetricRegistry;\n-import org.apache.flink.runtime.metrics.util.MetricUtils;\n+import org.apache.flink.runtime.metrics.groups.JobManagerMetricGroup;\n import org.apache.flink.runtime.resourcemanager.ResourceManager;\n import org.apache.flink.runtime.resourcemanager.ResourceManagerFactory;\n import org.apache.flink.runtime.resourcemanager.ResourceManagerGateway;\n@@ -199,7 +199,7 @@ public DispatcherResourceManagerComponent create(\n                             blobServer,\n                             heartbeatServices,\n                             () ->\n-                                    MetricUtils.instantiateJobManagerMetricGroup(\n+                                    JobManagerMetricGroup.createJobManagerMetricGroup(\n                                             metricRegistry, hostname),\n                             executionGraphInfoStore,\n                             fatalErrorHandler,"
  },
  {
    "sha": "2b4cb5be999172fb137d8e2d1c7e2dd2fd102e44",
    "filename": "flink-runtime/src/main/java/org/apache/flink/runtime/jobmaster/factories/DefaultJobManagerJobMetricGroupFactory.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/apache/flink/blob/694f77c5efd6d4bd53279451152fe9e311463e6e/flink-runtime/src/main/java/org/apache/flink/runtime/jobmaster/factories/DefaultJobManagerJobMetricGroupFactory.java",
    "raw_url": "https://github.com/apache/flink/raw/694f77c5efd6d4bd53279451152fe9e311463e6e/flink-runtime/src/main/java/org/apache/flink/runtime/jobmaster/factories/DefaultJobManagerJobMetricGroupFactory.java",
    "contents_url": "https://api.github.com/repos/apache/flink/contents/flink-runtime/src/main/java/org/apache/flink/runtime/jobmaster/factories/DefaultJobManagerJobMetricGroupFactory.java?ref=694f77c5efd6d4bd53279451152fe9e311463e6e",
    "patch": "@@ -39,6 +39,6 @@ public DefaultJobManagerJobMetricGroupFactory(\n \n     @Override\n     public JobManagerJobMetricGroup create(@Nonnull JobGraph jobGraph) {\n-        return jobManagerMetricGroup.addJob(jobGraph);\n+        return jobManagerMetricGroup.addJob(jobGraph.getJobID(), jobGraph.getName());\n     }\n }"
  },
  {
    "sha": "431dab46bcce2b3a9692245cdb0d8d57145bae8a",
    "filename": "flink-runtime/src/main/java/org/apache/flink/runtime/metrics/groups/JobManagerMetricGroup.java",
    "status": "modified",
    "additions": 7,
    "deletions": 5,
    "changes": 12,
    "blob_url": "https://github.com/apache/flink/blob/694f77c5efd6d4bd53279451152fe9e311463e6e/flink-runtime/src/main/java/org/apache/flink/runtime/metrics/groups/JobManagerMetricGroup.java",
    "raw_url": "https://github.com/apache/flink/raw/694f77c5efd6d4bd53279451152fe9e311463e6e/flink-runtime/src/main/java/org/apache/flink/runtime/metrics/groups/JobManagerMetricGroup.java",
    "contents_url": "https://api.github.com/repos/apache/flink/contents/flink-runtime/src/main/java/org/apache/flink/runtime/metrics/groups/JobManagerMetricGroup.java?ref=694f77c5efd6d4bd53279451152fe9e311463e6e",
    "patch": "@@ -20,7 +20,6 @@\n \n import org.apache.flink.api.common.JobID;\n import org.apache.flink.metrics.CharacterFilter;\n-import org.apache.flink.runtime.jobgraph.JobGraph;\n import org.apache.flink.runtime.metrics.MetricRegistry;\n import org.apache.flink.runtime.metrics.dump.QueryScopeInfo;\n import org.apache.flink.runtime.metrics.scope.ScopeFormat;\n@@ -40,14 +39,19 @@\n \n     private final String hostname;\n \n-    public JobManagerMetricGroup(MetricRegistry registry, String hostname) {\n+    JobManagerMetricGroup(MetricRegistry registry, String hostname) {\n         super(\n                 registry,\n                 registry.getScopeFormats().getJobManagerFormat().formatScope(hostname),\n                 null);\n         this.hostname = hostname;\n     }\n \n+    public static JobManagerMetricGroup createJobManagerMetricGroup(\n+            final MetricRegistry metricRegistry, final String hostname) {\n+        return new JobManagerMetricGroup(metricRegistry, hostname);\n+    }\n+\n     public String hostname() {\n         return hostname;\n     }\n@@ -62,9 +66,7 @@ public String hostname() {\n     //  job groups\n     // ------------------------------------------------------------------------\n \n-    public JobManagerJobMetricGroup addJob(JobGraph job) {\n-        JobID jobId = job.getJobID();\n-        String jobName = job.getName();\n+    public JobManagerJobMetricGroup addJob(JobID jobId, String jobName) {\n         // get or create a jobs metric group\n         JobManagerJobMetricGroup currentJobGroup;\n         synchronized (this) {"
  },
  {
    "sha": "5aeb03a851026cc029e794f0a9d69028cc2563f3",
    "filename": "flink-runtime/src/main/java/org/apache/flink/runtime/metrics/groups/UnregisteredMetricGroups.java",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/apache/flink/blob/694f77c5efd6d4bd53279451152fe9e311463e6e/flink-runtime/src/main/java/org/apache/flink/runtime/metrics/groups/UnregisteredMetricGroups.java",
    "raw_url": "https://github.com/apache/flink/raw/694f77c5efd6d4bd53279451152fe9e311463e6e/flink-runtime/src/main/java/org/apache/flink/runtime/metrics/groups/UnregisteredMetricGroups.java",
    "contents_url": "https://api.github.com/repos/apache/flink/contents/flink-runtime/src/main/java/org/apache/flink/runtime/metrics/groups/UnregisteredMetricGroups.java?ref=694f77c5efd6d4bd53279451152fe9e311463e6e",
    "patch": "@@ -20,7 +20,6 @@\n \n import org.apache.flink.api.common.JobID;\n import org.apache.flink.runtime.executiongraph.ExecutionAttemptID;\n-import org.apache.flink.runtime.jobgraph.JobGraph;\n import org.apache.flink.runtime.jobgraph.JobVertexID;\n import org.apache.flink.runtime.jobgraph.OperatorID;\n import org.apache.flink.runtime.metrics.NoOpMetricRegistry;\n@@ -105,7 +104,7 @@ private UnregisteredJobManagerMetricGroup() {\n         }\n \n         @Override\n-        public JobManagerJobMetricGroup addJob(JobGraph job) {\n+        public JobManagerJobMetricGroup addJob(JobID jobId, String jobName) {\n             return createUnregisteredJobManagerJobMetricGroup();\n         }\n     }"
  },
  {
    "sha": "038b463376cf620631256ec3aa8f0aaa69edb68f",
    "filename": "flink-runtime/src/main/java/org/apache/flink/runtime/metrics/util/MetricUtils.java",
    "status": "modified",
    "additions": 0,
    "deletions": 9,
    "changes": 9,
    "blob_url": "https://github.com/apache/flink/blob/694f77c5efd6d4bd53279451152fe9e311463e6e/flink-runtime/src/main/java/org/apache/flink/runtime/metrics/util/MetricUtils.java",
    "raw_url": "https://github.com/apache/flink/raw/694f77c5efd6d4bd53279451152fe9e311463e6e/flink-runtime/src/main/java/org/apache/flink/runtime/metrics/util/MetricUtils.java",
    "contents_url": "https://api.github.com/repos/apache/flink/contents/flink-runtime/src/main/java/org/apache/flink/runtime/metrics/util/MetricUtils.java?ref=694f77c5efd6d4bd53279451152fe9e311463e6e",
    "patch": "@@ -32,7 +32,6 @@\n import org.apache.flink.runtime.metrics.MetricNames;\n import org.apache.flink.runtime.metrics.MetricRegistry;\n import org.apache.flink.runtime.metrics.groups.AbstractMetricGroup;\n-import org.apache.flink.runtime.metrics.groups.JobManagerMetricGroup;\n import org.apache.flink.runtime.metrics.groups.ProcessMetricGroup;\n import org.apache.flink.runtime.metrics.groups.TaskManagerMetricGroup;\n import org.apache.flink.runtime.rpc.RpcService;\n@@ -101,14 +100,6 @@ public static ProcessMetricGroup instantiateProcessMetricGroup(\n         return processMetricGroup;\n     }\n \n-    public static JobManagerMetricGroup instantiateJobManagerMetricGroup(\n-            final MetricRegistry metricRegistry, final String hostname) {\n-        final JobManagerMetricGroup jobManagerMetricGroup =\n-                new JobManagerMetricGroup(metricRegistry, hostname);\n-\n-        return jobManagerMetricGroup;\n-    }\n-\n     public static Tuple2<TaskManagerMetricGroup, MetricGroup> instantiateTaskManagerMetricGroup(\n             MetricRegistry metricRegistry,\n             String hostName,"
  },
  {
    "sha": "fd8adc7c9169c38159a85ce8f2a4e93e88bd9f88",
    "filename": "flink-runtime/src/test/java/org/apache/flink/runtime/metrics/groups/JobManagerGroupTest.java",
    "status": "modified",
    "additions": 15,
    "deletions": 36,
    "changes": 51,
    "blob_url": "https://github.com/apache/flink/blob/694f77c5efd6d4bd53279451152fe9e311463e6e/flink-runtime/src/test/java/org/apache/flink/runtime/metrics/groups/JobManagerGroupTest.java",
    "raw_url": "https://github.com/apache/flink/raw/694f77c5efd6d4bd53279451152fe9e311463e6e/flink-runtime/src/test/java/org/apache/flink/runtime/metrics/groups/JobManagerGroupTest.java",
    "contents_url": "https://api.github.com/repos/apache/flink/contents/flink-runtime/src/test/java/org/apache/flink/runtime/metrics/groups/JobManagerGroupTest.java?ref=694f77c5efd6d4bd53279451152fe9e311463e6e",
    "patch": "@@ -21,7 +21,6 @@\n import org.apache.flink.api.common.JobID;\n import org.apache.flink.configuration.Configuration;\n import org.apache.flink.configuration.MetricOptions;\n-import org.apache.flink.runtime.jobgraph.JobGraphBuilder;\n import org.apache.flink.runtime.metrics.MetricRegistryConfiguration;\n import org.apache.flink.runtime.metrics.MetricRegistryImpl;\n import org.apache.flink.runtime.metrics.dump.QueryScopeInfo;\n@@ -46,32 +45,18 @@ public void addAndRemoveJobs() throws Exception {\n         MetricRegistryImpl registry =\n                 new MetricRegistryImpl(\n                         MetricRegistryConfiguration.defaultMetricRegistryConfiguration());\n-        final JobManagerMetricGroup group = new JobManagerMetricGroup(registry, \"localhost\");\n+        final JobManagerMetricGroup group =\n+                JobManagerMetricGroup.createJobManagerMetricGroup(registry, \"localhost\");\n \n         final JobID jid1 = new JobID();\n         final JobID jid2 = new JobID();\n \n         final String jobName1 = \"testjob\";\n         final String jobName2 = \"anotherJob\";\n \n-        JobManagerJobMetricGroup jmJobGroup11 =\n-                group.addJob(\n-                        JobGraphBuilder.newStreamingJobGraphBuilder()\n-                                .setJobId(jid1)\n-                                .setJobName(jobName1)\n-                                .build());\n-        JobManagerJobMetricGroup jmJobGroup12 =\n-                group.addJob(\n-                        JobGraphBuilder.newStreamingJobGraphBuilder()\n-                                .setJobId(jid1)\n-                                .setJobName(jobName1)\n-                                .build());\n-        JobManagerJobMetricGroup jmJobGroup21 =\n-                group.addJob(\n-                        JobGraphBuilder.newStreamingJobGraphBuilder()\n-                                .setJobId(jid2)\n-                                .setJobName(jobName2)\n-                                .build());\n+        JobManagerJobMetricGroup jmJobGroup11 = group.addJob(jid1, jobName1);\n+        JobManagerJobMetricGroup jmJobGroup12 = group.addJob(jid1, jobName1);\n+        JobManagerJobMetricGroup jmJobGroup21 = group.addJob(jid2, jobName2);\n \n         assertEquals(jmJobGroup11, jmJobGroup12);\n \n@@ -95,26 +80,17 @@ public void testCloseClosesAll() throws Exception {\n         MetricRegistryImpl registry =\n                 new MetricRegistryImpl(\n                         MetricRegistryConfiguration.defaultMetricRegistryConfiguration());\n-        final JobManagerMetricGroup group = new JobManagerMetricGroup(registry, \"localhost\");\n+        final JobManagerMetricGroup group =\n+                JobManagerMetricGroup.createJobManagerMetricGroup(registry, \"localhost\");\n \n         final JobID jid1 = new JobID();\n         final JobID jid2 = new JobID();\n \n         final String jobName1 = \"testjob\";\n         final String jobName2 = \"anotherJob\";\n \n-        JobManagerJobMetricGroup jmJobGroup11 =\n-                group.addJob(\n-                        JobGraphBuilder.newStreamingJobGraphBuilder()\n-                                .setJobId(jid1)\n-                                .setJobName(jobName1)\n-                                .build());\n-        JobManagerJobMetricGroup jmJobGroup21 =\n-                group.addJob(\n-                        JobGraphBuilder.newStreamingJobGraphBuilder()\n-                                .setJobId(jid2)\n-                                .setJobName(jobName2)\n-                                .build());\n+        JobManagerJobMetricGroup jmJobGroup11 = group.addJob(jid1, jobName1);\n+        JobManagerJobMetricGroup jmJobGroup21 = group.addJob(jid2, jobName2);\n \n         group.close();\n \n@@ -133,7 +109,8 @@ public void testGenerateScopeDefault() throws Exception {\n         MetricRegistryImpl registry =\n                 new MetricRegistryImpl(\n                         MetricRegistryConfiguration.defaultMetricRegistryConfiguration());\n-        JobManagerMetricGroup group = new JobManagerMetricGroup(registry, \"localhost\");\n+        JobManagerMetricGroup group =\n+                JobManagerMetricGroup.createJobManagerMetricGroup(registry, \"localhost\");\n \n         assertArrayEquals(new String[] {\"localhost\", \"jobmanager\"}, group.getScopeComponents());\n         assertEquals(\"localhost.jobmanager.name\", group.getMetricIdentifier(\"name\"));\n@@ -148,7 +125,8 @@ public void testGenerateScopeCustom() throws Exception {\n         MetricRegistryImpl registry =\n                 new MetricRegistryImpl(MetricRegistryConfiguration.fromConfiguration(cfg));\n \n-        JobManagerMetricGroup group = new JobManagerMetricGroup(registry, \"host\");\n+        JobManagerMetricGroup group =\n+                JobManagerMetricGroup.createJobManagerMetricGroup(registry, \"host\");\n \n         assertArrayEquals(\n                 new String[] {\"constant\", \"host\", \"foo\", \"host\"}, group.getScopeComponents());\n@@ -162,7 +140,8 @@ public void testCreateQueryServiceMetricInfo() {\n         MetricRegistryImpl registry =\n                 new MetricRegistryImpl(\n                         MetricRegistryConfiguration.defaultMetricRegistryConfiguration());\n-        JobManagerMetricGroup jm = new JobManagerMetricGroup(registry, \"host\");\n+        JobManagerMetricGroup jm =\n+                JobManagerMetricGroup.createJobManagerMetricGroup(registry, \"host\");\n \n         QueryScopeInfo.JobManagerQueryScopeInfo info =\n                 jm.createQueryServiceMetricInfo(new DummyCharacterFilter());"
  },
  {
    "sha": "4a3a33591c3b4f914aeaea3a6fa9a6955f44768e",
    "filename": "flink-runtime/src/test/java/org/apache/flink/runtime/metrics/groups/JobManagerJobGroupTest.java",
    "status": "modified",
    "additions": 13,
    "deletions": 11,
    "changes": 24,
    "blob_url": "https://github.com/apache/flink/blob/694f77c5efd6d4bd53279451152fe9e311463e6e/flink-runtime/src/test/java/org/apache/flink/runtime/metrics/groups/JobManagerJobGroupTest.java",
    "raw_url": "https://github.com/apache/flink/raw/694f77c5efd6d4bd53279451152fe9e311463e6e/flink-runtime/src/test/java/org/apache/flink/runtime/metrics/groups/JobManagerJobGroupTest.java",
    "contents_url": "https://api.github.com/repos/apache/flink/contents/flink-runtime/src/test/java/org/apache/flink/runtime/metrics/groups/JobManagerJobGroupTest.java?ref=694f77c5efd6d4bd53279451152fe9e311463e6e",
    "patch": "@@ -41,9 +41,9 @@ public void testGenerateScopeDefault() throws Exception {\n                 new MetricRegistryImpl(\n                         MetricRegistryConfiguration.defaultMetricRegistryConfiguration());\n \n-        JobManagerMetricGroup tmGroup = new JobManagerMetricGroup(registry, \"theHostName\");\n-        JobMetricGroup jmGroup =\n-                new JobManagerJobMetricGroup(registry, tmGroup, new JobID(), \"myJobName\");\n+        JobManagerJobMetricGroup jmGroup =\n+                JobManagerMetricGroup.createJobManagerMetricGroup(registry, \"theHostName\")\n+                        .addJob(new JobID(), \"myJobName\");\n \n         assertArrayEquals(\n                 new String[] {\"theHostName\", \"jobmanager\", \"myJobName\"},\n@@ -62,10 +62,9 @@ public void testGenerateScopeCustom() throws Exception {\n         MetricRegistryImpl registry =\n                 new MetricRegistryImpl(MetricRegistryConfiguration.fromConfiguration(cfg));\n \n-        JobID jid = new JobID();\n-\n-        JobManagerMetricGroup tmGroup = new JobManagerMetricGroup(registry, \"theHostName\");\n-        JobMetricGroup jmGroup = new JobManagerJobMetricGroup(registry, tmGroup, jid, \"myJobName\");\n+        JobManagerJobMetricGroup jmGroup =\n+                JobManagerMetricGroup.createJobManagerMetricGroup(registry, \"theHostName\")\n+                        .addJob(new JobID(), \"myJobName\");\n \n         assertArrayEquals(\n                 new String[] {\"some-constant\", \"myJobName\"}, jmGroup.getScopeComponents());\n@@ -85,8 +84,9 @@ public void testGenerateScopeCustomWildcard() throws Exception {\n \n         JobID jid = new JobID();\n \n-        JobManagerMetricGroup tmGroup = new JobManagerMetricGroup(registry, \"theHostName\");\n-        JobMetricGroup jmGroup = new JobManagerJobMetricGroup(registry, tmGroup, jid, \"myJobName\");\n+        JobManagerJobMetricGroup jmGroup =\n+                JobManagerMetricGroup.createJobManagerMetricGroup(registry, \"theHostName\")\n+                        .addJob(jid, \"myJobName\");\n \n         assertArrayEquals(\n                 new String[] {\"peter\", \"some-constant\", jid.toString()},\n@@ -103,8 +103,10 @@ public void testCreateQueryServiceMetricInfo() {\n         MetricRegistryImpl registry =\n                 new MetricRegistryImpl(\n                         MetricRegistryConfiguration.defaultMetricRegistryConfiguration());\n-        JobManagerMetricGroup jm = new JobManagerMetricGroup(registry, \"host\");\n-        JobManagerJobMetricGroup jmj = new JobManagerJobMetricGroup(registry, jm, jid, \"jobname\");\n+\n+        JobManagerJobMetricGroup jmj =\n+                JobManagerMetricGroup.createJobManagerMetricGroup(registry, \"theHostName\")\n+                        .addJob(jid, \"myJobName\");\n \n         QueryScopeInfo.JobQueryScopeInfo info =\n                 jmj.createQueryServiceMetricInfo(new DummyCharacterFilter());"
  }
]
