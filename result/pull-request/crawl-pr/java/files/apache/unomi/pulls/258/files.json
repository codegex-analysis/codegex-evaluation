[
  {
    "sha": "e7ba127f2d73c85169e5bf3f852beabed29b06d3",
    "filename": "plugins/baseplugin/src/main/java/org/apache/unomi/plugins/baseplugin/actions/MergeProfilesOnPropertyAction.java",
    "status": "modified",
    "additions": 10,
    "deletions": 1,
    "changes": 11,
    "blob_url": "https://github.com/apache/unomi/blob/111677f3ddf5197cd6944212335ebf2363109948/plugins/baseplugin/src/main/java/org/apache/unomi/plugins/baseplugin/actions/MergeProfilesOnPropertyAction.java",
    "raw_url": "https://github.com/apache/unomi/raw/111677f3ddf5197cd6944212335ebf2363109948/plugins/baseplugin/src/main/java/org/apache/unomi/plugins/baseplugin/actions/MergeProfilesOnPropertyAction.java",
    "contents_url": "https://api.github.com/repos/apache/unomi/contents/plugins/baseplugin/src/main/java/org/apache/unomi/plugins/baseplugin/actions/MergeProfilesOnPropertyAction.java?ref=111677f3ddf5197cd6944212335ebf2363109948",
    "patch": "@@ -179,6 +179,13 @@ public int execute(Action action, Event event) {\n                     @Override\n                     public boolean execute() {\n                         try {\n+                            Event currentEvent = event;\n+                            // Update current event explicitly, as it might not return from search query if there wasn't a refresh in ES\n+                            if (!StringUtils.equals(profileId, masterProfileId)) {\n+                                if (currentEvent.isPersistent()) {\n+                                    persistenceService.update(currentEvent, currentEvent.getTimeStamp(), Event.class, \"profileId\", anonymousBrowsing ? null : masterProfileId);\n+                                }                            }\n+\n                             for (Profile profile : profiles) {\n                                 String profileId = profile.getItemId();\n                                 if (!StringUtils.equals(profileId, masterProfileId)) {\n@@ -195,7 +202,9 @@ public boolean execute() {\n \n                                     List<Event> events = persistenceService.query(\"profileId\", profileId, null, Event.class);\n                                     for (Event event : events) {\n-                                        persistenceService.update(event, event.getTimeStamp(), Event.class, \"profileId\", anonymousBrowsing ? null : masterProfileId);\n+                                        if (!event.getItemId().equals(currentEvent.getItemId())) {\n+                                            persistenceService.update(event, event.getTimeStamp(), Event.class, \"profileId\", anonymousBrowsing ? null : masterProfileId);\n+                                        }\n                                     }\n                                     // we must mark all the profiles that we merged into the master as merged with the master, and they will\n                                     // be deleted upon next load"
  }
]
