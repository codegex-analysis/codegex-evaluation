[
  {
    "sha": "ae52c4b8ac8c818676eb62d4d373f7bfaba02b60",
    "filename": "java/java.source.base/src/org/netbeans/api/java/source/SourceUtils.java",
    "status": "modified",
    "additions": 1,
    "deletions": 5,
    "changes": 6,
    "blob_url": "https://github.com/apache/netbeans/blob/88d4467e83f4187606f9a8341f4863157087f5a2/java/java.source.base/src/org/netbeans/api/java/source/SourceUtils.java",
    "raw_url": "https://github.com/apache/netbeans/raw/88d4467e83f4187606f9a8341f4863157087f5a2/java/java.source.base/src/org/netbeans/api/java/source/SourceUtils.java",
    "contents_url": "https://api.github.com/repos/apache/netbeans/contents/java/java.source.base/src/org/netbeans/api/java/source/SourceUtils.java?ref=88d4467e83f4187606f9a8341f4863157087f5a2",
    "patch": "@@ -196,11 +196,7 @@ public static boolean checkTypesAssignable(CompilationInfo info, TypeMirror from\n     \n     public static TypeMirror getBound(WildcardType wildcardType) {\n         Type.TypeVar bound = ((Type.WildcardType)wildcardType).bound;\n-        try {\n-            return bound != null ? bound.bound : null;\n-        } catch (NoSuchFieldError err) {\n-            return bound != null ? bound.getUpperBound() : null;\n-        }\n+        return bound != null ? bound.getUpperBound() : null;\n     }\n \n     /**"
  },
  {
    "sha": "62eb8ec409e68653090442b519fbdb295942f3b7",
    "filename": "java/java.source.base/src/org/netbeans/api/java/source/TypeMirrorHandle.java",
    "status": "modified",
    "additions": 6,
    "deletions": 6,
    "changes": 12,
    "blob_url": "https://github.com/apache/netbeans/blob/88d4467e83f4187606f9a8341f4863157087f5a2/java/java.source.base/src/org/netbeans/api/java/source/TypeMirrorHandle.java",
    "raw_url": "https://github.com/apache/netbeans/raw/88d4467e83f4187606f9a8341f4863157087f5a2/java/java.source.base/src/org/netbeans/api/java/source/TypeMirrorHandle.java",
    "contents_url": "https://api.github.com/repos/apache/netbeans/contents/java/java.source.base/src/org/netbeans/api/java/source/TypeMirrorHandle.java?ref=88d4467e83f4187606f9a8341f4863157087f5a2",
    "patch": "@@ -450,10 +450,10 @@ public Void visitClassType(ClassType t, Void s) {\n \n         @Override\n         public Void visitTypeVar(TypeVar t, Void s) {\n-            if (t.bound instanceof PlaceholderType)\n-                t.bound = ((PlaceholderType)t.bound).delegate;\n-            else if (t.bound != null)\n-                t.bound.accept(this, s);\n+            if (t.getUpperBound() instanceof PlaceholderType)\n+                t.setUpperBound(((PlaceholderType)t.getUpperBound()).delegate);\n+            else if (t.getUpperBound() != null)\n+                t.getUpperBound().accept(this, s);\n             if (t.lower instanceof PlaceholderType)\n                 t.lower = ((PlaceholderType)t.lower).delegate;\n             else if (t.lower != null)\n@@ -467,8 +467,8 @@ public Void visitWildcardType(Type.WildcardType t, Void s) {\n                 t.type = ((PlaceholderType)t.type).delegate;\n             else if (t.type != null)\n                 t.type.accept(this, s);\n-            if (t.bound != null)\n-                t.bound.accept(this, s);\n+            if (t.getUpperBound() != null)\n+                t.getUpperBound().accept(this, s);\n             return null;\n         }\n     }"
  },
  {
    "sha": "69c8d5d5e9b204b7ab4e19392d20c02ca787967c",
    "filename": "java/java.source.base/src/org/netbeans/modules/java/source/PostFlowAnalysis.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/apache/netbeans/blob/88d4467e83f4187606f9a8341f4863157087f5a2/java/java.source.base/src/org/netbeans/modules/java/source/PostFlowAnalysis.java",
    "raw_url": "https://github.com/apache/netbeans/raw/88d4467e83f4187606f9a8341f4863157087f5a2/java/java.source.base/src/org/netbeans/modules/java/source/PostFlowAnalysis.java",
    "contents_url": "https://api.github.com/repos/apache/netbeans/contents/java/java.source.base/src/org/netbeans/modules/java/source/PostFlowAnalysis.java?ref=88d4467e83f4187606f9a8341f4863157087f5a2",
    "patch": "@@ -28,7 +28,6 @@\n import com.sun.tools.javac.comp.AttrContext;\n import com.sun.tools.javac.comp.Enter;\n import com.sun.tools.javac.comp.Env;\n-import com.sun.tools.javac.jvm.Pool;\n import com.sun.tools.javac.tree.JCTree;\n import com.sun.tools.javac.tree.JCTree.JCClassDecl;\n import com.sun.tools.javac.tree.JCTree.JCFieldAccess;\n@@ -232,7 +231,8 @@ private void outerThisDef(Symbol owner) {\n     }\n     \n     private void checkStringConstant(DiagnosticPosition pos, Object constValue) {\n-        if (constValue instanceof String && ((String)constValue).length() >= Pool.MAX_STRING_LENGTH)\n+        final int MAX_STRING_LENGTH = 65535;\n+        if (constValue instanceof String && ((String)constValue).length() >= MAX_STRING_LENGTH)\n             log.error(pos, new Error(\"compiler\", \"limit.string\")); //NOI18N\n     }\n "
  },
  {
    "sha": "8452248cfdc48cc795b37ec7da23147b287c3b3e",
    "filename": "java/java.source.base/src/org/netbeans/modules/java/source/builder/TreeFactory.java",
    "status": "modified",
    "additions": 26,
    "deletions": 5,
    "changes": 31,
    "blob_url": "https://github.com/apache/netbeans/blob/88d4467e83f4187606f9a8341f4863157087f5a2/java/java.source.base/src/org/netbeans/modules/java/source/builder/TreeFactory.java",
    "raw_url": "https://github.com/apache/netbeans/raw/88d4467e83f4187606f9a8341f4863157087f5a2/java/java.source.base/src/org/netbeans/modules/java/source/builder/TreeFactory.java",
    "contents_url": "https://api.github.com/repos/apache/netbeans/contents/java/java.source.base/src/org/netbeans/modules/java/source/builder/TreeFactory.java?ref=88d4467e83f4187606f9a8341f4863157087f5a2",
    "patch": "@@ -63,11 +63,13 @@\n import com.sun.tools.javac.tree.DocTreeMaker;\n import com.sun.tools.javac.tree.JCTree;\n import com.sun.tools.javac.tree.JCTree.*;\n+import com.sun.tools.javac.tree.TreeMaker;\n import com.sun.tools.javac.util.DiagnosticSource;\n import com.sun.tools.javac.util.ListBuffer;\n import com.sun.tools.javac.util.Name;\n import com.sun.tools.javac.util.Names;\n import com.sun.tools.javac.util.Context;\n+import java.lang.reflect.InvocationTargetException;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.List;\n@@ -220,7 +222,9 @@ public CaseTree Case(ExpressionTree expression, List<? extends StatementTree> st\n         for (StatementTree t : statements)\n             lb.append((JCStatement)t);\n         try {\n-            return make.at(NOPOS).Case((JCExpression)expression, lb.toList());\n+            final TreeMaker at = make.at(NOPOS);\n+            final com.sun.tools.javac.util.List<JCExpression> exprList = expression == null ? com.sun.tools.javac.util.List.nil() : com.sun.tools.javac.util.List.of((JCExpression)expression);\n+            return at.Case(CaseTree.CaseKind.STATEMENT, exprList, lb.toList(), null);\n         } catch (NoSuchMethodError err) {\n             try {\n                 Class<Enum> caseKind = (Class<Enum>) Class.forName(\"com.sun.source.tree.CaseTree$CaseKind\", false, JCTree.class.getClassLoader());\n@@ -1914,19 +1918,36 @@ public LinkTree LinkPlain(ReferenceTree ref, List<? extends DocTree> label) {\n     }\n \n     public ReferenceTree Reference(ExpressionTree qualExpr, CharSequence member, List<? extends Tree> paramTypes) {\n-        com.sun.tools.javac.util.List<JCTree> paramTypesList = null;\n+        com.sun.tools.javac.util.List<JCTree> paramTypesParam = null;\n         if (paramTypes != null) {\n             ListBuffer<JCTree> lbl = new ListBuffer<>();\n             for (Tree t : paramTypes) {\n                 lbl.append((JCTree) t);\n             }\n-            paramTypesList = lbl.toList();\n+            paramTypesParam = lbl.toList();\n         }\n-        ReferenceTree refrenceTree = TreeShims.getRefrenceTree(docMake, qualExpr, member, paramTypes, names, paramTypesList);\n+        ReferenceTree refrenceTree = TreeShims.getRefrenceTree(docMake, qualExpr, member, paramTypes, names, paramTypesParam);\n         if (refrenceTree != null) {\n             return refrenceTree;\n         }\n-        return docMake.at(NOPOS).newReferenceTree(\"\", (JCExpression) qualExpr, member != null ? (Name) names.fromString(member.toString()) : null, paramTypesList);\n+        final String signatureParam = \"\";\n+        final JCExpression qualExprParam = (JCExpression) qualExpr;\n+        Name memberParam = member != null ? (Name) names.fromString(member.toString()) : null;\n+        final DocTreeMaker dispatchTo = docMake.at(NOPOS);\n+        for (java.lang.reflect.Method m : dispatchTo.getClass().getMethods()) {\n+            if (\"newReferenceTree\".equals(m.getName()) && m.getParameterTypes().length >= 4) { // NOI18N\n+                try {\n+                    if (m.getParameterTypes().length == 5) {\n+                        return (ReferenceTree) m.invoke(dispatchTo, signatureParam, null, qualExprParam, memberParam, paramTypesParam);\n+                    } else {\n+                        return (ReferenceTree) m.invoke(dispatchTo, signatureParam, qualExprParam, memberParam, paramTypesParam);\n+                    }\n+                } catch (ReflectiveOperationException ex) {\n+                    throw new IllegalStateException(ex);\n+                }\n+            }\n+        }\n+        throw new IllegalStateException();\n     }\n     \n     @SuppressWarnings(\"unchecked\")"
  },
  {
    "sha": "9b073a72edd9ea22390162271730b06b20cffa11",
    "filename": "java/java.source.base/src/org/netbeans/modules/java/source/pretty/WidthEstimator.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/apache/netbeans/blob/88d4467e83f4187606f9a8341f4863157087f5a2/java/java.source.base/src/org/netbeans/modules/java/source/pretty/WidthEstimator.java",
    "raw_url": "https://github.com/apache/netbeans/raw/88d4467e83f4187606f9a8341f4863157087f5a2/java/java.source.base/src/org/netbeans/modules/java/source/pretty/WidthEstimator.java",
    "contents_url": "https://api.github.com/repos/apache/netbeans/contents/java/java.source.base/src/org/netbeans/modules/java/source/pretty/WidthEstimator.java?ref=88d4467e83f4187606f9a8341f4863157087f5a2",
    "patch": "@@ -210,7 +210,7 @@ public void visitTypeTest(JCInstanceOf tree) {\n \topen(prec, TreeInfo.ordPrec);\n \twidth += 12;\n \twidth(tree.expr, TreeInfo.ordPrec);\n-\twidth(tree.clazz);\n+\twidth(tree.getPattern());\n     }\n \n     public void visitIndexed(JCArrayAccess tree) {"
  },
  {
    "sha": "5d1c20b19d3189cf8d4ae9f62fe95d4f5f53d3a4",
    "filename": "java/java.source.base/src/org/netbeans/modules/java/source/save/CasualDiff.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/apache/netbeans/blob/88d4467e83f4187606f9a8341f4863157087f5a2/java/java.source.base/src/org/netbeans/modules/java/source/save/CasualDiff.java",
    "raw_url": "https://github.com/apache/netbeans/raw/88d4467e83f4187606f9a8341f4863157087f5a2/java/java.source.base/src/org/netbeans/modules/java/source/save/CasualDiff.java",
    "contents_url": "https://api.github.com/repos/apache/netbeans/contents/java/java.source.base/src/org/netbeans/modules/java/source/save/CasualDiff.java?ref=88d4467e83f4187606f9a8341f4863157087f5a2",
    "patch": "@@ -5817,7 +5817,7 @@ private boolean matchSwitch(JCSwitch t1, JCSwitch t2) {\n     }\n \n     private boolean matchCase(JCCase t1, JCCase t2) {\n-        return treesMatch(t1.pat, t2.pat) && listsMatch(t1.stats, t2.stats);\n+        return treesMatch(t1.getExpression(), t2.getExpression()) && listsMatch(t1.stats, t2.stats);\n     }\n \n     private boolean matchSynchronized(JCSynchronized t1, JCSynchronized t2) {"
  },
  {
    "sha": "ef0e3a7a5b07f1b3da9243de0dbe99e14f21a752",
    "filename": "java/java.source.base/src/org/netbeans/modules/java/source/transform/ImmutableTreeTranslator.java",
    "status": "modified",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/apache/netbeans/blob/88d4467e83f4187606f9a8341f4863157087f5a2/java/java.source.base/src/org/netbeans/modules/java/source/transform/ImmutableTreeTranslator.java",
    "raw_url": "https://github.com/apache/netbeans/raw/88d4467e83f4187606f9a8341f4863157087f5a2/java/java.source.base/src/org/netbeans/modules/java/source/transform/ImmutableTreeTranslator.java",
    "contents_url": "https://api.github.com/repos/apache/netbeans/contents/java/java.source.base/src/org/netbeans/modules/java/source/transform/ImmutableTreeTranslator.java?ref=88d4467e83f4187606f9a8341f4863157087f5a2",
    "patch": "@@ -1401,4 +1401,19 @@ private Tree rewriteChildren(UsesTree tree) {\n \t}\n \treturn tree;\n     }\n+\n+    @Override\n+    public Tree visitBindingPattern(BindingPatternTree node, Object p) {\n+        return node;\n+    }\n+\n+    @Override\n+    public Tree visitSwitchExpression(SwitchExpressionTree node, Object p) {\n+        return node;\n+    }\n+\n+    @Override\n+    public Tree visitYield(YieldTree node, Object p) {\n+        return node;\n+    }\n }"
  },
  {
    "sha": "497641becce30279748fd19008f67e51b80ae0e9",
    "filename": "java/java.source.base/src/org/netbeans/modules/java/source/transform/TreeDuplicator.java",
    "status": "modified",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/apache/netbeans/blob/88d4467e83f4187606f9a8341f4863157087f5a2/java/java.source.base/src/org/netbeans/modules/java/source/transform/TreeDuplicator.java",
    "raw_url": "https://github.com/apache/netbeans/raw/88d4467e83f4187606f9a8341f4863157087f5a2/java/java.source.base/src/org/netbeans/modules/java/source/transform/TreeDuplicator.java",
    "contents_url": "https://api.github.com/repos/apache/netbeans/contents/java/java.source.base/src/org/netbeans/modules/java/source/transform/TreeDuplicator.java?ref=88d4467e83f4187606f9a8341f4863157087f5a2",
    "patch": "@@ -25,6 +25,7 @@\n import com.sun.source.tree.AssertTree;\n import com.sun.source.tree.AssignmentTree;\n import com.sun.source.tree.BinaryTree;\n+import com.sun.source.tree.BindingPatternTree;\n import com.sun.source.tree.BlockTree;\n import com.sun.source.tree.BreakTree;\n import com.sun.source.tree.CaseTree;\n@@ -66,6 +67,7 @@\n import com.sun.source.tree.ProvidesTree;\n import com.sun.source.tree.RequiresTree;\n import com.sun.source.tree.ReturnTree;\n+import com.sun.source.tree.SwitchExpressionTree;\n import com.sun.source.tree.SwitchTree;\n import com.sun.source.tree.SynchronizedTree;\n import com.sun.source.tree.ThrowTree;\n@@ -80,6 +82,7 @@\n import com.sun.source.tree.VariableTree;\n import com.sun.source.tree.WhileLoopTree;\n import com.sun.source.tree.WildcardTree;\n+import com.sun.source.tree.YieldTree;\n import com.sun.tools.javac.util.Context;\n import java.util.List;\n import org.netbeans.modules.java.source.builder.ASTService;\n@@ -648,4 +651,19 @@ public Tree visitUses(UsesTree tree, Void p) {\n     public Tree visitOther(Tree tree, Void p) {\n         return tree;\n     }\n+\n+    @Override\n+    public Tree visitBindingPattern(BindingPatternTree node, Void p) {\n+        return node;\n+    }\n+\n+    @Override\n+    public Tree visitSwitchExpression(SwitchExpressionTree node, Void p) {\n+        return node;\n+    }\n+\n+    @Override\n+    public Tree visitYield(YieldTree node, Void p) {\n+        return node;\n+    }\n }"
  },
  {
    "sha": "f2b6dcac2aae3619d8fff29f3978297eb11a65a4",
    "filename": "java/jshell.support/src/org/netbeans/modules/jshell/editor/CompletionFilter.java",
    "status": "modified",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/apache/netbeans/blob/88d4467e83f4187606f9a8341f4863157087f5a2/java/jshell.support/src/org/netbeans/modules/jshell/editor/CompletionFilter.java",
    "raw_url": "https://github.com/apache/netbeans/raw/88d4467e83f4187606f9a8341f4863157087f5a2/java/jshell.support/src/org/netbeans/modules/jshell/editor/CompletionFilter.java",
    "contents_url": "https://api.github.com/repos/apache/netbeans/contents/java/jshell.support/src/org/netbeans/modules/jshell/editor/CompletionFilter.java?ref=88d4467e83f4187606f9a8341f4863157087f5a2",
    "patch": "@@ -256,4 +256,9 @@ public DocTreePath getDocTreePath(FileObject fileObject, PackageElement el) {\n     public DocTreeFactory getDocTreeFactory() {\n         return delegate.getDocTreeFactory();\n     }\n+\n+    @Override\n+    public TypeMirror getType(DocTreePath dtp) {\n+        throw new UnsupportedOperationException();\n+    }\n }"
  },
  {
    "sha": "756a6115d0b24b893e564a007d20e6550f1358a0",
    "filename": "java/spi.java.hints/src/org/netbeans/modules/java/hints/spiimpl/Utilities.java",
    "status": "modified",
    "additions": 4,
    "deletions": 18,
    "changes": 22,
    "blob_url": "https://github.com/apache/netbeans/blob/88d4467e83f4187606f9a8341f4863157087f5a2/java/spi.java.hints/src/org/netbeans/modules/java/hints/spiimpl/Utilities.java",
    "raw_url": "https://github.com/apache/netbeans/raw/88d4467e83f4187606f9a8341f4863157087f5a2/java/spi.java.hints/src/org/netbeans/modules/java/hints/spiimpl/Utilities.java",
    "contents_url": "https://api.github.com/repos/apache/netbeans/contents/java/spi.java.hints/src/org/netbeans/modules/java/hints/spiimpl/Utilities.java?ref=88d4467e83f4187606f9a8341f4863157087f5a2",
    "patch": "@@ -1380,7 +1380,7 @@ public JCVariableDecl formalParameter(boolean lambdaParam, boolean recordCompone\n             return result;\n \n         }\n-        \n+/*\n         @Override\n         public JCVariableDecl formalParameter(boolean lambdaParam) {\n             if (token.kind == TokenKind.IDENTIFIER) {\n@@ -1398,6 +1398,7 @@ public JCVariableDecl formalParameter(boolean lambdaParam) {\n \n             return super.formalParameter(lambdaParam);\n         }\n+*/\n \n         @Override\n         protected JCVariableDecl implicitParameter() {\n@@ -1466,25 +1467,10 @@ protected JCCatch catchClause() {\n             return result;\n         }\n         \n-        @Override\n         public com.sun.tools.javac.util.List<JCTree> classOrInterfaceBodyDeclaration(com.sun.tools.javac.util.Name className, boolean isInterface) {\n-            if (token.kind == TokenKind.IDENTIFIER) {\n-                if (token.name().startsWith(dollar)) {\n-                    com.sun.tools.javac.util.Name name = token.name();\n-\n-                    Token peeked = S.token(1);\n-\n-                    if (peeked.kind == TokenKind.SEMI) {\n-                        nextToken();\n-                        nextToken();\n-                        \n-                        return com.sun.tools.javac.util.List.<JCTree>of(F.Ident(name));\n-                    }\n-                }\n-            }\n-            return super.classOrInterfaceBodyDeclaration(className, isInterface);\n+            return classOrInterfaceOrRecordBodyDeclaration(className, isInterface, false);\n         }\n-\n+        \n         @Override\n         protected JCExpression checkExprStat(JCExpression t) {\n             if (t.getTag() == JCTree.Tag.IDENT) {"
  },
  {
    "sha": "fddf0c4cbf2122588b3a4d3058ec29ea29104fd1",
    "filename": "nbbuild/antsrc/org/netbeans/nbbuild/extlibs/ignored-overlaps",
    "status": "modified",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/apache/netbeans/blob/88d4467e83f4187606f9a8341f4863157087f5a2/nbbuild/antsrc/org/netbeans/nbbuild/extlibs/ignored-overlaps",
    "raw_url": "https://github.com/apache/netbeans/raw/88d4467e83f4187606f9a8341f4863157087f5a2/nbbuild/antsrc/org/netbeans/nbbuild/extlibs/ignored-overlaps",
    "contents_url": "https://api.github.com/repos/apache/netbeans/contents/nbbuild/antsrc/org/netbeans/nbbuild/extlibs/ignored-overlaps?ref=88d4467e83f4187606f9a8341f4863157087f5a2",
    "patch": "@@ -38,6 +38,10 @@ nbbuild/external/langtools-9.zip nbbuild/external/langtools-9.zip\n # Used to parse data during build, but need to as a lib for ide cluster\n nbbuild/external/json-simple-1.1.1.jar ide/libs.json_simple/external/json-simple-1.1.1.jar\n \n+# Compile only nb-javac\n+java/libs.javacapi/external/nb-javac-15.0.0.2-api.jar nbbuild/external/nb-javac-15.0.0.2-api.jar\n+java/libs.javacimpl/external/nb-javac-15.0.0.2.jar nbbuild/external/nb-javac-15.0.0.2.jar\n+\n # JFlex is used by multiple modules.\n webcommon/javascript2.jade/external/jflex-1.4.3.jar webcommon/javascript2.lexer/external/jflex-1.4.3.jar\n "
  },
  {
    "sha": "19e1da8b48d20f3f36a4ddab3a4e87dc1d2e3d00",
    "filename": "nbbuild/build.xml",
    "status": "modified",
    "additions": 1,
    "deletions": 35,
    "changes": 36,
    "blob_url": "https://github.com/apache/netbeans/blob/88d4467e83f4187606f9a8341f4863157087f5a2/nbbuild/build.xml",
    "raw_url": "https://github.com/apache/netbeans/raw/88d4467e83f4187606f9a8341f4863157087f5a2/nbbuild/build.xml",
    "contents_url": "https://api.github.com/repos/apache/netbeans/contents/nbbuild/build.xml?ref=88d4467e83f4187606f9a8341f4863157087f5a2",
    "patch": "@@ -240,38 +240,7 @@ metabuild.hash=${metabuild.hash}</echo>\n     </downloadbinaries>\n   </target>\n \n-  <target name=\"-check-vanilla-javac\" depends=\"bootstrap\">\n-    <condition property=\"vanilla.javac.exists\">\n-      <and>\n-        <available file=\"${nb_all}/nbbuild/external/vanilla-javac-api.jar\" />\n-        <available file=\"${nb_all}/nbbuild/external/vanilla-javac-impl.jar\" />\n-      </and>\n-    </condition>\n-  </target>\n-\n-  <target name=\"prepare-vanilla-javac\" depends=\"-check-vanilla-javac\" unless=\"vanilla.javac.exists\">\n-    <delete dir=\"${nb_all}/nbbuild/build/langtools\" />\n-    <mkdir dir=\"${nb_all}/nbbuild/build/langtools\" />\n-    <unzip src=\"${nb_all}/nbbuild/external/langtools-9.zip\" dest=\"${nb_all}/nbbuild/build/langtools\">\n-        <cutdirsmapper dirs=\"1\"/>\n-    </unzip>\n-    <ant antfile=\"${nb_all}/nbbuild/build/langtools/make/build.xml\" dir=\"${nb_all}/nbbuild/build/langtools/\" target=\"generate-sources\">\n-        <property name=\"langtools.jdk.home\" value=\"${java.home}\" />\n-    </ant>\n-    <mkdir dir=\"${nb_all}/nbbuild/build/langtools/build/nb\" />\n-    <javac srcdir=\"${nb_all}/nbbuild/build/langtools/src/java.compiler/share/classes:${nb_all}/nbbuild/build/langtools/src/jdk.compiler/share/classes:${nb_all}/nbbuild/build/langtools/src/jdk.jdeps/share/classes:${nb_all}/nbbuild/build/langtools/build/gensrc/jdk.compiler\"\n-           destdir=\"${nb_all}/nbbuild/build/langtools/build/nb\"\n-           excludes=\"**/module-info.java,com/sun/tools/javac/main/JavacToolProvider.java,com/sun/tools/jdeps/**,com/sun/tools/jdeprscan/**,com/sun/tools/javap/Main.java,jdk/javadoc/internal/tool/JavadocToolProvider.java,com/sun/tools/doclets/standard/Standard.java\" source=\"1.8\" target=\"1.8\"/>\n-    <copy todir=\"${nb_all}/nbbuild/build/langtools/build/nb\">\n-        <fileset dir=\"${nb_all}/nbbuild/build/langtools/src/java.compiler/share/classes\" includes=\"**/*.properties\"/>\n-        <fileset dir=\"${nb_all}/nbbuild/build/langtools/src/jdk.compiler/share/classes\" includes=\"**/*.properties\"/>\n-        <fileset dir=\"${nb_all}/nbbuild/build/langtools/src/jdk.jdeps/share/classes\" includes=\"**/*.properties\"/>\n-    </copy>\n-    <jar destfile=\"${nb_all}/nbbuild/external/vanilla-javac-api.jar\" basedir=\"${nb_all}/nbbuild/build/langtools/build/nb\" includes=\"javax/**,com/sun/source/**\" />\n-    <jar destfile=\"${nb_all}/nbbuild/external/vanilla-javac-impl.jar\" basedir=\"${nb_all}/nbbuild/build/langtools/build/nb\" excludes=\"javax/**,com/sun/source/**,com/sun/javadoc/**\" />\n-  </target>\n-\n-  <target name=\"init-module-list\" depends=\"bootstrap,init-tasks,prepare-vanilla-javac\">\n+  <target name=\"init-module-list\" depends=\"bootstrap,init-tasks\">\n     <!-- Define modules. -->\n     <checkmoduleconfigs nbroot=\"..\"/>\n     <resolvelist name=\"allmodules\" path=\"modules.fullpath\" dir=\"${nb_all}\" list=\"${nb.clusters.list}\"/>\n@@ -596,7 +565,6 @@ Hg ID:    ${hg.id}\n           <property name=\"cluster.config\" value=\"basic\"/>\n           <property name=\"test.type\" value=\"test-unit\"/>\n           <property name=\"test-unit-sys-prop.ignore.random.failures\" value=\"true\"/>\n-          <property name=\"vanilla.javac.exists\" value=\"true\"/>\n       </ant>\n   </target>\n \n@@ -610,7 +578,6 @@ Hg ID:    ${hg.id}\n       <mkdir dir=\"${netbeans.dest.dir}\"/>\n       <ant dir=\".\" target=\"-build-platform\" inheritAll=\"false\">\n           <property name=\"cluster.config\" value=\"platform\"/>\n-          <property name=\"vanilla.javac.exists\" value=\"true\"/>\n       </ant>\n   </target>\n \n@@ -620,7 +587,6 @@ Hg ID:    ${hg.id}\n           <property name=\"cluster.config\" value=\"platform\"/>\n           <property name=\"test.type\" value=\"test-unit\"/>\n           <property name=\"test-unit-sys-prop.ignore.random.failures\" value=\"true\"/>\n-          <property name=\"vanilla.javac.exists\" value=\"true\"/>\n       </ant>\n   </target>\n   "
  },
  {
    "sha": "59aafd17940b7e8b82f974990d55ab8c3fb693d0",
    "filename": "nbbuild/external/binaries-list",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/apache/netbeans/blob/88d4467e83f4187606f9a8341f4863157087f5a2/nbbuild/external/binaries-list",
    "raw_url": "https://github.com/apache/netbeans/raw/88d4467e83f4187606f9a8341f4863157087f5a2/nbbuild/external/binaries-list",
    "contents_url": "https://api.github.com/repos/apache/netbeans/contents/nbbuild/external/binaries-list?ref=88d4467e83f4187606f9a8341f4863157087f5a2",
    "patch": "@@ -15,7 +15,8 @@\n # specific language governing permissions and limitations\n # under the License.\n 16398550402B27F81CD0D508CEF54B3E47A4A6DA org.apache.rat:apache-rat:0.12\n-AB396EE119BFAD809CC9F09950CC22E2BCE2FE35 langtools-9.zip\n+E83D8755DF07D560A633A45A2340419CD1313E8D com.dukescript.nbjavac:nb-javac:15.0.0.2:api\n+9A4B6A8063E2EE78FF2F12542AC2C06C11B07F61 com.dukescript.nbjavac:nb-javac:15.0.0.2\n E32B3483FBF362C92088CB79E9F1F161F3F64A21 org.apidesign.javadoc:codesnippet-doclet:0.30\n D5CC2CD2A20963B86CF95397784BC7E74101C7A9 org.netbeans.tools:sigtest-maven-plugin:1.2\n C9AD4A0850AB676C5C64461A05CA524CDFFF59F1 com.googlecode.json-simple:json-simple:1.1.1"
  },
  {
    "sha": "40dbd9fa048aa1259ca900f5390c9646fb58a1e9",
    "filename": "nbbuild/external/nb-javac-15.0.0.2-license.txt",
    "status": "renamed",
    "additions": 7,
    "deletions": 6,
    "changes": 13,
    "blob_url": "https://github.com/apache/netbeans/blob/88d4467e83f4187606f9a8341f4863157087f5a2/nbbuild/external/nb-javac-15.0.0.2-license.txt",
    "raw_url": "https://github.com/apache/netbeans/raw/88d4467e83f4187606f9a8341f4863157087f5a2/nbbuild/external/nb-javac-15.0.0.2-license.txt",
    "contents_url": "https://api.github.com/repos/apache/netbeans/contents/nbbuild/external/nb-javac-15.0.0.2-license.txt?ref=88d4467e83f4187606f9a8341f4863157087f5a2",
    "patch": "@@ -1,11 +1,12 @@\n-Name: Javac Compiler\n-Description: Javac Compiler\n-Version: 9\n+Name: Javac Compiler API\n+Description: Javac Compiler API\n+Version: 15.0.0.2\n License: GPL-2-CP\n Origin: OpenJDK (http://hg.openjdk.java.net/)\n-Source: http://hg.openjdk.java.net/jdk9/jdk9/langtools/archive/tip.zip\n-Type: compile-time\n-Comment: Used at compile to compile code that runs either against JDK 9+ or (optional) nb-javac library.\n+Source: http://hg.netbeans.org/main/nb-java-x/\n+Type: compile-time,optional\n+Comment: Used at design time to compile against; optional at runtime.\n+Files: nb-javac-15.0.0.2.jar nb-javac-15.0.0.2-api.jar\n \n The GNU General Public License (GPL)\n ",
    "previous_filename": "nbbuild/external/langtools-9-license.txt"
  },
  {
    "sha": "c8c2f17fd8fea3025e8f5357ce61a83755b9d47b",
    "filename": "nbbuild/templates/projectized.xml",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/apache/netbeans/blob/88d4467e83f4187606f9a8341f4863157087f5a2/nbbuild/templates/projectized.xml",
    "raw_url": "https://github.com/apache/netbeans/raw/88d4467e83f4187606f9a8341f4863157087f5a2/nbbuild/templates/projectized.xml",
    "contents_url": "https://api.github.com/repos/apache/netbeans/contents/nbbuild/templates/projectized.xml?ref=88d4467e83f4187606f9a8341f4863157087f5a2",
    "patch": "@@ -180,7 +180,7 @@\n         <!-- When requires.nb.javac property is true, prepend javac-api and javac-impl on bootclasspath to allow override the default annotation\n              processing API located in rt.jar. -->\n         <property name=\"bootclasspath.prepend.nb\" value=\"${nb_all}/java/libs.javacapi/external/nb-javac-15.0.0.2-api.jar${path.separator}${nb_all}/java/libs.javacimpl/external/nb-javac-15.0.0.2.jar\" />\n-        <property name=\"bootclasspath.prepend.vanilla\" value=\"${nb_all}/nbbuild/external/vanilla-javac-api.jar${path.separator}${nb_all}/nbbuild/external/vanilla-javac-impl.jar\" />\n+        <property name=\"bootclasspath.prepend.vanilla\" value=\"${nb_all}/nbbuild/external/nb-javac-15.0.0.2-api.jar${path.separator}${nb_all}/nbbuild/external/nb-javac-15.0.0.2.jar\" />\n         <condition property=\"bootclasspath.prepend\" value=\"${bootclasspath.prepend.nb}\">\n             <istrue value=\"${requires.nb.javac.impl}\"/>\n         </condition>"
  }
]
