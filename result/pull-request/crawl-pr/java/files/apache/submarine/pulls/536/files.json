[
  {
    "sha": "a90070b8b9f332cffa1f7f46163b16c3dc8d62e5",
    "filename": "dev-support/docker-images/jupyter/Dockerfile",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/apache/submarine/blob/d51d500c0438be3b6635b72f89e16930fc6e9abd/dev-support/docker-images/jupyter/Dockerfile",
    "raw_url": "https://github.com/apache/submarine/raw/d51d500c0438be3b6635b72f89e16930fc6e9abd/dev-support/docker-images/jupyter/Dockerfile",
    "contents_url": "https://api.github.com/repos/apache/submarine/contents/dev-support/docker-images/jupyter/Dockerfile?ref=d51d500c0438be3b6635b72f89e16930fc6e9abd",
    "patch": "@@ -19,7 +19,7 @@ ARG NB_USER=\"jovyan\"\n ARG NB_UID=\"1000\"\n ARG NB_PREFIX=\"/\"\n ARG NB_PORT=8888\n-ARG MLFLOW_TRACKING_URI=\"http://10.96.0.3:8080\"\n+ARG MLFLOW_TRACKING_URI=\"http://10.96.0.3:5000\"\n \n USER root\n "
  },
  {
    "sha": "31f02a02dea33c427d42a58a2553e6af1a0e6507",
    "filename": "submarine-server/server-api/src/main/java/org/apache/submarine/server/api/Submitter.java",
    "status": "modified",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/apache/submarine/blob/d51d500c0438be3b6635b72f89e16930fc6e9abd/submarine-server/server-api/src/main/java/org/apache/submarine/server/api/Submitter.java",
    "raw_url": "https://github.com/apache/submarine/raw/d51d500c0438be3b6635b72f89e16930fc6e9abd/submarine-server/server-api/src/main/java/org/apache/submarine/server/api/Submitter.java",
    "contents_url": "https://api.github.com/repos/apache/submarine/contents/submarine-server/server-api/src/main/java/org/apache/submarine/server/api/Submitter.java?ref=d51d500c0438be3b6635b72f89e16930fc6e9abd",
    "patch": "@@ -24,6 +24,7 @@\n import org.apache.submarine.server.api.experiment.Experiment;\n import org.apache.submarine.server.api.experiment.ExperimentLog;\n import org.apache.submarine.server.api.experiment.TensorboardInfo;\n+import org.apache.submarine.server.api.experiment.MlflowInfo;\n import org.apache.submarine.server.api.notebook.Notebook;\n import org.apache.submarine.server.api.spec.ExperimentSpec;\n import org.apache.submarine.server.api.spec.NotebookSpec;\n@@ -128,4 +129,12 @@\n    * @throws SubmarineRuntimeException running error\n    */\n   TensorboardInfo getTensorboardInfo() throws SubmarineRuntimeException;\n+\n+  /**\n+   * Get mlflow meta data\n+   * @param\n+   * @return object\n+   * @throws SubmarineRuntimeException running error\n+   */\n+  MlflowInfo getMlflowInfo() throws SubmarineRuntimeException;\n }"
  },
  {
    "sha": "3605a396cabf04d57175b8553ed0110dd927d42b",
    "filename": "submarine-server/server-api/src/main/java/org/apache/submarine/server/api/experiment/MlflowInfo.java",
    "status": "added",
    "additions": 46,
    "deletions": 0,
    "changes": 46,
    "blob_url": "https://github.com/apache/submarine/blob/d51d500c0438be3b6635b72f89e16930fc6e9abd/submarine-server/server-api/src/main/java/org/apache/submarine/server/api/experiment/MlflowInfo.java",
    "raw_url": "https://github.com/apache/submarine/raw/d51d500c0438be3b6635b72f89e16930fc6e9abd/submarine-server/server-api/src/main/java/org/apache/submarine/server/api/experiment/MlflowInfo.java",
    "contents_url": "https://api.github.com/repos/apache/submarine/contents/submarine-server/server-api/src/main/java/org/apache/submarine/server/api/experiment/MlflowInfo.java?ref=d51d500c0438be3b6635b72f89e16930fc6e9abd",
    "patch": "@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.submarine.server.api.experiment;\n+\n+public class MlflowInfo {\n+  public boolean available;\n+  public String url;\n+\n+  public MlflowInfo(boolean available, String url) {\n+    this.available = available;\n+    this.url = url;\n+  }\n+\n+  public String getUrl() {\n+    return url;\n+  }\n+\n+  public void setUrl(String url) {\n+    this.url = url;\n+  }\n+\n+  @Override\n+  public String toString() {\n+    return \"MLflowInfo{\" +\n+            \"available=\" + available +\n+            \", url='\" + url + '\\'' +\n+            '}';\n+  }\n+}"
  },
  {
    "sha": "ee429a32ed74ff239a6ae064e8fc4b14a63b7362",
    "filename": "submarine-server/server-core/src/main/java/org/apache/submarine/server/experiment/ExperimentManager.java",
    "status": "modified",
    "additions": 12,
    "deletions": 1,
    "changes": 13,
    "blob_url": "https://github.com/apache/submarine/blob/d51d500c0438be3b6635b72f89e16930fc6e9abd/submarine-server/server-core/src/main/java/org/apache/submarine/server/experiment/ExperimentManager.java",
    "raw_url": "https://github.com/apache/submarine/raw/d51d500c0438be3b6635b72f89e16930fc6e9abd/submarine-server/server-core/src/main/java/org/apache/submarine/server/experiment/ExperimentManager.java",
    "contents_url": "https://api.github.com/repos/apache/submarine/contents/submarine-server/server-core/src/main/java/org/apache/submarine/server/experiment/ExperimentManager.java?ref=d51d500c0438be3b6635b72f89e16930fc6e9abd",
    "patch": "@@ -39,6 +39,7 @@\n import org.apache.submarine.server.api.Submitter;\n import org.apache.submarine.server.api.experiment.ExperimentLog;\n import org.apache.submarine.server.api.experiment.TensorboardInfo;\n+import org.apache.submarine.server.api.experiment.MlflowInfo;\n import org.apache.submarine.server.api.spec.ExperimentSpec;\n import org.apache.submarine.server.experiment.database.ExperimentEntity;\n import org.apache.submarine.server.experiment.database.ExperimentService;\n@@ -106,7 +107,7 @@ public Experiment createExperiment(ExperimentSpec spec) throws SubmarineRuntimeE\n     spec.getMeta().getEnvVars().put(RestConstants.JOB_ID, id.toString());\n     spec.getMeta().getEnvVars().put(RestConstants.SUBMARINE_TRACKING_URI, url);\n     spec.getMeta().getEnvVars().put(RestConstants.LOG_DIR_KEY, RestConstants.LOG_DIR_VALUE);\n-    \n+\n     String lowerName = spec.getMeta().getName().toLowerCase();\n     spec.getMeta().setName(lowerName);\n \n@@ -279,6 +280,16 @@ public TensorboardInfo getTensorboardInfo() throws SubmarineRuntimeException {\n     return submitter.getTensorboardInfo();\n   }\n \n+  /**\n+   * Get mlflow meta data\n+   *\n+   * @return mlflowinfo\n+   * @throws SubmarineRuntimeException the service error\n+   */\n+  public MlflowInfo getMLflowInfo() throws SubmarineRuntimeException {\n+    return submitter.getMlflowInfo();\n+  }\n+\n   private void checkSpec(ExperimentSpec spec) throws SubmarineRuntimeException {\n     if (spec == null) {\n       throw new SubmarineRuntimeException(Status.OK.getStatusCode(), \"Invalid experiment spec.\");"
  },
  {
    "sha": "d914824ccef7226ac51f06182e56ad8552c913e0",
    "filename": "submarine-server/server-core/src/main/java/org/apache/submarine/server/rest/ExperimentRestApi.java",
    "status": "modified",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/apache/submarine/blob/d51d500c0438be3b6635b72f89e16930fc6e9abd/submarine-server/server-core/src/main/java/org/apache/submarine/server/rest/ExperimentRestApi.java",
    "raw_url": "https://github.com/apache/submarine/raw/d51d500c0438be3b6635b72f89e16930fc6e9abd/submarine-server/server-core/src/main/java/org/apache/submarine/server/rest/ExperimentRestApi.java",
    "contents_url": "https://api.github.com/repos/apache/submarine/contents/submarine-server/server-core/src/main/java/org/apache/submarine/server/rest/ExperimentRestApi.java?ref=d51d500c0438be3b6635b72f89e16930fc6e9abd",
    "patch": "@@ -42,6 +42,7 @@\n import org.apache.submarine.commons.utils.exception.SubmarineRuntimeException;\n import org.apache.submarine.server.api.experiment.Experiment;\n import org.apache.submarine.server.api.experiment.TensorboardInfo;\n+import org.apache.submarine.server.api.experiment.MlflowInfo;\n import org.apache.submarine.server.experiment.ExperimentManager;\n import org.apache.submarine.server.experimenttemplate.ExperimentTemplateManager;\n import org.apache.submarine.server.api.experiment.ExperimentLog;\n@@ -278,6 +279,24 @@ public Response getTensorboardInfo() {\n     }\n   }\n \n+  @GET\n+  @Path(\"/mlflow\")\n+  @Operation(summary = \"Get mlflow's information\",\n+          tags = {\"experiment\"},\n+          responses = {\n+                  @ApiResponse(description = \"successful operation\", content = @Content(\n+                          schema = @Schema(implementation = JsonResponse.class))),\n+                  @ApiResponse(responseCode = \"404\", description = \"MLflow not found\")})\n+  public Response getMLflowInfo() {\n+    try {\n+      MlflowInfo mlflowInfo = experimentManager.getMLflowInfo();\n+      return new JsonResponse.Builder<MlflowInfo>(Response.Status.OK).success(true)\n+              .result(mlflowInfo).build();\n+    } catch (SubmarineRuntimeException e) {\n+      return parseExperimentServiceException(e);\n+    }\n+  }\n+\n   private Response parseExperimentServiceException(SubmarineRuntimeException e) {\n     return new JsonResponse.Builder<String>(e.getCode())\n       .message(e.getMessage().equals(\"Conflict\") ? \"Duplicated experiment name\" : e.getMessage()).build();"
  },
  {
    "sha": "516517340939210fff68f055627c116e828225e4",
    "filename": "submarine-server/server-submitter/submitter-k8s/src/main/java/org/apache/submarine/server/submitter/k8s/K8sSubmitter.java",
    "status": "modified",
    "additions": 40,
    "deletions": 0,
    "changes": 40,
    "blob_url": "https://github.com/apache/submarine/blob/d51d500c0438be3b6635b72f89e16930fc6e9abd/submarine-server/server-submitter/submitter-k8s/src/main/java/org/apache/submarine/server/submitter/k8s/K8sSubmitter.java",
    "raw_url": "https://github.com/apache/submarine/raw/d51d500c0438be3b6635b72f89e16930fc6e9abd/submarine-server/server-submitter/submitter-k8s/src/main/java/org/apache/submarine/server/submitter/k8s/K8sSubmitter.java",
    "contents_url": "https://api.github.com/repos/apache/submarine/contents/submarine-server/server-submitter/submitter-k8s/src/main/java/org/apache/submarine/server/submitter/k8s/K8sSubmitter.java?ref=d51d500c0438be3b6635b72f89e16930fc6e9abd",
    "patch": "@@ -54,6 +54,7 @@\n import org.apache.submarine.server.api.experiment.Experiment;\n import org.apache.submarine.server.api.experiment.ExperimentLog;\n import org.apache.submarine.server.api.experiment.TensorboardInfo;\n+import org.apache.submarine.server.api.experiment.MlflowInfo;\n import org.apache.submarine.server.api.notebook.Notebook;\n import org.apache.submarine.server.api.spec.ExperimentMeta;\n import org.apache.submarine.server.api.spec.ExperimentSpec;\n@@ -299,6 +300,45 @@ public TensorboardInfo getTensorboardInfo() throws SubmarineRuntimeException {\n     }\n   }\n \n+  @Override\n+  public MlflowInfo getMlflowInfo() throws SubmarineRuntimeException {\n+    final String name = \"submarine-mlflow\";\n+    final String namespace = \"default\";\n+    final String ingressRouteName = \"submarine-mlflow-ingressroute\";\n+\n+    try {\n+      V1Deployment deploy =  appsV1Api.readNamespacedDeploymentStatus(name, namespace, \"true\");\n+      boolean available = deploy.getStatus().getAvailableReplicas() > 0; // at least one replica is running\n+\n+      IngressRoute ingressRoute = new IngressRoute();\n+      V1ObjectMeta meta = new V1ObjectMeta();\n+      meta.setName(ingressRouteName);\n+      meta.setNamespace(namespace);\n+      ingressRoute.setMetadata(meta);\n+      Object object = api.getNamespacedCustomObject(\n+              ingressRoute.getGroup(), ingressRoute.getVersion(),\n+              ingressRoute.getMetadata().getNamespace(),\n+              ingressRoute.getPlural(), ingressRouteName\n+      );\n+\n+      Gson gson = new JSON().getGson();\n+      String jsonString = gson.toJson(object);\n+      IngressRoute result = gson.fromJson(jsonString, IngressRoute.class);\n+\n+\n+      String route = result.getSpec().getRoutes().stream().findFirst().get().getMatch();\n+\n+      String url = route.replace(\"PathPrefix(`\", \"\").replace(\"`)\", \"/\");\n+\n+      MlflowInfo mlflowInfo = new MlflowInfo(available, url);\n+\n+      return mlflowInfo;\n+    } catch (ApiException e) {\n+      throw new SubmarineRuntimeException(e.getCode(), e.getMessage());\n+    }\n+  }\n+\n+\n   @Override\n   public Notebook createNotebook(NotebookSpec spec) throws SubmarineRuntimeException {\n     Notebook notebook;"
  },
  {
    "sha": "af7a841385153c87dc1c1a9db5e3d19d8124df8c",
    "filename": "submarine-server/server-submitter/submitter-k8s/src/test/java/org/apache/submarine/server/submitter/k8s/K8SJobSubmitterTest.java",
    "status": "modified",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/apache/submarine/blob/d51d500c0438be3b6635b72f89e16930fc6e9abd/submarine-server/server-submitter/submitter-k8s/src/test/java/org/apache/submarine/server/submitter/k8s/K8SJobSubmitterTest.java",
    "raw_url": "https://github.com/apache/submarine/raw/d51d500c0438be3b6635b72f89e16930fc6e9abd/submarine-server/server-submitter/submitter-k8s/src/test/java/org/apache/submarine/server/submitter/k8s/K8SJobSubmitterTest.java",
    "contents_url": "https://api.github.com/repos/apache/submarine/contents/submarine-server/server-submitter/submitter-k8s/src/test/java/org/apache/submarine/server/submitter/k8s/K8SJobSubmitterTest.java?ref=d51d500c0438be3b6635b72f89e16930fc6e9abd",
    "patch": "@@ -26,6 +26,7 @@\n import org.apache.submarine.commons.utils.exception.SubmarineRuntimeException;\n import org.apache.submarine.server.api.experiment.Experiment;\n import org.apache.submarine.server.api.experiment.TensorboardInfo;\n+import org.apache.submarine.server.api.experiment.MlflowInfo;\n import org.apache.submarine.server.api.spec.ExperimentSpec;\n import org.junit.Assert;\n import org.junit.Before;\n@@ -88,6 +89,11 @@ public void testGetTensorboardInfo() throws IOException, URISyntaxException {\n     TensorboardInfo tensorboardInfo = submitter.getTensorboardInfo();\n   }\n \n+  @Test\n+  public void testGetMlflowInfo() throws IOException, URISyntaxException {\n+    MlflowInfo mlflowInfo = submitter.getMlflowInfo();\n+  }\n+\n   private void run(ExperimentSpec spec) throws SubmarineRuntimeException {\n     // create\n     Experiment experimentCreated = submitter.createExperiment(spec);"
  },
  {
    "sha": "649c4310c8d3006e35f1ba895c332adc4acdfb34",
    "filename": "submarine-workbench/workbench-web/src/app/interfaces/mlflow-info.ts",
    "status": "added",
    "additions": 23,
    "deletions": 0,
    "changes": 23,
    "blob_url": "https://github.com/apache/submarine/blob/d51d500c0438be3b6635b72f89e16930fc6e9abd/submarine-workbench/workbench-web/src/app/interfaces/mlflow-info.ts",
    "raw_url": "https://github.com/apache/submarine/raw/d51d500c0438be3b6635b72f89e16930fc6e9abd/submarine-workbench/workbench-web/src/app/interfaces/mlflow-info.ts",
    "contents_url": "https://api.github.com/repos/apache/submarine/contents/submarine-workbench/workbench-web/src/app/interfaces/mlflow-info.ts?ref=d51d500c0438be3b6635b72f89e16930fc6e9abd",
    "patch": "@@ -0,0 +1,23 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+export interface MlflowInfo {\n+  available: boolean;\n+  url: string;\n+}"
  },
  {
    "sha": "f2733b97abef434b6c83e6c2d2da42f3d1b04b51",
    "filename": "submarine-workbench/workbench-web/src/app/pages/workbench/experiment/experiment-home/experiment-home.component.html",
    "status": "modified",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/apache/submarine/blob/d51d500c0438be3b6635b72f89e16930fc6e9abd/submarine-workbench/workbench-web/src/app/pages/workbench/experiment/experiment-home/experiment-home.component.html",
    "raw_url": "https://github.com/apache/submarine/raw/d51d500c0438be3b6635b72f89e16930fc6e9abd/submarine-workbench/workbench-web/src/app/pages/workbench/experiment/experiment-home/experiment-home.component.html",
    "contents_url": "https://api.github.com/repos/apache/submarine/contents/submarine-workbench/workbench-web/src/app/pages/workbench/experiment/experiment-home/experiment-home.component.html?ref=d51d500c0438be3b6635b72f89e16930fc6e9abd",
    "patch": "@@ -29,6 +29,17 @@\n       <label nz-radio-button nzValue=\"Own\">Owned By Me</label>\n       <label nz-radio-button nzValue=\"Access\">Accessible By Me</label>\n     </nz-radio-group>\n+    <a\n+      nz-button\n+      target=\"_blank\"\n+      nzType=\"primary\"\n+      style=\"margin: 0px 4px 0px 4px\"\n+      [nzLoading]=\"isMlflowLoading\"\n+      [href]=\"mlflowUrl\"\n+    >\n+      <i nz-icon nzType=\"area-chart\"></i>\n+      MLflow UI\n+    </a>\n     <a\n       nz-button\n       target=\"_blank\""
  },
  {
    "sha": "603e6f93445fa74fe4754dc09b94d76adb7a895a",
    "filename": "submarine-workbench/workbench-web/src/app/pages/workbench/experiment/experiment-home/experiment-home.component.ts",
    "status": "modified",
    "additions": 23,
    "deletions": 0,
    "changes": 23,
    "blob_url": "https://github.com/apache/submarine/blob/d51d500c0438be3b6635b72f89e16930fc6e9abd/submarine-workbench/workbench-web/src/app/pages/workbench/experiment/experiment-home/experiment-home.component.ts",
    "raw_url": "https://github.com/apache/submarine/raw/d51d500c0438be3b6635b72f89e16930fc6e9abd/submarine-workbench/workbench-web/src/app/pages/workbench/experiment/experiment-home/experiment-home.component.ts",
    "contents_url": "https://api.github.com/repos/apache/submarine/contents/submarine-workbench/workbench-web/src/app/pages/workbench/experiment/experiment-home/experiment-home.component.ts?ref=d51d500c0438be3b6635b72f89e16930fc6e9abd",
    "patch": "@@ -49,6 +49,10 @@ export class ExperimentHomeComponent implements OnInit {\n   reloadInterval = interval(this.reloadPeriod);\n   reloadSub = null;\n \n+  //mlflow\n+  isMlflowLoading: boolean = true;\n+  mlflowUrl: string = '';\n+\n   // tensorboard\n   isTensorboardLoading: boolean = true;\n   tensorboardUrl: string = '';\n@@ -68,6 +72,7 @@ export class ExperimentHomeComponent implements OnInit {\n \n     this.experimentService.emitInfo(null);\n     this.getTensorboardInfo(1000, 50000);\n+    this.getMlflowInfo(1000, 50000);\n   }\n \n   fetchExperimentList() {\n@@ -164,4 +169,22 @@ export class ExperimentHomeComponent implements OnInit {\n         (err) => console.log(err)\n       );\n   }\n+\n+  getMlflowInfo(period: number, due: number) {\n+    interval(period)\n+      .pipe(\n+        mergeMap(() => this.experimentService.getMlflowInfo()),\n+        tap((x) => console.log(x)),\n+        filter((res) => res.available),\n+        take(1),\n+        timeout(due)\n+      )\n+      .subscribe(\n+        (res) => {\n+          this.isMlflowLoading = !res.available;\n+          this.mlflowUrl = res.url;\n+        },\n+        (err) => console.log(err)\n+      );\n+  }\n }"
  },
  {
    "sha": "bd3eaae8c5cf8ca21c94a3c83cd723d0fd1088cc",
    "filename": "submarine-workbench/workbench-web/src/app/services/experiment.service.ts",
    "status": "modified",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/apache/submarine/blob/d51d500c0438be3b6635b72f89e16930fc6e9abd/submarine-workbench/workbench-web/src/app/services/experiment.service.ts",
    "raw_url": "https://github.com/apache/submarine/raw/d51d500c0438be3b6635b72f89e16930fc6e9abd/submarine-workbench/workbench-web/src/app/services/experiment.service.ts",
    "contents_url": "https://api.github.com/repos/apache/submarine/contents/submarine-workbench/workbench-web/src/app/services/experiment.service.ts?ref=d51d500c0438be3b6635b72f89e16930fc6e9abd",
    "patch": "@@ -25,6 +25,7 @@ import { ExperimentSpec } from '@submarine/interfaces/experiment-spec';\n import { ExperimentTemplate } from '@submarine/interfaces/experiment-template';\n import { ExperimentTemplateSubmit } from '@submarine/interfaces/experiment-template-submit';\n import { TensorboardInfo } from '@submarine/interfaces/tensorboard-info';\n+import { MlflowInfo } from '@submarine/interfaces/mlflow-info';\n import { BaseApiService } from '@submarine/services/base-api.service';\n import { of, throwError, Observable, Subject } from 'rxjs';\n import { catchError, map, switchMap } from 'rxjs/operators';\n@@ -225,6 +226,19 @@ export class ExperimentService {\n     );\n   }\n \n+  getMlflowInfo(): Observable<MlflowInfo> {\n+    const apiUrl = this.baseApi.getRestApi('/v1/experiment/mlflow');\n+    return this.httpClient.get<Rest<MlflowInfo>>(apiUrl).pipe(\n+      switchMap((res) => {\n+        if (res.success) {\n+          return of(res.result);\n+        } else {\n+          throw this.baseApi.createRequestError(res.message, res.code, apiUrl, 'get');\n+        }\n+      })\n+    );\n+  }\n+\n   durationHandle(secs: number) {\n     const hr = Math.floor(secs / 3600);\n     const min = Math.floor((secs - hr * 3600) / 60);"
  }
]
