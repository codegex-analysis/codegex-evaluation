[
  {
    "sha": "35d1bd0f71e7acd8cf6d579ab41461ba26b17e77",
    "filename": "plugins/hypervisors/vmware/src/main/java/com/cloud/hypervisor/vmware/resource/VmwareResource.java",
    "status": "modified",
    "additions": 25,
    "deletions": 19,
    "changes": 44,
    "blob_url": "https://github.com/apache/cloudstack/blob/aa60c1c64e3ab727a13654815cf4270f3526405f/plugins/hypervisors/vmware/src/main/java/com/cloud/hypervisor/vmware/resource/VmwareResource.java",
    "raw_url": "https://github.com/apache/cloudstack/raw/aa60c1c64e3ab727a13654815cf4270f3526405f/plugins/hypervisors/vmware/src/main/java/com/cloud/hypervisor/vmware/resource/VmwareResource.java",
    "contents_url": "https://api.github.com/repos/apache/cloudstack/contents/plugins/hypervisors/vmware/src/main/java/com/cloud/hypervisor/vmware/resource/VmwareResource.java?ref=aa60c1c64e3ab727a13654815cf4270f3526405f",
    "patch": "@@ -16,6 +16,9 @@\n // under the License.\n package com.cloud.hypervisor.vmware.resource;\n \n+import static com.cloud.utils.HumanReadableJson.getHumanReadableBytesJson;\n+import static com.cloud.utils.NumbersUtil.toHumanReadableSize;\n+\n import java.io.File;\n import java.io.IOException;\n import java.io.UnsupportedEncodingException;\n@@ -45,11 +48,12 @@\n import javax.naming.ConfigurationException;\n import javax.xml.datatype.XMLGregorianCalendar;\n \n-import com.cloud.agent.api.to.DataTO;\n-import com.cloud.agent.api.to.DeployAsIsInfoTO;\n-import com.cloud.agent.api.ValidateVcenterDetailsCommand;\n import org.apache.cloudstack.api.ApiConstants;\n+import org.apache.cloudstack.storage.command.CopyCommand;\n+import org.apache.cloudstack.storage.command.StorageSubSystemCommand;\n import org.apache.cloudstack.storage.configdrive.ConfigDrive;\n+import org.apache.cloudstack.storage.resource.NfsSecondaryStorageResource;\n+import org.apache.cloudstack.storage.to.PrimaryDataStoreTO;\n import org.apache.cloudstack.storage.to.TemplateObjectTO;\n import org.apache.cloudstack.storage.to.VolumeObjectTO;\n import org.apache.cloudstack.utils.volume.VirtualMachineDiskInfo;\n@@ -162,6 +166,7 @@\n import com.cloud.agent.api.UpgradeSnapshotCommand;\n import com.cloud.agent.api.ValidateSnapshotAnswer;\n import com.cloud.agent.api.ValidateSnapshotCommand;\n+import com.cloud.agent.api.ValidateVcenterDetailsCommand;\n import com.cloud.agent.api.VmDiskStatsEntry;\n import com.cloud.agent.api.VmStatsEntry;\n import com.cloud.agent.api.VolumeStatsEntry;\n@@ -178,19 +183,21 @@\n import com.cloud.agent.api.storage.DestroyCommand;\n import com.cloud.agent.api.storage.MigrateVolumeAnswer;\n import com.cloud.agent.api.storage.MigrateVolumeCommand;\n-import com.cloud.agent.api.to.deployasis.OVFPropertyTO;\n import com.cloud.agent.api.storage.PrimaryStorageDownloadAnswer;\n import com.cloud.agent.api.storage.PrimaryStorageDownloadCommand;\n import com.cloud.agent.api.storage.ResizeVolumeAnswer;\n import com.cloud.agent.api.storage.ResizeVolumeCommand;\n import com.cloud.agent.api.to.DataStoreTO;\n+import com.cloud.agent.api.to.DataTO;\n+import com.cloud.agent.api.to.DeployAsIsInfoTO;\n import com.cloud.agent.api.to.DiskTO;\n import com.cloud.agent.api.to.IpAddressTO;\n import com.cloud.agent.api.to.NfsTO;\n import com.cloud.agent.api.to.NicTO;\n import com.cloud.agent.api.to.StorageFilerTO;\n import com.cloud.agent.api.to.VirtualMachineTO;\n import com.cloud.agent.api.to.VolumeTO;\n+import com.cloud.agent.api.to.deployasis.OVFPropertyTO;\n import com.cloud.agent.resource.virtualnetwork.VRScripts;\n import com.cloud.agent.resource.virtualnetwork.VirtualRouterDeployer;\n import com.cloud.agent.resource.virtualnetwork.VirtualRoutingResource;\n@@ -219,8 +226,8 @@\n import com.cloud.hypervisor.vmware.mo.HypervisorHostHelper;\n import com.cloud.hypervisor.vmware.mo.NetworkDetails;\n import com.cloud.hypervisor.vmware.mo.PbmProfileManagerMO;\n-import com.cloud.hypervisor.vmware.mo.TaskMO;\n import com.cloud.hypervisor.vmware.mo.StoragepodMO;\n+import com.cloud.hypervisor.vmware.mo.TaskMO;\n import com.cloud.hypervisor.vmware.mo.VirtualEthernetCardType;\n import com.cloud.hypervisor.vmware.mo.VirtualMachineDiskInfoBuilder;\n import com.cloud.hypervisor.vmware.mo.VirtualMachineMO;\n@@ -289,7 +296,6 @@\n import com.vmware.vim25.HostPortGroupSpec;\n import com.vmware.vim25.ManagedObjectReference;\n import com.vmware.vim25.NasDatastoreInfo;\n-import com.vmware.vim25.VirtualMachineDefinedProfileSpec;\n import com.vmware.vim25.ObjectContent;\n import com.vmware.vim25.OptionValue;\n import com.vmware.vim25.PerfCounterInfo;\n@@ -324,6 +330,7 @@\n import com.vmware.vim25.VirtualIDEController;\n import com.vmware.vim25.VirtualMachineBootOptions;\n import com.vmware.vim25.VirtualMachineConfigSpec;\n+import com.vmware.vim25.VirtualMachineDefinedProfileSpec;\n import com.vmware.vim25.VirtualMachineFileInfo;\n import com.vmware.vim25.VirtualMachineFileLayoutEx;\n import com.vmware.vim25.VirtualMachineFileLayoutExFileInfo;\n@@ -343,13 +350,6 @@\n import com.vmware.vim25.VmConfigSpec;\n import com.vmware.vim25.VmwareDistributedVirtualSwitchPvlanSpec;\n import com.vmware.vim25.VmwareDistributedVirtualSwitchVlanIdSpec;\n-import org.apache.cloudstack.storage.command.CopyCommand;\n-import org.apache.cloudstack.storage.command.StorageSubSystemCommand;\n-import org.apache.cloudstack.storage.resource.NfsSecondaryStorageResource;\n-import org.apache.cloudstack.storage.to.PrimaryDataStoreTO;\n-\n-import static com.cloud.utils.HumanReadableJson.getHumanReadableBytesJson;\n-import static com.cloud.utils.NumbersUtil.toHumanReadableSize;\n \n public class VmwareResource implements StoragePoolResource, ServerResource, VmwareHostService, VirtualRouterDeployer {\n     private static final Logger s_logger = Logger.getLogger(VmwareResource.class);\n@@ -1861,7 +1861,8 @@ protected StartAnswer execute(StartCommand cmd) {\n                             s_logger.info(\"Cloned deploy-as-is VM \" + vmInternalCSName + \" is not in this host, relocating it\");\n                             vmMo = takeVmFromOtherHyperHost(hyperHost, vmInternalCSName);\n                         }\n-                    } else {\n+                    }\n+                    if (vmMo == null) { // Find VM from root disk on datastore\n                         DiskTO rootDisk = null;\n                         for (DiskTO vol : disks) {\n                             if (vol.getType() == Volume.Type.ROOT) {\n@@ -1888,7 +1889,8 @@ protected StartAnswer execute(StartCommand cmd) {\n                             }\n                         }\n \n-                        boolean vmFolderExists = dsRootVolumeIsOn.folderExists(String.format(\"[%s]\", dsRootVolumeIsOn.getName()), vmNameOnVcenter);                        String vmxFileFullPath = dsRootVolumeIsOn.searchFileInSubFolders(vmNameOnVcenter + \".vmx\", false, VmwareManager.s_vmwareSearchExcludeFolder.value());\n+                        boolean vmFolderExists = dsRootVolumeIsOn.folderExists(String.format(\"[%s]\", dsRootVolumeIsOn.getName()), vmNameOnVcenter);\n+                        String vmxFileFullPath = dsRootVolumeIsOn.searchFileInSubFolders(vmNameOnVcenter + \".vmx\", false, VmwareManager.s_vmwareSearchExcludeFolder.value());\n                         if (vmFolderExists && vmxFileFullPath != null) { // VM can be registered only if .vmx is present.\n                             registerVm(vmNameOnVcenter, dsRootVolumeIsOn);\n                             vmMo = hyperHost.findVmOnHyperHost(vmInternalCSName);\n@@ -1898,10 +1900,14 @@ protected StartAnswer execute(StartCommand cmd) {\n                                 }\n                             }\n                             tearDownVm(vmMo);\n-                        } else if (!hyperHost.createBlankVm(vmNameOnVcenter, vmInternalCSName, vmSpec.getCpus(), vmSpec.getMaxSpeed().intValue(), getReservedCpuMHZ(vmSpec),\n-                                vmSpec.getLimitCpuUse(), (int) (vmSpec.getMaxRam() / ResourceType.bytesToMiB), getReservedMemoryMb(vmSpec), guestOsId, rootDiskDataStoreDetails.first(), false,\n-                                controllerInfo, systemVm)) {\n-                            throw new Exception(\"Failed to create VM. vmName: \" + vmInternalCSName);\n+                        } else {\n+                            boolean blankVmCreated = hyperHost.createBlankVm(vmNameOnVcenter, vmInternalCSName, vmSpec.getCpus(), vmSpec.getMaxSpeed().intValue(), getReservedCpuMHZ(vmSpec),\n+                                    vmSpec.getLimitCpuUse(), (int) (vmSpec.getMaxRam() / ResourceType.bytesToMiB), getReservedMemoryMb(vmSpec), guestOsId, rootDiskDataStoreDetails.first(), false,\n+                                    controllerInfo, systemVm);\n+                            if (!blankVmCreated) {\n+                                throw new Exception(\"Failed to create VM. vmName: \" + vmInternalCSName);\n+                            }\n+                            deployAsIs = false;\n                         }\n                     }\n                 }"
  },
  {
    "sha": "a2aee6b53e1eca629dcf1a44284a1e6fc8b2b74c",
    "filename": "plugins/hypervisors/vmware/src/main/java/com/cloud/storage/resource/VmwareStorageProcessor.java",
    "status": "modified",
    "additions": 9,
    "deletions": 10,
    "changes": 19,
    "blob_url": "https://github.com/apache/cloudstack/blob/aa60c1c64e3ab727a13654815cf4270f3526405f/plugins/hypervisors/vmware/src/main/java/com/cloud/storage/resource/VmwareStorageProcessor.java",
    "raw_url": "https://github.com/apache/cloudstack/raw/aa60c1c64e3ab727a13654815cf4270f3526405f/plugins/hypervisors/vmware/src/main/java/com/cloud/storage/resource/VmwareStorageProcessor.java",
    "contents_url": "https://api.github.com/repos/apache/cloudstack/contents/plugins/hypervisors/vmware/src/main/java/com/cloud/storage/resource/VmwareStorageProcessor.java?ref=aa60c1c64e3ab727a13654815cf4270f3526405f",
    "patch": "@@ -34,11 +34,6 @@\n import java.util.concurrent.Executors;\n import java.util.concurrent.TimeUnit;\n \n-import com.cloud.hypervisor.vmware.mo.VirtualStorageObjectManagerMO;\n-import com.cloud.hypervisor.vmware.mo.VirtualMachineDiskInfoBuilder;\n-import com.vmware.vim25.BaseConfigInfoDiskFileBackingInfo;\n-import com.vmware.vim25.VStorageObject;\n-import com.vmware.vim25.VirtualDiskType;\n import org.apache.cloudstack.agent.directdownload.DirectDownloadCommand;\n import org.apache.cloudstack.storage.command.AttachAnswer;\n import org.apache.cloudstack.storage.command.AttachCommand;\n@@ -84,7 +79,9 @@\n import com.cloud.hypervisor.vmware.mo.HostStorageSystemMO;\n import com.cloud.hypervisor.vmware.mo.HypervisorHostHelper;\n import com.cloud.hypervisor.vmware.mo.NetworkDetails;\n+import com.cloud.hypervisor.vmware.mo.VirtualMachineDiskInfoBuilder;\n import com.cloud.hypervisor.vmware.mo.VirtualMachineMO;\n+import com.cloud.hypervisor.vmware.mo.VirtualStorageObjectManagerMO;\n import com.cloud.hypervisor.vmware.mo.VmwareHypervisorHost;\n import com.cloud.hypervisor.vmware.resource.VmwareResource;\n import com.cloud.hypervisor.vmware.util.VmwareContext;\n@@ -104,6 +101,7 @@\n import com.cloud.vm.VmDetailConstants;\n import com.google.common.base.Strings;\n import com.google.gson.Gson;\n+import com.vmware.vim25.BaseConfigInfoDiskFileBackingInfo;\n import com.vmware.vim25.DatastoreHostMount;\n import com.vmware.vim25.HostHostBusAdapter;\n import com.vmware.vim25.HostInternetScsiHba;\n@@ -122,11 +120,13 @@\n import com.vmware.vim25.HostUnresolvedVmfsVolume;\n import com.vmware.vim25.InvalidStateFaultMsg;\n import com.vmware.vim25.ManagedObjectReference;\n+import com.vmware.vim25.VStorageObject;\n import com.vmware.vim25.VirtualDeviceBackingInfo;\n import com.vmware.vim25.VirtualDeviceConfigSpec;\n import com.vmware.vim25.VirtualDeviceConfigSpecOperation;\n import com.vmware.vim25.VirtualDisk;\n import com.vmware.vim25.VirtualDiskFlatVer2BackingInfo;\n+import com.vmware.vim25.VirtualDiskType;\n import com.vmware.vim25.VirtualMachineConfigSpec;\n import com.vmware.vim25.VmConfigInfo;\n import com.vmware.vim25.VmfsDatastoreExpandSpec;\n@@ -2683,15 +2683,14 @@ public Answer deleteVolume(DeleteCommand cmd) {\n                         List<VirtualDisk> virtualDisks = vmMo.getVirtualDisks();\n                         List<String> managedDatastoreNames = getManagedDatastoreNamesFromVirtualDisks(virtualDisks);\n \n+                        // Preserve other disks of the VM\n+                        List<String> detachedDisks = vmMo.detachAllDisksExcept(vol.getPath(), diskInfo != null ? diskInfo.getDiskDeviceBusName() : null);\n+                        VmwareStorageLayoutHelper.moveVolumeToRootFolder(new DatacenterMO(context, morDc), detachedDisks);\n                         // let vmMo.destroy to delete volume for us\n                         // vmMo.tearDownDevices(new Class<?>[] { VirtualDisk.class, VirtualEthernetCard.class });\n-\n                         if (isManaged) {\n-                            List<String> detachedDisks = vmMo.detachAllDisksExcept(vol.getPath(), diskInfo != null ? diskInfo.getDiskDeviceBusName() : null);\n-                            VmwareStorageLayoutHelper.moveVolumeToRootFolder(new DatacenterMO(context, morDc), detachedDisks);\n                             vmMo.unregisterVm();\n-                        }\n-                        else {\n+                        } else {\n                             vmMo.destroy();\n                         }\n "
  }
]
