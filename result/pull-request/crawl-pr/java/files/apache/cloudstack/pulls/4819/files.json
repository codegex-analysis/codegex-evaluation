[
  {
    "sha": "560e25b4a34d3fbce89e29bb16b2b821199fb2a0",
    "filename": "server/src/main/java/com/cloud/vm/UserVmManagerImpl.java",
    "status": "modified",
    "additions": 4,
    "deletions": 16,
    "changes": 20,
    "blob_url": "https://github.com/apache/cloudstack/blob/2e6eebe6832a934144d118f1f415d370126d1183/server/src/main/java/com/cloud/vm/UserVmManagerImpl.java",
    "raw_url": "https://github.com/apache/cloudstack/raw/2e6eebe6832a934144d118f1f415d370126d1183/server/src/main/java/com/cloud/vm/UserVmManagerImpl.java",
    "contents_url": "https://api.github.com/repos/apache/cloudstack/contents/server/src/main/java/com/cloud/vm/UserVmManagerImpl.java?ref=2e6eebe6832a934144d118f1f415d370126d1183",
    "patch": "@@ -850,22 +850,19 @@ public UserVm resetVMSSHKey(ResetVMSSHKeyCmd cmd) throws ResourceUnavailableExce\n         }\n \n         _accountMgr.checkAccess(caller, null, true, userVm);\n-        String password = null;\n+\n         String sshPublicKey = s.getPublicKey();\n-        if (template != null && template.isEnablePassword()) {\n-            password = _mgr.generateRandomPassword();\n-        }\n \n-        boolean result = resetVMSSHKeyInternal(vmId, sshPublicKey, password);\n+        boolean result = resetVMSSHKeyInternal(vmId, sshPublicKey);\n \n         if (!result) {\n             throw new CloudRuntimeException(\"Failed to reset SSH Key for the virtual machine \");\n         }\n-        userVm.setPassword(password);\n+\n         return userVm;\n     }\n \n-    private boolean resetVMSSHKeyInternal(Long vmId, String sshPublicKey, String password) throws ResourceUnavailableException, InsufficientCapacityException {\n+    private boolean resetVMSSHKeyInternal(Long vmId, String sshPublicKey) throws ResourceUnavailableException, InsufficientCapacityException {\n         Long userId = CallContext.current().getCallingUserId();\n         VMInstanceVO vmInstance = _vmDao.findById(vmId);\n \n@@ -882,10 +879,6 @@ private boolean resetVMSSHKeyInternal(Long vmId, String sshPublicKey, String pas\n \n         VirtualMachineProfile vmProfile = new VirtualMachineProfileImpl(vmInstance);\n \n-        if (template.isEnablePassword()) {\n-            vmProfile.setParameter(VirtualMachineProfile.Param.VmPassword, password);\n-        }\n-\n         UserDataServiceProvider element = _networkMgr.getSSHKeyResetProvider(defaultNetwork);\n         if (element == null) {\n             throw new CloudRuntimeException(\"Can't find network element for \" + Service.UserData.getName() + \" provider needed for SSH Key reset\");\n@@ -900,11 +893,6 @@ private boolean resetVMSSHKeyInternal(Long vmId, String sshPublicKey, String pas\n             final UserVmVO userVm = _vmDao.findById(vmId);\n             _vmDao.loadDetails(userVm);\n             userVm.setDetail(VmDetailConstants.SSH_PUBLIC_KEY, sshPublicKey);\n-            if (template.isEnablePassword()) {\n-                userVm.setPassword(password);\n-                //update the encrypted password in vm_details table too\n-                encryptAndStorePassword(userVm, password);\n-            }\n             _vmDao.saveDetails(userVm);\n \n             if (vmInstance.getState() == State.Stopped) {"
  }
]
