[
  {
    "sha": "ad2e20ccad52e33d3f619c87d0967b60851997b0",
    "filename": "query/src/main/java/org/apache/kylin/query/enumerator/LookupTableEnumerator.java",
    "status": "modified",
    "additions": 21,
    "deletions": 2,
    "changes": 23,
    "blob_url": "https://github.com/apache/kylin/blob/89d56528b35e3b8d5eabe01b2d8264fe753891fe/query/src/main/java/org/apache/kylin/query/enumerator/LookupTableEnumerator.java",
    "raw_url": "https://github.com/apache/kylin/raw/89d56528b35e3b8d5eabe01b2d8264fe753891fe/query/src/main/java/org/apache/kylin/query/enumerator/LookupTableEnumerator.java",
    "contents_url": "https://api.github.com/repos/apache/kylin/contents/query/src/main/java/org/apache/kylin/query/enumerator/LookupTableEnumerator.java?ref=89d56528b35e3b8d5eabe01b2d8264fe753891fe",
    "patch": "@@ -20,10 +20,15 @@\n \n import java.io.IOException;\n import java.util.Arrays;\n+import java.util.HashSet;\n import java.util.Iterator;\n import java.util.List;\n+import java.util.Locale;\n+import java.util.Set;\n \n import org.apache.calcite.linq4j.Enumerator;\n+import org.apache.kylin.common.debug.BackdoorToggles;\n+import org.apache.kylin.common.util.StringUtil;\n import org.apache.kylin.cube.CubeInstance;\n import org.apache.kylin.cube.CubeManager;\n import org.apache.kylin.cube.model.DimensionDesc;\n@@ -60,8 +65,22 @@ public LookupTableEnumerator(OLAPContext olapContext) {\n             List<RealizationEntry> realizationEntries = project.getRealizationEntries();\n             String lookupTableName = olapContext.firstTableScan.getTableName();\n             CubeManager cubeMgr = CubeManager.getInstance(cube.getConfig());\n-            cube = cubeMgr.findLatestSnapshot(realizationEntries, lookupTableName, cube);\n-            olapContext.realization = cube;\n+\n+            // Make force hit cube in lookup table\n+            String forceHitCubeName = BackdoorToggles.getForceHitCube();\n+            if (!StringUtil.isEmpty(forceHitCubeName)) {\n+                String forceHitCubeNameLower = forceHitCubeName.toLowerCase(Locale.ROOT);\n+                String[] forceHitCubeNames = forceHitCubeNameLower.split(\",\");\n+                final Set<String> forceHitCubeNameSet = new HashSet<String>(Arrays.asList(forceHitCubeNames));\n+                cube = cubeMgr.findLatestSnapshot(\n+                        (List<RealizationEntry>) realizationEntries.stream()\n+                                .filter(x -> forceHitCubeNameSet.contains(x.getRealization().toLowerCase(Locale.ROOT))),\n+                        lookupTableName, cube);\n+                olapContext.realization = cube;\n+            } else {\n+                cube = cubeMgr.findLatestSnapshot(realizationEntries, lookupTableName, cube);\n+                olapContext.realization = cube;\n+            }\n         } else if (olapContext.realization instanceof HybridInstance) {\n             final HybridInstance hybridInstance = (HybridInstance) olapContext.realization;\n             final IRealization latestRealization = hybridInstance.getLatestRealization();"
  },
  {
    "sha": "8109430e0565bfbf18e0ce157bdd352224c77eb0",
    "filename": "query/src/main/java/org/apache/kylin/query/routing/QueryRouter.java",
    "status": "modified",
    "additions": 25,
    "deletions": 6,
    "changes": 31,
    "blob_url": "https://github.com/apache/kylin/blob/89d56528b35e3b8d5eabe01b2d8264fe753891fe/query/src/main/java/org/apache/kylin/query/routing/QueryRouter.java",
    "raw_url": "https://github.com/apache/kylin/raw/89d56528b35e3b8d5eabe01b2d8264fe753891fe/query/src/main/java/org/apache/kylin/query/routing/QueryRouter.java",
    "contents_url": "https://api.github.com/repos/apache/kylin/contents/query/src/main/java/org/apache/kylin/query/routing/QueryRouter.java?ref=89d56528b35e3b8d5eabe01b2d8264fe753891fe",
    "patch": "@@ -18,11 +18,15 @@\n \n package org.apache.kylin.query.routing;\n \n+import java.util.Arrays;\n+import java.util.HashSet;\n import java.util.List;\n+import java.util.Locale;\n import java.util.Set;\n \n import org.apache.commons.lang3.StringUtils;\n import org.apache.kylin.common.debug.BackdoorToggles;\n+import org.apache.kylin.common.util.StringUtil;\n import org.apache.kylin.metadata.model.FunctionDesc;\n import org.apache.kylin.metadata.realization.CapabilityResult;\n import org.apache.kylin.metadata.realization.CapabilityResult.CapabilityInfluence;\n@@ -50,15 +54,30 @@ public static IRealization selectRealization(OLAPContext olapContext, Set<IReali\n         String projectName = olapContext.olapSchema.getProjectName();\n         SQLDigest sqlDigest = olapContext.getSQLDigest();\n \n-        List<Candidate> candidates = Lists.newArrayListWithCapacity(realizations.size());\n+        String forceHitCubeName = BackdoorToggles.getForceHitCube();\n+        Set<String> forceHitCubeNameSet = new HashSet<String>();\n+        if (!StringUtil.isEmpty(forceHitCubeName)) {\n+            String forceHitCubeNameLower = forceHitCubeName.toLowerCase(Locale.ROOT);\n+            String[] forceHitCubeNames = forceHitCubeNameLower.split(\",\");\n+            forceHitCubeNameSet = new HashSet<String>(Arrays.asList(forceHitCubeNames));\n+        }\n+\n+        List<Candidate> candidates = Lists.newArrayList();\n         for (IRealization real : realizations) {\n-            if (real.isReady())\n-                candidates.add(new Candidate(real, sqlDigest));\n-            if (BackdoorToggles.getForceHitCube() != null && BackdoorToggles.getForceHitCube().equalsIgnoreCase(real.getName())) {\n-                logger.info(\"Force choose {} as selected cube for specific purpose.\", real.getName());\n-                candidates = Lists.newArrayListWithCapacity(1);\n+            if (!forceHitCubeNameSet.isEmpty()) {\n+                if (!forceHitCubeNameSet.contains(real.getName().toLowerCase(Locale.ROOT))) {\n+                    continue;\n+                }\n+                if (!real.isReady()) {\n+                    throw new RuntimeException(\n+                            \"Realization \" + real.getName() + \" is not ready and should not be force hit\");\n+                }\n                 candidates.add(new Candidate(real, sqlDigest));\n                 break;\n+            } else {\n+                if (real.isReady()) {\n+                    candidates.add(new Candidate(real, sqlDigest));\n+                }\n             }\n         }\n "
  }
]
