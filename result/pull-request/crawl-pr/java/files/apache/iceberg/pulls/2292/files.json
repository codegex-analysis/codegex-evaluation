[
  {
    "sha": "2e2fea4cc40851fa0572fcba10ede8b25196c023",
    "filename": "site/docs/nessie.md",
    "status": "added",
    "additions": 126,
    "deletions": 0,
    "changes": 126,
    "blob_url": "https://github.com/apache/iceberg/blob/09b256c4cedc9091711348cf2a70b3c1eee715d1/site/docs/nessie.md",
    "raw_url": "https://github.com/apache/iceberg/raw/09b256c4cedc9091711348cf2a70b3c1eee715d1/site/docs/nessie.md",
    "contents_url": "https://api.github.com/repos/apache/iceberg/contents/site/docs/nessie.md?ref=09b256c4cedc9091711348cf2a70b3c1eee715d1",
    "patch": "@@ -0,0 +1,126 @@\n+<!--\n+ - Licensed to the Apache Software Foundation (ASF) under one or more\n+ - contributor license agreements.  See the NOTICE file distributed with\n+ - this work for additional information regarding copyright ownership.\n+ - The ASF licenses this file to You under the Apache License, Version 2.0\n+ - (the \"License\"); you may not use this file except in compliance with\n+ - the License.  You may obtain a copy of the License at\n+ -\n+ -   http://www.apache.org/licenses/LICENSE-2.0\n+ -\n+ - Unless required by applicable law or agreed to in writing, software\n+ - distributed under the License is distributed on an \"AS IS\" BASIS,\n+ - WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ - See the License for the specific language governing permissions and\n+ - limitations under the License.\n+ -->\n+\n+# Iceberg Nessie Integration\n+\n+Iceberg provides integration with Nessie through the `iceberg-nessie` module.\n+This section describes how to use Iceberg with Nessie. Nessie provides several key features on top of iceberg:\n+\n+* multi-table transactions\n+* git-like operations (eg branches, tags, commits)\n+* hive-like metastore capabilities\n+\n+See [Project Nessie](https://projectnessie.org) for more information on Nessie. Nessie requires a server to run, see\n+[Getting Started](https://projectnessie.org/try/) to start a Nessie server.\n+\n+## Enabling Nessie Catalog\n+\n+The `iceberg-nessie` module is bundled with Spark and Flink runtimes for all versions from `0.11.0`. To get started\n+with nessie and iceberg simply add the iceberg runtime to your process. Eg: `spark-sql --packages\n+org.apache.iceberg:iceberg-spark3-runtiume:0.11.0`. \n+\n+## Nessie Catalog\n+\n+One major feature introduced in release `0.11.0` is the ability to easily interact with a [Custom\n+Catalog](../custom-catalog) from Spark and Flink. See [Spark Configuration](../spark-configuration#catalog-configuration)\n+  and [Flink Configuration](../flink#custom-catalog) for instructions for adding a custom catalog to Iceberg. \n+\n+To use the Nessie Catalog the following properties are required:\n+\n+* `warehouse`. Like most other catalogs the warehouse property is a file path to where this catalog should store tables.\n+* `uri`. This is the Nessie server base uri. Eg `http://localhost:19120/api/v1`.\n+* `ref` (optional). This is the Nessie branch or tag you want to work in.\n+\n+To run directly in Java this looks like:\n+\n+``` java\n+Map<String, String> options = new HashMap<>();\n+options.put(\"warehouse\", \"/path/to/warehouse\");\n+options.put(\"ref\", \"main\");\n+options.put(\"uri\", \"https://localhost:19120/api/v1\");\n+Catalog nessieCatalog = CatalogUtil.loadCatalog(\"org.apache.iceberg.nessie.NessieCatalog\", \"nessie\", hadoopConfig, options);\n+```\n+\n+and in Spark:\n+\n+``` java\n+conf.set(\"spark.sql.catalog.nessie.warehouse\", \"/path/to/warehouse\");\n+conf.set(\"spark.sql.catalog.nessie.uri\", \"http://localhost:19120/api/v1\")\n+conf.set(\"spark.sql.catalog.nessie.ref\", \"main\")\n+conf.set(\"spark.sql.catalog.nessie.catalog-impl\", \"org.apache.iceberg.nessie.NessieCatalog\")\n+conf.set(\"spark.sql.catalog.nessie\", \"org.apache.iceberg.spark.SparkCatalog\")\n+```\n+\n+There is nothing special above about the `nessie` name. A spark catalog can have any name, the important parts are the \n+settings for the `catalog-impl` and the required config to start Nessie correctly.\n+Once you have a Nessie catalog you have access to your entire Nessie repo. You can then perform create/delete/merge\n+operations on branches and perform commits on branches. Each iceberg table in a Nessie Catalog is identified by an\n+arbitrary length namespace and table name (eg `data.base.name.table`). These namespaces are implicit and don't need to\n+be created separately. Any transaction on a Nessie enabled Iceberg table is a single commit in Nessie. Nessie commits\n+can encompass an arbitrary number of actions on an arbitrary number of tables, however in Iceberg this will be limited\n+to the set of single table transactions currently available.\n+\n+Further operations such as merges, viewing the commit log or diffs are performed by direct interaction with the\n+`NessieClient` in java or by using the python client or cli. See [Nessie CLI](https://projectnessie.org/tools/cli/) for\n+more details on the CLI and [Spark Guide](https://projectnessie.org/tools/spark/) for a more complete description of \n+Nessie functionality.\n+\n+## Nessie and Iceberg\n+\n+For most cases Nessie acts just like any other Catalog for Iceberg: providing a logical organization of a set of tables\n+and providing atomicity to transactions. However using Nessie opens up other interesting possibilities. When using Nessie with \n+iceberg every iceberg transaction becomes a nessie commit. This history can be listed, merged or cherry-picked across branches.\n+\n+### Loosely coupled transactions\n+\n+By creating a branch and performing a set of operations on that branch you can approximate a multi-table transaction.\n+A sequence of commits can be performed on the newly created branch and then merged back into the main branch atomically.\n+This gives the appearance of a series of connected changes being exposed to the main branch simultaneously. While downstream\n+consumers will see multiple transactions appear at once this isn't a true multi-table transaction on the database. It is \n+effectively a fast-forward merge of multiple commits (in git language) and each operation from the branch is its own distinct\n+transaction and commit. This is different from a real multi-table transaction where all changes would be in the same commit.\n+This does allow multiple applications to take part in modifying a branch and for this distributed set of transactions to be \n+exposed to the downstream users simultaneously.\n+\n+ \n+### Experimentation\n+\n+Changes to a table can be tested in a branch before merging back into main. This is particularly useful when performing\n+large changes like schema evolution or partition evolution. A partition evolution could be performed in a branch and you\n+would be able to test out the change (eg performance benchmarks) before merging it. This provides great flexibility in\n+performing on-line table modifications and testing without interrupting downstream use cases. If the changes are\n+incorrect or not performant the branch can be dropped without being merged.\n+\n+### Further use cases\n+\n+Please see the [Nessie Documentation](https://projectnessie.org/features/) for further descriptions of \n+Nessie features.\n+\n+!!! Warning\n+    Regular table maintenance in Iceberg is complicated when using nessie. Please consult\n+    [Management Services](https://projectnessie.org/features/management/) before performing any \n+    [table maintenance](../maintenance).\n+\n+## Example \n+\n+Please see [Nessie Iceberg Demo](https://github.com/projectnessie/nessie/blob/main/python/demo/nessie-iceberg-demo.ipynb) \n+for a complete example of Nessie and Iceberg in action together.\n+\n+## Future Improvements\n+\n+* Nessie SQL extensions to manage the Nessie repo from Spark SQL\n+* Iceberg multi-table transactions. Changes to multiple Iceberg tables in the same transaction, isolation levels etc"
  },
  {
    "sha": "573452fbcd71f8238433d82610619f9787711be2",
    "filename": "site/mkdocs.yml",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/apache/iceberg/blob/09b256c4cedc9091711348cf2a70b3c1eee715d1/site/mkdocs.yml",
    "raw_url": "https://github.com/apache/iceberg/raw/09b256c4cedc9091711348cf2a70b3c1eee715d1/site/mkdocs.yml",
    "contents_url": "https://api.github.com/repos/apache/iceberg/contents/site/mkdocs.yml?ref=09b256c4cedc9091711348cf2a70b3c1eee715d1",
    "patch": "@@ -69,6 +69,7 @@ nav:\n   - Hive: hive.md\n   - Integrations:\n     - AWS: aws.md\n+    - Nessie: nessie.md\n   - API:\n     - Javadoc: /javadoc/\n     - Java API intro: api.md"
  }
]
