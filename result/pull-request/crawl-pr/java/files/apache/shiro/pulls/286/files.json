[
  {
    "sha": "a42d4a7df4c5a67e5db3dcbb41b0b4cad8711510",
    "filename": "config/core/src/main/java/org/apache/shiro/config/Ini.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/apache/shiro/blob/00591e4e073f84cc50f49aa25bde555dfb3a7f5e/config/core/src/main/java/org/apache/shiro/config/Ini.java",
    "raw_url": "https://github.com/apache/shiro/raw/00591e4e073f84cc50f49aa25bde555dfb3a7f5e/config/core/src/main/java/org/apache/shiro/config/Ini.java",
    "contents_url": "https://api.github.com/repos/apache/shiro/contents/config/core/src/main/java/org/apache/shiro/config/Ini.java?ref=00591e4e073f84cc50f49aa25bde555dfb3a7f5e",
    "patch": "@@ -579,7 +579,7 @@ private static boolean isCharEscaped(CharSequence s, int index) {\n                 char c = line.charAt(i);\n \n                 if (buildingKey) {\n-                    if (isKeyValueSeparatorChar(c) && !isCharEscaped(line, i)) {\n+                    if (isKeyValueSeparatorChar(c) && !isCharEscaped(line, i) && !isCharEscaped(line, i-1)) {\n                         buildingKey = false;//now start building the value\n                     } else if (!isCharEscaped(line, i)){\n                         keyBuffer.append(c);"
  },
  {
    "sha": "bfd688285ede2164d328ce3b8fd6d93b2009b7b8",
    "filename": "config/core/src/test/groovy/org/apache/shiro/config/IniTest.groovy",
    "status": "modified",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/apache/shiro/blob/00591e4e073f84cc50f49aa25bde555dfb3a7f5e/config/core/src/test/groovy/org/apache/shiro/config/IniTest.groovy",
    "raw_url": "https://github.com/apache/shiro/raw/00591e4e073f84cc50f49aa25bde555dfb3a7f5e/config/core/src/test/groovy/org/apache/shiro/config/IniTest.groovy",
    "contents_url": "https://api.github.com/repos/apache/shiro/contents/config/core/src/test/groovy/org/apache/shiro/config/IniTest.groovy?ref=00591e4e073f84cc50f49aa25bde555dfb3a7f5e",
    "patch": "@@ -159,6 +159,11 @@ public class IniTest {\n         kv = Ini.Section.splitKeyValue(test);\n         assertEquals(\"Truth\", kv[0]);\n         assertEquals(\"\\\\ Beauty\\\\\", kv[1]);\n+\n+        test = \"cn\\\\=TheSpecial_GroupName,ou\\\\=groups,dc\\\\=example,dc\\\\=com = *:*\"\n+        kv = Ini.Section.splitKeyValue(test)\n+        assertEquals(\"cn=TheSpecial_GroupName,ou=groups,dc=example,dc=com\", kv[0])\n+        assertEquals(\"*:*\", kv[1])\n     }\n \n     /**"
  }
]
