[
  {
    "sha": "3b7cce63f3280a10bc95168ab0317aebfd80f5cf",
    "filename": "ci/scripts/execute_redis_tests.sh",
    "status": "modified",
    "additions": 5,
    "deletions": 5,
    "changes": 10,
    "blob_url": "https://github.com/apache/geode/blob/5717105f030eb8077c95bff18b5024415b8f7282/ci/scripts/execute_redis_tests.sh",
    "raw_url": "https://github.com/apache/geode/raw/5717105f030eb8077c95bff18b5024415b8f7282/ci/scripts/execute_redis_tests.sh",
    "contents_url": "https://api.github.com/repos/apache/geode/contents/ci/scripts/execute_redis_tests.sh?ref=5717105f030eb8077c95bff18b5024415b8f7282",
    "patch": "@@ -33,9 +33,9 @@ export JAVA_HOME=${JAVA_TEST_PATH}\n ../geode-assembly/build/install/apache-geode/bin/gfsh start server \\\n   --J=-Denable-redis-unsupported-commands=true \\\n   --name=server1 \\\n-  --redis-port=6380 \\\n-  --redis-bind-address=127.0.0.1 \\\n-  --redis-password=foobar\n+  --compatible-with-redis-port=6380 \\\n+  --compatible-with-redis-bind-address=127.0.0.1 \\\n+  --compatible-with-redis-password=foobar\n \n failCount=0\n \n@@ -48,8 +48,8 @@ failCount=0\n   --J=-Denable-redis-unsupported-commands=true \\\n   --name=server2 \\\n   --server-port=0 \\\n-  --redis-port=6379 \\\n-  --redis-bind-address=127.0.0.1\n+  --compatible-with-redis-port=6379 \\\n+  --compatible-with-redis-bind-address=127.0.0.1\n \n ./runtest --host 127.0.0.1 --port 6379 --single unit/type/set --single unit/expire \\\n --single unit/type/hash --single unit/type/string \\"
  },
  {
    "sha": "78d3aa53806aa34efbf27fa18ab1911b4a66c879",
    "filename": "geode-book/master_middleman/source/subnavs/geode-subnav.erb",
    "status": "modified",
    "additions": 7,
    "deletions": 7,
    "changes": 14,
    "blob_url": "https://github.com/apache/geode/blob/5717105f030eb8077c95bff18b5024415b8f7282/geode-book/master_middleman/source/subnavs/geode-subnav.erb",
    "raw_url": "https://github.com/apache/geode/raw/5717105f030eb8077c95bff18b5024415b8f7282/geode-book/master_middleman/source/subnavs/geode-subnav.erb",
    "contents_url": "https://api.github.com/repos/apache/geode/contents/geode-book/master_middleman/source/subnavs/geode-subnav.erb?ref=5717105f030eb8077c95bff18b5024415b8f7282",
    "patch": "@@ -2189,25 +2189,25 @@ gfsh</a>\n                         </ul>\n                     </li>\n                     <li class=\"has_submenu\">\n-                        <a href=\"/docs/guide/<%=vars.product_version_nodot%>/tools_modules/redis_api_for_geode.html\">Redis API for <%=vars.product_name%></a>\n+                        <a href=\"/docs/guide/<%=vars.product_version_nodot%>/tools_modules/geode_apis_compatible_with_redis.html\"><%=vars.product_name%> APIs compatible with Redis</a>\n                         <ul>\n                             <li>\n-                                <a href=\"/docs/guide/<%=vars.product_version_nodot%>/tools_modules/redis_api_for_geode.html#using-the-api\">Using the Redis API for <%=vars.product_name%></a>\n+                                <a href=\"/docs/guide/<%=vars.product_version_nodot%>/tools_modules/geode_apis_compatible_with_redis.html#using-the-api\">Using <%=vars.product_name%> APIs Compatible with Redis</a>\n                             </li>\n                             <li>\n-                                <a href=\"/docs/guide/<%=vars.product_version_nodot%>/tools_modules/redis_api_for_geode.html#included-commands\">Included Redis Commands</a>\n+                                <a href=\"/docs/guide/<%=vars.product_version_nodot%>/tools_modules/geode_apis_compatible_with_redis.html#supported-commands\">Supported Redis Commands</a>\n                             </li>\n                             <li>\n-                                <a href=\"/docs/guide/<%=vars.product_version_nodot%>/tools_modules/redis_api_for_geode.html#advantages-over-redis\">Advantages of <%=vars.product_name%> over Redis</a>\n+                                <a href=\"/docs/guide/<%=vars.product_version_nodot%>/tools_modules/geode_apis_compatible_with_redis#advantages-over-redis\">Advantages of <%=vars.product_name%> over Redis</a>\n                             </li>\n                             <li>\n-                                <a href=\"/docs/guide/<%=vars.product_version_nodot%>/tools_modules/redis_api_for_geode.html#expiration-accuracy\">Expiration Accuracy</a>\n+                                <a href=\"/docs/guide/<%=vars.product_version_nodot%>/tools_modules/geode_apis_compatible_with_redis.html#expiration-accuracy\">Expiration Accuracy</a>\n                             </li>\n                              <li>\n-                              <a href=\"/docs/guide/<%=vars.product_version_nodot%>/tools_modules/redis_api_for_geode.html#high-availability-model\">High Availability Model</a>\n+                              <a href=\"/docs/guide/<%=vars.product_version_nodot%>/tools_modules/geode_apis_compatible_with_redis.html#high-availability-model\">High Availability Model</a>\n                             </li>\n                             <li>\n-                              <a href=\"/docs/guide/<%=vars.product_version_nodot%>/tools_modules/redis_api_for_geode.html#loss-of-connections\">Loss of Connections</a>\n+                              <a href=\"/docs/guide/<%=vars.product_version_nodot%>/tools_modules/geode_apis_compatible_with_redis.html#loss-of-connections\">Loss of Connections</a>\n                             </li>\n                         </ul>\n                     </li>"
  },
  {
    "sha": "79697942d81c8b45a80414553bd93ddf933977f0",
    "filename": "geode-core/src/main/java/org/apache/geode/distributed/ConfigurationProperties.java",
    "status": "modified",
    "additions": 20,
    "deletions": 23,
    "changes": 43,
    "blob_url": "https://github.com/apache/geode/blob/5717105f030eb8077c95bff18b5024415b8f7282/geode-core/src/main/java/org/apache/geode/distributed/ConfigurationProperties.java",
    "raw_url": "https://github.com/apache/geode/raw/5717105f030eb8077c95bff18b5024415b8f7282/geode-core/src/main/java/org/apache/geode/distributed/ConfigurationProperties.java",
    "contents_url": "https://api.github.com/repos/apache/geode/contents/geode-core/src/main/java/org/apache/geode/distributed/ConfigurationProperties.java?ref=5717105f030eb8077c95bff18b5024415b8f7282",
    "patch": "@@ -1921,46 +1921,43 @@\n    */\n   String OFF_HEAP_MEMORY_SIZE = \"off-heap-memory-size\";\n   /**\n-   * The static String definition of the <i>\"redis-bind-address\"</i> property <a\n-   * name=\"redis-bind-address\"/a>\n+   * The static String definition of the <i>\"compatible-with-redis-bind-address\"</i> property <a\n+   * name=\"compatible-with-redis-bind-address\"/a>\n    * </p>\n-   * <U>Description</U>: Specifies the address on which the Redis API for Geode is listening. If set\n-   * to the empty string or this property is not specified, the server listens on all local\n-   * addresses.\n+   * <U>Description</U>: Specifies the address on which Geode APIs compatible with Redis is\n+   * listening. If set to the empty string or this property is not specified, the server listens on\n+   * all local addresses.\n    * </p>\n    * <U>Default</U>: \"\"\n    */\n-  String REDIS_BIND_ADDRESS = \"redis-bind-address\";\n+  String REDIS_BIND_ADDRESS = \"compatible-with-redis-bind-address\";\n   /**\n-   * The static String definition of the <i>\"redis-enabled\"</i> property <a\n-   * name=\"redis-enabled\"/a>\n+   * The static String definition of the <i>\"compatible-with-redis-enabled\"</i> property <a\n+   * name=\"compatible-with-redis-enabled\"/a>\n    * </p>\n-   * <U>Description</U>: When the default value of false, the Redis API for Geode is not available.\n-   * Set to true to enable the Redis API for Geode.</td>\n+   * <U>Description</U>: When the default value of false, the Geode APIs compatible with Redis is\n+   * not available.\n+   * Set to true to enable the Geode APIs compatible with Redis.</td>\n    * </p>\n    * <U>Default</U>: false\n-   * <td>redis-enabled</td>\n-   * <td>When the default value of false, the Redis API for <%=vars.product_name%> is not available.\n-   * Set\n-   * to true to enable the Redis API for <%=vars.product_name%>.</td>\n-   * <td>S</td>\n-   * <td>false</td>\n-   * </tr>\n+   * When the default value of false, the Geode APIs compatible with Redis is not available.\n+   * Set to true to enable the Geode APIs compatible with Redis.\n    * </p>\n    */\n-  String REDIS_ENABLED = \"redis-enabled\";\n+  String REDIS_ENABLED = \"compatible-with-redis-enabled\";\n   /**\n-   * The static String definition of the <i>\"redis-password\"</i> property <a\n-   * name=\"redis-password\"/a>\n+   * The static String definition of the <i>\"compatible-with-redis-password\"</i> property <a\n+   * name=\"compatible-with-redis-password\"/a>\n    * </p>\n    * <U>Description</U>: Specifies the password that the server uses when a client attempts to\n    * authenticate.\n    * </p>\n    * <U>Default</U>: no password set\n    */\n-  String REDIS_PASSWORD = \"redis-password\";\n+  String REDIS_PASSWORD = \"compatible-with-redis-password\";\n   /**\n-   * The static String definition of the <i>\"redis-port\"</i> property <a name=\"redis-port\"/a>\n+   * The static String definition of the <i>\"compatible-with-redis-port\"</i> property <a\n+   * name=\"compatible-with-redis-port\"/a>\n    * </p>\n    * <U>Description</U>: Specifies the port on which the server listens for Redis API for Geode\n    * connections. A value of 0 selects a random port.</td>\n@@ -1969,7 +1966,7 @@\n    * </p>\n    * <U>Allowed values</U>: 0..65535\n    */\n-  String REDIS_PORT = \"redis-port\";\n+  String REDIS_PORT = \"compatible-with-redis-port\";\n   /**\n    * The static String definition of the <i>\"lock-memory\"</i> property <a name=\"lock-memory\"/a>\n    * </p>"
  },
  {
    "sha": "c5e19d360319d2517c7f6d1230766de251418ba7",
    "filename": "geode-core/src/main/java/org/apache/geode/distributed/internal/AbstractDistributionConfig.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/apache/geode/blob/5717105f030eb8077c95bff18b5024415b8f7282/geode-core/src/main/java/org/apache/geode/distributed/internal/AbstractDistributionConfig.java",
    "raw_url": "https://github.com/apache/geode/raw/5717105f030eb8077c95bff18b5024415b8f7282/geode-core/src/main/java/org/apache/geode/distributed/internal/AbstractDistributionConfig.java",
    "contents_url": "https://api.github.com/repos/apache/geode/contents/geode-core/src/main/java/org/apache/geode/distributed/internal/AbstractDistributionConfig.java?ref=5717105f030eb8077c95bff18b5024415b8f7282",
    "patch": "@@ -673,7 +673,7 @@ protected String checkRedisBindAddress(String value) {\n     if (value != null && value.length() > 0 && !LocalHostUtil.isLocalHost(value)) {\n       throw new IllegalArgumentException(\n           String.format(\n-              \"The redis-bind-address %s is not a valid address for this machine.  These are the valid addresses for this machine: %s\",\n+              \"The compatible-with-redis-bind-address %s is not a valid address for this machine.  These are the valid addresses for this machine: %s\",\n               value, LocalHostUtil.getMyAddresses()));\n     }\n     return value;"
  },
  {
    "sha": "e0e4b8a7862e2384009623cc0c7c914d03a13276",
    "filename": "geode-core/src/test/resources/org/apache/geode/management/internal/cli/commands/golden-help-offline.properties",
    "status": "modified",
    "additions": 6,
    "deletions": 6,
    "changes": 12,
    "blob_url": "https://github.com/apache/geode/blob/5717105f030eb8077c95bff18b5024415b8f7282/geode-core/src/test/resources/org/apache/geode/management/internal/cli/commands/golden-help-offline.properties",
    "raw_url": "https://github.com/apache/geode/raw/5717105f030eb8077c95bff18b5024415b8f7282/geode-core/src/test/resources/org/apache/geode/management/internal/cli/commands/golden-help-offline.properties",
    "contents_url": "https://api.github.com/repos/apache/geode/contents/geode-core/src/test/resources/org/apache/geode/management/internal/cli/commands/golden-help-offline.properties?ref=5717105f030eb8077c95bff18b5024415b8f7282",
    "patch": "@@ -2572,7 +2572,7 @@ SYNTAX\\n\\\n \\ \\ \\ \\ [--lock-memory(=value)?] [--log-level=value] [--max-connections=value] [--max-heap=value]\\n\\\n \\ \\ \\ \\ [--max-message-count=value] [--max-threads=value] [--mcast-address=value] [--mcast-port=value]\\n\\\n \\ \\ \\ \\ [--memcached-port=value] [--memcached-protocol=value] [--memcached-bind-address=value]\\n\\\n-\\ \\ \\ \\ [--redis-port=value] [--redis-bind-address=value] [--redis-password=value]\\n\\\n+\\ \\ \\ \\ [--compatible-with-redis-port=value] [--compatible-with-redis-bind-address=value] [--compatible-with-redis-password=value]\\n\\\n \\ \\ \\ \\ [--message-time-to-live=value] [--off-heap-memory-size=value] [--properties-file=value]\\n\\\n \\ \\ \\ \\ [--rebalance(=value)?] [--security-properties-file=value] [--server-bind-address=value]\\n\\\n \\ \\ \\ \\ [--server-port=value] [--socket-buffer-size=value] [--spring-xml-location=value]\\n\\\n@@ -2719,14 +2719,14 @@ PARAMETERS\\n\\\n \\ \\ \\ \\ \\ \\ \\ \\ Sets the IP address the Geode memcached service listens on for memcached clients. The\\n\\\n \\ \\ \\ \\ \\ \\ \\ \\ default is to bind to the first non-loopback address for this machine.\\n\\\n \\ \\ \\ \\ \\ \\ \\ \\ Required: false\\n\\\n-\\ \\ \\ \\ redis-port\\n\\\n-\\ \\ \\ \\ \\ \\ \\ \\ Sets the port that the Geode Redis service listens on for Redis clients.\\n\\\n+\\ \\ \\ \\ compatible-with-redis-port\\n\\\n+\\ \\ \\ \\ \\ \\ \\ \\ Sets the port that the Geode APIs compatible with Redis service listens on for Redis clients.\\n\\\n \\ \\ \\ \\ \\ \\ \\ \\ Required: false\\n\\\n-\\ \\ \\ \\ redis-bind-address\\n\\\n-\\ \\ \\ \\ \\ \\ \\ \\ Sets the IP address the Geode Redis service listens on for Redis clients. The default is to\\n\\\n+\\ \\ \\ \\ compatible-with-redis-bind-address\\n\\\n+\\ \\ \\ \\ \\ \\ \\ \\ Sets the IP address the Geode APIs compatible with Redis service listens on for Redis clients. The default is to\\n\\\n \\ \\ \\ \\ \\ \\ \\ \\ bind to the first non-loopback address for this machine.\\n\\\n \\ \\ \\ \\ \\ \\ \\ \\ Required: false\\n\\\n-\\ \\ \\ \\ redis-password\\n\\\n+\\ \\ \\ \\ compatible-with-redis-password\\n\\\n \\ \\ \\ \\ \\ \\ \\ \\ Sets the authentication password for GeodeRedisServer\\n\\\n \\ \\ \\ \\ \\ \\ \\ \\ Required: false\\n\\\n \\ \\ \\ \\ message-time-to-live\\n\\"
  },
  {
    "sha": "5d75a9808974508611dbfa99043588c1067e1171",
    "filename": "geode-docs/images/geode_apis_compatible_with_redis.png",
    "status": "renamed",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/apache/geode/blob/5717105f030eb8077c95bff18b5024415b8f7282/geode-docs/images/geode_apis_compatible_with_redis.png",
    "raw_url": "https://github.com/apache/geode/raw/5717105f030eb8077c95bff18b5024415b8f7282/geode-docs/images/geode_apis_compatible_with_redis.png",
    "contents_url": "https://api.github.com/repos/apache/geode/contents/geode-docs/images/geode_apis_compatible_with_redis.png?ref=5717105f030eb8077c95bff18b5024415b8f7282",
    "previous_filename": "geode-docs/images/redis_api_for_geode.png"
  },
  {
    "sha": "bbdedf5ac7274bdccddbc040036f7cea8ba685c3",
    "filename": "geode-docs/reference/topics/gemfire_properties.html.md.erb",
    "status": "modified",
    "additions": 8,
    "deletions": 8,
    "changes": 16,
    "blob_url": "https://github.com/apache/geode/blob/5717105f030eb8077c95bff18b5024415b8f7282/geode-docs/reference/topics/gemfire_properties.html.md.erb",
    "raw_url": "https://github.com/apache/geode/raw/5717105f030eb8077c95bff18b5024415b8f7282/geode-docs/reference/topics/gemfire_properties.html.md.erb",
    "contents_url": "https://api.github.com/repos/apache/geode/contents/geode-docs/reference/topics/gemfire_properties.html.md.erb?ref=5717105f030eb8077c95bff18b5024415b8f7282",
    "patch": "@@ -487,28 +487,28 @@ off-heap-memory-size=120g</code></pre></td>\n <td><em>not set</em></td>\n </tr>\n <tr>\n-<td>redis-bind-address</td>\n-<td>Specifies the address on which the Redis API for <%=vars.product_name%> is listening. If set to the empty string or this property is not\n+<td>compatible-with-redis-bind-address</td>\n+<td>Specifies the address on which the <%=vars.product_name%> APIs compatible with Redis is listening. If set to the empty string or this property is not\n specified, the server listens on all local addresses.\n <td>S</td>\n <td><code>\"\"</code></td>\n </tr>\n <tr>\n-<td>redis-enabled</td>\n-<td>When the default value of false, the Redis API for <%=vars.product_name%> is not available.  Set\n-to true to enable the Redis API for <%=vars.product_name%>.</td>\n+<td>compatible-with-redis-enabled</td>\n+<td>When the default value of false, the <%=vars.product_name%> APIs compatible with Redis are not available.  Set\n+to true to enable the <%=vars.product_name%> APIs compatible with Redis.</td>\n <td>S</td>\n <td>false</td>\n </tr>\n <tr>\n-<td>redis-password</td>\n+<td>compatible-with-redis-password</td>\n <td>Specifies the password that the server uses when a client attempts to authenticate.</td>\n <td>S</td>\n <td>no password set</td>\n </tr>\n <tr>\n-<td>redis-port</td>\n-<td>Specifies the port on which the server listens for Redis API for <%=vars.product_name%> connections. A value of 0 selects a random port.</td>\n+<td>compatible-with-redis-port</td>\n+<td>Specifies the port on which the server listens for <%=vars.product_name%> APIs compatible with Redis connections. A value of 0 selects a random port.</td>\n <td>S</td>\n <td>6379</td>\n </tr>"
  },
  {
    "sha": "f3df49cbaaa0ea06632bd26d711cf489d1bf3766",
    "filename": "geode-docs/tools_modules/book_intro.html.md.erb",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/apache/geode/blob/5717105f030eb8077c95bff18b5024415b8f7282/geode-docs/tools_modules/book_intro.html.md.erb",
    "raw_url": "https://github.com/apache/geode/raw/5717105f030eb8077c95bff18b5024415b8f7282/geode-docs/tools_modules/book_intro.html.md.erb",
    "contents_url": "https://api.github.com/repos/apache/geode/contents/geode-docs/tools_modules/book_intro.html.md.erb?ref=5717105f030eb8077c95bff18b5024415b8f7282",
    "patch": "@@ -39,9 +39,9 @@ limitations under the License.\n \n     <%=vars.product_name%> Pulse is a Web Application that provides a graphical dashboard for monitoring vital, real-time health and performance of <%=vars.product_name%> clusters, members, and regions.\n \n--   **[Redis API for <%=vars.product_name%>](redis_api_for_geode.html)**\n+-   **[<%=vars.product_name%> APIs compatible with Redis](geode_apis_compatible_with_redis.html)**\n \n-    The Redis API for <%=vars.product_name%> allows <%=vars.product_name%> to function as a drop-in replacement for a Redis data store, letting Redis applications take advantage of <%=vars.product_name%>’s scaling capabilities without changing their client code. Redis clients connect to a <%=vars.product_name%> server in the same way they connect to a Redis server, using a hostname and a port number.\n+    The <%=vars.product_name%> APIs compatible with Redis allows <%=vars.product_name%> to function as a drop-in replacement for a Redis data store, letting Redis applications take advantage of <%=vars.product_name%>’s scaling capabilities without changing their client code. Redis clients connect to a <%=vars.product_name%> server in the same way they connect to a Redis server, using a hostname and a port number.\n \n -   **[Apache Lucene&reg; Integration](lucene_integration.html)**\n "
  },
  {
    "sha": "3cd49f95ba5a3a0cb6e7709d13f8290255dadb3c",
    "filename": "geode-docs/tools_modules/geode_apis_compatible_with_redis.html.md.erb",
    "status": "renamed",
    "additions": 23,
    "deletions": 24,
    "changes": 47,
    "blob_url": "https://github.com/apache/geode/blob/5717105f030eb8077c95bff18b5024415b8f7282/geode-docs/tools_modules/geode_apis_compatible_with_redis.html.md.erb",
    "raw_url": "https://github.com/apache/geode/raw/5717105f030eb8077c95bff18b5024415b8f7282/geode-docs/tools_modules/geode_apis_compatible_with_redis.html.md.erb",
    "contents_url": "https://api.github.com/repos/apache/geode/contents/geode-docs/tools_modules/geode_apis_compatible_with_redis.html.md.erb?ref=5717105f030eb8077c95bff18b5024415b8f7282",
    "patch": "@@ -1,4 +1,4 @@\n-<% set_title(\"Redis API for\", product_name) %>\n+<% set_title(product_name, \"APIs Compatible with Redis\") %>\n \n <!--\n Licensed to the Apache Software Foundation (ASF) under one or more\n@@ -17,58 +17,57 @@ See the License for the specific language governing permissions and\n limitations under the License.\n -->\n \n-The Redis API for <%=vars.product_name%> allows <%=vars.product_name%> to function as a drop-in replacement for a\n+The <%=vars.product_name%> APIs compatible with Redis allows <%=vars.product_name%> to function as a drop-in replacement for a\n highly-available Redis data store, letting Redis applications take advantage of\n <%=vars.product_name%>’s scaling capabilities without changing their client code. Redis clients connect to a <%=vars.product_name%>\n server in the same way they connect to a Redis server, using a hostname and a port number, with\n optional password authentication.\n \n-<img src=\"../images/redis_api_for_geode.png\" class=\"image\" />\n+<img src=\"../images/geode_apis_compatible_with_redis.png\" class=\"image\" />\n \n-## <a id=\"using-the-api\" class=\"no-quick-link\"></a>Using the Redis API for <%=vars.product_name%>\n+## <a id=\"using-the-api\" class=\"no-quick-link\"></a>Using the <%=vars.product_name%> API compatible with Redis\n \n-The <%=vars.product_name%> cluster must have at least one server that is set up to handle the incoming Redis\n-commands.\n+The <%=vars.product_name%> cluster must have at least one server that is set up to handle the incoming Redis commands.\n \n Use gfsh to start at least one server with a command of the form:\n \n ```pre\n start server \\\n   --name=<serverName> \\\n   --locators=<locatorPort> \\\n-  --redis-port=<redisPort> \\\n-  --redis-bind-address=<redisBindAddress> \\\n-  --redis-password=<redisPassword>\n+  --compatible-with-redis-port=<compatibleWithRedisPort> \\\n+  --compatible-with-redis-bind-address=<compatibleWithRedisBindAddress> \\\n+  --compatible-with-redis-password=<compatibleWithRedisPassword>\n ```\n \n-If any of the options `redis-bind-address`, `redis-password`, or `redis-port` are included, a compatible-with-Redis Geode server will be started.\n+If any of the options `compatible-with-redis-bind-address`, `compatible-with-redis-password`, or `compatible-with-redis-port` are included, a <%=vars.product_name%> server compatible with Redis will be started.\n \n Replace `<serverName>` with the name of your server.\n \n Replace `<locatorPort>` with your locator port.\n \n-Replace `<redisPort>` with the port that the <%=vars.product_name%> server listens on for Redis commands. The typical port used with a Redis cluster is 6379.\n+Replace `<compatibleWithRedisPort>` with the port that the <%=vars.product_name%> server listens on for Redis commands. The typical port used with a cluster compatible with Redis is 6379.\n \n-Replace `<redisBindAddress>` with the address of the server host.\n+Replace `<compatibleWithRedisBindAddress>` with the address of the server host.\n \n-Replace `<redisPassword>` with the password clients use to authenticate.\n+Replace `<compatibleWithWithRedisPassword>` with the password clients use to authenticate.\n \n To confirm the server is listening, run:\n \n ``` pre\n-redis-cli -h <redisBindAddress> -p <redisPort> -a <redisPassword> ping\n+redis-cli -h <compatibleWithRedisBindAddress> -p <compatibleWithRedisPort> -a <compatibleWithRedisPassword> ping\n ```\n \n-Replace `<redisBindAddress>`,`<redisPort>`, and `<redisPassword>` with the same values as the server.\n+Replace `<compatibleWithRedisBindAddress>`,`<compatibleWithRedisPort>`, and `<compatibleWithRedisPassword>` with the same values as the server.\n \n If the server is functioning properly, you should see a response of `PONG`.\n \n-## <a id=\"included-commands\" class=\"no-quick-link\"></a>Included Redis Commands\n+## <a id=\"supported-commands\" class=\"no-quick-link\"></a>Supported Redis Commands\n \n-The Redis API for <%=vars.product_name%> currently supports the following commands.  See [Redis commands](https://redis.io/commands/) for a complete list of and more information on Redis commands.\n+The <%=vars.product_name%> APIs compatible with Redis currently supports the following Redis commands.  See [Redis commands](https://redis.io/commands/) for a complete list of and more information on Redis commands.\n \n **Note**: These commands are supported for Redis 5.\n-**Note**: SLOWLOG is implemented as a NoOp for compatibility with DataDog.\n+**Note**: SLOWLOG is implemented as a NoOp for compatibility with some monitoring tools.\n \n -   **Connection**: AUTH, PING, QUIT\n -   **Hashes**: HDEL, HEXISTS, HGET, HGETALL, HINCRBY, HINCRBYFLOAT, HKEYS, HLEN, HMGET, HMSET, HSCAN, HSET, HSETNX, HSTRLEN, HVALS\n@@ -79,7 +78,7 @@ The Redis API for <%=vars.product_name%> currently supports the following comman\n -   **Sets**: SADD, SMEMBERS, SREM\n -   **Strings**: APPEND, DECR, GET, GETRANGE, INCR, INCRBY, INCRBYFLOAT, MGET, SET, SETNX, STRLEN\n \n-The following Redis API for <%=vars.product_name%> commands are **unsupported**. Unsupported\n+The following Redis commands are **unsupported** by <%=vars.produce_name%>'s APIs compatible with Redis. Unsupported\n commands are available to use, but have not been fully tested. There is no guarantee they will work\n exactly as expected.\n \n@@ -91,8 +90,8 @@ exactly as expected.\n -   **Strings**: BITCOUNT, BITOP, BITPOS, DECRBY, GETBIT, GETSET, MSET, MSETNX, PSETEX, SETBIT, SETEX, SETRANGE\n \n \n-If you already have some Geode servers running with Redis enabled, you can execute the following\n-command with gfsh to enable unsupported commands:\n+If you already have some Geode servers running that are compatible with Redis, you can execute the\n+following command with gfsh to enable unsupported commands:\n \n ```pre\n redis --enable-unsupported-commands\n@@ -105,9 +104,9 @@ start server \\\n   --J=-Denable-redis-unsupported-commands=true \\\n   --name=<serverName> \\\n   --locators=<locatorPort> \\\n-  --redis-port=<redisPort> \\\n-  --redis-bind-address=<redisBindAddress> \\\n-  --redis-password=<redisPassword>\n+  --compatible-with-redis-port=<compatibleWithRedisPort> \\\n+  --compatible-with-redis-bind-address=<compatibleWithRedisBindAddress> \\\n+  --compatible-with-redis-password=<compatibleWithRedisPassword>\n ```\n \n Commands not listed above are **not implemented**.",
    "previous_filename": "geode-docs/tools_modules/redis_api_for_geode.html.md.erb"
  },
  {
    "sha": "288f390e003435bd5480b49a261647cfd82f0b53",
    "filename": "geode-gfsh/src/main/java/org/apache/geode/management/internal/cli/commands/StartServerCommand.java",
    "status": "modified",
    "additions": 3,
    "deletions": 2,
    "changes": 5,
    "blob_url": "https://github.com/apache/geode/blob/5717105f030eb8077c95bff18b5024415b8f7282/geode-gfsh/src/main/java/org/apache/geode/management/internal/cli/commands/StartServerCommand.java",
    "raw_url": "https://github.com/apache/geode/raw/5717105f030eb8077c95bff18b5024415b8f7282/geode-gfsh/src/main/java/org/apache/geode/management/internal/cli/commands/StartServerCommand.java",
    "contents_url": "https://api.github.com/repos/apache/geode/contents/geode-gfsh/src/main/java/org/apache/geode/management/internal/cli/commands/StartServerCommand.java?ref=5717105f030eb8077c95bff18b5024415b8f7282",
    "patch": "@@ -302,8 +302,9 @@ ResultModel doStartServer(String memberName, Boolean assignBuckets, String bindA\n     StartMemberUtils.setPropertyIfNotNull(gemfireProperties,\n         ConfigurationProperties.HTTP_SERVICE_BIND_ADDRESS, httpServiceBindAddress);\n \n-    // if redis-port, redis-bind-address, or redis-password are specified in the command line,\n-    // REDIS_ENABLED should be set to true\n+    // if compatible-with-redis-port, compatible-with-redis-bind-address, or\n+    // compatible-with-redis-password are specified in the command line, REDIS_ENABLED should be set\n+    // to true\n     String stringRedisPort;\n     stringRedisPort = redisPort == null ? \"\" : redisPort.toString();\n "
  },
  {
    "sha": "24aba2b643248293d088dd1e5ef2c5b2489e29d2",
    "filename": "geode-gfsh/src/test/java/org/apache/geode/management/internal/cli/util/HyphenFormatterTest.java",
    "status": "modified",
    "additions": 5,
    "deletions": 4,
    "changes": 9,
    "blob_url": "https://github.com/apache/geode/blob/5717105f030eb8077c95bff18b5024415b8f7282/geode-gfsh/src/test/java/org/apache/geode/management/internal/cli/util/HyphenFormatterTest.java",
    "raw_url": "https://github.com/apache/geode/raw/5717105f030eb8077c95bff18b5024415b8f7282/geode-gfsh/src/test/java/org/apache/geode/management/internal/cli/util/HyphenFormatterTest.java",
    "contents_url": "https://api.github.com/repos/apache/geode/contents/geode-gfsh/src/test/java/org/apache/geode/management/internal/cli/util/HyphenFormatterTest.java?ref=5717105f030eb8077c95bff18b5024415b8f7282",
    "patch": "@@ -227,10 +227,11 @@ public void optionWithMoreThanOneHyphen() {\n \n   @Test\n   public void optionWithOneHyphenAfterOneJOption() {\n-    String cmd = \"start server --name=me3 --J=-Dgemfire.jmx-manager=true --redis-port=8080\";\n+    String cmd =\n+        \"start server --name=me3 --J=-Dgemfire.jmx-manager=true --compatible-with-redis-port=8080\";\n     String formattedCmd = this.formatter.formatCommand(cmd);\n     String expected =\n-        \"start server --name=me3 --J=\\\"-Dgemfire.jmx-manager=true\\\" --redis-port=8080\";\n+        \"start server --name=me3 --J=\\\"-Dgemfire.jmx-manager=true\\\" --compatible-with-redis-port=8080\";\n     assertThat(formattedCmd).as(cmd).isEqualTo(expected);\n   }\n \n@@ -246,10 +247,10 @@ public void optionWithMoreThanOneHyphenAfterOneJOption() {\n   @Test\n   public void optionWithOneHyphenAfterTwoJOptions() {\n     String cmd =\n-        \"start server --name=me3 --J=-Dgemfire.jmx-manager=true --J=-Dgemfire.jmx-manager-start=true --redis-port=8080\";\n+        \"start server --name=me3 --J=-Dgemfire.jmx-manager=true --J=-Dgemfire.jmx-manager-start=true --compatible-with-redis-port=8080\";\n     String formattedCmd = this.formatter.formatCommand(cmd);\n     String expected =\n-        \"start server --name=me3 --J=\\\"-Dgemfire.jmx-manager=true\\\" --J=\\\"-Dgemfire.jmx-manager-start=true\\\" --redis-port=8080\";\n+        \"start server --name=me3 --J=\\\"-Dgemfire.jmx-manager=true\\\" --J=\\\"-Dgemfire.jmx-manager-start=true\\\" --compatible-with-redis-port=8080\";\n     assertThat(formattedCmd).as(cmd).isEqualTo(expected);\n   }\n "
  },
  {
    "sha": "69d2c36a09bf8d2dcd18e5bbe36f41890257f5d8",
    "filename": "geode-redis/README.md",
    "status": "modified",
    "additions": 13,
    "deletions": 13,
    "changes": 26,
    "blob_url": "https://github.com/apache/geode/blob/5717105f030eb8077c95bff18b5024415b8f7282/geode-redis/README.md",
    "raw_url": "https://github.com/apache/geode/raw/5717105f030eb8077c95bff18b5024415b8f7282/geode-redis/README.md",
    "contents_url": "https://api.github.com/repos/apache/geode/contents/geode-redis/README.md?ref=5717105f030eb8077c95bff18b5024415b8f7282",
    "patch": "@@ -1,24 +1,24 @@\n-# Redis API for Apache Geode\n+# Apache Geode APIs Compatible with Redis\n \n [Introduction](#introduction)  \n [How To Try It](#how-to-try-it)  \n [Building Apache Geode](#building-apache-geode)  \n [Starting a Geode Server with Redis Enabled](#starting-a-server)  \n-[Adding an Additional Geode Redis Server](#adding-a-server)  \n+[Adding an Additional Geode Server Compatible with Redis](#adding-a-server)  \n [Shutting Down](#shutting-down)  \n [Redis Commands](#redis-commands)\n \n \n ## <a name=\"introduction\"></a>Introduction\n \n-The Redis API for Geode allows an application to send Redis commands to Geode. This will allow users to \n+The Geode APIs compatible with Redis allows an application to send Redis commands to Geode. This will allow users to \n switch seamlessly from native Redis to Geode as a data store/caching solution. \n \n The API allows Geode to listen for and interpret incoming Redis commands on a designated port.\n \n ## <a name=\"how-to-try-it\"></a>How To Try It\n \n-The Redis API for Geode is currently in early access. We’ll build the develop branch of Apache Geode\n+The Geode APIs compatible with Redis is currently in early access. We’ll build the develop branch of Apache Geode\n and then connect the [Redis-CLI](https://redis.io/topics/quickstart) to that instance.\n \n **Note:** Currently Geode requires **Java 8 JDK** to build.\n@@ -61,7 +61,7 @@ You should now see GFSH starting up with a version of 1.14.x.-build.x\n ![screenshot of GFSH running in the terminal](gfsh.png)\n \n ### <a name=\"starting-a-server\"></a>Starting a Geode Server with Redis Enabled\n-**Note**: if you wish to run the Geode Redis API on the default Redis port (6379), make sure to stop\n+**Note**: if you wish to run the Geode APIs compatible with Redis on the default Redis port (6379), make sure to stop\n any applications running on that port before starting the Geode server, especially any native Redis\n servers.\n \n@@ -78,12 +78,12 @@ connection, the locator directs the client to one of the least loaded servers.\n \n     For example:\n     ```commandline\n-    gfsh> start server --name=redisServer1 --locators=localhost[10334] --server-port=0 --redis-port=6379\n+    gfsh> start server --name=redisServer1 --locators=localhost[10334] --server-port=0 --compatible-with-redis-port=6379\n     ```\n     * --name: A name you create for your server.\n     * --locators: This is the location of the locator you started in step 1. \n     * --server-port: The port that Geode clients connect to.\n-    * --redis-port: The port that your Redis client will connect to.\n+    * --compatible-with-redis-port: The port that your Redis client will connect to.\n \n     Your Geode instance should now be up and running (1 locator and 1 server) and ready to accept Redis \n     commands.  \n@@ -98,13 +98,13 @@ connection, the locator directs the client to one of the least loaded servers.\n     If working correctly you should now be in the redis-cli and see `127.0.0.1:6379>`.  If you run the \n     `PING` command you should receive a response of `PONG`.\n \n-### <a name=\"adding-a-server\"></a>Optional - Adding an Additional Geode Redis Server\n+### <a name=\"adding-a-server\"></a>Optional - Adding an Additional Geode server compatible with Redis\n If you’re interested in testing Geode scalability, in GFSH run the start server command again BUT \n make sure you change the `--name=` and `--redis-port=` parameters. \n \n For example: \n    ```commandLine\n-   $ start server --name=redisServer2 --locators=localhost[10334] --server-port=0 --redis-port=6380\n+   $ start server --name=redisServer2 --locators=localhost[10334] --server-port=0 --compatible-with-redis-port=6380\n    ```\n \n ### <a name=\"shutting-down\"></a>Shutting Down \n@@ -128,7 +128,7 @@ not connected>\n ```\n ### <a name=\"redis-commands\"></a>Redis Commands\n \n-The Redis API for Geode currently implements a subset of the full Redis command set. Some commands\n+The Geode APIs compatible with Redis currently implements a subset of the full Redis command set. Some commands\n are **unsupported** (see table below). Unsupported commands are available to use, but have not been\n fully tested. There is no guarantee they will work exactly as expected.\n \n@@ -148,9 +148,9 @@ start server \\\n   --J=-Denable-redis-unsupported-commands=true \\\n   --name=<serverName> \\\n   --locators=<locatorPort> \\\n-  --redis-port=<redisPort> \\\n-  --redis-bind-address=<redisBindAddress> \\\n-  --redis-password=<redisPassword>\n+  --compatible-with-redis-port=<redisPort> \\\n+  --compatible-with-redis-bind-address=<redisBindAddress> \\\n+  --compatible-with-redis-password=<redisPassword>\n ```\n \n #### <a name=\"redis-command-status\"></a>Redis Command Status [Return to top](#introduction)"
  },
  {
    "sha": "385a5a79a92208f096f2013cc3b26fd8a231a8b1",
    "filename": "geode-redis/src/acceptanceTest/java/org/apache/geode/redis/internal/executor/GeodeRedisServerStartUpAcceptanceTest.java",
    "status": "modified",
    "additions": 5,
    "deletions": 5,
    "changes": 10,
    "blob_url": "https://github.com/apache/geode/blob/5717105f030eb8077c95bff18b5024415b8f7282/geode-redis/src/acceptanceTest/java/org/apache/geode/redis/internal/executor/GeodeRedisServerStartUpAcceptanceTest.java",
    "raw_url": "https://github.com/apache/geode/raw/5717105f030eb8077c95bff18b5024415b8f7282/geode-redis/src/acceptanceTest/java/org/apache/geode/redis/internal/executor/GeodeRedisServerStartUpAcceptanceTest.java",
    "contents_url": "https://api.github.com/repos/apache/geode/contents/geode-redis/src/acceptanceTest/java/org/apache/geode/redis/internal/executor/GeodeRedisServerStartUpAcceptanceTest.java?ref=5717105f030eb8077c95bff18b5024415b8f7282",
    "patch": "@@ -43,8 +43,8 @@ public void shouldReturnErrorMessage_givenSamePortAndAddress() throws IOExceptio\n         \"start server\",\n         \"--server-port\", \"0\",\n         \"--name\", \"same-port-and-address-server\",\n-        \"--redis-bind-address\", \"localhost\",\n-        \"--redis-port\", String.valueOf(port));\n+        \"--compatible-with-redis-bind-address\", \"localhost\",\n+        \"--compatible-with-redis-port\", String.valueOf(port));\n     GfshExecution execution;\n \n     try (Socket interferingSocket = new Socket()) {\n@@ -66,7 +66,7 @@ public void shouldReturnErrorMessage_givenSamePortAndAllAddresses() throws IOExc\n         \"start server\",\n         \"--server-port\", \"0\",\n         \"--name\", \"same-port-all-addresses-server\",\n-        \"--redis-port\", String.valueOf(port));\n+        \"--compatible-with-redis-port\", String.valueOf(port));\n     GfshExecution execution;\n \n     try (Socket interferingSocket = new Socket()) {\n@@ -86,14 +86,14 @@ public void shouldReturnErrorMessage_givenInvalidBindAddress() {\n         \"start server\",\n         \"--server-port\", \"0\",\n         \"--name\", \"invalid-bind-server\",\n-        \"--redis-bind-address\", \"1.1.1.1\");\n+        \"--compatible-with-redis-bind-address\", \"1.1.1.1\");\n     GfshExecution execution;\n \n     execution = GfshScript.of(startServerCommand)\n         .expectFailure()\n         .execute(gfshRule);\n \n     assertThat(execution.getOutputText()).containsIgnoringCase(\n-        \"The redis-bind-address 1.1.1.1 is not a valid address for this machine\");\n+        \"The compatible-with-redis-bind-address 1.1.1.1 is not a valid address for this machine\");\n   }\n }"
  },
  {
    "sha": "1f4fbd7728f04b7bbb8a1236a4d31bdea016a809",
    "filename": "geode-redis/src/distributedTest/java/org/apache/geode/redis/GeodeRedisServerStartupDUnitTest.java",
    "status": "modified",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/apache/geode/blob/5717105f030eb8077c95bff18b5024415b8f7282/geode-redis/src/distributedTest/java/org/apache/geode/redis/GeodeRedisServerStartupDUnitTest.java",
    "raw_url": "https://github.com/apache/geode/raw/5717105f030eb8077c95bff18b5024415b8f7282/geode-redis/src/distributedTest/java/org/apache/geode/redis/GeodeRedisServerStartupDUnitTest.java",
    "contents_url": "https://api.github.com/repos/apache/geode/contents/geode-redis/src/distributedTest/java/org/apache/geode/redis/GeodeRedisServerStartupDUnitTest.java?ref=5717105f030eb8077c95bff18b5024415b8f7282",
    "patch": "@@ -219,14 +219,14 @@ public void startupFailsGivenIllegalPort() {\n         .withProperty(REDIS_PORT, \"-1\")\n         .withProperty(REDIS_BIND_ADDRESS, \"localhost\")\n         .withProperty(REDIS_ENABLED, \"true\"))).hasRootCauseMessage(\n-            \"Could not set \\\"redis-port\\\" to \\\"-1\\\" because its value can not be less than \\\"0\\\".\");\n+            \"Could not set \\\"compatible-with-redis-port\\\" to \\\"-1\\\" because its value can not be less than \\\"0\\\".\");\n   }\n \n   @Test\n   public void startupFailsGivenPortAlreadyInUse() throws Exception {\n     int port = AvailablePortHelper.getRandomAvailableTCPPort();\n \n-    addIgnoredException(\"Could not start Redis Server\");\n+    addIgnoredException(\"Could not start server compatible with Redis\");\n     try (Socket interferingSocket = new Socket()) {\n       interferingSocket.bind(new InetSocketAddress(\"localhost\", port));\n       assertThatThrownBy(() -> cluster.startServerVM(0, s -> s\n@@ -241,13 +241,13 @@ public void startupFailsGivenPortAlreadyInUse() throws Exception {\n   public void startupFailsGivenInvalidBindAddress() {\n     int port = AvailablePortHelper.getRandomAvailableTCPPort();\n \n-    addIgnoredException(\"Could not start Redis Server\");\n+    addIgnoredException(\"Could not start server compatible with Redis\");\n     assertThatThrownBy(() -> cluster.startServerVM(0, s -> s\n         .withProperty(REDIS_PORT, \"\" + port)\n         .withProperty(REDIS_BIND_ADDRESS, \"1.1.1.1\")\n         .withProperty(REDIS_ENABLED, \"true\")))\n             .hasStackTraceContaining(\n-                \"The redis-bind-address 1.1.1.1 is not a valid address for this machine\");\n+                \"The compatible-with-redis-bind-address 1.1.1.1 is not a valid address for this machine\");\n   }\n \n   @Test"
  },
  {
    "sha": "08f11823fc4c1b42ccbacf132f5eb8512407dcc0",
    "filename": "geode-redis/src/integrationTest/java/org/apache/geode/redis/SSLTest.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/apache/geode/blob/5717105f030eb8077c95bff18b5024415b8f7282/geode-redis/src/integrationTest/java/org/apache/geode/redis/SSLTest.java",
    "raw_url": "https://github.com/apache/geode/raw/5717105f030eb8077c95bff18b5024415b8f7282/geode-redis/src/integrationTest/java/org/apache/geode/redis/SSLTest.java",
    "contents_url": "https://api.github.com/repos/apache/geode/contents/geode-redis/src/integrationTest/java/org/apache/geode/redis/SSLTest.java?ref=5717105f030eb8077c95bff18b5024415b8f7282",
    "patch": "@@ -41,9 +41,9 @@\n   @ClassRule\n   public static ServerStarterRule sslEnabledServer = new ServerStarterRule()\n       .withSSL(\"server\", true, true)\n-      .withProperty(\"redis-bind-address\", \"localhost\")\n-      .withProperty(\"redis-port\", \"11211\")\n-      .withProperty(\"redis-enabled\", \"true\")\n+      .withProperty(\"compatible-with-redis-bind-address\", \"localhost\")\n+      .withProperty(\"compatible-with-redis-port\", \"11211\")\n+      .withProperty(\"compatible-with-redis-enabled\", \"true\")\n       .withAutoStart();\n \n "
  },
  {
    "sha": "3ac7535be9463826f661cc7c4b812d83b26146c5",
    "filename": "geode-redis/src/main/java/org/apache/geode/redis/internal/PassiveExpirationManager.java",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/apache/geode/blob/5717105f030eb8077c95bff18b5024415b8f7282/geode-redis/src/main/java/org/apache/geode/redis/internal/PassiveExpirationManager.java",
    "raw_url": "https://github.com/apache/geode/raw/5717105f030eb8077c95bff18b5024415b8f7282/geode-redis/src/main/java/org/apache/geode/redis/internal/PassiveExpirationManager.java",
    "contents_url": "https://api.github.com/repos/apache/geode/contents/geode-redis/src/main/java/org/apache/geode/redis/internal/PassiveExpirationManager.java?ref=5717105f030eb8077c95bff18b5024415b8f7282",
    "patch": "@@ -80,7 +80,8 @@ private void doDataExpiration(\n       }\n     } catch (CacheClosedException ignore) {\n     } catch (RuntimeException | Error ex) {\n-      logger.warn(\"Passive Redis expiration failed. Will try again in 1 second.\", ex);\n+      logger.warn(\"Passive expiration failed. Will try again in 1 second.\",\n+          ex);\n     } finally {\n       redisStats.endPassiveExpirationCheck(start, expireCount);\n     }"
  },
  {
    "sha": "e3bfa4f82988f4e76fd84e14ac1f2849faef0ec6",
    "filename": "geode-redis/src/main/java/org/apache/geode/redis/internal/RegionProvider.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/apache/geode/blob/5717105f030eb8077c95bff18b5024415b8f7282/geode-redis/src/main/java/org/apache/geode/redis/internal/RegionProvider.java",
    "raw_url": "https://github.com/apache/geode/raw/5717105f030eb8077c95bff18b5024415b8f7282/geode-redis/src/main/java/org/apache/geode/redis/internal/RegionProvider.java",
    "contents_url": "https://api.github.com/repos/apache/geode/contents/geode-redis/src/main/java/org/apache/geode/redis/internal/RegionProvider.java?ref=5717105f030eb8077c95bff18b5024415b8f7282",
    "patch": "@@ -80,7 +80,7 @@ public RegionProvider(InternalCache cache) {\n   protected static void validateBucketCount(int buckets) {\n     if (buckets > REDIS_SLOTS) {\n       throw new ManagementException(String.format(\n-          \"Could not start Redis Server - System property '%s' must be <= %d\",\n+          \"Could not start server compatible with Redis - System property '%s' must be <= %d\",\n           REDIS_REGION_BUCKETS_PARAM, REDIS_SLOTS));\n     }\n   }"
  },
  {
    "sha": "5f8427e2546094b5a1f1b3abe3fe9e221d0ae17f",
    "filename": "geode-redis/src/main/java/org/apache/geode/redis/internal/data/RedisString.java",
    "status": "modified",
    "additions": 3,
    "deletions": 2,
    "changes": 5,
    "blob_url": "https://github.com/apache/geode/blob/5717105f030eb8077c95bff18b5024415b8f7282/geode-redis/src/main/java/org/apache/geode/redis/internal/data/RedisString.java",
    "raw_url": "https://github.com/apache/geode/raw/5717105f030eb8077c95bff18b5024415b8f7282/geode-redis/src/main/java/org/apache/geode/redis/internal/data/RedisString.java",
    "contents_url": "https://api.github.com/repos/apache/geode/contents/geode-redis/src/main/java/org/apache/geode/redis/internal/data/RedisString.java?ref=5717105f030eb8077c95bff18b5024415b8f7282",
    "patch": "@@ -649,8 +649,9 @@ protected void applyDelta(DeltaInfo deltaInfo) {\n         appendSequence = appendDeltaInfo.getSequence();\n       } else if (appendDeltaInfo.getSequence() != appendSequence) {\n         // Exceptional case should never happen\n-        throw new RuntimeException(\"Redis APPEND sequence mismatch - delta sequence number: \"\n-            + appendDeltaInfo.getSequence() + \" current sequence number: \" + appendSequence);\n+        throw new RuntimeException(\n+            \"APPEND sequence mismatch - delta sequence number: \"\n+                + appendDeltaInfo.getSequence() + \" current sequence number: \" + appendSequence);\n       }\n     }\n   }"
  },
  {
    "sha": "535eafcb4e46002e28982b1054278e8a09cdd249",
    "filename": "geode-redis/src/main/java/org/apache/geode/redis/internal/gfsh/RedisCommand.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/apache/geode/blob/5717105f030eb8077c95bff18b5024415b8f7282/geode-redis/src/main/java/org/apache/geode/redis/internal/gfsh/RedisCommand.java",
    "raw_url": "https://github.com/apache/geode/raw/5717105f030eb8077c95bff18b5024415b8f7282/geode-redis/src/main/java/org/apache/geode/redis/internal/gfsh/RedisCommand.java",
    "contents_url": "https://api.github.com/repos/apache/geode/contents/geode-redis/src/main/java/org/apache/geode/redis/internal/gfsh/RedisCommand.java?ref=5717105f030eb8077c95bff18b5024415b8f7282",
    "patch": "@@ -31,7 +31,7 @@\n public class RedisCommand extends GfshCommand {\n   public static final String REDIS = \"redis\";\n   public static final String REDIS__HELP =\n-      \"Commands related to the Redis API for Geode.\";\n+      \"Commands related to the Geode APIs compatible with Redis.\";\n   public static final String REDIS__ENABLE_UNSUPPORTED_COMMANDS = \"enable-unsupported-commands\";\n   public static final String REDIS__ENABLE_UNSUPPORTED_COMMANDS__HELP =\n       \"Boolean value to determine \""
  },
  {
    "sha": "8aff0d3666efe9f54d5b73f1e01783b038821ac5",
    "filename": "geode-redis/src/main/java/org/apache/geode/redis/internal/gfsh/RedisCommandFunction.java",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/apache/geode/blob/5717105f030eb8077c95bff18b5024415b8f7282/geode-redis/src/main/java/org/apache/geode/redis/internal/gfsh/RedisCommandFunction.java",
    "raw_url": "https://github.com/apache/geode/raw/5717105f030eb8077c95bff18b5024415b8f7282/geode-redis/src/main/java/org/apache/geode/redis/internal/gfsh/RedisCommandFunction.java",
    "contents_url": "https://api.github.com/repos/apache/geode/contents/geode-redis/src/main/java/org/apache/geode/redis/internal/gfsh/RedisCommandFunction.java?ref=5717105f030eb8077c95bff18b5024415b8f7282",
    "patch": "@@ -36,7 +36,8 @@ public CliFunctionResult executeFunction(FunctionContext<Boolean> context) {\n     InternalCache cache = (InternalCache) context.getCache();\n \n     if (!cache.getInternalDistributedSystem().getConfig().getRedisEnabled()) {\n-      return new CliFunctionResult(context.getMemberName(), false, \"Error: Redis is not enabled\");\n+      return new CliFunctionResult(context.getMemberName(), false,\n+          \"Error: Geode APIs compatible with Redis are not enabled\");\n     }\n \n     GeodeRedisService geodeRedisService = cache.getService(GeodeRedisService.class);"
  },
  {
    "sha": "1cb665d860442bc93ac410c0b18402fed5d1749c",
    "filename": "geode-redis/src/main/java/org/apache/geode/redis/internal/netty/NettyRedisServer.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/apache/geode/blob/5717105f030eb8077c95bff18b5024415b8f7282/geode-redis/src/main/java/org/apache/geode/redis/internal/netty/NettyRedisServer.java",
    "raw_url": "https://github.com/apache/geode/raw/5717105f030eb8077c95bff18b5024415b8f7282/geode-redis/src/main/java/org/apache/geode/redis/internal/netty/NettyRedisServer.java",
    "contents_url": "https://api.github.com/repos/apache/geode/contents/geode-redis/src/main/java/org/apache/geode/redis/internal/netty/NettyRedisServer.java?ref=5717105f030eb8077c95bff18b5024415b8f7282",
    "patch": "@@ -101,7 +101,7 @@ public NettyRedisServer(Supplier<DistributionConfig> configSupplier,\n \n     if (port < RANDOM_PORT_INDICATOR) {\n       throw new IllegalArgumentException(\n-          \"Redis port cannot be less than \" + RANDOM_PORT_INDICATOR);\n+          \"The compatible-with-redis-port cannot be less than \" + RANDOM_PORT_INDICATOR);\n     }\n \n     selectorGroup = createEventLoopGroup(\"Selector\", true, 1);\n@@ -218,7 +218,7 @@ private Channel createBoundChannel(ServerBootstrap serverBootstrap, int requeste\n       channelFuture.syncUninterruptibly();\n     } catch (Exception ex) {\n       throw new ManagementException(\n-          \"Could not start Redis Server using bind address: \" + bindAddress +\n+          \"Could not start server compatible with Redis using bind address: \" + bindAddress +\n               \" and port: \" + port + \". \" +\n               \"Please make sure nothing else is running on this address/port combination.\",\n           ex);\n@@ -258,7 +258,7 @@ private static InetAddress getBindAddress(String requestedAddress) {\n         return InetAddress.getByName(requestedAddress);\n       } catch (UnknownHostException e) {\n         throw new ManagementException(\n-            \"Could not start Redis Server using bind address: '\" + requestedAddress\n+            \"Could not start server compatible with Redis using bind address: '\" + requestedAddress\n                 + \"'. Please make sure that this is a valid address for this host.\",\n             e);\n       }"
  },
  {
    "sha": "9bb835fda1a0fe87a1827b59924e010b0578c62a",
    "filename": "geode-redis/src/main/java/org/apache/geode/redis/internal/statistics/GeodeRedisStats.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/apache/geode/blob/5717105f030eb8077c95bff18b5024415b8f7282/geode-redis/src/main/java/org/apache/geode/redis/internal/statistics/GeodeRedisStats.java",
    "raw_url": "https://github.com/apache/geode/raw/5717105f030eb8077c95bff18b5024415b8f7282/geode-redis/src/main/java/org/apache/geode/redis/internal/statistics/GeodeRedisStats.java",
    "contents_url": "https://api.github.com/repos/apache/geode/contents/geode-redis/src/main/java/org/apache/geode/redis/internal/statistics/GeodeRedisStats.java?ref=5717105f030eb8077c95bff18b5024415b8f7282",
    "patch": "@@ -71,8 +71,8 @@ public GeodeRedisStats(StatisticsFactory factory, String textId,\n         descriptorList.toArray(new StatisticDescriptor[descriptorList.size()]);\n \n     type = statisticsTypeFactory\n-        .createType(\"RedisStats\",\n-            \"Statistics for a GemFire Redis Server\",\n+        .createType(\"statsForServerCompatibleWithRedis\",\n+            \"Statistics for a Geode server compatible with Redis\",\n             descriptorArray);\n \n     fillCompletedIdMap(type);"
  },
  {
    "sha": "36c6fb5f45b6ef3046639885b2e350903c6c08eb",
    "filename": "geode-redis/src/performanceTest/environment-setup.sh",
    "status": "modified",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/apache/geode/blob/5717105f030eb8077c95bff18b5024415b8f7282/geode-redis/src/performanceTest/environment-setup.sh",
    "raw_url": "https://github.com/apache/geode/raw/5717105f030eb8077c95bff18b5024415b8f7282/geode-redis/src/performanceTest/environment-setup.sh",
    "contents_url": "https://api.github.com/repos/apache/geode/contents/geode-redis/src/performanceTest/environment-setup.sh?ref=5717105f030eb8077c95bff18b5024415b8f7282",
    "patch": "@@ -55,7 +55,7 @@ while getopts \":f:rgt:c:h:p:\" opt; do\n done\n \n if [ -z ${SERVER_TYPE} ]; then\n-  echo \"Please specify native Redis (-r) or Geode Redis (-g)\"\n+  echo \"Please specify native Redis (-r) or Geode APIs compatible with Redis (-g)\"\n   exit 1\n fi\n \n@@ -101,11 +101,11 @@ if [ ${SERVER_TYPE} == \"geode\" ]; then\n           --log-level=none\n           --locators=localhost[10334]\n           --server-port=0\n-          --redis-port=6379\n-          --redis-bind-address=127.0.0.1\"\n+          --compatible-with-redis-port=6379\n+          --compatible-with-redis-bind-address=127.0.0.1\"\n else\n   if [ ${SERVER_NOT_FOUND} -eq 1 ]; then\n-    echo \"No Redis server detected on host '${REDIS_HOST}' at port '${REDIS_PORT}'\"\n+    echo \"No server compatible with Redis detected on host '${REDIS_HOST}' at port '${REDIS_PORT}'\"\n     exit 1\n   fi\n fi"
  }
]
