[
  {
    "sha": "8f228b0d03d665476657ea3cae55b3df9c74375b",
    "filename": "geode-redis/src/main/java/org/apache/geode/redis/internal/data/CommandHelper.java",
    "status": "modified",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/apache/geode/blob/9e998fe61f45bd38fc5845f0222dec350df084fe/geode-redis/src/main/java/org/apache/geode/redis/internal/data/CommandHelper.java",
    "raw_url": "https://github.com/apache/geode/raw/9e998fe61f45bd38fc5845f0222dec350df084fe/geode-redis/src/main/java/org/apache/geode/redis/internal/data/CommandHelper.java",
    "contents_url": "https://api.github.com/repos/apache/geode/contents/geode-redis/src/main/java/org/apache/geode/redis/internal/data/CommandHelper.java?ref=9e998fe61f45bd38fc5845f0222dec350df084fe",
    "patch": "@@ -16,12 +16,12 @@\n \n package org.apache.geode.redis.internal.data;\n \n+import static org.apache.geode.redis.internal.data.NullRedisDataStructures.NULL_REDIS_HASH;\n+import static org.apache.geode.redis.internal.data.NullRedisDataStructures.NULL_REDIS_SET;\n+import static org.apache.geode.redis.internal.data.NullRedisDataStructures.NULL_REDIS_STRING;\n import static org.apache.geode.redis.internal.data.RedisDataType.REDIS_HASH;\n import static org.apache.geode.redis.internal.data.RedisDataType.REDIS_SET;\n import static org.apache.geode.redis.internal.data.RedisDataType.REDIS_STRING;\n-import static org.apache.geode.redis.internal.data.RedisHash.NULL_REDIS_HASH;\n-import static org.apache.geode.redis.internal.data.RedisSet.NULL_REDIS_SET;\n-import static org.apache.geode.redis.internal.data.RedisString.NULL_REDIS_STRING;\n \n import org.apache.geode.cache.Region;\n import org.apache.geode.redis.internal.RedisConstants;\n@@ -65,7 +65,7 @@ public CommandHelper(\n   }\n \n   RedisData getRedisData(ByteArrayWrapper key) {\n-    return getRedisData(key, RedisData.NULL_REDIS_DATA);\n+    return getRedisData(key, NullRedisDataStructures.NULL_REDIS_DATA);\n   }\n \n   RedisData getRedisData(ByteArrayWrapper key, RedisData notFoundValue) {"
  },
  {
    "sha": "c1cd53b6d1a97958dc231f9997c4b4a4db650889",
    "filename": "geode-redis/src/main/java/org/apache/geode/redis/internal/data/NullRedisDataStructures.java",
    "status": "added",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/apache/geode/blob/9e998fe61f45bd38fc5845f0222dec350df084fe/geode-redis/src/main/java/org/apache/geode/redis/internal/data/NullRedisDataStructures.java",
    "raw_url": "https://github.com/apache/geode/raw/9e998fe61f45bd38fc5845f0222dec350df084fe/geode-redis/src/main/java/org/apache/geode/redis/internal/data/NullRedisDataStructures.java",
    "contents_url": "https://api.github.com/repos/apache/geode/contents/geode-redis/src/main/java/org/apache/geode/redis/internal/data/NullRedisDataStructures.java?ref=9e998fe61f45bd38fc5845f0222dec350df084fe",
    "patch": "@@ -0,0 +1,22 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package org.apache.geode.redis.internal.data;\n+\n+public class NullRedisDataStructures {\n+  public static final NullRedisString NULL_REDIS_STRING = new NullRedisString();\n+  public static final NullRedisSet NULL_REDIS_SET = new NullRedisSet();\n+  public static final NullRedisHash NULL_REDIS_HASH = new NullRedisHash();\n+  public static final NullRedisData NULL_REDIS_DATA = new NullRedisData();\n+}"
  },
  {
    "sha": "396d2a87dac1603bbbbb52778f635ce203ee91a5",
    "filename": "geode-redis/src/main/java/org/apache/geode/redis/internal/data/RedisData.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/apache/geode/blob/9e998fe61f45bd38fc5845f0222dec350df084fe/geode-redis/src/main/java/org/apache/geode/redis/internal/data/RedisData.java",
    "raw_url": "https://github.com/apache/geode/raw/9e998fe61f45bd38fc5845f0222dec350df084fe/geode-redis/src/main/java/org/apache/geode/redis/internal/data/RedisData.java",
    "contents_url": "https://api.github.com/repos/apache/geode/contents/geode-redis/src/main/java/org/apache/geode/redis/internal/data/RedisData.java?ref=9e998fe61f45bd38fc5845f0222dec350df084fe",
    "patch": "@@ -22,7 +22,7 @@\n import org.apache.geode.internal.serialization.DataSerializableFixedID;\n \n public interface RedisData extends Delta, DataSerializableFixedID {\n-  NullRedisData NULL_REDIS_DATA = new NullRedisData();\n+\n \n   /**\n    * Returns true if this instance does not exist."
  },
  {
    "sha": "c57c3c4bb44bff21ceccc8a157fe5c05f93849ed",
    "filename": "geode-redis/src/main/java/org/apache/geode/redis/internal/data/RedisHash.java",
    "status": "modified",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/apache/geode/blob/9e998fe61f45bd38fc5845f0222dec350df084fe/geode-redis/src/main/java/org/apache/geode/redis/internal/data/RedisHash.java",
    "raw_url": "https://github.com/apache/geode/raw/9e998fe61f45bd38fc5845f0222dec350df084fe/geode-redis/src/main/java/org/apache/geode/redis/internal/data/RedisHash.java",
    "contents_url": "https://api.github.com/repos/apache/geode/contents/geode-redis/src/main/java/org/apache/geode/redis/internal/data/RedisHash.java?ref=9e998fe61f45bd38fc5845f0222dec350df084fe",
    "patch": "@@ -54,7 +54,6 @@\n import org.apache.geode.redis.internal.netty.Coder;\n \n public class RedisHash extends AbstractRedisData {\n-  public static final RedisHash NULL_REDIS_HASH = new NullRedisHash();\n   private HashMap<ByteArrayWrapper, ByteArrayWrapper> hash;\n   private ConcurrentHashMap<UUID, List<ByteArrayWrapper>> hScanSnapShots;\n   private ConcurrentHashMap<UUID, Long> hScanSnapShotCreationTimes;"
  },
  {
    "sha": "45484fada018fcb0de8f7e4c1bda7d3b8014be85",
    "filename": "geode-redis/src/main/java/org/apache/geode/redis/internal/data/RedisSet.java",
    "status": "modified",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/apache/geode/blob/9e998fe61f45bd38fc5845f0222dec350df084fe/geode-redis/src/main/java/org/apache/geode/redis/internal/data/RedisSet.java",
    "raw_url": "https://github.com/apache/geode/raw/9e998fe61f45bd38fc5845f0222dec350df084fe/geode-redis/src/main/java/org/apache/geode/redis/internal/data/RedisSet.java",
    "contents_url": "https://api.github.com/repos/apache/geode/contents/geode-redis/src/main/java/org/apache/geode/redis/internal/data/RedisSet.java?ref=9e998fe61f45bd38fc5845f0222dec350df084fe",
    "patch": "@@ -47,7 +47,6 @@\n \n public class RedisSet extends AbstractRedisData {\n \n-  public static final NullRedisSet NULL_REDIS_SET = new NullRedisSet();\n   private HashSet<ByteArrayWrapper> members;\n \n   @SuppressWarnings(\"unchecked\")"
  },
  {
    "sha": "01ba706baa072fb4b2d7b839881924600186ad6e",
    "filename": "geode-redis/src/main/java/org/apache/geode/redis/internal/data/RedisSetCommandsFunctionExecutor.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/apache/geode/blob/9e998fe61f45bd38fc5845f0222dec350df084fe/geode-redis/src/main/java/org/apache/geode/redis/internal/data/RedisSetCommandsFunctionExecutor.java",
    "raw_url": "https://github.com/apache/geode/raw/9e998fe61f45bd38fc5845f0222dec350df084fe/geode-redis/src/main/java/org/apache/geode/redis/internal/data/RedisSetCommandsFunctionExecutor.java",
    "contents_url": "https://api.github.com/repos/apache/geode/contents/geode-redis/src/main/java/org/apache/geode/redis/internal/data/RedisSetCommandsFunctionExecutor.java?ref=9e998fe61f45bd38fc5845f0222dec350df084fe",
    "patch": "@@ -16,7 +16,7 @@\n \n package org.apache.geode.redis.internal.data;\n \n-import static org.apache.geode.redis.internal.data.RedisSet.NULL_REDIS_SET;\n+import static org.apache.geode.redis.internal.data.NullRedisDataStructures.NULL_REDIS_SET;\n \n import java.math.BigInteger;\n import java.util.ArrayList;"
  },
  {
    "sha": "365fa960f47fa761152a050b180159d52a26079e",
    "filename": "geode-redis/src/main/java/org/apache/geode/redis/internal/data/RedisString.java",
    "status": "modified",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/apache/geode/blob/9e998fe61f45bd38fc5845f0222dec350df084fe/geode-redis/src/main/java/org/apache/geode/redis/internal/data/RedisString.java",
    "raw_url": "https://github.com/apache/geode/raw/9e998fe61f45bd38fc5845f0222dec350df084fe/geode-redis/src/main/java/org/apache/geode/redis/internal/data/RedisString.java",
    "contents_url": "https://api.github.com/repos/apache/geode/contents/geode-redis/src/main/java/org/apache/geode/redis/internal/data/RedisString.java?ref=9e998fe61f45bd38fc5845f0222dec350df084fe",
    "patch": "@@ -35,7 +35,6 @@\n import org.apache.geode.redis.internal.netty.Coder;\n \n public class RedisString extends AbstractRedisData {\n-  public static final NullRedisString NULL_REDIS_STRING = new NullRedisString();\n \n   private int appendSequence;\n "
  },
  {
    "sha": "f31c132e93c12d94d261e5697593af174dc0c214",
    "filename": "geode-redis/src/main/java/org/apache/geode/redis/internal/data/RedisStringCommandsFunctionExecutor.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/apache/geode/blob/9e998fe61f45bd38fc5845f0222dec350df084fe/geode-redis/src/main/java/org/apache/geode/redis/internal/data/RedisStringCommandsFunctionExecutor.java",
    "raw_url": "https://github.com/apache/geode/raw/9e998fe61f45bd38fc5845f0222dec350df084fe/geode-redis/src/main/java/org/apache/geode/redis/internal/data/RedisStringCommandsFunctionExecutor.java",
    "contents_url": "https://api.github.com/repos/apache/geode/contents/geode-redis/src/main/java/org/apache/geode/redis/internal/data/RedisStringCommandsFunctionExecutor.java?ref=9e998fe61f45bd38fc5845f0222dec350df084fe",
    "patch": "@@ -15,7 +15,7 @@\n \n package org.apache.geode.redis.internal.data;\n \n-import static org.apache.geode.redis.internal.data.RedisString.NULL_REDIS_STRING;\n+import static org.apache.geode.redis.internal.data.NullRedisDataStructures.NULL_REDIS_STRING;\n \n import java.math.BigDecimal;\n import java.util.List;"
  },
  {
    "sha": "f31838e028953838a3a1f4a4e9d8fa2eb6eda709",
    "filename": "geode-redis/src/test/java/org/apache/geode/redis/internal/data/RedisHashTest.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/apache/geode/blob/9e998fe61f45bd38fc5845f0222dec350df084fe/geode-redis/src/test/java/org/apache/geode/redis/internal/data/RedisHashTest.java",
    "raw_url": "https://github.com/apache/geode/raw/9e998fe61f45bd38fc5845f0222dec350df084fe/geode-redis/src/test/java/org/apache/geode/redis/internal/data/RedisHashTest.java",
    "contents_url": "https://api.github.com/repos/apache/geode/contents/geode-redis/src/test/java/org/apache/geode/redis/internal/data/RedisHashTest.java?ref=9e998fe61f45bd38fc5845f0222dec350df084fe",
    "patch": "@@ -102,7 +102,7 @@ public void equals_returnsTrue_givenEqualValueBytesAndExpiration() {\n   @Test\n   public void equals_returnsTrue_givenDifferentEmptyHashes() {\n     RedisHash o1 = new RedisHash(Collections.emptyList());\n-    RedisHash o2 = RedisHash.NULL_REDIS_HASH;\n+    RedisHash o2 = NullRedisDataStructures.NULL_REDIS_HASH;\n     assertThat(o1).isEqualTo(o2);\n     assertThat(o2).isEqualTo(o1);\n   }"
  },
  {
    "sha": "50af927b701e77515481926337c1c68ad4e9423b",
    "filename": "geode-redis/src/test/java/org/apache/geode/redis/internal/data/RedisSetTest.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/apache/geode/blob/9e998fe61f45bd38fc5845f0222dec350df084fe/geode-redis/src/test/java/org/apache/geode/redis/internal/data/RedisSetTest.java",
    "raw_url": "https://github.com/apache/geode/raw/9e998fe61f45bd38fc5845f0222dec350df084fe/geode-redis/src/test/java/org/apache/geode/redis/internal/data/RedisSetTest.java",
    "contents_url": "https://api.github.com/repos/apache/geode/contents/geode-redis/src/test/java/org/apache/geode/redis/internal/data/RedisSetTest.java?ref=9e998fe61f45bd38fc5845f0222dec350df084fe",
    "patch": "@@ -93,7 +93,7 @@ public void equals_returnsTrue_givenEqualValueBytesAndExpiration() {\n   @Test\n   public void equals_returnsTrue_givenDifferentEmptySets() {\n     RedisSet o1 = new RedisSet(Collections.emptyList());\n-    RedisSet o2 = RedisSet.NULL_REDIS_SET;\n+    RedisSet o2 = NullRedisDataStructures.NULL_REDIS_SET;\n     assertThat(o1).isEqualTo(o2);\n     assertThat(o2).isEqualTo(o1);\n   }"
  }
]
