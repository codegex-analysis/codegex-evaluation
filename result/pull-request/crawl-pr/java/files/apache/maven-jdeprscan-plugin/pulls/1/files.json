[
  {
    "sha": "f9fa9d7064ff4af2bae90ed69f5e3d8daf4f34d0",
    "filename": "src/main/java/org/apache/maven/plugins/jdeprscan/BaseJDeprScanMojo.java",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/apache/maven-jdeprscan-plugin/blob/9305270296562b314ba96063dfaca5854c6dd8f6/src/main/java/org/apache/maven/plugins/jdeprscan/BaseJDeprScanMojo.java",
    "raw_url": "https://github.com/apache/maven-jdeprscan-plugin/raw/9305270296562b314ba96063dfaca5854c6dd8f6/src/main/java/org/apache/maven/plugins/jdeprscan/BaseJDeprScanMojo.java",
    "contents_url": "https://api.github.com/repos/apache/maven-jdeprscan-plugin/contents/src/main/java/org/apache/maven/plugins/jdeprscan/BaseJDeprScanMojo.java?ref=9305270296562b314ba96063dfaca5854c6dd8f6",
    "patch": "@@ -29,13 +29,12 @@\n import org.apache.maven.artifact.DependencyResolutionRequiredException;\r\n import org.apache.maven.plugin.MojoExecutionException;\r\n import org.apache.maven.plugin.MojoFailureException;\r\n-\r\n import org.apache.maven.plugins.annotations.Parameter;\r\n import org.apache.maven.plugins.jdeprscan.consumers.JDeprScanConsumer;\r\n import org.apache.maven.project.MavenProject;\r\n import org.codehaus.plexus.util.StringUtils;\r\n-import org.codehaus.plexus.util.cli.Commandline;\r\n import org.codehaus.plexus.util.cli.CommandLineUtils.StringStreamConsumer;\r\n+import org.codehaus.plexus.util.cli.Commandline;\r\n \r\n /**\r\n  * Base class for all explicit jdeprscan mojos\r"
  },
  {
    "sha": "2d85ff3f831d5283d49b6a6ad62a867ab9a6e920",
    "filename": "src/main/java/org/apache/maven/plugins/jdeprscan/JDeprScanMojo.java",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/apache/maven-jdeprscan-plugin/blob/9305270296562b314ba96063dfaca5854c6dd8f6/src/main/java/org/apache/maven/plugins/jdeprscan/JDeprScanMojo.java",
    "raw_url": "https://github.com/apache/maven-jdeprscan-plugin/raw/9305270296562b314ba96063dfaca5854c6dd8f6/src/main/java/org/apache/maven/plugins/jdeprscan/JDeprScanMojo.java",
    "contents_url": "https://api.github.com/repos/apache/maven-jdeprscan-plugin/contents/src/main/java/org/apache/maven/plugins/jdeprscan/JDeprScanMojo.java?ref=9305270296562b314ba96063dfaca5854c6dd8f6",
    "patch": "@@ -22,6 +22,7 @@\n import java.nio.file.Path;\r\n import java.nio.file.Paths;\r\n import java.util.Collection;\r\n+import java.util.Collections;\r\n import java.util.LinkedHashSet;\r\n import java.util.Set;\r\n \r\n@@ -59,6 +60,6 @@ protected Path getClassesDirectory()\n             classPath.add( Paths.get( elm ) );\r\n         }\r\n \r\n-        return classPath;\r\n+        return Collections.unmodifiableSet( classPath );\r\n     }\r\n }\r"
  },
  {
    "sha": "dc1785163db4947639cfb5b9cf315bf9398b873b",
    "filename": "src/main/java/org/apache/maven/plugins/jdeprscan/TestJDeprScanMojo.java",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/apache/maven-jdeprscan-plugin/blob/9305270296562b314ba96063dfaca5854c6dd8f6/src/main/java/org/apache/maven/plugins/jdeprscan/TestJDeprScanMojo.java",
    "raw_url": "https://github.com/apache/maven-jdeprscan-plugin/raw/9305270296562b314ba96063dfaca5854c6dd8f6/src/main/java/org/apache/maven/plugins/jdeprscan/TestJDeprScanMojo.java",
    "contents_url": "https://api.github.com/repos/apache/maven-jdeprscan-plugin/contents/src/main/java/org/apache/maven/plugins/jdeprscan/TestJDeprScanMojo.java?ref=9305270296562b314ba96063dfaca5854c6dd8f6",
    "patch": "@@ -22,6 +22,7 @@\n import java.nio.file.Path;\r\n import java.nio.file.Paths;\r\n import java.util.Collection;\r\n+import java.util.Collections;\r\n import java.util.LinkedHashSet;\r\n import java.util.Set;\r\n \r\n@@ -59,6 +60,6 @@ protected Path getClassesDirectory()\n             classPath.add( Paths.get( elm ) );\r\n         }\r\n \r\n-        return classPath;\r\n+        return Collections.unmodifiableSet( classPath );\r\n     }\r\n }\r"
  },
  {
    "sha": "188b6b84e254c846442e1e7618f645437090aaa9",
    "filename": "src/main/java/org/apache/maven/plugins/jdeprscan/consumers/JDeprScanConsumer.java",
    "status": "modified",
    "additions": 89,
    "deletions": 94,
    "changes": 183,
    "blob_url": "https://github.com/apache/maven-jdeprscan-plugin/blob/9305270296562b314ba96063dfaca5854c6dd8f6/src/main/java/org/apache/maven/plugins/jdeprscan/consumers/JDeprScanConsumer.java",
    "raw_url": "https://github.com/apache/maven-jdeprscan-plugin/raw/9305270296562b314ba96063dfaca5854c6dd8f6/src/main/java/org/apache/maven/plugins/jdeprscan/consumers/JDeprScanConsumer.java",
    "contents_url": "https://api.github.com/repos/apache/maven-jdeprscan-plugin/contents/src/main/java/org/apache/maven/plugins/jdeprscan/consumers/JDeprScanConsumer.java?ref=9305270296562b314ba96063dfaca5854c6dd8f6",
    "patch": "@@ -1,94 +1,89 @@\n-package org.apache.maven.plugins.jdeprscan.consumers;\r\n-\r\n-/*\r\n- * Licensed to the Apache Software Foundation (ASF) under one\r\n- * or more contributor license agreements.  See the NOTICE file\r\n- * distributed with this work for additional information\r\n- * regarding copyright ownership.  The ASF licenses this file\r\n- * to you under the Apache License, Version 2.0 (the\r\n- * \"License\"); you may not use this file except in compliance\r\n- * with the License.  You may obtain a copy of the License at\r\n- *\r\n- *   http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing,\r\n- * software distributed under the License is distributed on an\r\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n- * KIND, either express or implied.  See the License for the\r\n- * specific language governing permissions and limitations\r\n- * under the License.\r\n- */\r\n-\r\n-import java.util.HashMap;\r\n-import java.util.HashSet;\r\n-import java.util.Map;\r\n-import java.util.Set;\r\n-import java.util.regex.Matcher;\r\n-import java.util.regex.Pattern;\r\n-\r\n-import org.codehaus.plexus.util.cli.CommandLineUtils;\r\n-import org.codehaus.plexus.util.cli.StreamConsumer;\r\n-\r\n-/**\r\n- * Consumes output of jdeprscan tool\r\n- * \r\n- * @author Robert Scholte\r\n- * @since 3.0.0\r\n- */\r\n-public class JDeprScanConsumer\r\n-    extends CommandLineUtils.StringStreamConsumer\r\n-    implements StreamConsumer\r\n-{\r\n-\r\n-    private Map<String, Set<String>> deprecatedClasses = new HashMap<>();\r\n-\r\n-    private Map<String, Set<String>> deprecatedMethods = new HashMap<>();\r\n-\r\n-    public static final Pattern DEPRECATED_CLASS = Pattern.compile( \"^class (\\\\S+) uses deprecated class (\\\\S+)\" );\r\n-\r\n-    public static final Pattern DEPRECATED_METHOD = Pattern.compile( \"^class (\\\\S+) uses deprecated method (\\\\S+)\" );\r\n-\r\n-    public Map<String, Set<String>> getDeprecatedClasses()\r\n-    {\r\n-        return deprecatedClasses;\r\n-    }\r\n-    \r\n-    public Map<String, Set<String>> getDeprecatedMethods()\r\n-    {\r\n-        return deprecatedMethods;\r\n-    }\r\n-    \r\n-    @Override\r\n-    public void consumeLine( String line )\r\n-    {\r\n-        super.consumeLine( line );\r\n-\r\n-        Matcher matcher;\r\n-        \r\n-        matcher = DEPRECATED_CLASS.matcher( line );\r\n-        if ( matcher.find() )\r\n-        {\r\n-            Set<String> dc = deprecatedClasses.get( matcher.group( 1 ) );\r\n-            if ( dc == null )\r\n-            {\r\n-                dc = new HashSet<>();\r\n-                deprecatedClasses.put( matcher.group( 1 ), dc );\r\n-            }\r\n-            dc.add( matcher.group( 2 ) );\r\n-            return;\r\n-        }\r\n-        \r\n-        matcher = DEPRECATED_METHOD.matcher( line );\r\n-        if ( matcher.find() )\r\n-        {\r\n-            Set<String> dm = deprecatedMethods.get( matcher.group( 1 ) );\r\n-            if ( dm == null )\r\n-            {\r\n-                dm = new HashSet<>();\r\n-                deprecatedMethods.put( matcher.group( 1 ), dm );\r\n-            }\r\n-            dm.add( matcher.group( 2 ) );\r\n-            return;\r\n-        }\r\n-    }\r\n-}\r\n+package org.apache.maven.plugins.jdeprscan.consumers;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+import org.codehaus.plexus.util.cli.CommandLineUtils;\n+import org.codehaus.plexus.util.cli.StreamConsumer;\n+\n+/**\n+ * Consumes output of jdeprscan tool\n+ * \n+ * @author Robert Scholte\n+ * @since 3.0.0\n+ */\n+public class JDeprScanConsumer\n+    extends CommandLineUtils.StringStreamConsumer\n+    implements StreamConsumer\n+{\n+\n+    private final Map<String, Set<String>> deprecatedClasses = new HashMap<>();\n+\n+    private final Map<String, Set<String>> deprecatedMethods = new HashMap<>();\n+\n+    public static final Pattern DEPRECATED_CLASS = Pattern.compile( \"^class (\\\\S+) uses deprecated class (\\\\S+)\" );\n+\n+    public static final Pattern DEPRECATED_METHOD = Pattern.compile( \"^class (\\\\S+) uses deprecated method (\\\\S+)\" );\n+\n+    public Map<String, Set<String>> getDeprecatedClasses( )\n+    {\n+        return Collections.unmodifiableMap( deprecatedClasses );\n+    }\n+\n+    public Map<String, Set<String>> getDeprecatedMethods( )\n+    {\n+        return Collections.unmodifiableMap( deprecatedMethods );\n+    }\n+\n+    @Override\n+    public void consumeLine( String line )\n+    {\n+        super.consumeLine( line );\n+\n+        Matcher deprecatedClassMatcher = DEPRECATED_CLASS.matcher( line );\n+        matcherCollector( deprecatedClassMatcher, deprecatedClasses );\n+\n+        Matcher deprecatedMethodMatcher = DEPRECATED_METHOD.matcher( line );\n+        matcherCollector( deprecatedMethodMatcher, deprecatedMethods );\n+    }\n+\n+    private void matcherCollector( Matcher matcher, Map<String, Set<String>> deprecatedMethods )\n+    {\n+        if ( !matcher.find() )\n+        {\n+            return;\n+        }\n+\n+        Set<String> dm = deprecatedMethods.get( matcher.group( 1 ) );\n+        if ( dm == null )\n+        {\n+            dm = new HashSet<>();\n+            deprecatedMethods.put( matcher.group( 1 ), dm );\n+        }\n+        dm.add( matcher.group( 2 ) );\n+    }\n+}"
  }
]
