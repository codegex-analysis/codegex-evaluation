[
  {
    "sha": "c93f2b39ece27d2943a83b16326602e662ee553e",
    "filename": "bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/GarbageCollectorThread.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/apache/bookkeeper/blob/58849a051dac13b885f30f2fa0e383316351b6e7/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/GarbageCollectorThread.java",
    "raw_url": "https://github.com/apache/bookkeeper/raw/58849a051dac13b885f30f2fa0e383316351b6e7/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/GarbageCollectorThread.java",
    "contents_url": "https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/GarbageCollectorThread.java?ref=58849a051dac13b885f30f2fa0e383316351b6e7",
    "patch": "@@ -456,7 +456,7 @@ void doCompactEntryLogs(double threshold) {\n         for (EntryLogMetadata meta : logsToCompact) {\n             int bucketIndex = Math.min(\n                     numBuckets - 1,\n-                    (int) Math.ceil(meta.getUsage() * numBuckets));\n+                    (int) Math.floor(meta.getUsage() * numBuckets));\n             entryLogUsageBuckets[bucketIndex]++;\n \n             if (meta.getUsage() >= threshold) {"
  }
]
