[
  {
    "sha": "0a1ca9c25c8f066ebc0d7c539684aeb1ccba192d",
    "filename": "buildSrc/src/main/groovy/org/apache/beam/gradle/BeamModulePlugin.groovy",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/apache/beam/blob/914130c59fe4b4250a7129c2ee099ec6c017b210/buildSrc/src/main/groovy/org/apache/beam/gradle/BeamModulePlugin.groovy",
    "raw_url": "https://github.com/apache/beam/raw/914130c59fe4b4250a7129c2ee099ec6c017b210/buildSrc/src/main/groovy/org/apache/beam/gradle/BeamModulePlugin.groovy",
    "contents_url": "https://api.github.com/repos/apache/beam/contents/buildSrc/src/main/groovy/org/apache/beam/gradle/BeamModulePlugin.groovy?ref=914130c59fe4b4250a7129c2ee099ec6c017b210",
    "patch": "@@ -351,7 +351,7 @@ class BeamModulePlugin implements Plugin<Project> {\n \n     // Automatically use the official release version if we are performing a release\n     // otherwise append '-SNAPSHOT'\n-    project.version = '2.29.0'\n+    project.version = '2.30.0'\n     if (!isRelease(project)) {\n       project.version += '-SNAPSHOT'\n     }\n@@ -424,7 +424,7 @@ class BeamModulePlugin implements Plugin<Project> {\n     def classgraph_version = \"4.8.65\"\n     def errorprone_version = \"2.3.4\"\n     def google_clients_version = \"1.31.0\"\n-    def google_cloud_bigdataoss_version = \"2.1.6\"\n+    def google_cloud_bigdataoss_version = \"2.2.1-SNAPSHOT\"\n     def google_cloud_pubsublite_version = \"0.7.0\"\n     def google_code_gson_version = \"2.8.6\"\n     def google_oauth_clients_version = \"1.31.0\"\n@@ -501,7 +501,7 @@ class BeamModulePlugin implements Plugin<Project> {\n         error_prone_annotations                     : \"com.google.errorprone:error_prone_annotations:$errorprone_version\",\n         gax                                         : \"com.google.api:gax\", // google_cloud_platform_libraries_bom sets version\n         gax_grpc                                    : \"com.google.api:gax-grpc\", // google_cloud_platform_libraries_bom sets version\n-        google_api_client                           : \"com.google.api-client:google-api-client:1.31.1\", // 1.31.1 is required to run 1.31.0 of google_clients_version below.\n+        google_api_client                           : \"com.google.api-client:google-api-client:1.31.3\", // 1.31.1 is required to run 1.31.0 of google_clients_version below.\n         google_api_client_jackson2                  : \"com.google.api-client:google-api-client-jackson2:$google_clients_version\",\n         google_api_client_java6                     : \"com.google.api-client:google-api-client-java6:$google_clients_version\",\n         google_api_common                           : \"com.google.api:api-common\", // google_cloud_platform_libraries_bom sets version"
  },
  {
    "sha": "364445a94b963afabaa824eb4c1e41f222cbd168",
    "filename": "gradle.properties",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/apache/beam/blob/914130c59fe4b4250a7129c2ee099ec6c017b210/gradle.properties",
    "raw_url": "https://github.com/apache/beam/raw/914130c59fe4b4250a7129c2ee099ec6c017b210/gradle.properties",
    "contents_url": "https://api.github.com/repos/apache/beam/contents/gradle.properties?ref=914130c59fe4b4250a7129c2ee099ec6c017b210",
    "patch": "@@ -24,8 +24,8 @@ offlineRepositoryRoot=offline-repository\n signing.gnupg.executable=gpg\n signing.gnupg.useLegacyGpg=true\n \n-version=2.29.0-SNAPSHOT\n-sdk_version=2.29.0.dev\n+version=2.30.0-SNAPSHOT\n+sdk_version=2.30.0.dev\n \n javaVersion=1.8\n "
  },
  {
    "sha": "baed22a2eec82442cd6da20945703700a49de192",
    "filename": "sdks/go/pkg/beam/core/core.go",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/apache/beam/blob/914130c59fe4b4250a7129c2ee099ec6c017b210/sdks/go/pkg/beam/core/core.go",
    "raw_url": "https://github.com/apache/beam/raw/914130c59fe4b4250a7129c2ee099ec6c017b210/sdks/go/pkg/beam/core/core.go",
    "contents_url": "https://api.github.com/repos/apache/beam/contents/sdks/go/pkg/beam/core/core.go?ref=914130c59fe4b4250a7129c2ee099ec6c017b210",
    "patch": "@@ -27,5 +27,5 @@ const (\n \t// SdkName is the human readable name of the SDK for UserAgents.\n \tSdkName = \"Apache Beam SDK for Go\"\n \t// SdkVersion is the current version of the SDK.\n-\tSdkVersion = \"2.29.0.dev\"\n+\tSdkVersion = \"2.30.0.dev\"\n )"
  },
  {
    "sha": "f593e2f5c9d80f3b03e9705f5f5630feceefd1dd",
    "filename": "sdks/java/extensions/google-cloud-platform-core/src/main/java/org/apache/beam/sdk/extensions/gcp/options/GcpOptions.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/apache/beam/blob/914130c59fe4b4250a7129c2ee099ec6c017b210/sdks/java/extensions/google-cloud-platform-core/src/main/java/org/apache/beam/sdk/extensions/gcp/options/GcpOptions.java",
    "raw_url": "https://github.com/apache/beam/raw/914130c59fe4b4250a7129c2ee099ec6c017b210/sdks/java/extensions/google-cloud-platform-core/src/main/java/org/apache/beam/sdk/extensions/gcp/options/GcpOptions.java",
    "contents_url": "https://api.github.com/repos/apache/beam/contents/sdks/java/extensions/google-cloud-platform-core/src/main/java/org/apache/beam/sdk/extensions/gcp/options/GcpOptions.java?ref=914130c59fe4b4250a7129c2ee099ec6c017b210",
    "patch": "@@ -406,7 +406,7 @@ private static long getProjectNumber(\n       try {\n         Project project =\n             ResilientOperation.retry(\n-                ResilientOperation.getGoogleRequestCallable(getProject),\n+                getProject::execute,\n                 backoff,\n                 RetryDeterminer.SOCKET_ERRORS,\n                 IOException.class,"
  },
  {
    "sha": "0e12cd2fe1df45bf56bdc085bb66d13700ea3702",
    "filename": "sdks/java/extensions/google-cloud-platform-core/src/main/java/org/apache/beam/sdk/extensions/gcp/util/GcsUtil.java",
    "status": "modified",
    "additions": 29,
    "deletions": 73,
    "changes": 102,
    "blob_url": "https://github.com/apache/beam/blob/914130c59fe4b4250a7129c2ee099ec6c017b210/sdks/java/extensions/google-cloud-platform-core/src/main/java/org/apache/beam/sdk/extensions/gcp/util/GcsUtil.java",
    "raw_url": "https://github.com/apache/beam/raw/914130c59fe4b4250a7129c2ee099ec6c017b210/sdks/java/extensions/google-cloud-platform-core/src/main/java/org/apache/beam/sdk/extensions/gcp/util/GcsUtil.java",
    "contents_url": "https://api.github.com/repos/apache/beam/contents/sdks/java/extensions/google-cloud-platform-core/src/main/java/org/apache/beam/sdk/extensions/gcp/util/GcsUtil.java?ref=914130c59fe4b4250a7129c2ee099ec6c017b210",
    "patch": "@@ -25,7 +25,6 @@\n import com.google.api.client.googleapis.batch.BatchRequest;\n import com.google.api.client.googleapis.batch.json.JsonBatchCallback;\n import com.google.api.client.googleapis.json.GoogleJsonError;\n-import com.google.api.client.googleapis.json.GoogleJsonResponseException;\n import com.google.api.client.http.HttpHeaders;\n import com.google.api.client.http.HttpRequestInitializer;\n import com.google.api.client.util.BackOff;\n@@ -51,7 +50,6 @@\n import java.nio.channels.SeekableByteChannel;\n import java.nio.channels.WritableByteChannel;\n import java.nio.file.AccessDeniedException;\n-import java.nio.file.FileAlreadyExistsException;\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Iterator;\n@@ -194,7 +192,7 @@ private GcsUtil(\n     this.numRewriteTokensUsed = null;\n     this.shouldUseGrpc = shouldUseGrpc;\n     googleCloudStorageOptions =\n-        GoogleCloudStorageOptions.newBuilder()\n+        GoogleCloudStorageOptions.builder()\n             .setAppName(\"Beam\")\n             .setGrpcEnabled(shouldUseGrpc)\n             .build();\n@@ -288,20 +286,9 @@ StorageObject getObject(GcsPath gcsPath, BackOff backoff, Sleeper sleeper) throw\n         storageClient.objects().get(gcsPath.getBucket(), gcsPath.getObject());\n     try {\n       return ResilientOperation.retry(\n-          ResilientOperation.getGoogleRequestCallable(getObject),\n-          backoff,\n-          RetryDeterminer.SOCKET_ERRORS,\n-          IOException.class,\n-          sleeper);\n-    } catch (IOException | InterruptedException e) {\n-      if (e instanceof InterruptedException) {\n-        Thread.currentThread().interrupt();\n-      }\n-      if (e instanceof IOException && errorExtractor.itemNotFound((IOException) e)) {\n-        throw new FileNotFoundException(gcsPath.toString());\n-      }\n-      throw new IOException(\n-          String.format(\"Unable to get the file object for path %s.\", gcsPath), e);\n+          getObject::execute, backoff, RetryDeterminer.SOCKET_ERRORS, IOException.class, sleeper);\n+    } catch (InterruptedException e) {\n+      throw new IOException(\"Could nog get object\", e);\n     }\n   }\n \n@@ -344,10 +331,7 @@ public Objects listObjects(\n \n     try {\n       return ResilientOperation.retry(\n-          ResilientOperation.getGoogleRequestCallable(listObject),\n-          createBackOff(),\n-          RetryDeterminer.SOCKET_ERRORS,\n-          IOException.class);\n+          listObject::execute, createBackOff(), RetryDeterminer.SOCKET_ERRORS, IOException.class);\n     } catch (Exception e) {\n       throw new IOException(\n           String.format(\"Unable to match files in bucket %s, prefix %s.\", bucket, prefix), e);\n@@ -440,9 +424,13 @@ public WritableByteChannel create(GcsPath path, String type, Integer uploadBuffe\n             .build();\n     GoogleCloudStorage gcpStorage =\n         new GoogleCloudStorageImpl(newGoogleCloudStorageOptions, this.storageClient);\n+\n     return gcpStorage.create(\n         new StorageResourceId(path.getBucket(), path.getObject()),\n-        new CreateObjectOptions(true, type, CreateObjectOptions.EMPTY_METADATA));\n+        CreateObjectOptions.builder()\n+            .setContentType(type)\n+            .setEnsureEmptyObjectsMetadataMatch(true)\n+            .build());\n   }\n \n   /** Returns whether the GCS bucket exists and is accessible. */\n@@ -487,33 +475,18 @@ Bucket getBucket(GcsPath path, BackOff backoff, Sleeper sleeper) throws IOExcept\n \n     try {\n       return ResilientOperation.retry(\n-          ResilientOperation.getGoogleRequestCallable(getBucket),\n+          getBucket::execute,\n           backoff,\n-          new RetryDeterminer<IOException>() {\n-            @Override\n-            public boolean shouldRetry(IOException e) {\n-              if (errorExtractor.itemNotFound(e) || errorExtractor.accessDenied(e)) {\n-                return false;\n-              }\n-              return RetryDeterminer.SOCKET_ERRORS.shouldRetry(e);\n+          e -> {\n+            if (errorExtractor.itemNotFound(e) || errorExtractor.accessDenied(e)) {\n+              return false;\n             }\n+            return RetryDeterminer.SOCKET_ERRORS.shouldRetry(e);\n           },\n           IOException.class,\n           sleeper);\n-    } catch (GoogleJsonResponseException e) {\n-      if (errorExtractor.accessDenied(e)) {\n-        throw new AccessDeniedException(path.toString(), null, e.getMessage());\n-      }\n-      if (errorExtractor.itemNotFound(e)) {\n-        throw new FileNotFoundException(e.getMessage());\n-      }\n-      throw e;\n     } catch (InterruptedException e) {\n-      Thread.currentThread().interrupt();\n-      throw new IOException(\n-          String.format(\n-              \"Error while attempting to verify existence of bucket gs://%s\", path.getBucket()),\n-          e);\n+      throw new IOException(\"Could nog get bucket\", e);\n     }\n   }\n \n@@ -526,35 +499,18 @@ void createBucket(String projectId, Bucket bucket, BackOff backoff, Sleeper slee\n \n     try {\n       ResilientOperation.retry(\n-          ResilientOperation.getGoogleRequestCallable(insertBucket),\n+          insertBucket::execute,\n           backoff,\n-          new RetryDeterminer<IOException>() {\n-            @Override\n-            public boolean shouldRetry(IOException e) {\n-              if (errorExtractor.itemAlreadyExists(e) || errorExtractor.accessDenied(e)) {\n-                return false;\n-              }\n-              return RetryDeterminer.SOCKET_ERRORS.shouldRetry(e);\n+          e -> {\n+            if (errorExtractor.itemAlreadyExists(e) || errorExtractor.accessDenied(e)) {\n+              return false;\n             }\n+            return RetryDeterminer.SOCKET_ERRORS.shouldRetry(e);\n           },\n           IOException.class,\n           sleeper);\n-      return;\n-    } catch (GoogleJsonResponseException e) {\n-      if (errorExtractor.accessDenied(e)) {\n-        throw new AccessDeniedException(bucket.getName(), null, e.getMessage());\n-      }\n-      if (errorExtractor.itemAlreadyExists(e)) {\n-        throw new FileAlreadyExistsException(bucket.getName(), null, e.getMessage());\n-      }\n-      throw e;\n     } catch (InterruptedException e) {\n-      Thread.currentThread().interrupt();\n-      throw new IOException(\n-          String.format(\n-              \"Error while attempting to create bucket gs://%s for rproject %s\",\n-              bucket.getName(), projectId),\n-          e);\n+      throw new IOException(\"Could not create bucket\", e);\n     }\n   }\n \n@@ -570,7 +526,7 @@ private static void executeBatches(List<BatchRequest> batches) throws IOExceptio\n \n     List<CompletionStage<Void>> futures = new ArrayList<>();\n     for (final BatchRequest batch : batches) {\n-      futures.add(MoreFutures.runAsync(() -> batch.execute(), executor));\n+      futures.add(MoreFutures.runAsync(batch::execute, executor));\n     }\n \n     try {\n@@ -618,8 +574,8 @@ private static void executeBatches(List<BatchRequest> batches) throws IOExceptio\n    * round of enqueue() and execute is required. Repeat until getReadyToEnqueue() returns false.\n    */\n   class RewriteOp extends JsonBatchCallback<RewriteResponse> {\n-    private GcsPath from;\n-    private GcsPath to;\n+    private final GcsPath from;\n+    private final GcsPath to;\n     private boolean readyToEnqueue;\n     @VisibleForTesting Storage.Objects.Rewrite rewriteRequest;\n \n@@ -755,15 +711,15 @@ public void remove(Collection<String> filenames) throws IOException {\n         batch,\n         new JsonBatchCallback<StorageObject>() {\n           @Override\n-          public void onSuccess(StorageObject response, HttpHeaders httpHeaders)\n-              throws IOException {\n+          public void onSuccess(StorageObject response, HttpHeaders httpHeaders) {\n             ret[0] = StorageObjectOrIOException.create(response);\n           }\n \n           @Override\n-          public void onFailure(GoogleJsonError e, HttpHeaders httpHeaders) throws IOException {\n+          public void onFailure(GoogleJsonError e, HttpHeaders httpHeaders) {\n             IOException ioException;\n-            if (errorExtractor.itemNotFound(e)) {\n+            if (e.getCode() == 404) {\n+              // We could not find the object\n               ioException = new FileNotFoundException(path.toString());\n             } else {\n               ioException = new IOException(String.format(\"Error trying to get %s: %s\", path, e));"
  },
  {
    "sha": "b6496c74ce79e7290aa5c2bdce3d92295b9dcebb",
    "filename": "sdks/java/extensions/google-cloud-platform-core/src/test/java/org/apache/beam/sdk/extensions/gcp/util/GcsUtilTest.java",
    "status": "modified",
    "additions": 8,
    "deletions": 2,
    "changes": 10,
    "blob_url": "https://github.com/apache/beam/blob/914130c59fe4b4250a7129c2ee099ec6c017b210/sdks/java/extensions/google-cloud-platform-core/src/test/java/org/apache/beam/sdk/extensions/gcp/util/GcsUtilTest.java",
    "raw_url": "https://github.com/apache/beam/raw/914130c59fe4b4250a7129c2ee099ec6c017b210/sdks/java/extensions/google-cloud-platform-core/src/test/java/org/apache/beam/sdk/extensions/gcp/util/GcsUtilTest.java",
    "contents_url": "https://api.github.com/repos/apache/beam/contents/sdks/java/extensions/google-cloud-platform-core/src/test/java/org/apache/beam/sdk/extensions/gcp/util/GcsUtilTest.java?ref=914130c59fe4b4250a7129c2ee099ec6c017b210",
    "patch": "@@ -54,6 +54,8 @@\n import com.google.api.services.storage.model.StorageObject;\n import com.google.cloud.hadoop.gcsio.GoogleCloudStorageReadChannel;\n import com.google.cloud.hadoop.gcsio.GoogleCloudStorageReadOptions;\n+import com.google.cloud.hadoop.gcsio.StorageResourceId;\n+import com.google.cloud.hadoop.util.ApiErrorExtractor;\n import com.google.cloud.hadoop.util.ClientRequestHelper;\n import java.io.ByteArrayInputStream;\n import java.io.FileNotFoundException;\n@@ -399,7 +401,7 @@ public void testFileSizeWhenFileNotFoundNonBatch() throws Exception {\n   }\n \n   @Test\n-  public void testRetryFileSizeNonBatch() throws IOException {\n+  public void testRetryFileSizeNonBatch() throws IOException, InterruptedException {\n     GcsOptions pipelineOptions = gcsOptionsWithTestCredential();\n     GcsUtil gcsUtil = pipelineOptions.getGcsUtil();\n \n@@ -763,7 +765,11 @@ public void testGCSChannelCloseIdempotent() throws IOException {\n         GoogleCloudStorageReadOptions.builder().setFastFailOnNotFound(false).build();\n     SeekableByteChannel channel =\n         new GoogleCloudStorageReadChannel(\n-            null, \"dummybucket\", \"dummyobject\", null, new ClientRequestHelper<>(), readOptions);\n+            null,\n+            StorageResourceId.fromStringPath(\"dummybucket\"),\n+            ApiErrorExtractor.INSTANCE,\n+            new ClientRequestHelper<>(),\n+            readOptions);\n     channel.close();\n     channel.close();\n   }"
  },
  {
    "sha": "bfc924ecbf63626413bf2e5393a9c6e4c6b828a4",
    "filename": "sdks/java/io/google-cloud-platform/src/test/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImplTest.java",
    "status": "modified",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/apache/beam/blob/914130c59fe4b4250a7129c2ee099ec6c017b210/sdks/java/io/google-cloud-platform/src/test/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImplTest.java",
    "raw_url": "https://github.com/apache/beam/raw/914130c59fe4b4250a7129c2ee099ec6c017b210/sdks/java/io/google-cloud-platform/src/test/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImplTest.java",
    "contents_url": "https://api.github.com/repos/apache/beam/contents/sdks/java/io/google-cloud-platform/src/test/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImplTest.java?ref=914130c59fe4b4250a7129c2ee099ec6c017b210",
    "patch": "@@ -962,7 +962,7 @@ public void testCreateTableSucceeds() throws IOException {\n         new BigQueryServicesImpl.DatasetServiceImpl(bigquery, PipelineOptionsFactory.create());\n     Table ret =\n         services.tryCreateTable(\n-            testTable, new RetryBoundedBackOff(0, BackOff.ZERO_BACKOFF), Sleeper.DEFAULT);\n+            testTable, new RetryBoundedBackOff(BackOff.ZERO_BACKOFF, 0), Sleeper.DEFAULT);\n     assertEquals(testTable, ret);\n     verify(response, times(1)).getStatusCode();\n     verify(response, times(1)).getContent();\n@@ -990,7 +990,7 @@ public void testCreateTableDoesNotRetry() throws IOException {\n         new BigQueryServicesImpl.DatasetServiceImpl(bigquery, PipelineOptionsFactory.create());\n     try {\n       services.tryCreateTable(\n-          testTable, new RetryBoundedBackOff(3, BackOff.ZERO_BACKOFF), Sleeper.DEFAULT);\n+          testTable, new RetryBoundedBackOff(BackOff.ZERO_BACKOFF, 3), Sleeper.DEFAULT);\n       fail();\n     } catch (IOException e) {\n       verify(response, times(1)).getStatusCode();\n@@ -1019,7 +1019,7 @@ public void testCreateTableSucceedsAlreadyExists() throws IOException {\n         new BigQueryServicesImpl.DatasetServiceImpl(bigquery, PipelineOptionsFactory.create());\n     Table ret =\n         services.tryCreateTable(\n-            testTable, new RetryBoundedBackOff(0, BackOff.ZERO_BACKOFF), Sleeper.DEFAULT);\n+            testTable, new RetryBoundedBackOff(BackOff.ZERO_BACKOFF, 0), Sleeper.DEFAULT);\n \n     assertNull(ret);\n     verify(response, times(1)).getStatusCode();\n@@ -1045,7 +1045,7 @@ public void testCreateTableRetry() throws IOException {\n         new BigQueryServicesImpl.DatasetServiceImpl(bigquery, PipelineOptionsFactory.create());\n     Table ret =\n         services.tryCreateTable(\n-            testTable, new RetryBoundedBackOff(3, BackOff.ZERO_BACKOFF), Sleeper.DEFAULT);\n+            testTable, new RetryBoundedBackOff(BackOff.ZERO_BACKOFF, 3), Sleeper.DEFAULT);\n     assertEquals(testTable, ret);\n     verify(response, times(2)).getStatusCode();\n     verify(response, times(2)).getContent();"
  },
  {
    "sha": "91b417edfbaa4521f6bbea82949758bcb45d4465",
    "filename": "sdks/python/apache_beam/version.py",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/apache/beam/blob/914130c59fe4b4250a7129c2ee099ec6c017b210/sdks/python/apache_beam/version.py",
    "raw_url": "https://github.com/apache/beam/raw/914130c59fe4b4250a7129c2ee099ec6c017b210/sdks/python/apache_beam/version.py",
    "contents_url": "https://api.github.com/repos/apache/beam/contents/sdks/python/apache_beam/version.py?ref=914130c59fe4b4250a7129c2ee099ec6c017b210",
    "patch": "@@ -17,4 +17,4 @@\n \n \"\"\"Apache Beam SDK version information and utilities.\"\"\"\n \n-__version__ = '2.29.0.dev'\n+__version__ = '2.30.0.dev'"
  }
]
