[
  {
    "sha": "d74336d724c1aa3a48fc058a83a74d5271be6071",
    "filename": "enforcer-rules/src/main/java/org/apache/maven/plugins/enforcer/RequireUpperBoundDeps.java",
    "status": "modified",
    "additions": 21,
    "deletions": 21,
    "changes": 42,
    "blob_url": "https://github.com/apache/maven-enforcer/blob/e48ef741173c57fa1b43a960db107b40cff49536/enforcer-rules/src/main/java/org/apache/maven/plugins/enforcer/RequireUpperBoundDeps.java",
    "raw_url": "https://github.com/apache/maven-enforcer/raw/e48ef741173c57fa1b43a960db107b40cff49536/enforcer-rules/src/main/java/org/apache/maven/plugins/enforcer/RequireUpperBoundDeps.java",
    "contents_url": "https://api.github.com/repos/apache/maven-enforcer/contents/enforcer-rules/src/main/java/org/apache/maven/plugins/enforcer/RequireUpperBoundDeps.java?ref=e48ef741173c57fa1b43a960db107b40cff49536",
    "patch": "@@ -157,23 +157,16 @@ public void execute( EnforcerRuleHelper helper )\n         {\n             log = helper.getLog();\n         }\n-        try\n-        {\n-            DependencyNode node = getNode( helper );\n-            RequireUpperBoundDepsVisitor visitor = new RequireUpperBoundDepsVisitor();\n-            visitor.setUniqueVersions( uniqueVersions );\n-            visitor.setIncludes( includes );\n-            node.accept( visitor );\n-            List<String> errorMessages = buildErrorMessages( visitor.getConflicts() );\n-            if ( errorMessages.size() > 0 )\n-            {\n-                throw new EnforcerRuleException( \"Failed while enforcing RequireUpperBoundDeps. The error(s) are \"\n-                    + errorMessages );\n-            }\n-        }\n-        catch ( Exception e )\n+        DependencyNode node = getNode( helper );\n+        RequireUpperBoundDepsVisitor visitor = new RequireUpperBoundDepsVisitor();\n+        visitor.setUniqueVersions( uniqueVersions );\n+        visitor.setIncludes( includes );\n+        node.accept( visitor );\n+        List<String> errorMessages = buildErrorMessages( visitor.getConflicts() );\n+        if ( errorMessages.size() > 0 )\n         {\n-            throw new EnforcerRuleException( e.getLocalizedMessage(), e );\n+            throw new EnforcerRuleException( \"Failed while enforcing RequireUpperBoundDeps. The error(s) are \"\n+                + errorMessages );\n         }\n     }\n \n@@ -256,15 +249,22 @@ private String getFullArtifactName( DependencyNode node, boolean usePremanaged )\n         }\n         String result = artifact.getGroupId() + \":\" + artifact.getArtifactId() + \":\" + version;\n \n-        if ( \"compile\".equals( artifact.getScope() ) )\n+        String classifier = artifact.getClassifier();\n+        if ( classifier != null && !classifier.isEmpty() )\n         {\n-            return MessageUtils.buffer().strong( result ).toString();\n+            result += \":\" + classifier;\n         }\n-        if ( artifact.getScope() != null )\n+  \n+        String scope = artifact.getScope();      \n+        if ( \"compile\".equals( scope ) )\n         {\n-            return result + \" [\" + artifact.getScope() + ']';\n+            result = MessageUtils.buffer().strong( result ).toString();\n         }\n-\n+        else if ( scope != null )\n+        {\n+            result += \" [\" + scope + ']';\n+        }\n+        \n         return result;\n     }\n "
  },
  {
    "sha": "5a4f086401fc1f29f8f895250565fba6b73ad410",
    "filename": "enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/EnforcerTestUtils.java",
    "status": "modified",
    "additions": 47,
    "deletions": 1,
    "changes": 48,
    "blob_url": "https://github.com/apache/maven-enforcer/blob/e48ef741173c57fa1b43a960db107b40cff49536/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/EnforcerTestUtils.java",
    "raw_url": "https://github.com/apache/maven-enforcer/raw/e48ef741173c57fa1b43a960db107b40cff49536/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/EnforcerTestUtils.java",
    "contents_url": "https://api.github.com/repos/apache/maven-enforcer/contents/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/EnforcerTestUtils.java?ref=e48ef741173c57fa1b43a960db107b40cff49536",
    "patch": "@@ -24,6 +24,14 @@\n \n import java.util.Properties;\n \n+import org.apache.maven.artifact.Artifact;\n+import org.apache.maven.artifact.DefaultArtifact;\n+import org.apache.maven.artifact.factory.ArtifactFactory;\n+import org.apache.maven.artifact.handler.ArtifactHandler;\n+import org.apache.maven.artifact.metadata.ArtifactMetadataSource;\n+import org.apache.maven.artifact.repository.ArtifactRepository;\n+import org.apache.maven.artifact.resolver.ArtifactCollector;\n+import org.apache.maven.artifact.resolver.filter.ArtifactFilter;\n import org.apache.maven.enforcer.rule.api.EnforcerRuleHelper;\n import org.apache.maven.execution.MavenExecutionRequest;\n import org.apache.maven.execution.MavenExecutionResult;\n@@ -34,8 +42,16 @@\n import org.apache.maven.plugin.logging.SystemStreamLog;\n import org.apache.maven.plugins.enforcer.utils.MockEnforcerExpressionEvaluator;\n import org.apache.maven.project.MavenProject;\n+import org.apache.maven.shared.dependency.tree.DefaultDependencyTreeBuilder;\n+import org.apache.maven.shared.dependency.tree.DependencyNode;\n+import org.apache.maven.shared.dependency.tree.DependencyTreeBuilder;\n+import org.apache.maven.shared.dependency.tree.DependencyTreeBuilderException;\n import org.codehaus.plexus.PlexusContainer;\n import org.codehaus.plexus.component.configurator.expression.ExpressionEvaluator;\n+import org.codehaus.plexus.component.repository.exception.ComponentLookupException;\n+import org.mockito.ArgumentMatchers;\n+import org.mockito.Matchers;\n+import org.mockito.Mockito;\n \n /**\n  * The Class EnforcerTestUtils.\n@@ -117,7 +133,37 @@ public static EnforcerRuleHelper getHelper( MavenProject project, boolean mockEx\n             session.setCurrentProject( project );\n             eval = new PluginParameterExpressionEvaluator( session, mockExecution );\n         }\n-        return new DefaultEnforcementRuleHelper( session, eval, new SystemStreamLog(), null );\n+        PlexusContainer container = Mockito.mock( PlexusContainer.class );\n+        \n+        Artifact artifact = new DefaultArtifact( \"groupId\", \"artifactId\", \"version\", \"compile\", \"jar\",\n+                                                 \"classifier\", null );\n+        Artifact v1 = new DefaultArtifact( \"groupId\", \"artifact\", \"1.0.0\", \"compile\", \"jar\", \"\", null );\n+        Artifact v2 = new DefaultArtifact( \"groupId\", \"artifact\", \"2.0.0\", \"compile\", \"jar\", \"\", null );\n+        final DependencyNode node = new DependencyNode( artifact );\n+        DependencyNode child1 = new DependencyNode( v1 );\n+        DependencyNode child2 = new DependencyNode( v2 );\n+        node.addChild( child1 );\n+        node.addChild( child2 );\n+        \n+        DependencyTreeBuilder dependencyTreeBuilder = new DefaultDependencyTreeBuilder() {\n+            @Override\n+            public DependencyNode buildDependencyTree( MavenProject project, ArtifactRepository repository,\n+                   ArtifactFactory factory, ArtifactMetadataSource metadataSource,\n+                   ArtifactFilter filter, ArtifactCollector collector )\n+                throws DependencyTreeBuilderException {\n+                 return node;\n+            }\n+        };\n+\n+        try\n+        {\n+            Mockito.when( container.lookup( DependencyTreeBuilder.class ) ).thenReturn( dependencyTreeBuilder  );\n+        }\n+        catch ( ComponentLookupException e )\n+        {\n+            // test will fail\n+        }\n+        return new DefaultEnforcementRuleHelper( session, eval, new SystemStreamLog(), container );\n     }\n \n     /**"
  },
  {
    "sha": "621373ff41d7403ceae5bab01f4b4cf4fddd07c4",
    "filename": "enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/RequireUpperBoundDepsTest.java",
    "status": "added",
    "additions": 54,
    "deletions": 0,
    "changes": 54,
    "blob_url": "https://github.com/apache/maven-enforcer/blob/e48ef741173c57fa1b43a960db107b40cff49536/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/RequireUpperBoundDepsTest.java",
    "raw_url": "https://github.com/apache/maven-enforcer/raw/e48ef741173c57fa1b43a960db107b40cff49536/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/RequireUpperBoundDepsTest.java",
    "contents_url": "https://api.github.com/repos/apache/maven-enforcer/contents/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/RequireUpperBoundDepsTest.java?ref=e48ef741173c57fa1b43a960db107b40cff49536",
    "patch": "@@ -0,0 +1,54 @@\n+package org.apache.maven.plugins.enforcer;\n+\n+import org.junit.Assert;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import org.junit.Test;\n+\n+import java.io.IOException;\n+\n+import org.apache.maven.enforcer.rule.api.EnforcerRuleException;\n+import org.apache.maven.enforcer.rule.api.EnforcerRuleHelper;\n+import org.apache.maven.plugin.testing.ArtifactStubFactory;\n+\n+public class RequireUpperBoundDepsTest\n+{\n+\n+    @Test\n+    public void testRule() throws IOException\n+    {\n+        ArtifactStubFactory factory = new ArtifactStubFactory();\n+        MockProject project = new MockProject();\n+        EnforcerRuleHelper helper = EnforcerTestUtils.getHelper( project );\n+        project.setArtifacts( factory.getMixedArtifacts() );\n+        project.setDependencyArtifacts( factory.getScopedArtifacts() );\n+        RequireUpperBoundDeps rule = new RequireUpperBoundDeps();\n+\n+        try {\n+          rule.execute( helper );\n+          Assert.fail(\"Did not detect upper bounds error\");\n+        }\n+        catch ( EnforcerRuleException ex ) {\n+            Assert.assertTrue( ex.getMessage(), ex.getMessage().contains( \"groupId:artifactId:version:classifier\" ) );\n+        }\n+    }\n+\n+}"
  },
  {
    "sha": "1600b9b0b18c59cd8b0988d3874d6119fb94683b",
    "filename": "enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/utils/EnforcerRuleUtilsHelper.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/apache/maven-enforcer/blob/e48ef741173c57fa1b43a960db107b40cff49536/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/utils/EnforcerRuleUtilsHelper.java",
    "raw_url": "https://github.com/apache/maven-enforcer/raw/e48ef741173c57fa1b43a960db107b40cff49536/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/utils/EnforcerRuleUtilsHelper.java",
    "contents_url": "https://api.github.com/repos/apache/maven-enforcer/contents/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/utils/EnforcerRuleUtilsHelper.java?ref=e48ef741173c57fa1b43a960db107b40cff49536",
    "patch": "@@ -54,7 +54,7 @@ public static void execute( EnforcerRule rule, EnforcerRuleHelper helper, boolea\n         {\n             if ( !shouldFail )\n             {\n-                fail( \"No Exception expected:\" + e.getLocalizedMessage() );\n+                fail( \"No Exception expected:\" + e.getMessage() );\n             }\n             helper.getLog().debug( e.getMessage() );\n         }"
  }
]
