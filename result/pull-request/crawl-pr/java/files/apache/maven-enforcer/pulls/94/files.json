[
  {
    "sha": "2dbfc3f17b1ba01a9383eb3af77fc7579ec73788",
    "filename": "enforcer-rules/src/main/java/org/apache/maven/plugins/enforcer/AbstractVersionEnforcer.java",
    "status": "modified",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/apache/maven-enforcer/blob/1d28e5dac4c3fc82812cc3e003b68e8b0f3332b4/enforcer-rules/src/main/java/org/apache/maven/plugins/enforcer/AbstractVersionEnforcer.java",
    "raw_url": "https://github.com/apache/maven-enforcer/raw/1d28e5dac4c3fc82812cc3e003b68e8b0f3332b4/enforcer-rules/src/main/java/org/apache/maven/plugins/enforcer/AbstractVersionEnforcer.java",
    "contents_url": "https://api.github.com/repos/apache/maven-enforcer/contents/enforcer-rules/src/main/java/org/apache/maven/plugins/enforcer/AbstractVersionEnforcer.java?ref=1d28e5dac4c3fc82812cc3e003b68e8b0f3332b4",
    "patch": "@@ -130,7 +130,6 @@ public static boolean containsVersion( VersionRange allowedRange, ArtifactVersio\n         else\n         {\n             // only singular versions ever have a recommendedVersion\n-            @SuppressWarnings( \"unchecked\" )\n             int compareTo = recommendedVersion.compareTo( theVersion );\n             return ( compareTo <= 0 );\n         }"
  },
  {
    "sha": "71d8e5bc4b9a4b0ef1acbb59854c965f837a890e",
    "filename": "enforcer-rules/src/main/java/org/apache/maven/plugins/enforcer/ReactorModuleConvergence.java",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/apache/maven-enforcer/blob/1d28e5dac4c3fc82812cc3e003b68e8b0f3332b4/enforcer-rules/src/main/java/org/apache/maven/plugins/enforcer/ReactorModuleConvergence.java",
    "raw_url": "https://github.com/apache/maven-enforcer/raw/1d28e5dac4c3fc82812cc3e003b68e8b0f3332b4/enforcer-rules/src/main/java/org/apache/maven/plugins/enforcer/ReactorModuleConvergence.java",
    "contents_url": "https://api.github.com/repos/apache/maven-enforcer/contents/enforcer-rules/src/main/java/org/apache/maven/plugins/enforcer/ReactorModuleConvergence.java?ref=1d28e5dac4c3fc82812cc3e003b68e8b0f3332b4",
    "patch": "@@ -25,7 +25,6 @@\n import java.util.Map;\r\n import java.util.Map.Entry;\r\n \r\n-import org.apache.commons.lang3.SystemUtils;\r\n import org.apache.maven.enforcer.rule.api.EnforcerRuleException;\r\n import org.apache.maven.enforcer.rule.api.EnforcerRuleHelper;\r\n import org.apache.maven.execution.MavenSession;\r\n@@ -88,7 +87,7 @@ private void checkParentsPartOfTheReactor( List<MavenProject> sortedProjects )\n             existParentsWhichAreNotPartOfTheReactor( sortedProjects );\r\n         if ( !parentsWhichAreNotPartOfTheReactor.isEmpty() )\r\n         {\r\n-            StringBuilder sb = new StringBuilder().append( SystemUtils.LINE_SEPARATOR );\r\n+            StringBuilder sb = new StringBuilder().append( System.lineSeparator() );\r\n             addMessageIfExist( sb );\r\n             for ( MavenProject mavenProject : parentsWhichAreNotPartOfTheReactor )\r\n             {\r"
  },
  {
    "sha": "1ca890d3ce2a3c4fd4b512ccb985321df892a2bc",
    "filename": "enforcer-rules/src/main/java/org/apache/maven/plugins/enforcer/RequireFileChecksum.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/apache/maven-enforcer/blob/1d28e5dac4c3fc82812cc3e003b68e8b0f3332b4/enforcer-rules/src/main/java/org/apache/maven/plugins/enforcer/RequireFileChecksum.java",
    "raw_url": "https://github.com/apache/maven-enforcer/raw/1d28e5dac4c3fc82812cc3e003b68e8b0f3332b4/enforcer-rules/src/main/java/org/apache/maven/plugins/enforcer/RequireFileChecksum.java",
    "contents_url": "https://api.github.com/repos/apache/maven-enforcer/contents/enforcer-rules/src/main/java/org/apache/maven/plugins/enforcer/RequireFileChecksum.java?ref=1d28e5dac4c3fc82812cc3e003b68e8b0f3332b4",
    "patch": "@@ -164,7 +164,7 @@ protected String calculateChecksum( InputStream inputStream )\n         }\n         else if ( \"sha1\".equals( this.type ) )\n         {\n-            checksum = DigestUtils.shaHex( inputStream );\n+            checksum = DigestUtils.sha1Hex( inputStream );\n         }\n         else if ( \"sha256\".equals( this.type ) )\n         {"
  },
  {
    "sha": "9dffb3bb1f41264c4b9ee7e6ec612f7822263ea9",
    "filename": "enforcer-rules/src/main/java/org/apache/maven/plugins/enforcer/RequireUpperBoundDeps.java",
    "status": "modified",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/apache/maven-enforcer/blob/1d28e5dac4c3fc82812cc3e003b68e8b0f3332b4/enforcer-rules/src/main/java/org/apache/maven/plugins/enforcer/RequireUpperBoundDeps.java",
    "raw_url": "https://github.com/apache/maven-enforcer/raw/1d28e5dac4c3fc82812cc3e003b68e8b0f3332b4/enforcer-rules/src/main/java/org/apache/maven/plugins/enforcer/RequireUpperBoundDeps.java",
    "contents_url": "https://api.github.com/repos/apache/maven-enforcer/contents/enforcer-rules/src/main/java/org/apache/maven/plugins/enforcer/RequireUpperBoundDeps.java?ref=1d28e5dac4c3fc82812cc3e003b68e8b0f3332b4",
    "patch": "@@ -332,7 +332,6 @@ public boolean endVisit( DependencyNode node )\n             return output;\n         }\n \n-        @SuppressWarnings( \"unchecked\" )\n         private boolean containsConflicts( List<DependencyNodeHopCountPair> pairs )\n         {\n             DependencyNodeHopCountPair resolvedPair = pairs.get( 0 );"
  },
  {
    "sha": "6d13ce36b99452487855f19748cc2cc40ffda609",
    "filename": "enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/BannedDependenciesTestSetup.java",
    "status": "modified",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/apache/maven-enforcer/blob/1d28e5dac4c3fc82812cc3e003b68e8b0f3332b4/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/BannedDependenciesTestSetup.java",
    "raw_url": "https://github.com/apache/maven-enforcer/raw/1d28e5dac4c3fc82812cc3e003b68e8b0f3332b4/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/BannedDependenciesTestSetup.java",
    "contents_url": "https://api.github.com/repos/apache/maven-enforcer/contents/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/BannedDependenciesTestSetup.java?ref=1d28e5dac4c3fc82812cc3e003b68e8b0f3332b4",
    "patch": "@@ -92,7 +92,6 @@ private BannedDependencies newBannedDependenciesRule()\n     {\n         BannedDependencies rule = new BannedDependencies()\n         {\n-            @SuppressWarnings( \"unchecked\" )\n             @Override\n             protected Set<Artifact> getDependenciesToCheck( MavenProject project )\n             {"
  },
  {
    "sha": "06e3539ef2bb774536c62fadf10fd97dc34ebcfe",
    "filename": "enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/ReactorModuleConvergenceTest.java",
    "status": "modified",
    "additions": 0,
    "deletions": 15,
    "changes": 15,
    "blob_url": "https://github.com/apache/maven-enforcer/blob/1d28e5dac4c3fc82812cc3e003b68e8b0f3332b4/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/ReactorModuleConvergenceTest.java",
    "raw_url": "https://github.com/apache/maven-enforcer/raw/1d28e5dac4c3fc82812cc3e003b68e8b0f3332b4/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/ReactorModuleConvergenceTest.java",
    "contents_url": "https://api.github.com/repos/apache/maven-enforcer/contents/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/ReactorModuleConvergenceTest.java?ref=1d28e5dac4c3fc82812cc3e003b68e8b0f3332b4",
    "patch": "@@ -77,9 +77,6 @@ public void shouldNotFailWithNoProject()\n         setupSortedProjects( Collections.<MavenProject>emptyList() );\n \n         rule.execute( helper );\n-\n-        // intentionally only assertTrue cause we don't expect an exception.\n-        assertTrue( true );\n     }\n \n     @Test\n@@ -94,9 +91,6 @@ public void shouldNotFailWithAValidProject()\n         setupSortedProjects( theList );\n \n         rule.execute( helper );\n-\n-        // intentionally only assertTrue cause we don't expect an exception.\n-        assertTrue( true );\n     }\n \n     @Test( expected = EnforcerRuleException.class )\n@@ -153,9 +147,6 @@ public void shouldNotFailWithACompanyParent()\n         setupSortedProjects( theList );\n \n         rule.execute( helper );\n-\n-        // intentionally only assertTrue cause we don't expect an exception.\n-        assertTrue( true );\n     }\n \n     @Test( expected = EnforcerRuleException.class )\n@@ -170,9 +161,6 @@ public void shouldFailWithMissingParentsInReactory()\n         setupSortedProjects( theList );\n \n         rule.execute( helper );\n-\n-        // intentionally only assertTrue cause we don't expect an exception.\n-        assertTrue( true );\n     }\n \n     @Test( expected = EnforcerRuleException.class )\n@@ -219,9 +207,6 @@ public void shouldNotFailWithDependencyInReactory()\n         setupSortedProjects( theList );\n \n         rule.execute( helper );\n-\n-        // intentionally no assertTrue() cause we do not expect to get an exception.\n-        assertTrue( true );\n     }\n \n     @Test( expected = EnforcerRuleException.class )"
  },
  {
    "sha": "f3121191fc8efe7fc1c6988a7f88bf90e2c88e94",
    "filename": "enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/RequireActiveProfileTest.java",
    "status": "modified",
    "additions": 0,
    "deletions": 5,
    "changes": 5,
    "blob_url": "https://github.com/apache/maven-enforcer/blob/1d28e5dac4c3fc82812cc3e003b68e8b0f3332b4/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/RequireActiveProfileTest.java",
    "raw_url": "https://github.com/apache/maven-enforcer/raw/1d28e5dac4c3fc82812cc3e003b68e8b0f3332b4/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/RequireActiveProfileTest.java",
    "contents_url": "https://api.github.com/repos/apache/maven-enforcer/contents/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/RequireActiveProfileTest.java?ref=1d28e5dac4c3fc82812cc3e003b68e8b0f3332b4",
    "patch": "@@ -65,8 +65,6 @@ public void testNoActiveProfilesInProjectAndNoProfilesExpectedToBeActivated()\n         when( project.getActiveProfiles() ).thenReturn( Collections.<Profile> emptyList() );\n \n         rule.execute( helper );\n-\n-        assertTrue( true );\n     }\n \n     @Test\n@@ -80,7 +78,6 @@ public void testActiveProfileAndExpectedActiveProfile()\n         rule.setProfiles( \"profile-2\" );\n \n         rule.execute( helper );\n-        assertTrue( true );\n     }\n \n     @Test( expected = EnforcerRuleException.class )\n@@ -119,7 +116,6 @@ public void testTwoActiveProfilesWithOneRequiredProfile()\n         rule.setProfiles( \"profile-2\" );\n \n         rule.execute( helper );\n-        assertTrue( true );\n     }\n \n     @Test\n@@ -134,7 +130,6 @@ public void testTwoActiveProfilesWhereOneProfileIsRequiredToBeActivated()\n         rule.setAll( true );\n \n         rule.execute( helper );\n-        assertTrue( true );\n     }\n \n     @Test( expected = EnforcerRuleException.class )"
  },
  {
    "sha": "f024432e082cfeb5c7fbe15f37ed69e2734cab0f",
    "filename": "enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/TestAlwaysFail.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/apache/maven-enforcer/blob/1d28e5dac4c3fc82812cc3e003b68e8b0f3332b4/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/TestAlwaysFail.java",
    "raw_url": "https://github.com/apache/maven-enforcer/raw/1d28e5dac4c3fc82812cc3e003b68e8b0f3332b4/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/TestAlwaysFail.java",
    "contents_url": "https://api.github.com/repos/apache/maven-enforcer/contents/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/TestAlwaysFail.java?ref=1d28e5dac4c3fc82812cc3e003b68e8b0f3332b4",
    "patch": "@@ -42,7 +42,7 @@ public void testExecute()\n         }\n         catch ( EnforcerRuleException e )\n         {\n-            assertTrue( true );\n+            assertNotNull( e.getMessage() );\n         }\n     }\n "
  },
  {
    "sha": "a9838733143d61d84b9b7d73a55992c9749d2cc0",
    "filename": "enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/TestAlwaysPass.java",
    "status": "modified",
    "additions": 3,
    "deletions": 12,
    "changes": 15,
    "blob_url": "https://github.com/apache/maven-enforcer/blob/1d28e5dac4c3fc82812cc3e003b68e8b0f3332b4/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/TestAlwaysPass.java",
    "raw_url": "https://github.com/apache/maven-enforcer/raw/1d28e5dac4c3fc82812cc3e003b68e8b0f3332b4/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/TestAlwaysPass.java",
    "contents_url": "https://api.github.com/repos/apache/maven-enforcer/contents/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/TestAlwaysPass.java?ref=1d28e5dac4c3fc82812cc3e003b68e8b0f3332b4",
    "patch": "@@ -31,19 +31,10 @@\n public class TestAlwaysPass extends TestCase\n {\n \n-    public void testExecute()\n+    public void testExecute() throws EnforcerRuleException\n     {\n-        final AlwaysPass rule = new AlwaysPass();\n-        try\n-        {\n-            // execute rule -- should NOT throw EnforcerRuleException\n-            rule.execute( EnforcerTestUtils.getHelper() );\n-            assertTrue( true );\n-        }\n-        catch ( EnforcerRuleException e )\n-        {\n-            fail( \"Should NOT throw EnforcerRuleException\" );\n-        }\n+        AlwaysPass rule = new AlwaysPass();\n+        rule.execute( EnforcerTestUtils.getHelper() );\n     }\n \n }"
  },
  {
    "sha": "e54c5df4beb80d51b6129e7ae558b7130bde7a32",
    "filename": "enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/TestMavenVersion.java",
    "status": "modified",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/apache/maven-enforcer/blob/1d28e5dac4c3fc82812cc3e003b68e8b0f3332b4/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/TestMavenVersion.java",
    "raw_url": "https://github.com/apache/maven-enforcer/raw/1d28e5dac4c3fc82812cc3e003b68e8b0f3332b4/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/TestMavenVersion.java",
    "contents_url": "https://api.github.com/repos/apache/maven-enforcer/contents/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/TestMavenVersion.java?ref=1d28e5dac4c3fc82812cc3e003b68e8b0f3332b4",
    "patch": "@@ -24,7 +24,6 @@\n \n import org.apache.maven.execution.MavenSession;\n import org.codehaus.plexus.component.configurator.expression.ExpressionEvaluationException;\n-import org.junit.Assert;\n import org.junit.Test;\n \n import java.util.Properties;"
  },
  {
    "sha": "c7075ce6023777ff534fbcec0c725e0bbb6d4afe",
    "filename": "enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/TestRequireFileChecksum.java",
    "status": "modified",
    "additions": 0,
    "deletions": 2,
    "changes": 2,
    "blob_url": "https://github.com/apache/maven-enforcer/blob/1d28e5dac4c3fc82812cc3e003b68e8b0f3332b4/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/TestRequireFileChecksum.java",
    "raw_url": "https://github.com/apache/maven-enforcer/raw/1d28e5dac4c3fc82812cc3e003b68e8b0f3332b4/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/TestRequireFileChecksum.java",
    "contents_url": "https://api.github.com/repos/apache/maven-enforcer/contents/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/TestRequireFileChecksum.java?ref=1d28e5dac4c3fc82812cc3e003b68e8b0f3332b4",
    "patch": "@@ -21,10 +21,8 @@\n \n import java.io.File;\n import java.io.IOException;\n-import java.nio.charset.StandardCharsets;\n \n import org.apache.maven.enforcer.rule.api.EnforcerRuleException;\n-import org.apache.maven.plugins.enforcer.utils.NormalizeLineSeparatorReader.LineSeparator;\n import org.codehaus.plexus.util.FileUtils;\n import org.junit.Rule;\n import org.junit.Test;"
  },
  {
    "sha": "684a6adc66d5e4cd95b3525c6a55b9989db36869",
    "filename": "enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/TestRequireFilesDontExist.java",
    "status": "modified",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/apache/maven-enforcer/blob/1d28e5dac4c3fc82812cc3e003b68e8b0f3332b4/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/TestRequireFilesDontExist.java",
    "raw_url": "https://github.com/apache/maven-enforcer/raw/1d28e5dac4c3fc82812cc3e003b68e8b0f3332b4/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/TestRequireFilesDontExist.java",
    "contents_url": "https://api.github.com/repos/apache/maven-enforcer/contents/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/TestRequireFilesDontExist.java?ref=1d28e5dac4c3fc82812cc3e003b68e8b0f3332b4",
    "patch": "@@ -51,7 +51,7 @@ public void testFileExists()\n         }\r\n         catch ( EnforcerRuleException e )\r\n         {\r\n-            assertTrue( true );\r\n+            assertNotNull( e.getMessage() );\r\n         }\r\n         f.delete();\r\n     }\r\n@@ -67,7 +67,7 @@ public void testEmptyFile()\n         }\r\n         catch ( EnforcerRuleException e )\r\n         {\r\n-            assertTrue( true );\r\n+            assertNotNull( e.getMessage() );\r\n         }\r\n     }\r\n \r\n@@ -98,7 +98,7 @@ public void testEmptyFileList()\n         }\r\n         catch ( EnforcerRuleException e )\r\n         {\r\n-            assertTrue( true );\r\n+            assertNotNull( e.getMessage() );\r\n         }\r\n     }\r\n \r\n@@ -124,7 +124,7 @@ public void testFileDoesNotExist()\n         File f = File.createTempFile( \"enforcer\", \"tmp\" );\r\n         f.delete();\r\n \r\n-        assertTrue( !f.exists() );\r\n+        assertFalse( f.exists() );\r\n \r\n         rule.setFiles( new File[] { f } );\r\n \r"
  },
  {
    "sha": "efb7195878a2b27b7db2fc13816f899a7a9b4da4",
    "filename": "enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/TestRequireFilesExist.java",
    "status": "modified",
    "additions": 6,
    "deletions": 20,
    "changes": 26,
    "blob_url": "https://github.com/apache/maven-enforcer/blob/1d28e5dac4c3fc82812cc3e003b68e8b0f3332b4/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/TestRequireFilesExist.java",
    "raw_url": "https://github.com/apache/maven-enforcer/raw/1d28e5dac4c3fc82812cc3e003b68e8b0f3332b4/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/TestRequireFilesExist.java",
    "contents_url": "https://api.github.com/repos/apache/maven-enforcer/contents/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/TestRequireFilesExist.java?ref=1d28e5dac4c3fc82812cc3e003b68e8b0f3332b4",
    "patch": "@@ -60,7 +60,7 @@ public void testEmptyFile()\n         }\n         catch ( EnforcerRuleException e )\n         {\n-            assertTrue( true );\n+            assertNotNull( e.getMessage() );\n         }\n     }\n \n@@ -69,14 +69,7 @@ public void testEmptyFileAllowNull()\n     {\n         rule.setFiles( new File[] { null } );\n         rule.setAllowNulls( true );\n-        try\n-        {\n-            rule.execute( EnforcerTestUtils.getHelper() );\n-        }\n-        catch ( EnforcerRuleException e )\n-        {\n-            fail( \"Unexpected Exception:\" + e.getLocalizedMessage() );\n-        }\n+        rule.execute( EnforcerTestUtils.getHelper() );\n     }\n \n     public void testEmptyFileList()\n@@ -91,7 +84,7 @@ public void testEmptyFileList()\n         }\n         catch ( EnforcerRuleException e )\n         {\n-            assertTrue( true );\n+            assertNotNull( e.getMessage() );\n         }\n     }\n \n@@ -101,22 +94,15 @@ public void testEmptyFileListAllowNull()\n         rule.setFiles( new File[] {} );\n         assertEquals( 0, rule.getFiles().length );\n         rule.setAllowNulls( true );\n-        try\n-        {\n-            rule.execute( EnforcerTestUtils.getHelper() );\n-        }\n-        catch ( EnforcerRuleException e )\n-        {\n-            fail( \"Unexpected Exception:\" + e.getLocalizedMessage() );\n-        }\n+        rule.execute( EnforcerTestUtils.getHelper() );\n     }\n \n     public void testFileDoesNotExist()\n         throws EnforcerRuleException, IOException\n     {\n         File f = File.createTempFile( \"enforcer\", \"tmp\" );\n         f.delete();\n-        assertTrue( !f.exists() );\n+        assertFalse( f.exists() );\n         rule.setFiles( new File[] { f } );\n \n         try\n@@ -126,7 +112,7 @@ public void testFileDoesNotExist()\n         }\n         catch ( EnforcerRuleException e )\n         {\n-            assertTrue( true );\n+            assertNotNull( e.getMessage() );\n         }\n     }\n "
  },
  {
    "sha": "23e1b95d38f9a296aff627c33eddd8cd0a13bf2a",
    "filename": "enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/TestRequireFilesSize.java",
    "status": "modified",
    "additions": 9,
    "deletions": 26,
    "changes": 35,
    "blob_url": "https://github.com/apache/maven-enforcer/blob/1d28e5dac4c3fc82812cc3e003b68e8b0f3332b4/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/TestRequireFilesSize.java",
    "raw_url": "https://github.com/apache/maven-enforcer/raw/1d28e5dac4c3fc82812cc3e003b68e8b0f3332b4/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/TestRequireFilesSize.java",
    "contents_url": "https://api.github.com/repos/apache/maven-enforcer/contents/enforcer-rules/src/test/java/org/apache/maven/plugins/enforcer/TestRequireFilesSize.java?ref=1d28e5dac4c3fc82812cc3e003b68e8b0f3332b4",
    "patch": "@@ -64,7 +64,7 @@ public void testEmptyFile()\n         }\r\n         catch ( EnforcerRuleException e )\r\n         {\r\n-            assertTrue( true );\r\n+            assertNotNull( e.getMessage() );\r\n         }\r\n     }\r\n \r\n@@ -73,14 +73,7 @@ public void testEmptyFileAllowNull()\n     {\r\n         rule.setFiles( new File[] { null } );\r\n         rule.setAllowNulls( true );\r\n-        try\r\n-        {\r\n-            rule.execute( EnforcerTestUtils.getHelper() );\r\n-        }\r\n-        catch ( EnforcerRuleException e )\r\n-        {\r\n-            fail( \"Unexpected Exception:\" + e.getLocalizedMessage() );\r\n-        }\r\n+        rule.execute( EnforcerTestUtils.getHelper() );\r\n     }\r\n \r\n     public void testEmptyFileList()\r\n@@ -111,7 +104,7 @@ public void testFileDoesNotExist()\n     {\r\n         File f = File.createTempFile( \"enforcer\", \"tmp\" );\r\n         f.delete();\r\n-        assertTrue( !f.exists() );\r\n+        assertFalse( f.exists() );\r\n         rule.setFiles( new File[] { f } );\r\n \r\n         try\r\n@@ -121,7 +114,7 @@ public void testFileDoesNotExist()\n         }\r\n         catch ( EnforcerRuleException e )\r\n         {\r\n-            assertTrue( true );\r\n+            assertNotNull( e.getMessage() );\r\n         }\r\n     }\r\n \r\n@@ -139,28 +132,18 @@ public void testFileTooSmall()\n         }\r\n         catch ( EnforcerRuleException e )\r\n         {\r\n-            assertTrue( true );\r\n+            assertNotNull( e.getMessage() );\r\n         }\r\n     }\r\n \r\n     public void testFileTooBig()\r\n-        throws EnforcerRuleException, IOException\r\n+        throws IOException\r\n     {\r\n         File f = File.createTempFile( \"enforcer\", \"tmp\" );\r\n         f.deleteOnExit();\r\n-        try\r\n-        {\r\n-            // Create file\r\n-            FileWriter fstream = new FileWriter( f );\r\n-            BufferedWriter out = new BufferedWriter( fstream );\r\n+        try ( BufferedWriter out = new BufferedWriter( new FileWriter( f ) ) )\r\n+        {            \r\n             out.write( \"123456789101112131415\" );\r\n-            // Close the output stream\r\n-            out.close();\r\n-            fstream.close();\r\n-        }\r\n-        catch ( Exception e )\r\n-        {// Catch exception if any\r\n-            System.err.println( \"Error: \" + e.getMessage() );\r\n         }\r\n \r\n         rule.setFiles( new File[] { f } );\r\n@@ -173,7 +156,7 @@ public void testFileTooBig()\n         }\r\n         catch ( EnforcerRuleException e )\r\n         {\r\n-            assertTrue( true );\r\n+            assertNotNull( e.getMessage() );\r\n         }\r\n     }\r\n \r"
  }
]
