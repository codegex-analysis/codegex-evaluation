[
  {
    "sha": "faf79f287ae34303093e9d0aefd8a4cd5b8e1fd4",
    "filename": "assemblies/plugins/transforms/mqtt/pom.xml",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/apache/incubator-hop/blob/b2866ee7a63d06512222567281d214e3d3c4534d/assemblies/plugins/transforms/mqtt/pom.xml",
    "raw_url": "https://github.com/apache/incubator-hop/raw/b2866ee7a63d06512222567281d214e3d3c4534d/assemblies/plugins/transforms/mqtt/pom.xml",
    "contents_url": "https://api.github.com/repos/apache/incubator-hop/contents/assemblies/plugins/transforms/mqtt/pom.xml?ref=b2866ee7a63d06512222567281d214e3d3c4534d",
    "patch": "@@ -36,7 +36,7 @@\n     <description></description>\n \n     <properties>\n-        <eclipse.paho.version>1.1.0</eclipse.paho.version>\n+        <eclipse.paho.version>1.2.5</eclipse.paho.version>\n     </properties>\n \n     <repositories>"
  },
  {
    "sha": "c176c1d6a9fa761a6dfe2d0773defd0136d4fb59",
    "filename": "plugins/transforms/json/src/main/java/org/apache/hop/pipeline/transforms/jsonoutputenhanced/JsonOutputMeta.java",
    "status": "modified",
    "additions": 2,
    "deletions": 3,
    "changes": 5,
    "blob_url": "https://github.com/apache/incubator-hop/blob/b2866ee7a63d06512222567281d214e3d3c4534d/plugins/transforms/json/src/main/java/org/apache/hop/pipeline/transforms/jsonoutputenhanced/JsonOutputMeta.java",
    "raw_url": "https://github.com/apache/incubator-hop/raw/b2866ee7a63d06512222567281d214e3d3c4534d/plugins/transforms/json/src/main/java/org/apache/hop/pipeline/transforms/jsonoutputenhanced/JsonOutputMeta.java",
    "contents_url": "https://api.github.com/repos/apache/incubator-hop/contents/plugins/transforms/json/src/main/java/org/apache/hop/pipeline/transforms/jsonoutputenhanced/JsonOutputMeta.java?ref=b2866ee7a63d06512222567281d214e3d3c4534d",
    "patch": "@@ -47,9 +47,8 @@\n \n @Transform(id = \"EnhancedJsonOutput\",\n         image = \"JSO.svg\",\n-        name = \"EnhancedJsonOutput.name\",\n-        i18nPackageName = \"org.apache.hop.pipeline.transforms.jsonoutput.enhanced\",\n-        description = \"EnhancedJsonOutput.description\",\n+        name = \"i18n::EnhancedJsonOutput.name\",\n+        description = \"i18n::EnhancedJsonOutput.description\",\n         categoryDescription = \"i18n:org.apache.hop.pipeline.transform:BaseTransform.Category.Output\",\n         keywords = { \"json\", \"javascript\", \"object\", \"notation\" },\n         documentationUrl = \"https://hop.apache.org/manual/latest/pipeline/transforms/enhancedjsonoutput.html\")"
  },
  {
    "sha": "c0a1cce8ebd3b58046ea1573df885645ced192c1",
    "filename": "plugins/transforms/mqtt/pom.xml",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/apache/incubator-hop/blob/b2866ee7a63d06512222567281d214e3d3c4534d/plugins/transforms/mqtt/pom.xml",
    "raw_url": "https://github.com/apache/incubator-hop/raw/b2866ee7a63d06512222567281d214e3d3c4534d/plugins/transforms/mqtt/pom.xml",
    "contents_url": "https://api.github.com/repos/apache/incubator-hop/contents/plugins/transforms/mqtt/pom.xml?ref=b2866ee7a63d06512222567281d214e3d3c4534d",
    "patch": "@@ -34,7 +34,7 @@\n     <name>Hop Plugins Transforms MQTT</name>\n \n     <properties>\n-        <eclipse.paho.version>1.1.0</eclipse.paho.version>\n+        <eclipse.paho.version>1.2.5</eclipse.paho.version>\n     </properties>\n \n     <repositories>"
  },
  {
    "sha": "2da8f6e79dee1d1e958f0121959c8f9da1eb6fb0",
    "filename": "plugins/transforms/mqtt/src/main/java/org/apache/hop/pipeline/transforms/mqtt/publisher/MQTTPublisher.java",
    "status": "modified",
    "additions": 1,
    "deletions": 4,
    "changes": 5,
    "blob_url": "https://github.com/apache/incubator-hop/blob/b2866ee7a63d06512222567281d214e3d3c4534d/plugins/transforms/mqtt/src/main/java/org/apache/hop/pipeline/transforms/mqtt/publisher/MQTTPublisher.java",
    "raw_url": "https://github.com/apache/incubator-hop/raw/b2866ee7a63d06512222567281d214e3d3c4534d/plugins/transforms/mqtt/src/main/java/org/apache/hop/pipeline/transforms/mqtt/publisher/MQTTPublisher.java",
    "contents_url": "https://api.github.com/repos/apache/incubator-hop/contents/plugins/transforms/mqtt/src/main/java/org/apache/hop/pipeline/transforms/mqtt/publisher/MQTTPublisher.java?ref=b2866ee7a63d06512222567281d214e3d3c4534d",
    "patch": "@@ -29,10 +29,7 @@\n import org.apache.hop.pipeline.transform.ITransform;\n import org.apache.hop.pipeline.transform.TransformMeta;\n import org.apache.hop.pipeline.transforms.mqtt.key.SSLSocketFactoryGenerator;\n-import org.eclipse.paho.client.mqttv3.MqttClient;\n-import org.eclipse.paho.client.mqttv3.MqttConnectOptions;\n-import org.eclipse.paho.client.mqttv3.MqttException;\n-import org.eclipse.paho.client.mqttv3.MqttMessage;\n+import org.eclipse.paho.client.mqttv3.*;\n \n import java.io.ByteArrayOutputStream;\n import java.io.ObjectOutputStream;"
  },
  {
    "sha": "e38fd2c8c396124ac09d2a8721aed0c3e820f4c6",
    "filename": "plugins/transforms/mqtt/src/main/java/org/apache/hop/pipeline/transforms/mqtt/publisher/MQTTPublisherDialog.java",
    "status": "modified",
    "additions": 650,
    "deletions": 668,
    "changes": 1318,
    "blob_url": "https://github.com/apache/incubator-hop/blob/b2866ee7a63d06512222567281d214e3d3c4534d/plugins/transforms/mqtt/src/main/java/org/apache/hop/pipeline/transforms/mqtt/publisher/MQTTPublisherDialog.java",
    "raw_url": "https://github.com/apache/incubator-hop/raw/b2866ee7a63d06512222567281d214e3d3c4534d/plugins/transforms/mqtt/src/main/java/org/apache/hop/pipeline/transforms/mqtt/publisher/MQTTPublisherDialog.java",
    "contents_url": "https://api.github.com/repos/apache/incubator-hop/contents/plugins/transforms/mqtt/src/main/java/org/apache/hop/pipeline/transforms/mqtt/publisher/MQTTPublisherDialog.java?ref=b2866ee7a63d06512222567281d214e3d3c4534d",
    "patch": "@@ -34,63 +34,48 @@\n import org.eclipse.swt.custom.CCombo;\n import org.eclipse.swt.custom.CTabFolder;\n import org.eclipse.swt.custom.CTabItem;\n-import org.eclipse.swt.events.ModifyEvent;\n-import org.eclipse.swt.events.ModifyListener;\n-import org.eclipse.swt.events.SelectionAdapter;\n-import org.eclipse.swt.events.SelectionEvent;\n-import org.eclipse.swt.events.ShellAdapter;\n-import org.eclipse.swt.events.ShellEvent;\n+import org.eclipse.swt.events.*;\n import org.eclipse.swt.layout.FormAttachment;\n import org.eclipse.swt.layout.FormData;\n import org.eclipse.swt.layout.FormLayout;\n-import org.eclipse.swt.widgets.Button;\n-import org.eclipse.swt.widgets.Composite;\n-import org.eclipse.swt.widgets.Control;\n-import org.eclipse.swt.widgets.Display;\n-import org.eclipse.swt.widgets.Event;\n-import org.eclipse.swt.widgets.Label;\n-import org.eclipse.swt.widgets.Listener;\n-import org.eclipse.swt.widgets.Shell;\n-import org.eclipse.swt.widgets.Text;\n+import org.eclipse.swt.widgets.*;\n \n \n public class MQTTPublisherDialog extends BaseTransformDialog implements ITransformDialog {\n \n-  private MQTTPublisherMeta producerMeta;\n+    private MQTTPublisherMeta producerMeta;\n \n-  private CCombo m_wInputField;\n+    private CCombo m_wInputField;\n \n-  private CTabFolder m_wTabFolder;\n+    private CTabFolder m_wTabFolder;\n \n-  private CTabItem m_wGeneralTab;\n-  private TextVar m_wBroker;\n-  private Label m_wlTopicName;\n-  private CCombo m_wTopicName;\n-  private TextVar m_wClientID;\n-  private TextVar m_wTimeout;\n-  private TextVar m_wQOS;\n+    private CTabItem m_wGeneralTab;\n+    private TextVar m_wBroker;\n+    private Label m_wlTopicName;\n+    private CCombo m_wTopicName;\n+    private TextVar m_wClientID;\n+    private TextVar m_wTimeout;\n+    private TextVar m_wQOS;\n \n-  private Button m_wTopicFromIncomingField;\n+    private Button m_wTopicFromIncomingField;\n \n-  private CTabItem m_wCredentialsTab;\n-  private Button m_wRequiresAuth;\n-  private Label m_wlUsername;\n-  private TextVar m_wUsername;\n-  private Label m_wlPassword;\n-  private TextVar m_wPassword;\n+    private CTabItem m_wCredentialsTab;\n+    private Button m_wRequiresAuth;\n+    private Label m_wlUsername;\n+    private TextVar m_wUsername;\n+    private Label m_wlPassword;\n+    private TextVar m_wPassword;\n \n-  private CTabItem m_wSSLTab;\n-  private TextVar m_wCAFile;\n-  private TextVar m_wCertFile;\n-  private TextVar m_wKeyFile;\n-  private TextVar m_wKeyPassword;\n+    private CTabItem m_wSSLTab;\n+    private TextVar m_wCAFile;\n+    private TextVar m_wCertFile;\n+    private TextVar m_wKeyFile;\n+    private TextVar m_wKeyPassword;\n \n-  private boolean gotPreviousFields = false;\n-\n-  public MQTTPublisherDialog(Shell parent, IVariables variables, Object in, PipelineMeta tr, String transformname  ) {\n-    super( parent, variables, (BaseTransformMeta) in, tr, transformname );\n-    producerMeta = (MQTTPublisherMeta) in;\n-  }\n+    public MQTTPublisherDialog(Shell parent, IVariables variables, Object in, PipelineMeta tr, String transformname) {\n+        super(parent, variables, (BaseTransformMeta) in, tr, transformname);\n+        producerMeta = (MQTTPublisherMeta) in;\n+    }\n \n   /*public MQTTPublisherDialog( Shell parent, BaseStepMeta baseStepMeta, TransMeta transMeta, String stepname ) {\n     super( parent, baseStepMeta, transMeta, stepname );\n@@ -102,649 +87,646 @@ public MQTTPublisherDialog( Shell parent, int nr, BaseStepMeta in, TransMeta tr\n     producerMeta = (MQTTPublisherMeta) in;\n   }*/\n \n-  public String open() {\n-    Shell parent = getParent();\n-    Display display = parent.getDisplay();\n-\n-    shell = new Shell( parent, SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MIN | SWT.MAX );\n-    props.setLook( shell );\n-    setShellImage( shell, producerMeta );\n+    public String open() {\n+        Shell parent = getParent();\n+        Display display = parent.getDisplay();\n+\n+        shell = new Shell(parent, SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MIN | SWT.MAX);\n+        props.setLook(shell);\n+        setShellImage(shell, producerMeta);\n+\n+        ModifyListener lsMod = new ModifyListener() {\n+            public void modifyText(ModifyEvent e) {\n+                producerMeta.setChanged();\n+            }\n+        };\n+        changed = producerMeta.hasChanged();\n+\n+        FormLayout formLayout = new FormLayout();\n+        formLayout.marginWidth = Const.FORM_MARGIN;\n+        formLayout.marginHeight = Const.FORM_MARGIN;\n+\n+        shell.setLayout(formLayout);\n+        shell.setText(BaseMessages.getString(MQTTPublisherMeta.PKG,\n+                \"MQTTClientDialog.Shell.Title\"));\n+\n+        int middle = props.getMiddlePct();\n+        int margin = Const.MARGIN;\n+\n+        // Step name\n+        wlTransformName = new Label(shell, SWT.RIGHT);\n+        wlTransformName.setText(BaseMessages.getString(MQTTPublisherMeta.PKG,\n+                \"MQTTClientDialog.StepName.Label\"));\n+        props.setLook(wlTransformName);\n+        fdlTransformName = new FormData();\n+        fdlTransformName.left = new FormAttachment(0, 0);\n+        fdlTransformName.right = new FormAttachment(middle, -margin);\n+        fdlTransformName.top = new FormAttachment(0, margin);\n+        wlTransformName.setLayoutData(fdlTransformName);\n+        wTransformName = new Text(shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n+        props.setLook(wTransformName);\n+        wTransformName.addModifyListener(lsMod);\n+        fdTransformName = new FormData();\n+        fdTransformName.left = new FormAttachment(middle, 0);\n+        fdTransformName.top = new FormAttachment(0, margin);\n+        fdTransformName.right = new FormAttachment(100, 0);\n+        wTransformName.setLayoutData(fdTransformName);\n+        Control lastControl = wTransformName;\n+\n+        // ====================\n+        // START OF TAB FOLDER\n+        // ====================\n+        m_wTabFolder = new CTabFolder(shell, SWT.BORDER);\n+        props.setLook(m_wTabFolder, Props.WIDGET_STYLE_TAB);\n+\n+        // ====================\n+        // GENERAL TAB\n+        // ====================\n+\n+        m_wGeneralTab = new CTabItem(m_wTabFolder, SWT.NONE);\n+        m_wGeneralTab.setText(BaseMessages\n+                .getString(MQTTPublisherMeta.PKG,\n+                        \"MQTTClientDialog.GeneralTab.Label\")); //$NON-NLS-1$\n+\n+        FormLayout mainLayout = new FormLayout();\n+        mainLayout.marginWidth = 3;\n+        mainLayout.marginHeight = 3;\n+\n+        Composite wGeneralTabComp = new Composite(m_wTabFolder, SWT.NONE);\n+        props.setLook(wGeneralTabComp);\n+        wGeneralTabComp.setLayout(mainLayout);\n+\n+        // Broker URL\n+        Label wlBroker = new Label(wGeneralTabComp, SWT.RIGHT);\n+        wlBroker.setText(BaseMessages.getString(MQTTPublisherMeta.PKG,\n+                \"MQTTClientDialog.Broker.Label\"));\n+        props.setLook(wlBroker);\n+        FormData fdlBroker = new FormData();\n+        fdlBroker.top = new FormAttachment(0, margin * 2);\n+        fdlBroker.left = new FormAttachment(0, 0);\n+        fdlBroker.right = new FormAttachment(middle, -margin);\n+        wlBroker.setLayoutData(fdlBroker);\n+        m_wBroker = new TextVar(variables, wGeneralTabComp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n+        props.setLook(m_wBroker);\n+        m_wBroker.addModifyListener(lsMod);\n+        FormData fdBroker = new FormData();\n+        fdBroker.top = new FormAttachment(0, margin * 2);\n+        fdBroker.left = new FormAttachment(middle, 0);\n+        fdBroker.right = new FormAttachment(100, 0);\n+        m_wBroker.setLayoutData(fdBroker);\n+        lastControl = m_wBroker;\n+\n+        // Topic name\n+        m_wlTopicName = new Label(wGeneralTabComp, SWT.RIGHT);\n+        m_wlTopicName.setText(BaseMessages\n+                .getString(MQTTPublisherMeta.PKG,\n+                        \"MQTTClientDialog.TopicName.Label\"));\n+        props.setLook(m_wlTopicName);\n+        FormData fdlTopicName = new FormData();\n+        fdlTopicName.top = new FormAttachment(lastControl, margin);\n+        fdlTopicName.left = new FormAttachment(0, 0);\n+        fdlTopicName.right = new FormAttachment(middle, -margin);\n+        m_wlTopicName.setLayoutData(fdlTopicName);\n+        m_wTopicName = new CCombo(wGeneralTabComp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n+        props.setLook(m_wTopicName);\n+        m_wTopicName.addModifyListener(lsMod);\n+        FormData fdTopicName = new FormData();\n+        fdTopicName.top = new FormAttachment(lastControl, margin);\n+        fdTopicName.left = new FormAttachment(middle, 0);\n+        fdTopicName.right = new FormAttachment(100, 0);\n+        m_wTopicName.setLayoutData(fdTopicName);\n+        lastControl = m_wTopicName;\n+\n+        // Topic is from field\n+        Label wlTopicIsFromFieldLab = new Label(wGeneralTabComp, SWT.RIGHT);\n+        wlTopicIsFromFieldLab.setText(\n+                BaseMessages.getString(MQTTPublisherMeta.PKG, \"MQTTClientDialog.TopicNameIsInIncomingField.Label\"));\n+        props.setLook(wlTopicIsFromFieldLab);\n+        FormData fd = new FormData();\n+        fd.top = new FormAttachment(lastControl, margin);\n+        fd.left = new FormAttachment(0, 0);\n+        fd.right = new FormAttachment(middle, -margin);\n+        wlTopicIsFromFieldLab.setLayoutData(fd);\n+\n+        m_wTopicFromIncomingField = new Button(wGeneralTabComp, SWT.CHECK);\n+        props.setLook(m_wTopicFromIncomingField);\n+        m_wTopicFromIncomingField.addSelectionListener(new SelectionAdapter() {\n+            @Override\n+            public void widgetSelected(SelectionEvent selectionEvent) {\n+                super.widgetSelected(selectionEvent);\n+                producerMeta.setChanged();\n+                updateTopicCombo(getPreviousFields());\n+            }\n+        });\n+        fd = new FormData();\n+        fd.top = new FormAttachment(lastControl, margin);\n+        fd.left = new FormAttachment(middle, 0);\n+        fd.right = new FormAttachment(100, 0);\n+        m_wTopicFromIncomingField.setLayoutData(fd);\n+        lastControl = m_wTopicFromIncomingField;\n+\n+        // Input field\n+        IRowMeta previousFields = getPreviousFields();\n+\n+        Label wlInputField = new Label(wGeneralTabComp, SWT.RIGHT);\n+        wlInputField.setText(BaseMessages.getString(MQTTPublisherMeta.PKG,\n+                \"MQTTClientDialog.FieldName.Label\"));\n+        props.setLook(wlInputField);\n+        FormData fdlInputField = new FormData();\n+        fdlInputField.top = new FormAttachment(lastControl, margin);\n+        fdlInputField.left = new FormAttachment(0, 0);\n+        fdlInputField.right = new FormAttachment(middle, -margin);\n+        wlInputField.setLayoutData(fdlInputField);\n+        m_wInputField = new CCombo(wGeneralTabComp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n+        m_wInputField.setToolTipText(BaseMessages\n+                .getString(MQTTPublisherMeta.PKG,\n+                        \"MQTTClientDialog.FieldName.Tooltip\"));\n+        m_wInputField.setItems(previousFields.getFieldNames());\n+        props.setLook(m_wInputField);\n+        m_wInputField.addModifyListener(lsMod);\n+        FormData fdFilename = new FormData();\n+        fdFilename.top = new FormAttachment(lastControl, margin);\n+        fdFilename.left = new FormAttachment(middle, 0);\n+        fdFilename.right = new FormAttachment(100, 0);\n+        m_wInputField.setLayoutData(fdFilename);\n+        lastControl = m_wInputField;\n+\n+        // Client ID\n+        Label wlClientID = new Label(wGeneralTabComp, SWT.RIGHT);\n+        wlClientID.setText(BaseMessages.getString(MQTTPublisherMeta.PKG,\n+                \"MQTTClientDialog.ClientID.Label\"));\n+        props.setLook(wlClientID);\n+        FormData fdlClientID = new FormData();\n+        fdlClientID.top = new FormAttachment(lastControl, margin);\n+        fdlClientID.left = new FormAttachment(0, 0);\n+        fdlClientID.right = new FormAttachment(middle, -margin);\n+        wlClientID.setLayoutData(fdlClientID);\n+        m_wClientID = new TextVar(variables, wGeneralTabComp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n+        props.setLook(m_wClientID);\n+        m_wClientID.addModifyListener(lsMod);\n+        FormData fdClientID = new FormData();\n+        fdClientID.top = new FormAttachment(lastControl, margin);\n+        fdClientID.left = new FormAttachment(middle, 0);\n+        fdClientID.right = new FormAttachment(100, 0);\n+        m_wClientID.setLayoutData(fdClientID);\n+        lastControl = m_wClientID;\n+\n+        // Connection timeout\n+        Label wlConnectionTimeout = new Label(wGeneralTabComp, SWT.RIGHT);\n+        wlConnectionTimeout.setText(BaseMessages\n+                .getString(MQTTPublisherMeta.PKG,\n+                        \"MQTTClientDialog.ConnectionTimeout.Label\"));\n+        wlConnectionTimeout.setToolTipText(\n+                BaseMessages.getString(MQTTPublisherMeta.PKG, \"MQTTClientDialog.ConnectionTimeout.ToolTip\"));\n+        props.setLook(wlConnectionTimeout);\n+        FormData fdlConnectionTimeout = new FormData();\n+        fdlConnectionTimeout.top = new FormAttachment(lastControl, margin);\n+        fdlConnectionTimeout.left = new FormAttachment(0, 0);\n+        fdlConnectionTimeout.right = new FormAttachment(middle, -margin);\n+        wlConnectionTimeout.setLayoutData(fdlConnectionTimeout);\n+        m_wTimeout = new TextVar(variables, wGeneralTabComp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n+        props.setLook(m_wTimeout);\n+        m_wTimeout.addModifyListener(lsMod);\n+        FormData fdConnectionTimeout = new FormData();\n+        fdConnectionTimeout.top = new FormAttachment(lastControl, margin);\n+        fdConnectionTimeout.left = new FormAttachment(middle, 0);\n+        fdConnectionTimeout.right = new FormAttachment(100, 0);\n+        m_wTimeout.setLayoutData(fdConnectionTimeout);\n+        lastControl = m_wTimeout;\n+\n+        // QOS\n+        Label wlQOS = new Label(wGeneralTabComp, SWT.RIGHT);\n+        wlQOS.setText(BaseMessages.getString(MQTTPublisherMeta.PKG,\n+                \"MQTTClientDialog.QOS.Label\"));\n+        props.setLook(wlQOS);\n+        FormData fdlQOS = new FormData();\n+        fdlQOS.top = new FormAttachment(lastControl, margin);\n+        fdlQOS.left = new FormAttachment(0, 0);\n+        fdlQOS.right = new FormAttachment(middle, -margin);\n+        wlQOS.setLayoutData(fdlQOS);\n+        m_wQOS = new TextVar(variables, wGeneralTabComp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n+        props.setLook(m_wQOS);\n+        m_wQOS.addModifyListener(lsMod);\n+        FormData fdQOS = new FormData();\n+        fdQOS.top = new FormAttachment(lastControl, margin);\n+        fdQOS.left = new FormAttachment(middle, 0);\n+        fdQOS.right = new FormAttachment(100, 0);\n+        m_wQOS.setLayoutData(fdQOS);\n+        lastControl = m_wQOS;\n+\n+        FormData fdGeneralTabComp = new FormData();\n+        fdGeneralTabComp.left = new FormAttachment(0, 0);\n+        fdGeneralTabComp.top = new FormAttachment(0, 0);\n+        fdGeneralTabComp.right = new FormAttachment(100, 0);\n+        fdGeneralTabComp.bottom = new FormAttachment(100, 0);\n+        wGeneralTabComp.setLayoutData(fdGeneralTabComp);\n+\n+        wGeneralTabComp.layout();\n+        m_wGeneralTab.setControl(wGeneralTabComp);\n+\n+        // ====================\n+        // CREDENTIALS TAB\n+        // ====================\n+        m_wCredentialsTab = new CTabItem(m_wTabFolder, SWT.NONE);\n+        m_wCredentialsTab.setText(BaseMessages\n+                .getString(MQTTPublisherMeta.PKG,\n+                        \"MQTTClientDialog.CredentialsTab.Title\")); //$NON-NLS-1$\n \n-    ModifyListener lsMod = new ModifyListener() {\n-      public void modifyText( ModifyEvent e ) {\n-        producerMeta.setChanged();\n-      }\n-    };\n-    changed = producerMeta.hasChanged();\n-\n-    FormLayout formLayout = new FormLayout();\n-    formLayout.marginWidth = Const.FORM_MARGIN;\n-    formLayout.marginHeight = Const.FORM_MARGIN;\n-\n-    shell.setLayout( formLayout );\n-    shell.setText( BaseMessages.getString( MQTTPublisherMeta.PKG,\n-        \"MQTTClientDialog.Shell.Title\" ) );\n-\n-    int middle = props.getMiddlePct();\n-    int margin = Const.MARGIN;\n-\n-    // Step name\n-    wlTransformName = new Label( shell, SWT.RIGHT );\n-    wlTransformName.setText( BaseMessages.getString( MQTTPublisherMeta.PKG,\n-        \"MQTTClientDialog.StepName.Label\" ) );\n-    props.setLook( wlTransformName );\n-    fdlTransformName = new FormData();\n-    fdlTransformName.left = new FormAttachment( 0, 0 );\n-    fdlTransformName.right = new FormAttachment( middle, -margin );\n-    fdlTransformName.top = new FormAttachment( 0, margin );\n-    wlTransformName.setLayoutData( fdlTransformName );\n-    wTransformName = new Text( shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER );\n-    props.setLook( wTransformName );\n-    wTransformName.addModifyListener( lsMod );\n-    fdTransformName = new FormData();\n-    fdTransformName.left = new FormAttachment( middle, 0 );\n-    fdTransformName.top = new FormAttachment( 0, margin );\n-    fdTransformName.right = new FormAttachment( 100, 0 );\n-    wTransformName.setLayoutData( fdTransformName );\n-    Control lastControl = wTransformName;\n-\n-    // ====================\n-    // START OF TAB FOLDER\n-    // ====================\n-    m_wTabFolder = new CTabFolder( shell, SWT.BORDER );\n-    props.setLook( m_wTabFolder, Props.WIDGET_STYLE_TAB );\n-\n-    // ====================\n-    // GENERAL TAB\n-    // ====================\n-\n-    m_wGeneralTab = new CTabItem( m_wTabFolder, SWT.NONE );\n-    m_wGeneralTab.setText( BaseMessages\n-        .getString( MQTTPublisherMeta.PKG,\n-            \"MQTTClientDialog.GeneralTab.Label\" ) ); //$NON-NLS-1$\n-\n-    FormLayout mainLayout = new FormLayout();\n-    mainLayout.marginWidth = 3;\n-    mainLayout.marginHeight = 3;\n-\n-    Composite wGeneralTabComp = new Composite( m_wTabFolder, SWT.NONE );\n-    props.setLook( wGeneralTabComp );\n-    wGeneralTabComp.setLayout( mainLayout );\n-\n-    // Broker URL\n-    Label wlBroker = new Label( wGeneralTabComp, SWT.RIGHT );\n-    wlBroker.setText( BaseMessages.getString( MQTTPublisherMeta.PKG,\n-        \"MQTTClientDialog.Broker.Label\" ) );\n-    props.setLook( wlBroker );\n-    FormData fdlBroker = new FormData();\n-    fdlBroker.top = new FormAttachment( 0, margin * 2 );\n-    fdlBroker.left = new FormAttachment( 0, 0 );\n-    fdlBroker.right = new FormAttachment( middle, -margin );\n-    wlBroker.setLayoutData( fdlBroker );\n-    m_wBroker = new TextVar( variables, wGeneralTabComp, SWT.SINGLE | SWT.LEFT | SWT.BORDER );\n-    props.setLook( m_wBroker );\n-    m_wBroker.addModifyListener( lsMod );\n-    FormData fdBroker = new FormData();\n-    fdBroker.top = new FormAttachment( 0, margin * 2 );\n-    fdBroker.left = new FormAttachment( middle, 0 );\n-    fdBroker.right = new FormAttachment( 100, 0 );\n-    m_wBroker.setLayoutData( fdBroker );\n-    lastControl = m_wBroker;\n-\n-    // Topic name\n-    m_wlTopicName = new Label( wGeneralTabComp, SWT.RIGHT );\n-    m_wlTopicName.setText( BaseMessages\n-        .getString( MQTTPublisherMeta.PKG,\n-            \"MQTTClientDialog.TopicName.Label\" ) );\n-    props.setLook( m_wlTopicName );\n-    FormData fdlTopicName = new FormData();\n-    fdlTopicName.top = new FormAttachment( lastControl, margin );\n-    fdlTopicName.left = new FormAttachment( 0, 0 );\n-    fdlTopicName.right = new FormAttachment( middle, -margin );\n-    m_wlTopicName.setLayoutData( fdlTopicName );\n-    m_wTopicName = new CCombo( wGeneralTabComp, SWT.SINGLE | SWT.LEFT | SWT.BORDER );\n-    props.setLook( m_wTopicName );\n-    m_wTopicName.addModifyListener( lsMod );\n-    FormData fdTopicName = new FormData();\n-    fdTopicName.top = new FormAttachment( lastControl, margin );\n-    fdTopicName.left = new FormAttachment( middle, 0 );\n-    fdTopicName.right = new FormAttachment( 100, 0 );\n-    m_wTopicName.setLayoutData( fdTopicName );\n-    lastControl = m_wTopicName;\n-\n-    // Topic is from field\n-    Label wlTopicIsFromFieldLab = new Label( wGeneralTabComp, SWT.RIGHT );\n-    wlTopicIsFromFieldLab.setText(\n-        BaseMessages.getString( MQTTPublisherMeta.PKG, \"MQTTClientDialog.TopicNameIsInIncomingField.Label\" ) );\n-    props.setLook( wlTopicIsFromFieldLab );\n-    FormData fd = new FormData();\n-    fd.top = new FormAttachment( lastControl, margin );\n-    fd.left = new FormAttachment( 0, 0 );\n-    fd.right = new FormAttachment( middle, -margin );\n-    wlTopicIsFromFieldLab.setLayoutData( fd );\n-\n-    m_wTopicFromIncomingField = new Button( wGeneralTabComp, SWT.CHECK );\n-    props.setLook( m_wTopicFromIncomingField );\n-    m_wTopicFromIncomingField.addSelectionListener( new SelectionAdapter() {\n-      @Override public void widgetSelected( SelectionEvent selectionEvent ) {\n-        super.widgetSelected( selectionEvent );\n-        producerMeta.setChanged();\n-        updateTopicCombo( getPreviousFields() );\n-      }\n-    } );\n-    fd = new FormData();\n-    fd.top = new FormAttachment( lastControl, margin );\n-    fd.left = new FormAttachment( middle, 0 );\n-    fd.right = new FormAttachment( 100, 0 );\n-    m_wTopicFromIncomingField.setLayoutData( fd );\n-    lastControl = m_wTopicFromIncomingField;\n-\n-    // Input field\n-    IRowMeta previousFields = getPreviousFields();\n-\n-    Label wlInputField = new Label( wGeneralTabComp, SWT.RIGHT );\n-    wlInputField.setText( BaseMessages.getString( MQTTPublisherMeta.PKG,\n-        \"MQTTClientDialog.FieldName.Label\" ) );\n-    props.setLook( wlInputField );\n-    FormData fdlInputField = new FormData();\n-    fdlInputField.top = new FormAttachment( lastControl, margin );\n-    fdlInputField.left = new FormAttachment( 0, 0 );\n-    fdlInputField.right = new FormAttachment( middle, -margin );\n-    wlInputField.setLayoutData( fdlInputField );\n-    m_wInputField = new CCombo( wGeneralTabComp, SWT.SINGLE | SWT.LEFT | SWT.BORDER );\n-    m_wInputField.setToolTipText( BaseMessages\n-        .getString( MQTTPublisherMeta.PKG,\n-            \"MQTTClientDialog.FieldName.Tooltip\" ) );\n-    m_wInputField.setItems( previousFields.getFieldNames() );\n-    props.setLook( m_wInputField );\n-    m_wInputField.addModifyListener( lsMod );\n-    FormData fdFilename = new FormData();\n-    fdFilename.top = new FormAttachment( lastControl, margin );\n-    fdFilename.left = new FormAttachment( middle, 0 );\n-    fdFilename.right = new FormAttachment( 100, 0 );\n-    m_wInputField.setLayoutData( fdFilename );\n-    lastControl = m_wInputField;\n-\n-    // Client ID\n-    Label wlClientID = new Label( wGeneralTabComp, SWT.RIGHT );\n-    wlClientID.setText( BaseMessages.getString( MQTTPublisherMeta.PKG,\n-        \"MQTTClientDialog.ClientID.Label\" ) );\n-    props.setLook( wlClientID );\n-    FormData fdlClientID = new FormData();\n-    fdlClientID.top = new FormAttachment( lastControl, margin );\n-    fdlClientID.left = new FormAttachment( 0, 0 );\n-    fdlClientID.right = new FormAttachment( middle, -margin );\n-    wlClientID.setLayoutData( fdlClientID );\n-    m_wClientID = new TextVar( variables, wGeneralTabComp, SWT.SINGLE | SWT.LEFT | SWT.BORDER );\n-    props.setLook( m_wClientID );\n-    m_wClientID.addModifyListener( lsMod );\n-    FormData fdClientID = new FormData();\n-    fdClientID.top = new FormAttachment( lastControl, margin );\n-    fdClientID.left = new FormAttachment( middle, 0 );\n-    fdClientID.right = new FormAttachment( 100, 0 );\n-    m_wClientID.setLayoutData( fdClientID );\n-    lastControl = m_wClientID;\n-\n-    // Connection timeout\n-    Label wlConnectionTimeout = new Label( wGeneralTabComp, SWT.RIGHT );\n-    wlConnectionTimeout.setText( BaseMessages\n-        .getString( MQTTPublisherMeta.PKG,\n-            \"MQTTClientDialog.ConnectionTimeout.Label\" ) );\n-    wlConnectionTimeout.setToolTipText(\n-        BaseMessages.getString( MQTTPublisherMeta.PKG, \"MQTTClientDialog.ConnectionTimeout.ToolTip\" ) );\n-    props.setLook( wlConnectionTimeout );\n-    FormData fdlConnectionTimeout = new FormData();\n-    fdlConnectionTimeout.top = new FormAttachment( lastControl, margin );\n-    fdlConnectionTimeout.left = new FormAttachment( 0, 0 );\n-    fdlConnectionTimeout.right = new FormAttachment( middle, -margin );\n-    wlConnectionTimeout.setLayoutData( fdlConnectionTimeout );\n-    m_wTimeout = new TextVar( variables, wGeneralTabComp, SWT.SINGLE | SWT.LEFT | SWT.BORDER );\n-    props.setLook( m_wTimeout );\n-    m_wTimeout.addModifyListener( lsMod );\n-    FormData fdConnectionTimeout = new FormData();\n-    fdConnectionTimeout.top = new FormAttachment( lastControl, margin );\n-    fdConnectionTimeout.left = new FormAttachment( middle, 0 );\n-    fdConnectionTimeout.right = new FormAttachment( 100, 0 );\n-    m_wTimeout.setLayoutData( fdConnectionTimeout );\n-    lastControl = m_wTimeout;\n-\n-    // QOS\n-    Label wlQOS = new Label( wGeneralTabComp, SWT.RIGHT );\n-    wlQOS.setText( BaseMessages.getString( MQTTPublisherMeta.PKG,\n-        \"MQTTClientDialog.QOS.Label\" ) );\n-    props.setLook( wlQOS );\n-    FormData fdlQOS = new FormData();\n-    fdlQOS.top = new FormAttachment( lastControl, margin );\n-    fdlQOS.left = new FormAttachment( 0, 0 );\n-    fdlQOS.right = new FormAttachment( middle, -margin );\n-    wlQOS.setLayoutData( fdlQOS );\n-    m_wQOS = new TextVar( variables, wGeneralTabComp, SWT.SINGLE | SWT.LEFT | SWT.BORDER );\n-    props.setLook( m_wQOS );\n-    m_wQOS.addModifyListener( lsMod );\n-    FormData fdQOS = new FormData();\n-    fdQOS.top = new FormAttachment( lastControl, margin );\n-    fdQOS.left = new FormAttachment( middle, 0 );\n-    fdQOS.right = new FormAttachment( 100, 0 );\n-    m_wQOS.setLayoutData( fdQOS );\n-    lastControl = m_wQOS;\n-\n-    FormData fdGeneralTabComp = new FormData();\n-    fdGeneralTabComp.left = new FormAttachment( 0, 0 );\n-    fdGeneralTabComp.top = new FormAttachment( 0, 0 );\n-    fdGeneralTabComp.right = new FormAttachment( 100, 0 );\n-    fdGeneralTabComp.bottom = new FormAttachment( 100, 0 );\n-    wGeneralTabComp.setLayoutData( fdGeneralTabComp );\n-\n-    wGeneralTabComp.layout();\n-    m_wGeneralTab.setControl( wGeneralTabComp );\n-\n-    // ====================\n-    // CREDENTIALS TAB\n-    // ====================\n-    m_wCredentialsTab = new CTabItem( m_wTabFolder, SWT.NONE );\n-    m_wCredentialsTab.setText( BaseMessages\n-        .getString( MQTTPublisherMeta.PKG,\n-            \"MQTTClientDialog.CredentialsTab.Title\" ) ); //$NON-NLS-1$\n-\n-    Composite wCredentialsComp = new Composite( m_wTabFolder, SWT.NONE );\n-    props.setLook( wCredentialsComp );\n-\n-    FormLayout fieldsCompLayout = new FormLayout();\n-    fieldsCompLayout.marginWidth = Const.FORM_MARGIN;\n-    fieldsCompLayout.marginHeight = Const.FORM_MARGIN;\n-    wCredentialsComp.setLayout( fieldsCompLayout );\n-\n-    Label wlRequiresAuth = new Label( wCredentialsComp, SWT.RIGHT );\n-    wlRequiresAuth.setText( BaseMessages\n-        .getString( MQTTPublisherMeta.PKG,\n-            \"MQTTClientDialog.RequireAuth.Label\" ) );\n-    props.setLook( wlRequiresAuth );\n-    FormData fdlRequriesAuth = new FormData();\n-    fdlRequriesAuth.left = new FormAttachment( 0, 0 );\n-    fdlRequriesAuth.top = new FormAttachment( 0, margin * 2 );\n-    fdlRequriesAuth.right = new FormAttachment( middle, -margin );\n-    wlRequiresAuth.setLayoutData( fdlRequriesAuth );\n-    m_wRequiresAuth = new Button( wCredentialsComp, SWT.CHECK );\n-    props.setLook( m_wRequiresAuth );\n-    FormData fdRequiresAuth = new FormData();\n-    fdRequiresAuth.left = new FormAttachment( middle, 0 );\n-    fdRequiresAuth.top = new FormAttachment( 0, margin * 2 );\n-    fdRequiresAuth.right = new FormAttachment( 100, 0 );\n-    m_wRequiresAuth.setLayoutData( fdRequiresAuth );\n-\n-    m_wRequiresAuth.addSelectionListener( new SelectionAdapter() {\n-      public void widgetSelected( SelectionEvent arg0 ) {\n-        boolean enabled = m_wRequiresAuth.getSelection();\n-        m_wlUsername.setEnabled( enabled );\n-        m_wUsername.setEnabled( enabled );\n-        m_wlPassword.setEnabled( enabled );\n-        m_wPassword.setEnabled( enabled );\n-      }\n-    } );\n-    lastControl = m_wRequiresAuth;\n-\n-    // Username field\n-    m_wlUsername = new Label( wCredentialsComp, SWT.RIGHT );\n-    m_wlUsername.setEnabled( false );\n-    m_wlUsername.setText( BaseMessages.getString( MQTTPublisherMeta.PKG,\n-        \"MQTTClientDialog.Username.Label\" ) ); //$NON-NLS-1$\n-    props.setLook( m_wlUsername );\n-    FormData fdlUsername = new FormData();\n-    fdlUsername.left = new FormAttachment( 0, -margin );\n-    fdlUsername.right = new FormAttachment( middle, -2 * margin );\n-    fdlUsername.top = new FormAttachment( lastControl, 2 * margin );\n-    m_wlUsername.setLayoutData( fdlUsername );\n-\n-    m_wUsername = new TextVar( variables, wCredentialsComp, SWT.SINGLE | SWT.LEFT | SWT.BORDER );\n-    m_wUsername.setEnabled( false );\n-    m_wUsername.setToolTipText( BaseMessages\n-        .getString( MQTTPublisherMeta.PKG,\n-            \"MQTTClientDialog.Username.Tooltip\" ) );\n-    props.setLook( m_wUsername );\n-    m_wUsername.addModifyListener( lsMod );\n-    FormData fdResult = new FormData();\n-    fdResult.left = new FormAttachment( middle, -margin );\n-    fdResult.top = new FormAttachment( lastControl, 2 * margin );\n-    fdResult.right = new FormAttachment( 100, 0 );\n-    m_wUsername.setLayoutData( fdResult );\n-    lastControl = m_wUsername;\n-\n-    // Password field\n-    m_wlPassword = new Label( wCredentialsComp, SWT.RIGHT );\n-    m_wlPassword.setEnabled( false );\n-    m_wlPassword.setText( BaseMessages.getString( MQTTPublisherMeta.PKG,\n-        \"MQTTClientDialog.Password.Label\" ) ); //$NON-NLS-1$\n-    props.setLook( m_wlPassword );\n-    FormData fdlPassword = new FormData();\n-    fdlPassword.left = new FormAttachment( 0, -margin );\n-    fdlPassword.right = new FormAttachment( middle, -2 * margin );\n-    fdlPassword.top = new FormAttachment( lastControl, margin );\n-    m_wlPassword.setLayoutData( fdlPassword );\n-\n-    m_wPassword = new TextVar( variables, wCredentialsComp, SWT.SINGLE | SWT.LEFT | SWT.BORDER | SWT.PASSWORD );\n-    m_wPassword.setEnabled( false );\n-    m_wPassword.setToolTipText( BaseMessages\n-        .getString( MQTTPublisherMeta.PKG,\n-            \"MQTTClientDialog.Password.Tooltip\" ) );\n-    props.setLook( m_wPassword );\n-    m_wPassword.addModifyListener( lsMod );\n-    FormData fdPassword = new FormData();\n-    fdPassword.left = new FormAttachment( middle, -margin );\n-    fdPassword.top = new FormAttachment( lastControl, margin );\n-    fdPassword.right = new FormAttachment( 100, 0 );\n-    m_wPassword.setLayoutData( fdPassword );\n-\n-    FormData fdCredentialsComp = new FormData();\n-    fdCredentialsComp.left = new FormAttachment( 0, 0 );\n-    fdCredentialsComp.top = new FormAttachment( 0, 0 );\n-    fdCredentialsComp.right = new FormAttachment( 100, 0 );\n-    fdCredentialsComp.bottom = new FormAttachment( 100, 0 );\n-    wCredentialsComp.setLayoutData( fdCredentialsComp );\n-\n-    wCredentialsComp.layout();\n-    m_wCredentialsTab.setControl( wCredentialsComp );\n-\n-    // ====================\n-    // SSL TAB\n-    // ====================\n-    m_wSSLTab = new CTabItem( m_wTabFolder, SWT.NONE );\n-    m_wSSLTab.setText( BaseMessages.getString( MQTTPublisherMeta.PKG,\n-        \"MQTTClientDialog.SSLTab.Label\" ) ); //$NON-NLS-1$\n-\n-    Composite wSSLComp = new Composite( m_wTabFolder, SWT.NONE );\n-    props.setLook( wSSLComp );\n-\n-    FormLayout sslCompLayout = new FormLayout();\n-    sslCompLayout.marginWidth = Const.FORM_MARGIN;\n-    sslCompLayout.marginHeight = Const.FORM_MARGIN;\n-    wSSLComp.setLayout( sslCompLayout );\n-\n-    // Server CA file path\n-    Label wlCAFile = new Label( wSSLComp, SWT.RIGHT );\n-    wlCAFile.setText( BaseMessages.getString( MQTTPublisherMeta.PKG,\n-        \"MQTTClientDialog.CAFile.Label\" ) ); //$NON-NLS-1$\n-    props.setLook( wlCAFile );\n-    FormData fdlCAFile = new FormData();\n-    fdlCAFile.left = new FormAttachment( 0, -margin );\n-    fdlCAFile.right = new FormAttachment( middle, -2 * margin );\n-    fdlCAFile.top = new FormAttachment( 0, 2 * margin );\n-    wlCAFile.setLayoutData( fdlCAFile );\n-\n-    m_wCAFile = new TextVar( variables, wSSLComp, SWT.SINGLE | SWT.LEFT | SWT.BORDER );\n-    m_wCAFile.setToolTipText( BaseMessages\n-        .getString( MQTTPublisherMeta.PKG,\n-            \"MQTTClientDialog.CAFile.Tooltip\" ) );\n-    props.setLook( m_wCAFile );\n-    m_wCAFile.addModifyListener( lsMod );\n-    FormData fdCAFile = new FormData();\n-    fdCAFile.left = new FormAttachment( middle, -margin );\n-    fdCAFile.top = new FormAttachment( 0, 2 * margin );\n-    fdCAFile.right = new FormAttachment( 100, 0 );\n-    m_wCAFile.setLayoutData( fdCAFile );\n-    lastControl = m_wCAFile;\n-\n-    // Client certificate file path\n-    Label wlCertFile = new Label( wSSLComp, SWT.RIGHT );\n-    wlCertFile.setText( BaseMessages.getString( MQTTPublisherMeta.PKG,\n-        \"MQTTClientDialog.CertFile.Label\" ) ); //$NON-NLS-1$\n-    props.setLook( wlCertFile );\n-    FormData fdlCertFile = new FormData();\n-    fdlCertFile.left = new FormAttachment( 0, -margin );\n-    fdlCertFile.right = new FormAttachment( middle, -2 * margin );\n-    fdlCertFile.top = new FormAttachment( lastControl, margin );\n-    wlCertFile.setLayoutData( fdlCertFile );\n-\n-    m_wCertFile = new TextVar( variables, wSSLComp, SWT.SINGLE | SWT.LEFT | SWT.BORDER );\n-    m_wCertFile.setToolTipText( BaseMessages\n-        .getString( MQTTPublisherMeta.PKG,\n-            \"MQTTClientDialog.CertFile.Tooltip\" ) );\n-    props.setLook( m_wCertFile );\n-    m_wCertFile.addModifyListener( lsMod );\n-    FormData fdCertFile = new FormData();\n-    fdCertFile.left = new FormAttachment( middle, -margin );\n-    fdCertFile.top = new FormAttachment( lastControl, margin );\n-    fdCertFile.right = new FormAttachment( 100, 0 );\n-    m_wCertFile.setLayoutData( fdCertFile );\n-    lastControl = m_wCertFile;\n-\n-    // Client key file path\n-    Label wlKeyFile = new Label( wSSLComp, SWT.RIGHT );\n-    wlKeyFile.setText( BaseMessages.getString( MQTTPublisherMeta.PKG,\n-        \"MQTTClientDialog.KeyFile.Label\" ) ); //$NON-NLS-1$\n-    props.setLook( wlKeyFile );\n-    FormData fdlKeyFile = new FormData();\n-    fdlKeyFile.left = new FormAttachment( 0, -margin );\n-    fdlKeyFile.right = new FormAttachment( middle, -2 * margin );\n-    fdlKeyFile.top = new FormAttachment( lastControl, margin );\n-    wlKeyFile.setLayoutData( fdlKeyFile );\n-\n-    m_wKeyFile = new TextVar( variables, wSSLComp, SWT.SINGLE | SWT.LEFT | SWT.BORDER );\n-    m_wKeyFile.setToolTipText( BaseMessages\n-        .getString( MQTTPublisherMeta.PKG,\n-            \"MQTTClientDialog.KeyFile.Tooltip\" ) );\n-    props.setLook( m_wKeyFile );\n-    m_wKeyFile.addModifyListener( lsMod );\n-    FormData fdKeyFile = new FormData();\n-    fdKeyFile.left = new FormAttachment( middle, -margin );\n-    fdKeyFile.top = new FormAttachment( lastControl, margin );\n-    fdKeyFile.right = new FormAttachment( 100, 0 );\n-    m_wKeyFile.setLayoutData( fdKeyFile );\n-    lastControl = m_wKeyFile;\n-\n-    // Client key file password path\n-    Label wlKeyPassword = new Label( wSSLComp, SWT.RIGHT );\n-    wlKeyPassword.setText( BaseMessages\n-        .getString( MQTTPublisherMeta.PKG,\n-            \"MQTTClientDialog.KeyPassword.Label\" ) ); //$NON-NLS-1$\n-    props.setLook( wlKeyPassword );\n-    FormData fdlKeyPassword = new FormData();\n-    fdlKeyPassword.left = new FormAttachment( 0, -margin );\n-    fdlKeyPassword.right = new FormAttachment( middle, -2 * margin );\n-    fdlKeyPassword.top = new FormAttachment( lastControl, margin );\n-    wlKeyPassword.setLayoutData( fdlKeyPassword );\n-\n-    m_wKeyPassword = new TextVar( variables, wSSLComp, SWT.SINGLE | SWT.LEFT | SWT.BORDER | SWT.PASSWORD );\n-    m_wKeyPassword.setToolTipText( BaseMessages\n-        .getString( MQTTPublisherMeta.PKG,\n-            \"MQTTClientDialog.KeyPassword.Tooltip\" ) );\n-    props.setLook( m_wKeyPassword );\n-    m_wKeyPassword.addModifyListener( lsMod );\n-    FormData fdKeyPassword = new FormData();\n-    fdKeyPassword.left = new FormAttachment( middle, -margin );\n-    fdKeyPassword.top = new FormAttachment( lastControl, margin );\n-    fdKeyPassword.right = new FormAttachment( 100, 0 );\n-    m_wKeyPassword.setLayoutData( fdKeyPassword );\n-    lastControl = m_wKeyPassword;\n-\n-    FormData fdSSLComp = new FormData();\n-    fdSSLComp.left = new FormAttachment( 0, 0 );\n-    fdSSLComp.top = new FormAttachment( 0, 0 );\n-    fdSSLComp.right = new FormAttachment( 100, 0 );\n-    fdSSLComp.bottom = new FormAttachment( 100, 0 );\n-    wSSLComp.setLayoutData( fdSSLComp );\n-\n-    wSSLComp.layout();\n-    m_wSSLTab.setControl( wSSLComp );\n-\n-    // ====================\n-    // BUTTONS\n-    // ====================\n-    wOk = new Button( shell, SWT.PUSH );\n-    wOk.setText( BaseMessages.getString( MQTTPublisherMeta.PKG,\n-        \"System.Button.OK\" ) ); //$NON-NLS-1$\n-    wCancel = new Button( shell, SWT.PUSH );\n-    wCancel.setText( BaseMessages.getString( MQTTPublisherMeta.PKG,\n-        \"System.Button.Cancel\" ) ); //$NON-NLS-1$\n-\n-    setButtonPositions( new Button[] { wOk, wCancel }, margin, null );\n-\n-    // ====================\n-    // END OF TAB FOLDER\n-    // ====================\n-    FormData fdTabFolder = new FormData();\n-    fdTabFolder.left = new FormAttachment( 0, 0 );\n-    fdTabFolder.top = new FormAttachment( wTransformName, margin );\n-    fdTabFolder.right = new FormAttachment( 100, 0 );\n-    fdTabFolder.bottom = new FormAttachment( wOk, -margin );\n-    m_wTabFolder.setLayoutData( fdTabFolder );\n-\n-    // Add listeners\n-    lsCancel = new Listener() {\n-      public void handleEvent( Event e ) {\n-        cancel();\n-      }\n-    };\n-    lsOk = new Listener() {\n-      public void handleEvent( Event e ) {\n-        ok();\n-      }\n-    };\n-    wCancel.addListener( SWT.Selection, lsCancel );\n-    wOk.addListener( SWT.Selection, lsOk );\n-\n-    lsDef = new SelectionAdapter() {\n-      public void widgetDefaultSelected( SelectionEvent e ) {\n-        ok();\n-      }\n-    };\n-    wTransformName.addSelectionListener( lsDef );\n-    m_wTopicName.addSelectionListener( lsDef );\n-    m_wInputField.addSelectionListener( lsDef );\n-\n-    m_wTabFolder.setSelection( 0 );\n-\n-    // Detect X or ALT-F4 or something that kills this window...\n-    shell.addShellListener( new ShellAdapter() {\n-      public void shellClosed( ShellEvent e ) {\n-        cancel();\n-      }\n-    } );\n-\n-    // Set the shell size, based upon previous time...\n-    setSize( shell, 440, 350, true );\n-\n-    getData( producerMeta, true );\n-    producerMeta.setChanged( changed );\n-\n-    shell.open();\n-    while ( !shell.isDisposed() ) {\n-      if ( !display.readAndDispatch() ) {\n-        display.sleep();\n-      }\n-    }\n-    return transformName;\n-  }\n+        Composite wCredentialsComp = new Composite(m_wTabFolder, SWT.NONE);\n+        props.setLook(wCredentialsComp);\n \n-  private IRowMeta getPreviousFields() {\n-    IRowMeta previousFields = null;\n+        FormLayout fieldsCompLayout = new FormLayout();\n+        fieldsCompLayout.marginWidth = Const.FORM_MARGIN;\n+        fieldsCompLayout.marginHeight = Const.FORM_MARGIN;\n+        wCredentialsComp.setLayout(fieldsCompLayout);\n \n-    if ( !gotPreviousFields ) {\n-      try {\n-        previousFields = pipelineMeta.getPrevTransformFields(variables,transformName );\n-      } catch (HopTransformException e) {\n-        new ErrorDialog(shell, BaseMessages\n+        Label wlRequiresAuth = new Label(wCredentialsComp, SWT.RIGHT);\n+        wlRequiresAuth.setText(BaseMessages\n                 .getString(MQTTPublisherMeta.PKG,\n-                        \"System.Dialog.Error.Title\"), BaseMessages\n+                        \"MQTTClientDialog.RequireAuth.Label\"));\n+        props.setLook(wlRequiresAuth);\n+        FormData fdlRequriesAuth = new FormData();\n+        fdlRequriesAuth.left = new FormAttachment(0, 0);\n+        fdlRequriesAuth.top = new FormAttachment(0, margin * 2);\n+        fdlRequriesAuth.right = new FormAttachment(middle, -margin);\n+        wlRequiresAuth.setLayoutData(fdlRequriesAuth);\n+        m_wRequiresAuth = new Button(wCredentialsComp, SWT.CHECK);\n+        props.setLook(m_wRequiresAuth);\n+        FormData fdRequiresAuth = new FormData();\n+        fdRequiresAuth.left = new FormAttachment(middle, 0);\n+        fdRequiresAuth.top = new FormAttachment(0, margin * 2);\n+        fdRequiresAuth.right = new FormAttachment(100, 0);\n+        m_wRequiresAuth.setLayoutData(fdRequiresAuth);\n+\n+        m_wRequiresAuth.addSelectionListener(new SelectionAdapter() {\n+            public void widgetSelected(SelectionEvent arg0) {\n+                boolean enabled = m_wRequiresAuth.getSelection();\n+                m_wlUsername.setEnabled(enabled);\n+                m_wUsername.setEnabled(enabled);\n+                m_wlPassword.setEnabled(enabled);\n+                m_wPassword.setEnabled(enabled);\n+            }\n+        });\n+        lastControl = m_wRequiresAuth;\n+\n+        // Username field\n+        m_wlUsername = new Label(wCredentialsComp, SWT.RIGHT);\n+        m_wlUsername.setEnabled(false);\n+        m_wlUsername.setText(BaseMessages.getString(MQTTPublisherMeta.PKG,\n+                \"MQTTClientDialog.Username.Label\")); //$NON-NLS-1$\n+        props.setLook(m_wlUsername);\n+        FormData fdlUsername = new FormData();\n+        fdlUsername.left = new FormAttachment(0, -margin);\n+        fdlUsername.right = new FormAttachment(middle, -2 * margin);\n+        fdlUsername.top = new FormAttachment(lastControl, 2 * margin);\n+        m_wlUsername.setLayoutData(fdlUsername);\n+\n+        m_wUsername = new TextVar(variables, wCredentialsComp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n+        m_wUsername.setEnabled(false);\n+        m_wUsername.setToolTipText(BaseMessages\n                 .getString(MQTTPublisherMeta.PKG,\n-                        \"MQTTClientDialog.ErrorDialog.UnableToGetInputFields.Message\"), e);\n-      }\n-\n-      gotPreviousFields = true;\n+                        \"MQTTClientDialog.Username.Tooltip\"));\n+        props.setLook(m_wUsername);\n+        m_wUsername.addModifyListener(lsMod);\n+        FormData fdResult = new FormData();\n+        fdResult.left = new FormAttachment(middle, -margin);\n+        fdResult.top = new FormAttachment(lastControl, 2 * margin);\n+        fdResult.right = new FormAttachment(100, 0);\n+        m_wUsername.setLayoutData(fdResult);\n+        lastControl = m_wUsername;\n+\n+        // Password field\n+        m_wlPassword = new Label(wCredentialsComp, SWT.RIGHT);\n+        m_wlPassword.setEnabled(false);\n+        m_wlPassword.setText(BaseMessages.getString(MQTTPublisherMeta.PKG,\n+                \"MQTTClientDialog.Password.Label\")); //$NON-NLS-1$\n+        props.setLook(m_wlPassword);\n+        FormData fdlPassword = new FormData();\n+        fdlPassword.left = new FormAttachment(0, -margin);\n+        fdlPassword.right = new FormAttachment(middle, -2 * margin);\n+        fdlPassword.top = new FormAttachment(lastControl, margin);\n+        m_wlPassword.setLayoutData(fdlPassword);\n+\n+        m_wPassword = new TextVar(variables, wCredentialsComp, SWT.SINGLE | SWT.LEFT | SWT.BORDER | SWT.PASSWORD);\n+        m_wPassword.setEnabled(false);\n+        m_wPassword.setToolTipText(BaseMessages\n+                .getString(MQTTPublisherMeta.PKG,\n+                        \"MQTTClientDialog.Password.Tooltip\"));\n+        props.setLook(m_wPassword);\n+        m_wPassword.addModifyListener(lsMod);\n+        FormData fdPassword = new FormData();\n+        fdPassword.left = new FormAttachment(middle, -margin);\n+        fdPassword.top = new FormAttachment(lastControl, margin);\n+        fdPassword.right = new FormAttachment(100, 0);\n+        m_wPassword.setLayoutData(fdPassword);\n+\n+        FormData fdCredentialsComp = new FormData();\n+        fdCredentialsComp.left = new FormAttachment(0, 0);\n+        fdCredentialsComp.top = new FormAttachment(0, 0);\n+        fdCredentialsComp.right = new FormAttachment(100, 0);\n+        fdCredentialsComp.bottom = new FormAttachment(100, 0);\n+        wCredentialsComp.setLayoutData(fdCredentialsComp);\n+\n+        wCredentialsComp.layout();\n+        m_wCredentialsTab.setControl(wCredentialsComp);\n+\n+        // ====================\n+        // SSL TAB\n+        // ====================\n+        m_wSSLTab = new CTabItem(m_wTabFolder, SWT.NONE);\n+        m_wSSLTab.setText(BaseMessages.getString(MQTTPublisherMeta.PKG,\n+                \"MQTTClientDialog.SSLTab.Label\")); //$NON-NLS-1$\n+\n+        Composite wSSLComp = new Composite(m_wTabFolder, SWT.NONE);\n+        props.setLook(wSSLComp);\n+\n+        FormLayout sslCompLayout = new FormLayout();\n+        sslCompLayout.marginWidth = Const.FORM_MARGIN;\n+        sslCompLayout.marginHeight = Const.FORM_MARGIN;\n+        wSSLComp.setLayout(sslCompLayout);\n+\n+        // Server CA file path\n+        Label wlCAFile = new Label(wSSLComp, SWT.RIGHT);\n+        wlCAFile.setText(BaseMessages.getString(MQTTPublisherMeta.PKG,\n+                \"MQTTClientDialog.CAFile.Label\")); //$NON-NLS-1$\n+        props.setLook(wlCAFile);\n+        FormData fdlCAFile = new FormData();\n+        fdlCAFile.left = new FormAttachment(0, -margin);\n+        fdlCAFile.right = new FormAttachment(middle, -2 * margin);\n+        fdlCAFile.top = new FormAttachment(0, 2 * margin);\n+        wlCAFile.setLayoutData(fdlCAFile);\n+\n+        m_wCAFile = new TextVar(variables, wSSLComp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n+        m_wCAFile.setToolTipText(BaseMessages\n+                .getString(MQTTPublisherMeta.PKG,\n+                        \"MQTTClientDialog.CAFile.Tooltip\"));\n+        props.setLook(m_wCAFile);\n+        m_wCAFile.addModifyListener(lsMod);\n+        FormData fdCAFile = new FormData();\n+        fdCAFile.left = new FormAttachment(middle, -margin);\n+        fdCAFile.top = new FormAttachment(0, 2 * margin);\n+        fdCAFile.right = new FormAttachment(100, 0);\n+        m_wCAFile.setLayoutData(fdCAFile);\n+        lastControl = m_wCAFile;\n+\n+        // Client certificate file path\n+        Label wlCertFile = new Label(wSSLComp, SWT.RIGHT);\n+        wlCertFile.setText(BaseMessages.getString(MQTTPublisherMeta.PKG,\n+                \"MQTTClientDialog.CertFile.Label\")); //$NON-NLS-1$\n+        props.setLook(wlCertFile);\n+        FormData fdlCertFile = new FormData();\n+        fdlCertFile.left = new FormAttachment(0, -margin);\n+        fdlCertFile.right = new FormAttachment(middle, -2 * margin);\n+        fdlCertFile.top = new FormAttachment(lastControl, margin);\n+        wlCertFile.setLayoutData(fdlCertFile);\n+\n+        m_wCertFile = new TextVar(variables, wSSLComp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n+        m_wCertFile.setToolTipText(BaseMessages\n+                .getString(MQTTPublisherMeta.PKG,\n+                        \"MQTTClientDialog.CertFile.Tooltip\"));\n+        props.setLook(m_wCertFile);\n+        m_wCertFile.addModifyListener(lsMod);\n+        FormData fdCertFile = new FormData();\n+        fdCertFile.left = new FormAttachment(middle, -margin);\n+        fdCertFile.top = new FormAttachment(lastControl, margin);\n+        fdCertFile.right = new FormAttachment(100, 0);\n+        m_wCertFile.setLayoutData(fdCertFile);\n+        lastControl = m_wCertFile;\n+\n+        // Client key file path\n+        Label wlKeyFile = new Label(wSSLComp, SWT.RIGHT);\n+        wlKeyFile.setText(BaseMessages.getString(MQTTPublisherMeta.PKG,\n+                \"MQTTClientDialog.KeyFile.Label\")); //$NON-NLS-1$\n+        props.setLook(wlKeyFile);\n+        FormData fdlKeyFile = new FormData();\n+        fdlKeyFile.left = new FormAttachment(0, -margin);\n+        fdlKeyFile.right = new FormAttachment(middle, -2 * margin);\n+        fdlKeyFile.top = new FormAttachment(lastControl, margin);\n+        wlKeyFile.setLayoutData(fdlKeyFile);\n+\n+        m_wKeyFile = new TextVar(variables, wSSLComp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n+        m_wKeyFile.setToolTipText(BaseMessages\n+                .getString(MQTTPublisherMeta.PKG,\n+                        \"MQTTClientDialog.KeyFile.Tooltip\"));\n+        props.setLook(m_wKeyFile);\n+        m_wKeyFile.addModifyListener(lsMod);\n+        FormData fdKeyFile = new FormData();\n+        fdKeyFile.left = new FormAttachment(middle, -margin);\n+        fdKeyFile.top = new FormAttachment(lastControl, margin);\n+        fdKeyFile.right = new FormAttachment(100, 0);\n+        m_wKeyFile.setLayoutData(fdKeyFile);\n+        lastControl = m_wKeyFile;\n+\n+        // Client key file password path\n+        Label wlKeyPassword = new Label(wSSLComp, SWT.RIGHT);\n+        wlKeyPassword.setText(BaseMessages\n+                .getString(MQTTPublisherMeta.PKG,\n+                        \"MQTTClientDialog.KeyPassword.Label\")); //$NON-NLS-1$\n+        props.setLook(wlKeyPassword);\n+        FormData fdlKeyPassword = new FormData();\n+        fdlKeyPassword.left = new FormAttachment(0, -margin);\n+        fdlKeyPassword.right = new FormAttachment(middle, -2 * margin);\n+        fdlKeyPassword.top = new FormAttachment(lastControl, margin);\n+        wlKeyPassword.setLayoutData(fdlKeyPassword);\n+\n+        m_wKeyPassword = new TextVar(variables, wSSLComp, SWT.SINGLE | SWT.LEFT | SWT.BORDER | SWT.PASSWORD);\n+        m_wKeyPassword.setToolTipText(BaseMessages\n+                .getString(MQTTPublisherMeta.PKG,\n+                        \"MQTTClientDialog.KeyPassword.Tooltip\"));\n+        props.setLook(m_wKeyPassword);\n+        m_wKeyPassword.addModifyListener(lsMod);\n+        FormData fdKeyPassword = new FormData();\n+        fdKeyPassword.left = new FormAttachment(middle, -margin);\n+        fdKeyPassword.top = new FormAttachment(lastControl, margin);\n+        fdKeyPassword.right = new FormAttachment(100, 0);\n+        m_wKeyPassword.setLayoutData(fdKeyPassword);\n+        lastControl = m_wKeyPassword;\n+\n+        FormData fdSSLComp = new FormData();\n+        fdSSLComp.left = new FormAttachment(0, 0);\n+        fdSSLComp.top = new FormAttachment(0, 0);\n+        fdSSLComp.right = new FormAttachment(100, 0);\n+        fdSSLComp.bottom = new FormAttachment(100, 0);\n+        wSSLComp.setLayoutData(fdSSLComp);\n+\n+        wSSLComp.layout();\n+        m_wSSLTab.setControl(wSSLComp);\n+\n+        // ====================\n+        // BUTTONS\n+        // ====================\n+        wOk = new Button(shell, SWT.PUSH);\n+        wOk.setText(BaseMessages.getString(MQTTPublisherMeta.PKG,\n+                \"System.Button.OK\")); //$NON-NLS-1$\n+        wCancel = new Button(shell, SWT.PUSH);\n+        wCancel.setText(BaseMessages.getString(MQTTPublisherMeta.PKG,\n+                \"System.Button.Cancel\")); //$NON-NLS-1$\n+\n+        setButtonPositions(new Button[]{wOk, wCancel}, margin, null);\n+\n+        // ====================\n+        // END OF TAB FOLDER\n+        // ====================\n+        FormData fdTabFolder = new FormData();\n+        fdTabFolder.left = new FormAttachment(0, 0);\n+        fdTabFolder.top = new FormAttachment(wTransformName, margin);\n+        fdTabFolder.right = new FormAttachment(100, 0);\n+        fdTabFolder.bottom = new FormAttachment(wOk, -margin);\n+        m_wTabFolder.setLayoutData(fdTabFolder);\n+\n+        // Add listeners\n+        lsCancel = new Listener() {\n+            public void handleEvent(Event e) {\n+                cancel();\n+            }\n+        };\n+        lsOk = new Listener() {\n+            public void handleEvent(Event e) {\n+                ok();\n+            }\n+        };\n+        wCancel.addListener(SWT.Selection, lsCancel);\n+        wOk.addListener(SWT.Selection, lsOk);\n+\n+        lsDef = new SelectionAdapter() {\n+            public void widgetDefaultSelected(SelectionEvent e) {\n+                ok();\n+            }\n+        };\n+        wTransformName.addSelectionListener(lsDef);\n+        m_wTopicName.addSelectionListener(lsDef);\n+        m_wInputField.addSelectionListener(lsDef);\n+\n+        m_wTabFolder.setSelection(0);\n+\n+        // Detect X or ALT-F4 or something that kills this window...\n+        shell.addShellListener(new ShellAdapter() {\n+            public void shellClosed(ShellEvent e) {\n+                cancel();\n+            }\n+        });\n+\n+        // Set the shell size, based upon previous time...\n+        setSize(shell, 440, 350, true);\n+\n+        getData(producerMeta, true);\n+        producerMeta.setChanged(changed);\n+\n+        shell.open();\n+        while (!shell.isDisposed()) {\n+            if (!display.readAndDispatch()) {\n+                display.sleep();\n+            }\n+        }\n+        return transformName;\n     }\n \n-    return previousFields;\n-  }\n+    private IRowMeta getPreviousFields() {\n+        IRowMeta previousFields = null;\n \n-  private void updateTopicCombo( IRowMeta previousFields ) {\n-    if ( m_wTopicFromIncomingField.getSelection() ) {\n-      m_wlTopicName.setText( BaseMessages.getString( MQTTPublisherMeta.PKG, \"MQTTClientDialog.TopicNameFromField\" ) );\n-    } else {\n-      m_wlTopicName.setText( BaseMessages\n-          .getString( MQTTPublisherMeta.PKG,\n-              \"MQTTClientDialog.TopicName.Label\" ) );\n-    }\n+        try {\n+            previousFields = pipelineMeta.getPrevTransformFields(variables, transformName);\n+        } catch (HopTransformException e) {\n+            new ErrorDialog(shell, BaseMessages\n+                    .getString(MQTTPublisherMeta.PKG,\n+                            \"System.Dialog.Error.Title\"), BaseMessages\n+                    .getString(MQTTPublisherMeta.PKG,\n+                            \"MQTTClientDialog.ErrorDialog.UnableToGetInputFields.Message\"), e);\n+        }\n \n-    String current = m_wTopicName.getText();\n-    m_wTopicName.removeAll();\n-    if ( m_wTopicFromIncomingField.getSelection() ) {\n-      m_wTopicName.setItems( previousFields.getFieldNames() );\n+        return previousFields;\n     }\n \n-    if ( !Utils.isEmpty( current ) ) {\n-      m_wTopicName.setText( current );\n+    private void updateTopicCombo(IRowMeta previousFields) {\n+        if (m_wTopicFromIncomingField.getSelection()) {\n+            m_wlTopicName.setText(BaseMessages.getString(MQTTPublisherMeta.PKG, \"MQTTClientDialog.TopicNameFromField\"));\n+        } else {\n+            m_wlTopicName.setText(BaseMessages\n+                    .getString(MQTTPublisherMeta.PKG,\n+                            \"MQTTClientDialog.TopicName.Label\"));\n+        }\n+\n+        String current = m_wTopicName.getText();\n+        m_wTopicName.removeAll();\n+        if (m_wTopicFromIncomingField.getSelection()) {\n+            m_wTopicName.setItems(previousFields.getFieldNames());\n+        }\n+\n+        if (!Utils.isEmpty(current)) {\n+            m_wTopicName.setText(current);\n+        }\n     }\n-  }\n \n-  /**\n-   * Copy information from the meta-data input to the dialog fields.\n-   */\n-  private void getData( MQTTPublisherMeta producerMeta, boolean copyStepname ) {\n-    if ( copyStepname ) {\n-      wTransformName.setText( transformName );\n+    /**\n+     * Copy information from the meta-data input to the dialog fields.\n+     */\n+    private void getData(MQTTPublisherMeta producerMeta, boolean copyStepname) {\n+        if (copyStepname) {\n+            wTransformName.setText(transformName);\n+        }\n+        m_wBroker.setText(Const.NVL(producerMeta.getBroker(), \"\"));\n+        m_wTopicName.setText(Const.NVL(producerMeta.getTopic(), \"\"));\n+        m_wTopicFromIncomingField.setSelection(producerMeta.getTopicIsFromField());\n+        m_wInputField.setText(Const.NVL(producerMeta.getField(), \"\"));\n+        m_wClientID.setText(Const.NVL(producerMeta.getClientId(), \"\"));\n+        m_wTimeout.setText(Const.NVL(producerMeta.getTimeout(), \"10000\"));\n+        m_wQOS.setText(Const.NVL(producerMeta.getQoS(), \"0\"));\n+\n+        m_wRequiresAuth.setSelection(producerMeta.isRequiresAuth());\n+        m_wRequiresAuth.notifyListeners(SWT.Selection, new Event());\n+\n+        m_wUsername.setText(Const.NVL(producerMeta.getUsername(), \"\"));\n+        m_wPassword.setText(Const.NVL(producerMeta.getPassword(), \"\"));\n+\n+        m_wCAFile.setText(Const.NVL(producerMeta.getSSLCaFile(), \"\"));\n+        m_wCertFile.setText(Const.NVL(producerMeta.getSSLCertFile(), \"\"));\n+        m_wKeyFile.setText(Const.NVL(producerMeta.getSSLKeyFile(), \"\"));\n+        m_wKeyPassword.setText(Const.NVL(producerMeta.getSSLKeyFilePass(), \"\"));\n+\n+        updateTopicCombo(getPreviousFields());\n+\n+        wTransformName.selectAll();\n     }\n-    m_wBroker.setText( Const.NVL( producerMeta.getBroker(), \"\" ) );\n-    m_wTopicName.setText( Const.NVL( producerMeta.getTopic(), \"\" ) );\n-    m_wTopicFromIncomingField.setSelection( producerMeta.getTopicIsFromField() );\n-    m_wInputField.setText( Const.NVL( producerMeta.getField(), \"\" ) );\n-    m_wClientID.setText( Const.NVL( producerMeta.getClientId(), \"\" ) );\n-    m_wTimeout.setText( Const.NVL( producerMeta.getTimeout(), \"10000\" ) );\n-    m_wQOS.setText( Const.NVL( producerMeta.getQoS(), \"0\" ) );\n-\n-    m_wRequiresAuth.setSelection( producerMeta.isRequiresAuth() );\n-    m_wRequiresAuth.notifyListeners( SWT.Selection, new Event() );\n-\n-    m_wUsername.setText( Const.NVL( producerMeta.getUsername(), \"\" ) );\n-    m_wPassword.setText( Const.NVL( producerMeta.getPassword(), \"\" ) );\n-\n-    m_wCAFile.setText( Const.NVL( producerMeta.getSSLCaFile(), \"\" ) );\n-    m_wCertFile.setText( Const.NVL( producerMeta.getSSLCertFile(), \"\" ) );\n-    m_wKeyFile.setText( Const.NVL( producerMeta.getSSLKeyFile(), \"\" ) );\n-    m_wKeyPassword.setText( Const.NVL( producerMeta.getSSLKeyFilePass(), \"\" ) );\n \n-    updateTopicCombo( getPreviousFields() );\n-\n-    wTransformName.selectAll();\n-  }\n-\n-  private void cancel() {\n-    transformName = null;\n-    producerMeta.setChanged( changed );\n-    dispose();\n-  }\n-\n-  /**\n-   * Copy information from the dialog fields to the meta-data input\n-   */\n-  private void setData( MQTTPublisherMeta producerMeta ) {\n-    producerMeta.setBroker( m_wBroker.getText() );\n-    producerMeta.setTopic( m_wTopicName.getText() );\n-    producerMeta.setTopicIsFromField( m_wTopicFromIncomingField.getSelection() );\n-    producerMeta.setField( m_wInputField.getText() );\n-    producerMeta.setClientId( m_wClientID.getText() );\n-    producerMeta.setTimeout( m_wTimeout.getText() );\n-    producerMeta.setQoS( m_wQOS.getText() );\n-\n-    boolean requiresAuth = m_wRequiresAuth.getSelection();\n-    producerMeta.setRequiresAuth( requiresAuth );\n-    if ( requiresAuth ) {\n-      producerMeta.setUsername( m_wUsername.getText() );\n-      producerMeta.setPassword( m_wPassword.getText() );\n+    private void cancel() {\n+        transformName = null;\n+        producerMeta.setChanged(changed);\n+        dispose();\n     }\n \n-    producerMeta.setSSLCaFile( m_wCAFile.getText() );\n-    producerMeta.setSSLCertFile( m_wCertFile.getText() );\n-    producerMeta.setSSLKeyFile( m_wKeyFile.getText() );\n-    producerMeta.setSSLKeyFilePass( m_wKeyPassword.getText() );\n+    /**\n+     * Copy information from the dialog fields to the meta-data input\n+     */\n+    private void setData(MQTTPublisherMeta producerMeta) {\n+        producerMeta.setBroker(m_wBroker.getText());\n+        producerMeta.setTopic(m_wTopicName.getText());\n+        producerMeta.setTopicIsFromField(m_wTopicFromIncomingField.getSelection());\n+        producerMeta.setField(m_wInputField.getText());\n+        producerMeta.setClientId(m_wClientID.getText());\n+        producerMeta.setTimeout(m_wTimeout.getText());\n+        producerMeta.setQoS(m_wQOS.getText());\n+\n+        boolean requiresAuth = m_wRequiresAuth.getSelection();\n+        producerMeta.setRequiresAuth(requiresAuth);\n+        if (requiresAuth) {\n+            producerMeta.setUsername(m_wUsername.getText());\n+            producerMeta.setPassword(m_wPassword.getText());\n+        }\n+\n+        producerMeta.setSSLCaFile(m_wCAFile.getText());\n+        producerMeta.setSSLCertFile(m_wCertFile.getText());\n+        producerMeta.setSSLKeyFile(m_wKeyFile.getText());\n+        producerMeta.setSSLKeyFilePass(m_wKeyPassword.getText());\n \n-    producerMeta.setChanged();\n-  }\n+        producerMeta.setChanged();\n+    }\n \n-  private void ok() {\n-    if ( Utils.isEmpty( wTransformName.getText() ) ) {\n-      return;\n+    private void ok() {\n+        if (Utils.isEmpty(wTransformName.getText())) {\n+            return;\n+        }\n+        setData(producerMeta);\n+        transformName = wTransformName.getText();\n+        dispose();\n     }\n-    setData( producerMeta );\n-    transformName = wTransformName.getText();\n-    dispose();\n-  }\n }"
  },
  {
    "sha": "fb55ba461a16cd1b53fed53ad737e94c637bb07b",
    "filename": "plugins/transforms/mqtt/src/main/java/org/apache/hop/pipeline/transforms/mqtt/publisher/MQTTPublisherMeta.java",
    "status": "modified",
    "additions": 4,
    "deletions": 2,
    "changes": 6,
    "blob_url": "https://github.com/apache/incubator-hop/blob/b2866ee7a63d06512222567281d214e3d3c4534d/plugins/transforms/mqtt/src/main/java/org/apache/hop/pipeline/transforms/mqtt/publisher/MQTTPublisherMeta.java",
    "raw_url": "https://github.com/apache/incubator-hop/raw/b2866ee7a63d06512222567281d214e3d3c4534d/plugins/transforms/mqtt/src/main/java/org/apache/hop/pipeline/transforms/mqtt/publisher/MQTTPublisherMeta.java",
    "contents_url": "https://api.github.com/repos/apache/incubator-hop/contents/plugins/transforms/mqtt/src/main/java/org/apache/hop/pipeline/transforms/mqtt/publisher/MQTTPublisherMeta.java?ref=b2866ee7a63d06512222567281d214e3d3c4534d",
    "patch": "@@ -316,7 +316,8 @@ public void check(\n     }\n   }\n \n-  public void loadXML(Node transformNode, IHopMetadataProvider metadataProvider )\n+  @Override\n+  public void loadXml(Node transformNode, IHopMetadataProvider metadataProvider )\n       throws HopXmlException {\n \n     try {\n@@ -349,7 +350,8 @@ public void loadXML(Node transformNode, IHopMetadataProvider metadataProvider )\n     }\n   }\n \n-  public String getXML() throws HopException {\n+  @Override\n+  public String getXml() throws HopException {\n     StringBuilder retval = new StringBuilder();\n     if ( broker != null ) {\n       retval.append( \"    \" ).append( XmlHandler.addTagValue( \"BROKER\", broker ) );"
  },
  {
    "sha": "76a583cadb2bf7b95d507fa19e8f216c0f23a344",
    "filename": "plugins/transforms/mqtt/src/main/java/org/apache/hop/pipeline/transforms/mqtt/subscriber/MQTTSubscriber.java",
    "status": "modified",
    "additions": 13,
    "deletions": 11,
    "changes": 24,
    "blob_url": "https://github.com/apache/incubator-hop/blob/b2866ee7a63d06512222567281d214e3d3c4534d/plugins/transforms/mqtt/src/main/java/org/apache/hop/pipeline/transforms/mqtt/subscriber/MQTTSubscriber.java",
    "raw_url": "https://github.com/apache/incubator-hop/raw/b2866ee7a63d06512222567281d214e3d3c4534d/plugins/transforms/mqtt/src/main/java/org/apache/hop/pipeline/transforms/mqtt/subscriber/MQTTSubscriber.java",
    "contents_url": "https://api.github.com/repos/apache/incubator-hop/contents/plugins/transforms/mqtt/src/main/java/org/apache/hop/pipeline/transforms/mqtt/subscriber/MQTTSubscriber.java?ref=b2866ee7a63d06512222567281d214e3d3c4534d",
    "patch": "@@ -75,7 +75,7 @@ public boolean processRow( ) throws HopException {\n       }\n \n       if ( m_reconnectFailed ) {\n-        logError( BaseMessages.getString( MQTTPublisherMeta.PKG, \"MQTTClientStep.Error.ReconnectFailed\" ) );\n+        logError( BaseMessages.getString( MQTTSubscriberMeta.PKG, \"MQTTClientStep.Error.ReconnectFailed\" ) );\n         setStopped( true );\n         return false;\n       }\n@@ -105,7 +105,7 @@ protected synchronized void shutdown( ) {\n         data.client.close();\n         data.client = null;\n       } catch ( MqttException e ) {\n-        logError( BaseMessages.getString( MQTTPublisherMeta.PKG, \"MQTTClientStep.ErrorClosingMQTTClient.Message\" ), e );\n+        logError( BaseMessages.getString( MQTTSubscriberMeta.PKG, \"MQTTClientStep.ErrorClosingMQTTClient.Message\" ), e );\n       }\n     }\n   }\n@@ -133,7 +133,7 @@ public boolean init() {\n                 ValueMetaFactory.getIdForValueMeta( meta.getMessageType() ) );\n         if ( messageMeta.isSerializableType() && !meta.getAllowReadMessageOfTypeObject() ) {\n           logError( BaseMessages\n-              .getString( MQTTPublisherMeta.PKG, \"MQTTClientStep.Error.MessageTypeObjectButObjectNotAllowed\" ) );\n+              .getString( MQTTSubscriberMeta.PKG, \"MQTTClientStep.Error.MessageTypeObjectButObjectNotAllowed\" ) );\n           return false;\n         }\n       } catch ( HopPluginException e ) {\n@@ -164,11 +164,11 @@ protected void configureConnection() throws HopException {\n       String broker = resolve( meta.getBroker() );\n       if ( Utils.isEmpty( broker ) ) {\n         throw new HopException(\n-            BaseMessages.getString( MQTTPublisherMeta.PKG, \"MQTTClientStep.Error.NoBrokerURL\" ) );\n+            BaseMessages.getString( MQTTSubscriberMeta.PKG, \"MQTTClientStep.Error.NoBrokerURL\" ) );\n       }\n       String clientId = resolve( meta.getClientId() );\n       if ( Utils.isEmpty( clientId ) ) {\n-        throw new HopException( BaseMessages.getString( MQTTPublisherMeta.PKG, \"MQTTClientStep.Error.NoClientID\" ) );\n+        throw new HopException( BaseMessages.getString( MQTTSubscriberMeta.PKG, \"MQTTClientStep.Error.NoClientID\" ) );\n       }\n       List<String> topics = meta.getTopics();\n       if ( topics == null || topics.size() == 0 ) {\n@@ -213,27 +213,29 @@ protected void configureConnection() throws HopException {\n           connectOptions.setConnectionTimeout( Integer.parseInt( timeout ) );\n         } catch ( NumberFormatException e ) {\n           throw new HopException(\n-              BaseMessages.getString( MQTTPublisherMeta.PKG, \"MQTTClientStep.WrongTimeoutValue.Message\", timeout ), e );\n+              BaseMessages.getString( MQTTSubscriberMeta.PKG, \"MQTTClientStep.WrongTimeoutValue.Message\", timeout ), e );\n         }\n \n         try {\n           connectOptions.setKeepAliveInterval( Integer.parseInt( keepAlive ) );\n         } catch ( NumberFormatException e ) {\n           throw new HopException(\n-              BaseMessages.getString( MQTTPublisherMeta.PKG, \"MQTTClientStep.WrongKeepAliveValue.Message\", keepAlive ),\n+              BaseMessages.getString( MQTTSubscriberMeta.PKG, \"MQTTClientStep.WrongKeepAliveValue.Message\", keepAlive ),\n               e );\n         }\n \n         logBasic( BaseMessages\n-            .getString( MQTTPublisherMeta.PKG, \"MQTTClientStep.CreateMQTTClient.Message\", broker, clientId ) );\n+            .getString( MQTTSubscriberMeta.PKG, \"MQTTClientStep.CreateMQTTClient.Message\", broker, clientId ) );\n \n         data.client.setCallback( new SubscriberCallback( data, meta ) );\n         data.client.connect( connectOptions );\n \n         data.client.subscribe( resolvedTopics.toArray( new String[resolvedTopics.size()] ), qoss );\n+        logBasic( BaseMessages\n+                .getString( MQTTSubscriberMeta.PKG, \"MQTTClientStep.SubscribedMQTTClient.Message\", clientId, String.join(\", \", resolvedTopics) ) );\n       } catch ( Exception e ) {\n         throw new HopException(\n-            BaseMessages.getString( MQTTPublisherMeta.PKG, \"MQTTClientStep.ErrorCreateMQTTClient.Message\", broker ),\n+            BaseMessages.getString( MQTTSubscriberMeta.PKG, \"MQTTClientStep.ErrorCreateMQTTClient.Message\", broker ),\n             e );\n       }\n     }\n@@ -258,8 +260,8 @@ public void connectionLost( Throwable throwable ) {\n       // connection retry logic here\n       shutdown( );\n       logBasic( BaseMessages\n-          .getString( MQTTPublisherMeta.PKG, \"MQTTClientStep.Log.LostConnectionToBroker\", throwable.getMessage() ) );\n-      logBasic( BaseMessages.getString( MQTTPublisherMeta.PKG, \"MQTTClientStep.Log.AttemptingToReconnect\" ) );\n+          .getString( MQTTSubscriberMeta.PKG, \"MQTTClientStep.Log.LostConnectionToBroker\", throwable.getMessage() ) );\n+      logBasic( BaseMessages.getString( MQTTSubscriberMeta.PKG, \"MQTTClientStep.Log.AttemptingToReconnect\" ) );\n       try {\n         configureConnection();\n       } catch ( HopException e ) {"
  },
  {
    "sha": "df2d5026b0e1c457025ca2479e638d137a1c12ed",
    "filename": "plugins/transforms/mqtt/src/main/java/org/apache/hop/pipeline/transforms/mqtt/subscriber/MQTTSubscriberMeta.java",
    "status": "modified",
    "additions": 5,
    "deletions": 3,
    "changes": 8,
    "blob_url": "https://github.com/apache/incubator-hop/blob/b2866ee7a63d06512222567281d214e3d3c4534d/plugins/transforms/mqtt/src/main/java/org/apache/hop/pipeline/transforms/mqtt/subscriber/MQTTSubscriberMeta.java",
    "raw_url": "https://github.com/apache/incubator-hop/raw/b2866ee7a63d06512222567281d214e3d3c4534d/plugins/transforms/mqtt/src/main/java/org/apache/hop/pipeline/transforms/mqtt/subscriber/MQTTSubscriberMeta.java",
    "contents_url": "https://api.github.com/repos/apache/incubator-hop/contents/plugins/transforms/mqtt/src/main/java/org/apache/hop/pipeline/transforms/mqtt/subscriber/MQTTSubscriberMeta.java?ref=b2866ee7a63d06512222567281d214e3d3c4534d",
    "patch": "@@ -315,8 +315,9 @@ public ITransform createTransform(TransformMeta transformMeta, MQTTSubscriberDat\n   public MQTTSubscriberData getTransformData() {\n     return new MQTTSubscriberData();\n   }\n-  \n-  public void loadXML(Node transformNode, IHopMetadataProvider metadataProvider )\n+\n+  @Override\n+  public void loadXml(Node transformNode, IHopMetadataProvider metadataProvider )\n       throws HopXmlException {\n     broker = XmlHandler.getTagValue( transformNode, \"BROKER\" );\n     String topics = XmlHandler.getTagValue( transformNode, \"TOPICS\" );\n@@ -359,7 +360,8 @@ public void loadXML(Node transformNode, IHopMetadataProvider metadataProvider )\n     }\n   }\n \n-  public String getXML() throws HopException {\n+  @Override\n+  public String getXml() throws HopException {\n     StringBuilder retval = new StringBuilder();\n     if ( !Utils.isEmpty(broker) ) {\n       retval.append( \"    \" ).append( XmlHandler.addTagValue( \"BROKER\", broker) );"
  },
  {
    "sha": "f4446965237aeea5b16087a00491abcec4ac6739",
    "filename": "plugins/transforms/mqtt/src/main/resources/org/apache/hop/pipeline/transforms/mqtt/subscriber/messages/messages_en_US.properties",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/apache/incubator-hop/blob/b2866ee7a63d06512222567281d214e3d3c4534d/plugins/transforms/mqtt/src/main/resources/org/apache/hop/pipeline/transforms/mqtt/subscriber/messages/messages_en_US.properties",
    "raw_url": "https://github.com/apache/incubator-hop/raw/b2866ee7a63d06512222567281d214e3d3c4534d/plugins/transforms/mqtt/src/main/resources/org/apache/hop/pipeline/transforms/mqtt/subscriber/messages/messages_en_US.properties",
    "contents_url": "https://api.github.com/repos/apache/incubator-hop/contents/plugins/transforms/mqtt/src/main/resources/org/apache/hop/pipeline/transforms/mqtt/subscriber/messages/messages_en_US.properties?ref=b2866ee7a63d06512222567281d214e3d3c4534d",
    "patch": "@@ -22,6 +22,7 @@ MQTTSubscriber.Step.Name=MQTT Subscriber\n MQTTSubscriber.Step.Description=Subscribe to topics at an MQTT broker\n \n MQTTClientStep.CreateMQTTClient.Message=Connecting to MQTT broker\\: {0} as client ''{1}''\n+MQTTClientStep.SubscribedMQTTClient.Message=Client ''{0}'' successfully subscribed to topics {1}\n MQTTClientStep.WrongTimeoutValue.Message=Wrong connection timeout value\\: {0}!\n MQTTClientStep.WrongKeepAliveValue.Message=Wrong keep alive value\\: {0}!\n MQTTClientStep.WrongQOSValue.Message=Wrong QoS value\\: {0}!"
  }
]
