[
  {
    "sha": "cf55078fd11e1cd5e4901c150a0ca06a0e9a1aff",
    "filename": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/security/exception/SCMSecurityException.java",
    "status": "modified",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/apache/ozone/blob/9eefcadb234931243cf8bd9291b253b95933b006/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/security/exception/SCMSecurityException.java",
    "raw_url": "https://github.com/apache/ozone/raw/9eefcadb234931243cf8bd9291b253b95933b006/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/security/exception/SCMSecurityException.java",
    "contents_url": "https://api.github.com/repos/apache/ozone/contents/hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/security/exception/SCMSecurityException.java?ref=9eefcadb234931243cf8bd9291b253b95933b006",
    "patch": "@@ -45,6 +45,18 @@ public SCMSecurityException(String message, Throwable cause) {\n     this.errorCode = ErrorCode.DEFAULT;\n   }\n \n+  /**\n+   * Ctor.\n+   * @param message - Message.\n+   * @param cause  - Actual cause.\n+   * @param error   - error code.\n+   */\n+  public SCMSecurityException(String message, Throwable cause,\n+      ErrorCode error) {\n+    super(message, cause);\n+    this.errorCode = error;\n+  }\n+\n   /**\n    * Ctor.\n    * @param message - Message."
  },
  {
    "sha": "f02af0b9113a2f6f64a6951f1ebd5455f2718325",
    "filename": "hadoop-hdds/framework/src/main/java/org/apache/hadoop/hdds/protocol/SCMSecurityProtocol.java",
    "status": "modified",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/apache/ozone/blob/9eefcadb234931243cf8bd9291b253b95933b006/hadoop-hdds/framework/src/main/java/org/apache/hadoop/hdds/protocol/SCMSecurityProtocol.java",
    "raw_url": "https://github.com/apache/ozone/raw/9eefcadb234931243cf8bd9291b253b95933b006/hadoop-hdds/framework/src/main/java/org/apache/hadoop/hdds/protocol/SCMSecurityProtocol.java",
    "contents_url": "https://api.github.com/repos/apache/ozone/contents/hadoop-hdds/framework/src/main/java/org/apache/hadoop/hdds/protocol/SCMSecurityProtocol.java?ref=9eefcadb234931243cf8bd9291b253b95933b006",
    "patch": "@@ -24,6 +24,7 @@\n import org.apache.hadoop.hdds.protocol.proto.HddsProtos.DatanodeDetailsProto;\n import org.apache.hadoop.hdds.protocol.proto.HddsProtos.OzoneManagerDetailsProto;\n import org.apache.hadoop.hdds.scm.ScmConfig;\n+import org.apache.hadoop.hdds.security.x509.crl.CRLInfo;\n import org.apache.hadoop.security.KerberosInfo;\n \n /**\n@@ -92,4 +93,18 @@ String getOMCertificate(OzoneManagerDetailsProto omDetails,\n   List<String> listCertificate(HddsProtos.NodeType type, long startSerialId,\n       int count, boolean isRevoked) throws IOException;\n \n+  /**\n+   * Get the CRLInfo based on the CRL Id.\n+   * @param crlIds - crl ids\n+   * @return list of CRLInfo\n+   * @throws IOException\n+   */\n+  List<CRLInfo> getCrls(List<Long> crlIds) throws IOException;\n+\n+  /**\n+   * Get the latest CRL id.\n+   * @return latest CRL id.\n+   */\n+  long getLatestCrlId() throws IOException;\n+\n }"
  },
  {
    "sha": "8a582710e842fce019348e8659c8c319256ee658",
    "filename": "hadoop-hdds/framework/src/main/java/org/apache/hadoop/hdds/protocolPB/SCMSecurityProtocolClientSideTranslatorPB.java",
    "status": "modified",
    "additions": 38,
    "deletions": 0,
    "changes": 38,
    "blob_url": "https://github.com/apache/ozone/blob/9eefcadb234931243cf8bd9291b253b95933b006/hadoop-hdds/framework/src/main/java/org/apache/hadoop/hdds/protocolPB/SCMSecurityProtocolClientSideTranslatorPB.java",
    "raw_url": "https://github.com/apache/ozone/raw/9eefcadb234931243cf8bd9291b253b95933b006/hadoop-hdds/framework/src/main/java/org/apache/hadoop/hdds/protocolPB/SCMSecurityProtocolClientSideTranslatorPB.java",
    "contents_url": "https://api.github.com/repos/apache/ozone/contents/hadoop-hdds/framework/src/main/java/org/apache/hadoop/hdds/protocolPB/SCMSecurityProtocolClientSideTranslatorPB.java?ref=9eefcadb234931243cf8bd9291b253b95933b006",
    "patch": "@@ -18,23 +18,31 @@\n \n import java.io.Closeable;\n import java.io.IOException;\n+import java.security.cert.CRLException;\n+import java.security.cert.CertificateException;\n+import java.util.ArrayList;\n import java.util.List;\n import java.util.function.Consumer;\n \n import org.apache.hadoop.hdds.protocol.SCMSecurityProtocol;\n import org.apache.hadoop.hdds.protocol.proto.HddsProtos;\n+import org.apache.hadoop.hdds.protocol.proto.HddsProtos.CRLInfoProto;\n import org.apache.hadoop.hdds.protocol.proto.HddsProtos.DatanodeDetailsProto;\n import org.apache.hadoop.hdds.protocol.proto.HddsProtos.OzoneManagerDetailsProto;\n import org.apache.hadoop.hdds.protocol.proto.SCMSecurityProtocolProtos;\n import org.apache.hadoop.hdds.protocol.proto.SCMSecurityProtocolProtos.SCMGetCACertificateRequestProto;\n import org.apache.hadoop.hdds.protocol.proto.SCMSecurityProtocolProtos.SCMGetCertResponseProto;\n import org.apache.hadoop.hdds.protocol.proto.SCMSecurityProtocolProtos.SCMGetCertificateRequestProto;\n+import org.apache.hadoop.hdds.protocol.proto.SCMSecurityProtocolProtos.SCMGetCrlsRequestProto;\n import org.apache.hadoop.hdds.protocol.proto.SCMSecurityProtocolProtos.SCMGetDataNodeCertRequestProto;\n+import org.apache.hadoop.hdds.protocol.proto.SCMSecurityProtocolProtos.SCMGetLatestCrlIdRequestProto;\n import org.apache.hadoop.hdds.protocol.proto.SCMSecurityProtocolProtos.SCMListCertificateRequestProto;\n import org.apache.hadoop.hdds.protocol.proto.SCMSecurityProtocolProtos.SCMSecurityRequest;\n import org.apache.hadoop.hdds.protocol.proto.SCMSecurityProtocolProtos.SCMSecurityRequest.Builder;\n import org.apache.hadoop.hdds.protocol.proto.SCMSecurityProtocolProtos.SCMSecurityResponse;\n import org.apache.hadoop.hdds.protocol.proto.SCMSecurityProtocolProtos.Type;\n+import org.apache.hadoop.hdds.security.exception.SCMSecurityException;\n+import org.apache.hadoop.hdds.security.x509.crl.CRLInfo;\n import org.apache.hadoop.hdds.tracing.TracingUtil;\n import org.apache.hadoop.ipc.ProtobufHelper;\n import org.apache.hadoop.ipc.ProtocolTranslator;\n@@ -228,6 +236,36 @@ public String getCACertificate() throws IOException {\n         .getListCertificateResponseProto().getCertificatesList();\n   }\n \n+  @Override\n+  public List<CRLInfo> getCrls(List<Long> crlIds) throws IOException {\n+    SCMGetCrlsRequestProto protoIns = SCMGetCrlsRequestProto\n+        .newBuilder()\n+        .addAllCrlId(crlIds)\n+        .build();\n+    List<CRLInfoProto> crlInfoProtoList = submitRequest(Type.GetCrls,\n+        builder -> builder.setGetCrlsRequest(protoIns))\n+        .getGetCrlsResponseProto().getCrlInfosList();\n+    List<CRLInfo> result = new ArrayList<>();\n+    for (CRLInfoProto crlProto : crlInfoProtoList) {\n+      try {\n+        CRLInfo crlInfo = CRLInfo.fromProtobuf(crlProto);\n+        result.add(crlInfo);\n+      } catch (CRLException | CertificateException e) {\n+        throw new SCMSecurityException(\"Fail to parse CRL info\", e);\n+      }\n+    }\n+    return result;\n+  }\n+\n+  @Override\n+  public long getLatestCrlId() throws IOException {\n+    SCMGetLatestCrlIdRequestProto protoIns =  SCMGetLatestCrlIdRequestProto\n+        .getDefaultInstance();\n+    return submitRequest(Type.GetLatestCrlId,\n+        builder -> builder.setGetLatestCrlIdRequest(protoIns))\n+        .getGetLatestCrlIdResponseProto().getCrlId();\n+  }\n+\n   /**\n    * Return the proxy object underlying this protocol translator.\n    *"
  },
  {
    "sha": "296526f9ec35a1dd6115e6c6a242ae0f5ee04352",
    "filename": "hadoop-hdds/framework/src/main/java/org/apache/hadoop/hdds/security/x509/certificate/authority/CertificateServer.java",
    "status": "modified",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/apache/ozone/blob/9eefcadb234931243cf8bd9291b253b95933b006/hadoop-hdds/framework/src/main/java/org/apache/hadoop/hdds/security/x509/certificate/authority/CertificateServer.java",
    "raw_url": "https://github.com/apache/ozone/raw/9eefcadb234931243cf8bd9291b253b95933b006/hadoop-hdds/framework/src/main/java/org/apache/hadoop/hdds/security/x509/certificate/authority/CertificateServer.java",
    "contents_url": "https://api.github.com/repos/apache/ozone/contents/hadoop-hdds/framework/src/main/java/org/apache/hadoop/hdds/security/x509/certificate/authority/CertificateServer.java?ref=9eefcadb234931243cf8bd9291b253b95933b006",
    "patch": "@@ -23,6 +23,7 @@\n import org.apache.hadoop.hdds.security.exception.SCMSecurityException;\n import org.apache.hadoop.hdds.security.x509.SecurityConfig;\n import org.apache.hadoop.hdds.security.x509.certificate.authority.CertificateApprover.ApprovalType;\n+import org.apache.hadoop.hdds.security.x509.crl.CRLInfo;\n import org.bouncycastle.asn1.x509.CRLReason;\n import org.bouncycastle.cert.X509CertificateHolder;\n import org.bouncycastle.pkcs.PKCS10CertificationRequest;\n@@ -128,6 +129,20 @@ X509Certificate getCertificate(String certSerialId)\n   List<X509Certificate> listCertificate(HddsProtos.NodeType type,\n       long startSerialId, int count, boolean isRevoked) throws IOException;\n \n+  /**\n+   * Get the CRLInfo based on the CRL Ids.\n+   * @param crlIds - list of crl ids\n+   * @return CRLInfo\n+   * @throws IOException\n+   */\n+  List<CRLInfo> getCrls(List<Long> crlIds) throws IOException;\n+  /**\n+   * Get the latest CRL id.\n+   * @return latest CRL id.\n+   */\n+  long getLatestCrlId();\n+\n+\n   /**\n    * Make it explicit what type of CertificateServer we are creating here.\n    */"
  },
  {
    "sha": "d5dd13b3a94cd2377d335a56597f984296b71cb8",
    "filename": "hadoop-hdds/framework/src/main/java/org/apache/hadoop/hdds/security/x509/certificate/authority/CertificateStore.java",
    "status": "modified",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/apache/ozone/blob/9eefcadb234931243cf8bd9291b253b95933b006/hadoop-hdds/framework/src/main/java/org/apache/hadoop/hdds/security/x509/certificate/authority/CertificateStore.java",
    "raw_url": "https://github.com/apache/ozone/raw/9eefcadb234931243cf8bd9291b253b95933b006/hadoop-hdds/framework/src/main/java/org/apache/hadoop/hdds/security/x509/certificate/authority/CertificateStore.java",
    "contents_url": "https://api.github.com/repos/apache/ozone/contents/hadoop-hdds/framework/src/main/java/org/apache/hadoop/hdds/security/x509/certificate/authority/CertificateStore.java?ref=9eefcadb234931243cf8bd9291b253b95933b006",
    "patch": "@@ -20,6 +20,7 @@\n package org.apache.hadoop.hdds.security.x509.certificate.authority;\n \n import org.apache.hadoop.hdds.protocol.proto.HddsProtos;\n+import org.apache.hadoop.hdds.security.x509.crl.CRLInfo;\n import org.bouncycastle.asn1.x509.CRLReason;\n import org.bouncycastle.cert.X509CertificateHolder;\n \n@@ -103,6 +104,20 @@ X509Certificate getCertificateByID(BigInteger serialID, CertType certType)\n       BigInteger startSerialID, int count, CertType certType)\n       throws IOException;\n \n+  /**\n+   * Get the CRLInfo based on the CRL Ids.\n+   * @param crlIds - list of crl ids\n+   * @return CRLInfo\n+   * @throws IOException\n+   */\n+  List<CRLInfo> getCrls(List<Long> crlIds) throws IOException;\n+\n+  /**\n+   * Get the latest CRL id.\n+   * @return latest CRL id.\n+   */\n+  long getLatestCrlId();\n+\n   /**\n    * Different kind of Certificate stores.\n    */"
  },
  {
    "sha": "97f303cd477d36493ddf307aee4f1d25ca832664",
    "filename": "hadoop-hdds/framework/src/main/java/org/apache/hadoop/hdds/security/x509/certificate/authority/DefaultCAServer.java",
    "status": "modified",
    "additions": 18,
    "deletions": 3,
    "changes": 21,
    "blob_url": "https://github.com/apache/ozone/blob/9eefcadb234931243cf8bd9291b253b95933b006/hadoop-hdds/framework/src/main/java/org/apache/hadoop/hdds/security/x509/certificate/authority/DefaultCAServer.java",
    "raw_url": "https://github.com/apache/ozone/raw/9eefcadb234931243cf8bd9291b253b95933b006/hadoop-hdds/framework/src/main/java/org/apache/hadoop/hdds/security/x509/certificate/authority/DefaultCAServer.java",
    "contents_url": "https://api.github.com/repos/apache/ozone/contents/hadoop-hdds/framework/src/main/java/org/apache/hadoop/hdds/security/x509/certificate/authority/DefaultCAServer.java?ref=9eefcadb234931243cf8bd9291b253b95933b006",
    "patch": "@@ -30,6 +30,7 @@\n import org.apache.hadoop.hdds.security.x509.certificate.authority.PKIProfiles.PKIProfile;\n import org.apache.hadoop.hdds.security.x509.certificate.utils.CertificateCodec;\n import org.apache.hadoop.hdds.security.x509.certificates.utils.SelfSignedCertificate;\n+import org.apache.hadoop.hdds.security.x509.crl.CRLInfo;\n import org.apache.hadoop.hdds.security.x509.keys.HDDSKeyGenerator;\n import org.apache.hadoop.hdds.security.x509.keys.KeyCodec;\n import org.apache.hadoop.ozone.OzoneSecurityUtil;\n@@ -62,7 +63,6 @@\n import java.util.function.Consumer;\n \n import static org.apache.hadoop.hdds.security.x509.certificates.utils.CertificateSignRequest.getCertificationRequest;\n-import static org.apache.hadoop.hdds.security.x509.exceptions.CertificateException.ErrorCode.CSR_ERROR;\n \n /**\n  * The default CertificateServer used by SCM. This has no dependencies on any\n@@ -319,6 +319,22 @@ private X509CertificateHolder signAndStoreCertificate(LocalDate beginDate,\n             CertificateStore.CertType.VALID_CERTS);\n   }\n \n+  /**\n+   * Get the CRLInfo based on the CRL Ids.\n+   * @param crlIds - list of crl ids\n+   * @return CRLInfo\n+   * @throws IOException\n+   */\n+  @Override\n+  public List<CRLInfo> getCrls(List<Long> crlIds) throws IOException {\n+    return store.getCrls(crlIds);\n+  }\n+\n+  @Override\n+  public long getLatestCrlId() {\n+    return store.getLatestCrlId();\n+  }\n+\n   /**\n    * Generates a Self Signed CertificateServer. These are the steps in\n    * generating a Self-Signed CertificateServer.\n@@ -519,8 +535,7 @@ private void generateRootCertificate(SecurityConfig securityConfig,\n     } catch (IOException e) {\n       throw new org.apache.hadoop.hdds.security.x509\n           .exceptions.CertificateException(\n-              \"Error while adding ip to CA self signed certificate\", e,\n-          CSR_ERROR);\n+              \"Error while adding ip to CA self signed certificate\", e);\n     }\n     X509CertificateHolder selfSignedCertificate = builder.build();\n "
  },
  {
    "sha": "796cb5b29283fde2fbcc64715889366893fc6283",
    "filename": "hadoop-hdds/framework/src/main/java/org/apache/hadoop/hdds/security/x509/certificate/client/CertificateClient.java",
    "status": "modified",
    "additions": 17,
    "deletions": 0,
    "changes": 17,
    "blob_url": "https://github.com/apache/ozone/blob/9eefcadb234931243cf8bd9291b253b95933b006/hadoop-hdds/framework/src/main/java/org/apache/hadoop/hdds/security/x509/certificate/client/CertificateClient.java",
    "raw_url": "https://github.com/apache/ozone/raw/9eefcadb234931243cf8bd9291b253b95933b006/hadoop-hdds/framework/src/main/java/org/apache/hadoop/hdds/security/x509/certificate/client/CertificateClient.java",
    "contents_url": "https://api.github.com/repos/apache/ozone/contents/hadoop-hdds/framework/src/main/java/org/apache/hadoop/hdds/security/x509/certificate/client/CertificateClient.java?ref=9eefcadb234931243cf8bd9291b253b95933b006",
    "patch": "@@ -20,8 +20,10 @@\n package org.apache.hadoop.hdds.security.x509.certificate.client;\n \n import org.apache.hadoop.hdds.security.x509.certificates.utils.CertificateSignRequest;\n+import org.apache.hadoop.hdds.security.x509.crl.CRLInfo;\n import org.apache.hadoop.hdds.security.x509.exceptions.CertificateException;\n \n+import java.io.IOException;\n import java.io.InputStream;\n import java.security.PrivateKey;\n import java.security.PublicKey;\n@@ -212,4 +214,19 @@ void storeTrustChain(List<X509Certificate> certificates)\n    */\n   String getSecurityProvider();\n \n+  /**\n+   * Get the CRLInfo based on the CRL Ids.\n+   * @param crlIds - list of crl ids\n+   * @return list of CRLInfo\n+   * @throws IOException\n+   */\n+  List<CRLInfo> getCrls(List<Long> crlIds) throws IOException;\n+\n+  /**\n+   * Get the latest CRL id.\n+   * @return latest CRL id.\n+   * @throws IOException\n+   */\n+  long getLatestCrlId() throws IOException;\n+\n }"
  },
  {
    "sha": "8a4193a72e3c3ed1165f225dbb450ff93d06e286",
    "filename": "hadoop-hdds/framework/src/main/java/org/apache/hadoop/hdds/security/x509/certificate/client/DefaultCertificateClient.java",
    "status": "modified",
    "additions": 28,
    "deletions": 0,
    "changes": 28,
    "blob_url": "https://github.com/apache/ozone/blob/9eefcadb234931243cf8bd9291b253b95933b006/hadoop-hdds/framework/src/main/java/org/apache/hadoop/hdds/security/x509/certificate/client/DefaultCertificateClient.java",
    "raw_url": "https://github.com/apache/ozone/raw/9eefcadb234931243cf8bd9291b253b95933b006/hadoop-hdds/framework/src/main/java/org/apache/hadoop/hdds/security/x509/certificate/client/DefaultCertificateClient.java",
    "contents_url": "https://api.github.com/repos/apache/ozone/contents/hadoop-hdds/framework/src/main/java/org/apache/hadoop/hdds/security/x509/certificate/client/DefaultCertificateClient.java?ref=9eefcadb234931243cf8bd9291b253b95933b006",
    "patch": "@@ -47,6 +47,7 @@\n import org.apache.hadoop.hdds.protocol.SCMSecurityProtocol;\n import org.apache.hadoop.hdds.protocolPB.SCMSecurityProtocolClientSideTranslatorPB;\n import org.apache.hadoop.hdds.protocolPB.SCMSecurityProtocolPB;\n+import org.apache.hadoop.hdds.security.x509.crl.CRLInfo;\n import org.apache.hadoop.hdds.utils.HddsServerUtil;\n import org.apache.hadoop.hdds.scm.protocolPB.ScmBlockLocationProtocolPB;\n import org.apache.hadoop.hdds.security.x509.SecurityConfig;\n@@ -271,6 +272,33 @@ public X509Certificate getCertificate(String certId)\n     return this.getCertificateFromScm(certId);\n   }\n \n+  @Override\n+  public List<CRLInfo> getCrls(List<Long> crlIds) throws IOException {\n+    try {\n+      SCMSecurityProtocol scmSecurityProtocolClient = getScmSecurityClient(\n+          (OzoneConfiguration) securityConfig.getConfiguration());\n+      return scmSecurityProtocolClient.getCrls(crlIds);\n+    } catch (Exception e) {\n+      getLogger().error(\"Error while getting CRL with \" +\n+          \"CRL ids:{} from scm.\", crlIds, e);\n+      throw new CertificateException(\"Error while getting CRL with \" +\n+          \"CRL ids:\" + crlIds, e);\n+    }\n+  }\n+\n+  @Override\n+  public long getLatestCrlId() throws IOException {\n+    try {\n+      SCMSecurityProtocol scmSecurityProtocolClient = getScmSecurityClient(\n+          (OzoneConfiguration) securityConfig.getConfiguration());\n+      return scmSecurityProtocolClient.getLatestCrlId();\n+    } catch (Exception e) {\n+      getLogger().error(\"Error while getting latest CRL id from scm.\", e);\n+      throw new CertificateException(\"Error while getting latest CRL id from\" +\n+          \" scm.\", e);\n+    }\n+  }\n+\n   /**\n    * Get certificate from SCM and store it in local file system.\n    * @param certId"
  },
  {
    "sha": "55a0128f1c9a0e353f40bdab23c4f0a512fdf932",
    "filename": "hadoop-hdds/framework/src/test/java/org/apache/hadoop/hdds/security/x509/certificate/authority/MockCAStore.java",
    "status": "modified",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/apache/ozone/blob/9eefcadb234931243cf8bd9291b253b95933b006/hadoop-hdds/framework/src/test/java/org/apache/hadoop/hdds/security/x509/certificate/authority/MockCAStore.java",
    "raw_url": "https://github.com/apache/ozone/raw/9eefcadb234931243cf8bd9291b253b95933b006/hadoop-hdds/framework/src/test/java/org/apache/hadoop/hdds/security/x509/certificate/authority/MockCAStore.java",
    "contents_url": "https://api.github.com/repos/apache/ozone/contents/hadoop-hdds/framework/src/test/java/org/apache/hadoop/hdds/security/x509/certificate/authority/MockCAStore.java?ref=9eefcadb234931243cf8bd9291b253b95933b006",
    "patch": "@@ -20,6 +20,7 @@\n package org.apache.hadoop.hdds.security.x509.certificate.authority;\n \n import org.apache.hadoop.hdds.protocol.proto.HddsProtos;\n+import org.apache.hadoop.hdds.security.x509.crl.CRLInfo;\n import org.bouncycastle.asn1.x509.CRLReason;\n import org.bouncycastle.cert.X509CertificateHolder;\n import java.io.IOException;\n@@ -70,4 +71,14 @@ public X509Certificate getCertificateByID(BigInteger serialID,\n       throws IOException {\n     return Collections.emptyList();\n   }\n+\n+  @Override\n+  public List<CRLInfo> getCrls(List<Long> crlIds) throws IOException {\n+    return Collections.emptyList();\n+  }\n+\n+  @Override\n+  public long getLatestCrlId() {\n+    return 0;\n+  }\n }"
  },
  {
    "sha": "b67e831400a7ae4f18b777370e1e283dd4a8622b",
    "filename": "hadoop-hdds/interface-server/src/main/proto/ScmServerSecurityProtocol.proto",
    "status": "modified",
    "additions": 28,
    "deletions": 0,
    "changes": 28,
    "blob_url": "https://github.com/apache/ozone/blob/9eefcadb234931243cf8bd9291b253b95933b006/hadoop-hdds/interface-server/src/main/proto/ScmServerSecurityProtocol.proto",
    "raw_url": "https://github.com/apache/ozone/raw/9eefcadb234931243cf8bd9291b253b95933b006/hadoop-hdds/interface-server/src/main/proto/ScmServerSecurityProtocol.proto",
    "contents_url": "https://api.github.com/repos/apache/ozone/contents/hadoop-hdds/interface-server/src/main/proto/ScmServerSecurityProtocol.proto?ref=9eefcadb234931243cf8bd9291b253b95933b006",
    "patch": "@@ -49,6 +49,8 @@ message SCMSecurityRequest {\n     optional SCMGetCertificateRequestProto getCertificateRequest = 5;\n     optional SCMGetCACertificateRequestProto getCACertificateRequest = 6;\n     optional SCMListCertificateRequestProto listCertificateRequest = 7;\n+    optional SCMGetCrlsRequestProto getCrlsRequest = 8;\n+    optional SCMGetLatestCrlIdRequestProto getLatestCrlIdRequest = 9;\n \n }\n \n@@ -69,6 +71,10 @@ message SCMSecurityResponse {\n \n     optional SCMListCertificateResponseProto listCertificateResponseProto = 7;\n \n+    optional SCMGetCrlsResponseProto getCrlsResponseProto = 8;\n+\n+    optional SCMGetLatestCrlIdResponseProto getLatestCrlIdResponseProto = 9;\n+\n }\n \n enum Type {\n@@ -77,6 +83,8 @@ enum Type {\n     GetCertificate = 3;\n     GetCACertificate = 4;\n     ListCertificate = 5;\n+    GetCrls = 6;\n+    GetLatestCrlId = 7;\n }\n \n enum Status {\n@@ -149,6 +157,26 @@ message SCMListCertificateResponseProto {\n     repeated string certificates = 2;\n }\n \n+/**\n+* Proto request to get CRL.\n+*/\n+message SCMGetCrlsRequestProto {\n+    repeated int64 crlId = 1;\n+}\n+\n+message SCMGetCrlsResponseProto {\n+    repeated CRLInfoProto crlInfos = 1;\n+}\n+\n+/**\n+* Proto request to get latest CRL id.\n+*/\n+message SCMGetLatestCrlIdRequestProto {\n+}\n+\n+message SCMGetLatestCrlIdResponseProto {\n+    optional int64 crlId = 1;\n+}\n \n service SCMSecurityProtocolService {\n     rpc submitRequest (SCMSecurityRequest) returns (SCMSecurityResponse);"
  },
  {
    "sha": "f755ddd9489035f6a7ad622d39819a1d3751c8cf",
    "filename": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/protocol/SCMSecurityProtocolServerSideTranslatorPB.java",
    "status": "modified",
    "additions": 43,
    "deletions": 0,
    "changes": 43,
    "blob_url": "https://github.com/apache/ozone/blob/9eefcadb234931243cf8bd9291b253b95933b006/hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/protocol/SCMSecurityProtocolServerSideTranslatorPB.java",
    "raw_url": "https://github.com/apache/ozone/raw/9eefcadb234931243cf8bd9291b253b95933b006/hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/protocol/SCMSecurityProtocolServerSideTranslatorPB.java",
    "contents_url": "https://api.github.com/repos/apache/ozone/contents/hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/protocol/SCMSecurityProtocolServerSideTranslatorPB.java?ref=9eefcadb234931243cf8bd9291b253b95933b006",
    "patch": "@@ -24,14 +24,20 @@\n import org.apache.hadoop.hdds.protocol.proto.SCMSecurityProtocolProtos.SCMGetCertResponseProto;\n import org.apache.hadoop.hdds.protocol.proto.SCMSecurityProtocolProtos.SCMGetCertResponseProto.ResponseCode;\n import org.apache.hadoop.hdds.protocol.proto.SCMSecurityProtocolProtos.SCMGetCertificateRequestProto;\n+import org.apache.hadoop.hdds.protocol.proto.SCMSecurityProtocolProtos.SCMGetCrlsRequestProto;\n+import org.apache.hadoop.hdds.protocol.proto.SCMSecurityProtocolProtos.SCMGetCrlsResponseProto;\n import org.apache.hadoop.hdds.protocol.proto.SCMSecurityProtocolProtos.SCMGetDataNodeCertRequestProto;\n+import org.apache.hadoop.hdds.protocol.proto.SCMSecurityProtocolProtos.SCMGetLatestCrlIdRequestProto;\n+import org.apache.hadoop.hdds.protocol.proto.SCMSecurityProtocolProtos.SCMGetLatestCrlIdResponseProto;\n import org.apache.hadoop.hdds.protocol.proto.SCMSecurityProtocolProtos.SCMGetOMCertRequestProto;\n import org.apache.hadoop.hdds.protocol.proto.SCMSecurityProtocolProtos.SCMListCertificateRequestProto;\n import org.apache.hadoop.hdds.protocol.proto.SCMSecurityProtocolProtos.SCMListCertificateResponseProto;\n import org.apache.hadoop.hdds.protocol.proto.SCMSecurityProtocolProtos.SCMSecurityRequest;\n import org.apache.hadoop.hdds.protocol.proto.SCMSecurityProtocolProtos.SCMSecurityResponse;\n import org.apache.hadoop.hdds.protocol.proto.SCMSecurityProtocolProtos.Status;\n import org.apache.hadoop.hdds.protocolPB.SCMSecurityProtocolPB;\n+import org.apache.hadoop.hdds.security.exception.SCMSecurityException;\n+import org.apache.hadoop.hdds.security.x509.crl.CRLInfo;\n import org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher;\n import org.apache.hadoop.hdds.utils.ProtocolMessageMetrics;\n \n@@ -112,6 +118,19 @@ public SCMSecurityResponse processRequest(SCMSecurityRequest request)\n             .setListCertificateResponseProto(\n                 listCertificate(request.getListCertificateRequest()))\n             .build();\n+      case GetCrls:\n+        return SCMSecurityResponse.newBuilder()\n+            .setCmdType(request.getCmdType())\n+            .setStatus(Status.OK)\n+            .setGetCrlsResponseProto(getCrls(request.getGetCrlsRequest()))\n+            .build();\n+      case GetLatestCrlId:\n+        return SCMSecurityResponse.newBuilder()\n+            .setCmdType(request.getCmdType())\n+            .setStatus(Status.OK)\n+            .setGetLatestCrlIdResponseProto(getLatestCrlId(\n+                request.getGetLatestCrlIdRequest()))\n+            .build();\n       default:\n         throw new IllegalArgumentException(\n             \"Unknown request type: \" + request.getCmdType());\n@@ -207,6 +226,30 @@ public SCMListCertificateResponseProto listCertificate(\n             .addAllCertificates(certs);\n     return builder.build();\n \n+  }\n \n+  public SCMGetCrlsResponseProto getCrls(\n+      SCMGetCrlsRequestProto request) throws IOException {\n+    List<CRLInfo> crls = impl.getCrls(request.getCrlIdList());\n+    SCMGetCrlsResponseProto.Builder builder =\n+        SCMGetCrlsResponseProto.newBuilder();\n+    for (CRLInfo crl : crls) {\n+      try {\n+        builder.addCrlInfos(crl.getProtobuf());\n+      } catch (SCMSecurityException e) {\n+        LOG.error(\"Fail in parsing CRL info\", e);\n+        throw new SCMSecurityException(\"Fail in parsing CRL info\", e);\n+      }\n+    }\n+    return builder.build();\n+  }\n+\n+  public SCMGetLatestCrlIdResponseProto getLatestCrlId(\n+      SCMGetLatestCrlIdRequestProto request) throws IOException {\n+    SCMGetLatestCrlIdResponseProto.Builder builder =\n+        SCMGetLatestCrlIdResponseProto\n+            .newBuilder().\n+            setCrlId(impl.getLatestCrlId());\n+    return builder.build();\n   }\n }\n\\ No newline at end of file"
  },
  {
    "sha": "5cc1184d2232aa313ac0d0969ee4ace0f111905c",
    "filename": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/server/SCMCertStore.java",
    "status": "modified",
    "additions": 23,
    "deletions": 0,
    "changes": 23,
    "blob_url": "https://github.com/apache/ozone/blob/9eefcadb234931243cf8bd9291b253b95933b006/hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/server/SCMCertStore.java",
    "raw_url": "https://github.com/apache/ozone/raw/9eefcadb234931243cf8bd9291b253b95933b006/hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/server/SCMCertStore.java",
    "contents_url": "https://api.github.com/repos/apache/ozone/contents/hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/server/SCMCertStore.java?ref=9eefcadb234931243cf8bd9291b253b95933b006",
    "patch": "@@ -209,4 +209,27 @@ public X509Certificate getCertificateByID(BigInteger serialID,\n     }\n     return results;\n   }\n+\n+  @Override\n+  public List<CRLInfo> getCrls(List<Long> crlIds) throws IOException {\n+    List<CRLInfo> results = new ArrayList<>();\n+    for (Long crlId : crlIds) {\n+      try {\n+        CRLInfo crlInfo =\n+            scmMetadataStore.getCRLInfoTable().get(crlId);\n+        results.add(crlInfo);\n+      } catch (IOException e) {\n+        LOG.error(\"Fail to get CRLs from SCM metadata store for crlId: \"\n+            + crlId, e);\n+        throw new SCMSecurityException(\"Fail to get CRLs from SCM metadata \" +\n+            \"store for crlId: \" + crlId, e);\n+      }\n+    }\n+    return results;\n+  }\n+\n+  @Override\n+  public long getLatestCrlId() {\n+    return crlSequenceId.get();\n+  }\n }"
  },
  {
    "sha": "cc79b0092caed45a32ab2e36744f03fb16152ec3",
    "filename": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/server/SCMSecurityProtocolServer.java",
    "status": "modified",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/apache/ozone/blob/9eefcadb234931243cf8bd9291b253b95933b006/hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/server/SCMSecurityProtocolServer.java",
    "raw_url": "https://github.com/apache/ozone/raw/9eefcadb234931243cf8bd9291b253b95933b006/hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/server/SCMSecurityProtocolServer.java",
    "contents_url": "https://api.github.com/repos/apache/ozone/contents/hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/server/SCMSecurityProtocolServer.java?ref=9eefcadb234931243cf8bd9291b253b95933b006",
    "patch": "@@ -38,6 +38,7 @@\n import org.apache.hadoop.hdds.protocolPB.SCMSecurityProtocolPB;\n import org.apache.hadoop.hdds.scm.protocol.SCMSecurityProtocolServerSideTranslatorPB;\n import org.apache.hadoop.hdds.security.exception.SCMSecurityException;\n+import org.apache.hadoop.hdds.security.x509.crl.CRLInfo;\n import org.apache.hadoop.hdds.utils.HddsServerUtil;\n import org.apache.hadoop.hdds.scm.ScmConfig;\n import org.apache.hadoop.hdds.scm.ScmConfigKeys;\n@@ -222,6 +223,16 @@ public String getCACertificate() throws IOException {\n     return results;\n   }\n \n+  @Override\n+  public List<CRLInfo> getCrls(List<Long> crlIds) throws IOException {\n+    return certificateServer.getCrls(crlIds);\n+  }\n+\n+  @Override\n+  public long getLatestCrlId() {\n+    return certificateServer.getLatestCrlId();\n+  }\n+\n   public RPC.Server getRpcServer() {\n     return rpcServer;\n   }"
  },
  {
    "sha": "10bd5f5955742b004dd4c3a8e9c2050e21f7bfa0",
    "filename": "hadoop-hdds/server-scm/src/test/java/org/apache/hadoop/hdds/scm/server/TestSCMCertStore.java",
    "status": "modified",
    "additions": 13,
    "deletions": 4,
    "changes": 17,
    "blob_url": "https://github.com/apache/ozone/blob/9eefcadb234931243cf8bd9291b253b95933b006/hadoop-hdds/server-scm/src/test/java/org/apache/hadoop/hdds/scm/server/TestSCMCertStore.java",
    "raw_url": "https://github.com/apache/ozone/raw/9eefcadb234931243cf8bd9291b253b95933b006/hadoop-hdds/server-scm/src/test/java/org/apache/hadoop/hdds/scm/server/TestSCMCertStore.java",
    "contents_url": "https://api.github.com/repos/apache/ozone/contents/hadoop-hdds/server-scm/src/test/java/org/apache/hadoop/hdds/scm/server/TestSCMCertStore.java?ref=9eefcadb234931243cf8bd9291b253b95933b006",
    "patch": "@@ -44,6 +44,7 @@\n import java.security.cert.X509CRLEntry;\n import java.security.cert.X509Certificate;\n import java.util.ArrayList;\n+import java.util.Arrays;\n import java.util.Date;\n import java.util.Iterator;\n import java.util.List;\n@@ -142,6 +143,13 @@ public void testRevokeCertificates() throws Exception {\n         scmCertStore.getCertificateByID(serialID,\n             CertificateStore.CertType.REVOKED_CERTS));\n \n+    long crlId = scmCertStore.getLatestCrlId();\n+    assertEquals(sequenceId.get().longValue(), crlId);\n+\n+    List<CRLInfo> crls = scmCertStore.getCrls(Arrays.asList(crlId));\n+    assertEquals(1, crls.size());\n+\n+\n     // CRL Info table should have a CRL with sequence id\n     assertNotNull(scmMetadataStore.getCRLInfoTable()\n         .get(sequenceId.get()));\n@@ -150,8 +158,7 @@ public void testRevokeCertificates() throws Exception {\n     assertEquals(INITIAL_SEQUENCE_ID + 1L, (long)\n         scmMetadataStore.getCRLSequenceIdTable().get(CRL_SEQUENCE_ID_KEY));\n \n-    CRLInfo crlInfo =\n-        scmMetadataStore.getCRLInfoTable().get(sequenceId.get());\n+    CRLInfo crlInfo = crls.get(0);\n \n     Set<? extends X509CRLEntry> revokedCertificates =\n         crlInfo.getX509CRL().getRevokedCertificates();\n@@ -186,14 +193,16 @@ public void testRevokeCertificates() throws Exception {\n     // This should create a CRL with sequence id INITIAL_SEQUENCE_ID + 2\n     // And contain 2 certificates in it\n     assertTrue(sequenceId.isPresent());\n+    assertEquals(sequenceId.get().longValue(),\n+        scmCertStore.getLatestCrlId());\n     assertEquals(INITIAL_SEQUENCE_ID + 2L, (long) sequenceId.get());\n \n     // Check the sequence ID table for latest sequence id\n     assertEquals(INITIAL_SEQUENCE_ID + 2L, (long)\n         scmMetadataStore.getCRLSequenceIdTable().get(CRL_SEQUENCE_ID_KEY));\n \n-    CRLInfo newCrlInfo = scmMetadataStore.getCRLInfoTable()\n-        .get(sequenceId.get());\n+    CRLInfo newCrlInfo = scmCertStore.getCrls(Arrays.asList(\n+        INITIAL_SEQUENCE_ID + 2)).get(0);\n     revokedCertificates = newCrlInfo.getX509CRL().getRevokedCertificates();\n     assertEquals(2L, revokedCertificates.size());\n     assertNotNull("
  },
  {
    "sha": "d000f2ddf8ce9a938e230367f1ce27c79aeb64b4",
    "filename": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/client/CertificateClientTestImpl.java",
    "status": "modified",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/apache/ozone/blob/9eefcadb234931243cf8bd9291b253b95933b006/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/client/CertificateClientTestImpl.java",
    "raw_url": "https://github.com/apache/ozone/raw/9eefcadb234931243cf8bd9291b253b95933b006/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/client/CertificateClientTestImpl.java",
    "contents_url": "https://api.github.com/repos/apache/ozone/contents/hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/client/CertificateClientTestImpl.java?ref=9eefcadb234931243cf8bd9291b253b95933b006",
    "patch": "@@ -16,6 +16,7 @@\n  */\n package org.apache.hadoop.ozone.client;\n \n+import java.io.IOException;\n import java.io.InputStream;\n import java.security.KeyPair;\n import java.security.PrivateKey;\n@@ -24,13 +25,15 @@\n import java.security.cert.X509Certificate;\n import java.time.LocalDate;\n import java.time.temporal.ChronoUnit;\n+import java.util.Collections;\n import java.util.List;\n \n import org.apache.hadoop.hdds.conf.OzoneConfiguration;\n import org.apache.hadoop.hdds.security.x509.SecurityConfig;\n import org.apache.hadoop.hdds.security.x509.certificate.client.CertificateClient;\n import org.apache.hadoop.hdds.security.x509.certificates.utils.CertificateSignRequest;\n import org.apache.hadoop.hdds.security.x509.certificates.utils.SelfSignedCertificate;\n+import org.apache.hadoop.hdds.security.x509.crl.CRLInfo;\n import org.apache.hadoop.hdds.security.x509.exceptions.CertificateException;\n import org.apache.hadoop.hdds.security.x509.keys.HDDSKeyGenerator;\n \n@@ -183,4 +186,14 @@ public String getSecurityProvider(){\n     return securityConfig.getProvider();\n   }\n \n+  @Override\n+  public List<CRLInfo> getCrls(List<Long> crlIds) throws IOException {\n+    return Collections.emptyList();\n+  }\n+\n+  @Override\n+  public long getLatestCrlId() throws IOException {\n+    return 0;\n+  }\n+\n }"
  }
]
