[
  {
    "sha": "fcd37188115874110be6770a7b789f4883f31c12",
    "filename": "hadoop-ozone/dist/src/main/compose/testlib.sh",
    "status": "modified",
    "additions": 4,
    "deletions": 13,
    "changes": 17,
    "blob_url": "https://github.com/apache/ozone/blob/01bf4ac223ef27bdcbf137bad9c252cff498273d/hadoop-ozone/dist/src/main/compose/testlib.sh",
    "raw_url": "https://github.com/apache/ozone/raw/01bf4ac223ef27bdcbf137bad9c252cff498273d/hadoop-ozone/dist/src/main/compose/testlib.sh",
    "contents_url": "https://api.github.com/repos/apache/ozone/contents/hadoop-ozone/dist/src/main/compose/testlib.sh?ref=01bf4ac223ef27bdcbf137bad9c252cff498273d",
    "patch": "@@ -108,7 +108,7 @@ wait_for_om_leader() {\n \n   #Don't give it up until 120 seconds\n   while [[ $SECONDS -lt 120 ]]; do\n-    local command=\"ozone admin om roles --service-id '${OM_SERVICE_ID}'\"\n+    local command=\"ozone admin om getserviceroles --service-id '${OM_SERVICE_ID}'\"\n     if [[ \"${SECURITY_ENABLED}\" == 'true' ]]; then\n       status=$(docker-compose exec -T scm bash -c \"kinit -k scm/scm@EXAMPLE.COM -t /etc/security/keytabs/scm.keytab && $command\" | grep LEADER)\n     else\n@@ -140,7 +140,7 @@ start_docker_env(){\n   if ! { docker-compose --no-ansi up -d --scale datanode=\"${datanode_count}\" \\\n       && wait_for_safemode_exit \\\n       && wait_for_om_leader ; }; then\n-    OUTPUT_NAME=\"$COMPOSE_ENV_NAME\"\n+    [[ -n \"$OUTPUT_NAME\" ]] || OUTPUT_NAME=\"$COMPOSE_ENV_NAME\"\n     stop_docker_env\n     return 1\n   fi\n@@ -159,7 +159,7 @@ execute_robot_test(){\n   TEST_NAME=$(basename \"$TEST\")\n   TEST_NAME=\"$(basename \"$COMPOSE_DIR\")-${TEST_NAME%.*}\"\n   set +e\n-  OUTPUT_NAME=\"$COMPOSE_ENV_NAME-$TEST_NAME-$CONTAINER\"\n+  [[ -n \"$OUTPUT_NAME\" ]] || OUTPUT_NAME=\"$COMPOSE_ENV_NAME-$TEST_NAME-$CONTAINER\"\n \n   # find unique filename\n   declare -i i=0\n@@ -357,23 +357,14 @@ prepare_for_binary_image() {\n ##   (no binaries included)\n ## @param `ozone-runner` image version (optional)\n prepare_for_runner_image() {\n-  local default_version=${docker.ozone-runner.version} # set at build-time from Maven property\n+  local default_version=20210226-1 # set at build-time from Maven property\n   local runner_version=${OZONE_RUNNER_VERSION:-${default_version}} # may be specified by user running the test\n   local v=${1:-${runner_version}} # prefer explicit argument\n \n   export OZONE_DIR=/opt/hadoop\n   export OZONE_IMAGE=\"apache/ozone-runner:${v}\"\n }\n \n-## @description Print the logical version for a specific release\n-## @param the release for which logical version should be printed\n-get_logical_version() {\n-  local v=\"$1\"\n-\n-  # shellcheck source=/dev/null\n-  echo $(source \"${_testlib_dir}/versions/${v}.sh\" && ozone_logical_version)\n-}\n-\n ## @description Activate the version-specific behavior for a given release\n ## @param the release for which definitions should be loaded\n load_version_specifics() {"
  },
  {
    "sha": "aea6dee044c5160aab0ce4a7000c71ebb09486c6",
    "filename": "hadoop-ozone/dist/src/main/compose/upgrade/README.md",
    "status": "modified",
    "additions": 81,
    "deletions": 11,
    "changes": 92,
    "blob_url": "https://github.com/apache/ozone/blob/01bf4ac223ef27bdcbf137bad9c252cff498273d/hadoop-ozone/dist/src/main/compose/upgrade/README.md",
    "raw_url": "https://github.com/apache/ozone/raw/01bf4ac223ef27bdcbf137bad9c252cff498273d/hadoop-ozone/dist/src/main/compose/upgrade/README.md",
    "contents_url": "https://api.github.com/repos/apache/ozone/contents/hadoop-ozone/dist/src/main/compose/upgrade/README.md?ref=01bf4ac223ef27bdcbf137bad9c252cff498273d",
    "patch": "@@ -12,18 +12,88 @@\n   limitations under the License. See accompanying LICENSE file.\n -->\n \n-# Compose file for upgrade\n+# Ozone Upgrade Acceptance Tests\n \n-This directory contains a sample cluster definition and script for\n-testing upgrade from previous version to the current one.\n+This directory contains cluster definitions and scripts for testing upgrades from any previous version to another\n+previous version, or to the local build of the code. It is designed to catch backwards incompatible changes made between\n+an older release of Ozone and a later release (which may be the local build).\n \n-Data for each container is persisted in mounted volume (by default it's\n-`data` under the `compose/upgrade` directory, but can be overridden via\n-`OZONE_VOLUME` environment variable).\n+- **IMPORTANT NOTE**: These tests will not catch backwards incompatible changes against commits in between releases.\n+    - Example:\n+        1. After 1.0.0, a change *c1* is made that is backwards compatible with *1.0.0*.\n+        2. After *c1*, a new change *c2* is made that is also backwards compatible with 1.0.0 but backwards *incompatible* with *c1*.\n+        \n+        - This test suite will not raise an error for *c2*, because it only tests against the last release\n+        (1.0.0), and not the last commit (*c1*).\n+## Directory Layout\n \n-Prior version is run using an official `apache/ozone` image, while the\n-current version is run with the `ozone-runner` image using locally built\n-source code.\n+### upgrades\n \n-Currently the test script only supports a single version upgrade (eg.\n-from 0.5.0 to 1.0.0).\n+Each type of upgrade has a subdirectory under the *upgrades* directory. Each upgrade's steps are controlled by a *test.sh* script in its *upgrades/\\<upgrade-type>* directory. Callbacks to execute throughout the upgrade are called by this script and should be placed in a file called *callback.sh* in the *upgrades/\\<upgrade-type>/\\<upgrade-from>-\\<upgrade-to>* directory. After the test is run, results and docker volume data for the upgrade for these versions will also be placed in this directory. The results of all upgrades run as part of the tests will be placed in a *results* folder in the top level upgrade directory.\n+\n+### compose\n+\n+Docker compose cluster definitions to be used in upgrade testing are defined in the *compose* directory. A compose cluster can be selected by calling the *load.sh* script in the compose cluster's directory on the setup callback for the upgrade test.\n+\n+## Upgrade Types\n+\n+### manual-upgrade\n+\n+- Any necessary conversion of on disk structures from the old version to the new version must be done explicitly.\n+\n+- This is primarily for testing upgrades of versions before the non-rolling upgrade framework was introduced in 1.1.0.\n+\n+- Supported Callbacks:\n+    1. `setup_with_old_version`: Run before ozone is started in the old version.\n+    3. `with_old_version`: Run while ozone is running in the old version.\n+    3. `setup_with_new_version`: Run after ozone is stopped in the old version, but before it is restarted in the new version.\n+    4. `with_new_version`: Run while ozone is running in the new version.\n+\n+### non-rolling-upgrade\n+\n+- Any necessary conversion of on disk structures from the old version to the new version are handled by Ozone's non-rolling upgrade framework.\n+\n+- Supported Callbacks:\n+    1. `setup`: Run before ozone is started in the old version.\n+    3. `with_old_version`: Run while ozone is running in the old version.\n+    3. `with_new_version_pre_finalized`: Run after ozone is stopped in the old version, and brought back up and running in the new version pre finalized.\n+    4. `with_old_version_downgraded`: Run after ozone is stopped in the new version pre finalized, and restarted in the old version again.\n+        - This is how a user would do a downgrade of an upgrade instead of finalizing to finish the upgrade.\n+    5. `with_new_version_finalized`: Run after ozone is stopped in the old version after donwgrade, started again in the new version pre finalized, and then finalized.\n+        - The upgrade will be complete by this point.\n+\n+- Note that on the first upgrade after the non-rolling upgrade fraemwork is added, the old version does not have the non-rolling upgrade framework, but the new version does.\n+    - The non-rolling upgrade framework can still be used, the only difference is that OMs cannot be prepared before moving from the old version to the new version.\n+    - Set the variable `OZONE_PREPARE_OMS` to `false` disable OM preparation as part of the upgrade.\n+\n+## Persisting Data\n+\n+- Data for each container is persisted in a mounted volume.\n+\n+- By default it's `data` under the *compose/upgrade/\\<versions>* directory, but can be overridden with the `OZONE_VOLUME` environment variable.\n+\n+- This allows data to be persisted in the cluster throughout container restarts, meaning that tests can check that data written in older versions is still readable in newer versions.\n+\n+- Data will be available after the tests finish for debugging purposes. It will be erased on a following run of the test.\n+\n+## Extending\n+\n+### Adding New Tests\n+\n+- To add tests to an existing upgrade type, go into its *compose/upgrade/\\<upgrade-type>/\\<versions>/callback.sh* file and add commands in the callback function when they should be run.\n+\n+- Each callback file will have access to the following environment variables:\n+    - `OZONE_UPGRADE_FROM`: The version of ozone being upgraded from.\n+    - `OZONE_UPGRADE_TO`: The version of ozone being upgraded to.\n+    - `TEST_DIR`: The top level *upgrade* directory containing all files for upgrade testing.\n+\n+- The compose cluster used for an upgrade can be overridden by assigning the desired docker compose files to Docker's\n+`COMPOSE_FILE` environment variable and exporting it from the callback file.\n+\n+### Testing New Versions\n+\n+- To test upgrade between different versions, add a line `run_test <upgrade-type> <old-version> <new-version>` to the top level *test.sh* file.\n+    -  The `run_test` function will execute *\\<upgrade-type>/test.sh* with the callbacks defined in *\\<upgrade-type>/\\<old-version>-\\<new-version>/callback.sh*.\n+\n+- If one of the specified versions does not match the current version defined by `OZONE_CURRENT_VERSION`, it will be pulled from the corresponding *apache/ozone* docker image.\n+    - Else, the current version will be used, which will run the locally built source code in the `apache/ozone-runner` image."
  },
  {
    "sha": "0562ce59b0439f02b0262d330f095872f7b300a4",
    "filename": "hadoop-ozone/dist/src/main/compose/upgrade/compose/ha/.env",
    "status": "added",
    "additions": 26,
    "deletions": 0,
    "changes": 26,
    "blob_url": "https://github.com/apache/ozone/blob/01bf4ac223ef27bdcbf137bad9c252cff498273d/hadoop-ozone/dist/src/main/compose/upgrade/compose/ha/.env",
    "raw_url": "https://github.com/apache/ozone/raw/01bf4ac223ef27bdcbf137bad9c252cff498273d/hadoop-ozone/dist/src/main/compose/upgrade/compose/ha/.env",
    "contents_url": "https://api.github.com/repos/apache/ozone/contents/hadoop-ozone/dist/src/main/compose/upgrade/compose/ha/.env?ref=01bf4ac223ef27bdcbf137bad9c252cff498273d",
    "patch": "@@ -0,0 +1,26 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+HDDS_VERSION=1.1.0-SNAPSHOT\n+OZONE_RUNNER_VERSION=20200625-1\n+OZONE_IMAGE=apache/ozone-runner:20200625-1\n+OZONE_DIR=/opt/hadoop\n+OZONE_VOLUME=./data\n+OM_SERVICE_ID=omservice\n+# Indicates no arguments to the OM.\n+# This variable must be set to some non-empty value, or docker compose will\n+# expand it to an empty string and pass that to the OM as an argument.\n+OM_HA_ARGS=--"
  },
  {
    "sha": "87593cd3805d8b3210e7e47ba43f8617bf5015eb",
    "filename": "hadoop-ozone/dist/src/main/compose/upgrade/compose/ha/docker-compose.yaml",
    "status": "added",
    "additions": 162,
    "deletions": 0,
    "changes": 162,
    "blob_url": "https://github.com/apache/ozone/blob/01bf4ac223ef27bdcbf137bad9c252cff498273d/hadoop-ozone/dist/src/main/compose/upgrade/compose/ha/docker-compose.yaml",
    "raw_url": "https://github.com/apache/ozone/raw/01bf4ac223ef27bdcbf137bad9c252cff498273d/hadoop-ozone/dist/src/main/compose/upgrade/compose/ha/docker-compose.yaml",
    "contents_url": "https://api.github.com/repos/apache/ozone/contents/hadoop-ozone/dist/src/main/compose/upgrade/compose/ha/docker-compose.yaml?ref=01bf4ac223ef27bdcbf137bad9c252cff498273d",
    "patch": "@@ -0,0 +1,162 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+version: \"3.4\"\n+\n+# reusable fragments (see https://docs.docker.com/compose/compose-file/#extension-fields)\n+x-common-config:\n+  &common-config\n+  env_file:\n+    - docker-config\n+  image: ${OZONE_IMAGE}\n+\n+x-replication:\n+  &replication\n+  OZONE-SITE.XML_ozone.replication: ${OZONE_REPLICATION_FACTOR:-3}\n+\n+x-datanode:\n+  &datanode\n+  command: [\"ozone\",\"datanode\"]\n+  <<: *common-config\n+  environment:\n+    <<: *replication\n+  ports:\n+    - 9864\n+    - 9882\n+\n+x-om:\n+  &om\n+  command: [\"ozone\",\"om\",\"${OM_HA_ARGS}\"]\n+  <<: *common-config\n+  environment:\n+    ENSURE_OM_INITIALIZED: /data/metadata/om/current/VERSION\n+    <<: *replication\n+  ports:\n+    - 9862\n+    - 9872\n+\n+# TODO: Make sure these rel paths are correct.\n+x-volumes:\n+    - &ozone-dir ../../../..:${OZONE_DIR}\n+    # TODO: Determine if this is needed.\n+    - &transformation ../../../../libexec/transformation.py:/opt/hadoop/libexec/transformation.py\n+\n+services:\n+  om1:\n+    <<: *om\n+    networks:\n+      net:\n+        ipv4_address: 10.9.0.11\n+    volumes:\n+      - ${OZONE_VOLUME}/om1:/data\n+      - *ozone-dir\n+      - *transformation\n+  om2:\n+    <<: *om\n+    networks:\n+      net:\n+        ipv4_address: 10.9.0.12\n+    volumes:\n+      - ${OZONE_VOLUME}/om2:/data\n+      - *ozone-dir\n+      - *transformation\n+  om3:\n+    <<: *om\n+    networks:\n+      net:\n+        ipv4_address: 10.9.0.13\n+    volumes:\n+      - ${OZONE_VOLUME}/om3:/data\n+      - *ozone-dir\n+      - *transformation\n+\n+  scm:\n+    command: [\"ozone\",\"scm\"]\n+    <<: *common-config\n+    environment:\n+      ENSURE_SCM_INITIALIZED: /data/metadata/scm/current/VERSION\n+      OZONE-SITE.XML_hdds.scm.safemode.min.datanode: ${OZONE_SAFEMODE_MIN_DATANODES:-1}\n+      <<: *replication\n+    networks:\n+      net:\n+        ipv4_address: 10.9.0.14\n+    ports:\n+      - 9876:9876\n+    volumes:\n+      - ${OZONE_VOLUME}/scm:/data\n+      - *ozone-dir\n+      - *transformation\n+  dn1:\n+    <<: *datanode\n+    networks:\n+      net:\n+        ipv4_address: 10.9.0.15\n+    volumes:\n+      - ${OZONE_VOLUME}/dn1:/data\n+      - *ozone-dir\n+      - *transformation\n+  dn2:\n+    <<: *datanode\n+    networks:\n+      net:\n+        ipv4_address: 10.9.0.16\n+    volumes:\n+      - ${OZONE_VOLUME}/dn2:/data\n+      - *ozone-dir\n+      - *transformation\n+  dn3:\n+    <<: *datanode\n+    networks:\n+      net:\n+        ipv4_address: 10.9.0.17\n+    volumes:\n+      - ${OZONE_VOLUME}/dn3:/data\n+      - *ozone-dir\n+      - *transformation\n+  recon:\n+    command: [\"ozone\",\"recon\"]\n+    <<: *common-config\n+    environment:\n+      <<: *replication\n+    networks:\n+      net:\n+        ipv4_address: 10.9.0.18\n+    ports:\n+      - 9888:9888\n+    volumes:\n+      - ${OZONE_VOLUME}/recon:/data\n+      - *ozone-dir\n+      - *transformation\n+  s3g:\n+    command: [\"ozone\",\"s3g\"]\n+    <<: *common-config\n+    environment:\n+      <<: *replication\n+    networks:\n+      net:\n+        ipv4_address: 10.9.0.19\n+    ports:\n+      - 9878:9878\n+    volumes:\n+      - ${OZONE_VOLUME}/s3g:/data\n+      - *ozone-dir\n+      - *transformation\n+networks:\n+  net:\n+    driver: bridge\n+    ipam:\n+      config:\n+      - subnet: 10.9.0.0/16"
  },
  {
    "sha": "99f38be4d98c120aa6f435ffe6895b4352c62e57",
    "filename": "hadoop-ozone/dist/src/main/compose/upgrade/compose/ha/docker-config",
    "status": "added",
    "additions": 40,
    "deletions": 0,
    "changes": 40,
    "blob_url": "https://github.com/apache/ozone/blob/01bf4ac223ef27bdcbf137bad9c252cff498273d/hadoop-ozone/dist/src/main/compose/upgrade/compose/ha/docker-config",
    "raw_url": "https://github.com/apache/ozone/raw/01bf4ac223ef27bdcbf137bad9c252cff498273d/hadoop-ozone/dist/src/main/compose/upgrade/compose/ha/docker-config",
    "contents_url": "https://api.github.com/repos/apache/ozone/contents/hadoop-ozone/dist/src/main/compose/upgrade/compose/ha/docker-config?ref=01bf4ac223ef27bdcbf137bad9c252cff498273d",
    "patch": "@@ -0,0 +1,40 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+OZONE-SITE.XML_ozone.scm.names=scm\n+OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data\n+OZONE-SITE.XML_ozone.scm.block.client.address=scm\n+OZONE-SITE.XML_ozone.scm.container.size=1GB\n+OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata\n+OZONE-SITE.XML_ozone.scm.client.address=scm\n+OZONE-SITE.XML_ozone.client.failover.max.attempts=6\n+OZONE-SITE.XML_hdds.datanode.dir=/data/hdds\n+OZONE-SITE.XML_ozone.recon.address=recon:9888\n+OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon\n+\n+no_proxy=scm,s3g,recon,kdc,localhost,127.0.0.1\n+\n+CORE-SITE.XML_fs.defaultFS=ofs://omservice/\n+\n+OZONE-SITE.XML_ozone.om.service.ids=omservice\n+OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3\n+OZONE-SITE.XML_ozone.om.address.omservice.om1=om1\n+OZONE-SITE.XML_ozone.om.address.omservice.om2=om2\n+OZONE-SITE.XML_ozone.om.address.omservice.om3=om3\n+OZONE-SITE.XML_ozone.om.ratis.enable=true\n+\n+no_proxy=om1,om2,om3,scm,s3g,recon,kdc,localhost,127.0.0.1\n+"
  },
  {
    "sha": "530cfb02092834612d1f07dfeae496b9cae856c6",
    "filename": "hadoop-ozone/dist/src/main/compose/upgrade/compose/ha/load.sh",
    "status": "renamed",
    "additions": 8,
    "deletions": 5,
    "changes": 13,
    "blob_url": "https://github.com/apache/ozone/blob/01bf4ac223ef27bdcbf137bad9c252cff498273d/hadoop-ozone/dist/src/main/compose/upgrade/compose/ha/load.sh",
    "raw_url": "https://github.com/apache/ozone/raw/01bf4ac223ef27bdcbf137bad9c252cff498273d/hadoop-ozone/dist/src/main/compose/upgrade/compose/ha/load.sh",
    "contents_url": "https://api.github.com/repos/apache/ozone/contents/hadoop-ozone/dist/src/main/compose/upgrade/compose/ha/load.sh?ref=01bf4ac223ef27bdcbf137bad9c252cff498273d",
    "patch": "@@ -15,10 +15,13 @@\n # See the License for the specific language governing permissions and\n # limitations under the License.\n \n-_mydir=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" >/dev/null 2>&1 && pwd )\"\n+# Fail if required variables are not set.\n+set -u\n+: \"${OZONE_VOLUME}\"\n+: \"${TEST_DIR}\"\n+set +u\n \n-export OZONE_UPGRADE_FROM=\"$(basename ${_mydir})\"\n-export RESULT_DIR=\"${_mydir}/result\"\n+source \"$TEST_DIR/testlib.sh\"\n \n-cd \"${_mydir}/..\"\n-source upgrade_to_current.sh\n+export COMPOSE_FILE=\"$TEST_DIR/compose/ha/docker-compose.yaml\"\n+create_data_dirs \"${OZONE_VOLUME}\"/{om1,om2,om3,dn1,dn2,dn3,recon,s3g,scm}",
    "previous_filename": "hadoop-ozone/dist/src/main/compose/upgrade/1.0.0/test.sh"
  },
  {
    "sha": "cb86377e3d356e9f773d264415167ad7aca831bf",
    "filename": "hadoop-ozone/dist/src/main/compose/upgrade/compose/non-ha/.env",
    "status": "renamed",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/apache/ozone/blob/01bf4ac223ef27bdcbf137bad9c252cff498273d/hadoop-ozone/dist/src/main/compose/upgrade/compose/non-ha/.env",
    "raw_url": "https://github.com/apache/ozone/raw/01bf4ac223ef27bdcbf137bad9c252cff498273d/hadoop-ozone/dist/src/main/compose/upgrade/compose/non-ha/.env",
    "contents_url": "https://api.github.com/repos/apache/ozone/contents/hadoop-ozone/dist/src/main/compose/upgrade/compose/non-ha/.env?ref=01bf4ac223ef27bdcbf137bad9c252cff498273d",
    "patch": "@@ -14,8 +14,8 @@\n # See the License for the specific language governing permissions and\n # limitations under the License.\n \n-HDDS_VERSION=${hdds.version}\n-OZONE_RUNNER_VERSION=${docker.ozone-runner.version}\n-OZONE_IMAGE=apache/ozone-runner:${docker.ozone-runner.version}\n+HDDS_VERSION=1.1.0-SNAPSHOT\n+OZONE_RUNNER_VERSION=20200625-1\n+OZONE_IMAGE=apache/ozone-runner:20200625-1\n OZONE_DIR=/opt/hadoop\n-OZONE_VOLUME=.\n+OZONE_VOLUME=./data",
    "previous_filename": "hadoop-ozone/dist/src/main/compose/upgrade/.env"
  },
  {
    "sha": "4b1d64e0cefbe0e45a072fd812a6b4efa7a50821",
    "filename": "hadoop-ozone/dist/src/main/compose/upgrade/compose/non-ha/docker-compose.yaml",
    "status": "renamed",
    "additions": 51,
    "deletions": 48,
    "changes": 99,
    "blob_url": "https://github.com/apache/ozone/blob/01bf4ac223ef27bdcbf137bad9c252cff498273d/hadoop-ozone/dist/src/main/compose/upgrade/compose/non-ha/docker-compose.yaml",
    "raw_url": "https://github.com/apache/ozone/raw/01bf4ac223ef27bdcbf137bad9c252cff498273d/hadoop-ozone/dist/src/main/compose/upgrade/compose/non-ha/docker-compose.yaml",
    "contents_url": "https://api.github.com/repos/apache/ozone/contents/hadoop-ozone/dist/src/main/compose/upgrade/compose/non-ha/docker-compose.yaml?ref=01bf4ac223ef27bdcbf137bad9c252cff498273d",
    "patch": "@@ -37,95 +37,98 @@ x-datanode:\n     - 9864\n     - 9882\n \n+x-volumes:\n+    - &ozone-dir ${TEST_DIR}/../..:${OZONE_DIR}\n+    - &transformation ${TEST_DIR}/../../libexec/transformation.py:/opt/hadoop/libexec/transformation.py\n+\n services:\n+  om:\n+    command: [\"ozone\",\"om\"]\n+    <<: *common-config\n+    environment:\n+      ENSURE_OM_INITIALIZED: /data/metadata/om/current/VERSION\n+      <<: *replication\n+    ports:\n+      - 9862\n+      - 9874\n+    networks:\n+      net:\n+        ipv4_address: 10.9.0.11\n+    volumes:\n+      - ${OZONE_VOLUME}/om:/data\n+      - *ozone-dir\n+      - *transformation\n+  scm:\n+    command: [\"ozone\",\"scm\"]\n+    <<: *common-config\n+    environment:\n+      ENSURE_SCM_INITIALIZED: /data/metadata/scm/current/VERSION\n+      OZONE-SITE.XML_hdds.scm.safemode.min.datanode: ${OZONE_SAFEMODE_MIN_DATANODES:-1}\n+      <<: *replication\n+    networks:\n+      net:\n+        ipv4_address: 10.9.0.12\n+    ports:\n+      - 9876:9876\n+    volumes:\n+      - ${OZONE_VOLUME}/scm:/data\n+      - *ozone-dir\n+      - *transformation\n   dn1:\n     <<: *datanode\n     networks:\n       net:\n-        ipv4_address: 10.9.0.11\n+        ipv4_address: 10.9.0.13\n     volumes:\n       - ${OZONE_VOLUME}/dn1:/data\n-      - ../..:${OZONE_DIR}\n-      - ../../libexec/transformation.py:/opt/hadoop/libexec/transformation.py\n+      - *ozone-dir\n+      - *transformation\n   dn2:\n     <<: *datanode\n     networks:\n       net:\n-        ipv4_address: 10.9.0.12\n+        ipv4_address: 10.9.0.14\n     volumes:\n       - ${OZONE_VOLUME}/dn2:/data\n-      - ../..:${OZONE_DIR}\n-      - ../../libexec/transformation.py:/opt/hadoop/libexec/transformation.py\n+      - *ozone-dir\n+      - *transformation\n   dn3:\n     <<: *datanode\n     networks:\n       net:\n-        ipv4_address: 10.9.0.13\n+        ipv4_address: 10.9.0.15\n     volumes:\n       - ${OZONE_VOLUME}/dn3:/data\n-      - ../..:${OZONE_DIR}\n-      - ../../libexec/transformation.py:/opt/hadoop/libexec/transformation.py\n-  om:\n-    command: [\"ozone\",\"om\"]\n-    <<: *common-config\n-    environment:\n-      ENSURE_OM_INITIALIZED: /data/metadata/om/current/VERSION\n-      <<: *replication\n-    networks:\n-      net:\n-        ipv4_address: 10.9.0.14\n-    ports:\n-      - 9874:9874\n-      - 9862:9862\n-    volumes:\n-      - ${OZONE_VOLUME}/om:/data\n-      - ../..:${OZONE_DIR}\n-      - ../../libexec/transformation.py:/opt/hadoop/libexec/transformation.py\n+      - *ozone-dir\n+      - *transformation\n   recon:\n     command: [\"ozone\",\"recon\"]\n     <<: *common-config\n     environment:\n       <<: *replication\n     networks:\n       net:\n-        ipv4_address: 10.9.0.15\n+        ipv4_address: 10.9.0.16\n     ports:\n       - 9888:9888\n     volumes:\n       - ${OZONE_VOLUME}/recon:/data\n-      - ../..:${OZONE_DIR}\n-      - ../../libexec/transformation.py:/opt/hadoop/libexec/transformation.py\n+      - *ozone-dir\n+      - *transformation\n   s3g:\n     command: [\"ozone\",\"s3g\"]\n     <<: *common-config\n     environment:\n       <<: *replication\n     networks:\n       net:\n-        ipv4_address: 10.9.0.16\n+        ipv4_address: 10.9.0.17\n     ports:\n       - 9878:9878\n     volumes:\n       - ${OZONE_VOLUME}/s3g:/data\n-      - ../..:${OZONE_DIR}\n-      - ../../libexec/transformation.py:/opt/hadoop/libexec/transformation.py\n-  scm:\n-    command: [\"ozone\",\"scm\"]\n-    <<: *common-config\n-    environment:\n-      ENSURE_SCM_INITIALIZED: /data/metadata/scm/current/VERSION\n-      OZONE-SITE.XML_hdds.scm.safemode.min.datanode: ${OZONE_SAFEMODE_MIN_DATANODES:-1}\n-      <<: *replication\n-    networks:\n-      net:\n-        ipv4_address: 10.9.0.17\n-    ports:\n-      - 9876:9876\n-    volumes:\n-      - ${OZONE_VOLUME}/scm:/data\n-      - ../..:${OZONE_DIR}\n-      - ../../libexec/transformation.py:/opt/hadoop/libexec/transformation.py\n-\n+      - *ozone-dir\n+      - *transformation\n networks:\n   net:\n     driver: bridge",
    "previous_filename": "hadoop-ozone/dist/src/main/compose/upgrade/docker-compose.yaml"
  },
  {
    "sha": "f43367c60bc25aa3df474f36aeb098137791f289",
    "filename": "hadoop-ozone/dist/src/main/compose/upgrade/compose/non-ha/docker-config",
    "status": "renamed",
    "additions": 7,
    "deletions": 13,
    "changes": 20,
    "blob_url": "https://github.com/apache/ozone/blob/01bf4ac223ef27bdcbf137bad9c252cff498273d/hadoop-ozone/dist/src/main/compose/upgrade/compose/non-ha/docker-config",
    "raw_url": "https://github.com/apache/ozone/raw/01bf4ac223ef27bdcbf137bad9c252cff498273d/hadoop-ozone/dist/src/main/compose/upgrade/compose/non-ha/docker-config",
    "contents_url": "https://api.github.com/repos/apache/ozone/contents/hadoop-ozone/dist/src/main/compose/upgrade/compose/non-ha/docker-config?ref=01bf4ac223ef27bdcbf137bad9c252cff498273d",
    "patch": "@@ -14,24 +14,18 @@\n # See the License for the specific language governing permissions and\n # limitations under the License.\n \n-CORE-SITE.XML_fs.ofs.impl=org.apache.hadoop.fs.ozone.RootedOzoneFileSystem\n-CORE-SITE.XML_fs.o3fs.impl=org.apache.hadoop.fs.ozone.OzoneFileSystem\n-OZONE-SITE.XML_ozone.om.address=om\n-OZONE-SITE.XML_ozone.om.http-address=om:9874\n-OZONE-SITE.XML_ozone.scm.container.size=1GB\n-OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s\n-OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1\n OZONE-SITE.XML_ozone.scm.names=scm\n OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data\n OZONE-SITE.XML_ozone.scm.block.client.address=scm\n+OZONE-SITE.XML_ozone.scm.container.size=1GB\n OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata\n-OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon\n OZONE-SITE.XML_ozone.scm.client.address=scm\n+OZONE-SITE.XML_ozone.client.failover.max.attempts=6\n OZONE-SITE.XML_hdds.datanode.dir=/data/hdds\n-OZONE-SITE.XML_ozone.recon.address=recon:9891\n-OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m\n+OZONE-SITE.XML_ozone.recon.address=recon:9888\n+OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon\n \n-OZONE_CONF_DIR=/etc/hadoop\n-OZONE_LOG_DIR=/var/log/hadoop\n+OZONE-SITE.XML_ozone.om.address=om\n+OZONE-SITE.XML_ozone.om.http-address=om:9874\n \n-no_proxy=om,scm,s3g,kdc,localhost,127.0.0.1\n+no_proxy=om,scm,s3g,recon,kdc,localhost,127.0.0.1",
    "previous_filename": "hadoop-ozone/dist/src/main/compose/upgrade/docker-config"
  },
  {
    "sha": "a8980e75fc196079620035e375edc0507409a94f",
    "filename": "hadoop-ozone/dist/src/main/compose/upgrade/compose/non-ha/load.sh",
    "status": "renamed",
    "additions": 8,
    "deletions": 5,
    "changes": 13,
    "blob_url": "https://github.com/apache/ozone/blob/01bf4ac223ef27bdcbf137bad9c252cff498273d/hadoop-ozone/dist/src/main/compose/upgrade/compose/non-ha/load.sh",
    "raw_url": "https://github.com/apache/ozone/raw/01bf4ac223ef27bdcbf137bad9c252cff498273d/hadoop-ozone/dist/src/main/compose/upgrade/compose/non-ha/load.sh",
    "contents_url": "https://api.github.com/repos/apache/ozone/contents/hadoop-ozone/dist/src/main/compose/upgrade/compose/non-ha/load.sh?ref=01bf4ac223ef27bdcbf137bad9c252cff498273d",
    "patch": "@@ -15,10 +15,13 @@\n # See the License for the specific language governing permissions and\n # limitations under the License.\n \n-_mydir=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" >/dev/null 2>&1 && pwd )\"\n+# Fail if required variables are not set.\n+set -u\n+: \"${OZONE_VOLUME}\"\n+: \"${TEST_DIR}\"\n+set +u\n \n-export OZONE_UPGRADE_FROM=\"$(basename ${_mydir})\"\n-export RESULT_DIR=\"${_mydir}/result\"\n+source \"$TEST_DIR/testlib.sh\"\n \n-cd \"${_mydir}/..\"\n-source upgrade_to_current.sh\n+export COMPOSE_FILE=\"$TEST_DIR/compose/non-ha/docker-compose.yaml\"\n+create_data_dirs \"${OZONE_VOLUME}\"/{om,dn1,dn2,dn3,recon,s3g,scm}",
    "previous_filename": "hadoop-ozone/dist/src/main/compose/upgrade/0.5.0/test.sh"
  },
  {
    "sha": "c0e3a408ef00f7a0f099e3a0cf12b457ba512c2e",
    "filename": "hadoop-ozone/dist/src/main/compose/upgrade/test.sh",
    "status": "modified",
    "additions": 18,
    "deletions": 17,
    "changes": 35,
    "blob_url": "https://github.com/apache/ozone/blob/01bf4ac223ef27bdcbf137bad9c252cff498273d/hadoop-ozone/dist/src/main/compose/upgrade/test.sh",
    "raw_url": "https://github.com/apache/ozone/raw/01bf4ac223ef27bdcbf137bad9c252cff498273d/hadoop-ozone/dist/src/main/compose/upgrade/test.sh",
    "contents_url": "https://api.github.com/repos/apache/ozone/contents/hadoop-ozone/dist/src/main/compose/upgrade/test.sh?ref=01bf4ac223ef27bdcbf137bad9c252cff498273d",
    "patch": "@@ -15,27 +15,28 @@\n # See the License for the specific language governing permissions and\n # limitations under the License.\n \n-SCRIPT_DIR=$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" >/dev/null && pwd )\n-ALL_RESULT_DIR=\"$SCRIPT_DIR/result\"\n-mkdir -p \"$ALL_RESULT_DIR\"\n-rm \"$ALL_RESULT_DIR\"/* || true\n-source \"$SCRIPT_DIR/../testlib.sh\"\n+# Version that will be run using the local build.\n+: \"${OZONE_CURRENT_VERSION:=1.1.0}\"\n+export OZONE_CURRENT_VERSION\n \n-tests=$(find_tests)\n-cd \"$SCRIPT_DIR\"\n+TEST_DIR=$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" >/dev/null && pwd )\n+source \"$TEST_DIR/testlib.sh\"\n \n-RESULT=0\n-# shellcheck disable=SC2044\n-for t in ${tests}; do\n-  d=\"$(dirname \"${t}\")\"\n+# Export variables needed by tests.\n+export TEST_DIR\n+# Required by ../testlib.sh.\n+export COMPOSE_DIR=\"$TEST_DIR\"\n \n-  if ! run_test_script \"${d}\"; then\n-    RESULT=1\n-  fi\n+RESULT_DIR=\"$ALL_RESULT_DIR\" create_results_dir\n \n-  copy_results \"${d}\" \"${ALL_RESULT_DIR}\"\n-done\n+# Upgrade tests to be run.\n+# Run all upgrades even if one fails.\n+# Any failure will save a failing return code to $RESULT.\n+set +e\n+run_test manual-upgrade 0.5.0 1.1.0\n+run_test non-rolling-upgrade 1.0.0 1.1.0\n+set -e\n \n generate_report \"upgrade\" \"${ALL_RESULT_DIR}\"\n \n-exit ${RESULT}\n+exit \"$RESULT\""
  },
  {
    "sha": "4191700be56dbf1c99606160d54e6bc73c0a1c85",
    "filename": "hadoop-ozone/dist/src/main/compose/upgrade/testlib.sh",
    "status": "modified",
    "additions": 102,
    "deletions": 33,
    "changes": 135,
    "blob_url": "https://github.com/apache/ozone/blob/01bf4ac223ef27bdcbf137bad9c252cff498273d/hadoop-ozone/dist/src/main/compose/upgrade/testlib.sh",
    "raw_url": "https://github.com/apache/ozone/raw/01bf4ac223ef27bdcbf137bad9c252cff498273d/hadoop-ozone/dist/src/main/compose/upgrade/testlib.sh",
    "contents_url": "https://api.github.com/repos/apache/ozone/contents/hadoop-ozone/dist/src/main/compose/upgrade/testlib.sh?ref=01bf4ac223ef27bdcbf137bad9c252cff498273d",
    "patch": "@@ -17,64 +17,133 @@\n \n set -e -o pipefail\n \n+# Fail if required variables are not set.\n+set -u\n+: \"${OZONE_CURRENT_VERSION}\"\n+set +u\n+\n _upgrade_dir=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" >/dev/null 2>&1 && pwd )\"\n \n+# Cumulative result of all tests run with run_test function.\n+# 0 if all passed, 1 if any failed.\n+: \"${RESULT:=0}\"\n : \"${OZONE_REPLICATION_FACTOR:=3}\"\n-: \"${OZONE_VOLUME:=\"${COMPOSE_DIR}/data\"}\"\n : \"${OZONE_VOLUME_OWNER:=}\"\n+: \"${ALL_RESULT_DIR:=\"$_upgrade_dir\"/result}\"\n+\n+# export for docker-compose\n+export OZONE_VOLUME\n+export OZONE_REPLICATION_FACTOR\n \n source \"${_upgrade_dir}/../testlib.sh\"\n \n ## @description Create the directory tree required for persisting data between\n ##   compose cluster restarts\n-create_data_dir() {\n+create_data_dirs() {\n+  local dirs_to_create=\"$@\"\n+\n   if [[ -z \"${OZONE_VOLUME}\" ]]; then\n     return 1\n   fi\n \n   rm -fr \"${OZONE_VOLUME}\" 2> /dev/null || sudo rm -fr \"${OZONE_VOLUME}\"\n-  mkdir -p \"${OZONE_VOLUME}\"/{dn1,dn2,dn3,om,recon,s3g,scm}\n+  mkdir -p $dirs_to_create\n   fix_data_dir_permissions\n }\n \n-## @description Run upgrade steps required for going from one logical version to another.\n-## @param Starting logical version\n-## @param Target logical version\n-execute_upgrade_steps() {\n-  local -i from=$1\n-  local -i to=$2\n+## @description Prepares to run an image with `start_docker_env`.\n+## @param the version of Ozone to be run.\n+##   If this is equal to `OZONE_CURRENT_VERSION`, then the ozone runner image wil be used.\n+##   Else, a binary image will be used.\n+prepare_for_image() {\n+  local image_version=\"$1\"\n \n-  if [[ ${from} -ge ${to} ]]; then\n-    return\n+  if [[ \"$image_version\" = \"$OZONE_CURRENT_VERSION\" ]]; then\n+      prepare_for_runner_image\n+  else\n+      prepare_for_binary_image \"$image_version\"\n   fi\n+}\n \n-  pushd ${_testlib_dir}/../libexec/upgrade\n+## @description Runs a callback function only if it exists.\n+## @param The name of the function to run.\n+callback() {\n+  local func=\"$1\"\n+  if type -t \"$func\" > /dev/null; then\n+    \"$func\"\n+  else\n+    echo \"Skipping callback $func. No implementation found.\"\n+  fi\n+}\n+\n+## @description Sets up and runs the test defined by \"$1\"/test.sh.\n+## @param The directory for the upgrade type whose test.sh file will be run.\n+## @param The version of Ozone to upgrade from.\n+## @param The version of Ozone to upgrade to.\n+run_test() {\n+  # Export variables needed by test, since it is run in a subshell.\n+  local test_dir=\"$_upgrade_dir/upgrades/$1\"\n+  export OZONE_UPGRADE_FROM=\"$2\"\n+  export OZONE_UPGRADE_TO=\"$3\"\n+  local test_subdir=\"$test_dir\"/\"$OZONE_UPGRADE_FROM\"-\"$OZONE_UPGRADE_TO\"\n+  export OZONE_UPGRADE_CALLBACK=\"$test_subdir\"/callback.sh\n+  export OZONE_VOLUME=\"$test_subdir\"/data\n+  export RESULT_DIR=\"$test_subdir\"/result\n+\n+  if ! run_test_script \"${test_dir}\"; then\n+    RESULT=1\n+  fi\n \n-  local v\n-  for v in $(seq ${from} $((to-1))); do\n-    if [[ -e \"v$v.sh\" ]]; then\n-      source \"v$v.sh\"\n+  generate_report 'upgrade' \"$RESULT_DIR\"\n+  copy_results \"$test_subdir\" \"${ALL_RESULT_DIR}\"\n+}\n+\n+## @description Generates data on the cluster.\n+## @param The prefix to use for data generated.\n+generate() {\n+    execute_robot_test scm -v PREFIX:\"$1\" upgrade/generate.robot\n+}\n+\n+## @description Validates that data exists on the cluster.\n+## @param The prefix of the data to be validated.\n+validate() {\n+    execute_robot_test scm -v PREFIX:\"$1\" upgrade/validate.robot\n+}\n+\n+## @description Checks that the metadata layout version of the provided node matches what is expected.\n+## @param The name of the docker-compose service to run the check on.\n+## @param The path to the VERSION file in the container.\n+## @param The metadata layout version expected for that service.\n+check_mlv() {\n+    service=\"$1\"\n+    container_id=\"$(docker container ps --quiet --filter \"name=$service\")\"\n+\n+    # If some containers go down during the test run due to resources issues,\n+    # just print a message instead of failing the test.\n+    if  [[ -n \"$container_id\" ]]; then\n+      execute_robot_test \"$service\" -v VERSION_FILE:\"$2\" -v VERSION:\"$3\" upgrade/check-mlv.robot\n+    else\n+      echo \"No matching containers for docker-compose service $service found. Skipping MLV check.\"\n     fi\n-  done\n+}\n \n-  popd\n+## @description Checks that the metadata layout version of a datanode matches what is expected.\n+## @param The name of the docker-compose service to run the check on.\n+## @param The metadata layout version expected for that service.\n+check_dn_mlv() {\n+  check_mlv \"$1\" /data/metadata/dnlayoutversion/VERSION \"$2\"\n }\n \n-## @description Pre-upgrade test steps\n-first_run() {\n-  start_docker_env\n-  execute_robot_test scm -v PREFIX:pre freon/generate.robot\n-  execute_robot_test scm -v PREFIX:pre freon/validate.robot\n-  KEEP_RUNNING=false stop_docker_env\n+## @description Checks that the metadata layout version of an OM matches what is expected.\n+## @param The name of the docker-compose service to run the check on.\n+## @param The metadata layout version expected for that service.\n+check_om_mlv() {\n+  check_mlv \"$1\" /data/metadata/om/current/VERSION \"$2\"\n }\n \n-## @description Post-upgrade test steps\n-second_run() {\n-  export OZONE_KEEP_RESULTS=true\n-  start_docker_env\n-  execute_robot_test scm -v PREFIX:pre freon/validate.robot\n-  # test write key to old bucket after upgrade\n-  execute_robot_test scm -v PREFIX:post freon/generate.robot\n-  execute_robot_test scm -v PREFIX:post freon/validate.robot\n-  stop_docker_env\n+## @description Checks that the metadata layout version of an SCM matches what is expected.\n+## @param The name of the docker-compose service to run the check on.\n+## @param The metadata layout version expected for that service.\n+check_scm_mlv() {\n+  check_mlv \"$1\" /data/metadata/scm/current/VERSION \"$2\"\n }"
  },
  {
    "sha": "872885196e191e7c7f037f2e152da8fb662a4c92",
    "filename": "hadoop-ozone/dist/src/main/compose/upgrade/upgrade_to_current.sh",
    "status": "removed",
    "additions": 0,
    "deletions": 51,
    "changes": 51,
    "blob_url": "https://github.com/apache/ozone/blob/7eefee7c08a5c410072d7ce11e5a54e8ae01fe6d/hadoop-ozone/dist/src/main/compose/upgrade/upgrade_to_current.sh",
    "raw_url": "https://github.com/apache/ozone/raw/7eefee7c08a5c410072d7ce11e5a54e8ae01fe6d/hadoop-ozone/dist/src/main/compose/upgrade/upgrade_to_current.sh",
    "contents_url": "https://api.github.com/repos/apache/ozone/contents/hadoop-ozone/dist/src/main/compose/upgrade/upgrade_to_current.sh?ref=7eefee7c08a5c410072d7ce11e5a54e8ae01fe6d",
    "patch": "@@ -1,51 +0,0 @@\n-#!/usr/bin/env bash\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#     http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing, software\n-# distributed under the License is distributed on an \"AS IS\" BASIS,\n-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-# See the License for the specific language governing permissions and\n-# limitations under the License.\n-\n-# This script tests upgrade from a previous release to the current\n-# binaries.  Docker image with Ozone binaries is required for the\n-# initial version, while the snapshot version uses Ozone runner image.\n-\n-set -e -o pipefail\n-\n-COMPOSE_DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" >/dev/null 2>&1 && pwd )\"\n-export COMPOSE_DIR\n-\n-: \"${OZONE_REPLICATION_FACTOR:=3}\"\n-: \"${OZONE_UPGRADE_FROM:=\"0.5.0\"}\"\n-: \"${OZONE_VOLUME:=\"${COMPOSE_DIR}/data\"}\"\n-\n-export OZONE_REPLICATION_FACTOR OZONE_UPGRADE_FROM OZONE_VOLUME\n-\n-current_version=1.1.0\n-\n-source \"${COMPOSE_DIR}/testlib.sh\"\n-\n-create_data_dir\n-\n-prepare_for_binary_image \"${OZONE_UPGRADE_FROM}\"\n-load_version_specifics \"${OZONE_UPGRADE_FROM}\"\n-first_run\n-unload_version_specifics\n-\n-from=$(get_logical_version \"${OZONE_UPGRADE_FROM}\")\n-to=$(get_logical_version \"${current_version}\")\n-execute_upgrade_steps \"$from\" \"$to\"\n-\n-prepare_for_runner_image\n-second_run\n-\n-generate_report"
  },
  {
    "sha": "ffaca4fd2ff20cb3e110b4c6cec22da1591fb3b0",
    "filename": "hadoop-ozone/dist/src/main/compose/upgrade/upgrades/manual-upgrade/0.5.0-1.1.0/callback.sh",
    "status": "added",
    "additions": 41,
    "deletions": 0,
    "changes": 41,
    "blob_url": "https://github.com/apache/ozone/blob/01bf4ac223ef27bdcbf137bad9c252cff498273d/hadoop-ozone/dist/src/main/compose/upgrade/upgrades/manual-upgrade/0.5.0-1.1.0/callback.sh",
    "raw_url": "https://github.com/apache/ozone/raw/01bf4ac223ef27bdcbf137bad9c252cff498273d/hadoop-ozone/dist/src/main/compose/upgrade/upgrades/manual-upgrade/0.5.0-1.1.0/callback.sh",
    "contents_url": "https://api.github.com/repos/apache/ozone/contents/hadoop-ozone/dist/src/main/compose/upgrade/upgrades/manual-upgrade/0.5.0-1.1.0/callback.sh?ref=01bf4ac223ef27bdcbf137bad9c252cff498273d",
    "patch": "@@ -0,0 +1,41 @@\n+#!/usr/bin/env bash\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+source \"$TEST_DIR\"/testlib.sh\n+\n+setup_old_version() {\n+  source \"$TEST_DIR\"/compose/non-ha/load.sh\n+  load_version_specifics \"$OZONE_UPGRADE_FROM\"\n+}\n+\n+with_old_version() {\n+  generate old\n+  validate old\n+}\n+\n+setup_new_version() {\n+  unload_version_specifics \"$OZONE_UPGRADE_FROM\"\n+  # Reformat SCM DB from 0.5.0 to format for versions after 1.0.0.\n+  \"$TEST_DIR\"/../../libexec/upgrade/1.0.0.sh\n+  load_version_specifics \"$OZONE_UPGRADE_TO\"\n+}\n+\n+with_new_version() {\n+  validate old\n+  generate new\n+  validate new\n+}"
  },
  {
    "sha": "708f9eceaa680322a0803ab5ef8b274b9cc3b923",
    "filename": "hadoop-ozone/dist/src/main/compose/upgrade/upgrades/manual-upgrade/test.sh",
    "status": "renamed",
    "additions": 33,
    "deletions": 29,
    "changes": 62,
    "blob_url": "https://github.com/apache/ozone/blob/01bf4ac223ef27bdcbf137bad9c252cff498273d/hadoop-ozone/dist/src/main/compose/upgrade/upgrades/manual-upgrade/test.sh",
    "raw_url": "https://github.com/apache/ozone/raw/01bf4ac223ef27bdcbf137bad9c252cff498273d/hadoop-ozone/dist/src/main/compose/upgrade/upgrades/manual-upgrade/test.sh",
    "contents_url": "https://api.github.com/repos/apache/ozone/contents/hadoop-ozone/dist/src/main/compose/upgrade/upgrades/manual-upgrade/test.sh?ref=01bf4ac223ef27bdcbf137bad9c252cff498273d",
    "patch": "@@ -20,32 +20,36 @@\n \n set -e -o pipefail\n \n-COMPOSE_DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" >/dev/null 2>&1 && pwd )\"\n-export COMPOSE_DIR\n-\n-: \"${OZONE_REPLICATION_FACTOR:=3}\"\n-: \"${OZONE_UPGRADE_FROM:=\"0.5.0\"}\"\n-: \"${OZONE_UPGRADE_TO:=\"1.0.0\"}\"\n-: \"${OZONE_VOLUME:=\"${COMPOSE_DIR}/data\"}\"\n-\n-export OZONE_REPLICATION_FACTOR OZONE_UPGRADE_FROM OZONE_UPGRADE_TO OZONE_VOLUME\n-\n-source \"${COMPOSE_DIR}/testlib.sh\"\n-\n-create_data_dir\n-\n-prepare_for_binary_image \"${OZONE_UPGRADE_FROM}\"\n-load_version_specifics \"${OZONE_UPGRADE_FROM}\"\n-first_run\n-unload_version_specifics\n-\n-from=$(get_logical_version \"${OZONE_UPGRADE_FROM}\")\n-to=$(get_logical_version \"${OZONE_UPGRADE_TO}\")\n-execute_upgrade_steps \"$from\" \"$to\"\n-\n-prepare_for_binary_image \"${OZONE_UPGRADE_TO}\"\n-load_version_specifics \"${OZONE_UPGRADE_TO}\"\n-second_run\n-unload_version_specifics\n-\n-generate_report\n+echo \"--- RUNNING MANUAL UPGRADE TEST FROM $OZONE_UPGRADE_FROM TO $OZONE_UPGRADE_TO ---\"\n+\n+# Fail if required vars are not set.\n+set -u\n+: \"${OZONE_UPGRADE_FROM}\"\n+: \"${OZONE_UPGRADE_TO}\"\n+: \"${TEST_DIR}\"\n+: \"${OZONE_UPGRADE_CALLBACK}\"\n+set +u\n+\n+source \"$TEST_DIR\"/testlib.sh\n+source \"$OZONE_UPGRADE_CALLBACK\"\n+\n+echo \"--- SETTING UP OLD VERSION $OZONE_UPGRADE_FROM ---\"\n+OUTPUT_NAME=\"$OZONE_UPGRADE_FROM\"\n+prepare_for_image \"$OZONE_UPGRADE_FROM\"\n+callback setup_old_version\n+\n+echo \"--- RUNNING WITH OLD VERSION $OZONE_UPGRADE_FROM ---\"\n+start_docker_env\n+callback with_old_version\n+stop_docker_env\n+\n+echo \"--- SETTING UP NEW VERSION $OZONE_UPGRADE_TO ---\"\n+OUTPUT_NAME=\"$OZONE_UPGRADE_TO\"\n+prepare_for_image \"$OZONE_UPGRADE_TO\"\n+callback setup_new_version\n+\n+echo \"--- RUNNING WITH NEW VERSION $OZONE_UPGRADE_TO ---\"\n+OZONE_KEEP_RESULTS=true start_docker_env\n+callback with_new_version\n+\n+stop_docker_env",
    "previous_filename": "hadoop-ozone/dist/src/main/compose/upgrade/upgrade_to_release.sh"
  },
  {
    "sha": "6f4b80da61016458c69c36b8d2b5ebf94a6b218f",
    "filename": "hadoop-ozone/dist/src/main/compose/upgrade/upgrades/non-rolling-upgrade/1.0.0-1.1.0/callback.sh",
    "status": "added",
    "additions": 68,
    "deletions": 0,
    "changes": 68,
    "blob_url": "https://github.com/apache/ozone/blob/01bf4ac223ef27bdcbf137bad9c252cff498273d/hadoop-ozone/dist/src/main/compose/upgrade/upgrades/non-rolling-upgrade/1.0.0-1.1.0/callback.sh",
    "raw_url": "https://github.com/apache/ozone/raw/01bf4ac223ef27bdcbf137bad9c252cff498273d/hadoop-ozone/dist/src/main/compose/upgrade/upgrades/non-rolling-upgrade/1.0.0-1.1.0/callback.sh",
    "contents_url": "https://api.github.com/repos/apache/ozone/contents/hadoop-ozone/dist/src/main/compose/upgrade/upgrades/non-rolling-upgrade/1.0.0-1.1.0/callback.sh?ref=01bf4ac223ef27bdcbf137bad9c252cff498273d",
    "patch": "@@ -0,0 +1,68 @@\n+#!/usr/bin/env bash\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+source \"$TEST_DIR\"/testlib.sh\n+\n+# Helper function, not a callback.\n+_check_all_mlvs() {\n+  mlv=\"$1\"\n+  check_om_mlv om1 \"$mlv\"\n+  check_om_mlv om2 \"$mlv\"\n+  check_om_mlv om3 \"$mlv\"\n+  check_scm_mlv scm \"$mlv\"\n+  check_dn_mlv dn1 \"$mlv\"\n+  check_dn_mlv dn2 \"$mlv\"\n+  check_dn_mlv dn3 \"$mlv\"\n+}\n+\n+setup() {\n+  source \"$TEST_DIR\"/compose/ha/load.sh\n+  # OM preparation is not implemented until 1.2.0.\n+  export OZONE_OM_PREPARE='false'\n+  load_version_specifics \"$OZONE_UPGRADE_FROM\"\n+}\n+\n+with_old_version() {\n+  generate old1\n+  validate old1\n+}\n+\n+with_new_version_pre_finalized() {\n+  _check_all_mlvs 0\n+  validate old1\n+\n+  generate new1\n+  validate new1\n+}\n+\n+with_old_version_downgraded() {\n+  validate old1\n+  validate new1\n+\n+  generate old2\n+  validate old2\n+}\n+\n+with_new_version_finalized() {\n+  _check_all_mlvs 1\n+  validate old1\n+  validate new1\n+  validate old2\n+\n+  generate new2\n+  validate new2\n+}"
  },
  {
    "sha": "d23089996e0b3cc909acf46217e95f523b47de67",
    "filename": "hadoop-ozone/dist/src/main/compose/upgrade/upgrades/non-rolling-upgrade/test.sh",
    "status": "added",
    "additions": 102,
    "deletions": 0,
    "changes": 102,
    "blob_url": "https://github.com/apache/ozone/blob/01bf4ac223ef27bdcbf137bad9c252cff498273d/hadoop-ozone/dist/src/main/compose/upgrade/upgrades/non-rolling-upgrade/test.sh",
    "raw_url": "https://github.com/apache/ozone/raw/01bf4ac223ef27bdcbf137bad9c252cff498273d/hadoop-ozone/dist/src/main/compose/upgrade/upgrades/non-rolling-upgrade/test.sh",
    "contents_url": "https://api.github.com/repos/apache/ozone/contents/hadoop-ozone/dist/src/main/compose/upgrade/upgrades/non-rolling-upgrade/test.sh?ref=01bf4ac223ef27bdcbf137bad9c252cff498273d",
    "patch": "@@ -0,0 +1,102 @@\n+#!/usr/bin/env bash\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+# This script tests upgrade from a previous release to the current\n+# binaries.  Docker image with Ozone binaries is required for the\n+# initial version, while the snapshot version uses Ozone runner image.\n+\n+set -e -o pipefail\n+\n+echo \"--- RUNNING NON-ROLLING UPGRADE TEST FROM $OZONE_UPGRADE_FROM TO $OZONE_UPGRADE_TO ---\"\n+\n+# Prepare OMs before upgrade unless this variable is not 'true'.\n+: \"${OZONE_PREPARE_OMS:='true'}\"\n+\n+# Fail if required vars are not set.\n+set -u\n+: \"${OZONE_UPGRADE_FROM}\"\n+: \"${OZONE_UPGRADE_TO}\"\n+: \"${TEST_DIR}\"\n+: \"${OZONE_UPGRADE_CALLBACK}\"\n+set +u\n+\n+# Tells main testlib.sh to wait for an OM leader.\n+export OM_SERVICE_ID=omservice\n+# Default compose cluster to use. May be overridden by callback.sh.\n+export COMPOSE_FILE=\"${TEST_DIR}/compose/ha/docker-compose.yaml\"\n+\n+source \"$TEST_DIR\"/testlib.sh\n+source \"$OZONE_UPGRADE_CALLBACK\"\n+\n+prepare_oms() {\n+  if [[ \"$OZONE_PREPARE_OMS\" = 'true' ]]; then\n+    execute_robot_test scm upgrade/prepare.robot\n+  fi\n+}\n+\n+set_downgrade_om_args() {\n+  if [[ \"$OZONE_PREPARE_OMS\" = 'true' ]]; then\n+    export OM_HA_ARGS='--downgrade'\n+  else\n+    export OM_HA_ARGS='--'\n+  fi\n+}\n+\n+echo \"--- SETTING UP OLD VERSION $OZONE_UPGRADE_FROM ---\"\n+OUTPUT_NAME=\"$OZONE_UPGRADE_FROM\"\n+callback setup\n+export OM_HA_ARGS='--'\n+prepare_for_image \"$OZONE_UPGRADE_FROM\"\n+\n+echo \"--- RUNNING WITH OLD VERSION $OZONE_UPGRADE_FROM ---\"\n+start_docker_env\n+callback with_old_version\n+\n+prepare_oms\n+stop_docker_env\n+prepare_for_image \"$OZONE_UPGRADE_TO\"\n+export OM_HA_ARGS='--upgrade'\n+\n+echo \"--- RUNNING WITH NEW VERSION $OZONE_UPGRADE_TO PRE-FINALIZED ---\"\n+OUTPUT_NAME=\"$OZONE_UPGRADE_TO\"-pre-finalized\n+OZONE_KEEP_RESULTS=true start_docker_env\n+callback with_new_version_pre_finalized\n+\n+prepare_oms\n+stop_docker_env\n+prepare_for_image \"$OZONE_UPGRADE_FROM\"\n+set_downgrade_om_args\n+\n+echo \"--- RUNNING WITH OLD VERSION $OZONE_UPGRADE_FROM AFTER DOWNGRADE ---\"\n+OUTPUT_NAME=\"$OZONE_UPGRADE_FROM\"-downgraded\n+OZONE_KEEP_RESULTS=true start_docker_env\n+callback with_old_version_downgraded\n+\n+prepare_oms\n+stop_docker_env\n+prepare_for_image \"$OZONE_UPGRADE_TO\"\n+export OM_HA_ARGS='--upgrade'\n+\n+echo \"--- RUNNING WITH NEW VERSION $OZONE_UPGRADE_TO FINALIZED ---\"\n+OUTPUT_NAME=\"$OZONE_UPGRADE_TO\"-finalized\n+OZONE_KEEP_RESULTS=true start_docker_env\n+# Sends commands to finalize OM and SCM.\n+execute_robot_test scm upgrade/finalize.robot\n+callback with_new_version_finalized\n+\n+stop_docker_env\n+generate_report"
  },
  {
    "sha": "c974adc3c76fa7f2e43dddfe532f898798e361ef",
    "filename": "hadoop-ozone/dist/src/main/compose/versions/README.md",
    "status": "modified",
    "additions": 0,
    "deletions": 3,
    "changes": 3,
    "blob_url": "https://github.com/apache/ozone/blob/01bf4ac223ef27bdcbf137bad9c252cff498273d/hadoop-ozone/dist/src/main/compose/versions/README.md",
    "raw_url": "https://github.com/apache/ozone/raw/01bf4ac223ef27bdcbf137bad9c252cff498273d/hadoop-ozone/dist/src/main/compose/versions/README.md",
    "contents_url": "https://api.github.com/repos/apache/ozone/contents/hadoop-ozone/dist/src/main/compose/versions/README.md?ref=01bf4ac223ef27bdcbf137bad9c252cff498273d",
    "patch": "@@ -14,10 +14,7 @@\n \n The scripts in this directory define version-specific behavior required for [`testlib.sh`](../testlib.sh).  For example the `ozone admin` command was renamed from `ozone scmcli` in 1.0.0.\n \n-For each release a logical version is defined, starting from 1.  It is incremented only if the new version needs to execute some scripts to handle some (unintended) incompatibility.  For example 1.0.0 or later need to rename some RocksDB column-families when upgrading from 0.5.0.\n-\n Interface:\n \n- * `ozone_logical_version`: print the logical version\n  * `ozone_version_load`: define version-specific variables for the test library\n  * `ozone_version_unload`: unset version-specific variables; this reverts test library behavior to the \"current\" one."
  },
  {
    "sha": "e15b127c0576d0d8eebd3185d7c4561d7f492ec4",
    "filename": "hadoop-ozone/dist/src/main/smoketest/upgrade/check-mlv.robot",
    "status": "added",
    "additions": 37,
    "deletions": 0,
    "changes": 37,
    "blob_url": "https://github.com/apache/ozone/blob/01bf4ac223ef27bdcbf137bad9c252cff498273d/hadoop-ozone/dist/src/main/smoketest/upgrade/check-mlv.robot",
    "raw_url": "https://github.com/apache/ozone/raw/01bf4ac223ef27bdcbf137bad9c252cff498273d/hadoop-ozone/dist/src/main/smoketest/upgrade/check-mlv.robot",
    "contents_url": "https://api.github.com/repos/apache/ozone/contents/hadoop-ozone/dist/src/main/smoketest/upgrade/check-mlv.robot?ref=01bf4ac223ef27bdcbf137bad9c252cff498273d",
    "patch": "@@ -0,0 +1,37 @@\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+*** Settings ***\n+Documentation       Check Metadata layout version present in a version file.\n+Library             OperatingSystem\n+Library             BuiltIn\n+Resource            ../commonlib.robot\n+Test Timeout        5 minutes\n+\n+*** Variables ***\n+${version_prefix}    layoutVersion=\n+\n+*** Test Cases ***\n+Check MLV\n+    # Fail if required variables are not set.\n+    Should not be empty    ${VERSION_FILE}\n+    Should not be empty    ${VERSION}\n+\n+    File should exist    ${VERSION_FILE}\n+    File should not be empty    ${VERSION_FILE}\n+\n+    ${version_file_contents} =    Get File    ${VERSION_FILE}\n+    ${version_line} =    Catenate    SEPARATOR=   ${version_prefix}    ${VERSION}\n+    Should contain    ${version_file_contents}    ${version_line}"
  },
  {
    "sha": "288f9c01507f0e1e1656927eb241836436eecc8d",
    "filename": "hadoop-ozone/dist/src/main/smoketest/upgrade/finalize.robot",
    "status": "added",
    "additions": 31,
    "deletions": 0,
    "changes": 31,
    "blob_url": "https://github.com/apache/ozone/blob/01bf4ac223ef27bdcbf137bad9c252cff498273d/hadoop-ozone/dist/src/main/smoketest/upgrade/finalize.robot",
    "raw_url": "https://github.com/apache/ozone/raw/01bf4ac223ef27bdcbf137bad9c252cff498273d/hadoop-ozone/dist/src/main/smoketest/upgrade/finalize.robot",
    "contents_url": "https://api.github.com/repos/apache/ozone/contents/hadoop-ozone/dist/src/main/smoketest/upgrade/finalize.robot?ref=01bf4ac223ef27bdcbf137bad9c252cff498273d",
    "patch": "@@ -0,0 +1,31 @@\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+*** Settings ***\n+Documentation       Finalize Upgrade of OMs and SCM\n+Resource            ../commonlib.robot\n+Test Timeout        5 minutes\n+Test Setup          Run Keyword if    '${SECURITY_ENABLED}' == 'true'    Kinit test user     testuser     testuser.keytab\n+\n+** Test Cases ***\n+Finalize SCM\n+    ${result} =        Execute      ozone admin scm finalizeupgrade\n+                       #Wait Until Keyword Succeeds      3min       10sec     Should contain   ${result}   OM Preparation successful!\n+                       Log    ${result}\n+\n+Finalize OMs\n+    ${result} =        Execute      ozone admin om finalizeupgrade -id %{OM_SERVICE_ID}\n+                       #Wait Until Keyword Succeeds      3min       10sec     Should contain   ${result}   OM Preparation successful!\n+                       Log    ${result}"
  },
  {
    "sha": "0a146049861dbcc69da1dfc39b7b32043e90ea61",
    "filename": "hadoop-ozone/dist/src/main/smoketest/upgrade/generate.robot",
    "status": "added",
    "additions": 33,
    "deletions": 0,
    "changes": 33,
    "blob_url": "https://github.com/apache/ozone/blob/01bf4ac223ef27bdcbf137bad9c252cff498273d/hadoop-ozone/dist/src/main/smoketest/upgrade/generate.robot",
    "raw_url": "https://github.com/apache/ozone/raw/01bf4ac223ef27bdcbf137bad9c252cff498273d/hadoop-ozone/dist/src/main/smoketest/upgrade/generate.robot",
    "contents_url": "https://api.github.com/repos/apache/ozone/contents/hadoop-ozone/dist/src/main/smoketest/upgrade/generate.robot?ref=01bf4ac223ef27bdcbf137bad9c252cff498273d",
    "patch": "@@ -0,0 +1,33 @@\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+*** Settings ***\n+Documentation       Generate data\n+Library             OperatingSystem\n+Library             BuiltIn\n+Resource            ../commonlib.robot\n+Test Timeout        5 minutes\n+\n+*** Variables ***\n+\n+\n+*** Test Cases ***\n+Create a volume, bucket and key\n+    ${output} =         Execute          ozone sh volume create ${PREFIX}-volume\n+                        Should not contain  ${output}       Failed\n+    ${output} =         Execute          ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket\n+                        Should not contain  ${output}       Failed\n+    ${output} =         Execute          ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt\n+                        Should not contain  ${output}       Failed"
  },
  {
    "sha": "0f6d7a097618151b9add07d75f01455fe16512bf",
    "filename": "hadoop-ozone/dist/src/main/smoketest/upgrade/prepare.robot",
    "status": "added",
    "additions": 26,
    "deletions": 0,
    "changes": 26,
    "blob_url": "https://github.com/apache/ozone/blob/01bf4ac223ef27bdcbf137bad9c252cff498273d/hadoop-ozone/dist/src/main/smoketest/upgrade/prepare.robot",
    "raw_url": "https://github.com/apache/ozone/raw/01bf4ac223ef27bdcbf137bad9c252cff498273d/hadoop-ozone/dist/src/main/smoketest/upgrade/prepare.robot",
    "contents_url": "https://api.github.com/repos/apache/ozone/contents/hadoop-ozone/dist/src/main/smoketest/upgrade/prepare.robot?ref=01bf4ac223ef27bdcbf137bad9c252cff498273d",
    "patch": "@@ -0,0 +1,26 @@\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+*** Settings ***\n+Documentation       Prepares OMs\n+Resource            ../commonlib.robot\n+Test Timeout        5 minutes\n+Test Setup          Run Keyword if    '${SECURITY_ENABLED}' == 'true'    Kinit test user     testuser     testuser.keytab\n+\n+** Test Cases ***\n+Prepare Ozone Manager\n+    ${result} =        Execute      ozone admin om prepare -id %{OM_SERVICE_ID}\n+                       Wait Until Keyword Succeeds      3min       10sec     Should contain   ${result}   OM Preparation successful!\n+"
  },
  {
    "sha": "4461ddf23834dc2f37a394e2b5c3049a9dfd5f80",
    "filename": "hadoop-ozone/dist/src/main/smoketest/upgrade/validate.robot",
    "status": "added",
    "additions": 30,
    "deletions": 0,
    "changes": 30,
    "blob_url": "https://github.com/apache/ozone/blob/01bf4ac223ef27bdcbf137bad9c252cff498273d/hadoop-ozone/dist/src/main/smoketest/upgrade/validate.robot",
    "raw_url": "https://github.com/apache/ozone/raw/01bf4ac223ef27bdcbf137bad9c252cff498273d/hadoop-ozone/dist/src/main/smoketest/upgrade/validate.robot",
    "contents_url": "https://api.github.com/repos/apache/ozone/contents/hadoop-ozone/dist/src/main/smoketest/upgrade/validate.robot?ref=01bf4ac223ef27bdcbf137bad9c252cff498273d",
    "patch": "@@ -0,0 +1,30 @@\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+*** Settings ***\n+Documentation       Smoketest ozone cluster startup\n+Library             OperatingSystem\n+Library             BuiltIn\n+Resource            ../commonlib.robot\n+Test Timeout        5 minutes\n+\n+*** Variables ***\n+\n+\n+*** Test Cases ***\n+Read data from previously created key\n+    ${random} =         Generate Random String  5  [NUMBERS]\n+    ${output} =         Execute          ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}\n+                        Should not contain  ${output}       Failed"
  },
  {
    "sha": "65739787ee67c3f8b6cb10fe02e2625dafcc3e9e",
    "filename": "hadoop-ozone/dist/src/shell/upgrade/1.0.0.sh",
    "status": "renamed",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/apache/ozone/blob/01bf4ac223ef27bdcbf137bad9c252cff498273d/hadoop-ozone/dist/src/shell/upgrade/1.0.0.sh",
    "raw_url": "https://github.com/apache/ozone/raw/01bf4ac223ef27bdcbf137bad9c252cff498273d/hadoop-ozone/dist/src/shell/upgrade/1.0.0.sh",
    "contents_url": "https://api.github.com/repos/apache/ozone/contents/hadoop-ozone/dist/src/shell/upgrade/1.0.0.sh?ref=01bf4ac223ef27bdcbf137bad9c252cff498273d",
    "patch": "@@ -20,4 +20,4 @@ SCRIPT_DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" >/dev/null 2>&1 && pwd )\"\n : \"${SCM_DIR:=\"${OZONE_VOLUME}/scm\"}\"\n : \"${OZONE_RUNNER_VERSION:=\"20200625-1\"}\"\n \n-docker run --rm -v \"${SCM_DIR}\":/scm -v \"${SCRIPT_DIR}/v1\":/upgrade -w /scm/metadata apache/ozone-runner:\"${OZONE_RUNNER_VERSION}\" /upgrade/01-migrate-scm-db.sh\n+docker run --rm -v \"${SCM_DIR}\":/scm -v \"${SCRIPT_DIR}/1.0.0\":/upgrade -w /scm/metadata apache/ozone-runner:\"${OZONE_RUNNER_VERSION}\" /upgrade/01-migrate-scm-db.sh",
    "previous_filename": "hadoop-ozone/dist/src/shell/upgrade/v1.sh"
  },
  {
    "sha": "dee676841972a5894ff01bd83c87e0391697a81f",
    "filename": "hadoop-ozone/dist/src/shell/upgrade/1.0.0/01-migrate-scm-db.sh",
    "status": "renamed",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/apache/ozone/blob/01bf4ac223ef27bdcbf137bad9c252cff498273d/hadoop-ozone/dist/src/shell/upgrade/1.0.0/01-migrate-scm-db.sh",
    "raw_url": "https://github.com/apache/ozone/raw/01bf4ac223ef27bdcbf137bad9c252cff498273d/hadoop-ozone/dist/src/shell/upgrade/1.0.0/01-migrate-scm-db.sh",
    "contents_url": "https://api.github.com/repos/apache/ozone/contents/hadoop-ozone/dist/src/shell/upgrade/1.0.0/01-migrate-scm-db.sh?ref=01bf4ac223ef27bdcbf137bad9c252cff498273d",
    "previous_filename": "hadoop-ozone/dist/src/shell/upgrade/v1/01-migrate-scm-db.sh"
  }
]
