[
  {
    "sha": "d89f96c47d79f5de07361a37f4f91e2f480bf1c0",
    "filename": ".vscode/settings.json",
    "status": "modified",
    "additions": 3,
    "deletions": 1,
    "changes": 4,
    "blob_url": "https://github.com/awtybots/FRC-2021/blob/84963235046860cd1e62b9c54bb5800c81a9876e/.vscode/settings.json",
    "raw_url": "https://github.com/awtybots/FRC-2021/raw/84963235046860cd1e62b9c54bb5800c81a9876e/.vscode/settings.json",
    "contents_url": "https://api.github.com/repos/awtybots/FRC-2021/contents/.vscode/settings.json?ref=84963235046860cd1e62b9c54bb5800c81a9876e",
    "patch": "@@ -24,6 +24,8 @@\n     \"**/.project\": true,\r\n     \"**/.settings\": true,\r\n     \"**/.factorypath\": true,\r\n-    \"**/*~\": true\r\n+    \"**/*~\": true,\r\n+\r\n+    \"WPILib-License.md\": true\r\n   }\r\n }\r"
  },
  {
    "sha": "5a58183ec793430c1e2a1a17370d216517bea90e",
    "filename": "build.gradle",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/awtybots/FRC-2021/blob/84963235046860cd1e62b9c54bb5800c81a9876e/build.gradle",
    "raw_url": "https://github.com/awtybots/FRC-2021/raw/84963235046860cd1e62b9c54bb5800c81a9876e/build.gradle",
    "contents_url": "https://api.github.com/repos/awtybots/FRC-2021/contents/build.gradle?ref=84963235046860cd1e62b9c54bb5800c81a9876e",
    "patch": "@@ -56,7 +56,7 @@ dependencies {\n     simulation wpi.deps.sim.gui(wpi.platforms.desktop, false)\n     simulation wpi.deps.sim.driverstation(wpi.platforms.desktop, false)\n \n-    implementation files('libs/botplus-v0.2.0.jar')\n+    implementation files('libs/botplus-v0.5.1.jar')\n \n     // Websocket extensions require additional configuration.\n     // simulation wpi.deps.sim.ws_server(wpi.platforms.desktop, false)"
  },
  {
    "sha": "c40d2b45941ab73d20f1f8f74fabcdfc68924980",
    "filename": "gradle/wrapper/gradle-wrapper.properties",
    "status": "modified",
    "additions": 5,
    "deletions": 5,
    "changes": 10,
    "blob_url": "https://github.com/awtybots/FRC-2021/blob/84963235046860cd1e62b9c54bb5800c81a9876e/gradle/wrapper/gradle-wrapper.properties",
    "raw_url": "https://github.com/awtybots/FRC-2021/raw/84963235046860cd1e62b9c54bb5800c81a9876e/gradle/wrapper/gradle-wrapper.properties",
    "contents_url": "https://api.github.com/repos/awtybots/FRC-2021/contents/gradle/wrapper/gradle-wrapper.properties?ref=84963235046860cd1e62b9c54bb5800c81a9876e",
    "patch": "@@ -1,5 +1,5 @@\n-distributionBase=GRADLE_USER_HOME\r\n-distributionPath=permwrapper/dists\r\n-distributionUrl=https\\://services.gradle.org/distributions/gradle-6.0.1-bin.zip\r\n-zipStoreBase=GRADLE_USER_HOME\r\n-zipStorePath=permwrapper/dists\r\n+distributionBase=GRADLE_USER_HOME\n+distributionPath=permwrapper/dists\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-6.8.3-bin.zip\n+zipStoreBase=GRADLE_USER_HOME\n+zipStorePath=permwrapper/dists"
  },
  {
    "sha": "708aaad76020940488c2dc0d0646636280ddaea8",
    "filename": "libs/botplus-v0.2.0.jar",
    "status": "removed",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/awtybots/FRC-2021/blob/dda34d981ccf7342ae5d8704710b29a40d15468f/libs/botplus-v0.2.0.jar",
    "raw_url": "https://github.com/awtybots/FRC-2021/raw/dda34d981ccf7342ae5d8704710b29a40d15468f/libs/botplus-v0.2.0.jar",
    "contents_url": "https://api.github.com/repos/awtybots/FRC-2021/contents/libs/botplus-v0.2.0.jar?ref=dda34d981ccf7342ae5d8704710b29a40d15468f"
  },
  {
    "sha": "846d2c51821333a2b49795bc0e3be2153e66bb75",
    "filename": "libs/botplus-v0.5.1-sources.jar",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/awtybots/FRC-2021/blob/84963235046860cd1e62b9c54bb5800c81a9876e/libs/botplus-v0.5.1-sources.jar",
    "raw_url": "https://github.com/awtybots/FRC-2021/raw/84963235046860cd1e62b9c54bb5800c81a9876e/libs/botplus-v0.5.1-sources.jar",
    "contents_url": "https://api.github.com/repos/awtybots/FRC-2021/contents/libs/botplus-v0.5.1-sources.jar?ref=84963235046860cd1e62b9c54bb5800c81a9876e"
  },
  {
    "sha": "27cc3667de8bba71c9c29451a0073a988e6194de",
    "filename": "libs/botplus-v0.5.1.jar",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/awtybots/FRC-2021/blob/84963235046860cd1e62b9c54bb5800c81a9876e/libs/botplus-v0.5.1.jar",
    "raw_url": "https://github.com/awtybots/FRC-2021/raw/84963235046860cd1e62b9c54bb5800c81a9876e/libs/botplus-v0.5.1.jar",
    "contents_url": "https://api.github.com/repos/awtybots/FRC-2021/contents/libs/botplus-v0.5.1.jar?ref=84963235046860cd1e62b9c54bb5800c81a9876e"
  },
  {
    "sha": "54e8575e0ecb3e442dc1c77e3147a78c9e71ae5a",
    "filename": "src/main/java/frc/robot/Robot.java",
    "status": "modified",
    "additions": 27,
    "deletions": 33,
    "changes": 60,
    "blob_url": "https://github.com/awtybots/FRC-2021/blob/84963235046860cd1e62b9c54bb5800c81a9876e/src/main/java/frc/robot/Robot.java",
    "raw_url": "https://github.com/awtybots/FRC-2021/raw/84963235046860cd1e62b9c54bb5800c81a9876e/src/main/java/frc/robot/Robot.java",
    "contents_url": "https://api.github.com/repos/awtybots/FRC-2021/contents/src/main/java/frc/robot/Robot.java?ref=84963235046860cd1e62b9c54bb5800c81a9876e",
    "patch": "@@ -1,49 +1,43 @@\n package frc.robot;\n \n-import edu.wpi.first.wpilibj.TimedRobot;\n-import edu.wpi.first.wpilibj2.command.CommandScheduler;\n+import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;\n+import frc.robot.commands.teleop.*;\n+import frc.robot.subsystems.DrivetrainSubsystem;\n+import org.awtybots.frc.botplus.CompetitionBot;\n+import org.awtybots.frc.botplus.commands.Controller;\n+import org.awtybots.frc.botplus.sensors.vision.Limelight;\n \n-public class Robot extends TimedRobot {\n+public class Robot extends CompetitionBot {\n \n-  @Override\n-  public void robotInit() {}\n+  public static Limelight limelight = new Limelight(0.8, 20); // TODO\n \n-  /**\n-   * This runs after the mode specific periodic functions, but before LiveWindow and SmartDashboard\n-   * integrated updating.\n-   */\n   @Override\n-  public void robotPeriodic() {\n-    // Runs the Scheduler.  This is responsible for polling buttons, adding newly-scheduled\n-    // commands, running already-scheduled commands, removing finished or interrupted commands,\n-    // and running subsystem periodic() methods.\n-    CommandScheduler.getInstance().run();\n+  public void addAutonOptions() {\n+    // addAutonDefault(\"name\", command);\n+    // addAutonOption(\"name\", command);\n+    // addAutonOption(\"name\", command);\n+    // addAutonOption(\"name\", command);\n   }\n \n   @Override\n-  public void disabledInit() {}\n-\n-  @Override\n-  public void disabledPeriodic() {}\n-\n-  @Override\n-  public void autonomousInit() {}\n-\n-  @Override\n-  public void autonomousPeriodic() {}\n+  public void bindIO() {\n+    Controller controller1 = new Controller(0);\n+    Controller controller2 = new Controller(1);\n \n-  @Override\n-  public void teleopInit() {}\n+    controller1.streamAnalogInputTo(new TeleopDrive());\n+    controller1.getBmpL().whenHeld(new ToggleIntakeMotorOnly());\n+    controller1.getBmpR().whenHeld(new ToggleIntake());\n \n-  @Override\n-  public void teleopPeriodic() {}\n+    controller2.getBtnA().whenHeld(new ToggleShooter(4000.0));\n+    controller2.getBtnB().whenHeld(new ToggleShooter(5000.0));\n+    controller2.getBtnX().whenHeld(new ToggleShooter(6000.0));\n+    controller2.getBtnY().whenHeld(new AutoAim().alongWith(new AutoShoot()));\n+    controller2.getBmpL().whenHeld(new ReverseTower());\n+    controller2.getBmpR().whenHeld(new ToggleIndexerTower());\n+  }\n \n   @Override\n   public void testInit() {\n-    CommandScheduler.getInstance().cancelAll();\n+    SmartDashboard.putData(DrivetrainSubsystem.getInstance().getConfig());\n   }\n-\n-  /** This function is called periodically during test mode. */\n-  @Override\n-  public void testPeriodic() {}\n }"
  },
  {
    "sha": "e1fd0192a1331f940ec44c98662ee50050cb162c",
    "filename": "src/main/java/frc/robot/RobotMap.java",
    "status": "added",
    "additions": 27,
    "deletions": 0,
    "changes": 27,
    "blob_url": "https://github.com/awtybots/FRC-2021/blob/84963235046860cd1e62b9c54bb5800c81a9876e/src/main/java/frc/robot/RobotMap.java",
    "raw_url": "https://github.com/awtybots/FRC-2021/raw/84963235046860cd1e62b9c54bb5800c81a9876e/src/main/java/frc/robot/RobotMap.java",
    "contents_url": "https://api.github.com/repos/awtybots/FRC-2021/contents/src/main/java/frc/robot/RobotMap.java?ref=84963235046860cd1e62b9c54bb5800c81a9876e",
    "patch": "@@ -0,0 +1,27 @@\n+package frc.robot;\n+\n+public abstract class RobotMap {\n+  public abstract static class CAN {\n+    public static final int leftDrive1 = 1;\n+    public static final int leftDrive2 = 2;\n+    public static final int rightDrive1 = 3;\n+    public static final int rightDrive2 = 4;\n+\n+    public static final int intake = 9;\n+\n+    public static final int indexerL = 8;\n+    public static final int indexerR = 7;\n+\n+    public static final int tower1 = 5;\n+    public static final int tower2 = 6;\n+\n+    public static final int shooter = 10;\n+\n+    public static final int controlPanelSpinner = 13;\n+  }\n+\n+  public abstract static class PCM {\n+    public static final int intakeFwd = 0;\n+    public static final int intakeRev = 4;\n+  }\n+}"
  },
  {
    "sha": "ea063844c81088db386229d274bfc39fe65163a0",
    "filename": "src/main/java/frc/robot/commands/ExampleCommand.java",
    "status": "removed",
    "additions": 0,
    "deletions": 30,
    "changes": 30,
    "blob_url": "https://github.com/awtybots/FRC-2021/blob/dda34d981ccf7342ae5d8704710b29a40d15468f/src/main/java/frc/robot/commands/ExampleCommand.java",
    "raw_url": "https://github.com/awtybots/FRC-2021/raw/dda34d981ccf7342ae5d8704710b29a40d15468f/src/main/java/frc/robot/commands/ExampleCommand.java",
    "contents_url": "https://api.github.com/repos/awtybots/FRC-2021/contents/src/main/java/frc/robot/commands/ExampleCommand.java?ref=dda34d981ccf7342ae5d8704710b29a40d15468f",
    "patch": "@@ -1,30 +0,0 @@\n-/*----------------------------------------------------------------------------*/\n-/* Copyright (c) 2018-2019 FIRST. All Rights Reserved.                        */\n-/* Open Source Software - may be modified and shared by FRC teams. The code   */\n-/* must be accompanied by the FIRST BSD license file in the root directory of */\n-/* the project.                                                               */\n-/*----------------------------------------------------------------------------*/\n-\n-package frc.robot.commands;\n-\n-import static frc.robot.Robot.*;\n-\n-import edu.wpi.first.wpilibj2.command.CommandBase;\n-\n-public class ExampleCommand extends CommandBase {\n-  private boolean button;\n-  private boolean on;\n-\n-  public ExampleCommand() {}\n-\n-  @Override\n-  public void initialize() {}\n-\n-  @Override\n-  public void end(boolean interrupted) {}\n-\n-  @Override\n-  public boolean isFinished() {\n-    return false; // return true when you want the command to stop running\n-  }\n-}"
  },
  {
    "sha": "490bf3e78e1b0bd77936aa751378e94f40e8d00d",
    "filename": "src/main/java/frc/robot/commands/auton/DriveDistance.java",
    "status": "added",
    "additions": 60,
    "deletions": 0,
    "changes": 60,
    "blob_url": "https://github.com/awtybots/FRC-2021/blob/84963235046860cd1e62b9c54bb5800c81a9876e/src/main/java/frc/robot/commands/auton/DriveDistance.java",
    "raw_url": "https://github.com/awtybots/FRC-2021/raw/84963235046860cd1e62b9c54bb5800c81a9876e/src/main/java/frc/robot/commands/auton/DriveDistance.java",
    "contents_url": "https://api.github.com/repos/awtybots/FRC-2021/contents/src/main/java/frc/robot/commands/auton/DriveDistance.java?ref=84963235046860cd1e62b9c54bb5800c81a9876e",
    "patch": "@@ -0,0 +1,60 @@\n+package frc.robot.commands.auton;\n+\n+import edu.wpi.first.wpilibj.Timer;\n+import edu.wpi.first.wpilibj2.command.CommandBase;\n+import frc.robot.subsystems.DrivetrainSubsystem;\n+\n+public class DriveDistance extends CommandBase {\n+  private final static double gapTime = 0.5;\n+\n+  private DriveSideDistance driveSideDistanceL;\n+  private DriveSideDistance driveSideDistanceR;\n+\n+  private double plannedTime;\n+  private Timer timer;\n+\n+  public DriveDistance(double distance) {\n+    this(distance, distance);\n+  }\n+\n+  public DriveDistance(double distanceL, double distanceR) {\n+    addRequirements(DrivetrainSubsystem.getInstance());\n+    driveSideDistanceL = new DriveSideDistance(distanceL);\n+    driveSideDistanceR = new DriveSideDistance(distanceR);\n+\n+    if (driveSideDistanceL.plannedTime < driveSideDistanceR.plannedTime) {\n+      plannedTime = driveSideDistanceR.plannedTime;\n+      driveSideDistanceL.replanSlower(plannedTime);\n+    } else {\n+      plannedTime = driveSideDistanceL.plannedTime;\n+      driveSideDistanceR.replanSlower(plannedTime);\n+    }\n+\n+    timer = new Timer();\n+  }\n+\n+  @Override\n+  public void initialize() {\n+    timer.start();\n+  }\n+\n+  public void execute() {\n+    double currentTime = timer.get();\n+    double velocityL = driveSideDistanceL.tick(currentTime);\n+    double velocityR = driveSideDistanceR.tick(currentTime);\n+    DrivetrainSubsystem.getInstance().setMotorVelocityOutput(velocityL, velocityR);\n+  }\n+\n+  @Override\n+  public void end(boolean interrupted) {\n+    if (interrupted)\n+      DrivetrainSubsystem.getInstance().kill();\n+    else\n+      DrivetrainSubsystem.getInstance().softStop();\n+  }\n+\n+  @Override\n+  public boolean isFinished() {\n+    return timer.get() > plannedTime + gapTime;\n+  }\n+}"
  },
  {
    "sha": "802923ed4a0cb5e224f510a011c8689f4ad16fe0",
    "filename": "src/main/java/frc/robot/commands/auton/DriveSideDistance.java",
    "status": "added",
    "additions": 67,
    "deletions": 0,
    "changes": 67,
    "blob_url": "https://github.com/awtybots/FRC-2021/blob/84963235046860cd1e62b9c54bb5800c81a9876e/src/main/java/frc/robot/commands/auton/DriveSideDistance.java",
    "raw_url": "https://github.com/awtybots/FRC-2021/raw/84963235046860cd1e62b9c54bb5800c81a9876e/src/main/java/frc/robot/commands/auton/DriveSideDistance.java",
    "contents_url": "https://api.github.com/repos/awtybots/FRC-2021/contents/src/main/java/frc/robot/commands/auton/DriveSideDistance.java?ref=84963235046860cd1e62b9c54bb5800c81a9876e",
    "patch": "@@ -0,0 +1,67 @@\n+package frc.robot.commands.auton;\n+\n+import edu.wpi.first.wpiutil.math.MathUtil;\n+\n+class DriveSideDistance {\n+  private final static double defaultMaxVelocity = 2.0; // meters per second\n+  private final static double defaultMaxAcceleration = 2.0; // meters per second per second\n+\n+  private double maxVelocity;\n+  private double maxAcceleration;\n+\n+  private double distanceGoal;\n+  double plannedTime;\n+\n+  private double decelerationStartTime;\n+\n+  private double outputFactor = 1.0;\n+\n+  DriveSideDistance(double distance) {\n+    distanceGoal = distance;\n+\n+    if (distanceGoal < 0.0) {\n+      distanceGoal = -distanceGoal;\n+      outputFactor = -1.0;\n+    }\n+\n+    planFastest();\n+  }\n+\n+  private void planFastest() {\n+    maxVelocity = defaultMaxVelocity;\n+    maxAcceleration = defaultMaxAcceleration;\n+\n+    double timeToAccelerate = maxVelocity / maxAcceleration;\n+    double distanceWhileAccelerating = maxVelocity * timeToAccelerate; // accounts for both accel at beginning and decel\n+                                                                       // at the end\n+\n+    if (distanceGoal >= distanceWhileAccelerating) {\n+      plannedTime = timeToAccelerate * 2.0 + (distanceGoal - distanceWhileAccelerating) / maxVelocity;\n+      decelerationStartTime = plannedTime - timeToAccelerate;\n+    } else {\n+      plannedTime = 2.0 * Math.sqrt(distanceGoal / maxAcceleration); // TODO double check this math\n+      decelerationStartTime = plannedTime / 2.0;\n+    }\n+  }\n+\n+  void replanSlower(double newTime) {\n+    double factor = plannedTime / newTime;\n+    maxVelocity *= factor;\n+    maxAcceleration *= factor;\n+  }\n+\n+  double tick(double currentTime) {\n+    double newVelocity;\n+\n+    if (currentTime > plannedTime) {\n+      newVelocity = 0.0;\n+    } else if (currentTime > decelerationStartTime) {\n+      newVelocity = maxVelocity - maxAcceleration * (currentTime - decelerationStartTime);\n+    } else {\n+      newVelocity = Math.min(maxAcceleration * currentTime, maxVelocity);\n+    }\n+\n+    return MathUtil.clamp(newVelocity, 0.0, maxVelocity) * outputFactor;\n+  }\n+\n+}"
  },
  {
    "sha": "5c103b0eb6eb3f5cd338ecd04e7e3336048f5ce4",
    "filename": "src/main/java/frc/robot/commands/auton/RotateAngle.java",
    "status": "added",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/awtybots/FRC-2021/blob/84963235046860cd1e62b9c54bb5800c81a9876e/src/main/java/frc/robot/commands/auton/RotateAngle.java",
    "raw_url": "https://github.com/awtybots/FRC-2021/raw/84963235046860cd1e62b9c54bb5800c81a9876e/src/main/java/frc/robot/commands/auton/RotateAngle.java",
    "contents_url": "https://api.github.com/repos/awtybots/FRC-2021/contents/src/main/java/frc/robot/commands/auton/RotateAngle.java?ref=84963235046860cd1e62b9c54bb5800c81a9876e",
    "patch": "@@ -0,0 +1,9 @@\n+package frc.robot.commands.auton;\n+\n+import frc.robot.subsystems.DrivetrainSubsystem;\n+\n+public class RotateAngle extends DriveDistance {\n+  public RotateAngle(double degrees) {\n+    super(Math.toRadians(degrees) * DrivetrainSubsystem.trackWidth * 0.5, -Math.toRadians(degrees) * DrivetrainSubsystem.trackWidth * 0.5);\n+  }\n+}"
  },
  {
    "sha": "3b6ab7f25e0c3574b3b03ad0b1cc8549600ef5b2",
    "filename": "src/main/java/frc/robot/commands/teleop/AutoAim.java",
    "status": "added",
    "additions": 58,
    "deletions": 0,
    "changes": 58,
    "blob_url": "https://github.com/awtybots/FRC-2021/blob/84963235046860cd1e62b9c54bb5800c81a9876e/src/main/java/frc/robot/commands/teleop/AutoAim.java",
    "raw_url": "https://github.com/awtybots/FRC-2021/raw/84963235046860cd1e62b9c54bb5800c81a9876e/src/main/java/frc/robot/commands/teleop/AutoAim.java",
    "contents_url": "https://api.github.com/repos/awtybots/FRC-2021/contents/src/main/java/frc/robot/commands/teleop/AutoAim.java?ref=84963235046860cd1e62b9c54bb5800c81a9876e",
    "patch": "@@ -0,0 +1,58 @@\n+package frc.robot.commands.teleop;\n+\n+import edu.wpi.first.wpilibj2.command.CommandBase;\n+import edu.wpi.first.wpiutil.math.MathUtil;\n+import frc.robot.Robot;\n+import frc.robot.subsystems.DrivetrainSubsystem;\n+import org.awtybots.frc.botplus.Logger;\n+import org.awtybots.frc.botplus.sensors.vision.Limelight.LEDMode;\n+\n+public class AutoAim extends CommandBase {\n+  private static final double maxDrivePercentOutput = 0.3;\n+  private static final double goalMaxOffsetAngle = 1.0; // degrees\n+  private static final double kP = 0.03;\n+\n+  private Logger logger = new Logger(\"AutoAim\");\n+  private boolean onTarget = false;\n+\n+  public AutoAim() {\n+    addRequirements(DrivetrainSubsystem.getInstance());\n+  }\n+\n+  @Override\n+  public void initialize() {\n+    Robot.limelight.setPipeline(0);\n+    Robot.limelight.setLedMode(LEDMode.On);\n+  }\n+\n+  @Override\n+  public void execute() {\n+    if (!Robot.limelight.getHasVisibleTarget()) {\n+      logger.error(\"Cannot auto-aim without a target!\");\n+      cancel();\n+      return;\n+    }\n+\n+    double x = Robot.limelight.getXOffset();\n+\n+    onTarget = Math.abs(x) < goalMaxOffsetAngle;\n+\n+    if (onTarget) {\n+      DrivetrainSubsystem.getInstance().kill();\n+    } else {\n+      double speed = MathUtil.clamp(x * kP, -maxDrivePercentOutput, maxDrivePercentOutput);\n+      DrivetrainSubsystem.getInstance().setMotorRawOutput(speed, -speed);\n+    }\n+  }\n+\n+  @Override\n+  public boolean isFinished() {\n+    return onTarget;\n+  }\n+\n+  @Override\n+  public void end(boolean interrupted) {\n+    DrivetrainSubsystem.getInstance().kill();\n+    Robot.limelight.setLedMode(LEDMode.Off);\n+  }\n+}"
  },
  {
    "sha": "0f79887456c91c0e9f5f00c65f85583cfd99a3fb",
    "filename": "src/main/java/frc/robot/commands/teleop/AutoShoot.java",
    "status": "added",
    "additions": 73,
    "deletions": 0,
    "changes": 73,
    "blob_url": "https://github.com/awtybots/FRC-2021/blob/84963235046860cd1e62b9c54bb5800c81a9876e/src/main/java/frc/robot/commands/teleop/AutoShoot.java",
    "raw_url": "https://github.com/awtybots/FRC-2021/raw/84963235046860cd1e62b9c54bb5800c81a9876e/src/main/java/frc/robot/commands/teleop/AutoShoot.java",
    "contents_url": "https://api.github.com/repos/awtybots/FRC-2021/contents/src/main/java/frc/robot/commands/teleop/AutoShoot.java?ref=84963235046860cd1e62b9c54bb5800c81a9876e",
    "patch": "@@ -0,0 +1,73 @@\n+package frc.robot.commands.teleop;\n+\n+import org.awtybots.frc.botplus.Logger;\n+import org.awtybots.frc.botplus.math.Simulation;\n+import org.awtybots.frc.botplus.math.Vector2;\n+import org.awtybots.frc.botplus.math.VisionTarget;\n+import org.awtybots.frc.botplus.sensors.vision.Limelight.LEDMode;\n+\n+import edu.wpi.first.wpilibj2.command.CommandBase;\n+import frc.robot.Robot;\n+import frc.robot.subsystems.IndexerTowerSubsystem;\n+import frc.robot.subsystems.ShooterSubsystem;\n+\n+public class AutoShoot extends CommandBase {\n+\n+  private Logger logger = new Logger(\"AutoShoot\");\n+\n+  private VisionTarget powerPort;\n+  private Simulation projectileMotionSimulation;\n+\n+  public AutoShoot() {\n+    addRequirements(ShooterSubsystem.getInstance());\n+\n+    powerPort = new VisionTarget(Robot.limelight, 2.0, // power port height - TODO fix\n+        0.5 // power port offset from vision target - TODO fix\n+    );\n+    projectileMotionSimulation = new Simulation(\n+      0.01, // simulation step (seconds)\n+      10, // simulation iterations\n+      0.178, // ball radius (m)\n+      0.142, // ball mass (kg)\n+      45, // launch angle (degrees) - TODO fix\n+      ShooterSubsystem.getInstance().flywheel.getMaxBallVelocity(),\n+      false // debug mode\n+    );\n+  }\n+\n+  @Override\n+  public void initialize() {\n+    Robot.limelight.setPipeline(0);\n+    Robot.limelight.setLedMode(LEDMode.On);\n+  }\n+\n+  @Override\n+  public void execute() {\n+    if (!Robot.limelight.getHasVisibleTarget()) {\n+      logger.error(\"Cannot auto-shoot without visible target!\");\n+      cancel();\n+      return;\n+    }\n+\n+    Vector2 powerPortOffset = powerPort.getTargetDisplacement();\n+    Vector2 velocity = projectileMotionSimulation.findOptimalLaunchVelocity(powerPortOffset);\n+\n+    if(velocity == null) {\n+      logger.error(\"Projectile motion simulation found no solution! Move the robot to a better shooting position.\");\n+      cancel();\n+      return;\n+    }\n+\n+    double goalRevsPerSecond = ShooterSubsystem.getInstance().flywheel.ballVelocityToMotorRpm(velocity) / 60.0;\n+    ShooterSubsystem.getInstance().setFlywheelRevsPerSecond(goalRevsPerSecond);\n+\n+    boolean readyToShoot = ShooterSubsystem.getInstance().isFlywheelReady();\n+    IndexerTowerSubsystem.getInstance().toggle(readyToShoot);\n+  }\n+\n+  @Override\n+  public void end(boolean interrupted) {\n+    ShooterSubsystem.getInstance().stopFlywheel();\n+    IndexerTowerSubsystem.getInstance().toggle(false);\n+  }\n+}"
  },
  {
    "sha": "c8d0b17bac078e3b938578a936308729c2260398",
    "filename": "src/main/java/frc/robot/commands/teleop/ReverseTower.java",
    "status": "added",
    "additions": 25,
    "deletions": 0,
    "changes": 25,
    "blob_url": "https://github.com/awtybots/FRC-2021/blob/84963235046860cd1e62b9c54bb5800c81a9876e/src/main/java/frc/robot/commands/teleop/ReverseTower.java",
    "raw_url": "https://github.com/awtybots/FRC-2021/raw/84963235046860cd1e62b9c54bb5800c81a9876e/src/main/java/frc/robot/commands/teleop/ReverseTower.java",
    "contents_url": "https://api.github.com/repos/awtybots/FRC-2021/contents/src/main/java/frc/robot/commands/teleop/ReverseTower.java?ref=84963235046860cd1e62b9c54bb5800c81a9876e",
    "patch": "@@ -0,0 +1,25 @@\n+package frc.robot.commands.teleop;\n+\n+import edu.wpi.first.wpilibj2.command.CommandBase;\n+import frc.robot.subsystems.IndexerTowerSubsystem;\n+\n+public class ReverseTower extends CommandBase {\n+  public ReverseTower() {\n+    addRequirements(IndexerTowerSubsystem.getInstance());\n+  }\n+\n+  @Override\n+  public void initialize() {\n+    IndexerTowerSubsystem.getInstance().reverse();\n+  }\n+\n+  @Override\n+  public void end(boolean interrupted) {\n+    IndexerTowerSubsystem.getInstance().toggle(false);\n+  }\n+\n+  @Override\n+  public boolean isFinished() {\n+    return false;\n+  }\n+}"
  },
  {
    "sha": "53571993ee78f15a52eceaa12dfa54b4cf6176e7",
    "filename": "src/main/java/frc/robot/commands/teleop/TeleopDrive.java",
    "status": "added",
    "additions": 53,
    "deletions": 0,
    "changes": 53,
    "blob_url": "https://github.com/awtybots/FRC-2021/blob/84963235046860cd1e62b9c54bb5800c81a9876e/src/main/java/frc/robot/commands/teleop/TeleopDrive.java",
    "raw_url": "https://github.com/awtybots/FRC-2021/raw/84963235046860cd1e62b9c54bb5800c81a9876e/src/main/java/frc/robot/commands/teleop/TeleopDrive.java",
    "contents_url": "https://api.github.com/repos/awtybots/FRC-2021/contents/src/main/java/frc/robot/commands/teleop/TeleopDrive.java?ref=84963235046860cd1e62b9c54bb5800c81a9876e",
    "patch": "@@ -0,0 +1,53 @@\n+/*----------------------------------------------------------------------------*/\n+/* Copyright (c) 2018-2019 FIRST. All Rights Reserved.                        */\n+/* Open Source Software - may be modified and shared by FRC teams. The code   */\n+/* must be accompanied by the FIRST BSD license file in the root directory of */\n+/* the project.                                                               */\n+/*----------------------------------------------------------------------------*/\n+\n+package frc.robot.commands.teleop;\n+\n+import frc.robot.subsystems.DrivetrainSubsystem;\n+import org.awtybots.frc.botplus.commands.AnalogInputCommand;\n+import org.awtybots.frc.botplus.commands.ControllerValues;\n+import org.awtybots.frc.botplus.math.Vector2;\n+\n+public class TeleopDrive extends AnalogInputCommand {\n+\n+  public TeleopDrive() {\n+    addRequirements(DrivetrainSubsystem.getInstance());\n+  }\n+\n+  @Override\n+  public void analogExecute(ControllerValues controllerValues) {\n+    Vector2 driveControlsInput = gtaDrive(controllerValues);\n+\n+    DrivetrainSubsystem.getInstance()\n+        .setMotorRawOutput(driveControlsInput.getX(), driveControlsInput.getY());\n+  }\n+\n+  @Override\n+  public void cancel() {\n+    DrivetrainSubsystem.getInstance().kill();\n+  }\n+\n+  private Vector2 splitArcadeDrive(ControllerValues controllerValues) {\n+    double speed = controllerValues.getLeftStickY();\n+    double steer = controllerValues.getRightStickX();\n+\n+    double left = speed + steer;\n+    double right = speed - steer;\n+\n+    return new Vector2(left, right);\n+  }\n+\n+  private Vector2 gtaDrive(ControllerValues controllerValues) {\n+    double speed = controllerValues.getRightTrigger() - controllerValues.getLeftTrigger();\n+    double steer = controllerValues.getLeftStickX();\n+\n+    double left = speed + steer;\n+    double right = speed - steer;\n+\n+    return new Vector2(left, right);\n+  }\n+}"
  },
  {
    "sha": "635a3853c8ba11bd6aa6609e8eba640c2a85a1c5",
    "filename": "src/main/java/frc/robot/commands/teleop/ToggleIndexerTower.java",
    "status": "added",
    "additions": 41,
    "deletions": 0,
    "changes": 41,
    "blob_url": "https://github.com/awtybots/FRC-2021/blob/84963235046860cd1e62b9c54bb5800c81a9876e/src/main/java/frc/robot/commands/teleop/ToggleIndexerTower.java",
    "raw_url": "https://github.com/awtybots/FRC-2021/raw/84963235046860cd1e62b9c54bb5800c81a9876e/src/main/java/frc/robot/commands/teleop/ToggleIndexerTower.java",
    "contents_url": "https://api.github.com/repos/awtybots/FRC-2021/contents/src/main/java/frc/robot/commands/teleop/ToggleIndexerTower.java?ref=84963235046860cd1e62b9c54bb5800c81a9876e",
    "patch": "@@ -0,0 +1,41 @@\n+package frc.robot.commands.teleop;\n+\n+import edu.wpi.first.wpilibj2.command.CommandBase;\n+import frc.robot.subsystems.IndexerTowerSubsystem;\n+\n+public class ToggleIndexerTower extends CommandBase {\n+  private boolean button;\n+  private boolean on;\n+\n+  public ToggleIndexerTower() {\n+    addRequirements(IndexerTowerSubsystem.getInstance());\n+    button = true;\n+  }\n+\n+  public ToggleIndexerTower(boolean on) {\n+    addRequirements(IndexerTowerSubsystem.getInstance());\n+    button = false;\n+    this.on = on;\n+  }\n+\n+  @Override\n+  public void execute() {\n+    if (button) {\n+      IndexerTowerSubsystem.getInstance().toggle(true);\n+    } else {\n+      IndexerTowerSubsystem.getInstance().toggle(on);\n+    }\n+  }\n+\n+  @Override\n+  public void end(boolean interrupted) {\n+    if (button) {\n+      IndexerTowerSubsystem.getInstance().toggle(false);\n+    }\n+  }\n+\n+  @Override\n+  public boolean isFinished() {\n+    return !button;\n+  }\n+}"
  },
  {
    "sha": "1447714b996f8696ce25f91430b13c27d363935f",
    "filename": "src/main/java/frc/robot/commands/teleop/ToggleIntake.java",
    "status": "added",
    "additions": 39,
    "deletions": 0,
    "changes": 39,
    "blob_url": "https://github.com/awtybots/FRC-2021/blob/84963235046860cd1e62b9c54bb5800c81a9876e/src/main/java/frc/robot/commands/teleop/ToggleIntake.java",
    "raw_url": "https://github.com/awtybots/FRC-2021/raw/84963235046860cd1e62b9c54bb5800c81a9876e/src/main/java/frc/robot/commands/teleop/ToggleIntake.java",
    "contents_url": "https://api.github.com/repos/awtybots/FRC-2021/contents/src/main/java/frc/robot/commands/teleop/ToggleIntake.java?ref=84963235046860cd1e62b9c54bb5800c81a9876e",
    "patch": "@@ -0,0 +1,39 @@\n+package frc.robot.commands.teleop;\n+\n+import edu.wpi.first.wpilibj2.command.CommandBase;\n+import frc.robot.subsystems.IntakeSubsystem;\n+\n+public class ToggleIntake extends CommandBase {\n+  private boolean button;\n+  private boolean on;\n+\n+  public ToggleIntake() {\n+    button = true;\n+  }\n+\n+  public ToggleIntake(boolean on) {\n+    button = false;\n+    this.on = on;\n+  }\n+\n+  @Override\n+  public void execute() {\n+    if (button) {\n+      IntakeSubsystem.getInstance().toggle(true);\n+    } else {\n+      IntakeSubsystem.getInstance().toggle(on);\n+    }\n+  }\n+\n+  @Override\n+  public void end(boolean interrupted) {\n+    if (button) {\n+      IntakeSubsystem.getInstance().toggle(false);\n+    }\n+  }\n+\n+  @Override\n+  public boolean isFinished() {\n+    return !button;\n+  }\n+}"
  },
  {
    "sha": "8379c893d74b9b9609fc4c61bba6ede91129d5e1",
    "filename": "src/main/java/frc/robot/commands/teleop/ToggleIntakeMotorOnly.java",
    "status": "added",
    "additions": 39,
    "deletions": 0,
    "changes": 39,
    "blob_url": "https://github.com/awtybots/FRC-2021/blob/84963235046860cd1e62b9c54bb5800c81a9876e/src/main/java/frc/robot/commands/teleop/ToggleIntakeMotorOnly.java",
    "raw_url": "https://github.com/awtybots/FRC-2021/raw/84963235046860cd1e62b9c54bb5800c81a9876e/src/main/java/frc/robot/commands/teleop/ToggleIntakeMotorOnly.java",
    "contents_url": "https://api.github.com/repos/awtybots/FRC-2021/contents/src/main/java/frc/robot/commands/teleop/ToggleIntakeMotorOnly.java?ref=84963235046860cd1e62b9c54bb5800c81a9876e",
    "patch": "@@ -0,0 +1,39 @@\n+package frc.robot.commands.teleop;\n+\n+import edu.wpi.first.wpilibj2.command.CommandBase;\n+import frc.robot.subsystems.IntakeSubsystem;\n+\n+public class ToggleIntakeMotorOnly extends CommandBase {\n+  private boolean button;\n+  private boolean on;\n+\n+  public ToggleIntakeMotorOnly() {\n+    button = true;\n+  }\n+\n+  public ToggleIntakeMotorOnly(boolean on) {\n+    button = false;\n+    this.on = on;\n+  }\n+\n+  @Override\n+  public void execute() {\n+    if (button) {\n+      IntakeSubsystem.getInstance().toggleMotorOnly(true);\n+    } else {\n+      IntakeSubsystem.getInstance().toggleMotorOnly(on);\n+    }\n+  }\n+\n+  @Override\n+  public void end(boolean interrupted) {\n+    if (button) {\n+      IntakeSubsystem.getInstance().toggleMotorOnly(false);\n+    }\n+  }\n+\n+  @Override\n+  public boolean isFinished() {\n+    return !button;\n+  }\n+}"
  },
  {
    "sha": "78c2fc73b285ca045dd8816f1a08b4e8cbccd518",
    "filename": "src/main/java/frc/robot/commands/teleop/ToggleShooter.java",
    "status": "added",
    "additions": 31,
    "deletions": 0,
    "changes": 31,
    "blob_url": "https://github.com/awtybots/FRC-2021/blob/84963235046860cd1e62b9c54bb5800c81a9876e/src/main/java/frc/robot/commands/teleop/ToggleShooter.java",
    "raw_url": "https://github.com/awtybots/FRC-2021/raw/84963235046860cd1e62b9c54bb5800c81a9876e/src/main/java/frc/robot/commands/teleop/ToggleShooter.java",
    "contents_url": "https://api.github.com/repos/awtybots/FRC-2021/contents/src/main/java/frc/robot/commands/teleop/ToggleShooter.java?ref=84963235046860cd1e62b9c54bb5800c81a9876e",
    "patch": "@@ -0,0 +1,31 @@\n+package frc.robot.commands.teleop;\n+\n+import edu.wpi.first.wpilibj2.command.CommandBase;\n+import frc.robot.subsystems.IndexerTowerSubsystem;\n+import frc.robot.subsystems.ShooterSubsystem;\n+\n+public class ToggleShooter extends CommandBase {\n+\n+  private double rps;\n+\n+  public ToggleShooter(double rpm) {\n+    addRequirements(ShooterSubsystem.getInstance());\n+    rps = rpm / 60.0;\n+  }\n+\n+  @Override\n+  public void initialize() {\n+    ShooterSubsystem.getInstance().setFlywheelRevsPerSecond(rps);\n+  }\n+\n+  @Override\n+  public void execute() {\n+    IndexerTowerSubsystem.getInstance().toggle(ShooterSubsystem.getInstance().isFlywheelReady());\n+  }\n+\n+  @Override\n+  public void end(boolean interrupted) {\n+    IndexerTowerSubsystem.getInstance().toggle(false);\n+    ShooterSubsystem.getInstance().stopFlywheel();\n+  }\n+}"
  },
  {
    "sha": "c682a214d26ca122b759b07929d8fe97181ec5bf",
    "filename": "src/main/java/frc/robot/subsystems/DrivetrainSubsystem.java",
    "status": "added",
    "additions": 64,
    "deletions": 0,
    "changes": 64,
    "blob_url": "https://github.com/awtybots/FRC-2021/blob/84963235046860cd1e62b9c54bb5800c81a9876e/src/main/java/frc/robot/subsystems/DrivetrainSubsystem.java",
    "raw_url": "https://github.com/awtybots/FRC-2021/raw/84963235046860cd1e62b9c54bb5800c81a9876e/src/main/java/frc/robot/subsystems/DrivetrainSubsystem.java",
    "contents_url": "https://api.github.com/repos/awtybots/FRC-2021/contents/src/main/java/frc/robot/subsystems/DrivetrainSubsystem.java?ref=84963235046860cd1e62b9c54bb5800c81a9876e",
    "patch": "@@ -0,0 +1,64 @@\n+/*----------------------------------------------------------------------------*/\n+/* Copyright (c) 2018-2019 FIRST. All Rights Reserved.                        */\n+/* Open Source Software - may be modified and shared by FRC teams. The code   */\n+/* must be accompanied by the FIRST BSD license file in the root directory of */\n+/* the project.                                                               */\n+/*----------------------------------------------------------------------------*/\n+\n+package frc.robot.subsystems;\n+\n+import frc.robot.RobotMap;\n+import org.awtybots.frc.botplus.config.DriveConfig;\n+import org.awtybots.frc.botplus.motors.Falcon500;\n+import org.awtybots.frc.botplus.subsystems.Drivetrain;\n+\n+public class DrivetrainSubsystem extends Drivetrain<Falcon500> {\n+\n+  private static DrivetrainSubsystem instance;\n+\n+  public static double trackWidth = 0.7; // distance between the left and right wheels (meters)\n+\n+  private static double gearRatio = 1.0;\n+  private static DriveConfig driveConfig =\n+      new DriveConfig(\n+          false, // invertRight\n+          0.154, // wheelDiameter (m)\n+          0.0, // p\n+          0.0, // i\n+          0.0, // d\n+          0.0, // f\n+          0.4, // percentRamp\n+          1.0, // percentPeak\n+          0.05, // percentNominal\n+          10.0 // velocityPeak (m/s)\n+          );\n+\n+  private DrivetrainSubsystem() {\n+    super(\n+        driveConfig,\n+        new Falcon500[] {\n+          new Falcon500(RobotMap.CAN.leftDrive1, gearRatio),\n+          new Falcon500(RobotMap.CAN.leftDrive2, gearRatio)\n+        },\n+        new Falcon500[] {\n+          new Falcon500(RobotMap.CAN.rightDrive1, gearRatio),\n+          new Falcon500(RobotMap.CAN.rightDrive2, gearRatio)\n+        });\n+\n+    kill();\n+\n+    driveConfig.setUpdateCallback(\n+        () -> {\n+          Falcon500[] motors = getAllMotors().getMotorList();\n+          for (Falcon500 motor : motors) {\n+            motor.setPIDF(\n+                driveConfig.getP(), driveConfig.getI(), driveConfig.getD(), driveConfig.getF());\n+          }\n+        });\n+  }\n+\n+  public static DrivetrainSubsystem getInstance() {\n+    if (instance == null) instance = new DrivetrainSubsystem();\n+    return instance;\n+  }\n+}"
  },
  {
    "sha": "cd5a7e0dc5730d513d2100b75b731eb60484c0c2",
    "filename": "src/main/java/frc/robot/subsystems/ExampleSubsystem.java",
    "status": "removed",
    "additions": 0,
    "deletions": 18,
    "changes": 18,
    "blob_url": "https://github.com/awtybots/FRC-2021/blob/dda34d981ccf7342ae5d8704710b29a40d15468f/src/main/java/frc/robot/subsystems/ExampleSubsystem.java",
    "raw_url": "https://github.com/awtybots/FRC-2021/raw/dda34d981ccf7342ae5d8704710b29a40d15468f/src/main/java/frc/robot/subsystems/ExampleSubsystem.java",
    "contents_url": "https://api.github.com/repos/awtybots/FRC-2021/contents/src/main/java/frc/robot/subsystems/ExampleSubsystem.java?ref=dda34d981ccf7342ae5d8704710b29a40d15468f",
    "patch": "@@ -1,18 +0,0 @@\n-/*----------------------------------------------------------------------------*/\n-/* Copyright (c) 2018-2019 FIRST. All Rights Reserved.                        */\n-/* Open Source Software - may be modified and shared by FRC teams. The code   */\n-/* must be accompanied by the FIRST BSD license file in the root directory of */\n-/* the project.                                                               */\n-/*----------------------------------------------------------------------------*/\n-\n-package frc.robot.subsystems;\n-\n-import edu.wpi.first.wpilibj2.command.SubsystemBase;\n-\n-public class ExampleSubsystem extends SubsystemBase {\n-\n-  public ExampleSubsystem() {}\n-\n-  @Override\n-  public void periodic() {}\n-}"
  },
  {
    "sha": "7e7b2ffb94b5e7a169cee81a5bfd8f8c97705c7d",
    "filename": "src/main/java/frc/robot/subsystems/IndexerTowerSubsystem.java",
    "status": "added",
    "additions": 46,
    "deletions": 0,
    "changes": 46,
    "blob_url": "https://github.com/awtybots/FRC-2021/blob/84963235046860cd1e62b9c54bb5800c81a9876e/src/main/java/frc/robot/subsystems/IndexerTowerSubsystem.java",
    "raw_url": "https://github.com/awtybots/FRC-2021/raw/84963235046860cd1e62b9c54bb5800c81a9876e/src/main/java/frc/robot/subsystems/IndexerTowerSubsystem.java",
    "contents_url": "https://api.github.com/repos/awtybots/FRC-2021/contents/src/main/java/frc/robot/subsystems/IndexerTowerSubsystem.java?ref=84963235046860cd1e62b9c54bb5800c81a9876e",
    "patch": "@@ -0,0 +1,46 @@\n+package frc.robot.subsystems;\n+\n+import edu.wpi.first.wpilibj2.command.SubsystemBase;\n+import frc.robot.RobotMap;\n+import org.awtybots.frc.botplus.motors.Bag;\n+\n+public class IndexerTowerSubsystem extends SubsystemBase {\n+\n+  private static final double indexerLPercentOutput = 0.8;\n+  private static final double indexerRPercentOutput = 0.6;\n+  private static final double towerPercentOutput = 0.75;\n+\n+  private final Bag indexerL = new Bag(RobotMap.CAN.indexerL, 1.0);\n+  private final Bag indexerR = new Bag(RobotMap.CAN.indexerR, 1.0);\n+  private final Bag tower1 = new Bag(RobotMap.CAN.tower1, 1.0);\n+  private final Bag tower2 = new Bag(RobotMap.CAN.tower2, 1.0);\n+\n+  private IndexerTowerSubsystem() {\n+    indexerL.getMotorController().setInverted(false);\n+    indexerR.getMotorController().setInverted(true);\n+    tower1.getMotorController().setInverted(true);\n+    tower2.getMotorController().setInverted(true);\n+\n+    toggle(false);\n+  }\n+\n+  public void toggle(boolean on) {\n+    indexerL.setRawOutput(on ? indexerLPercentOutput : 0.0);\n+    indexerR.setRawOutput(on ? indexerRPercentOutput : 0.0);\n+    tower1.setRawOutput(on ? towerPercentOutput : 0.0);\n+    tower2.setRawOutput(on ? towerPercentOutput : 0.0);\n+  }\n+\n+  public void reverse() {\n+    tower1.setRawOutput(-towerPercentOutput);\n+    tower2.setRawOutput(-towerPercentOutput);\n+  }\n+\n+  private static IndexerTowerSubsystem instance;\n+\n+  public static IndexerTowerSubsystem getInstance() {\n+    if (instance == null)\n+      instance = new IndexerTowerSubsystem();\n+    return instance;\n+  }\n+}"
  },
  {
    "sha": "fc5d6d2a5f1f4771f96fb6198907cebe009e6d21",
    "filename": "src/main/java/frc/robot/subsystems/IntakeSubsystem.java",
    "status": "added",
    "additions": 38,
    "deletions": 0,
    "changes": 38,
    "blob_url": "https://github.com/awtybots/FRC-2021/blob/84963235046860cd1e62b9c54bb5800c81a9876e/src/main/java/frc/robot/subsystems/IntakeSubsystem.java",
    "raw_url": "https://github.com/awtybots/FRC-2021/raw/84963235046860cd1e62b9c54bb5800c81a9876e/src/main/java/frc/robot/subsystems/IntakeSubsystem.java",
    "contents_url": "https://api.github.com/repos/awtybots/FRC-2021/contents/src/main/java/frc/robot/subsystems/IntakeSubsystem.java?ref=84963235046860cd1e62b9c54bb5800c81a9876e",
    "patch": "@@ -0,0 +1,38 @@\n+package frc.robot.subsystems;\n+\n+import com.ctre.phoenix.motorcontrol.ControlMode;\n+import edu.wpi.first.wpilibj.DoubleSolenoid;\n+import edu.wpi.first.wpilibj2.command.SubsystemBase;\n+import frc.robot.RobotMap;\n+import org.awtybots.frc.botplus.motors.Pro775;\n+\n+public class IntakeSubsystem extends SubsystemBase {\n+\n+  private final double motorPercentOutput = 0.6;\n+\n+  private final Pro775 motor = new Pro775(RobotMap.CAN.intake, 1.0);\n+  private final DoubleSolenoid pistons =\n+      new DoubleSolenoid(RobotMap.PCM.intakeFwd, RobotMap.PCM.intakeRev);\n+\n+  private IntakeSubsystem() {\n+    motor.getMotorController().configFactoryDefault();\n+\n+    toggle(false);\n+  }\n+\n+  public void toggle(boolean on) {\n+    pistons.set(on ? DoubleSolenoid.Value.kForward : DoubleSolenoid.Value.kReverse);\n+    toggleMotorOnly(on);\n+  }\n+\n+  public void toggleMotorOnly(boolean on) {\n+    motor.getMotorController().set(ControlMode.PercentOutput, on ? motorPercentOutput : 0);\n+  }\n+\n+  private static IntakeSubsystem instance;\n+\n+  public static IntakeSubsystem getInstance() {\n+    if (instance == null) instance = new IntakeSubsystem();\n+    return instance;\n+  }\n+}"
  },
  {
    "sha": "61db50ce332f662dd52104ffdb1be700b83489e4",
    "filename": "src/main/java/frc/robot/subsystems/ShooterSubsystem.java",
    "status": "added",
    "additions": 42,
    "deletions": 0,
    "changes": 42,
    "blob_url": "https://github.com/awtybots/FRC-2021/blob/84963235046860cd1e62b9c54bb5800c81a9876e/src/main/java/frc/robot/subsystems/ShooterSubsystem.java",
    "raw_url": "https://github.com/awtybots/FRC-2021/raw/84963235046860cd1e62b9c54bb5800c81a9876e/src/main/java/frc/robot/subsystems/ShooterSubsystem.java",
    "contents_url": "https://api.github.com/repos/awtybots/FRC-2021/contents/src/main/java/frc/robot/subsystems/ShooterSubsystem.java?ref=84963235046860cd1e62b9c54bb5800c81a9876e",
    "patch": "@@ -0,0 +1,42 @@\n+package frc.robot.subsystems;\n+\n+import org.awtybots.frc.botplus.math.Flywheel;\n+import org.awtybots.frc.botplus.motors.Falcon500;\n+\n+import edu.wpi.first.wpilibj2.command.SubsystemBase;\n+import frc.robot.RobotMap;\n+\n+public class ShooterSubsystem extends SubsystemBase {\n+\n+  private Falcon500 motor = new Falcon500(RobotMap.CAN.shooter, 1.0);\n+  private final double maxRevsPerSecondError = 50.0;\n+  public double goalRevsPerSecond = 0.0;\n+  public Flywheel flywheel = new Flywheel(0.051, // flywheel radius (m)\n+      motor, 0.90 // efficiency factor\n+  );\n+\n+  private ShooterSubsystem() {\n+    motor.setPIDF(0.0, 0.0, 0.0, 0.0);\n+  }\n+\n+  public void setFlywheelRevsPerSecond(double rps) {\n+    goalRevsPerSecond = rps;\n+    motor.setRevsPerSecond(rps);\n+  }\n+\n+  public void stopFlywheel() {\n+    setFlywheelRevsPerSecond(0.0);\n+  }\n+\n+  public boolean isFlywheelReady() {\n+    return Math.abs(goalRevsPerSecond - motor.getOutputRevsPerSecond()) < maxRevsPerSecondError;\n+  }\n+\n+  private static ShooterSubsystem instance;\n+\n+  public static ShooterSubsystem getInstance() {\n+    if (instance == null)\n+      instance = new ShooterSubsystem();\n+    return instance;\n+  }\n+}"
  }
]
