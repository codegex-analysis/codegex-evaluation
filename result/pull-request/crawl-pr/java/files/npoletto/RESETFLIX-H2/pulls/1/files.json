[
  {
    "sha": "8a3a21d8acf15a858709bd00cd06d7eb1058745f",
    "filename": "src/main/java/br/com/cwi/resetflix/domain/Genero.java",
    "status": "modified",
    "additions": 22,
    "deletions": 1,
    "changes": 23,
    "blob_url": "https://github.com/npoletto/RESETFLIX-H2/blob/5031a4c7336a36f4c5fef2003ee21e487ead8aee/src/main/java/br/com/cwi/resetflix/domain/Genero.java",
    "raw_url": "https://github.com/npoletto/RESETFLIX-H2/raw/5031a4c7336a36f4c5fef2003ee21e487ead8aee/src/main/java/br/com/cwi/resetflix/domain/Genero.java",
    "contents_url": "https://api.github.com/repos/npoletto/RESETFLIX-H2/contents/src/main/java/br/com/cwi/resetflix/domain/Genero.java?ref=5031a4c7336a36f4c5fef2003ee21e487ead8aee",
    "patch": "@@ -1,5 +1,26 @@\n package br.com.cwi.resetflix.domain;\n \n public enum Genero {\n-    FICCAO_CIENTIFICA, DRAMA, ACAO, SUSPENSE\n+    ACAO(\"Ação\"),\n+    AVENTURA (\"Aventura\"),\n+    COMEDIA (\"Comédia\"),\n+    DOCUMENTARIO( \"Documentário\"),\n+    DRAMA(\"Drama\"),\n+    FAROESTE(\"Faroeste\"),\n+    FANTASIA(\"Fantasia\"),\n+    FICCAO_CIENTIFICA(\"Ficção científica\"),\n+    GUERRA(\"Guerra\"),\n+    MUSICAL(\"Musical\"),\n+    POLICIAL(\"Policial\"),\n+    ROMANCE(\"Romance\"),\n+    SUSPENSE(\"Suspense\"),\n+    TERROR(\"Terror\"),\n+    THRILLER(\"Thriller \"),\n+    RUIM(\"Ruim\");\n+\n+    private String descricao;\n+\n+    Genero(final String descricao) {\n+        this.descricao = descricao;\n+    }\n }"
  },
  {
    "sha": "7cdd50a843bd478de3fb4bbb8e20fea7a527b300",
    "filename": "src/main/java/br/com/cwi/resetflix/entity/AtorEntity.java",
    "status": "modified",
    "additions": 24,
    "deletions": 2,
    "changes": 26,
    "blob_url": "https://github.com/npoletto/RESETFLIX-H2/blob/5031a4c7336a36f4c5fef2003ee21e487ead8aee/src/main/java/br/com/cwi/resetflix/entity/AtorEntity.java",
    "raw_url": "https://github.com/npoletto/RESETFLIX-H2/raw/5031a4c7336a36f4c5fef2003ee21e487ead8aee/src/main/java/br/com/cwi/resetflix/entity/AtorEntity.java",
    "contents_url": "https://api.github.com/repos/npoletto/RESETFLIX-H2/contents/src/main/java/br/com/cwi/resetflix/entity/AtorEntity.java?ref=5031a4c7336a36f4c5fef2003ee21e487ead8aee",
    "patch": "@@ -2,16 +2,30 @@\n \n import java.util.List;\n \n+import javax.persistence.Column;\n import javax.persistence.Entity;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.GenerationType;\n+import javax.persistence.Id;\n+import javax.persistence.ManyToMany;\n import javax.persistence.Table;\n \n+@Entity\n+@Table(name = \"ATORES\")\n public class AtorEntity {\n \n+    @Id\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n     private Long id;\n \n-    private final String nome;\n+    @Column\n+    private String nome;\n \n-    private final List<FilmeEntity> filmes;\n+    @ManyToMany(mappedBy = \"atores\")\n+    private List<FilmeEntity> filmes;\n+\n+    public AtorEntity() {\n+    }\n \n     public AtorEntity(final String nome, final List<FilmeEntity> filmes) {\n         this.nome = nome;\n@@ -33,4 +47,12 @@ public String getNome() {\n     public List<FilmeEntity> getFilmes() {\n         return filmes;\n     }\n+\n+    public void setNome(final String nome) {\n+        this.nome = nome;\n+    }\n+\n+    public void setFilmes(final List<FilmeEntity> filmes) {\n+        this.filmes = filmes;\n+    }\n }"
  },
  {
    "sha": "3a0771d00b622ed570cbd33d270575ec60b8197a",
    "filename": "src/main/java/br/com/cwi/resetflix/entity/DiretorEntity.java",
    "status": "modified",
    "additions": 17,
    "deletions": 0,
    "changes": 17,
    "blob_url": "https://github.com/npoletto/RESETFLIX-H2/blob/5031a4c7336a36f4c5fef2003ee21e487ead8aee/src/main/java/br/com/cwi/resetflix/entity/DiretorEntity.java",
    "raw_url": "https://github.com/npoletto/RESETFLIX-H2/raw/5031a4c7336a36f4c5fef2003ee21e487ead8aee/src/main/java/br/com/cwi/resetflix/entity/DiretorEntity.java",
    "contents_url": "https://api.github.com/repos/npoletto/RESETFLIX-H2/contents/src/main/java/br/com/cwi/resetflix/entity/DiretorEntity.java?ref=5031a4c7336a36f4c5fef2003ee21e487ead8aee",
    "patch": "@@ -2,14 +2,31 @@\n \n import java.util.List;\n \n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.GenerationType;\n+import javax.persistence.Id;\n+import javax.persistence.OneToMany;\n+import javax.persistence.Table;\n+\n+@Entity\n+@Table(name = \"DIRETORES\")\n public class DiretorEntity {\n \n+    @Id\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n     private Long id;\n \n+    @Column\n     private String nome;\n \n+    @OneToMany(mappedBy = \"diretor\")\n     private List<FilmeEntity> filmes;\n \n+    public DiretorEntity() {\n+    }\n+\n     public DiretorEntity(final String nome, final List<FilmeEntity> filmes) {\n         this.nome = nome;\n         this.filmes = filmes;"
  },
  {
    "sha": "84e2f03cfdd0fa7b30870ea6221e2a99c5df57a9",
    "filename": "src/main/java/br/com/cwi/resetflix/entity/FilmeEntity.java",
    "status": "modified",
    "additions": 25,
    "deletions": 2,
    "changes": 27,
    "blob_url": "https://github.com/npoletto/RESETFLIX-H2/blob/5031a4c7336a36f4c5fef2003ee21e487ead8aee/src/main/java/br/com/cwi/resetflix/entity/FilmeEntity.java",
    "raw_url": "https://github.com/npoletto/RESETFLIX-H2/raw/5031a4c7336a36f4c5fef2003ee21e487ead8aee/src/main/java/br/com/cwi/resetflix/entity/FilmeEntity.java",
    "contents_url": "https://api.github.com/repos/npoletto/RESETFLIX-H2/contents/src/main/java/br/com/cwi/resetflix/entity/FilmeEntity.java?ref=5031a4c7336a36f4c5fef2003ee21e487ead8aee",
    "patch": "@@ -2,25 +2,48 @@\n \n import java.util.List;\n \n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.EnumType;\n+import javax.persistence.Enumerated;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.GenerationType;\n+import javax.persistence.Id;\n+import javax.persistence.ManyToMany;\n+import javax.persistence.ManyToOne;\n+import javax.persistence.Table;\n+\n import br.com.cwi.resetflix.domain.Genero;\n \n+@Entity\n+@Table(name = \"FILMES\")\n public class FilmeEntity {\n \n+    @Id\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n     private Long id;\n \n+    @Column\n     private String nome;\n \n+    @Column\n+    @Enumerated(value = EnumType.STRING)\n     private Genero genero;\n \n+    @ManyToOne\n     private DiretorEntity diretor;\n \n+    @ManyToMany\n     private List<AtorEntity> atores;\n \n-    public FilmeEntity(final String nome, final Genero genero, final DiretorEntity diretores,\n+    public FilmeEntity() {\n+    }\n+\n+    public FilmeEntity(final String nome, final Genero genero, final DiretorEntity diretor,\n         final List<AtorEntity> atores) {\n         this.nome = nome;\n         this.genero = genero;\n-        this.diretor = diretores;\n+        this.diretor = diretor;\n         this.atores = atores;\n     }\n "
  },
  {
    "sha": "a9b14b2391d3e01811519deb9b38681bec7ad975",
    "filename": "src/main/java/br/com/cwi/resetflix/mapper/DiretorEntityMapper.java",
    "status": "modified",
    "additions": 5,
    "deletions": 5,
    "changes": 10,
    "blob_url": "https://github.com/npoletto/RESETFLIX-H2/blob/5031a4c7336a36f4c5fef2003ee21e487ead8aee/src/main/java/br/com/cwi/resetflix/mapper/DiretorEntityMapper.java",
    "raw_url": "https://github.com/npoletto/RESETFLIX-H2/raw/5031a4c7336a36f4c5fef2003ee21e487ead8aee/src/main/java/br/com/cwi/resetflix/mapper/DiretorEntityMapper.java",
    "contents_url": "https://api.github.com/repos/npoletto/RESETFLIX-H2/contents/src/main/java/br/com/cwi/resetflix/mapper/DiretorEntityMapper.java?ref=5031a4c7336a36f4c5fef2003ee21e487ead8aee",
    "patch": "@@ -2,6 +2,8 @@\n \n import java.util.Collections;\n \n+import br.com.cwi.resetflix.repository.FilmeRepository;\n+import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n \n import br.com.cwi.resetflix.entity.DiretorEntity;\n@@ -10,12 +12,10 @@\n @Component\n public class DiretorEntityMapper {\n \n-//    @Autowired\n-//    private FilmeRepository filmeRepository;\n+    @Autowired\n+    private FilmeRepository filmeRepository;\n \n     public DiretorEntity mapear(final CriarDiretorRequest request) {\n-        return new DiretorEntity(request.getNome(), Collections.emptyList()\n-//            filmeRepository.metodoBuscarTodosPorId(request.getIdFilmes()));\n-        );\n+        return new DiretorEntity(request.getNome(), filmeRepository.findAllById(request.getIdFilmes()));\n     }\n }"
  },
  {
    "sha": "ebd0e014d4a9467f36c785fb88e174473c4d43a7",
    "filename": "src/main/java/br/com/cwi/resetflix/mapper/FilmeEntityMapper.java",
    "status": "modified",
    "additions": 10,
    "deletions": 9,
    "changes": 19,
    "blob_url": "https://github.com/npoletto/RESETFLIX-H2/blob/5031a4c7336a36f4c5fef2003ee21e487ead8aee/src/main/java/br/com/cwi/resetflix/mapper/FilmeEntityMapper.java",
    "raw_url": "https://github.com/npoletto/RESETFLIX-H2/raw/5031a4c7336a36f4c5fef2003ee21e487ead8aee/src/main/java/br/com/cwi/resetflix/mapper/FilmeEntityMapper.java",
    "contents_url": "https://api.github.com/repos/npoletto/RESETFLIX-H2/contents/src/main/java/br/com/cwi/resetflix/mapper/FilmeEntityMapper.java?ref=5031a4c7336a36f4c5fef2003ee21e487ead8aee",
    "patch": "@@ -1,5 +1,8 @@\n package br.com.cwi.resetflix.mapper;\n \n+import br.com.cwi.resetflix.repository.AtoresRepository;\n+import br.com.cwi.resetflix.repository.DiretorRepository;\n+import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n \n import br.com.cwi.resetflix.entity.FilmeEntity;\n@@ -8,16 +11,14 @@\n @Component\n public class FilmeEntityMapper {\n \n-//    @Autowired\n-//    private AtoresRepository atoresRepository;\n-//\n-//    @Autowired\n-//    private DiretoresRepository diretoresRepository;\n+    @Autowired\n+    private AtoresRepository atoresRepository;\n+\n+    @Autowired\n+    private DiretorRepository diretoresRepository;\n \n     public FilmeEntity mapear(final CriarFilmeRequest request) {\n-        return new FilmeEntity(request.getNome(), request.getGenero(),\n-//            diretoresRepository.metodoBuscarPorId(request.getIdDiretor()).get(),\n-            // atoresRepository.metodoBuscarTodosPorId(request.getIdsAtores()));\n-            null, null);\n+        return new FilmeEntity(request.getNome(), request.getGenero(), diretoresRepository.findById(request.getIdDiretor()).orElse(null),\n+            atoresRepository.findAllById(request.getIdsAtores()));\n     }\n }"
  },
  {
    "sha": "19e282cd4e63b060c71785fbcadeae76ba278fe7",
    "filename": "src/main/java/br/com/cwi/resetflix/repository/AtoresRepository.java",
    "status": "added",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/npoletto/RESETFLIX-H2/blob/5031a4c7336a36f4c5fef2003ee21e487ead8aee/src/main/java/br/com/cwi/resetflix/repository/AtoresRepository.java",
    "raw_url": "https://github.com/npoletto/RESETFLIX-H2/raw/5031a4c7336a36f4c5fef2003ee21e487ead8aee/src/main/java/br/com/cwi/resetflix/repository/AtoresRepository.java",
    "contents_url": "https://api.github.com/repos/npoletto/RESETFLIX-H2/contents/src/main/java/br/com/cwi/resetflix/repository/AtoresRepository.java?ref=5031a4c7336a36f4c5fef2003ee21e487ead8aee",
    "patch": "@@ -0,0 +1,12 @@\n+package br.com.cwi.resetflix.repository;\n+\n+import org.springframework.data.jpa.repository.JpaRepository;\n+import org.springframework.stereotype.Repository;\n+\n+import br.com.cwi.resetflix.entity.AtorEntity;\n+import br.com.cwi.resetflix.entity.FilmeEntity;\n+\n+@Repository\n+public interface AtoresRepository extends JpaRepository<AtorEntity, Long> {\n+\n+}"
  },
  {
    "sha": "96f2ea395eba5c2ae479f72a898fb045e4b4de91",
    "filename": "src/main/java/br/com/cwi/resetflix/repository/DiretorRepository.java",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/npoletto/RESETFLIX-H2/blob/5031a4c7336a36f4c5fef2003ee21e487ead8aee/src/main/java/br/com/cwi/resetflix/repository/DiretorRepository.java",
    "raw_url": "https://github.com/npoletto/RESETFLIX-H2/raw/5031a4c7336a36f4c5fef2003ee21e487ead8aee/src/main/java/br/com/cwi/resetflix/repository/DiretorRepository.java",
    "contents_url": "https://api.github.com/repos/npoletto/RESETFLIX-H2/contents/src/main/java/br/com/cwi/resetflix/repository/DiretorRepository.java?ref=5031a4c7336a36f4c5fef2003ee21e487ead8aee",
    "patch": "@@ -0,0 +1,11 @@\n+package br.com.cwi.resetflix.repository;\n+\n+import br.com.cwi.resetflix.entity.AtorEntity;\n+import br.com.cwi.resetflix.entity.DiretorEntity;\n+import org.springframework.data.jpa.repository.JpaRepository;\n+import org.springframework.stereotype.Repository;\n+\n+@Repository\n+public interface DiretorRepository extends JpaRepository<DiretorEntity, Long> {\n+\n+}"
  },
  {
    "sha": "ebaa0c3eaae525665fa3e345013d7f56b28ae4a8",
    "filename": "src/main/java/br/com/cwi/resetflix/repository/FilmeRepository.java",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/npoletto/RESETFLIX-H2/blob/5031a4c7336a36f4c5fef2003ee21e487ead8aee/src/main/java/br/com/cwi/resetflix/repository/FilmeRepository.java",
    "raw_url": "https://github.com/npoletto/RESETFLIX-H2/raw/5031a4c7336a36f4c5fef2003ee21e487ead8aee/src/main/java/br/com/cwi/resetflix/repository/FilmeRepository.java",
    "contents_url": "https://api.github.com/repos/npoletto/RESETFLIX-H2/contents/src/main/java/br/com/cwi/resetflix/repository/FilmeRepository.java?ref=5031a4c7336a36f4c5fef2003ee21e487ead8aee",
    "patch": "@@ -0,0 +1,13 @@\n+package br.com.cwi.resetflix.repository;\n+\n+import br.com.cwi.resetflix.domain.Genero;\n+import org.springframework.data.jpa.repository.JpaRepository;\n+\n+import br.com.cwi.resetflix.entity.FilmeEntity;\n+\n+import java.util.List;\n+\n+public interface FilmeRepository extends JpaRepository<FilmeEntity, Long> {\n+    List<FilmeEntity> findByGenero(Genero genero);\n+\n+}"
  },
  {
    "sha": "beb90d14b7634ae4962b668178b34b89c1fc2962",
    "filename": "src/main/java/br/com/cwi/resetflix/service/AtoresService.java",
    "status": "modified",
    "additions": 16,
    "deletions": 15,
    "changes": 31,
    "blob_url": "https://github.com/npoletto/RESETFLIX-H2/blob/5031a4c7336a36f4c5fef2003ee21e487ead8aee/src/main/java/br/com/cwi/resetflix/service/AtoresService.java",
    "raw_url": "https://github.com/npoletto/RESETFLIX-H2/raw/5031a4c7336a36f4c5fef2003ee21e487ead8aee/src/main/java/br/com/cwi/resetflix/service/AtoresService.java",
    "contents_url": "https://api.github.com/repos/npoletto/RESETFLIX-H2/contents/src/main/java/br/com/cwi/resetflix/service/AtoresService.java?ref=5031a4c7336a36f4c5fef2003ee21e487ead8aee",
    "patch": "@@ -18,6 +18,8 @@\n import br.com.cwi.resetflix.mapper.AtorEntityMapper;\n import br.com.cwi.resetflix.mapper.AtoresResponseMapper;\n import br.com.cwi.resetflix.mapper.ConsultarDetalhesAtorResponseMapper;\n+import br.com.cwi.resetflix.repository.AtoresRepository;\n+import br.com.cwi.resetflix.repository.FilmeRepository;\n import br.com.cwi.resetflix.request.CriarAtorRequest;\n import br.com.cwi.resetflix.response.AtoresResponse;\n import br.com.cwi.resetflix.response.ConsultarDetalhesAtorResponse;\n@@ -26,11 +28,11 @@\n public class AtoresService {\n \n     //TODO Criar Repositories\n-//    @Autowired\n-//    private AtoresRepository atoresRepository;\n-//\n-//    @Autowired\n-//    private FilmeRepository filmeRepository;\n+    @Autowired\n+    private AtoresRepository atoresRepository;\n+\n+    @Autowired\n+    private FilmeRepository filmeRepository;\n \n     @Autowired\n     private AtoresResponseMapper atoresResponseMapper;\n@@ -42,9 +44,8 @@\n     private ConsultarDetalhesAtorResponseMapper consultarDetalhesAtorResponseMapper;\n \n     public List<AtoresResponse> getAtores() {\n-//        final List<AtorEntity> atores = atoresRepository.metodoBuscar();\n-//        return atoresResponseMapper.mapear(atores);\n-        return emptyList();\n+        final List<AtorEntity> atores = atoresRepository.findAll();\n+        return atoresResponseMapper.mapear(atores);\n     }\n \n     @Transactional\n@@ -54,22 +55,22 @@ public Long criarAtor(final CriarAtorRequest request) {\n             throw new BadRequestException(\"Dados inválidos para cadastro de ator\");\n         }\n \n-//        final List<FilmeEntity> filmes = filmeRepository.metodoBuscarPorId(request.getIdFilmes());\n-        final List<FilmeEntity> filmes = new ArrayList<>();\n+        final List<FilmeEntity> filmes = filmeRepository.findAllById(request.getIdFilmes());\n \n         final AtorEntity atorSalvar = atorEntityMapper.mapear(request, filmes);\n-//        atoresRepository.metodoSalvar(atorSalvar);\n \n-        filmes.forEach(filme -> filme.getAtores().add(atorSalvar));\n-//        filmeRepository.metodoSalvarTodos(filmes);\n \n+\n+        for (FilmeEntity filme : filmes) {\n+            filme.getAtores().add(atorSalvar);\n+        }\n+        atoresRepository.save(atorSalvar);\n         return atorSalvar.getId();\n     }\n \n     public ConsultarDetalhesAtorResponse consultarDetalhesAtor(final Long id) {\n \n-        final AtorEntity atorSalvo = null;\n-        // atorSalvo = atoresRepository.metodoBuscarPorId(id);\n+        final AtorEntity atorSalvo = atoresRepository.findById(id).orElse(null);\n \n         if (atorSalvo == null) {\n             throw new NotFoundException(\"Ator não encontrado\");"
  },
  {
    "sha": "6d3d6a7776b5ea16756f3ae6c2a825d009691eda",
    "filename": "src/main/java/br/com/cwi/resetflix/service/DiretoresService.java",
    "status": "modified",
    "additions": 26,
    "deletions": 13,
    "changes": 39,
    "blob_url": "https://github.com/npoletto/RESETFLIX-H2/blob/5031a4c7336a36f4c5fef2003ee21e487ead8aee/src/main/java/br/com/cwi/resetflix/service/DiretoresService.java",
    "raw_url": "https://github.com/npoletto/RESETFLIX-H2/raw/5031a4c7336a36f4c5fef2003ee21e487ead8aee/src/main/java/br/com/cwi/resetflix/service/DiretoresService.java",
    "contents_url": "https://api.github.com/repos/npoletto/RESETFLIX-H2/contents/src/main/java/br/com/cwi/resetflix/service/DiretoresService.java?ref=5031a4c7336a36f4c5fef2003ee21e487ead8aee",
    "patch": "@@ -5,6 +5,9 @@\n import java.util.ArrayList;\n import java.util.List;\n \n+import br.com.cwi.resetflix.entity.FilmeEntity;\n+import br.com.cwi.resetflix.repository.DiretorRepository;\n+import br.com.cwi.resetflix.repository.FilmeRepository;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Service;\n \n@@ -18,46 +21,56 @@\n import br.com.cwi.resetflix.response.ConsultarDetalhesDiretorResponse;\n import br.com.cwi.resetflix.response.DiretoresResponse;\n \n+import javax.transaction.Transactional;\n+\n @Service\n public class DiretoresService {\n \n-//    @Autowired\n-//    private DiretoresRepository diretoresRepository;\n-//\n-//    @Autowired\n-//    private FilmeRepository filmeRepository;\n-\n     @Autowired\n     private DiretoresResponseMapper diretoresResponseMapper;\n \n     @Autowired\n     private DiretorEntityMapper diretorEntityMapper;\n \n+    @Autowired\n+    private DiretorRepository diretorRepository;\n+\n+    @Autowired\n+    private FilmeRepository filmeRepository;\n+\n     @Autowired\n     private ConsultarDetalhesDiretorResponseMapper consultarDetalhesDiretorResponseMapper;\n \n     public List<DiretoresResponse> getDiretores() {\n-//        final List<DiretorEntity> diretores = diretoresRepository.metodoBuscarTodos();\n-        final List<DiretorEntity> diretores = new ArrayList<>();\n+        final List<DiretorEntity> diretores = diretorRepository.findAll();\n         return diretoresResponseMapper.mapear(diretores);\n     }\n \n-    public Long criarDiretor(final CriarDiretorRequest request) {\n+    @Transactional\n+    public synchronized Long criarDiretor(final CriarDiretorRequest request) {\n \n         if (request == null || isEmpty(request.getNome())) {\n             throw new BadRequestException(\"Dados inválidos para cadastro de diretor\");\n         }\n \n+        final List<FilmeEntity> filmes = filmeRepository.findAllById(request.getIdFilmes());\n+\n         final DiretorEntity diretorSalvar = diretorEntityMapper.mapear(request);\n \n-//        return diretoresRepository.metodoSalvar(diretorSalvar).getId();\n-        return null;\n+\n+\n+        for(FilmeEntity filme : filmes) {\n+            filme.setDiretor(diretorSalvar);\n+        }\n+        diretorRepository.save(diretorSalvar);\n+        return diretorSalvar.getId();\n+\n     }\n \n     public ConsultarDetalhesDiretorResponse consultarDetalhesDiretor(final Long id) {\n \n-        //final DiretorEntity diretorSalvo = diretoresRepository.metodoBuscarPorId(id);\n-        final DiretorEntity diretorSalvo = null;\n+        DiretorEntity diretorSalvo = diretorRepository.findById(id).orElse(null);\n+\n         if (diretorSalvo == null) {\n             throw new NotFoundException(\"Diretor não encontrado\");\n         }"
  },
  {
    "sha": "a41c080f10b5d4a009e75f5d2f6c7e21bd473c84",
    "filename": "src/main/java/br/com/cwi/resetflix/service/FilmesService.java",
    "status": "modified",
    "additions": 34,
    "deletions": 15,
    "changes": 49,
    "blob_url": "https://github.com/npoletto/RESETFLIX-H2/blob/5031a4c7336a36f4c5fef2003ee21e487ead8aee/src/main/java/br/com/cwi/resetflix/service/FilmesService.java",
    "raw_url": "https://github.com/npoletto/RESETFLIX-H2/raw/5031a4c7336a36f4c5fef2003ee21e487ead8aee/src/main/java/br/com/cwi/resetflix/service/FilmesService.java",
    "contents_url": "https://api.github.com/repos/npoletto/RESETFLIX-H2/contents/src/main/java/br/com/cwi/resetflix/service/FilmesService.java?ref=5031a4c7336a36f4c5fef2003ee21e487ead8aee",
    "patch": "@@ -6,6 +6,11 @@\n import java.util.ArrayList;\n import java.util.List;\n \n+import br.com.cwi.resetflix.entity.AtorEntity;\n+import br.com.cwi.resetflix.entity.DiretorEntity;\n+import br.com.cwi.resetflix.repository.AtoresRepository;\n+import br.com.cwi.resetflix.repository.DiretorRepository;\n+import br.com.cwi.resetflix.repository.FilmeRepository;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Service;\n \n@@ -20,17 +25,19 @@\n import br.com.cwi.resetflix.response.ConsultarDetalhesFilmeResponse;\n import br.com.cwi.resetflix.response.FilmeResponse;\n \n+import javax.transaction.Transactional;\n+\n @Service\n public class FilmesService {\n \n-//    @Autowired\n-//    private FilmeRepository filmeRepository;\n-//\n-//    @Autowired\n-//    private AtoresRepository atoresRepository;\n-//\n-//    @Autowired\n-//    private DiretoresRepository diretoresRepository;\n+     @Autowired\n+     private FilmeRepository filmeRepository;\n+\n+    @Autowired\n+    private AtoresRepository atoresRepository;\n+\n+    @Autowired\n+    private DiretorRepository diretoresRepository;\n \n     @Autowired\n     private FilmeResponseMapper filmeResponseMapper;\n@@ -43,31 +50,43 @@\n \n     public List<FilmeResponse> getFilmes(final Genero genero) {\n \n-        final List<FilmeEntity> filmes = new ArrayList<>();\n+        List<FilmeEntity> filmes = new ArrayList<>();\n \n         if (nonNull(genero)) {\n-//            filmes = filmeRepository.metodoBuscarTodosPorGenero(genero);\n+            filmes = filmeRepository.findByGenero(genero);\n         } else {\n-//            filmes = filmeRepository.metodoBuscarTodos();\n+             filmes = filmeRepository.findAll();\n         }\n \n         return filmeResponseMapper.mapear(filmes);\n     }\n \n+    @Transactional\n     public Long criarFilme(final CriarFilmeRequest request) {\n \n         if (request == null || isEmpty(request.getNome())) {\n             throw new BadRequestException(\"Dados inválidos para cadastro de filme\");\n         }\n \n         final FilmeEntity filmeSalvar = filmeEntityMapper.mapear(request);\n-//        return filmeRepository.metodoSalvar(filmeSalvar).getId();\n-        return null;\n+\n+\n+        List<AtorEntity> atores = atoresRepository.findAllById(request.getIdsAtores());\n+        for (AtorEntity ator : atores) {\n+            ator.getFilmes().add(filmeSalvar);\n+        }\n+\n+        DiretorEntity diretor = diretoresRepository.findById(request.getIdDiretor()).orElse(null);\n+        if(diretor!=null) {\n+            diretor.getFilmes().add(filmeSalvar);\n+        }\n+        filmeRepository.save(filmeSalvar);\n+        return filmeSalvar.getId();\n     }\n \n     public ConsultarDetalhesFilmeResponse consultarDetalhesFilme(final Long id) {\n-//        final FilmeEntity filmeSalvo = filmeRepository.metodoBuscarPorId(id).orElse(null);\n-        FilmeEntity filmeSalvo = null;\n+       final FilmeEntity filmeSalvo = filmeRepository.findById(id).orElse(null);\n+\n         if (filmeSalvo == null) {\n             throw new NotFoundException(\"Filme não encontrado\");\n         }"
  },
  {
    "sha": "c3f8f59231e705e482a03f228a11d92393fab84c",
    "filename": "src/main/resources/data.sql",
    "status": "modified",
    "additions": 20,
    "deletions": 22,
    "changes": 42,
    "blob_url": "https://github.com/npoletto/RESETFLIX-H2/blob/5031a4c7336a36f4c5fef2003ee21e487ead8aee/src/main/resources/data.sql",
    "raw_url": "https://github.com/npoletto/RESETFLIX-H2/raw/5031a4c7336a36f4c5fef2003ee21e487ead8aee/src/main/resources/data.sql",
    "contents_url": "https://api.github.com/repos/npoletto/RESETFLIX-H2/contents/src/main/resources/data.sql?ref=5031a4c7336a36f4c5fef2003ee21e487ead8aee",
    "patch": "@@ -1,23 +1,21 @@\n---INSERT INTO atores (id, nome) VALUES\n---  (1, 'Leonardo DiCaprio'),\n---  (2, 'Matthew McConaughey'),\n---  (3, 'Jamie Foxx');\n---\n--- INSERT INTO diretores (id, nome) VALUES\n---    (1, 'Martin Scorcese'),\n---    (2, 'Quentin Tarantino'),\n---    (3, 'Christopher Nolan');\n---\n--- INSERT INTO filmes (id, genero, nome, diretor_id) VALUES\n---    (1, 'FICCAO_CIENTIFICA', 'Interestelar', 3),\n---    (2, 'ACAO', 'Django Livre', 2),\n---    (3, 'SUSPENSE', 'O Regresso', 3);\n---\n---  INSERT INTO FILMES_ATORES (FILMES_ID, ATORES_ID) VALUES\n---  (1, 2),\n---  (2, 3),\n---  (3, 1),\n--- (2, 1);\n---\n+INSERT INTO atores (id, nome) VALUES\n+  (1, 'Leonardo DiCaprio'),\n+  (2, 'Matthew McConaughey'),\n+  (3, 'Jamie Foxx');\n+\n+ INSERT INTO diretores (id, nome) VALUES\n+    (1, 'Martin Scorcese'),\n+    (2, 'Quentin Tarantino'),\n+    (3, 'Christopher Nolan');\n+\n+ INSERT INTO filmes (id, genero, nome, diretor_id) VALUES\n+    (1, 'FICCAO_CIENTIFICA', 'Interestelar', 3),\n+    (2, 'ACAO', 'Django Livre', 2),\n+    (3, 'SUSPENSE', 'O Regresso', 3);\n+\n+  INSERT INTO FILMES_ATORES (FILMES_ID, ATORES_ID) VALUES\n+  (1, 2),\n+  (2, 3),\n+  (3, 1),\n+ (2, 1);\n \n-SELECT SYSDATE;"
  }
]
