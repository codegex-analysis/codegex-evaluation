[
  {
    "sha": "a0d63fe11c439795f7118db013b8b750b463ce3d",
    "filename": "doc/guide.md",
    "status": "modified",
    "additions": 45,
    "deletions": 0,
    "changes": 45,
    "blob_url": "https://github.com/folio-org/okapi/blob/7e09346472223dfa6e0ca580e3a4c8bb31450f4a/doc/guide.md",
    "raw_url": "https://github.com/folio-org/okapi/raw/7e09346472223dfa6e0ca580e3a4c8bb31450f4a/doc/guide.md",
    "contents_url": "https://api.github.com/repos/folio-org/okapi/contents/doc/guide.md?ref=7e09346472223dfa6e0ca580e3a4c8bb31450f4a",
    "patch": "@@ -3083,6 +3083,51 @@ Note that the call made by Okapi will call auth-token to get a token\n for the tenant this module is enabled for. No user is involved in this.\n Use `modulePermissions` to grant permissions for the token.\n \n+With Okapi 4.8.0, the timers can also be specified to occur at given\n+times. This is triggered by suppying a `schedule` object. This object\n+only supports one property `cron` with a string value that is a crontab\n+entry. For example:\n+\n+```\n+    {\n+      \"id\": \"_timer\",\n+      \"version\": \"1.0\",\n+      \"interfaceType\": \"system\",\n+      \"handlers\": [\n+        {\n+          \"methods\": [ \"POST\" ],\n+          \"pathPattern\": \"/testb/1\",\n+          \"schedule\": {\n+            \"cron\": \"0 6,18 * * *\"\n+          }\n+        }\n+      ]\n+    }\n+```\n+\n+The cron value consists of 5 tokens, separated by whitespace.\n+The tokens in order are:\n+\n+ * minute 0-59\n+ * hour 0-23\n+ * day of month 1-31, doesn't execute in months without that day\n+ * month 1-12, 1=jan, 2=feb, 3=mar, .., 12=dec\n+ * weekday 0-7, where 0=sun, 1=mon, 2=tue, .., 6=sat, 7=sun\n+\n+Time is in UTC. Month and weekday names are case insensitive.\n+\n+Examples:\n+\n+| Schedule         | Description |\n+| ---------------- | ----------- |\n+| `0 2 * * *     ` | every day at 2 AM |\n+| `15 */2 * * *  ` | quarter past every 2nd hour |\n+| `0 6,18 * * *  ` | 6 AM + 6 PM |\n+| `0 0 * * sun`    | midnight between Saturday and Sunday |\n+\n+See [crontab man page](https://www.unix.com/man-page/linux/5/crontab/)\n+for more information.\n+\n ### Instrumentation\n \n Okapi uses Micrometer for managing metrics and reporting to backends. To enable it,"
  },
  {
    "sha": "62536b060ec035473d23232df62f793323888c16",
    "filename": "okapi-core/pom.xml",
    "status": "modified",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/folio-org/okapi/blob/7e09346472223dfa6e0ca580e3a4c8bb31450f4a/okapi-core/pom.xml",
    "raw_url": "https://github.com/folio-org/okapi/raw/7e09346472223dfa6e0ca580e3a4c8bb31450f4a/okapi-core/pom.xml",
    "contents_url": "https://api.github.com/repos/folio-org/okapi/contents/okapi-core/pom.xml?ref=7e09346472223dfa6e0ca580e3a4c8bb31450f4a",
    "patch": "@@ -67,6 +67,10 @@\n       <groupId>com.zaxxer</groupId>\n       <artifactId>nuprocess</artifactId>\n     </dependency>\n+    <dependency>\n+      <groupId>com.cronutils</groupId>\n+      <artifactId>cron-utils</artifactId>\n+    </dependency>\n     <dependency>\n       <groupId>org.folio.okapi</groupId>\n       <artifactId>okapi-testing</artifactId>"
  },
  {
    "sha": "5a7afbe7d75a6581dd99cd4cdb3945709f4ea4f3",
    "filename": "okapi-core/src/main/java/org/folio/okapi/bean/RoutingEntry.java",
    "status": "modified",
    "additions": 13,
    "deletions": 2,
    "changes": 15,
    "blob_url": "https://github.com/folio-org/okapi/blob/7e09346472223dfa6e0ca580e3a4c8bb31450f4a/okapi-core/src/main/java/org/folio/okapi/bean/RoutingEntry.java",
    "raw_url": "https://github.com/folio-org/okapi/raw/7e09346472223dfa6e0ca580e3a4c8bb31450f4a/okapi-core/src/main/java/org/folio/okapi/bean/RoutingEntry.java",
    "contents_url": "https://api.github.com/repos/folio-org/okapi/contents/okapi-core/src/main/java/org/folio/okapi/bean/RoutingEntry.java?ref=7e09346472223dfa6e0ca580e3a4c8bb31450f4a",
    "patch": "@@ -29,6 +29,7 @@\n   private String redirectPath; // only for type='redirect'\n   private String unit;\n   private String delay;\n+  private Schedule schedule;\n   private long factor;\n   private String[] permissionsRequired;\n   private String[] permissionsDesired;\n@@ -177,6 +178,14 @@ public void setDelay(String delay) {\n     this.delay = delay;\n   }\n \n+  public Schedule getSchedule() {\n+    return schedule;\n+  }\n+\n+  public void setSchedule(Schedule schedule) {\n+    this.schedule = schedule;\n+  }\n+\n   /**\n    * get timer delay in milliseconds.\n    */\n@@ -185,9 +194,11 @@ public long getDelayMilliSeconds() {\n     if (this.delay != null && unit != null) {\n       long delayMilliSeconds = Integer.parseInt(this.delay);\n       return delayMilliSeconds * factor;\n-    } else {\n-      return 0;\n     }\n+    if (schedule != null) {\n+      return schedule.getDelayMilliSeconds();\n+    }\n+    return 0;\n   }\n \n   public String getLevel() {"
  },
  {
    "sha": "f0118f3cd4874d8c3db2cd0d98d4902425441f65",
    "filename": "okapi-core/src/main/java/org/folio/okapi/bean/Schedule.java",
    "status": "added",
    "additions": 36,
    "deletions": 0,
    "changes": 36,
    "blob_url": "https://github.com/folio-org/okapi/blob/7e09346472223dfa6e0ca580e3a4c8bb31450f4a/okapi-core/src/main/java/org/folio/okapi/bean/Schedule.java",
    "raw_url": "https://github.com/folio-org/okapi/raw/7e09346472223dfa6e0ca580e3a4c8bb31450f4a/okapi-core/src/main/java/org/folio/okapi/bean/Schedule.java",
    "contents_url": "https://api.github.com/repos/folio-org/okapi/contents/okapi-core/src/main/java/org/folio/okapi/bean/Schedule.java?ref=7e09346472223dfa6e0ca580e3a4c8bb31450f4a",
    "patch": "@@ -0,0 +1,36 @@\n+package org.folio.okapi.bean;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnore;\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import java.time.Clock;\n+import java.time.Duration;\n+import java.time.ZonedDateTime;\n+import java.util.Optional;\n+import org.folio.okapi.util.ScheduleCronUtils;\n+\n+@JsonInclude(JsonInclude.Include.NON_NULL)\n+public class Schedule {\n+\n+  private final org.folio.okapi.util.Schedule scheduleCronUtils = new ScheduleCronUtils();\n+\n+  public void setCron(String cron) {\n+    this.scheduleCronUtils.parseSpec(cron);\n+  }\n+\n+  public String getCron() {\n+    return scheduleCronUtils.toString();\n+  }\n+\n+  @JsonIgnore\n+  long getDelayMilliSeconds() {\n+    // UTC for now, but we can add other timezone property later\n+    Optional<Duration> duration = scheduleCronUtils.getNextDuration(\n+        ZonedDateTime.now(Clock.systemUTC())\n+    );\n+    if (duration.isEmpty()) {\n+      return 0;\n+    }\n+    long sec = duration.get().toSeconds();\n+    return (sec + 1) * 1000;\n+  }\n+}"
  },
  {
    "sha": "b94378517b40c6f3028afc67884a4cade58df72f",
    "filename": "okapi-core/src/main/java/org/folio/okapi/managers/TenantManager.java",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/folio-org/okapi/blob/7e09346472223dfa6e0ca580e3a4c8bb31450f4a/okapi-core/src/main/java/org/folio/okapi/managers/TenantManager.java",
    "raw_url": "https://github.com/folio-org/okapi/raw/7e09346472223dfa6e0ca580e3a4c8bb31450f4a/okapi-core/src/main/java/org/folio/okapi/managers/TenantManager.java",
    "contents_url": "https://api.github.com/repos/folio-org/okapi/contents/okapi-core/src/main/java/org/folio/okapi/managers/TenantManager.java?ref=7e09346472223dfa6e0ca580e3a4c8bb31450f4a",
    "patch": "@@ -612,11 +612,13 @@ private int handleTimer(Tenant tenant, ModuleDescriptor md,\n       final String path = re.getStaticPath();\n       if (delay > 0 && path != null) {\n         if (seq1 == 0) {\n+          logger.info(\"start seq={} delay={}\", seq, delay);\n           if (!timers.contains(key)) {\n             timers.add(key);\n             waitTimer(tenantId, md, delay, seq);\n           }\n         } else if (seq == seq1) {\n+          logger.info(\"cont seq={} delay={}\", seq, delay);\n           if (discoveryManager.isLeader()) {\n             fireTimer(tenant, md, re, path);\n           }"
  },
  {
    "sha": "c310b246ffb7dde25d81b02a2ee4e7d4685d7acb",
    "filename": "okapi-core/src/main/java/org/folio/okapi/util/Schedule.java",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/folio-org/okapi/blob/7e09346472223dfa6e0ca580e3a4c8bb31450f4a/okapi-core/src/main/java/org/folio/okapi/util/Schedule.java",
    "raw_url": "https://github.com/folio-org/okapi/raw/7e09346472223dfa6e0ca580e3a4c8bb31450f4a/okapi-core/src/main/java/org/folio/okapi/util/Schedule.java",
    "contents_url": "https://api.github.com/repos/folio-org/okapi/contents/okapi-core/src/main/java/org/folio/okapi/util/Schedule.java?ref=7e09346472223dfa6e0ca580e3a4c8bb31450f4a",
    "patch": "@@ -0,0 +1,11 @@\n+package org.folio.okapi.util;\n+\n+import java.time.Duration;\n+import java.time.ZonedDateTime;\n+import java.util.Optional;\n+\n+public interface Schedule {\n+  Optional<Duration> getNextDuration(ZonedDateTime zonedDateTime);\n+\n+  void parseSpec(String spec);\n+}"
  },
  {
    "sha": "ccf2aaf49f1fa426c4eb0b30717d585e9c0e1e0f",
    "filename": "okapi-core/src/main/java/org/folio/okapi/util/ScheduleCronUtils.java",
    "status": "added",
    "additions": 38,
    "deletions": 0,
    "changes": 38,
    "blob_url": "https://github.com/folio-org/okapi/blob/7e09346472223dfa6e0ca580e3a4c8bb31450f4a/okapi-core/src/main/java/org/folio/okapi/util/ScheduleCronUtils.java",
    "raw_url": "https://github.com/folio-org/okapi/raw/7e09346472223dfa6e0ca580e3a4c8bb31450f4a/okapi-core/src/main/java/org/folio/okapi/util/ScheduleCronUtils.java",
    "contents_url": "https://api.github.com/repos/folio-org/okapi/contents/okapi-core/src/main/java/org/folio/okapi/util/ScheduleCronUtils.java?ref=7e09346472223dfa6e0ca580e3a4c8bb31450f4a",
    "patch": "@@ -0,0 +1,38 @@\n+package org.folio.okapi.util;\n+\n+import com.cronutils.model.Cron;\n+import com.cronutils.model.CronType;\n+import com.cronutils.model.definition.CronDefinition;\n+import com.cronutils.model.definition.CronDefinitionBuilder;\n+import com.cronutils.model.time.ExecutionTime;\n+import com.cronutils.parser.CronParser;\n+import java.time.Duration;\n+import java.time.ZonedDateTime;\n+import java.util.Optional;\n+\n+public class ScheduleCronUtils implements Schedule {\n+  private String spec;  // cron-utils returns spec altered, we want to keep it was\n+  private ExecutionTime executionTime;\n+\n+  @Override\n+  public Optional<Duration> getNextDuration(ZonedDateTime zonedDateTime) {\n+    if (executionTime == null) {\n+      return Optional.empty();\n+    }\n+    return executionTime.timeToNextExecution(zonedDateTime);\n+  }\n+\n+  @Override\n+  public void parseSpec(String spec) {\n+    this.spec = spec;\n+    CronDefinition cronDefinition = CronDefinitionBuilder.instanceDefinitionFor(CronType.UNIX);\n+    CronParser parser = new CronParser(cronDefinition);\n+    Cron cron = parser.parse(spec);\n+    executionTime = ExecutionTime.forCron(cron);\n+  }\n+\n+  @Override\n+  public String toString() {\n+    return spec;\n+  }\n+}"
  },
  {
    "sha": "2c3b109bd42d1e421ed55142736d143b6a4b25d8",
    "filename": "okapi-core/src/main/raml/RoutingEntry.json",
    "status": "modified",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/folio-org/okapi/blob/7e09346472223dfa6e0ca580e3a4c8bb31450f4a/okapi-core/src/main/raml/RoutingEntry.json",
    "raw_url": "https://github.com/folio-org/okapi/raw/7e09346472223dfa6e0ca580e3a4c8bb31450f4a/okapi-core/src/main/raml/RoutingEntry.json",
    "contents_url": "https://api.github.com/repos/folio-org/okapi/contents/okapi-core/src/main/raml/RoutingEntry.json?ref=7e09346472223dfa6e0ca580e3a4c8bb31450f4a",
    "patch": "@@ -49,6 +49,16 @@\n       \"description\": \"Delay between calls\",\n       \"type\": \"string\"\n     },\n+    \"schedule\": {\n+      \"description\": \"Timer schedule using cron-utils\",\n+      \"type\": \"object\",\n+      \"properties\": {\n+         \"cron\": {\n+         \"description\": \"crontab specification\",\n+         \"type\": \"string\"\n+        }\n+      }\n+    },\n     \"permissionsRequired\": {\n       \"description\": \"Required permissions for this entry\",\n       \"type\": [\"array\", \"null\"],"
  },
  {
    "sha": "43afe9633d9aa12d046d954c7ecb8a7cb342acde",
    "filename": "okapi-core/src/test/java/org/folio/okapi/ProxyTest.java",
    "status": "modified",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/folio-org/okapi/blob/7e09346472223dfa6e0ca580e3a4c8bb31450f4a/okapi-core/src/test/java/org/folio/okapi/ProxyTest.java",
    "raw_url": "https://github.com/folio-org/okapi/raw/7e09346472223dfa6e0ca580e3a4c8bb31450f4a/okapi-core/src/test/java/org/folio/okapi/ProxyTest.java",
    "contents_url": "https://api.github.com/repos/folio-org/okapi/contents/okapi-core/src/test/java/org/folio/okapi/ProxyTest.java?ref=7e09346472223dfa6e0ca580e3a4c8bb31450f4a",
    "patch": "@@ -2818,6 +2818,12 @@ public void testTimer(TestContext context) {\n       + \"      \\\"unit\\\" : \\\"millisecond\\\",\" + LS\n       + \"      \\\"delay\\\" : \\\"30\\\",\" + LS\n       + \"      \\\"permissionsRequired\\\" : [ ]\" + LS\n+      + \"   }, {\" + LS\n+      + \"      \\\"methods\\\" : [ \\\"GET\\\" ],\" + LS\n+      + \"      \\\"path\\\" : \\\"/timercall/5\\\",\" + LS\n+      + \"      \\\"schedule\\\" : {\" + LS\n+      + \"         \\\"cron\\\" : \\\"1 1 1 1 *\\\"\" + LS\n+      + \"      }\" + LS\n       + \"    } ]\" + LS\n       + \"  }, {\" + LS\n       + \"    \\\"id\\\" : \\\"myint\\\",\" + LS"
  },
  {
    "sha": "57dd9b8f074f915c04770d7063fcd9ee23b2564b",
    "filename": "okapi-core/src/test/java/org/folio/okapi/bean/RoutingEntryTest.java",
    "status": "modified",
    "additions": 31,
    "deletions": 4,
    "changes": 35,
    "blob_url": "https://github.com/folio-org/okapi/blob/7e09346472223dfa6e0ca580e3a4c8bb31450f4a/okapi-core/src/test/java/org/folio/okapi/bean/RoutingEntryTest.java",
    "raw_url": "https://github.com/folio-org/okapi/raw/7e09346472223dfa6e0ca580e3a4c8bb31450f4a/okapi-core/src/test/java/org/folio/okapi/bean/RoutingEntryTest.java",
    "contents_url": "https://api.github.com/repos/folio-org/okapi/contents/okapi-core/src/test/java/org/folio/okapi/bean/RoutingEntryTest.java?ref=7e09346472223dfa6e0ca580e3a4c8bb31450f4a",
    "patch": "@@ -2,15 +2,13 @@\n \n import io.vertx.core.http.HttpMethod;\n import io.vertx.core.json.DecodeException;\n-import org.apache.logging.log4j.Logger;\n-import org.folio.okapi.common.OkapiLogger;\n+import io.vertx.core.json.Json;\n+import org.assertj.core.api.Assertions;\n import org.junit.jupiter.api.Test;\n \n import static org.junit.jupiter.api.Assertions.*;\n \n class RoutingEntryTest {\n-  private final Logger logger = OkapiLogger.get();\n-\n   @Test\n   void testMethods() {\n     RoutingEntry t = new RoutingEntry();\n@@ -287,4 +285,33 @@ void testMatchUriTenant() {\n     t.setPathPattern(\"/{tenantId}/b/{moduleId}\");\n     assertTrue(t.matchUriTenant(\"/diku/b/other\", \"diku\"));\n   }\n+\n+  @Test\n+  void testTimerScheduleEncoding() {\n+    Schedule bean = new Schedule();\n+    Assertions.assertThat(bean.getDelayMilliSeconds()).isEqualTo(0L);\n+    String cron = \"3 2 * * *\";\n+    bean.setCron(cron);\n+    Assertions.assertThat(bean.getDelayMilliSeconds()).isGreaterThan(0L);\n+    String encode = Json.encode(bean);\n+    assertEquals(encode, \"{\\\"cron\\\":\\\"\" + cron + \"\\\"}\");\n+    Schedule bean2 = Json.decodeValue(encode, Schedule.class);\n+    assertEquals(bean2.getCron(), cron);\n+  }\n+\n+  @Test\n+  void testTimerScheduleBadSpecv() {\n+    Assertions.assertThatThrownBy(() ->\n+      Json.decodeValue(\"{\\\"cron\\\":\\\"3 2 x * *\\\"}\", Schedule.class))\n+    .isInstanceOf(DecodeException.class)\n+    .hasMessageContaining(\"Invalid chars: X\");\n+  }\n+\n+  @Test\n+  void testTimerScheduleEmpty() {\n+    RoutingEntry t = new RoutingEntry();\n+    Assertions.assertThat(t.getDelayMilliSeconds()).isEqualTo(0L);\n+    t.setSchedule(new Schedule());\n+    Assertions.assertThat(t.getDelayMilliSeconds()).isEqualTo(0L);\n+  }\n }"
  },
  {
    "sha": "95840b9791e8f06796dbf9c598fa9544300e4bd1",
    "filename": "okapi-core/src/test/java/org/folio/okapi/util/ScheduleTest.java",
    "status": "added",
    "additions": 63,
    "deletions": 0,
    "changes": 63,
    "blob_url": "https://github.com/folio-org/okapi/blob/7e09346472223dfa6e0ca580e3a4c8bb31450f4a/okapi-core/src/test/java/org/folio/okapi/util/ScheduleTest.java",
    "raw_url": "https://github.com/folio-org/okapi/raw/7e09346472223dfa6e0ca580e3a4c8bb31450f4a/okapi-core/src/test/java/org/folio/okapi/util/ScheduleTest.java",
    "contents_url": "https://api.github.com/repos/folio-org/okapi/contents/okapi-core/src/test/java/org/folio/okapi/util/ScheduleTest.java?ref=7e09346472223dfa6e0ca580e3a4c8bb31450f4a",
    "patch": "@@ -0,0 +1,63 @@\n+package org.folio.okapi.util;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.Arguments;\n+import org.junit.jupiter.params.provider.MethodSource;\n+import java.time.Duration;\n+import java.time.LocalDateTime;\n+import java.time.ZoneOffset;\n+import java.time.ZonedDateTime;\n+import java.util.stream.Stream;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+public class ScheduleTest {\n+\n+  @Test\n+  void testEmpty() {\n+    Schedule schedule = new ScheduleCronUtils();\n+    ZonedDateTime parse = ZonedDateTime.parse(\"2020-12-31T23:44:59+01:00[Europe/Paris]\");\n+    assertThat(schedule.getNextDuration(parse)).isEmpty();\n+  }\n+\n+  static Stream<Arguments> testSchedule() {\n+    return Stream.of(\n+        Arguments.of(\"*/15 * * * *\", \"2020-12-31T23:44:59\", \"PT1S\"),\n+        Arguments.of(\"*/15 * * * *\", \"2020-12-31T23:45\", \"PT15M\"),\n+        Arguments.of(\"*/15 * * * *\", \"2020-12-31T23:45:59\", \"PT14M1S\"),\n+        Arguments.of(\"*/15 * * * *\", \"2020-12-31T23:44\", \"PT1M\"),\n+        Arguments.of(\"*/15 * * * *\", \"2020-12-31T23:45\", \"PT15M\"),\n+        Arguments.of(\"*/15 * * * *\", \"2020-12-31T23:45:36\", \"PT14M24S\"),\n+        Arguments.of(\"*/15 * * * *\", \"2020-12-31T23:46\", \"PT14M\"),\n+        Arguments.of(\"3 1,22 * * *\", \"2020-12-31T23:44\", \"PT1H19M\"),\n+        Arguments.of(\"3 1,22 1 * *\", \"2020-12-31T23:44\", \"PT1H19M\"),\n+        Arguments.of(\"3 1,22 5 * *\", \"2020-12-31T23:44\", \"PT97H19M\"),\n+        Arguments.of(\"3 1,22 5 3 *\", \"2020-12-31T23:44\", \"PT1513H19M\"),\n+        Arguments.of(\"3 1,22 5 5 *\", \"2020-12-31T23:44\", \"PT2977H19M\"),\n+        Arguments.of(\"3 1,22 * * fri\", \"2020-12-31T23:44\", \"PT1H19M\"),\n+        Arguments.of(\"3 1,22 * * sat\", \"2020-12-31T23:44\", \"PT25H19M\"),\n+        Arguments.of(\"*/15 * * * mon,fri\", \"2020-12-31T23:44\", \"PT16M\"),\n+        Arguments.of(\"*/15 * * * mon\", \"2020-12-31T23:44\", \"PT72H16M\"),\n+        Arguments.of(\"*/15 * 1 * Mon\", \"2020-12-31T23:44\", \"PT16M\"),\n+        Arguments.of(\"*/15 * 5 * Mon\", \"2020-12-31T23:44\", \"PT72H16M\"),\n+        Arguments.of(\"*/15 * * * Sun\", \"2020-12-31T23:44\", \"PT48H16M\"),\n+        Arguments.of(\"*/15 * * * 0\", \"2020-12-31T23:44\", \"PT48H16M\"),\n+        Arguments.of(\"*/15 * 4 * *\", \"2020-12-31T23:44\", \"PT72H16M\"),\n+        Arguments.of(\"*/15 * * feb *\", \"2020-12-31T23:44\", \"PT744H16M\"),\n+        Arguments.of(\"*/15 * * FEB *\", \"2021-01-31T23:44\", \"PT16M\"),\n+        Arguments.of(\"*/15 * 29 * *\", \"2020-02-26T23:44\", \"PT48H16M\"),\n+        Arguments.of(\"*/15 * 29 * *\", \"2021-02-26T23:44\", \"PT720H16M\")\n+        );\n+  }\n+  @ParameterizedTest\n+  @MethodSource\n+  void testSchedule(String spec, String time, String duration) {\n+    ZonedDateTime parse = ZonedDateTime.of(LocalDateTime.parse(time), ZoneOffset.UTC);\n+    Schedule schedule = new ScheduleCronUtils();\n+    schedule.parseSpec(spec);\n+    assertThat(schedule.toString()).isEqualTo(spec);\n+    assertThat(schedule.getNextDuration(parse).get()).isEqualTo(Duration.parse(duration));\n+  }\n+\n+}"
  },
  {
    "sha": "fabee77f4dc18a8db3a68b9d87fd15b8c74f9fe5",
    "filename": "okapi-test-module/descriptors/ModuleDescriptorTimer-template.json",
    "status": "modified",
    "additions": 16,
    "deletions": 2,
    "changes": 18,
    "blob_url": "https://github.com/folio-org/okapi/blob/7e09346472223dfa6e0ca580e3a4c8bb31450f4a/okapi-test-module/descriptors/ModuleDescriptorTimer-template.json",
    "raw_url": "https://github.com/folio-org/okapi/raw/7e09346472223dfa6e0ca580e3a4c8bb31450f4a/okapi-test-module/descriptors/ModuleDescriptorTimer-template.json",
    "contents_url": "https://api.github.com/repos/folio-org/okapi/contents/okapi-test-module/descriptors/ModuleDescriptorTimer-template.json?ref=7e09346472223dfa6e0ca580e3a4c8bb31450f4a",
    "patch": "@@ -37,9 +37,23 @@\n       \"handlers\": [\n         {\n           \"methods\": [ \"POST\" ],\n-          \"pathPattern\": \"/testb/timer\",\n+          \"pathPattern\": \"/testb/timer/20\",\n           \"unit\": \"second\",\n-          \"delay\": \"5\"\n+          \"delay\": \"20\"\n+        },\n+        {\n+          \"methods\": [ \"POST\" ],\n+          \"pathPattern\": \"/testb/timer/1\",\n+          \"schedule\": {\n+            \"cron\":\"*/1 * * * *\"\n+          }\n+        },\n+        {\n+          \"methods\": [ \"POST\" ],\n+          \"pathPattern\": \"/testb/timer/3\",\n+          \"schedule\": {\n+            \"cron\":\"*/3 * * * *\"\n+          }\n         }\n       ]\n     },"
  },
  {
    "sha": "a3c037697e0f168a450faf4facee615a37ae9893",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/folio-org/okapi/blob/7e09346472223dfa6e0ca580e3a4c8bb31450f4a/pom.xml",
    "raw_url": "https://github.com/folio-org/okapi/raw/7e09346472223dfa6e0ca580e3a4c8bb31450f4a/pom.xml",
    "contents_url": "https://api.github.com/repos/folio-org/okapi/contents/pom.xml?ref=7e09346472223dfa6e0ca580e3a4c8bb31450f4a",
    "patch": "@@ -116,6 +116,11 @@\n         <version>2.0.1</version>\n         <scope>compile</scope>\n       </dependency>\n+      <dependency>\n+        <groupId>com.cronutils</groupId>\n+        <artifactId>cron-utils</artifactId>\n+        <version>9.1.3</version>\n+      </dependency>\n       <dependency>\n         <groupId>org.junit</groupId>\n         <artifactId>junit-bom</artifactId>"
  }
]
