[
  {
    "sha": "35e4b70864f11652ead93bc98664f16e55c36d33",
    "filename": "nexuse2e-core/src/main/java/org/nexuse2e/ConversationStatus.java",
    "status": "added",
    "additions": 28,
    "deletions": 0,
    "changes": 28,
    "blob_url": "https://github.com/solutionsdirekt/NEXUSe2e/blob/1da9c02558c9372ff5ec6333ace57bcd462f8a9b/nexuse2e-core/src/main/java/org/nexuse2e/ConversationStatus.java",
    "raw_url": "https://github.com/solutionsdirekt/NEXUSe2e/raw/1da9c02558c9372ff5ec6333ace57bcd462f8a9b/nexuse2e-core/src/main/java/org/nexuse2e/ConversationStatus.java",
    "contents_url": "https://api.github.com/repos/solutionsdirekt/NEXUSe2e/contents/nexuse2e-core/src/main/java/org/nexuse2e/ConversationStatus.java?ref=1da9c02558c9372ff5ec6333ace57bcd462f8a9b",
    "patch": "@@ -0,0 +1,28 @@\n+package org.nexuse2e;\n+\n+public enum ConversationStatus {\n+    ERROR(-1), UNKNOWN(0), CREATED(1), PROCESSING(2), AWAITING_ACK(3), IDLE(4),\n+    SENDING_ACK(5), ACK_SENT_AWAITING_BACKEND(6), AWAITING_BACKEND(7),\n+    BACKEND_SENT_SENDING_ACK(8), COMPLETED(9);\n+\n+    int ordinal = 0;\n+\n+    ConversationStatus(int ordinal) {\n+        this.ordinal = ordinal;\n+    }\n+\n+    public int getOrdinal() {\n+        return this.ordinal;\n+    }\n+\n+    public static ConversationStatus getByOrdinal(int ordinal) {\n+        if (-1 <= ordinal) {\n+            for (ConversationStatus oneType : ConversationStatus.values()) {\n+                if (oneType.getOrdinal() == ordinal) {\n+                    return oneType;\n+                }\n+            }\n+        }\n+        throw new IllegalArgumentException(\"Parameter must be the ordinal of a valid ConversationStatus!\");\n+    }\n+}"
  },
  {
    "sha": "c1eddd0429500dc285a8541c8a1ab8ccb64e1f19",
    "filename": "nexuse2e-core/src/main/java/org/nexuse2e/controller/TransactionService.java",
    "status": "modified",
    "additions": 6,
    "deletions": 6,
    "changes": 12,
    "blob_url": "https://github.com/solutionsdirekt/NEXUSe2e/blob/1da9c02558c9372ff5ec6333ace57bcd462f8a9b/nexuse2e-core/src/main/java/org/nexuse2e/controller/TransactionService.java",
    "raw_url": "https://github.com/solutionsdirekt/NEXUSe2e/raw/1da9c02558c9372ff5ec6333ace57bcd462f8a9b/nexuse2e-core/src/main/java/org/nexuse2e/controller/TransactionService.java",
    "contents_url": "https://api.github.com/repos/solutionsdirekt/NEXUSe2e/contents/nexuse2e-core/src/main/java/org/nexuse2e/controller/TransactionService.java?ref=1da9c02558c9372ff5ec6333ace57bcd462f8a9b",
    "patch": "@@ -165,23 +165,23 @@ public abstract int getConversationsCount( String status, int nxChoreographyId,\n      * @return\n      * @throws NexusException\n      */\n-    public abstract List<MessagePojo> getMessagesForReport( String status, int nxChoreographyId, int nxPartnerId,\n-            String conversationId, String messageId, String type, Date start, Date end, int itemsPerPage, int page,\n-            int field, boolean ascending ) throws NexusException;\n+    public abstract List<MessagePojo> getMessagesForReport(String status, int nxChoreographyId, int nxPartnerId,\n+                                                           String conversationId, String messageId, Integer type, Date start, Date end, int itemsPerPage, int page,\n+                                                           int field, boolean ascending) throws NexusException;\n \n     /**\n      * @param status\n+     * @param type\n      * @param nxChoreographyId\n      * @param nxPartnerId\n-     * @param nxConversationId\n      * @param messageId\n      * @param startDate\n      * @param endDate\n      * @return\n      * @throws NexusException\n      */\n-    public abstract int getMessagesCount( String status, int nxChoreographyId, int nxPartnerId, String conversationId,\n-            String messageId, Date startDate, Date endDate ) throws NexusException;\n+    public abstract int getMessagesCount(String status, Integer type, int nxChoreographyId, int nxPartnerId, String conversationId,\n+                                         String messageId, Date startDate, Date endDate) throws NexusException;\n \n     /**\n      * @param conversation"
  },
  {
    "sha": "aef8aae3f23af5764e2c51fcc23c93e1f3d3b6e1",
    "filename": "nexuse2e-core/src/main/java/org/nexuse2e/controller/TransactionServiceImpl.java",
    "status": "modified",
    "additions": 8,
    "deletions": 8,
    "changes": 16,
    "blob_url": "https://github.com/solutionsdirekt/NEXUSe2e/blob/1da9c02558c9372ff5ec6333ace57bcd462f8a9b/nexuse2e-core/src/main/java/org/nexuse2e/controller/TransactionServiceImpl.java",
    "raw_url": "https://github.com/solutionsdirekt/NEXUSe2e/raw/1da9c02558c9372ff5ec6333ace57bcd462f8a9b/nexuse2e-core/src/main/java/org/nexuse2e/controller/TransactionServiceImpl.java",
    "contents_url": "https://api.github.com/repos/solutionsdirekt/NEXUSe2e/contents/nexuse2e-core/src/main/java/org/nexuse2e/controller/TransactionServiceImpl.java?ref=1da9c02558c9372ff5ec6333ace57bcd462f8a9b",
    "patch": "@@ -310,23 +310,23 @@ public MessagePojo getMessage( String messageId, boolean isReferencedMessageId )\n     /* (non-Javadoc)\n      * @see org.nexuse2e.controller.TransactionService#getMessagesForReport(java.lang.String, int, int, java.lang.String, java.lang.String, java.lang.String, java.util.Date, java.util.Date, int, int, int, boolean)\n      */\n-    public List<MessagePojo> getMessagesForReport( String status, int nxChoreographyId, int nxPartnerId,\n-            String conversationId, String messageId, String type, Date start, Date end, int itemsPerPage, int page,\n-            int field, boolean ascending ) throws NexusException {\n+    public List<MessagePojo> getMessagesForReport(String status, int nxChoreographyId, int nxPartnerId,\n+                                                  String conversationId, String messageId, Integer type, Date start, Date end, int itemsPerPage, int page,\n+                                                  int field, boolean ascending) throws NexusException {\n \n-        return completeMessages( getTransactionDao().getMessagesForReport(\n+        return completeMessages(getTransactionDao().getMessagesForReport(\n                 status, nxChoreographyId, nxPartnerId, conversationId, messageId,\n-                type, start, end, itemsPerPage, page, field, ascending ) );\n+                type, start, end, itemsPerPage, page, field, ascending));\n     }\n \n     /* (non-Javadoc)\n      * @see org.nexuse2e.controller.TransactionService#getMessagesCount(java.lang.String, int, int, java.lang.String, java.lang.String, java.util.Date, java.util.Date)\n      */\n-    public int getMessagesCount( String status, int nxChoreographyId, int nxPartnerId, String conversationId,\n-            String messageId, Date startDate, Date endDate ) throws NexusException {\n+    public int getMessagesCount(String status, Integer type, int nxChoreographyId, int nxPartnerId, String conversationId,\n+                                String messageId, Date startDate, Date endDate) throws NexusException {\n \n         return getTransactionDao().getMessagesCount(\n-                status, nxChoreographyId, nxPartnerId, conversationId, messageId, startDate, endDate );\n+                status, type, nxChoreographyId, nxPartnerId, conversationId, messageId, startDate, endDate);\n \n     }\n "
  },
  {
    "sha": "815f1e94b20bd553da99af3e0ae7e6cd14699997",
    "filename": "nexuse2e-core/src/main/java/org/nexuse2e/dao/TransactionDAO.java",
    "status": "modified",
    "additions": 8,
    "deletions": 7,
    "changes": 15,
    "blob_url": "https://github.com/solutionsdirekt/NEXUSe2e/blob/1da9c02558c9372ff5ec6333ace57bcd462f8a9b/nexuse2e-core/src/main/java/org/nexuse2e/dao/TransactionDAO.java",
    "raw_url": "https://github.com/solutionsdirekt/NEXUSe2e/raw/1da9c02558c9372ff5ec6333ace57bcd462f8a9b/nexuse2e-core/src/main/java/org/nexuse2e/dao/TransactionDAO.java",
    "contents_url": "https://api.github.com/repos/solutionsdirekt/NEXUSe2e/contents/nexuse2e-core/src/main/java/org/nexuse2e/dao/TransactionDAO.java?ref=1da9c02558c9372ff5ec6333ace57bcd462f8a9b",
    "patch": "@@ -60,17 +60,18 @@\n \n     /**\n      * @param status\n+     * @param type\n      * @param nxChoreographyId\n      * @param nxPartnerId\n-     * @param nxConversationId\n+     * @param conversationId\n      * @param messageId\n      * @param startDate\n      * @param endDate\n      * @return\n      * @throws NexusException\n      */\n-    public abstract int getMessagesCount( String status, int nxChoreographyId, int nxPartnerId, String conversationId,\n-            String messageId, Date startDate, Date endDate ) throws NexusException;\n+    public abstract int getMessagesCount(String status, Integer type, int nxChoreographyId, int nxPartnerId, String conversationId,\n+                                         String messageId, Date startDate, Date endDate) throws NexusException;\n \n \n     public abstract Statistics getStatistics(Date startDate, Date endDate, int idleGracePeriodInMinutes) throws NexusException;\n@@ -83,10 +84,10 @@ public abstract int getMessagesCount( String status, int nxChoreographyId, int n\n     public abstract List<MessagePojo> getActiveMessages() throws NexusException; // getActiveMessages\n \n     /**\n+     * @param nxConversationId\n      * @param status\n      * @param nxChoreographyId\n      * @param nxPartnerId\n-     * @param nxConversationId\n      * @param messageId\n      * @param type\n      * @param start\n@@ -98,9 +99,9 @@ public abstract int getMessagesCount( String status, int nxChoreographyId, int n\n      * @return\n      * @throws NexusException\n      */\n-    public abstract List<MessagePojo> getMessagesForReport( String status, int nxChoreographyId, int nxPartnerId,\n-            String conversationId, String messageId, String type, Date start, Date end, int itemsPerPage, int page,\n-            int field, boolean ascending ) throws NexusException;\n+    public abstract List<MessagePojo> getMessagesForReport(String status, int nxChoreographyId, int nxPartnerId,\n+                                                           String conversationId, String messageId, Integer type, Date start, Date end, int itemsPerPage, int page,\n+                                                           int field, boolean ascending) throws NexusException;\n \n     /**\n      * @param status"
  },
  {
    "sha": "5715a5cf42bb5c4e01698f3fed2c7b96d99bac50",
    "filename": "nexuse2e-core/src/main/java/org/nexuse2e/dao/TransactionDAOImpl.java",
    "status": "modified",
    "additions": 9,
    "deletions": 5,
    "changes": 14,
    "blob_url": "https://github.com/solutionsdirekt/NEXUSe2e/blob/1da9c02558c9372ff5ec6333ace57bcd462f8a9b/nexuse2e-core/src/main/java/org/nexuse2e/dao/TransactionDAOImpl.java",
    "raw_url": "https://github.com/solutionsdirekt/NEXUSe2e/raw/1da9c02558c9372ff5ec6333ace57bcd462f8a9b/nexuse2e-core/src/main/java/org/nexuse2e/dao/TransactionDAOImpl.java",
    "contents_url": "https://api.github.com/repos/solutionsdirekt/NEXUSe2e/contents/nexuse2e-core/src/main/java/org/nexuse2e/dao/TransactionDAOImpl.java?ref=1da9c02558c9372ff5ec6333ace57bcd462f8a9b",
    "patch": "@@ -217,11 +217,11 @@ public MessagePojo getMessageByReferencedMessageId(String messageId) throws Nexu\n     /* (non-Javadoc)\n      * @see org.nexuse2e.dao.TransactionDAO#getMessagesCount(java.lang.String, int, int, java.lang.String, java.lang.String, java.util.Date, java.util.Date)\n      */\n-    public int getMessagesCount(String status, int nxChoreographyId, int nxPartnerId, String conversationId,\n+    public int getMessagesCount(String status, Integer type, int nxChoreographyId, int nxPartnerId, String conversationId,\n                                 String messageId, Date startDate, Date endDate) throws NexusException {\n \n         return getCountThroughSessionFind(getMessagesForReportCriteria(status, nxChoreographyId, nxPartnerId,\n-                conversationId, messageId, null, startDate, endDate, 0, false));\n+                conversationId, messageId, type, startDate, endDate, 0, false));\n     }\n \n     public Statistics getStatistics(Date startDate, Date endDate, int idleGracePeriodInMinutes) throws NexusException {\n@@ -392,7 +392,7 @@ private String buildErrorMessageQuery(Date startDate, Date endDate) {\n      */\n     @SuppressWarnings(\"unchecked\")\n     public List<MessagePojo> getMessagesForReport(String status, int nxChoreographyId, int nxPartnerId,\n-                                                  String conversationId, String messageId, String type, Date start, Date end, int itemsPerPage, int page,\n+                                                  String conversationId, String messageId, Integer type, Date start, Date end, int itemsPerPage, int page,\n                                                   int field, boolean ascending) throws NexusException {\n \n \n@@ -406,7 +406,7 @@ private String buildErrorMessageQuery(Date startDate, Date endDate) {\n                 \"ON nx_conversation.nx_partner_id = nx_partner.nx_partner_id \");\n \n         if (StringUtils.isNotEmpty(status) || nxChoreographyId > 0 || nxPartnerId > 0 || StringUtils.isNotEmpty(conversationId)\n-                || StringUtils.isNotEmpty(messageId) || start != null || end != null) {\n+                || StringUtils.isNotEmpty(messageId) || start != null || end != null || type != null) {\n \n             sqlQuery.append(\" WHERE \");\n             String prefix = \"\";\n@@ -418,6 +418,10 @@ private String buildErrorMessageQuery(Date startDate, Date endDate) {\n                 sqlQuery.append(prefix + \" nx_message.created_date <= :end\");\n                 prefix = \" AND \";\n             }\n+            if (type != null) {\n+                sqlQuery.append(prefix + \" nx_message.type = \" + type);\n+                prefix = \" AND \";\n+            }\n             if (StringUtils.isNotBlank(status)) {\n                 if (status.contains(\",\")) {\n                     sqlQuery.append(prefix + \" nx_message.status in (\" + status + \")\");\n@@ -1055,7 +1059,7 @@ private DetachedCriteria getConversationsForReportCriteria(String status, int nx\n      * @return\n      */\n     private DetachedCriteria getMessagesForReportCriteria(String status, int nxChoreographyId, int nxPartnerId,\n-                                                          String conversationId, String messageId, String type, Date start, Date end, int field, boolean ascending) {\n+                                                          String conversationId, String messageId, Integer type, Date start, Date end, int field, boolean ascending) {\n \n         DetachedCriteria dc = DetachedCriteria.forClass(MessagePojo.class);\n "
  },
  {
    "sha": "f280a8eacdfe9c05fc087784f594a79c225c513a",
    "filename": "nexuse2e-core/src/main/java/org/nexuse2e/integration/info/NEXUSe2eInfoServiceImpl.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/solutionsdirekt/NEXUSe2e/blob/1da9c02558c9372ff5ec6333ace57bcd462f8a9b/nexuse2e-core/src/main/java/org/nexuse2e/integration/info/NEXUSe2eInfoServiceImpl.java",
    "raw_url": "https://github.com/solutionsdirekt/NEXUSe2e/raw/1da9c02558c9372ff5ec6333ace57bcd462f8a9b/nexuse2e-core/src/main/java/org/nexuse2e/integration/info/NEXUSe2eInfoServiceImpl.java",
    "contents_url": "https://api.github.com/repos/solutionsdirekt/NEXUSe2e/contents/nexuse2e-core/src/main/java/org/nexuse2e/integration/info/NEXUSe2eInfoServiceImpl.java?ref=1da9c02558c9372ff5ec6333ace57bcd462f8a9b",
    "patch": "@@ -560,7 +560,7 @@ public int getMessageCount(MessageFilter messageFilter) {\n         try {\n             MessageFilterParams cfp = new MessageFilterParams(messageFilter);\n             count = Engine.getInstance().getTransactionService().getMessagesCount(\n-                    cfp.status, cfp.nxChoreographyId, cfp.nxPartnerId, cfp.conversationId, cfp.messageId, cfp.afterDate, cfp.beforeDate);\n+                    cfp.status, null, cfp.nxChoreographyId, cfp.nxPartnerId, cfp.conversationId, cfp.messageId, cfp.afterDate, cfp.beforeDate);\n         } catch (NexusException nex) {\n             nex.printStackTrace();\n         }"
  },
  {
    "sha": "da1b8b2920b9503e72740f11e37486597d594659",
    "filename": "nexuse2e-core/src/main/java/org/nexuse2e/reporting/StatisticsConversation.java",
    "status": "modified",
    "additions": 89,
    "deletions": 6,
    "changes": 95,
    "blob_url": "https://github.com/solutionsdirekt/NEXUSe2e/blob/1da9c02558c9372ff5ec6333ace57bcd462f8a9b/nexuse2e-core/src/main/java/org/nexuse2e/reporting/StatisticsConversation.java",
    "raw_url": "https://github.com/solutionsdirekt/NEXUSe2e/raw/1da9c02558c9372ff5ec6333ace57bcd462f8a9b/nexuse2e-core/src/main/java/org/nexuse2e/reporting/StatisticsConversation.java",
    "contents_url": "https://api.github.com/repos/solutionsdirekt/NEXUSe2e/contents/nexuse2e-core/src/main/java/org/nexuse2e/reporting/StatisticsConversation.java?ref=1da9c02558c9372ff5ec6333ace57bcd462f8a9b",
    "patch": "@@ -1,4 +1,4 @@\n-/**\n+/*\n  *  NEXUSe2e Business Messaging Open Source\n  *  Copyright 2000-2021, direkt gruppe GmbH\n  *\n@@ -18,15 +18,23 @@\n  *  02110-1301 USA, or see the FSF site: http://www.fsf.org.\n  */\n package org.nexuse2e.reporting;\n+import org.nexuse2e.ConversationStatus;\n+import org.nexuse2e.pojo.ConversationPojo;\n+import org.nexuse2e.util.DateUtil;\n \n import java.util.Date;\n \n public class StatisticsConversation {\n-    private final String choreographyId;\n-    private final String conversationId;\n-    private final int nxConversationId;\n-    private final String partnerId;\n-    private final Date modifiedDate;\n+    private String choreographyId;\n+    private String conversationId;\n+    private int nxConversationId;\n+    private String partnerId;\n+    private Date modifiedDate;\n+    private Date createdDate;\n+    private ConversationStatus status;\n+    private String currentAction;\n+    private Date endDate;\n+    private String turnAroundTime;\n \n     public StatisticsConversation(Object[] record) {\n         this.choreographyId = (String) record[5];\n@@ -36,23 +44,98 @@ public StatisticsConversation(Object[] record) {\n         this.modifiedDate = (Date) record[2];\n     }\n \n+    public StatisticsConversation(ConversationPojo conversation) {\n+        this.choreographyId = conversation.getChoreography().getName();\n+        this.conversationId = conversation.getConversationId();\n+        this.nxConversationId = conversation.getNxConversationId();\n+        this.partnerId = conversation.getPartner().getPartnerId();\n+        this.createdDate = conversation.getCreatedDate();\n+        this.status = ConversationStatus.getByOrdinal(conversation.getStatus());\n+        this.currentAction = conversation.getCurrentAction().getName();\n+        if(this.endDate == null) {\n+            this.turnAroundTime = \"Not terminated\";\n+        } else {\n+            this.turnAroundTime = DateUtil.getDiffTimeRounded(this.createdDate, this.endDate);\n+        }\n+    }\n+\n     public String getChoreographyId() {\n         return choreographyId;\n     }\n \n+    public void setChoreographyId(String choreographyId) {\n+        this.choreographyId = choreographyId;\n+    }\n+\n     public String getConversationId() {\n         return conversationId;\n     }\n \n+    public void setConversationId(String conversationId) {\n+        this.conversationId = conversationId;\n+    }\n+\n     public int getNxConversationId() {\n         return nxConversationId;\n     }\n \n+    public void setNxConversationId(int nxConversationId) {\n+        this.nxConversationId = nxConversationId;\n+    }\n+\n     public String getPartnerId() {\n         return partnerId;\n     }\n \n+    public void setPartnerId(String partnerId) {\n+        this.partnerId = partnerId;\n+    }\n+\n     public Date getModifiedDate() {\n         return modifiedDate;\n     }\n+\n+    public void setModifiedDate(Date modifiedDate) {\n+        this.modifiedDate = modifiedDate;\n+    }\n+\n+    public Date getCreatedDate() {\n+        return createdDate;\n+    }\n+\n+    public void setCreatedDate(Date createdDate) {\n+        this.createdDate = createdDate;\n+    }\n+\n+    public ConversationStatus getStatus() {\n+        return status;\n+    }\n+\n+    public void setStatus(ConversationStatus status) {\n+        this.status = status;\n+    }\n+\n+    public String getCurrentAction() {\n+        return currentAction;\n+    }\n+\n+    public void setCurrentAction(String currentAction) {\n+        this.currentAction = currentAction;\n+    }\n+\n+    public Date getEndDate() {\n+        return endDate;\n+    }\n+\n+    public void setEndDate(Date endDate) {\n+        this.endDate = endDate;\n+    }\n+\n+    public String getTurnAroundTime() {\n+        return turnAroundTime;\n+    }\n+\n+    public void setTurnAroundTime(String turnAroundTime) {\n+        this.turnAroundTime = turnAroundTime;\n+    }\n }"
  },
  {
    "sha": "baad58aa4bc25c56fcdf9c54c75e072bb7047299",
    "filename": "nexuse2e-core/src/main/java/org/nexuse2e/reporting/StatisticsMessage.java",
    "status": "modified",
    "additions": 34,
    "deletions": 0,
    "changes": 34,
    "blob_url": "https://github.com/solutionsdirekt/NEXUSe2e/blob/1da9c02558c9372ff5ec6333ace57bcd462f8a9b/nexuse2e-core/src/main/java/org/nexuse2e/reporting/StatisticsMessage.java",
    "raw_url": "https://github.com/solutionsdirekt/NEXUSe2e/raw/1da9c02558c9372ff5ec6333ace57bcd462f8a9b/nexuse2e-core/src/main/java/org/nexuse2e/reporting/StatisticsMessage.java",
    "contents_url": "https://api.github.com/repos/solutionsdirekt/NEXUSe2e/contents/nexuse2e-core/src/main/java/org/nexuse2e/reporting/StatisticsMessage.java?ref=1da9c02558c9372ff5ec6333ace57bcd462f8a9b",
    "patch": "@@ -21,6 +21,7 @@\n \n import org.nexuse2e.MessageStatus;\n import org.nexuse2e.pojo.MessagePojo;\n+import org.nexuse2e.util.DateUtil;\n \n import java.util.Date;\n \n@@ -37,6 +38,9 @@\n     private Integer nxMessageId;\n     private Integer nxConversationId;\n     private String partnerId;\n+    private String backendStatus;\n+    private Date endDate;\n+    private String turnAroundTime;\n \n     public StatisticsMessage(Object[] record) {\n         messageId = (String) record[0];\n@@ -62,6 +66,12 @@ public StatisticsMessage(MessagePojo message) {\n         nxMessageId = message.getNxMessageId();\n         nxConversationId = message.getConversation().getNxConversationId();\n         partnerId = message.getParticipant().getPartner().getPartnerId();\n+        backendStatus = message.getBackendStatusName();\n+        if(endDate == null) {\n+            turnAroundTime = \"Not terminated\";\n+        } else {\n+            turnAroundTime = DateUtil.getDiffTimeRounded(createdDate, endDate);\n+        }\n     }\n \n     public String getMessageId() {\n@@ -151,4 +161,28 @@ public String getPartnerId() {\n     public void setPartnerId(String partnerId) {\n         this.partnerId = partnerId;\n     }\n+\n+    public String getBackendStatus() {\n+        return backendStatus;\n+    }\n+\n+    public void setBackendStatus(String backendStatus) {\n+        this.backendStatus = backendStatus;\n+    }\n+\n+    public Date getEndDate() {\n+        return endDate;\n+    }\n+\n+    public void setEndDate(Date endDate) {\n+        this.endDate = endDate;\n+    }\n+\n+    public String getTurnAroundTime() {\n+        return turnAroundTime;\n+    }\n+\n+    public void setTurnAroundTime(String turnAroundTime) {\n+        this.turnAroundTime = turnAroundTime;\n+    }\n }"
  },
  {
    "sha": "88faa45fe9945b50f04c2a85bf6ae3af33315425",
    "filename": "nexuse2e-core/src/main/java/org/nexuse2e/ui/action/reporting/ProcessConversationReportAction.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/solutionsdirekt/NEXUSe2e/blob/1da9c02558c9372ff5ec6333ace57bcd462f8a9b/nexuse2e-core/src/main/java/org/nexuse2e/ui/action/reporting/ProcessConversationReportAction.java",
    "raw_url": "https://github.com/solutionsdirekt/NEXUSe2e/raw/1da9c02558c9372ff5ec6333ace57bcd462f8a9b/nexuse2e-core/src/main/java/org/nexuse2e/ui/action/reporting/ProcessConversationReportAction.java",
    "contents_url": "https://api.github.com/repos/solutionsdirekt/NEXUSe2e/contents/nexuse2e-core/src/main/java/org/nexuse2e/ui/action/reporting/ProcessConversationReportAction.java?ref=1da9c02558c9372ff5ec6333ace57bcd462f8a9b",
    "patch": "@@ -254,7 +254,7 @@ public ActionForward executeNexusE2EAction(ActionMapping actionMapping, ActionFo\n         if (searchFor != null && searchFor.equals(\"message\")) {\n \n             items = Engine.getInstance().getTransactionService()\n-                .getMessagesCount(status, nxChoreographyId, nxPartnerId, conversationId, messageId, getStartDate(form), getEndDate(form));\n+                    .getMessagesCount(status, null, nxChoreographyId, nxPartnerId, conversationId, messageId, getStartDate(form), getEndDate(form));\n \n             form.setAllItemsCount(items);\n             List<MessagePojo> reportMessages = null;"
  },
  {
    "sha": "664545e82af54a4247cd3e67c59f42f8de0110c5",
    "filename": "nexuse2e-core/src/main/java/org/nexuse2e/ui2/rest/TransactionReportingHandler.java",
    "status": "modified",
    "additions": 125,
    "deletions": 11,
    "changes": 136,
    "blob_url": "https://github.com/solutionsdirekt/NEXUSe2e/blob/1da9c02558c9372ff5ec6333ace57bcd462f8a9b/nexuse2e-core/src/main/java/org/nexuse2e/ui2/rest/TransactionReportingHandler.java",
    "raw_url": "https://github.com/solutionsdirekt/NEXUSe2e/raw/1da9c02558c9372ff5ec6333ace57bcd462f8a9b/nexuse2e-core/src/main/java/org/nexuse2e/ui2/rest/TransactionReportingHandler.java",
    "contents_url": "https://api.github.com/repos/solutionsdirekt/NEXUSe2e/contents/nexuse2e-core/src/main/java/org/nexuse2e/ui2/rest/TransactionReportingHandler.java?ref=1da9c02558c9372ff5ec6333ace57bcd462f8a9b",
    "patch": "@@ -2,9 +2,15 @@\n \n import com.google.gson.Gson;\n import com.google.gson.GsonBuilder;\n+import org.apache.commons.lang.StringUtils;\n+import org.apache.commons.lang.math.NumberUtils;\n import org.nexuse2e.Engine;\n+import org.nexuse2e.MessageStatus;\n import org.nexuse2e.dao.TransactionDAO;\n+import org.nexuse2e.messaging.Constants;\n+import org.nexuse2e.pojo.ConversationPojo;\n import org.nexuse2e.pojo.MessagePojo;\n+import org.nexuse2e.reporting.StatisticsConversation;\n import org.nexuse2e.reporting.StatisticsMessage;\n import org.nexuse2e.util.DateWithTimezoneSerializer;\n \n@@ -17,23 +23,131 @@\n import static org.nexuse2e.util.DateUtil.getCurrentDateMinusWeeks;\n \n public class TransactionReportingHandler implements Handler {\n+    // TODO get date range from filter\n+    public static final Date TWO_WEEKS_AGO = getCurrentDateMinusWeeks(2);\n+\n     @Override\n     public boolean canHandle(String path, String method) {\n-        return (\"GET\".equalsIgnoreCase(method) && \"/messages\".equalsIgnoreCase(path));\n+        return (\"GET\".equalsIgnoreCase(method) && \"/messages\".equalsIgnoreCase(path)) ||\n+                (\"GET\".equalsIgnoreCase(method) && \"/messages-count\".equalsIgnoreCase(path)) ||\n+                (\"GET\".equalsIgnoreCase(method) && \"/conversations\".equalsIgnoreCase(path)) ||\n+                (\"GET\".equalsIgnoreCase(method) && \"/conversations-count\".equalsIgnoreCase(path));\n     }\n \n     @Override\n     public void handle(HttpServletRequest request, HttpServletResponse response) throws Exception {\n-        // TODO get date range from filter\n-        List<MessagePojo> reportMessages = Engine.getInstance().getTransactionService()\n-                .getMessagesForReport(null, 0, 0, null, null, null,\n-                        getCurrentDateMinusWeeks(2), new Date(), 20, 0, TransactionDAO.SORT_CREATED, false);\n-        List<StatisticsMessage> messages = new LinkedList<>();\n-        for (MessagePojo messagePojo : reportMessages) {\n-            messages.add(new StatisticsMessage(messagePojo));\n+        String path = request.getPathInfo();\n+        if (path != null) {\n+            switch (StringUtils.lowerCase(path)) {\n+                case \"/messages\":\n+                    this.getMessages(request, response);\n+                    break;\n+                case \"/messages-count\":\n+                    this.getMessagesCount(request, response);\n+                    break;\n+                case \"/conversations\":\n+                    this.getConversations(request, response);\n+                    break;\n+                case \"/conversations-count\":\n+                    this.getConversationsCount(response);\n+                    break;\n+            }\n+        }\n+    }\n+\n+    private void getMessagesCount(HttpServletRequest request, HttpServletResponse response) throws Exception {\n+        String status = request.getParameter(\"status\");\n+        String type = request.getParameter(\"type\");\n+        long messagesCount = Engine.getInstance().getTransactionService().getMessagesCount(\n+                getStatusNumberFromName(status),\n+                getMessageTypeFromName(type),\n+                0, 0, null, null,\n+                TWO_WEEKS_AGO,\n+                new Date());\n+        String message = new Gson().toJson(messagesCount);\n+        response.getOutputStream().print(message);\n+    }\n+\n+    private String getStatusNumberFromName(String statusName) {\n+        try {\n+            return String.valueOf(MessageStatus.valueOf(statusName).getOrdinal());\n+        } catch (Exception e) {\n+            return null;\n+        }\n+    }\n+\n+    private Integer getMessageTypeFromName(String typeName) {\n+        if (typeName != null) {\n+            switch (typeName) {\n+                case \"ACKNOWLEDGEMENT\":\n+                    return Constants.INT_MESSAGE_TYPE_ACK;\n+                case \"NORMAL\":\n+                    return Constants.INT_MESSAGE_TYPE_NORMAL;\n+                case \"ERROR\":\n+                    return Constants.INT_MESSAGE_TYPE_ERROR;\n+            }\n+        }\n+        return null;\n+    }\n+\n+    private void getMessages(HttpServletRequest request, HttpServletResponse response) throws Exception {\n+        String pageIndex = request.getParameter(\"pageIndex\");\n+        String itemsPerPage = request.getParameter(\"itemsPerPage\");\n+        String status = request.getParameter(\"status\");\n+        String type = request.getParameter(\"type\");\n+        if (NumberUtils.isNumber(pageIndex) && NumberUtils.isNumber(itemsPerPage)) {\n+            List<MessagePojo> reportMessages = Engine.getInstance().getTransactionService().getMessagesForReport(\n+                    getStatusNumberFromName(status),\n+                    0, 0, null, null,\n+                    getMessageTypeFromName(type),\n+                    TWO_WEEKS_AGO,\n+                    new Date(),\n+                    Integer.parseInt(itemsPerPage),\n+                    Integer.parseInt(pageIndex),\n+                    TransactionDAO.SORT_CREATED,\n+                    false);\n+\n+            List<StatisticsMessage> messages = new LinkedList<>();\n+            for (MessagePojo messagePojo : reportMessages) {\n+                messages.add(new StatisticsMessage(messagePojo));\n+            }\n+\n+            Gson gson = new GsonBuilder().registerTypeAdapter(Date.class, new DateWithTimezoneSerializer()).create();\n+            String messageJson = gson.toJson(messages);\n+            response.getOutputStream().print(messageJson);\n+        } else {\n+            response.sendError(HttpServletResponse.SC_BAD_REQUEST, \"Required parameters: pageIndex and itemsPerPage\");\n+        }\n+    }\n+\n+    private void getConversationsCount(HttpServletResponse response) throws Exception {\n+        long conversationsCount = Engine.getInstance().getTransactionService().getConversationsCount(TWO_WEEKS_AGO, new Date());\n+        String message = new Gson().toJson(conversationsCount);\n+        response.getOutputStream().print(message);\n+    }\n+\n+    private void getConversations(HttpServletRequest request, HttpServletResponse response) throws Exception {\n+        String pageIndex = request.getParameter(\"pageIndex\");\n+        String itemsPerPage = request.getParameter(\"itemsPerPage\");\n+        if (NumberUtils.isNumber(pageIndex) && NumberUtils.isNumber(itemsPerPage)) {\n+            List<ConversationPojo> reportConversations = Engine.getInstance().getTransactionService().getConversationsForReport(\n+                    null, 0, 0, null,\n+                    TWO_WEEKS_AGO,\n+                    new Date(),\n+                    Integer.parseInt(itemsPerPage),\n+                    Integer.parseInt(pageIndex),\n+                    TransactionDAO.SORT_CREATED,\n+                    false);\n+            List<StatisticsConversation> conversations = new LinkedList<>();\n+            for (ConversationPojo conversationPojo : reportConversations) {\n+                conversations.add(new StatisticsConversation(conversationPojo));\n+            }\n+\n+            Gson gson = new GsonBuilder().registerTypeAdapter(Date.class, new DateWithTimezoneSerializer()).create();\n+            String conversationJson = gson.toJson(conversations);\n+            response.getOutputStream().print(conversationJson);\n+        } else {\n+            response.sendError(HttpServletResponse.SC_BAD_REQUEST, \"Required parameters: pageIndex and itemsPerPage\");\n         }\n-        Gson gson = new GsonBuilder().registerTypeAdapter(Date.class, new DateWithTimezoneSerializer()).create();\n-        String messageJson = gson.toJson(messages);\n-        response.getOutputStream().print(messageJson);\n     }\n }"
  },
  {
    "sha": "a79893f477b0574fe77bcc575c9b97d5a006a236",
    "filename": "nexuse2e-webapp/src/main/frontend/src/app/app.module.ts",
    "status": "modified",
    "additions": 33,
    "deletions": 5,
    "changes": 38,
    "blob_url": "https://github.com/solutionsdirekt/NEXUSe2e/blob/1da9c02558c9372ff5ec6333ace57bcd462f8a9b/nexuse2e-webapp/src/main/frontend/src/app/app.module.ts",
    "raw_url": "https://github.com/solutionsdirekt/NEXUSe2e/raw/1da9c02558c9372ff5ec6333ace57bcd462f8a9b/nexuse2e-webapp/src/main/frontend/src/app/app.module.ts",
    "contents_url": "https://api.github.com/repos/solutionsdirekt/NEXUSe2e/contents/nexuse2e-webapp/src/main/frontend/src/app/app.module.ts?ref=1da9c02558c9372ff5ec6333ace57bcd462f8a9b",
    "patch": "@@ -1,6 +1,6 @@\n import { BrowserModule } from \"@angular/platform-browser\";\n import { NgModule } from \"@angular/core\";\n-import { HttpClient, HttpClientModule } from \"@angular/common/http\";\n+import { HTTP_INTERCEPTORS, HttpClient, HttpClientModule, } from \"@angular/common/http\";\n import { RouterModule, Routes } from \"@angular/router\";\n \n import { AppComponent } from \"./app.component\";\n@@ -26,9 +26,20 @@ import { MenuItemComponent } from \"./menu-item/menu-item.component\";\n import { MessageListComponent } from \"./message-list/message-list.component\";\n import { ConversationListComponent } from \"./conversation-list/conversation-list.component\";\n import { MatTabsModule } from \"@angular/material/tabs\";\n-import { MessageCardComponent } from './message-card/message-card.component';\n+import { MessageCardComponent } from \"./message-card/message-card.component\";\n import { MatCardModule } from \"@angular/material/card\";\n import { MatCheckboxModule } from \"@angular/material/checkbox\";\n+import { MatPaginatorIntl, MatPaginatorModule, } from \"@angular/material/paginator\";\n+import { AuthInterceptor } from \"./auth-interceptor\";\n+import { CustomPaginatorFormatting } from \"./custom-paginator-formatting\";\n+import { PaginatedListComponent } from \"./paginated-list/paginated-list.component\";\n+import { ConversationCardComponent } from \"./conversation-card/conversation-card.component\";\n+import { FilterPanelComponent } from './filter-panel/filter-panel.component';\n+import { MatSelectModule } from \"@angular/material/select\";\n+import { SelectFilterComponent } from './select-filter/select-filter.component';\n+import { ConversationTableComponent } from \"./conversation-table/conversation-table.component\";\n+import { MatTableModule } from \"@angular/material/table\";\n+import { MessageTableComponent } from \"./message-table/message-table.component\";\n \n const routes: Routes = [\n   { path: \"\", redirectTo: \"/dashboard\", pathMatch: \"full\" },\n@@ -110,6 +121,12 @@ export function HttpLoaderFactory(http: HttpClient) {\n     MessageListComponent,\n     ConversationListComponent,\n     MessageCardComponent,\n+    PaginatedListComponent,\n+    ConversationCardComponent,\n+    FilterPanelComponent,\n+    SelectFilterComponent,\n+    ConversationTableComponent,\n+    MessageTableComponent,\n   ],\n   imports: [\n     BrowserModule,\n@@ -130,7 +147,10 @@ export function HttpLoaderFactory(http: HttpClient) {\n     MatIconModule,\n     MatTabsModule,\n     MatCardModule,\n-    MatCheckboxModule\n+    MatTableModule,\n+    MatCheckboxModule,\n+    MatPaginatorModule,\n+    MatSelectModule\n   ],\n   providers: [\n     {\n@@ -139,8 +159,16 @@ export function HttpLoaderFactory(http: HttpClient) {\n         appearance: \"outline\",\n       },\n     },\n+    {\n+      provide: HTTP_INTERCEPTORS,\n+      useClass: AuthInterceptor,\n+      multi: true\n+    },\n+    {\n+      provide: MatPaginatorIntl,\n+      useClass: CustomPaginatorFormatting\n+    }\n   ],\n   bootstrap: [AppComponent],\n })\n-export class AppModule {\n-}\n+export class AppModule {}"
  },
  {
    "sha": "abdb7b5f2bf79dc5109603d9c5a15870f9fd2e5c",
    "filename": "nexuse2e-webapp/src/main/frontend/src/app/auth-interceptor.ts",
    "status": "added",
    "additions": 23,
    "deletions": 0,
    "changes": 23,
    "blob_url": "https://github.com/solutionsdirekt/NEXUSe2e/blob/1da9c02558c9372ff5ec6333ace57bcd462f8a9b/nexuse2e-webapp/src/main/frontend/src/app/auth-interceptor.ts",
    "raw_url": "https://github.com/solutionsdirekt/NEXUSe2e/raw/1da9c02558c9372ff5ec6333ace57bcd462f8a9b/nexuse2e-webapp/src/main/frontend/src/app/auth-interceptor.ts",
    "contents_url": "https://api.github.com/repos/solutionsdirekt/NEXUSe2e/contents/nexuse2e-webapp/src/main/frontend/src/app/auth-interceptor.ts?ref=1da9c02558c9372ff5ec6333ace57bcd462f8a9b",
    "patch": "@@ -0,0 +1,23 @@\n+import { Injectable } from '@angular/core';\n+import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\n+import { Observable, throwError } from \"rxjs\";\n+import { catchError } from \"rxjs/operators\";\n+import { Router } from \"@angular/router\";\n+\n+@Injectable()\n+export class AuthInterceptor implements HttpInterceptor {\n+  public constructor(private router: Router) {\n+  }\n+\n+  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n+    return next.handle(request).pipe(\n+      catchError((response: HttpErrorResponse) => {\n+          if (response.status === 401 && !request.url.endsWith(\"logged-in\")) {\n+            this.router.navigate([\"/login\"]);\n+          }\n+          return throwError(response);\n+        }\n+      )\n+    );\n+  }\n+}"
  },
  {
    "sha": "dac88ae4f5af89dd86c3a76c879359e295e17db2",
    "filename": "nexuse2e-webapp/src/main/frontend/src/app/conversation-card/conversation-card.component.html",
    "status": "added",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/solutionsdirekt/NEXUSe2e/blob/1da9c02558c9372ff5ec6333ace57bcd462f8a9b/nexuse2e-webapp/src/main/frontend/src/app/conversation-card/conversation-card.component.html",
    "raw_url": "https://github.com/solutionsdirekt/NEXUSe2e/raw/1da9c02558c9372ff5ec6333ace57bcd462f8a9b/nexuse2e-webapp/src/main/frontend/src/app/conversation-card/conversation-card.component.html",
    "contents_url": "https://api.github.com/repos/solutionsdirekt/NEXUSe2e/contents/nexuse2e-webapp/src/main/frontend/src/app/conversation-card/conversation-card.component.html?ref=1da9c02558c9372ff5ec6333ace57bcd462f8a9b",
    "patch": "@@ -0,0 +1,22 @@\n+<mat-card [class]=\"conversation.status | lowercase\" class=\"conversationStatusLeftBorderColor\">\n+  <div class=\"card-header\">\n+    <mat-checkbox></mat-checkbox>\n+    <a [routerLink]=\"'' + conversation.nxConversationId\">{{ conversation.conversationId }}</a>\n+  </div>\n+  <table>\n+    <tr>\n+      <td class=\"label\">{{ \"labels.choreographyId\" | translate }}</td>\n+      <td>{{ conversation.choreographyId }}</td>\n+    </tr>\n+    <tr>\n+      <td class=\"label\">{{ \"labels.participantId\" | translate }}</td>\n+      <td>{{ conversation.partnerId }}</td>\n+    </tr>\n+    <tr>\n+      <td class=\"label\">{{ \"labels.createdDate\" | translate }}</td>\n+      <td>\n+        {{ conversation.createdDate }}\n+      </td>\n+    </tr>\n+  </table>\n+</mat-card>"
  },
  {
    "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
    "filename": "nexuse2e-webapp/src/main/frontend/src/app/conversation-card/conversation-card.component.scss",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/solutionsdirekt/NEXUSe2e/blob/1da9c02558c9372ff5ec6333ace57bcd462f8a9b/nexuse2e-webapp/src/main/frontend/src/app/conversation-card/conversation-card.component.scss",
    "raw_url": "https://github.com/solutionsdirekt/NEXUSe2e/raw/1da9c02558c9372ff5ec6333ace57bcd462f8a9b/nexuse2e-webapp/src/main/frontend/src/app/conversation-card/conversation-card.component.scss",
    "contents_url": "https://api.github.com/repos/solutionsdirekt/NEXUSe2e/contents/nexuse2e-webapp/src/main/frontend/src/app/conversation-card/conversation-card.component.scss?ref=1da9c02558c9372ff5ec6333ace57bcd462f8a9b"
  },
  {
    "sha": "056bcf56c72f72349f6231c396c8c66566707173",
    "filename": "nexuse2e-webapp/src/main/frontend/src/app/conversation-card/conversation-card.component.spec.ts",
    "status": "added",
    "additions": 59,
    "deletions": 0,
    "changes": 59,
    "blob_url": "https://github.com/solutionsdirekt/NEXUSe2e/blob/1da9c02558c9372ff5ec6333ace57bcd462f8a9b/nexuse2e-webapp/src/main/frontend/src/app/conversation-card/conversation-card.component.spec.ts",
    "raw_url": "https://github.com/solutionsdirekt/NEXUSe2e/raw/1da9c02558c9372ff5ec6333ace57bcd462f8a9b/nexuse2e-webapp/src/main/frontend/src/app/conversation-card/conversation-card.component.spec.ts",
    "contents_url": "https://api.github.com/repos/solutionsdirekt/NEXUSe2e/contents/nexuse2e-webapp/src/main/frontend/src/app/conversation-card/conversation-card.component.spec.ts?ref=1da9c02558c9372ff5ec6333ace57bcd462f8a9b",
    "patch": "@@ -0,0 +1,59 @@\n+import { ComponentFixture, TestBed } from \"@angular/core/testing\";\n+\n+import { ConversationCardComponent } from \"./conversation-card.component\";\n+import { RouterTestingModule } from \"@angular/router/testing\";\n+import { TranslateModule } from \"@ngx-translate/core\";\n+import { MatCheckboxModule } from \"@angular/material/checkbox\";\n+import { By } from \"@angular/platform-browser\";\n+\n+describe(\"ConversationCardComponent\", () => {\n+  let component: ConversationCardComponent;\n+  let fixture: ComponentFixture<ConversationCardComponent>;\n+\n+  beforeEach(async () => {\n+    await TestBed.configureTestingModule({\n+      imports: [\n+        RouterTestingModule,\n+        TranslateModule.forRoot(),\n+        MatCheckboxModule,\n+      ],\n+      declarations: [ConversationCardComponent],\n+    }).compileComponents();\n+  });\n+\n+  beforeEach(() => {\n+    fixture = TestBed.createComponent(ConversationCardComponent);\n+    component = fixture.componentInstance;\n+\n+    component.conversation = {\n+      choreographyId: \"GenericFile\",\n+      conversationId: \"sdasdad-sadsadasda-asdsadada\",\n+      nxConversationId: 12,\n+      partnerId: \"NexusFriend\",\n+      createdDate: \"03-02-2018 15:07:34 GMT\",\n+      status: \"Sent\",\n+      currentAction: \"SendFile\",\n+      turnAroundTime: \"Not terminated\",\n+    };\n+    fixture.detectChanges();\n+  });\n+\n+  it(\"should create\", () => {\n+    expect(component).toBeTruthy();\n+  });\n+\n+  it(\"should have a checkbox\", () => {\n+    const checkbox = fixture.nativeElement.querySelector(\n+      \"input[type='checkbox']\"\n+    );\n+    expect(checkbox).toBeTruthy();\n+  });\n+\n+  it(\"should have a link to the conversation detail page\", () => {\n+    const linkToConversation = fixture.debugElement.query(\n+      By.css(\"a[href*='12']\")\n+    );\n+    expect(linkToConversation).toBeTruthy();\n+    expect(linkToConversation.nativeElement.textContent).toBeTruthy();\n+  });\n+});"
  },
  {
    "sha": "c4963e56e23079ad35e3fa13f905362fd1f92555",
    "filename": "nexuse2e-webapp/src/main/frontend/src/app/conversation-card/conversation-card.component.ts",
    "status": "added",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/solutionsdirekt/NEXUSe2e/blob/1da9c02558c9372ff5ec6333ace57bcd462f8a9b/nexuse2e-webapp/src/main/frontend/src/app/conversation-card/conversation-card.component.ts",
    "raw_url": "https://github.com/solutionsdirekt/NEXUSe2e/raw/1da9c02558c9372ff5ec6333ace57bcd462f8a9b/nexuse2e-webapp/src/main/frontend/src/app/conversation-card/conversation-card.component.ts",
    "contents_url": "https://api.github.com/repos/solutionsdirekt/NEXUSe2e/contents/nexuse2e-webapp/src/main/frontend/src/app/conversation-card/conversation-card.component.ts?ref=1da9c02558c9372ff5ec6333ace57bcd462f8a9b",
    "patch": "@@ -0,0 +1,15 @@\n+import { Component, Input, OnInit } from \"@angular/core\";\n+import { Conversation } from \"../types\";\n+\n+@Component({\n+  selector: \"app-conversation-card\",\n+  templateUrl: \"./conversation-card.component.html\",\n+  styleUrls: [\"./conversation-card.component.scss\"],\n+})\n+export class ConversationCardComponent implements OnInit {\n+  @Input() conversation!: Conversation;\n+\n+  constructor() {}\n+\n+  ngOnInit(): void {}\n+}"
  },
  {
    "sha": "d0216ed3b3053a76da86926d90542fc6270855dc",
    "filename": "nexuse2e-webapp/src/main/frontend/src/app/conversation-list/conversation-list.component.html",
    "status": "modified",
    "additions": 7,
    "deletions": 1,
    "changes": 8,
    "blob_url": "https://github.com/solutionsdirekt/NEXUSe2e/blob/1da9c02558c9372ff5ec6333ace57bcd462f8a9b/nexuse2e-webapp/src/main/frontend/src/app/conversation-list/conversation-list.component.html",
    "raw_url": "https://github.com/solutionsdirekt/NEXUSe2e/raw/1da9c02558c9372ff5ec6333ace57bcd462f8a9b/nexuse2e-webapp/src/main/frontend/src/app/conversation-list/conversation-list.component.html",
    "contents_url": "https://api.github.com/repos/solutionsdirekt/NEXUSe2e/contents/nexuse2e-webapp/src/main/frontend/src/app/conversation-list/conversation-list.component.html?ref=1da9c02558c9372ff5ec6333ace57bcd462f8a9b",
    "patch": "@@ -1 +1,7 @@\n-<p>conversation-list works!</p>\n+<app-paginated-list\n+  [totalItemCount]=\"totalConversationCount\"\n+  [items]=\"conversations\"\n+  itemType=\"conversation\"\n+  (triggerReload)=\"loadConversations($event.pageIndex, $event.pageSize)\"\n+>\n+</app-paginated-list>"
  },
  {
    "sha": "f2b493dde982f983a4c4c15352edc054e9f6cd9b",
    "filename": "nexuse2e-webapp/src/main/frontend/src/app/conversation-list/conversation-list.component.spec.ts",
    "status": "modified",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/solutionsdirekt/NEXUSe2e/blob/1da9c02558c9372ff5ec6333ace57bcd462f8a9b/nexuse2e-webapp/src/main/frontend/src/app/conversation-list/conversation-list.component.spec.ts",
    "raw_url": "https://github.com/solutionsdirekt/NEXUSe2e/raw/1da9c02558c9372ff5ec6333ace57bcd462f8a9b/nexuse2e-webapp/src/main/frontend/src/app/conversation-list/conversation-list.component.spec.ts",
    "contents_url": "https://api.github.com/repos/solutionsdirekt/NEXUSe2e/contents/nexuse2e-webapp/src/main/frontend/src/app/conversation-list/conversation-list.component.spec.ts?ref=1da9c02558c9372ff5ec6333ace57bcd462f8a9b",
    "patch": "@@ -1,13 +1,16 @@\n import { ComponentFixture, TestBed } from \"@angular/core/testing\";\n \n import { ConversationListComponent } from \"./conversation-list.component\";\n+import { HttpClientTestingModule } from \"@angular/common/http/testing\";\n+import { TranslateModule } from \"@ngx-translate/core\";\n \n describe(\"ConversationListComponent\", () => {\n   let component: ConversationListComponent;\n   let fixture: ComponentFixture<ConversationListComponent>;\n \n   beforeEach(async () => {\n     await TestBed.configureTestingModule({\n+      imports: [HttpClientTestingModule, TranslateModule.forRoot()],\n       declarations: [ConversationListComponent],\n     }).compileComponents();\n   });"
  },
  {
    "sha": "dbc60ba581adbc8e05c9c3e2bb0d3391499dec3f",
    "filename": "nexuse2e-webapp/src/main/frontend/src/app/conversation-list/conversation-list.component.ts",
    "status": "modified",
    "additions": 16,
    "deletions": 2,
    "changes": 18,
    "blob_url": "https://github.com/solutionsdirekt/NEXUSe2e/blob/1da9c02558c9372ff5ec6333ace57bcd462f8a9b/nexuse2e-webapp/src/main/frontend/src/app/conversation-list/conversation-list.component.ts",
    "raw_url": "https://github.com/solutionsdirekt/NEXUSe2e/raw/1da9c02558c9372ff5ec6333ace57bcd462f8a9b/nexuse2e-webapp/src/main/frontend/src/app/conversation-list/conversation-list.component.ts",
    "contents_url": "https://api.github.com/repos/solutionsdirekt/NEXUSe2e/contents/nexuse2e-webapp/src/main/frontend/src/app/conversation-list/conversation-list.component.ts?ref=1da9c02558c9372ff5ec6333ace57bcd462f8a9b",
    "patch": "@@ -1,12 +1,26 @@\n import { Component, OnInit } from \"@angular/core\";\n+import { Conversation } from \"../types\";\n+import { DataService } from \"../data/data.service\";\n \n @Component({\n   selector: \"app-conversation-list\",\n   templateUrl: \"./conversation-list.component.html\",\n   styleUrls: [\"./conversation-list.component.scss\"],\n })\n export class ConversationListComponent implements OnInit {\n-  constructor() {}\n+  totalConversationCount?: number;\n+  conversations: Conversation[] = [];\n \n-  ngOnInit(): void {}\n+  constructor(private dataService: DataService) {}\n+\n+  async ngOnInit() {\n+    this.totalConversationCount = await this.dataService.getConversationsCount();\n+  }\n+\n+  async loadConversations(pageIndex: number, pageSize: number) {\n+    this.conversations = await this.dataService.getConversations(\n+      pageIndex,\n+      pageSize\n+    );\n+  }\n }"
  },
  {
    "sha": "831f3344c1f16fdaed1ca8ae547b4eb6fc23196e",
    "filename": "nexuse2e-webapp/src/main/frontend/src/app/conversation-table/conversation-table.component.html",
    "status": "added",
    "additions": 60,
    "deletions": 0,
    "changes": 60,
    "blob_url": "https://github.com/solutionsdirekt/NEXUSe2e/blob/1da9c02558c9372ff5ec6333ace57bcd462f8a9b/nexuse2e-webapp/src/main/frontend/src/app/conversation-table/conversation-table.component.html",
    "raw_url": "https://github.com/solutionsdirekt/NEXUSe2e/raw/1da9c02558c9372ff5ec6333ace57bcd462f8a9b/nexuse2e-webapp/src/main/frontend/src/app/conversation-table/conversation-table.component.html",
    "contents_url": "https://api.github.com/repos/solutionsdirekt/NEXUSe2e/contents/nexuse2e-webapp/src/main/frontend/src/app/conversation-table/conversation-table.component.html?ref=1da9c02558c9372ff5ec6333ace57bcd462f8a9b",
    "patch": "@@ -0,0 +1,60 @@\n+<div class=\"table-scrollable\">\n+  <table mat-table [dataSource]=\"conversations\" class=\"mat-elevation-z8 full-width\">\n+    <ng-container matColumnDef=\"statusColor\">\n+      <th mat-header-cell *matHeaderCellDef>\n+      </th>\n+      <td mat-cell *matCellDef=\"let element\" [class]=\"element.status | lowercase\"\n+          class=\"conversationStatusLeftBorderColor\">\n+      </td>\n+    </ng-container>\n+\n+    <ng-container matColumnDef=\"select\">\n+      <th mat-header-cell *matHeaderCellDef>\n+        <mat-checkbox></mat-checkbox>\n+      </th>\n+      <td mat-cell *matCellDef=\"let element\">\n+        <mat-checkbox></mat-checkbox>\n+      </td>\n+    </ng-container>\n+\n+    <ng-container matColumnDef=\"conversationId\">\n+      <th mat-header-cell *matHeaderCellDef>{{ \"labels.conversationId\" | translate }}</th>\n+      <td mat-cell *matCellDef=\"let element\">\n+        <a [routerLink]=\"'' + element.nxConversationId\">{{ element.conversationId }}</a>\n+      </td>\n+    </ng-container>\n+\n+    <ng-container matColumnDef=\"partnerId\">\n+      <th mat-header-cell *matHeaderCellDef>{{ \"labels.participantId\" | translate }}</th>\n+      <td mat-cell *matCellDef=\"let element\"> {{element.partnerId}} </td>\n+    </ng-container>\n+\n+    <ng-container matColumnDef=\"choreographyId\">\n+      <th mat-header-cell *matHeaderCellDef>{{ \"labels.choreographyId\" | translate }}</th>\n+      <td mat-cell *matCellDef=\"let element\"> {{element.choreographyId}} </td>\n+    </ng-container>\n+\n+    <ng-container matColumnDef=\"currentAction\">\n+      <th mat-header-cell *matHeaderCellDef>{{ \"labels.currentAction\" | translate }}</th>\n+      <td mat-cell *matCellDef=\"let element\"> {{element.currentAction}} </td>\n+    </ng-container>\n+\n+    <ng-container matColumnDef=\"createdDate\">\n+      <th mat-header-cell *matHeaderCellDef>{{ \"labels.createdDate\" | translate }}</th>\n+      <td mat-cell *matCellDef=\"let element\"> {{element.createdDate}} </td>\n+    </ng-container>\n+\n+    <ng-container matColumnDef=\"status\">\n+      <th mat-header-cell *matHeaderCellDef>{{ \"labels.status\" | translate }}</th>\n+      <td mat-cell *matCellDef=\"let element\">{{ \"status.\" + element.status.toLowerCase() | translate }}</td>\n+    </ng-container>\n+\n+    <ng-container matColumnDef=\"turnAroundTime\">\n+      <th mat-header-cell *matHeaderCellDef>{{ \"labels.turnAroundTime\" | translate }}</th>\n+      <td mat-cell *matCellDef=\"let element\"> {{element.turnAroundTime}} </td>\n+    </ng-container>\n+\n+    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n+    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n+  </table>\n+</div>"
  },
  {
    "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
    "filename": "nexuse2e-webapp/src/main/frontend/src/app/conversation-table/conversation-table.component.scss",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/solutionsdirekt/NEXUSe2e/blob/1da9c02558c9372ff5ec6333ace57bcd462f8a9b/nexuse2e-webapp/src/main/frontend/src/app/conversation-table/conversation-table.component.scss",
    "raw_url": "https://github.com/solutionsdirekt/NEXUSe2e/raw/1da9c02558c9372ff5ec6333ace57bcd462f8a9b/nexuse2e-webapp/src/main/frontend/src/app/conversation-table/conversation-table.component.scss",
    "contents_url": "https://api.github.com/repos/solutionsdirekt/NEXUSe2e/contents/nexuse2e-webapp/src/main/frontend/src/app/conversation-table/conversation-table.component.scss?ref=1da9c02558c9372ff5ec6333ace57bcd462f8a9b"
  },
  {
    "sha": "9bd427b2fad3c572f71b2071f82a768e633edfc5",
    "filename": "nexuse2e-webapp/src/main/frontend/src/app/conversation-table/conversation-table.component.spec.ts",
    "status": "added",
    "additions": 76,
    "deletions": 0,
    "changes": 76,
    "blob_url": "https://github.com/solutionsdirekt/NEXUSe2e/blob/1da9c02558c9372ff5ec6333ace57bcd462f8a9b/nexuse2e-webapp/src/main/frontend/src/app/conversation-table/conversation-table.component.spec.ts",
    "raw_url": "https://github.com/solutionsdirekt/NEXUSe2e/raw/1da9c02558c9372ff5ec6333ace57bcd462f8a9b/nexuse2e-webapp/src/main/frontend/src/app/conversation-table/conversation-table.component.spec.ts",
    "contents_url": "https://api.github.com/repos/solutionsdirekt/NEXUSe2e/contents/nexuse2e-webapp/src/main/frontend/src/app/conversation-table/conversation-table.component.spec.ts?ref=1da9c02558c9372ff5ec6333ace57bcd462f8a9b",
    "patch": "@@ -0,0 +1,76 @@\n+import { ComponentFixture, TestBed } from \"@angular/core/testing\";\n+import { ConversationTableComponent } from \"./conversation-table.component\";\n+import { By } from \"@angular/platform-browser\";\n+import { RouterTestingModule } from \"@angular/router/testing\";\n+import { TranslateModule } from \"@ngx-translate/core\";\n+import { MatCheckboxModule } from \"@angular/material/checkbox\";\n+import { MatTableModule } from \"@angular/material/table\";\n+\n+describe(\"ConversationTableComponent\", () => {\n+  let component: ConversationTableComponent;\n+  let fixture: ComponentFixture<ConversationTableComponent>;\n+\n+  beforeEach(async () => {\n+    await TestBed.configureTestingModule({\n+      imports: [\n+        RouterTestingModule,\n+        TranslateModule.forRoot(),\n+        MatCheckboxModule,\n+        MatTableModule,\n+      ],\n+      declarations: [ConversationTableComponent],\n+    }).compileComponents();\n+  });\n+\n+  beforeEach(() => {\n+    fixture = TestBed.createComponent(ConversationTableComponent);\n+    component = fixture.componentInstance;\n+    component.conversations = [\n+      {\n+        choreographyId: \"GenericFile\",\n+        conversationId: \"sdasdad-sadsadasda-asdsadada\",\n+        nxConversationId: 12,\n+        partnerId: \"NexusFriend\",\n+        createdDate: \"03-02-2018 15:07:34 GMT\",\n+        status: \"Sent\",\n+        currentAction: \"SendFile\",\n+        turnAroundTime: \"Not terminated\",\n+      },\n+      {\n+        choreographyId: \"GenericFile\",\n+        conversationId: \"sdasdad-sadsadasda-asdsadada\",\n+        nxConversationId: 13,\n+        partnerId: \"NexusFriend2\",\n+        createdDate: \"03-02-2018 15:07:34 GMT\",\n+        status: \"Queued\",\n+        currentAction: \"SendFile\",\n+        turnAroundTime: \"Not terminated\",\n+      },\n+    ];\n+    fixture.detectChanges();\n+  });\n+\n+  it(\"should create\", () => {\n+    expect(component).toBeTruthy();\n+  });\n+\n+  it(\"should have a checkbox\", () => {\n+    const checkbox = fixture.nativeElement.querySelector(\n+      \"input[type='checkbox']\"\n+    );\n+    expect(checkbox).toBeTruthy();\n+  });\n+\n+  it(\"should show all conversations\", () => {\n+    const rowHtmlElements = fixture.nativeElement.querySelectorAll(\"tbody tr\");\n+    expect(rowHtmlElements.length).toBe(2);\n+  });\n+\n+  it(\"should have a link to the conversation detail page\", () => {\n+    const linkToConversation = fixture.debugElement.query(\n+      By.css(\"a[href*='12']\")\n+    );\n+    expect(linkToConversation).toBeTruthy();\n+    expect(linkToConversation.nativeElement.textContent).toBeTruthy();\n+  });\n+});"
  },
  {
    "sha": "7b42ec289ed3b575fb2938382d8009a60547b6d7",
    "filename": "nexuse2e-webapp/src/main/frontend/src/app/conversation-table/conversation-table.component.ts",
    "status": "added",
    "additions": 26,
    "deletions": 0,
    "changes": 26,
    "blob_url": "https://github.com/solutionsdirekt/NEXUSe2e/blob/1da9c02558c9372ff5ec6333ace57bcd462f8a9b/nexuse2e-webapp/src/main/frontend/src/app/conversation-table/conversation-table.component.ts",
    "raw_url": "https://github.com/solutionsdirekt/NEXUSe2e/raw/1da9c02558c9372ff5ec6333ace57bcd462f8a9b/nexuse2e-webapp/src/main/frontend/src/app/conversation-table/conversation-table.component.ts",
    "contents_url": "https://api.github.com/repos/solutionsdirekt/NEXUSe2e/contents/nexuse2e-webapp/src/main/frontend/src/app/conversation-table/conversation-table.component.ts?ref=1da9c02558c9372ff5ec6333ace57bcd462f8a9b",
    "patch": "@@ -0,0 +1,26 @@\n+import { Component, Input, OnInit } from \"@angular/core\";\n+import { Conversation } from \"../types\";\n+\n+@Component({\n+  selector: \"app-conversation-table\",\n+  templateUrl: \"./conversation-table.component.html\",\n+  styleUrls: [\"./conversation-table.component.scss\"],\n+})\n+export class ConversationTableComponent implements OnInit {\n+  @Input() conversations!: Conversation[];\n+  displayedColumns: string[] = [\n+    \"statusColor\",\n+    \"select\",\n+    \"conversationId\",\n+    \"partnerId\",\n+    \"choreographyId\",\n+    \"currentAction\",\n+    \"createdDate\",\n+    \"status\",\n+    \"turnAroundTime\",\n+  ];\n+\n+  constructor() {}\n+\n+  ngOnInit() {}\n+}"
  },
  {
    "sha": "c69b23805ed92a44d9ba7a03e4b5ec8dcccbae2b",
    "filename": "nexuse2e-webapp/src/main/frontend/src/app/custom-paginator-formatting.ts",
    "status": "added",
    "additions": 35,
    "deletions": 0,
    "changes": 35,
    "blob_url": "https://github.com/solutionsdirekt/NEXUSe2e/blob/1da9c02558c9372ff5ec6333ace57bcd462f8a9b/nexuse2e-webapp/src/main/frontend/src/app/custom-paginator-formatting.ts",
    "raw_url": "https://github.com/solutionsdirekt/NEXUSe2e/raw/1da9c02558c9372ff5ec6333ace57bcd462f8a9b/nexuse2e-webapp/src/main/frontend/src/app/custom-paginator-formatting.ts",
    "contents_url": "https://api.github.com/repos/solutionsdirekt/NEXUSe2e/contents/nexuse2e-webapp/src/main/frontend/src/app/custom-paginator-formatting.ts?ref=1da9c02558c9372ff5ec6333ace57bcd462f8a9b",
    "patch": "@@ -0,0 +1,35 @@\n+import { MatPaginatorIntl } from \"@angular/material/paginator\";\n+import { TranslateService } from \"@ngx-translate/core\";\n+import { Injectable } from \"@angular/core\";\n+\n+@Injectable()\n+export class CustomPaginatorFormatting extends MatPaginatorIntl {\n+  showingResultsLabel;\n+  itemsPerPageLabel;\n+  nextPageLabel;\n+  previousPageLabel;\n+  ofLabel;\n+  noResultsFoundLabel;\n+\n+  constructor(private translate: TranslateService) {\n+    super();\n+    this.showingResultsLabel = this.translate.instant(\"labels.showingResults\");\n+    this.itemsPerPageLabel = this.translate.instant(\"labels.itemsPerPage\");\n+    this.nextPageLabel = this.translate.instant(\"labels.nextPage\");\n+    this.previousPageLabel = this.translate.instant(\"labels.previousPage\");\n+    this.ofLabel = this.translate.instant(\"labels.of\");\n+    this.noResultsFoundLabel = this.translate.instant(\"labels.noResultsFound\");\n+  }\n+\n+  getRangeLabel = (page: number, pageSize: number, length: number) => {\n+    if (length === 0 || pageSize === 0) {\n+      return this.noResultsFoundLabel;\n+    }\n+    length = Math.max(length, 0);\n+    const startIndex = page * pageSize;\n+    const endIndex = startIndex < length ?\n+      Math.min(startIndex + pageSize, length) :\n+      startIndex + pageSize;\n+    return `${this.showingResultsLabel} ${startIndex + 1} - ${endIndex} ${this.ofLabel} ${length}`;\n+  };\n+}"
  },
  {
    "sha": "519ec0c7b253ba5d3728a5af130d2ec4ccb1534a",
    "filename": "nexuse2e-webapp/src/main/frontend/src/app/data/data.service.ts",
    "status": "modified",
    "additions": 46,
    "deletions": 7,
    "changes": 53,
    "blob_url": "https://github.com/solutionsdirekt/NEXUSe2e/blob/1da9c02558c9372ff5ec6333ace57bcd462f8a9b/nexuse2e-webapp/src/main/frontend/src/app/data/data.service.ts",
    "raw_url": "https://github.com/solutionsdirekt/NEXUSe2e/raw/1da9c02558c9372ff5ec6333ace57bcd462f8a9b/nexuse2e-webapp/src/main/frontend/src/app/data/data.service.ts",
    "contents_url": "https://api.github.com/repos/solutionsdirekt/NEXUSe2e/contents/nexuse2e-webapp/src/main/frontend/src/app/data/data.service.ts?ref=1da9c02558c9372ff5ec6333ace57bcd462f8a9b",
    "patch": "@@ -1,7 +1,8 @@\n import { Injectable } from \"@angular/core\";\n-import { HttpClient } from \"@angular/common/http\";\n+import { HttpClient, HttpParams } from \"@angular/common/http\";\n import { environment } from \"../../environments/environment\";\n-import { Message } from \"../types\";\n+import { Conversation, Message } from \"../types\";\n+import { ActiveFilter } from \"../filter-panel/filter-panel.component\";\n \n @Injectable({\n   providedIn: \"root\",\n@@ -29,10 +30,6 @@ export class DataService {\n     return this.http.get<T>(this.API_URL + path).toPromise<T>();\n   }\n \n-  getAllMessages(): Promise<Message[]> {\n-    return this.get<Message[]>(\"/messages\", false);\n-  }\n-\n   getFullUsername(): Promise<string> {\n     return this.get<string>(\"/full-username\");\n   }\n@@ -47,6 +44,48 @@ export class DataService {\n     return this.get<string>(\"/machine-name\");\n   }\n \n+  buildFilterParams(activeFilters: ActiveFilter[]) {\n+    let httpParams = new HttpParams();\n+    for (const filter of activeFilters) {\n+      if (filter.value) {\n+        httpParams = httpParams.append(filter.fieldName, filter.value);\n+      }\n+    }\n+    return httpParams;\n+  }\n+\n+  getMessages(pageIndex: number, itemsPerPage: number, activeFilters: ActiveFilter[]): Promise<Message[]> {\n+    let params = this.buildFilterParams(activeFilters);\n+    params = params.append(\"pageIndex\", String(pageIndex));\n+    params = params.append(\"itemsPerPage\", String(itemsPerPage));\n+    return this.http\n+      .get<Message[]>(this.API_URL + \"/messages\", { params: params })\n+      .toPromise();\n+  }\n+\n+  getMessagesCount(activeFilters: ActiveFilter[] = []): Promise<number> {\n+    return this.http.get<number>(this.API_URL + \"/messages-count\", {\n+      params: this.buildFilterParams(activeFilters),\n+    }).toPromise();\n+  }\n+\n+  getConversations(\n+    pageIndex: number,\n+    itemsPerPage: number\n+  ): Promise<Conversation[]> {\n+    const params = {\n+      pageIndex: String(pageIndex),\n+      itemsPerPage: String(itemsPerPage),\n+    };\n+    return this.http\n+      .get<Conversation[]>(this.API_URL + \"/conversations\", { params: params })\n+      .toPromise();\n+  }\n+\n+  getConversationsCount(): Promise<number> {\n+    return this.get<number>(\"/conversations-count\", false);\n+  }\n+\n   getVersion(): Promise<string[]> {\n     return this.get<string[]>(\"/version\");\n   }\n@@ -55,7 +94,7 @@ export class DataService {\n     return this.http.post<void>(this.API_URL + path, body).toPromise();\n   }\n \n-  postLogin(body: { user: string, password: string }): Promise<void> {\n+  postLogin(body: { user: string; password: string }): Promise<void> {\n     return this.post(\"/login\", body);\n   }\n "
  },
  {
    "sha": "53f5391871f01840bfe0b0d823f70ea088ac17bf",
    "filename": "nexuse2e-webapp/src/main/frontend/src/app/filter-panel/filter-panel.component.html",
    "status": "added",
    "additions": 31,
    "deletions": 0,
    "changes": 31,
    "blob_url": "https://github.com/solutionsdirekt/NEXUSe2e/blob/1da9c02558c9372ff5ec6333ace57bcd462f8a9b/nexuse2e-webapp/src/main/frontend/src/app/filter-panel/filter-panel.component.html",
    "raw_url": "https://github.com/solutionsdirekt/NEXUSe2e/raw/1da9c02558c9372ff5ec6333ace57bcd462f8a9b/nexuse2e-webapp/src/main/frontend/src/app/filter-panel/filter-panel.component.html",
    "contents_url": "https://api.github.com/repos/solutionsdirekt/NEXUSe2e/contents/nexuse2e-webapp/src/main/frontend/src/app/filter-panel/filter-panel.component.html?ref=1da9c02558c9372ff5ec6333ace57bcd462f8a9b",
    "patch": "@@ -0,0 +1,31 @@\n+<div class=\"expanded\" [hidden]=\"!expanded\">\n+  <div *ngFor=\"let filter of filters\" class=\"filter\">\n+    <div [ngSwitch]=\"filter.filterType\">\n+      <app-select-filter\n+        *ngSwitchCase=\"getFilterType().SELECT\"\n+        [allowedValues]=\"filter.allowedValues\"\n+        [fieldName]=\"filter.fieldName\"\n+        (valueChange)=\"updateActiveFilters($event)\"\n+      >\n+      </app-select-filter>\n+    </div>\n+  </div>\n+  <button mat-flat-button\n+          (click)=\"applyFilters()\"\n+          color=\"accent\"\n+  >\n+    {{ \"buttons.filter\" | translate }}\n+  </button>\n+</div>\n+<div (click)=\"toggleVisibility()\" class=\"toggle\" [class.border]=\"expanded\">\n+  <div class=\"collapsed\" *ngIf=\"!expanded\">\n+    <div *ngIf=\"activeFilters.length\" class=\"filter-info\">\n+      <div class=\"active-filters-badge\">{{ activeFilters.length }}</div>\n+      {{ (activeFilters.length == 1 ? \"labels.filterActive\" : \"labels.filtersActive\") | translate }}\n+    </div>\n+    <div *ngIf=\"!activeFilters.length\">\n+      {{ \"labels.noFiltersActive\" | translate }}\n+    </div>\n+  </div>\n+  <mat-icon>{{ expanded ? \"keyboard_arrow_up\" : \"keyboard_arrow_down\" }}</mat-icon>\n+</div>"
  },
  {
    "sha": "5f4819145cf4a1b6262e1c179c76e07b5e232e02",
    "filename": "nexuse2e-webapp/src/main/frontend/src/app/filter-panel/filter-panel.component.scss",
    "status": "added",
    "additions": 59,
    "deletions": 0,
    "changes": 59,
    "blob_url": "https://github.com/solutionsdirekt/NEXUSe2e/blob/1da9c02558c9372ff5ec6333ace57bcd462f8a9b/nexuse2e-webapp/src/main/frontend/src/app/filter-panel/filter-panel.component.scss",
    "raw_url": "https://github.com/solutionsdirekt/NEXUSe2e/raw/1da9c02558c9372ff5ec6333ace57bcd462f8a9b/nexuse2e-webapp/src/main/frontend/src/app/filter-panel/filter-panel.component.scss",
    "contents_url": "https://api.github.com/repos/solutionsdirekt/NEXUSe2e/contents/nexuse2e-webapp/src/main/frontend/src/app/filter-panel/filter-panel.component.scss?ref=1da9c02558c9372ff5ec6333ace57bcd462f8a9b",
    "patch": "@@ -0,0 +1,59 @@\n+@import '../../styles.scss';\n+\n+button {\n+  display: block;\n+  width: 100%;\n+}\n+\n+.toggle {\n+  display: flex;\n+  justify-content: center;\n+  align-items: center;\n+  border: none;\n+  border-bottom: 1px $gray3 solid;\n+  outline: none;\n+  text-transform: none;\n+  padding: 6px;\n+  background: $gray5;\n+  color: $gray2;\n+  cursor: pointer;\n+}\n+\n+.border {\n+  border-top: 1px solid $gray3;\n+}\n+\n+.filter-info {\n+  display: flex;\n+  align-items: center;\n+\n+  .active-filters-badge {\n+    color: white;\n+    padding: 0 8px;\n+    background: $orangeDark;\n+    border-radius: 10px;\n+    margin-right: 5px;\n+    font-size: 11px;\n+    line-height: 15px;\n+  }\n+}\n+\n+.expanded {\n+  background: $gray5;\n+  padding: 10px;\n+\n+  ::ng-deep label {\n+    color: $gray2;\n+    margin-left: 5px;\n+  }\n+\n+  ::ng-deep .mat-form-field-appearance-outline {\n+    .mat-form-field-wrapper {\n+      margin-top: 0;\n+    }\n+\n+    .mat-select-arrow-wrapper {\n+      transform: translateY(0%);\n+    }\n+  }\n+}"
  },
  {
    "sha": "7e7759cfaa568dfe2513061a53c23276626c2710",
    "filename": "nexuse2e-webapp/src/main/frontend/src/app/filter-panel/filter-panel.component.spec.ts",
    "status": "added",
    "additions": 72,
    "deletions": 0,
    "changes": 72,
    "blob_url": "https://github.com/solutionsdirekt/NEXUSe2e/blob/1da9c02558c9372ff5ec6333ace57bcd462f8a9b/nexuse2e-webapp/src/main/frontend/src/app/filter-panel/filter-panel.component.spec.ts",
    "raw_url": "https://github.com/solutionsdirekt/NEXUSe2e/raw/1da9c02558c9372ff5ec6333ace57bcd462f8a9b/nexuse2e-webapp/src/main/frontend/src/app/filter-panel/filter-panel.component.spec.ts",
    "contents_url": "https://api.github.com/repos/solutionsdirekt/NEXUSe2e/contents/nexuse2e-webapp/src/main/frontend/src/app/filter-panel/filter-panel.component.spec.ts?ref=1da9c02558c9372ff5ec6333ace57bcd462f8a9b",
    "patch": "@@ -0,0 +1,72 @@\n+import { ComponentFixture, TestBed } from '@angular/core/testing';\n+\n+import { FilterPanelComponent, FilterType } from './filter-panel.component';\n+import { By } from \"@angular/platform-browser\";\n+import { TranslateModule } from \"@ngx-translate/core\";\n+\n+describe('FilterPanelComponent', () => {\n+  let component: FilterPanelComponent;\n+  let fixture: ComponentFixture<FilterPanelComponent>;\n+\n+  beforeEach(async () => {\n+    await TestBed.configureTestingModule({\n+      declarations: [FilterPanelComponent],\n+      imports: [TranslateModule.forRoot()]\n+    })\n+      .compileComponents();\n+  });\n+\n+  beforeEach(() => {\n+    fixture = TestBed.createComponent(FilterPanelComponent);\n+    component = fixture.componentInstance;\n+  });\n+\n+  it('should create', () => {\n+    expect(component).toBeTruthy();\n+  });\n+\n+  it(\"should display the number of active filters when collapsed\", () => {\n+    component.activeFilters = [\n+      { fieldName: \"filter1\", value: \"2\" },\n+      { fieldName: \"filter1\", value: \"1\" }\n+    ];\n+    fixture.detectChanges();\n+\n+    const activeFiltersBadge = fixture.debugElement.query(By.css(\".active-filters-badge\"));\n+    expect(activeFiltersBadge.nativeElement.textContent).toBe(\"2\");\n+  });\n+\n+  it(\"should render all filters specified in the config object\", () => {\n+    component.toggleVisibility();\n+    component.filters = [\n+      {\n+        fieldName: \"status\",\n+        filterType: FilterType.SELECT,\n+        allowedValues: [\"FAILED\", \"SENT\"]\n+      },\n+      {\n+        fieldName: \"conversationId\",\n+        filterType: FilterType.TEXT_FIELD\n+      },\n+      {\n+        fieldName: \"startDate\",\n+        filterType: FilterType.DATE\n+      }\n+    ];\n+    fixture.detectChanges();\n+\n+    expect(fixture.nativeElement.querySelectorAll(\".filter\").length).toBe(3);\n+  });\n+\n+  it(\"should emit an event including the active filters when the filter button is clicked\", () => {\n+    component.toggleVisibility();\n+    fixture.detectChanges();\n+    spyOn(component.filterChange, 'emit');\n+    const button = fixture.nativeElement.querySelector(\"button\");\n+\n+    button.dispatchEvent(new Event('click'));\n+    fixture.detectChanges();\n+\n+    expect(component.filterChange.emit).toHaveBeenCalledWith(component.activeFilters);\n+  });\n+});"
  },
  {
    "sha": "3eacae3b75a3639130fefe6581a6aeb328b7c6e5",
    "filename": "nexuse2e-webapp/src/main/frontend/src/app/filter-panel/filter-panel.component.ts",
    "status": "added",
    "additions": 65,
    "deletions": 0,
    "changes": 65,
    "blob_url": "https://github.com/solutionsdirekt/NEXUSe2e/blob/1da9c02558c9372ff5ec6333ace57bcd462f8a9b/nexuse2e-webapp/src/main/frontend/src/app/filter-panel/filter-panel.component.ts",
    "raw_url": "https://github.com/solutionsdirekt/NEXUSe2e/raw/1da9c02558c9372ff5ec6333ace57bcd462f8a9b/nexuse2e-webapp/src/main/frontend/src/app/filter-panel/filter-panel.component.ts",
    "contents_url": "https://api.github.com/repos/solutionsdirekt/NEXUSe2e/contents/nexuse2e-webapp/src/main/frontend/src/app/filter-panel/filter-panel.component.ts?ref=1da9c02558c9372ff5ec6333ace57bcd462f8a9b",
    "patch": "@@ -0,0 +1,65 @@\n+import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n+\n+export enum FilterType {\n+  TEXT_FIELD,\n+  SELECT,\n+  DATE\n+}\n+\n+export interface Filter {\n+  fieldName: string;\n+  filterType: FilterType,\n+  allowedValues?: string[];\n+  defaultValue?: string | Date;\n+}\n+\n+export interface ActiveFilter {\n+  fieldName: string;\n+  value: string;\n+}\n+\n+@Component({\n+  selector: 'app-filter-panel',\n+  templateUrl: './filter-panel.component.html',\n+  styleUrls: ['./filter-panel.component.scss']\n+})\n+export class FilterPanelComponent implements OnInit {\n+  @Input() filters!: Filter[];\n+  @Output() filterChange: EventEmitter<ActiveFilter[]> = new EventEmitter();\n+  expanded = false;\n+  activeFilters: ActiveFilter[] = [];\n+\n+  constructor() {\n+  }\n+\n+  ngOnInit(): void {\n+  }\n+\n+  getFilterType() {\n+    return FilterType;\n+  }\n+\n+  toggleVisibility() {\n+    this.expanded = !this.expanded;\n+  }\n+\n+  updateActiveFilters(activeFilter: ActiveFilter) {\n+    const index = this.activeFilters.findIndex(filter => filter.fieldName === activeFilter.fieldName);\n+    const existingFilter = this.activeFilters[index];\n+    if (existingFilter) {\n+      if (typeof activeFilter.value !== \"undefined\") {\n+        existingFilter.value = activeFilter.value;\n+      } else {\n+        this.activeFilters.splice(index, 1);\n+      }\n+    } else {\n+      this.activeFilters.push(activeFilter);\n+    }\n+  }\n+\n+  applyFilters() {\n+    this.filterChange.emit(this.activeFilters);\n+    this.expanded = false;\n+  }\n+\n+}"
  },
  {
    "sha": "fa7f2fc46a4fd3a4fde3ea1a2422961b5e41fe67",
    "filename": "nexuse2e-webapp/src/main/frontend/src/app/menu-item/menu-item.component.scss",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/solutionsdirekt/NEXUSe2e/blob/1da9c02558c9372ff5ec6333ace57bcd462f8a9b/nexuse2e-webapp/src/main/frontend/src/app/menu-item/menu-item.component.scss",
    "raw_url": "https://github.com/solutionsdirekt/NEXUSe2e/raw/1da9c02558c9372ff5ec6333ace57bcd462f8a9b/nexuse2e-webapp/src/main/frontend/src/app/menu-item/menu-item.component.scss",
    "contents_url": "https://api.github.com/repos/solutionsdirekt/NEXUSe2e/contents/nexuse2e-webapp/src/main/frontend/src/app/menu-item/menu-item.component.scss?ref=1da9c02558c9372ff5ec6333ace57bcd462f8a9b",
    "patch": "@@ -24,6 +24,7 @@\n       text-transform: capitalize;\n       text-align: left;\n       width: 100%;\n+      font-size: 14px;\n     }\n \n     &.toggle {"
  }
]
