[
  {
    "sha": "3f80d3fd38164808c8f2029f5f1d147237a198c0",
    "filename": "generation/src/main/java/com/lojagames/generation/controller/UsuarioController.java",
    "status": "added",
    "additions": 64,
    "deletions": 0,
    "changes": 64,
    "blob_url": "https://github.com/Carolguida/loja_games/blob/3036c15cf023751799d62074668d836c598d2024/generation/src/main/java/com/lojagames/generation/controller/UsuarioController.java",
    "raw_url": "https://github.com/Carolguida/loja_games/raw/3036c15cf023751799d62074668d836c598d2024/generation/src/main/java/com/lojagames/generation/controller/UsuarioController.java",
    "contents_url": "https://api.github.com/repos/Carolguida/loja_games/contents/generation/src/main/java/com/lojagames/generation/controller/UsuarioController.java?ref=3036c15cf023751799d62074668d836c598d2024",
    "patch": "@@ -0,0 +1,64 @@\n+package com.lojagames.generation.controller;\n+\n+import java.util.List;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.web.bind.annotation.CrossOrigin;\n+import org.springframework.web.bind.annotation.DeleteMapping;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.PathVariable;\n+import org.springframework.web.bind.annotation.PostMapping;\n+import org.springframework.web.bind.annotation.PutMapping;\n+import org.springframework.web.bind.annotation.RequestBody;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+import com.lojagames.generation.model.Produto;\n+import com.lojagames.generation.model.Usuario;\n+import com.lojagames.generation.repository.UsuarioRepository;\n+\n+@RestController\n+@RequestMapping(\"/usuario\")\n+@CrossOrigin(\"*\")\n+public class UsuarioController {\n+\n+\t@Autowired\n+\tprivate UsuarioRepository usuarioRepository;\n+\n+\t@GetMapping\n+\tpublic ResponseEntity<List<Usuario>> GetAll() {\n+\t\treturn ResponseEntity.ok(usuarioRepository.findAll());\n+\t}\n+\n+\t@GetMapping(\"/{id}\")\n+\tpublic ResponseEntity<Usuario> GetById(@PathVariable long id) {\n+\t\treturn usuarioRepository.findById(id).map(resp -> ResponseEntity.ok(resp))\n+\t\t\t\t.orElse(ResponseEntity.notFound().build());\n+\t}\n+\n+\t@GetMapping(\"/usuarios/{nomeUsuario}\")\n+\tpublic ResponseEntity<List<Usuario>> GetByUsuario(@PathVariable String nomeUsuario) {\n+\t\treturn ResponseEntity.ok(usuarioRepository.findAllByNomeUsuarioContainingIgnoreCase(nomeUsuario));\n+\n+\t}\n+\n+\t@PostMapping\n+\tpublic ResponseEntity<Usuario> post(@RequestBody Usuario usuario) {\n+\t\treturn ResponseEntity.status(HttpStatus.CREATED).body(usuarioRepository.save(usuario));\n+\n+\t}\n+\n+\t@PutMapping\n+\tpublic ResponseEntity<Usuario> put(@RequestBody Usuario usuario) {\n+\t\treturn ResponseEntity.status(HttpStatus.OK).body(usuarioRepository.save(usuario));\n+\n+\t}\n+\n+\t@DeleteMapping(\"/{id}\")\n+\tpublic void delete(@PathVariable long id) {\n+\t\tusuarioRepository.deleteById(id);\n+\t}\n+\n+}"
  }
]
