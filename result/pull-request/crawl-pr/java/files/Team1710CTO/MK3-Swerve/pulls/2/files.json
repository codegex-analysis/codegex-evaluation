[
  {
    "sha": "7bc88689969811e92a74a4f2cf66d33829fb9a6a",
    "filename": ".wpilib/wpilib_preferences.json",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/Team1710CTO/MK3-Swerve/blob/add0ecec2b7efee61f8cab0bdfb267a3a3b0c1c1/.wpilib/wpilib_preferences.json",
    "raw_url": "https://github.com/Team1710CTO/MK3-Swerve/raw/add0ecec2b7efee61f8cab0bdfb267a3a3b0c1c1/.wpilib/wpilib_preferences.json",
    "contents_url": "https://api.github.com/repos/Team1710CTO/MK3-Swerve/contents/.wpilib/wpilib_preferences.json?ref=add0ecec2b7efee61f8cab0bdfb267a3a3b0c1c1",
    "patch": "@@ -2,5 +2,5 @@\n     \"enableCppIntellisense\": false,\n     \"currentLanguage\": \"java\",\n     \"projectYear\": \"2021\",\n-    \"teamNumber\": 0\n+    \"teamNumber\": 1710\n }\n\\ No newline at end of file"
  },
  {
    "sha": "2104a05df1b2a2e84c31ac5d1398dd41375dbb01",
    "filename": "src/main/deploy/movement values 4.csv",
    "status": "added",
    "additions": 171,
    "deletions": 0,
    "changes": 171,
    "blob_url": "https://github.com/Team1710CTO/MK3-Swerve/blob/add0ecec2b7efee61f8cab0bdfb267a3a3b0c1c1/src/main/deploy/movement%20values%204.csv",
    "raw_url": "https://github.com/Team1710CTO/MK3-Swerve/raw/add0ecec2b7efee61f8cab0bdfb267a3a3b0c1c1/src/main/deploy/movement%20values%204.csv",
    "contents_url": "https://api.github.com/repos/Team1710CTO/MK3-Swerve/contents/src/main/deploy/movement%20values%204.csv?ref=add0ecec2b7efee61f8cab0bdfb267a3a3b0c1c1",
    "patch": "@@ -0,0 +1,171 @@\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,-0.048\n+0,0,-0.096\n+0,0,-0.096\n+0,0,-0.096\n+0,0,-0.096\n+0,0,-0.096\n+0,0,-0.096\n+0,0,-0.096\n+0,0,-0.143999999\n+0,0,-0.191999999\n+0,0,-0.191999999\n+0,0,-0.191999999\n+0,0,-0.191999999\n+0,0,-0.239999999\n+0,0,-0.239999999\n+0,0,-0.239999999\n+0,0,-0.239999999\n+0,0,-0.287999999\n+0,0,-0.287999999\n+0,0,-0.239999999\n+0,0,-0.287999999\n+0,0,-0.287999999\n+0,0,-0.287999999\n+0,0,-0.287999999\n+0,0,-0.335999999\n+0,0,-0.335999999\n+0,0,-0.335999999\n+0,0,-0.335999999\n+0,0,-0.335999999\n+0,0,-0.335999999\n+0,0,-0.335999999\n+0,0,-0.335999999\n+0,0,-0.335999999\n+0,0,-0.335999999\n+0,0,-0.335999999\n+0,0,-0.335999999\n+0,0,-0.335999999\n+0,0,-0.335999999\n+0,0,-0.335999999\n+0,0,-0.335999999\n+0,0,-0.335999999\n+0,0,-0.335999999\n+0,0,-0.335999999\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0.09525,0,0\n+0.1905,0,0\n+0.238125,0,0\n+0.238125,0,0\n+0.28575,0,0\n+0.28575,0,0\n+0.333375,0,0\n+0.333375,0,0\n+0.333375,0,0\n+0.333375,0,0\n+0.381,0,0\n+0.428625,0,0\n+0.428625,0,0\n+0.428625,0,0\n+0.428625,0,0\n+0.428625,0,0\n+0.428625,0,0\n+0.428625,0,0\n+0.428625,0,0\n+0.428625,0,0\n+0.428625,0,0\n+0.428625,0,0\n+0.238125,0,0\n+0.238125,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+-0.048,0,0\n+-0.239999999,0,0\n+-0.239999999,0,0\n+-0.191999999,0,0\n+-0.191999999,0,0\n+-0.239999999,0,0\n+-0.335999999,0,0\n+-0.479999998,0,0\n+-1.44000004,0,0.09525\n+-1.007999974,0,0.09525\n+-0.959999996,0,0.047625\n+-0.335999999,0,0.09525\n+-0.287999999,0,0.047625\n+-0.143999999,0,0.047625\n+0,0,0\n+-0.048,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,-0.0494739,0\n+0,-0.07421085,0\n+0,-0.222632561,0\n+0,-0.222632561,0\n+0,-0.395791199,0\n+0,-0.544212922,0\n+0,-0.544212922,0\n+0,-0.593686798,0\n+0,-0.593686798,0\n+0,-0.618423737,0\n+0,-0.593686798,0\n+0,-0.618423737,0\n+0,-0.717371536,0\n+0,-1.014214936,0\n+0,-0.989477997,0\n+0,-0.989477997,0\n+0,-0.989477997,0\n+0,-0.989477997,0\n+0,-0.989477997,0\n+0,-0.989477997,0\n+0,-0.989477997,0\n+0,-0.989477997,0\n+0,-0.989477997,0\n+0,-0.989477997,0\n+0,-0.56894986,0\n+0,-0.07421085,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0"
  },
  {
    "sha": "caf0343a888e40f44472b8af020d9453637116f5",
    "filename": "src/main/deploy/movement values 7.csv",
    "status": "added",
    "additions": 97,
    "deletions": 0,
    "changes": 97,
    "blob_url": "https://github.com/Team1710CTO/MK3-Swerve/blob/add0ecec2b7efee61f8cab0bdfb267a3a3b0c1c1/src/main/deploy/movement%20values%207.csv",
    "raw_url": "https://github.com/Team1710CTO/MK3-Swerve/raw/add0ecec2b7efee61f8cab0bdfb267a3a3b0c1c1/src/main/deploy/movement%20values%207.csv",
    "contents_url": "https://api.github.com/repos/Team1710CTO/MK3-Swerve/contents/src/main/deploy/movement%20values%207.csv?ref=add0ecec2b7efee61f8cab0bdfb267a3a3b0c1c1",
    "patch": "@@ -0,0 +1,97 @@\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0.142875,0,0\n+0.142875,0,0\n+0.238125,0,0\n+0.1905,0,0\n+0.238125,0,0\n+0.1905,0,0\n+0.238125,0,0\n+0.238125,0,0\n+0.238125,0,0\n+0.238125,0,0\n+0.238125,0,0\n+0.238125,0,0\n+0.238125,0,0\n+0.28575,0,0\n+0.28575,0,0\n+0.28575,0,0\n+0.333375,0,0\n+0.28575,0,0\n+0.28575,0,0\n+0.28575,0,0\n+0.28575,0,0\n+0.28575,0,0\n+0.28575,0,0\n+0.28575,0,0\n+0.28575,0,0\n+0.28575,0,0\n+0.28575,0,0\n+0.28575,0,0\n+0.28575,0,0\n+0.28575,0,0\n+0.28575,0,0\n+0.28575,0,0\n+0.28575,0,0\n+0.333375,0,0\n+0.28575,0,0\n+0.28575,0,0\n+0.28575,0,0\n+0.333375,0,0\n+0.333375,0,0\n+0.28575,0,0\n+0.333375,0,0\n+0.333375,0,0\n+0.333375,0,0\n+0.333375,0,0\n+0.333375,0,0\n+0.333375,0,0\n+0.333375,0,0\n+0.333375,0,0\n+0.333375,0,0\n+0.333375,0,0\n+0.333375,0,0\n+0.381,0,0\n+0.381,0,0\n+0.381,0,0\n+0.428625,0,0\n+0.428625,0,0\n+0.428625,0,0\n+0.428625,0,0\n+0.381,0,0\n+0.381,0,0\n+0.381,0,0\n+0.381,0,0\n+0.381,0,0\n+0.381,0,0\n+0.381,0,0\n+0.381,0,0\n+0.381,0,0\n+0.381,0,0\n+0.381,0,0\n+0.381,0,0\n+0.381,0,0\n+0.381,0,0\n+0.333375,0,0\n+0.333375,0,0\n+0.333375,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n+0,0,0\n\\ No newline at end of file"
  },
  {
    "sha": "b4759a84e7610dc20ff0b4307ee76e5e1d29a371",
    "filename": "src/main/java/frc/robot/Robot.java",
    "status": "modified",
    "additions": 10,
    "deletions": 1,
    "changes": 11,
    "blob_url": "https://github.com/Team1710CTO/MK3-Swerve/blob/add0ecec2b7efee61f8cab0bdfb267a3a3b0c1c1/src/main/java/frc/robot/Robot.java",
    "raw_url": "https://github.com/Team1710CTO/MK3-Swerve/raw/add0ecec2b7efee61f8cab0bdfb267a3a3b0c1c1/src/main/java/frc/robot/Robot.java",
    "contents_url": "https://api.github.com/repos/Team1710CTO/MK3-Swerve/contents/src/main/java/frc/robot/Robot.java?ref=add0ecec2b7efee61f8cab0bdfb267a3a3b0c1c1",
    "patch": "@@ -5,6 +5,7 @@\n package frc.robot;\n \n import edu.wpi.first.wpilibj.TimedRobot;\n+import edu.wpi.first.wpilibj2.command.Command;\n import edu.wpi.first.wpilibj2.command.CommandScheduler;\n \n /**\n@@ -16,6 +17,7 @@\n public class Robot extends TimedRobot {\n \n   private RobotContainer robotContainer;\n+  private Command autonomousCommand;\n \n   /**\n    * This function is run when the robot is first started up and should be used for any\n@@ -57,7 +59,14 @@ public void autonomousInit() {}\n \n   /** This function is called periodically during autonomous. */\n   @Override\n-  public void autonomousPeriodic() {}\n+  public void autonomousPeriodic() {\n+    autonomousCommand = robotContainer.getAutonomousCommand();\n+\n+    // schedule the autonomous command (example)\n+    if (autonomousCommand != null) {\n+      autonomousCommand.schedule();\n+  }\n+}\n \n   @Override\n   public void teleopInit() {}"
  },
  {
    "sha": "7d67d3fb844549ac8d4d866e6a09ee41eccdadeb",
    "filename": "src/main/java/frc/robot/RobotContainer.java",
    "status": "modified",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/Team1710CTO/MK3-Swerve/blob/add0ecec2b7efee61f8cab0bdfb267a3a3b0c1c1/src/main/java/frc/robot/RobotContainer.java",
    "raw_url": "https://github.com/Team1710CTO/MK3-Swerve/raw/add0ecec2b7efee61f8cab0bdfb267a3a3b0c1c1/src/main/java/frc/robot/RobotContainer.java",
    "contents_url": "https://api.github.com/repos/Team1710CTO/MK3-Swerve/contents/src/main/java/frc/robot/RobotContainer.java?ref=add0ecec2b7efee61f8cab0bdfb267a3a3b0c1c1",
    "patch": "@@ -5,7 +5,9 @@\n package frc.robot;\n \n import edu.wpi.first.wpilibj.XboxController;\n+import edu.wpi.first.wpilibj2.command.Command;\n import frc.robot.commands.SwerveDriveCommand;\n+import frc.robot.commands.AutonomousCommand;\n import frc.robot.subsystems.SwerveDrivetrain;\n \n /**\n@@ -20,8 +22,14 @@\n \n   private final SwerveDrivetrain drivetrain = new SwerveDrivetrain();\n \n+  private final AutonomousCommand autoCommand = new AutonomousCommand(drivetrain);\n+\n   /** The container for the robot. Contains subsystems, OI devices, and commands. */\n   public RobotContainer() {\n     drivetrain.setDefaultCommand(new SwerveDriveCommand(drivetrain, controller));\n   }\n+  public Command getAutonomousCommand() {\n+    // An ExampleCommand will run in autonomous\n+    return autoCommand;\n+  }\n }"
  },
  {
    "sha": "2759b614e63fef3577e58293be38c1ffd5259024",
    "filename": "src/main/java/frc/robot/commands/AutonomousCommand.java",
    "status": "added",
    "additions": 87,
    "deletions": 0,
    "changes": 87,
    "blob_url": "https://github.com/Team1710CTO/MK3-Swerve/blob/add0ecec2b7efee61f8cab0bdfb267a3a3b0c1c1/src/main/java/frc/robot/commands/AutonomousCommand.java",
    "raw_url": "https://github.com/Team1710CTO/MK3-Swerve/raw/add0ecec2b7efee61f8cab0bdfb267a3a3b0c1c1/src/main/java/frc/robot/commands/AutonomousCommand.java",
    "contents_url": "https://api.github.com/repos/Team1710CTO/MK3-Swerve/contents/src/main/java/frc/robot/commands/AutonomousCommand.java?ref=add0ecec2b7efee61f8cab0bdfb267a3a3b0c1c1",
    "patch": "@@ -0,0 +1,87 @@\n+package frc.robot.commands;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Scanner;\n+import edu.wpi.first.wpilibj.Filesystem;\n+import java.nio.file.Path;\n+\n+import edu.wpi.first.wpilibj2.command.CommandBase;\n+import frc.robot.subsystems.SwerveDrivetrain;\n+\n+public class AutonomousCommand extends CommandBase {\n+    private static int x = 0;\n+    private int i = 0;\n+    public static double forwardSpeed;\n+    public static double strafeSpeed;\n+    public static double rotation;\n+    public static List<Double> forwardAr = new ArrayList<>();\n+    public static List<Double> strafeAr = new ArrayList<>();\n+    public static List<Double> rotationAr = new ArrayList<>();\n+    private SwerveDrivetrain drivetrain;\n+    public static boolean isAutonomous = false;\n+\n+    public AutonomousCommand(SwerveDrivetrain drivetrain) {\n+        this.drivetrain = drivetrain;\n+        addRequirements(drivetrain);\n+    }\n+\n+    @Override\n+    public void initialize() {/* Used for testing\n+        for(double ii = 0; ii <= 0.65; ii += 0.01){\n+            forwardAr.add(0.0);\n+            strafeAr.add(0.0);\n+            rotationAr.add(ii);\n+        }*/\n+        isAutonomous = true;\n+        Scanner inputStream = null;\n+        try {\n+            String fileName = \"movement values 7.csv\";\n+            Path filePath = Filesystem.getDeployDirectory().toPath().resolve(fileName);\n+            File file = new File(filePath.toString());\n+            // System.out.println(file.exists());\n+            // System.out.println(file.canRead());\n+            inputStream = new Scanner(file);\n+            while (inputStream.hasNext()) {\n+                String data = inputStream.next();\n+                String[] arr = data.split(\",\");\n+\n+                forwardAr.add(Double.parseDouble(arr[0]));\n+                rotationAr.add(Double.parseDouble(arr[1]));\n+                strafeAr.add(Double.parseDouble(arr[2]));\n+            }\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        } finally {\n+            if (inputStream != null) {\n+                inputStream.close();\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public void execute() {\n+            forwardSpeed = forwardAr.get(i);\n+            strafeSpeed = strafeAr.get(i);\n+            rotation = rotationAr.get(i);\n+        \n+        drivetrain.drive(forwardSpeed, strafeSpeed, rotation, false, false);\n+    }\n+\n+    @Override\n+    public boolean isFinished() {\n+        if (i == forwardAr.size()) {\n+            return true;\n+        } else {\n+            if (x == 6){\n+                x = 0;\n+                i++;\n+            } else {\n+               x++; \n+            }\n+            return false;\n+        }\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "794820e74ed629e5fa9a1ceb660d54902923986d",
    "filename": "src/main/java/frc/robot/commands/SwerveDriveCommand.java",
    "status": "modified",
    "additions": 4,
    "deletions": 1,
    "changes": 5,
    "blob_url": "https://github.com/Team1710CTO/MK3-Swerve/blob/add0ecec2b7efee61f8cab0bdfb267a3a3b0c1c1/src/main/java/frc/robot/commands/SwerveDriveCommand.java",
    "raw_url": "https://github.com/Team1710CTO/MK3-Swerve/raw/add0ecec2b7efee61f8cab0bdfb267a3a3b0c1c1/src/main/java/frc/robot/commands/SwerveDriveCommand.java",
    "contents_url": "https://api.github.com/repos/Team1710CTO/MK3-Swerve/contents/src/main/java/frc/robot/commands/SwerveDriveCommand.java?ref=add0ecec2b7efee61f8cab0bdfb267a3a3b0c1c1",
    "patch": "@@ -6,7 +6,6 @@\n import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;\n import edu.wpi.first.wpilibj2.command.CommandBase;\n import frc.robot.subsystems.SwerveDrivetrain;\n-import frc.robot.subsystems.SwerveModuleMK3;\n \n public class SwerveDriveCommand extends CommandBase {\n \n@@ -50,6 +49,10 @@ public void execute() {\n \n     boolean calibrate = controller.getBumper(GenericHID.Hand.kLeft);\n \n+    SmartDashboard.putNumber(\"Forward\", xSpeed);\n+    SmartDashboard.putNumber(\"Strafe\", ySpeed);\n+    SmartDashboard.putNumber(\"Rotation\", rot);\n+\n     drivetrain.drive(xSpeed, ySpeed, rot, true, calibrate);\n     \n   }"
  },
  {
    "sha": "5b4673977f73b72dfb3fdbb2643362454b82fee4",
    "filename": "src/main/java/frc/robot/subsystems/SwerveDrivetrain.java",
    "status": "modified",
    "additions": 50,
    "deletions": 66,
    "changes": 116,
    "blob_url": "https://github.com/Team1710CTO/MK3-Swerve/blob/add0ecec2b7efee61f8cab0bdfb267a3a3b0c1c1/src/main/java/frc/robot/subsystems/SwerveDrivetrain.java",
    "raw_url": "https://github.com/Team1710CTO/MK3-Swerve/raw/add0ecec2b7efee61f8cab0bdfb267a3a3b0c1c1/src/main/java/frc/robot/subsystems/SwerveDrivetrain.java",
    "contents_url": "https://api.github.com/repos/Team1710CTO/MK3-Swerve/contents/src/main/java/frc/robot/subsystems/SwerveDrivetrain.java?ref=add0ecec2b7efee61f8cab0bdfb267a3a3b0c1c1",
    "patch": "@@ -7,7 +7,6 @@\n import com.ctre.phoenix.motorcontrol.can.TalonFX;\n import com.ctre.phoenix.sensors.CANCoder;\n \n-\n import edu.wpi.first.wpilibj.geometry.Translation2d;\n import edu.wpi.first.wpilibj.kinematics.ChassisSpeeds;\n import edu.wpi.first.wpilibj.kinematics.SwerveDriveKinematics;\n@@ -17,104 +16,89 @@\n import edu.wpi.first.wpilibj2.command.SubsystemBase;\n import com.kauailabs.navx.frc.AHRS;\n import edu.wpi.first.wpilibj.SerialPort;\n-import edu.wpi.first.wpilibj.SPI;\n import edu.wpi.first.wpilibj.geometry.Rotation2d;\n+\n public class SwerveDrivetrain extends SubsystemBase {\n \n-  //these are limits you can change!!!\n-  public static final double kMaxSpeed = Units.feetToMeters(13.6); // 20 feet per second\n+  // these are limits you can change!!!\n+  public static final double kMaxSpeed = Units.feetToMeters(20); // 20 feet per second\n   public static final double kMaxAngularSpeed = Math.PI; // 1/2 rotation per second\n-  public static double feildCalibration = 0;\n-\n-  //this is where you put the angle offsets you got from the smart dashboard\n+  public static double fieldCalibration = 0;\n \n+  // this is where you put the angle offsets you got from the smart dashboard\n   public static double frontLeftOffset = 0;\n   public static double frontRightOffset = 0;\n   public static double backLeftOffset = 0;\n   public static double backRightOffset = 0;\n \n-\n-  //put your can Id's here!\n-  public static final int frontLeftDriveId = 1; \n-  public static final int frontLeftCANCoderId = 2; \n+  // put your can Id's here!\n+  public static final int frontLeftDriveId = 1;\n+  public static final int frontLeftCANCoderId = 2;\n   public static final int frontLeftSteerId = 3;\n-  //put your can Id's here!\n-  public static final int frontRightDriveId = 4; \n-  public static final int frontRightCANCoderId = 5; \n-  public static final int frontRightSteerId = 6; \n-  //put your can Id's here!\n-  public static final int backLeftDriveId = 10; \n-  public static final int backLeftCANCoderId = 11; \n+  // put your can Id's here!\n+  public static final int frontRightDriveId = 4;\n+  public static final int frontRightCANCoderId = 5;\n+  public static final int frontRightSteerId = 6;\n+  // put your can Id's here!\n+  public static final int backRightDriveId = 7;\n+  public static final int backRightCANCoderId = 8;\n+  public static final int backRightSteerId = 9;\n+  // put your can Id's here!\n+  public static final int backLeftDriveId = 10;\n+  public static final int backLeftCANCoderId = 11;\n   public static final int backLeftSteerId = 12;\n-  //put your can Id's here!\n-\n-  public static final int backRightDriveId = 7; \n-  public static final int backRightCANCoderId = 8; \n-  public static final int backRightSteerId = 9;   \n-  public static AHRS gyro = new AHRS(SPI.Port.kMXP);\n \n   private SwerveDriveKinematics kinematics = new SwerveDriveKinematics(\n-    new Translation2d(\n-      Units.inchesToMeters(10),\n-      Units.inchesToMeters(10)\n-    ),\n-    new Translation2d(\n-      Units.inchesToMeters(10),\n-      Units.inchesToMeters(-10)\n-    ),\n-    new Translation2d(\n-      Units.inchesToMeters(-10),\n-      Units.inchesToMeters(10)\n-    ),\n-    new Translation2d(\n-      Units.inchesToMeters(-10),\n-      Units.inchesToMeters(-10)\n-    )\n-  );\n-\n- \n+      new Translation2d(Units.inchesToMeters(10), Units.inchesToMeters(10)),\n+      new Translation2d(Units.inchesToMeters(10), Units.inchesToMeters(-10)),\n+      new Translation2d(Units.inchesToMeters(-10), Units.inchesToMeters(10)),\n+      new Translation2d(Units.inchesToMeters(-10), Units.inchesToMeters(-10)));\n \n-  private SwerveModuleMK3[] modules = new SwerveModuleMK3[] {\n-\n-    new SwerveModuleMK3(new TalonFX(frontLeftDriveId), new TalonFX(frontLeftSteerId), new CANCoder(frontLeftCANCoderId), Rotation2d.fromDegrees(frontLeftOffset)), // Front Left\n-    new SwerveModuleMK3(new TalonFX(frontRightDriveId), new TalonFX(frontRightSteerId), new CANCoder(frontRightCANCoderId), Rotation2d.fromDegrees(frontRightOffset)), // Front Right\n-    new SwerveModuleMK3(new TalonFX(backLeftDriveId), new TalonFX(backLeftSteerId), new CANCoder(backLeftCANCoderId), Rotation2d.fromDegrees(backLeftOffset)), // Back Left\n-    new SwerveModuleMK3(new TalonFX(backRightDriveId), new TalonFX(backRightSteerId), new CANCoder(backRightCANCoderId), Rotation2d.fromDegrees(backRightOffset))  // Back Right\n+  private final AHRS gyro = new AHRS(SerialPort.Port.kMXP);\n \n+  private SwerveModuleMK3[] modules = new SwerveModuleMK3[] {\n+      new SwerveModuleMK3(new TalonFX(frontLeftDriveId), new TalonFX(frontLeftSteerId),\n+          new CANCoder(frontLeftCANCoderId), frontLeftOffset), // Front Left\n+      new SwerveModuleMK3(new TalonFX(frontRightDriveId), new TalonFX(frontRightSteerId),\n+          new CANCoder(frontRightCANCoderId), frontRightOffset), // Front Right\n+      new SwerveModuleMK3(new TalonFX(backLeftDriveId), new TalonFX(backLeftSteerId), new CANCoder(backLeftCANCoderId),\n+          backLeftOffset), // Back Left\n+      new SwerveModuleMK3(new TalonFX(backRightDriveId), new TalonFX(backRightSteerId),\n+          new CANCoder(backRightCANCoderId), backRightOffset) // Back Right\n   };\n \n   public SwerveDrivetrain() {\n-   // gyro.reset(); \n+    gyro.reset();\n   }\n \n   /**\n    * Method to drive the robot using joystick info.\n    *\n-   * @param xSpeed Speed of the robot in the x direction (forward).\n-   * @param ySpeed Speed of the robot in the y direction (sideways).\n-   * @param rot Angular rate of the robot.\n-   * @param fieldRelative Whether the provided x and y speeds are relative to the field.\n+   * @param xSpeed        Speed of the robot in the x direction (forward).\n+   * @param ySpeed        Speed of the robot in the y direction (sideways).\n+   * @param rot           Angular rate of the robot.\n+   * @param fieldRelative Whether the provided x and y speeds are relative to the\n+   *                      field.\n    * @param calibrateGyro button to recalibrate the gyro offset\n    */\n   public void drive(double xSpeed, double ySpeed, double rot, boolean fieldRelative, boolean calibrateGyro) {\n-    \n-    if(calibrateGyro){\n-      gyro.reset(); //recalibrates gyro offset\n+\n+    if (calibrateGyro) {\n+      fieldCalibration = -gyro.getAngle(); // recalibrates gyro offset\n     }\n \n-    SwerveModuleState[] states =\n-      kinematics.toSwerveModuleStates(\n-        fieldRelative\n-          ? ChassisSpeeds.fromFieldRelativeSpeeds(xSpeed, ySpeed, rot, Rotation2d.fromDegrees(-gyro.getAngle()))\n-          : new ChassisSpeeds(xSpeed, ySpeed, rot));\n+    SwerveModuleState[] states = kinematics\n+        .toSwerveModuleStates(fieldRelative\n+            ? ChassisSpeeds.fromFieldRelativeSpeeds(xSpeed, ySpeed, rot,\n+                Rotation2d.fromDegrees((-gyro.getAngle() + fieldCalibration)))\n+            : new ChassisSpeeds(xSpeed, ySpeed, rot));\n     SwerveDriveKinematics.normalizeWheelSpeeds(states, kMaxSpeed);\n     for (int i = 0; i < states.length; i++) {\n       SwerveModuleMK3 module = modules[i];\n       SwerveModuleState state = states[i];\n-      SmartDashboard.putNumber(String.valueOf(i), module.getRawAngle());\n-      //below is a line to comment out from step 5\n+      SmartDashboard.putNumber(String.valueOf(i), module.getAngle());\n+      // below is a line to comment out from step 5\n       module.setDesiredState(state);\n-      SmartDashboard.putNumber(\"gyro Angle\", gyro.getAngle());\n     }\n   }\n \n@@ -127,4 +111,4 @@ public void periodic() {\n   public void simulationPeriodic() {\n     // This method will be called once per scheduler run during simulation\n   }\n-}\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "3a06d5cd7d62d178acfa45c079fb4c1a5611dda7",
    "filename": "src/main/java/frc/robot/subsystems/SwerveModuleMK3.java",
    "status": "modified",
    "additions": 7,
    "deletions": 15,
    "changes": 22,
    "blob_url": "https://github.com/Team1710CTO/MK3-Swerve/blob/add0ecec2b7efee61f8cab0bdfb267a3a3b0c1c1/src/main/java/frc/robot/subsystems/SwerveModuleMK3.java",
    "raw_url": "https://github.com/Team1710CTO/MK3-Swerve/raw/add0ecec2b7efee61f8cab0bdfb267a3a3b0c1c1/src/main/java/frc/robot/subsystems/SwerveModuleMK3.java",
    "contents_url": "https://api.github.com/repos/Team1710CTO/MK3-Swerve/contents/src/main/java/frc/robot/subsystems/SwerveModuleMK3.java?ref=add0ecec2b7efee61f8cab0bdfb267a3a3b0c1c1",
    "patch": "@@ -7,11 +7,9 @@\n import com.ctre.phoenix.motorcontrol.can.TalonFX;\n import com.ctre.phoenix.motorcontrol.can.TalonFXConfiguration;\n import com.ctre.phoenix.sensors.CANCoder;\n-import com.ctre.phoenix.sensors.CANCoderConfiguration;\n \n import edu.wpi.first.wpilibj.geometry.Rotation2d;\n import edu.wpi.first.wpilibj.kinematics.SwerveModuleState;\n-import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;\n import edu.wpi.first.wpilibj.util.Units;\n \n public class SwerveModuleMK3 {\n@@ -32,9 +30,9 @@\n   private TalonFX driveMotor;\n   private TalonFX angleMotor;\n   private CANCoder canCoder;\n-  private Rotation2d offset;\n+  private double offset;\n \n-  public SwerveModuleMK3(TalonFX driveMotor, TalonFX angleMotor, CANCoder canCoder, Rotation2d offset) {\n+  public SwerveModuleMK3(TalonFX driveMotor, TalonFX angleMotor, CANCoder canCoder, double offset) {\n     this.driveMotor = driveMotor;\n     this.angleMotor = angleMotor;\n     this.canCoder = canCoder;\n@@ -51,6 +49,7 @@ public SwerveModuleMK3(TalonFX driveMotor, TalonFX angleMotor, CANCoder canCoder\n     angleTalonFXConfiguration.remoteFilter0.remoteSensorSource = RemoteSensorSource.CANCoder;\n     \n     angleTalonFXConfiguration.primaryPID.selectedFeedbackSensor = FeedbackDevice.RemoteSensor0;\n+    angleTalonFXConfiguration.integratedSensorOffsetDegrees = offset; //sets angle offset for PID within the talons\n     angleMotor.configAllSettings(angleTalonFXConfiguration);\n     angleMotor.setNeutralMode(NeutralMode.Brake); //not needed but nice to keep the robot stopped when you want it stopped\n \n@@ -63,22 +62,15 @@ public SwerveModuleMK3(TalonFX driveMotor, TalonFX angleMotor, CANCoder canCoder\n \n     driveMotor.configAllSettings(driveTalonFXConfiguration);\n     driveMotor.setNeutralMode(NeutralMode.Brake);\n-\n-    CANCoderConfiguration canCoderConfiguration = new CANCoderConfiguration();\n-    canCoderConfiguration.magnetOffsetDegrees = offset.getDegrees();\n-    canCoder.configAllSettings(canCoderConfiguration);\n   }\n \n \n   /**\n    * Gets the relative rotational position of the module\n    * @return The relative rotational position of the angle motor in degrees\n    */\n-  public Rotation2d getAngle() {\n-    return Rotation2d.fromDegrees(canCoder.getAbsolutePosition()); //include angle offset\n-  }\n-  public double getRawAngle() {\n-    return canCoder.getAbsolutePosition(); //include angle offset\n+  public double getAngle() {\n+    return Math.toDegrees(Math.toRadians(canCoder.getAbsolutePosition()) - Math.toRadians(offset)); //include angle offset\n   }\n   //:)\n   /**\n@@ -87,7 +79,7 @@ public double getRawAngle() {\n    */\n   public void setDesiredState(SwerveModuleState desiredState) {\n \n-    Rotation2d currentRotation = getAngle();\n+    Rotation2d currentRotation = Rotation2d.fromDegrees(getAngle());\n     SwerveModuleState state = SwerveModuleState.optimize(desiredState, currentRotation);\n     \n     // Find the difference between our current rotational position + our new rotational position\n@@ -108,4 +100,4 @@ public void setDesiredState(SwerveModuleState desiredState) {\n     driveMotor.set(TalonFXControlMode.PercentOutput, feetPerSecond / SwerveDrivetrain.kMaxSpeed);\n   }\n \n-}\n+}\n\\ No newline at end of file"
  }
]
