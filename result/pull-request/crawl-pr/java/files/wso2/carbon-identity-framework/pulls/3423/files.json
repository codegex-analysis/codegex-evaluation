[
  {
    "sha": "259962dd3529c8e835e93cc7f87e377763668627",
    "filename": "components/application-mgt/org.wso2.carbon.identity.application.mgt.ui/src/main/resources/org/wso2/carbon/identity/application/mgt/ui/i18n/Resources.properties",
    "status": "modified",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/wso2/carbon-identity-framework/blob/a43e7899aaaf40a3d2993e58dbd3f8c795078e04/components/application-mgt/org.wso2.carbon.identity.application.mgt.ui/src/main/resources/org/wso2/carbon/identity/application/mgt/ui/i18n/Resources.properties",
    "raw_url": "https://github.com/wso2/carbon-identity-framework/raw/a43e7899aaaf40a3d2993e58dbd3f8c795078e04/components/application-mgt/org.wso2.carbon.identity.application.mgt.ui/src/main/resources/org/wso2/carbon/identity/application/mgt/ui/i18n/Resources.properties",
    "contents_url": "https://api.github.com/repos/wso2/carbon-identity-framework/contents/components/application-mgt/org.wso2.carbon.identity.application.mgt.ui/src/main/resources/org/wso2/carbon/identity/application/mgt/ui/i18n/Resources.properties?ref=a43e7899aaaf40a3d2993e58dbd3f8c795078e04",
    "patch": "@@ -12,8 +12,10 @@ title.table.oauth.config.client.key=Client ID\n title.table.oauth.config.client.secrete=Client Secrete\n title.table.claim.idp.claim=Local Claim\n title.table.role.idp.role=Local Role\n+title.table.role.idp.group=Local Group\n title.table.claim.sp.claim=Service Provider Claim\n title.table.role.sp.role=Service Provider Role\n+title.table.role.sp.group=Service Provider Group\n title.service.providers=Service Providers\n title.local.service.providers=Resident Service Provider\n title.service.providers.add=Add New Service Provider\n@@ -23,6 +25,7 @@ title.config.app.authentication.type=Advanced Authentication Configuration\n title.sp.select.mode=Select Mode\n outbound.title.config.app.authentication.type=Local & Outbound Authentication Configuration\n title.config.app.authorization.permission=Role/Permission Configuration\n+title.config.app.authorization.permission.with.group=Group/Permission Configuration\n title.config.app.claim=Claim Configuration\n title.config.app.basic.config=Basic Information\n title.oauth.application=OAuth Application Credentials\n@@ -44,6 +47,7 @@ button.copy=Copy\n button.add.permission=Add Permission\n button.add.claim.mapping=Add Claim URI\n button.add.role.mapping=Add Role Mapping\n+button.add.group.mapping=Add Group Mapping\n button.add.step=Add Authentication Step\n alert.please.provide.service.provider.name=Please provide Service Provider Name\n alert.please.provide.service.provider.description=Please provide Service Provider description\n@@ -169,6 +173,7 @@ help.passive.sts.wreply=Enter RP endpoint URL that handles the response\n help.openid=Enter realm identifier for OpenID\n help.claim.mapping=Local Claim to Service Provider Claim Mapping\n help.role.mapping=Local role to service provider role mapping\n+help.group.mapping=Local Group to service provider Group mapping\n help.permission.add=Service provider specific permissions\n help.local.authnticators=Local authenticators for request path authentication\n edit.client.oauth.oidc=Edit OAuth/OpenID Connect Configuration"
  },
  {
    "sha": "256867b3e593623dfa21cd3f6288b21977d8e95a",
    "filename": "components/application-mgt/org.wso2.carbon.identity.application.mgt.ui/src/main/resources/web/application/configure-service-provider.jsp",
    "status": "modified",
    "additions": 15,
    "deletions": 7,
    "changes": 22,
    "blob_url": "https://github.com/wso2/carbon-identity-framework/blob/a43e7899aaaf40a3d2993e58dbd3f8c795078e04/components/application-mgt/org.wso2.carbon.identity.application.mgt.ui/src/main/resources/web/application/configure-service-provider.jsp",
    "raw_url": "https://github.com/wso2/carbon-identity-framework/raw/a43e7899aaaf40a3d2993e58dbd3f8c795078e04/components/application-mgt/org.wso2.carbon.identity.application.mgt.ui/src/main/resources/web/application/configure-service-provider.jsp",
    "contents_url": "https://api.github.com/repos/wso2/carbon-identity-framework/contents/components/application-mgt/org.wso2.carbon.identity.application.mgt.ui/src/main/resources/web/application/configure-service-provider.jsp?ref=a43e7899aaaf40a3d2993e58dbd3f8c795078e04",
    "patch": "@@ -371,7 +371,8 @@\n             //Invalid cert data, ignore showing cert information in the UI\n         }\n     }\n-\n+    \n+    boolean isGroupVsRoleSeparationImprovementsEnabled = IdentityUtil.isGroupsVsRolesSeparationImprovementsEnabled();\n %>\n \n <script>\n@@ -2015,7 +2016,9 @@\n                     </div>\n                 </div> --%>\n                 <h2 id=\"authorization_permission_head\" class=\"sectionSeperator trigger active\">\n-                    <a href=\"#\"><fmt:message key=\"title.config.app.authorization.permission\"/></a>\n+                    <a href=\"#\"><fmt:message key=\"<%=isGroupVsRoleSeparationImprovementsEnabled ?\n+                    \"title.config.app.authorization.permission.with.group\" : \"title.config.app.authorization.permission\"\n+                    %>\"/></a>\n                 </h2>\n                 <div class=\"toggle_container sectionSub\" style=\"margin-bottom:10px;\" id=\"permissionConfRow\">\n                     <h2 id=\"permission_mapping_head\" class=\"sectionSeperator trigger active\"\n@@ -2073,7 +2076,8 @@\n                         </table>\n                     </div>\n                     <h2 id=\"role_mapping_head\" class=\"sectionSeperator trigger active\" style=\"background-color: beige;\">\n-                        <a href=\"#\">Role Mapping</a>\n+                        <a href=\"#\"><%=isGroupVsRoleSeparationImprovementsEnabled ? \"Group Mapping\" : \"Role Mapping\"%>\n+                        </a>\n                     </h2>\n                     <div class=\"toggle_container sectionSub\" style=\"margin-bottom:10px;display: none;\"\n                          id=\"roleMappingRowRow\">\n@@ -2082,19 +2086,23 @@\n                                 <td>\n                                     <a id=\"roleMappingAddLink\" class=\"icon-link\"\n                                        style=\"background-image: url(images/add.gif);margin-left:0;\"><fmt:message\n-                                        key='button.add.role.mapping'/></a>\n+                                        key='<%=isGroupVsRoleSeparationImprovementsEnabled ?\n+                                            \"button.add.group.mapping\" : \"button.add.role.mapping\"%>'/></a>\n                                     <div style=\"clear:both\"/>\n                                     <div class=\"sectionHelp\">\n-                                        <fmt:message key='help.role.mapping'/>\n+                                        <fmt:message key='<%=isGroupVsRoleSeparationImprovementsEnabled ?\n+                                            \"help.group.mapping\" : \"help.role.mapping\"%>'/>\n                                     </div>\n                                 </td>\n                             </tr>\n                         </table>\n                         <table class=\"styledLeft\" id=\"roleMappingAddTable\" style=\"display:none\">\n                             <thead>\n                             <tr>\n-                                <th class=\"leftCol-big\"><fmt:message key='title.table.role.idp.role'/></th>\n-                                <th class=\"leftCol-big\"><fmt:message key='title.table.role.sp.role'/></th>\n+                                <th class=\"leftCol-big\"><fmt:message key='<%=isGroupVsRoleSeparationImprovementsEnabled\n+                               ? \"title.table.role.idp.group\" : \"title.table.role.idp.role\"%>'/></th>\n+                                <th class=\"leftCol-big\"><fmt:message key='<%=isGroupVsRoleSeparationImprovementsEnabled\n+                                ? \"title.table.role.sp.group\" : \"title.table.role.sp.group\"%>'/></th>\n                                 <th><fmt:message key='config.application.authz.permissions.action'/></th>\n                             </tr>\n                             </thead>"
  },
  {
    "sha": "55f49f894728dc4590a69f2848dbda0d8f751252",
    "filename": "components/application-mgt/org.wso2.carbon.identity.application.mgt/src/main/java/org/wso2/carbon/identity/application/mgt/validator/DefaultApplicationValidator.java",
    "status": "modified",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/wso2/carbon-identity-framework/blob/a43e7899aaaf40a3d2993e58dbd3f8c795078e04/components/application-mgt/org.wso2.carbon.identity.application.mgt/src/main/java/org/wso2/carbon/identity/application/mgt/validator/DefaultApplicationValidator.java",
    "raw_url": "https://github.com/wso2/carbon-identity-framework/raw/a43e7899aaaf40a3d2993e58dbd3f8c795078e04/components/application-mgt/org.wso2.carbon.identity.application.mgt/src/main/java/org/wso2/carbon/identity/application/mgt/validator/DefaultApplicationValidator.java",
    "contents_url": "https://api.github.com/repos/wso2/carbon-identity-framework/contents/components/application-mgt/org.wso2.carbon.identity.application.mgt/src/main/java/org/wso2/carbon/identity/application/mgt/validator/DefaultApplicationValidator.java?ref=a43e7899aaaf40a3d2993e58dbd3f8c795078e04",
    "patch": "@@ -48,17 +48,24 @@\n import org.wso2.carbon.identity.claim.metadata.mgt.ClaimMetadataManagementServiceImpl;\n import org.wso2.carbon.identity.claim.metadata.mgt.exception.ClaimMetadataException;\n import org.wso2.carbon.identity.claim.metadata.mgt.model.ClaimDialect;\n+import org.wso2.carbon.identity.core.util.IdentityUtil;\n import org.wso2.carbon.idp.mgt.IdentityProviderManagementException;\n import org.wso2.carbon.idp.mgt.IdentityProviderManager;\n import org.wso2.carbon.user.api.UserStoreException;\n import org.wso2.carbon.user.api.UserStoreManager;\n+import org.wso2.carbon.user.core.UserCoreConstants;\n \n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.List;\n import java.util.Map;\n import java.util.concurrent.atomic.AtomicBoolean;\n import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+\n+import static org.wso2.carbon.user.core.UserCoreConstants.APPLICATION_DOMAIN;\n+import static org.wso2.carbon.user.core.UserCoreConstants.INTERNAL_DOMAIN;\n+import static org.wso2.carbon.user.core.UserCoreConstants.WORKFLOW_DOMAIN;\n \n /**\n  * Validator class to be used to validate the consistency of the Application/Service Provider, before it is persisted.\n@@ -80,6 +87,8 @@\n     private static final String SP_CLAIM_NOT_AVAILABLE = \"Application Claim URI '%s' is not defined \" +\n             \"for application:%s.\";\n     private static final String ROLE_NOT_AVAILABLE = \"Local Role %s is not available in the server.\";\n+    private static final String INTERNAL_ROLES_PROHIBITED_FOR_ROLE_MAPPING = \"Internal Roles including: %s, are \" +\n+            \"prohibited for role mapping. Use groups instead.\";\n     public static final String IS_HANDLER = \"IS_HANDLER\";\n \n     @Override\n@@ -442,6 +451,13 @@ private void validateRoleConfigs(List<String> validationMsg, PermissionsAndRoleC\n             UserStoreManager userStoreManager = CarbonContext.getThreadLocalCarbonContext().getUserRealm()\n                     .getUserStoreManager();\n             for (RoleMapping roleMapping : permissionsAndRoleConfig.getRoleMappings()) {\n+                if (IdentityUtil.isGroupsVsRolesSeparationImprovementsEnabled()) {\n+                    if (isInternalRole(roleMapping.getLocalRole().getLocalRoleName())) {\n+                        validationMsg.add(String.format(INTERNAL_ROLES_PROHIBITED_FOR_ROLE_MAPPING, roleMapping\n+                                .getLocalRole().getLocalRoleName()));\n+                        break;\n+                    }\n+                }\n                 if (!userStoreManager.isExistingRole(roleMapping.getLocalRole().getLocalRoleName())) {\n                     validationMsg.add(String.format(ROLE_NOT_AVAILABLE, roleMapping.getLocalRole().getLocalRoleName()));\n                     break;\n@@ -451,5 +467,11 @@ private void validateRoleConfigs(List<String> validationMsg, PermissionsAndRoleC\n             validationMsg.add(String.format(\"Error when checking the existence of local roles in %s.\", tenantDomain));\n         }\n     }\n+\n+    private boolean isInternalRole(String localRoleName) {\n+\n+        return Stream.of(INTERNAL_DOMAIN, APPLICATION_DOMAIN, WORKFLOW_DOMAIN).anyMatch(domain -> localRoleName\n+                .toUpperCase().startsWith((domain + UserCoreConstants.DOMAIN_SEPARATOR).toUpperCase()));\n+    }\n }\n "
  },
  {
    "sha": "4e5b9a76404daf696aa105b435917bee911191de",
    "filename": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/handler/claims/impl/DefaultClaimHandler.java",
    "status": "modified",
    "additions": 4,
    "deletions": 3,
    "changes": 7,
    "blob_url": "https://github.com/wso2/carbon-identity-framework/blob/a43e7899aaaf40a3d2993e58dbd3f8c795078e04/components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/handler/claims/impl/DefaultClaimHandler.java",
    "raw_url": "https://github.com/wso2/carbon-identity-framework/raw/a43e7899aaaf40a3d2993e58dbd3f8c795078e04/components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/handler/claims/impl/DefaultClaimHandler.java",
    "contents_url": "https://api.github.com/repos/wso2/carbon-identity-framework/contents/components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/handler/claims/impl/DefaultClaimHandler.java?ref=a43e7899aaaf40a3d2993e58dbd3f8c795078e04",
    "patch": "@@ -63,6 +63,7 @@\n import java.util.stream.Collectors;\n \n import static org.apache.commons.collections.CollectionUtils.isNotEmpty;\n+import static org.wso2.carbon.identity.core.util.IdentityUtil.getLocalGroupsClaimURI;\n \n public class DefaultClaimHandler implements ClaimHandler {\n \n@@ -984,13 +985,13 @@ private boolean useLocalClaimDialectForClaimMappings() {\n      */\n     private void handleRoleClaim(AuthenticationContext context, Map<String, String> mappedAttrs) {\n \n-        if (mappedAttrs.containsKey(FrameworkConstants.LOCAL_ROLE_CLAIM_URI)) {\n-            String[] groups = mappedAttrs.get(FrameworkConstants.LOCAL_ROLE_CLAIM_URI).split(Pattern\n+        if (mappedAttrs.containsKey(getLocalGroupsClaimURI())) {\n+            String[] groups = mappedAttrs.get(getLocalGroupsClaimURI()).split(Pattern\n                     .quote(FrameworkUtils.getMultiAttributeSeparator()));\n             SequenceConfig sequenceConfig = context.getSequenceConfig();\n             // Execute only if it has allowed removing userstore domain from the sp level configurations.\n             if (isRemoveUserDomainInRole(sequenceConfig)) {\n-                mappedAttrs.put(FrameworkConstants.LOCAL_ROLE_CLAIM_URI, FrameworkUtils\n+                mappedAttrs.put(getLocalGroupsClaimURI(), FrameworkUtils\n                         .removeDomainFromNamesExcludeHybrid(Arrays.asList(groups)));\n             }\n         }"
  },
  {
    "sha": "bf4002bbdcbb3aea177819e1ebde609a2cd24d41",
    "filename": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/handler/request/impl/JITProvisioningPostAuthenticationHandler.java",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/wso2/carbon-identity-framework/blob/a43e7899aaaf40a3d2993e58dbd3f8c795078e04/components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/handler/request/impl/JITProvisioningPostAuthenticationHandler.java",
    "raw_url": "https://github.com/wso2/carbon-identity-framework/raw/a43e7899aaaf40a3d2993e58dbd3f8c795078e04/components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/handler/request/impl/JITProvisioningPostAuthenticationHandler.java",
    "contents_url": "https://api.github.com/repos/wso2/carbon-identity-framework/contents/components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/handler/request/impl/JITProvisioningPostAuthenticationHandler.java?ref=a43e7899aaaf40a3d2993e58dbd3f8c795078e04",
    "patch": "@@ -88,6 +88,7 @@\n import static org.wso2.carbon.identity.application.authentication.framework.util.FrameworkErrorConstants.ErrorMessages.ERROR_WHILE_GETTING_REALM_IN_POST_AUTHENTICATION;\n import static org.wso2.carbon.identity.application.authentication.framework.util.FrameworkErrorConstants.ErrorMessages.ERROR_WHILE_TRYING_TO_GET_CLAIMS_WHILE_TRYING_TO_PASSWORD_PROVISION;\n import static org.wso2.carbon.identity.application.authentication.framework.util.FrameworkErrorConstants.ErrorMessages.ERROR_WHILE_TRYING_TO_PROVISION_USER_WITHOUT_PASSWORD_PROVISIONING;\n+import static org.wso2.carbon.identity.core.util.IdentityUtil.getLocalGroupsClaimURI;\n \n /**\n  * This is post authentication handler responsible for JIT provisioning.\n@@ -671,7 +672,7 @@ private void callDefaultProvisioningHandler(String username, AuthenticationConte\n \n         if (claimMapping != null) {\n             //Ex. Standard dialects like OIDC.\n-            idpRoleClaimUri = claimMapping.get(FrameworkConstants.LOCAL_ROLE_CLAIM_URI);\n+            idpRoleClaimUri = claimMapping.get(getLocalGroupsClaimURI());\n         } else if (idPStandardDialect == null && !useDefaultIdpDialect) {\n             //Ex. SAML custom claims.\n             idpRoleClaimUri = FrameworkUtils.getIdpRoleClaimUri(externalIdPConfig);"
  },
  {
    "sha": "19e9b3ff919c30c1d5f078a4568d64b368b770d1",
    "filename": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/handler/sequence/impl/DefaultRequestPathBasedSequenceHandler.java",
    "status": "modified",
    "additions": 4,
    "deletions": 2,
    "changes": 6,
    "blob_url": "https://github.com/wso2/carbon-identity-framework/blob/a43e7899aaaf40a3d2993e58dbd3f8c795078e04/components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/handler/sequence/impl/DefaultRequestPathBasedSequenceHandler.java",
    "raw_url": "https://github.com/wso2/carbon-identity-framework/raw/a43e7899aaaf40a3d2993e58dbd3f8c795078e04/components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/handler/sequence/impl/DefaultRequestPathBasedSequenceHandler.java",
    "contents_url": "https://api.github.com/repos/wso2/carbon-identity-framework/contents/components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/handler/sequence/impl/DefaultRequestPathBasedSequenceHandler.java?ref=a43e7899aaaf40a3d2993e58dbd3f8c795078e04",
    "patch": "@@ -48,6 +48,8 @@\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n \n+import static org.wso2.carbon.identity.core.util.IdentityUtil.getLocalGroupsClaimURI;\n+\n public class DefaultRequestPathBasedSequenceHandler implements RequestPathBasedSequenceHandler {\n \n     private static final Log log = LogFactory.getLog(DefaultRequestPathBasedSequenceHandler.class);\n@@ -241,15 +243,15 @@ protected String getSpRoleClaimUri(ApplicationConfig appConfig) throws Framework\n             if (spToLocalClaimMapping != null && !spToLocalClaimMapping.isEmpty()) {\n \n                 for (Entry<String, String> entry : spToLocalClaimMapping.entrySet()) {\n-                    if (FrameworkConstants.LOCAL_ROLE_CLAIM_URI.equals(entry.getValue())) {\n+                    if (getLocalGroupsClaimURI().equals(entry.getValue())) {\n                         return entry.getKey();\n                     }\n                 }\n             }\n         }\n \n         if (spRoleClaimUri == null) {\n-            spRoleClaimUri = FrameworkConstants.LOCAL_ROLE_CLAIM_URI;\n+            spRoleClaimUri = getLocalGroupsClaimURI();\n             if (log.isDebugEnabled()) {\n                 String serviceProvider = appConfig.getApplicationName();\n                 log.debug(\"Service Provider Role Claim URI not configured for SP: \" + serviceProvider +"
  },
  {
    "sha": "626c374aa77662c31965283a3d5fccbd69f2488d",
    "filename": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/handler/sequence/impl/DefaultSequenceHandlerUtils.java",
    "status": "modified",
    "additions": 6,
    "deletions": 7,
    "changes": 13,
    "blob_url": "https://github.com/wso2/carbon-identity-framework/blob/a43e7899aaaf40a3d2993e58dbd3f8c795078e04/components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/handler/sequence/impl/DefaultSequenceHandlerUtils.java",
    "raw_url": "https://github.com/wso2/carbon-identity-framework/raw/a43e7899aaaf40a3d2993e58dbd3f8c795078e04/components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/handler/sequence/impl/DefaultSequenceHandlerUtils.java",
    "contents_url": "https://api.github.com/repos/wso2/carbon-identity-framework/contents/components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/handler/sequence/impl/DefaultSequenceHandlerUtils.java?ref=a43e7899aaaf40a3d2993e58dbd3f8c795078e04",
    "patch": "@@ -42,7 +42,7 @@\n \n import static org.wso2.carbon.identity.application.authentication.framework.util.FrameworkConstants.InternalRoleDomains.APPLICATION_DOMAIN;\n import static org.wso2.carbon.identity.application.authentication.framework.util.FrameworkConstants.InternalRoleDomains.WORKFLOW_DOMAIN;\n-\n+import static org.wso2.carbon.identity.core.util.IdentityUtil.getLocalGroupsClaimURI;\n \n /**\n  * Common utility used by Default Sequence Handlers.\n@@ -242,10 +242,9 @@ private static boolean isLocalClaimDialect(AuthenticationContext context) {\n     private static String getStandardRoleClaimURI(String standardDialect, String tenantDomain)\n             throws FrameworkException {\n \n-        String roleClaim = getStandardClaimURIFromLocal(standardDialect, tenantDomain, FrameworkConstants\n-                .LOCAL_ROLE_CLAIM_URI);\n+        String roleClaim = getStandardClaimURIFromLocal(standardDialect, tenantDomain, getLocalGroupsClaimURI());\n         if (StringUtils.isBlank(roleClaim)) {\n-            return FrameworkConstants.LOCAL_ROLE_CLAIM_URI;\n+            return getLocalGroupsClaimURI();\n         }\n         return roleClaim;\n     }\n@@ -295,7 +294,7 @@ private static String getSPMappedLocalRoleClaimURI(ApplicationConfig appConfig)\n                 }\n             }\n         }\n-        return FrameworkConstants.LOCAL_ROLE_CLAIM_URI;\n+        return getLocalGroupsClaimURI();\n     }\n \n     /**\n@@ -317,7 +316,7 @@ public static String getSpRoleClaimUri(ApplicationConfig appConfig) {\n \n             if (MapUtils.isNotEmpty(spToLocalClaimMapping)) {\n                 for (Map.Entry<String, String> entry : spToLocalClaimMapping.entrySet()) {\n-                    if (FrameworkConstants.LOCAL_ROLE_CLAIM_URI.equals(entry.getValue())) {\n+                    if (getLocalGroupsClaimURI().equals(entry.getValue())) {\n                         spRoleClaimUri = entry.getKey();\n                         break;\n                     }\n@@ -326,7 +325,7 @@ public static String getSpRoleClaimUri(ApplicationConfig appConfig) {\n         }\n \n         if (StringUtils.isEmpty(spRoleClaimUri)) {\n-            spRoleClaimUri = FrameworkConstants.LOCAL_ROLE_CLAIM_URI;\n+            spRoleClaimUri = getLocalGroupsClaimURI();\n             if (log.isDebugEnabled()) {\n                 String serviceProvider = appConfig.getApplicationName();\n                 log.debug(\"Service Provider Role Claim URI not configured for SP: \" + serviceProvider +"
  },
  {
    "sha": "0f9cc7687c68e0efa69137379f30574fe9110d4a",
    "filename": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/util/FrameworkUtils.java",
    "status": "modified",
    "additions": 5,
    "deletions": 3,
    "changes": 8,
    "blob_url": "https://github.com/wso2/carbon-identity-framework/blob/a43e7899aaaf40a3d2993e58dbd3f8c795078e04/components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/util/FrameworkUtils.java",
    "raw_url": "https://github.com/wso2/carbon-identity-framework/raw/a43e7899aaaf40a3d2993e58dbd3f8c795078e04/components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/util/FrameworkUtils.java",
    "contents_url": "https://api.github.com/repos/wso2/carbon-identity-framework/contents/components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/util/FrameworkUtils.java?ref=a43e7899aaaf40a3d2993e58dbd3f8c795078e04",
    "patch": "@@ -167,6 +167,7 @@\n import static org.wso2.carbon.identity.application.authentication.framework.util.FrameworkConstants.REQUEST_PARAM_SP;\n import static org.wso2.carbon.identity.application.authentication.framework.util.FrameworkConstants.RequestParams.USER_TENANT_DOMAIN_HINT;\n import static org.wso2.carbon.identity.core.util.IdentityTenantUtil.isLegacySaaSAuthenticationEnabled;\n+import static org.wso2.carbon.identity.core.util.IdentityUtil.getLocalGroupsClaimURI;\n \n public class FrameworkUtils {\n \n@@ -2085,7 +2086,7 @@ public static String getIdpRoleClaimUri(ExternalIdPConfig externalIdPConfig) {\n             ClaimMapping[] idpToLocalClaimMapping = externalIdPConfig.getClaimMappings();\n             if (idpToLocalClaimMapping != null && idpToLocalClaimMapping.length > 0) {\n                 for (ClaimMapping mapping : idpToLocalClaimMapping) {\n-                    if (FrameworkConstants.LOCAL_ROLE_CLAIM_URI.equals(mapping.getLocalClaim().getClaimUri())\n+                    if (getLocalGroupsClaimURI().equals(mapping.getLocalClaim().getClaimUri())\n                             && mapping.getRemoteClaim() != null) {\n                         return mapping.getRemoteClaim().getClaimUri();\n                     }\n@@ -2148,7 +2149,8 @@ public static String getMappedIdpRoleClaimUri(String idpRoleClaimUri, StepConfig\n \n     /**\n      * Returns the local claim uri that is mapped for the IdP role claim uri configured.\n-     * If no role claim uri is configured for the IdP returns the local role claim 'http://wso2.org/claims/role'.\n+     * If no role claim uri is configured for the IdP returns the local claim by calling 'IdentityUtils\n+     * .#getLocalGroupsClaimURI()'.\n      *\n      * @param externalIdPConfig IdP configurations\n      * @return local claim uri mapped for the IdP role claim uri.\n@@ -2169,7 +2171,7 @@ public static String getLocalClaimUriMappedForIdPRoleClaim(ExternalIdPConfig ext\n                 }\n             }\n         }\n-        return FrameworkConstants.LOCAL_ROLE_CLAIM_URI;\n+        return getLocalGroupsClaimURI();\n     }\n \n     /**"
  },
  {
    "sha": "269de54211721eec88e9f751f57db3528682efc0",
    "filename": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/test/java/org/wso2/carbon/identity/application/authentication/framework/handler/request/impl/PostAuthAssociationHandlerTest.java",
    "status": "modified",
    "additions": 5,
    "deletions": 4,
    "changes": 9,
    "blob_url": "https://github.com/wso2/carbon-identity-framework/blob/a43e7899aaaf40a3d2993e58dbd3f8c795078e04/components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/test/java/org/wso2/carbon/identity/application/authentication/framework/handler/request/impl/PostAuthAssociationHandlerTest.java",
    "raw_url": "https://github.com/wso2/carbon-identity-framework/raw/a43e7899aaaf40a3d2993e58dbd3f8c795078e04/components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/test/java/org/wso2/carbon/identity/application/authentication/framework/handler/request/impl/PostAuthAssociationHandlerTest.java",
    "contents_url": "https://api.github.com/repos/wso2/carbon-identity-framework/contents/components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/test/java/org/wso2/carbon/identity/application/authentication/framework/handler/request/impl/PostAuthAssociationHandlerTest.java?ref=a43e7899aaaf40a3d2993e58dbd3f8c795078e04",
    "patch": "@@ -66,6 +66,7 @@\n import static org.mockito.Mockito.mock;\n import static org.mockito.Mockito.when;\n import static org.powermock.api.mockito.PowerMockito.mockStatic;\n+import static org.wso2.carbon.identity.core.util.IdentityUtil.getLocalGroupsClaimURI;\n \n /**\n  * This is a test class for {@link PostAuthAssociationHandler}.\n@@ -122,7 +123,7 @@ protected void setupSuite() throws Exception {\n         ClaimHandler claimHandler = PowerMockito.mock(ClaimHandler.class);\n         Map<String, String> claims = new HashMap<>();\n         claims.put(\"claim1\", \"value1\");\n-        claims.put(FrameworkConstants.LOCAL_ROLE_CLAIM_URI, String.format(\"%s,%s\", ORI_ROLE_1, ORI_ROLE_2));\n+        claims.put(getLocalGroupsClaimURI(), String.format(\"%s,%s\", ORI_ROLE_1, ORI_ROLE_2));\n         PowerMockito.doReturn(claims).when(claimHandler).handleClaimMappings(any(StepConfig.class),\n                 any(AuthenticationContext.class), any(Map.class), anyBoolean());\n         PowerMockito.when(FrameworkUtils.getClaimHandler()).thenReturn(claimHandler);\n@@ -205,8 +206,8 @@ private AuthenticationContext processAndGetAuthenticationContext(ServiceProvider\n         }\n \n         if (withSpRoleMapping) {\n-            sequenceConfig.getApplicationConfig().getClaimMappings().put(FrameworkConstants.LOCAL_ROLE_CLAIM_URI,\n-                    FrameworkConstants.LOCAL_ROLE_CLAIM_URI);\n+            sequenceConfig.getApplicationConfig().getClaimMappings().put(getLocalGroupsClaimURI(),\n+                    getLocalGroupsClaimURI());\n             sequenceConfig.getApplicationConfig().getServiceProvider().getClaimConfig().setLocalClaimDialect(true);\n             sequenceConfig.getApplicationConfig().getRoleMappings().put(ORI_ROLE_1, SP_MAPPED_ROLE_1);\n             sequenceConfig.getApplicationConfig().getRoleMappings().put(ORI_ROLE_2, SP_MAPPED_ROLE_2);\n@@ -218,7 +219,7 @@ private AuthenticationContext processAndGetAuthenticationContext(ServiceProvider\n     private boolean isSpRoleMappingSuccessful(Map<ClaimMapping, String> authenticatedUserAttributes) {\n \n         for (Map.Entry<ClaimMapping, String> entry : authenticatedUserAttributes.entrySet()) {\n-            if (FrameworkConstants.LOCAL_ROLE_CLAIM_URI.equals(entry.getKey().getLocalClaim().getClaimUri())) {\n+            if (getLocalGroupsClaimURI().equals(entry.getKey().getLocalClaim().getClaimUri())) {\n                 List<String> roles = Arrays.asList(entry.getValue().split(\",\"));\n                 return roles.size() == 2 && roles.contains(SP_MAPPED_ROLE_1) && roles.contains(SP_MAPPED_ROLE_2);\n             }"
  },
  {
    "sha": "ece800ca7ea1ac1d18bbcf3504880c353641874c",
    "filename": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/test/java/org/wso2/carbon/identity/application/authentication/framework/handler/sequence/impl/DefaultRequestPathBasedSequenceHandlerTest.java",
    "status": "modified",
    "additions": 9,
    "deletions": 8,
    "changes": 17,
    "blob_url": "https://github.com/wso2/carbon-identity-framework/blob/a43e7899aaaf40a3d2993e58dbd3f8c795078e04/components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/test/java/org/wso2/carbon/identity/application/authentication/framework/handler/sequence/impl/DefaultRequestPathBasedSequenceHandlerTest.java",
    "raw_url": "https://github.com/wso2/carbon-identity-framework/raw/a43e7899aaaf40a3d2993e58dbd3f8c795078e04/components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/test/java/org/wso2/carbon/identity/application/authentication/framework/handler/sequence/impl/DefaultRequestPathBasedSequenceHandlerTest.java",
    "contents_url": "https://api.github.com/repos/wso2/carbon-identity-framework/contents/components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/test/java/org/wso2/carbon/identity/application/authentication/framework/handler/sequence/impl/DefaultRequestPathBasedSequenceHandlerTest.java?ref=a43e7899aaaf40a3d2993e58dbd3f8c795078e04",
    "patch": "@@ -70,6 +70,7 @@\n import static org.powermock.api.mockito.PowerMockito.when;\n import static org.testng.Assert.assertEquals;\n import static org.testng.Assert.assertNotNull;\n+import static org.wso2.carbon.identity.core.util.IdentityUtil.getLocalGroupsClaimURI;\n \n @PrepareForTest({FrameworkUtils.class, ApplicationMgtSystemConfig.class, IdentityTenantUtil.class})\n public class DefaultRequestPathBasedSequenceHandlerTest {\n@@ -267,7 +268,7 @@ public void testHandleAuthSuccess() throws Exception {\n                         }},\n                         new HashMap<Object, Object>() {\n                             {\n-                                put(FrameworkConstants.LOCAL_ROLE_CLAIM_URI, \"localRole1,localRole2\");\n+                                put(getLocalGroupsClaimURI(), \"localRole1,localRole2\");\n                             }\n                         },\n                         SUBJECT_CLAIM_URI,\n@@ -281,7 +282,7 @@ public void testHandleAuthSuccess() throws Exception {\n                         }},\n                         new HashMap<Object, Object>() {\n                             {\n-                                put(FrameworkConstants.LOCAL_ROLE_CLAIM_URI, \"localRole1,localRole2\");\n+                                put(getLocalGroupsClaimURI(), \"localRole1,localRole2\");\n                                 put(SUBJECT_CLAIM_URI, \"mapped_attribute_claim_subject\");\n                             }\n                         }, SUBJECT_CLAIM_URI,\n@@ -292,7 +293,7 @@ public void testHandleAuthSuccess() throws Exception {\n                         null,\n                         new HashMap<Object, Object>() {\n                             {\n-                                put(FrameworkConstants.LOCAL_ROLE_CLAIM_URI, \"localRole1,localRole2\");\n+                                put(getLocalGroupsClaimURI(), \"localRole1,localRole2\");\n                                 put(SUBJECT_CLAIM_URI, \"mapped_attribute_claim_subject\");\n                             }\n                         }, SUBJECT_CLAIM_URI,\n@@ -379,7 +380,7 @@ public void testGetServiceProviderMappedUserRoles(Map<String, String> spRoleMapp\n     private Object[][] getSpRoleClaimUriData() {\n         return new Object[][]{\n                 {\"SP_ROLE_CLAIM\", \"SP_ROLE_CLAIM\"},\n-                {null, FrameworkConstants.LOCAL_ROLE_CLAIM_URI}\n+                {null, getLocalGroupsClaimURI()}\n         };\n     }\n \n@@ -400,21 +401,21 @@ public void testGetSpRoleClaimUri(String spRoleClaimUri,\n         return new Object[][]{\n                 {       // SP mapped role claim\n                         new HashMap<String, String>() {{\n-                            put(\"SP_ROLE_CLAIM\", FrameworkConstants.LOCAL_ROLE_CLAIM_URI);\n+                            put(\"SP_ROLE_CLAIM\", getLocalGroupsClaimURI());\n                         }},\n                         \"SP_ROLE_CLAIM\"\n                 },\n                 {       // Role claim not among SP mapped claims\n                         new HashMap<String, String>() {{\n                             put(\"SP_CLAIM\", \"LOCAL_CLAIM\");\n                         }},\n-                        FrameworkConstants.LOCAL_ROLE_CLAIM_URI\n+                        getLocalGroupsClaimURI()\n                 },\n                 {      // No SP mapped claims\n-                        new HashMap<>(), FrameworkConstants.LOCAL_ROLE_CLAIM_URI\n+                        new HashMap<>(), getLocalGroupsClaimURI()\n                 },\n                 {\n-                        null, FrameworkConstants.LOCAL_ROLE_CLAIM_URI\n+                        null, getLocalGroupsClaimURI()\n                 }\n         };\n     }"
  },
  {
    "sha": "f415fc555069c3583ce5efafc06a8158eac27a50",
    "filename": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/test/java/org/wso2/carbon/identity/application/authentication/framework/handler/sequence/impl/DefaultStepBasedSequenceHandlerTest.java",
    "status": "modified",
    "additions": 9,
    "deletions": 8,
    "changes": 17,
    "blob_url": "https://github.com/wso2/carbon-identity-framework/blob/a43e7899aaaf40a3d2993e58dbd3f8c795078e04/components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/test/java/org/wso2/carbon/identity/application/authentication/framework/handler/sequence/impl/DefaultStepBasedSequenceHandlerTest.java",
    "raw_url": "https://github.com/wso2/carbon-identity-framework/raw/a43e7899aaaf40a3d2993e58dbd3f8c795078e04/components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/test/java/org/wso2/carbon/identity/application/authentication/framework/handler/sequence/impl/DefaultStepBasedSequenceHandlerTest.java",
    "contents_url": "https://api.github.com/repos/wso2/carbon-identity-framework/contents/components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/test/java/org/wso2/carbon/identity/application/authentication/framework/handler/sequence/impl/DefaultStepBasedSequenceHandlerTest.java?ref=a43e7899aaaf40a3d2993e58dbd3f8c795078e04",
    "patch": "@@ -87,6 +87,7 @@\n import static org.testng.Assert.assertNull;\n import static org.testng.Assert.assertTrue;\n import static org.testng.Assert.fail;\n+import static org.wso2.carbon.identity.core.util.IdentityUtil.getLocalGroupsClaimURI;\n \n @PrepareForTest({\n                         FrameworkUtils.class, IdentityApplicationManagementUtil.class, ApplicationMgtSystemConfig.class,\n@@ -174,8 +175,8 @@ public void testGetServiceProviderMappedUserRoles(Map<String, String> spRoleMapp\n     private Object[][] getSpRoleClaimUriData() {\n         return new Object[][]{\n                 {\"SP_ROLE_CLAIM\", \"SP_ROLE_CLAIM\"},\n-                {null, FrameworkConstants.LOCAL_ROLE_CLAIM_URI},\n-                {\"\", FrameworkConstants.LOCAL_ROLE_CLAIM_URI}\n+                {null, getLocalGroupsClaimURI()},\n+                {\"\", getLocalGroupsClaimURI()}\n         };\n     }\n \n@@ -195,21 +196,21 @@ public void testGetSpRoleClaimUri(String spRoleClaimUri,\n         return new Object[][]{\n                 {       // SP mapped role claim\n                         new HashMap<String, String>() {{\n-                            put(\"SP_ROLE_CLAIM\", FrameworkConstants.LOCAL_ROLE_CLAIM_URI);\n+                            put(\"SP_ROLE_CLAIM\", getLocalGroupsClaimURI());\n                         }},\n                         \"SP_ROLE_CLAIM\"\n                 },\n                 {       // Role claim not among SP mapped claims\n                         new HashMap<String, String>() {{\n                             put(\"SP_CLAIM\", \"LOCAL_CLAIM\");\n                         }},\n-                        FrameworkConstants.LOCAL_ROLE_CLAIM_URI\n+                        getLocalGroupsClaimURI()\n                 },\n                 {      // No SP mapped claims\n-                        new HashMap<>(), FrameworkConstants.LOCAL_ROLE_CLAIM_URI\n+                        new HashMap<>(), getLocalGroupsClaimURI()\n                 },\n                 {\n-                        null, FrameworkConstants.LOCAL_ROLE_CLAIM_URI\n+                        null, getLocalGroupsClaimURI()\n                 }\n         };\n     }\n@@ -252,7 +253,7 @@ public void testGetIdpRoleClaimUri(String idpRoleClaimUri,\n         return new Object[][]{\n                 {       // SP mapped role claim\n                         new ClaimMapping[]{\n-                                ClaimMapping.build(FrameworkConstants.LOCAL_ROLE_CLAIM_URI, \"IDP_ROLE_CLAIM\", \"\", true)\n+                                ClaimMapping.build(getLocalGroupsClaimURI(), \"IDP_ROLE_CLAIM\", \"\", true)\n                         },\n                         \"IDP_ROLE_CLAIM\"\n                 },\n@@ -264,7 +265,7 @@ public void testGetIdpRoleClaimUri(String idpRoleClaimUri,\n                 },\n                 {       // Role claim among claim mappings but remote claim is null\n                         new ClaimMapping[]{\n-                                ClaimMapping.build(FrameworkConstants.LOCAL_ROLE_CLAIM_URI, null, null, true)\n+                                ClaimMapping.build(getLocalGroupsClaimURI(), null, null, true)\n                         },\n                         null\n                 },"
  },
  {
    "sha": "82af4fb731f1a3621ccc94599f641cec7b8867f0",
    "filename": "components/claim-mgt/org.wso2.carbon.claim.mgt.ui/src/main/java/org/wso2/carbon/claim/mgt/ui/client/ClaimAdminClient.java",
    "status": "modified",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/wso2/carbon-identity-framework/blob/a43e7899aaaf40a3d2993e58dbd3f8c795078e04/components/claim-mgt/org.wso2.carbon.claim.mgt.ui/src/main/java/org/wso2/carbon/claim/mgt/ui/client/ClaimAdminClient.java",
    "raw_url": "https://github.com/wso2/carbon-identity-framework/raw/a43e7899aaaf40a3d2993e58dbd3f8c795078e04/components/claim-mgt/org.wso2.carbon.claim.mgt.ui/src/main/java/org/wso2/carbon/claim/mgt/ui/client/ClaimAdminClient.java",
    "contents_url": "https://api.github.com/repos/wso2/carbon-identity-framework/contents/components/claim-mgt/org.wso2.carbon.claim.mgt.ui/src/main/java/org/wso2/carbon/claim/mgt/ui/client/ClaimAdminClient.java?ref=a43e7899aaaf40a3d2993e58dbd3f8c795078e04",
    "patch": "@@ -111,6 +111,14 @@ public ClaimDialectDTO getAllClaimMappingsByDialectWithRole(String dialect)\n             role.setClaimUri(\"http://wso2.org/claims/role\");\n             mapping.setClaim(role);\n             newClaims[i] = mapping;\n+\n+            // If role group separation is enabled, we need to send the group claim also as UI might need that.\n+            ClaimMappingDTO groupsMapping = new ClaimMappingDTO();\n+            ClaimDTO groups = new ClaimDTO();\n+            groups.setClaimUri(\"http://wso2.org/claims/groups\");\n+            groupsMapping.setClaim(groups);\n+            newClaims[i] = groupsMapping;\n+\n             claims.setClaimMappings(newClaims);\n             return claims;\n         } catch (Exception e) {"
  },
  {
    "sha": "ee15f1a84fd6a18ef0a65ced004050fa36da1bdf",
    "filename": "components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/util/IdentityUtil.java",
    "status": "modified",
    "additions": 36,
    "deletions": 0,
    "changes": 36,
    "blob_url": "https://github.com/wso2/carbon-identity-framework/blob/a43e7899aaaf40a3d2993e58dbd3f8c795078e04/components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/util/IdentityUtil.java",
    "raw_url": "https://github.com/wso2/carbon-identity-framework/raw/a43e7899aaaf40a3d2993e58dbd3f8c795078e04/components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/util/IdentityUtil.java",
    "contents_url": "https://api.github.com/repos/wso2/carbon-identity-framework/contents/components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/util/IdentityUtil.java?ref=a43e7899aaaf40a3d2993e58dbd3f8c795078e04",
    "patch": "@@ -29,9 +29,11 @@\n import org.w3c.dom.Document;\n import org.w3c.dom.Node;\n import org.wso2.carbon.CarbonConstants;\n+import org.wso2.carbon.CarbonException;\n import org.wso2.carbon.base.MultitenantConstants;\n import org.wso2.carbon.base.ServerConfiguration;\n import org.wso2.carbon.caching.impl.CachingConstants;\n+import org.wso2.carbon.core.util.AdminServicesUtil;\n import org.wso2.carbon.core.util.Utils;\n import org.wso2.carbon.identity.base.IdentityConstants;\n import org.wso2.carbon.identity.base.IdentityException;\n@@ -72,9 +74,12 @@\n import java.security.cert.X509Certificate;\n import java.util.ArrayList;\n import java.util.Arrays;\n+import java.util.Collections;\n import java.util.HashMap;\n+import java.util.HashSet;\n import java.util.List;\n import java.util.Map;\n+import java.util.Set;\n import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n import java.util.Base64;\n@@ -1397,4 +1402,35 @@ public static int getDefaultItemsPerPage() {\n         }\n         return defaultItemsPerPage;\n     }\n+\n+    /**\n+     * With group role separation, user roles are separated into groups and internal roles and, to support backward\n+     * compatibility, the legacy wso2.role claim still returns both groups and internal roles. This method provides\n+     * claim URIs of these group, role claims.\n+     *\n+     * @return An unmodifiable set of claim URIs which contain user groups, roles, or both.\n+     */\n+    public static Set<String> getRoleGroupClaims() {\n+\n+        Set<String> roleGroupClaimURIs = new HashSet<>();\n+        roleGroupClaimURIs.add(UserCoreConstants.ROLE_CLAIM);\n+        if (isGroupsVsRolesSeparationImprovementsEnabled()) {\n+            roleGroupClaimURIs.add(UserCoreConstants.INTERNAL_ROLES_CLAIM);\n+            roleGroupClaimURIs.add(UserCoreConstants.USER_STORE_GROUPS_CLAIM);\n+        }\n+        return Collections.unmodifiableSet(roleGroupClaimURIs);\n+    }\n+\n+    /**\n+     * With group role separation, user roles are separated into groups and internal roles and, to support backward\n+     * compatibility, the legacy wso2.role claim still returns both groups and internal roles. This method provides\n+     * the claim URI which contain user groups, or both groups and roles in a backward compatible manner.\n+     *\n+     * @return Claim URI for the user groups, or both groups and roles based on the backward compatibility.\n+     */\n+    public static String getLocalGroupsClaimURI() {\n+\n+        return isGroupsVsRolesSeparationImprovementsEnabled() ?\n+                UserCoreConstants.USER_STORE_GROUPS_CLAIM : UserCoreConstants.ROLE_CLAIM;\n+    }\n }"
  },
  {
    "sha": "5838e5e8354a2af3a366b8a52e7426dcb36d9e03",
    "filename": "components/idp-mgt/org.wso2.carbon.idp.mgt.ui/src/main/resources/org/wso2/carbon/idp/mgt/ui/i18n/Resources.properties",
    "status": "modified",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/wso2/carbon-identity-framework/blob/a43e7899aaaf40a3d2993e58dbd3f8c795078e04/components/idp-mgt/org.wso2.carbon.idp.mgt.ui/src/main/resources/org/wso2/carbon/idp/mgt/ui/i18n/Resources.properties",
    "raw_url": "https://github.com/wso2/carbon-identity-framework/raw/a43e7899aaaf40a3d2993e58dbd3f8c795078e04/components/idp-mgt/org.wso2.carbon.idp.mgt.ui/src/main/resources/org/wso2/carbon/idp/mgt/ui/i18n/Resources.properties",
    "contents_url": "https://api.github.com/repos/wso2/carbon-identity-framework/contents/components/idp-mgt/org.wso2.carbon.idp.mgt.ui/src/main/resources/org/wso2/carbon/idp/mgt/ui/i18n/Resources.properties?ref=a43e7899aaaf40a3d2993e58dbd3f8c795078e04",
    "patch": "@@ -16,6 +16,7 @@ description=Description:\n description.help=A meaningful description about the identity provider\n claim.config.head=Claim Configuration\n role.config.head=Role Configuration\n+group.config.head=Group Configuration\n out.bound.auth.config=Federated Authenticators\n in.bound.provisioning.config=Just-in-Time Provisioning\n out.bound.provisioning.config=Outbound Provisioning Connectors\n@@ -58,6 +59,7 @@ add.claim=Add Claim Mapping\n delete.claim=Delete Claim URI\n default.value=Default Value\n add.role.mapping=Add Role Mapping\n+add.group.mapping=Add Group Mapping\n user.id.claim.uri=User ID Claim URI\n user.id.claim.uri.help=Specifies the claim URI that identifies the user identifier at the identity provider\n role.claim.uri=Role Claim URI\n@@ -70,14 +72,18 @@ claim.mapping.delete=Delete Claim URI Mappings\n idp.claim=Identity Provider Claim URI\n tenant.claim=Local Claim URI\n roles=Identity Provider Roles\n+groups=Identity Provider Groups\n roles.mapping.help=Add identity provider role mapping\n+groups.mapping.help=Add identity provider group mapping\n local.role=Local Role\n+local.group=Local Group\n add.role=Add Role\n delete.role=Delete Role\n role.mappings=Role Mappings\n role.mappings.help=Map Identity Provider roles to local roles. E.g. \"idp_role_1:local_role_1,idp_role_2:local_role_2\"\n role.mapping.delete=Delete Role Mappings\n idp.role=Identity Provider Role\n+idp.group=Identity Provider Group\n user.store.id=User Store Domain ID\n tenant.role=Local Role\n token.endpoint.alias=Token Endpoint Alias"
  },
  {
    "sha": "3c8e937164f105f8e77017f17b00ed971bd308a7",
    "filename": "components/idp-mgt/org.wso2.carbon.idp.mgt.ui/src/main/resources/web/idpmgt/idp-mgt-edit.jsp",
    "status": "modified",
    "additions": 15,
    "deletions": 6,
    "changes": 21,
    "blob_url": "https://github.com/wso2/carbon-identity-framework/blob/a43e7899aaaf40a3d2993e58dbd3f8c795078e04/components/idp-mgt/org.wso2.carbon.idp.mgt.ui/src/main/resources/web/idpmgt/idp-mgt-edit.jsp",
    "raw_url": "https://github.com/wso2/carbon-identity-framework/raw/a43e7899aaaf40a3d2993e58dbd3f8c795078e04/components/idp-mgt/org.wso2.carbon.idp.mgt.ui/src/main/resources/web/idpmgt/idp-mgt-edit.jsp",
    "contents_url": "https://api.github.com/repos/wso2/carbon-identity-framework/contents/components/idp-mgt/org.wso2.carbon.idp.mgt.ui/src/main/resources/web/idpmgt/idp-mgt-edit.jsp?ref=a43e7899aaaf40a3d2993e58dbd3f8c795078e04",
    "patch": "@@ -1229,6 +1229,8 @@\n     if (scimDefaultPwd == null) {\n         scimDefaultPwd = \"\";\n     }\n+    \n+    boolean isGroupVsRoleSeparationImprovementsEnabled = IdentityUtil.isGroupsVsRolesSeparationImprovementsEnabled();\n \n %>\n \n@@ -3541,27 +3543,34 @@\n \n \n                 <h2 id=\"role_permission_config_head\" class=\"sectionSeperator trigger active\">\n-                    <a href=\"#\"><fmt:message key=\"role.config.head\"/></a>\n+                    <a href=\"#\"><fmt:message key='<%=isGroupVsRoleSeparationImprovementsEnabled ? \"group.config.head\"\n+                     : \"role.config.head\"%>'/></a>\n                 </h2>\n \n                 <div class=\"toggle_container sectionSub\" style=\"margin-bottom:10px;\" id=\"roleConfig\">\n                     <table>\n                         <tr>\n-                            <td class=\"leftCol-med labelField\"><fmt:message key='roles'/>:</td>\n+                            <td class=\"leftCol-med labelField\"><fmt:message key='<%=\n+                           isGroupVsRoleSeparationImprovementsEnabled ? \"groups\" : \"roles\"%>'/>:</td>\n                             <td>\n                                 <a id=\"roleAddLink\" class=\"icon-link\"\n                                    style=\"margin-left:0;background-image:url(images/add.gif);\"><fmt:message\n-                                        key='add.role.mapping'/></a>\n+                                        key='<%=isGroupVsRoleSeparationImprovementsEnabled ? \"add.group.mapping\" :\n+                                        \"add.role.mapping\"%>'/></a>\n \n                                 <div style=\"clear:both\"/>\n                                 <div class=\"sectionHelp\">\n-                                    <fmt:message key='roles.mapping.help'/>\n+                                    <fmt:message key='<%=isGroupVsRoleSeparationImprovementsEnabled ?\n+                                    \"groups.mapping.help\" : \"roles.mapping.help\"%>'/>\n                                 </div>\n                                 <table class=\"styledLeft\" id=\"roleAddTable\" style=\"display:none\">\n                                     <thead>\n                                     <tr>\n-                                        <th class=\"leftCol-big\"><fmt:message key='idp.role'/></th>\n-                                        <th class=\"leftCol-big\"><fmt:message key='local.role'/></th>\n+                                        <th class=\"leftCol-big\"><fmt:message key='<%=\n+                                        isGroupVsRoleSeparationImprovementsEnabled ? \"idp.group\" : \"idp.role\"%>'/></th>\n+                                        <th class=\"leftCol-big\"><fmt:message key='<%=\n+                                        isGroupVsRoleSeparationImprovementsEnabled ? \"local.group\" : \"local.role\"%>'/>\n+                                        </th>\n                                         <th><fmt:message key='actions'/></th>\n                                     </tr>\n                                     </thead>"
  },
  {
    "sha": "b9dcd056822410a84093d09e1aa131f8ad93c92c",
    "filename": "components/idp-mgt/org.wso2.carbon.idp.mgt/src/main/java/org/wso2/carbon/idp/mgt/IdentityProviderManager.java",
    "status": "modified",
    "additions": 25,
    "deletions": 0,
    "changes": 25,
    "blob_url": "https://github.com/wso2/carbon-identity-framework/blob/a43e7899aaaf40a3d2993e58dbd3f8c795078e04/components/idp-mgt/org.wso2.carbon.idp.mgt/src/main/java/org/wso2/carbon/idp/mgt/IdentityProviderManager.java",
    "raw_url": "https://github.com/wso2/carbon-identity-framework/raw/a43e7899aaaf40a3d2993e58dbd3f8c795078e04/components/idp-mgt/org.wso2.carbon.idp.mgt/src/main/java/org/wso2/carbon/idp/mgt/IdentityProviderManager.java",
    "contents_url": "https://api.github.com/repos/wso2/carbon-identity-framework/contents/components/idp-mgt/org.wso2.carbon.idp.mgt/src/main/java/org/wso2/carbon/idp/mgt/IdentityProviderManager.java?ref=a43e7899aaaf40a3d2993e58dbd3f8c795078e04",
    "patch": "@@ -66,6 +66,7 @@\n import org.wso2.carbon.idp.mgt.util.MetadataConverter;\n import org.wso2.carbon.user.api.UserStoreException;\n import org.wso2.carbon.user.api.UserStoreManager;\n+import org.wso2.carbon.user.core.UserCoreConstants;\n import org.wso2.carbon.utils.multitenancy.MultitenantConstants;\n \n import java.io.IOException;\n@@ -85,8 +86,14 @@\n import java.util.Map;\n import java.util.Set;\n import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+\n import javax.xml.stream.XMLStreamException;\n \n+import static org.wso2.carbon.user.core.UserCoreConstants.APPLICATION_DOMAIN;\n+import static org.wso2.carbon.user.core.UserCoreConstants.INTERNAL_DOMAIN;\n+import static org.wso2.carbon.user.core.UserCoreConstants.WORKFLOW_DOMAIN;\n+\n public class IdentityProviderManager implements IdpManager {\n \n     private static final Log log = LogFactory.getLog(IdentityProviderManager.class);\n@@ -2605,6 +2612,18 @@ private void verifyAndUpdateRoleConfiguration(String tenantDomain, int tenantId,\n                 if (StringUtils.isNotBlank(mapping.getLocalRole().getUserStoreId())) {\n                     role = IdentityUtil.addDomainToName(role, mapping.getLocalRole().getUserStoreId());\n                 }\n+\n+                if (IdentityUtil.isGroupsVsRolesSeparationImprovementsEnabled()) {\n+                    // Only Groups are allowed for role mapping.\n+                    if (isInternalRole(role)) {\n+                        if (log.isDebugEnabled()) {\n+                            log.debug(\"Internal roles including: \" + role + \", are not allowed for the identity \" +\n+                                    \"provider role mapping.\");\n+                        }\n+                        continue;\n+                    }\n+                }\n+\n                 // Remove invalid mappings if local role does not exists.\n                 if (usm.isExistingRole(role)) {\n                     validRoleMappings.add(mapping);\n@@ -2921,4 +2940,10 @@ private void validateOutboundProvisioningRoles(IdentityProvider identityProvider\n                     IdPManagementConstants.ErrorMessage.ERROR_CODE_VALIDATING_OUTBOUND_PROVISIONING_ROLES, null, e);\n         }\n     }\n+\n+    private boolean isInternalRole(String localRoleName) {\n+\n+        return Stream.of(INTERNAL_DOMAIN, APPLICATION_DOMAIN, WORKFLOW_DOMAIN).anyMatch(domain -> localRoleName\n+                .toUpperCase().startsWith((domain + UserCoreConstants.DOMAIN_SEPARATOR).toUpperCase()));\n+    }\n }"
  },
  {
    "sha": "80af3d227df9067acfac8c22f4714ecc3e4ec22a",
    "filename": "features/identity-core/org.wso2.carbon.identity.core.server.feature/resources/identity.xml",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/wso2/carbon-identity-framework/blob/a43e7899aaaf40a3d2993e58dbd3f8c795078e04/features/identity-core/org.wso2.carbon.identity.core.server.feature/resources/identity.xml",
    "raw_url": "https://github.com/wso2/carbon-identity-framework/raw/a43e7899aaaf40a3d2993e58dbd3f8c795078e04/features/identity-core/org.wso2.carbon.identity.core.server.feature/resources/identity.xml",
    "contents_url": "https://api.github.com/repos/wso2/carbon-identity-framework/contents/features/identity-core/org.wso2.carbon.identity.core.server.feature/resources/identity.xml?ref=a43e7899aaaf40a3d2993e58dbd3f8c795078e04",
    "patch": "@@ -1879,7 +1879,7 @@\n     <!-- This configuration specifies the claims that should be logged to \"audit.log\" upon changes. -->\n     <!--<LoggableUserClaims>-->\n         <!--<LoggableUserClaim>http://wso2.org/claims/identity/accountLocked</LoggableUserClaim>-->\n-        <!--<LoggableUserClaim>http://wso2.org/claims/role</LoggableUserClaim>-->\n+        <!--<LoggableUserClaim>http://wso2.org/claims/groups</LoggableUserClaim>-->\n     <!--</LoggableUserClaims>-->\n \n     <!--Configuration Store properties-->"
  },
  {
    "sha": "94a1a2e9bd9bb0e5ebe72aab1593eab03679096f",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/wso2/carbon-identity-framework/blob/a43e7899aaaf40a3d2993e58dbd3f8c795078e04/pom.xml",
    "raw_url": "https://github.com/wso2/carbon-identity-framework/raw/a43e7899aaaf40a3d2993e58dbd3f8c795078e04/pom.xml",
    "contents_url": "https://api.github.com/repos/wso2/carbon-identity-framework/contents/pom.xml?ref=a43e7899aaaf40a3d2993e58dbd3f8c795078e04",
    "patch": "@@ -1742,7 +1742,7 @@\n         <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n \n         <!-- Carbon kernel version -->\n-        <carbon.kernel.version>4.6.2-m4</carbon.kernel.version>\n+        <carbon.kernel.version>4.6.2-m7</carbon.kernel.version>\n         <carbon.kernel.feature.version>4.6.0</carbon.kernel.feature.version>\n         <carbon.kernel.package.import.version.range>[4.5.0, 5.0.0)</carbon.kernel.package.import.version.range>\n         <carbon.kernel.registry.imp.pkg.version>[1.0.1, 2.0.0)</carbon.kernel.registry.imp.pkg.version>"
  }
]
