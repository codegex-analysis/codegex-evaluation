[
  {
    "sha": "e7544a86396521c46188ceb44d0d4521299c299c",
    "filename": "enforcer/src/main/java/org/wso2/micro/gateway/enforcer/security/jwt/JWTAuthenticator.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/wso2/product-microgateway/blob/630f0732967e32c6bf33ae35d3873f07e7312580/enforcer/src/main/java/org/wso2/micro/gateway/enforcer/security/jwt/JWTAuthenticator.java",
    "raw_url": "https://github.com/wso2/product-microgateway/raw/630f0732967e32c6bf33ae35d3873f07e7312580/enforcer/src/main/java/org/wso2/micro/gateway/enforcer/security/jwt/JWTAuthenticator.java",
    "contents_url": "https://api.github.com/repos/wso2/product-microgateway/contents/enforcer/src/main/java/org/wso2/micro/gateway/enforcer/security/jwt/JWTAuthenticator.java?ref=630f0732967e32c6bf33ae35d3873f07e7312580",
    "patch": "@@ -190,7 +190,7 @@ private String generateAndRetrieveJWTToken(String tokenSignature, JWTInfoDto jwt\n \n         String endUserToken = null;\n         boolean valid = false;\n-        String jwtTokenCacheKey = jwtInfoDto.getApicontext().concat(\":\").concat(jwtInfoDto.getVersion()).concat(\":\")\n+        String jwtTokenCacheKey = jwtInfoDto.getApiContext().concat(\":\").concat(jwtInfoDto.getVersion()).concat(\":\")\n                 .concat(tokenSignature);\n         JWTConfigurationDto jwtConfigurationDto = ConfigHolder.getInstance().getConfig().getJwtConfigurationDto();\n         // Get the jwt generator class (Default jwt generator class)"
  },
  {
    "sha": "242c68a0041c69fb1853eab79946ec8b5a0a379d",
    "filename": "enforcer/src/main/java/org/wso2/micro/gateway/enforcer/util/FilterUtils.java",
    "status": "modified",
    "additions": 11,
    "deletions": 11,
    "changes": 22,
    "blob_url": "https://github.com/wso2/product-microgateway/blob/630f0732967e32c6bf33ae35d3873f07e7312580/enforcer/src/main/java/org/wso2/micro/gateway/enforcer/util/FilterUtils.java",
    "raw_url": "https://github.com/wso2/product-microgateway/raw/630f0732967e32c6bf33ae35d3873f07e7312580/enforcer/src/main/java/org/wso2/micro/gateway/enforcer/util/FilterUtils.java",
    "contents_url": "https://api.github.com/repos/wso2/product-microgateway/contents/enforcer/src/main/java/org/wso2/micro/gateway/enforcer/util/FilterUtils.java?ref=630f0732967e32c6bf33ae35d3873f07e7312580",
    "patch": "@@ -252,7 +252,7 @@ public static JWTInfoDto generateJWTInfoDto(JSONObject subscribedAPI, JWTValidat\n         jwtInfoDto.setJwtValidationInfo(jwtValidationInfo);\n         String apiContext = requestContext.getMathedAPI().getAPIConfig().getBasePath();\n         String apiVersion = requestContext.getMathedAPI().getAPIConfig().getVersion();\n-        jwtInfoDto.setApicontext(apiContext);\n+        jwtInfoDto.setApiContext(apiContext);\n         jwtInfoDto.setVersion(apiVersion);\n         constructJWTContent(subscribedAPI, apiKeyValidationInfoDTO, jwtInfoDto);\n         return jwtInfoDto;\n@@ -262,15 +262,15 @@ private static void constructJWTContent(JSONObject subscribedAPI,\n                                             APIKeyValidationInfoDTO apiKeyValidationInfoDTO, JWTInfoDto jwtInfoDto) {\n \n         if (apiKeyValidationInfoDTO != null) {\n-            jwtInfoDto.setApplicationid(apiKeyValidationInfoDTO.getApplicationId());\n-            jwtInfoDto.setApplicationname(apiKeyValidationInfoDTO.getApplicationName());\n-            jwtInfoDto.setApplicationtier(apiKeyValidationInfoDTO.getApplicationTier());\n-            jwtInfoDto.setKeytype(apiKeyValidationInfoDTO.getType());\n+            jwtInfoDto.setApplicationId(apiKeyValidationInfoDTO.getApplicationId());\n+            jwtInfoDto.setApplicationName(apiKeyValidationInfoDTO.getApplicationName());\n+            jwtInfoDto.setApplicationTier(apiKeyValidationInfoDTO.getApplicationTier());\n+            jwtInfoDto.setKeyType(apiKeyValidationInfoDTO.getType());\n             jwtInfoDto.setSubscriber(apiKeyValidationInfoDTO.getSubscriber());\n             jwtInfoDto.setSubscriptionTier(apiKeyValidationInfoDTO.getTier());\n             jwtInfoDto.setApiName(apiKeyValidationInfoDTO.getApiName());\n-            jwtInfoDto.setEndusertenantid(0);\n-            jwtInfoDto.setApplicationuuid(apiKeyValidationInfoDTO.getApplicationUUID());\n+            jwtInfoDto.setEndUserTenantId(0);\n+            jwtInfoDto.setApplicationUUId(apiKeyValidationInfoDTO.getApplicationUUID());\n             jwtInfoDto.setAppAttributes(apiKeyValidationInfoDTO.getAppAttributes());\n         } else if (subscribedAPI != null) {\n             // If the user is subscribed to the API\n@@ -280,18 +280,18 @@ private static void constructJWTContent(JSONObject subscribedAPI,\n             String subscriptionTenantDomain =\n                     subscribedAPI.getAsString(JwtConstants.SUBSCRIBER_TENANT_DOMAIN);\n             jwtInfoDto.setSubscriptionTier(subscriptionTier);\n-            jwtInfoDto.setEndusertenantid(0);\n+            jwtInfoDto.setEndUserTenantId(0);\n \n             Map<String, Object> claims = jwtInfoDto.getJwtValidationInfo().getClaims();\n             if (claims.get(JwtConstants.APPLICATION) != null) {\n                 JSONObject\n                         applicationObj = (JSONObject) claims.get(JwtConstants.APPLICATION);\n-                jwtInfoDto.setApplicationid(\n+                jwtInfoDto.setApplicationId(\n                         String.valueOf(applicationObj.getAsNumber(JwtConstants.APPLICATION_ID)));\n                 jwtInfoDto\n-                        .setApplicationname(applicationObj.getAsString(JwtConstants.APPLICATION_NAME));\n+                        .setApplicationName(applicationObj.getAsString(JwtConstants.APPLICATION_NAME));\n                 jwtInfoDto\n-                        .setApplicationtier(applicationObj.getAsString(JwtConstants.APPLICATION_TIER));\n+                        .setApplicationTier(applicationObj.getAsString(JwtConstants.APPLICATION_TIER));\n                 jwtInfoDto.setSubscriber(applicationObj.getAsString(JwtConstants.APPLICATION_OWNER));\n             }\n         }"
  },
  {
    "sha": "391e123a38df7f53f6f07e9a9d49b5885b958276",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/wso2/product-microgateway/blob/630f0732967e32c6bf33ae35d3873f07e7312580/pom.xml",
    "raw_url": "https://github.com/wso2/product-microgateway/raw/630f0732967e32c6bf33ae35d3873f07e7312580/pom.xml",
    "contents_url": "https://api.github.com/repos/wso2/product-microgateway/contents/pom.xml?ref=630f0732967e32c6bf33ae35d3873f07e7312580",
    "patch": "@@ -313,7 +313,7 @@\n         <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n \n         <andes.client.version>3.3.12</andes.client.version>\n-        <apim.common.version>9.0.0</apim.common.version>\n+        <apim.common.version>9.0.70</apim.common.version>\n         <build.helper.plugin.version>3.2.0</build.helper.plugin.version>\n         <commons.version>3.9</commons.version>\n         <commons.io.version>2.6</commons.io.version>"
  }
]
