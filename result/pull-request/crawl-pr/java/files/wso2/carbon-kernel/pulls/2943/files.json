[
  {
    "sha": "cd059cdc81432ecb048b34184a18b274df86b3a2",
    "filename": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/UserCoreConstants.java",
    "status": "modified",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/wso2/carbon-kernel/blob/0ac5e9403e643495cd25b50e1595bd5e3358a2cf/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/UserCoreConstants.java",
    "raw_url": "https://github.com/wso2/carbon-kernel/raw/0ac5e9403e643495cd25b50e1595bd5e3358a2cf/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/UserCoreConstants.java",
    "contents_url": "https://api.github.com/repos/wso2/carbon-kernel/contents/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/UserCoreConstants.java?ref=0ac5e9403e643495cd25b50e1595bd5e3358a2cf",
    "patch": "@@ -205,6 +205,10 @@\n         // Configuration to enable or disable groups and roles separation feature.\n         public static final String PROPERTY_GROUP_AND_ROLE_SEPARATION_ENABLED = \"GroupAndRoleSeparationEnabled\";\n \n+        // Configuration to enable or disable groups and roles separation improvements.\n+        public static final String PROPERTY_GROUP_AND_ROLE_SEPARATION_IMPROVEMENTS_ENABLED =\n+                \"GroupAndRoleSeparationImprovementsEnabled\";\n+\n         public static final String PROPERTY_CASE_SENSITIVITY = \"CaseSensitiveAuthorizationRules\";\n \n         //configuration to identify the cache uniquely"
  },
  {
    "sha": "e054895341a87c513ce37edf832657e755d698c2",
    "filename": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/authorization/JDBCAuthorizationManager.java",
    "status": "modified",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/wso2/carbon-kernel/blob/0ac5e9403e643495cd25b50e1595bd5e3358a2cf/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/authorization/JDBCAuthorizationManager.java",
    "raw_url": "https://github.com/wso2/carbon-kernel/raw/0ac5e9403e643495cd25b50e1595bd5e3358a2cf/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/authorization/JDBCAuthorizationManager.java",
    "contents_url": "https://api.github.com/repos/wso2/carbon-kernel/contents/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/authorization/JDBCAuthorizationManager.java?ref=0ac5e9403e643495cd25b50e1595bd5e3358a2cf",
    "patch": "@@ -68,6 +68,7 @@\n     private boolean preserveCaseForResources = true;\n     private boolean verifyByRetrievingAllUserRoles;\n     private boolean isRoleAndGroupSeparationEnabled;\n+    private boolean isRoleAndGroupSeparationImprovementsEnabled;\n     private String cacheIdentifier;\n     private int tenantId;\n     private String isCascadeDeleteEnabled;\n@@ -105,6 +106,12 @@ public JDBCAuthorizationManager(RealmConfiguration realmConfig, Map<String, Obje\n         if (Boolean.parseBoolean(realmConfig.getAuthorizationManagerProperty(\n                 UserCoreConstants.RealmConfig.PROPERTY_GROUP_AND_ROLE_SEPARATION_ENABLED))) {\n             isRoleAndGroupSeparationEnabled = true;\n+\n+            // Only if the group role separation is enabled.\n+            if (Boolean.parseBoolean(realmConfig.getAuthorizationManagerProperty(\n+                    UserCoreConstants.RealmConfig.PROPERTY_GROUP_AND_ROLE_SEPARATION_IMPROVEMENTS_ENABLED))) {\n+                isRoleAndGroupSeparationImprovementsEnabled = true;\n+            }\n         }\n \n         if (!realmConfig.getAuthzProperties().containsKey(DELETE_ROLE_PERMISSIONS)) {"
  },
  {
    "sha": "6141853334a9bf43b5c51805570906d5a721abb0",
    "filename": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/AbstractUserStoreManager.java",
    "status": "modified",
    "additions": 10,
    "deletions": 15,
    "changes": 25,
    "blob_url": "https://github.com/wso2/carbon-kernel/blob/0ac5e9403e643495cd25b50e1595bd5e3358a2cf/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/AbstractUserStoreManager.java",
    "raw_url": "https://github.com/wso2/carbon-kernel/raw/0ac5e9403e643495cd25b50e1595bd5e3358a2cf/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/AbstractUserStoreManager.java",
    "contents_url": "https://api.github.com/repos/wso2/carbon-kernel/contents/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/AbstractUserStoreManager.java?ref=0ac5e9403e643495cd25b50e1595bd5e3358a2cf",
    "patch": "@@ -110,6 +110,7 @@\n import static org.wso2.carbon.user.core.constants.UserCoreErrorConstants.ErrorMessages.ERROR_CODE_DUPLICATE_WHILE_ADDING_A_USER;\n import static org.wso2.carbon.user.core.constants.UserCoreErrorConstants.ErrorMessages.ERROR_CODE_DUPLICATE_WHILE_ADDING_ROLE;\n import static org.wso2.carbon.user.core.constants.UserCoreErrorConstants.ErrorMessages.ERROR_CODE_ROLE_ALREADY_EXISTS;\n+import static org.wso2.carbon.user.core.util.UserCoreUtil.isGroupsVsRolesSeparationImprovementsEnabled;\n import static org.wso2.carbon.utils.multitenancy.MultitenantConstants.SUPER_TENANT_ID;\n \n public abstract class AbstractUserStoreManager implements PaginatedUserStoreManager,\n@@ -7753,7 +7754,7 @@ private void handleRoleAlreadyExistExceptionWithID(String roleName, String[] use\n                 rolesAndGroupsClaim = claim;\n             }\n \n-            if (isGroupsVsRolesSeparationEnabled()) {\n+            if (isGroupsVsRolesSeparationImprovementsEnabled(realmConfig)) {\n                 if (UserCoreConstants.INTERNAL_ROLES_CLAIM.equalsIgnoreCase(claim)) {\n                     requireRoles = true;\n                     rolesClaim = claim;\n@@ -7872,7 +7873,7 @@ private void handleRoleAlreadyExistExceptionWithID(String roleName, String[] use\n             finalValues.put(rolesAndGroupsClaim, getMultiValuedString(Arrays.asList(rolesAndGroups)));\n         }\n \n-        if (isGroupsVsRolesSeparationEnabled()) {\n+        if (isGroupsVsRolesSeparationImprovementsEnabled(realmConfig)) {\n             if (requireRoles) {\n                 roles = doGetInternalRoleListOfUser(userName, \"*\");\n             }\n@@ -9461,7 +9462,7 @@ public void addSecondaryUserStoreManager(RealmConfiguration userStoreRealmConfig\n         List<String> properties = new ArrayList<>(propertySet);\n \n         List<String> roleAndGroupProperties = null;\n-        if (isGroupsVsRolesSeparationEnabled()) {\n+        if (isGroupsVsRolesSeparationImprovementsEnabled(realmConfig)) {\n             roleAndGroupProperties = getRolesAndGroupsClaimURIs().stream().map(claimToAttributeMap::get)\n                     .filter(StringUtils::isNotBlank).collect(Collectors.toList());\n             properties.removeAll(roleAndGroupProperties);\n@@ -9470,7 +9471,7 @@ public void addSecondaryUserStoreManager(RealmConfiguration userStoreRealmConfig\n         Map<String, Map<String, String>> userProperties = this.getUsersPropertyValues(users,\n                 properties.toArray(new String[]{}), profileName);\n \n-        if (isGroupsVsRolesSeparationEnabled()) {\n+        if (isGroupsVsRolesSeparationImprovementsEnabled(realmConfig)) {\n             // Inject group and roles attributes.\n             if (CollectionUtils.isNotEmpty(roleAndGroupProperties)) {\n                 for (Map.Entry<String, Map<String, String>> userEntry : userProperties.entrySet()) {\n@@ -11880,7 +11881,7 @@ public final String getUserClaimValueWithID(String userID, String claim, String\n                 rolesAndGroupsClaim = claim;\n             }\n \n-            if (isGroupsVsRolesSeparationEnabled()) {\n+            if (isGroupsVsRolesSeparationImprovementsEnabled(realmConfig)) {\n                 if (UserCoreConstants.INTERNAL_ROLES_CLAIM.equalsIgnoreCase(claim)) {\n                     requireRoles = true;\n                     rolesClaim = claim;\n@@ -11979,7 +11980,7 @@ public final String getUserClaimValueWithID(String userID, String claim, String\n             finalValues.put(rolesAndGroupsClaim, getMultiValuedString(rolesAndGroups));\n         }\n \n-        if (isGroupsVsRolesSeparationEnabled()) {\n+        if (isGroupsVsRolesSeparationImprovementsEnabled(realmConfig)) {\n             if (requireRoles) {\n                 roles = doGetInternalRoleListOfUserWithID(userID, \"*\");\n             }\n@@ -15139,7 +15140,7 @@ public boolean isUserInRoleWithID(String userID, String roleName) throws UserSto\n         List<String> properties = new ArrayList<>(propertySet);\n \n         List<String> roleAndGroupProperties = null;\n-        if (isGroupsVsRolesSeparationEnabled()) {\n+        if (isGroupsVsRolesSeparationImprovementsEnabled(realmConfig)) {\n             roleAndGroupProperties = getRolesAndGroupsClaimURIs().stream().map(claimToAttributeMap::get)\n                     .filter(StringUtils::isNotBlank).collect(Collectors.toList());\n             properties.removeAll(roleAndGroupProperties);\n@@ -15148,7 +15149,7 @@ public boolean isUserInRoleWithID(String userID, String roleName) throws UserSto\n         Map<String, Map<String, String>> userProperties = this\n                 .getUsersPropertyValuesWithID(userIDs, properties.toArray(new String[]{}), profileName);\n \n-        if (isGroupsVsRolesSeparationEnabled()) {\n+        if (isGroupsVsRolesSeparationImprovementsEnabled(realmConfig)) {\n             // Inject group and roles attributes.\n             if (CollectionUtils.isNotEmpty(roleAndGroupProperties)) {\n                 for (Map.Entry<String, Map<String, String>> userEntry : userProperties.entrySet()) {\n@@ -15672,7 +15673,7 @@ private boolean isNotAGroupsClaim(String claim) {\n     private boolean isNotARoleOrGroupClaim(String claim) {\n \n         return isNotARoleClaim(claim)\n-                || (isGroupsVsRolesSeparationEnabled() && (isNotARolesClaim(claim) || isNotAGroupsClaim(claim)));\n+                || (isGroupsVsRolesSeparationImprovementsEnabled(realmConfig) && (isNotARolesClaim(claim) || isNotAGroupsClaim(claim)));\n     }\n \n     private String getMultiValuedString(List<String> values) {\n@@ -15691,12 +15692,6 @@ private String getMultiValuedString(List<String> values) {\n         return multiValuedStringBf.toString();\n     }\n \n-    private boolean isGroupsVsRolesSeparationEnabled() {\n-\n-        return Boolean.parseBoolean(realmConfig.getAuthorizationManagerProperty(\n-                UserCoreConstants.RealmConfig.PROPERTY_GROUP_AND_ROLE_SEPARATION_ENABLED));\n-    }\n-\n     private Set<String> getRolesAndGroupsClaimURIs() {\n \n         return Stream.of(INTERNAL_ROLES_CLAIM, USER_STORE_GROUPS_CLAIM, ROLE_CLAIM).collect(Collectors.toSet());"
  },
  {
    "sha": "f25074738cee1f007bca41e6d0150e9bc06a15af",
    "filename": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/util/UserCoreUtil.java",
    "status": "modified",
    "additions": 16,
    "deletions": 3,
    "changes": 19,
    "blob_url": "https://github.com/wso2/carbon-kernel/blob/0ac5e9403e643495cd25b50e1595bd5e3358a2cf/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/util/UserCoreUtil.java",
    "raw_url": "https://github.com/wso2/carbon-kernel/raw/0ac5e9403e643495cd25b50e1595bd5e3358a2cf/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/util/UserCoreUtil.java",
    "contents_url": "https://api.github.com/repos/wso2/carbon-kernel/contents/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/util/UserCoreUtil.java?ref=0ac5e9403e643495cd25b50e1595bd5e3358a2cf",
    "patch": "@@ -24,17 +24,17 @@\n import org.wso2.carbon.CarbonConstants;\n import org.wso2.carbon.context.CarbonContext;\n import org.wso2.carbon.user.api.RealmConfiguration;\n-import org.wso2.carbon.user.core.common.User;\n-import org.wso2.carbon.utils.Secret;\n import org.wso2.carbon.user.core.UserCoreConstants;\n import org.wso2.carbon.user.core.UserStoreException;\n import org.wso2.carbon.user.core.authorization.DBConstants;\n+import org.wso2.carbon.user.core.common.User;\n import org.wso2.carbon.user.core.common.UserStore;\n-import org.wso2.carbon.user.core.model.UserMgtContext;\n import org.wso2.carbon.user.core.dto.RoleDTO;\n import org.wso2.carbon.user.core.internal.UserStoreMgtDSComponent;\n import org.wso2.carbon.user.core.jdbc.JDBCRealmConstants;\n+import org.wso2.carbon.user.core.model.UserMgtContext;\n import org.wso2.carbon.user.core.service.RealmService;\n+import org.wso2.carbon.utils.Secret;\n import org.wso2.carbon.utils.UnsupportedSecretTypeException;\n import org.wso2.carbon.utils.multitenancy.MultitenantConstants;\n import org.wso2.carbon.utils.xml.StringUtils;\n@@ -53,6 +53,7 @@\n import java.util.Set;\n import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n+\n import javax.sql.DataSource;\n \n /**\n@@ -1169,4 +1170,16 @@ public static void clearSensitiveBytes(byte[] bytes) {\n         return usersList;\n     }\n \n+    /**\n+     * Checks whether groups vs roles improvements are enabled or not.\n+     *\n+     * @return whether groups vs roles improvements are enabled.\n+     */\n+    public static boolean isGroupsVsRolesSeparationImprovementsEnabled(RealmConfiguration realmConfiguration) {\n+\n+        return Boolean.parseBoolean(realmConfiguration.getAuthorizationManagerProperty(\n+                UserCoreConstants.RealmConfig.PROPERTY_GROUP_AND_ROLE_SEPARATION_ENABLED))\n+                && Boolean.parseBoolean(realmConfiguration.getAuthorizationManagerProperty(\n+                UserCoreConstants.RealmConfig.PROPERTY_GROUP_AND_ROLE_SEPARATION_IMPROVEMENTS_ENABLED));\n+    }\n }"
  },
  {
    "sha": "cf0f96d05d75340a76c39ac0576e41935e3e2bd9",
    "filename": "distribution/kernel/carbon-home/repository/conf/user-mgt.xml",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/wso2/carbon-kernel/blob/0ac5e9403e643495cd25b50e1595bd5e3358a2cf/distribution/kernel/carbon-home/repository/conf/user-mgt.xml",
    "raw_url": "https://github.com/wso2/carbon-kernel/raw/0ac5e9403e643495cd25b50e1595bd5e3358a2cf/distribution/kernel/carbon-home/repository/conf/user-mgt.xml",
    "contents_url": "https://api.github.com/repos/wso2/carbon-kernel/contents/distribution/kernel/carbon-home/repository/conf/user-mgt.xml?ref=0ac5e9403e643495cd25b50e1595bd5e3358a2cf",
    "patch": "@@ -228,6 +228,7 @@\n             <Property name=\"AuthorizationCacheEnabled\">true</Property>\n             <Property name=\"GetAllRolesOfUserEnabled\">false</Property>\n             <Property name=\"GroupAndRoleSeparationEnabled\">false</Property>\n+            <Property name=\"GroupAndRoleSeparationImprovementsEnabled\">false</Property>\n         </AuthorizationManager>\n     </Realm>\n </UserManager>"
  },
  {
    "sha": "1c494e7e3d1d94e55302e37761f357946afbb2a3",
    "filename": "distribution/kernel/carbon-home/repository/resources/conf/default.json",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/wso2/carbon-kernel/blob/0ac5e9403e643495cd25b50e1595bd5e3358a2cf/distribution/kernel/carbon-home/repository/resources/conf/default.json",
    "raw_url": "https://github.com/wso2/carbon-kernel/raw/0ac5e9403e643495cd25b50e1595bd5e3358a2cf/distribution/kernel/carbon-home/repository/resources/conf/default.json",
    "contents_url": "https://api.github.com/repos/wso2/carbon-kernel/contents/distribution/kernel/carbon-home/repository/resources/conf/default.json?ref=0ac5e9403e643495cd25b50e1595bd5e3358a2cf",
    "patch": "@@ -16,6 +16,7 @@\n   \"authorization_manager.properties.AuthorizationCacheEnabled\": \"true\",\n   \"authorization_manager.properties.GetAllRolesOfUserEnabled\": \"false\",\n   \"authorization_manager.properties.GroupAndRoleSeparationEnabled\": \"false\",\n+  \"authorization_manager.properties.GroupAndRoleSeparationImprovementsEnabled\": \"false\",\n   \"realm_manager.data_source\": \"SHARED_DB\",\n   \"realm_manager.properties.isCascadeDeleteEnabled\": true,\n   \"user_store.properties.ReadGroups\": true,"
  },
  {
    "sha": "b1a7d0dd7060886e67c5fa46adc8a06947772e5f",
    "filename": "distribution/kernel/carbon-home/repository/resources/conf/key-mappings.json",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/wso2/carbon-kernel/blob/0ac5e9403e643495cd25b50e1595bd5e3358a2cf/distribution/kernel/carbon-home/repository/resources/conf/key-mappings.json",
    "raw_url": "https://github.com/wso2/carbon-kernel/raw/0ac5e9403e643495cd25b50e1595bd5e3358a2cf/distribution/kernel/carbon-home/repository/resources/conf/key-mappings.json",
    "contents_url": "https://api.github.com/repos/wso2/carbon-kernel/contents/distribution/kernel/carbon-home/repository/resources/conf/key-mappings.json?ref=0ac5e9403e643495cd25b50e1595bd5e3358a2cf",
    "patch": "@@ -94,5 +94,6 @@\n   \"clustering.logging_type\": \"hazelcast.'hazelcast.logging.type'\",\n   \"clustering.properties.vpcCidrBlock\": \"clustering.properties.networkInterface\",\n \n-  \"authorization_manager.properties.group_and_role_separation_enabled\": \"authorization_manager.properties.GroupAndRoleSeparationEnabled\"\n+  \"authorization_manager.properties.group_and_role_separation_enabled\": \"authorization_manager.properties.GroupAndRoleSeparationEnabled\",\n+  \"authorization_manager.properties.group_and_role_separation_improvements_enabled\": \"authorization_manager.properties.GroupAndRoleSeparationImprovementsEnabled\"\n }"
  }
]
