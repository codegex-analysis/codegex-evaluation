[
  {
    "sha": "832e82c916846e6fd0d3193533144f5c49346f79",
    "filename": "components/sap/src/main/java/org/wso2/carbon/transports/sap/SAPTransportSender.java",
    "status": "modified",
    "additions": 3,
    "deletions": 8,
    "changes": 11,
    "blob_url": "https://github.com/wso2/sap-adapter/blob/2c305838c61b2ce3f21f48876f534772c9de8ece/components/sap/src/main/java/org/wso2/carbon/transports/sap/SAPTransportSender.java",
    "raw_url": "https://github.com/wso2/sap-adapter/raw/2c305838c61b2ce3f21f48876f534772c9de8ece/components/sap/src/main/java/org/wso2/carbon/transports/sap/SAPTransportSender.java",
    "contents_url": "https://api.github.com/repos/wso2/sap-adapter/contents/components/sap/src/main/java/org/wso2/carbon/transports/sap/SAPTransportSender.java?ref=2c305838c61b2ce3f21f48876f534772c9de8ece",
    "patch": "@@ -328,10 +328,10 @@ private String evaluateRFCfunction(JCoFunction function, JCoDestination destinat\n             }\n \n             if (returnStructure != null) {\n-                String type = returnStructure.getString(\"TYPE\");\n                 String returnStructureStr = returnStructure.toXML();\n \n                 if (\"false\".equals(escapeErrorHandling)) {\n+                    String type = returnStructure.getString(\"TYPE\");\n                     if (!(\"S\".equals(type) || \"I\".equals(type) || \"W\".equals(type) || \"\".equals(type))) {\n                         throw new AxisFault(\"Erroneous response while invoking the function: \" + function.getName() +\n                                             \", of type\" + type + \" response: \" + returnStructureStr);\n@@ -483,14 +483,9 @@ private void sendBapiRequest(MessageContext messageContext, JCoDestination desti\n                 if (log.isDebugEnabled()) {\n                     log.debug(\"Committed transaction. Function: \" + rfcFunctionName);\n                 }\n-                processResponse(messageContext, bapiResponse);\n-            } else {\n-                //this is not transaction just calling the BAPI function and get the result\n-                JCoFunction function = getRFCfunction(destination, rfcFunctionName);\n-                RFCMetaDataParser.processMetaDataDocument(payLoad, function);\n-                responseXML = evaluateRFCfunction(function, destination, escapeErrorHandling);\n+\n             }\n-            processResponse(messageContext, responseXML);\n+            processResponse(messageContext, bapiResponse);\n         } catch (Exception e) {\n             log.error(\"Error while sending request\", e);\n             if (isTransaction(messageContext)) {"
  }
]
