[
  {
    "sha": "f8ed47f28ec64e2aadbc1741c73a0aa2566aff82",
    "filename": ".github/workflows/gitlab-com-integration-test.yml",
    "status": "added",
    "additions": 68,
    "deletions": 0,
    "changes": 68,
    "blob_url": "https://github.com/finos/legend-sdlc/blob/d7d2fd8946f9b74546896dd784d3ee9544213f91/.github/workflows/gitlab-com-integration-test.yml",
    "raw_url": "https://github.com/finos/legend-sdlc/raw/d7d2fd8946f9b74546896dd784d3ee9544213f91/.github/workflows/gitlab-com-integration-test.yml",
    "contents_url": "https://api.github.com/repos/finos/legend-sdlc/contents/.github/workflows/gitlab-com-integration-test.yml?ref=d7d2fd8946f9b74546896dd784d3ee9544213f91",
    "patch": "@@ -0,0 +1,68 @@\n+# Copyright 2021 FINOS\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+name: gitlab-com-integration-test\n+\n+env:\n+  CI_DEPLOY_USERNAME: ${{ secrets.CI_DEPLOY_USERNAME }}\n+  CI_DEPLOY_PASSWORD: ${{ secrets.CI_DEPLOY_PASSWORD }}\n+  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n+  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}\n+  GITLAB_USERNAME: ${{ secrets.GITLAB_INTEGRATION_TEST_USERNAME }}\n+  GITLAB_PASSWORD: ${{ secrets.GITLAB_INTEGRATION_TEST_PASSWORD }}\n+\n+on:\n+  workflow_dispatch:\n+    inputs:\n+      logLevel:\n+        description: 'Log level'\n+        required: true\n+        default: 'warning'\n+\n+jobs:\n+  build:\n+    if: \"!contains(github.event.head_commit.message, '[maven-release-plugin]')\"\n+    runs-on: ubuntu-latest\n+    steps:\n+      - name: Checkout repo\n+        uses: actions/checkout@v2\n+      - name: Cache Maven dependencies\n+        uses: actions/cache@v2\n+        env:\n+          cache-name: cache-mvn-deps\n+        with:\n+          path: ~/.m2\n+          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pom.xml') }}\n+          restore-keys: |\n+            ${{ runner.os }}-build-${{ env.cache-name }}-\n+            ${{ runner.os }}-build-\n+            ${{ runner.os }}-\n+      - name: Set up JDK\n+        uses: actions/setup-java@v1\n+        with:\n+          java-version: 11\n+          server-id: ossrh\n+          server-username: CI_DEPLOY_USERNAME\n+          server-password: CI_DEPLOY_PASSWORD\n+      - name: Configure git\n+        run: |\n+          git config --global committer.email \"infra@finos.org\"\n+          git config --global committer.name \"FINOS Admin\"\n+          git config --global author.email \"${GITHUB_ACTOR}@users.noreply.github.com\"\n+          git config --global author.name \"${GITHUB_ACTOR}\"\n+      - name: Download deps and plugins\n+        run: mvn de.qaware.maven:go-offline-maven-plugin:resolve-dependencies\n+      - name: Build + Test\n+        if: (github.repository != 'finos/legend-sdlc') || (github.ref != 'refs/heads/master')\n+        run: mvn verify javadoc:javadoc -Dorg.slf4j.simpleLogger.showDateTime=true -Dorg.slf4j.simpleLogger.dateTimeFormat=HH:mm:ss.SSSZ -P test-gitlab-com\n\\ No newline at end of file"
  },
  {
    "sha": "6e64fc0dad6db595fa9741c57bfcfea8bd2ef65a",
    "filename": "legend-sdlc-server/pom.xml",
    "status": "modified",
    "additions": 21,
    "deletions": 2,
    "changes": 23,
    "blob_url": "https://github.com/finos/legend-sdlc/blob/d7d2fd8946f9b74546896dd784d3ee9544213f91/legend-sdlc-server/pom.xml",
    "raw_url": "https://github.com/finos/legend-sdlc/raw/d7d2fd8946f9b74546896dd784d3ee9544213f91/legend-sdlc-server/pom.xml",
    "contents_url": "https://api.github.com/repos/finos/legend-sdlc/contents/legend-sdlc-server/pom.xml?ref=d7d2fd8946f9b74546896dd784d3ee9544213f91",
    "patch": "@@ -130,7 +130,7 @@\n                             <goal>start</goal>\n                         </goals>\n                         <configuration>\n-                            <skip>${skipITs}</skip>\n+                            <skip>${skipGitLabDockerTests}</skip>\n                         </configuration>\n                     </execution>\n                     <execution>\n@@ -140,7 +140,7 @@\n                             <goal>stop</goal>\n                         </goals>\n                         <configuration>\n-                            <skip>${skipITs}</skip>\n+                            <skip>${skipGitLabDockerTests}</skip>\n                         </configuration>\n                     </execution>\n                 </executions>\n@@ -387,5 +387,24 @@\n                 <gitlab.version>12.10.14-ee.0</gitlab.version>\n             </properties>\n         </profile>\n+        <profile>\n+            <id>test-gitlab-com</id>\n+            <build>\n+                <plugins>\n+                    <plugin>\n+                        <groupId>org.apache.maven.plugins</groupId>\n+                        <artifactId>maven-failsafe-plugin</artifactId>\n+                        <configuration>\n+                            <excludes>\n+                                <exclude>none</exclude>\n+                            </excludes>\n+                            <includes>\n+                                <include>**/TestGitLabServer*.java</include>\n+                            </includes>\n+                        </configuration>\n+                    </plugin>\n+                </plugins>\n+            </build>\n+        </profile>\n     </profiles>\n </project>"
  },
  {
    "sha": "6da10a5c9579b542ec4c8c5c42bb639c1e54606a",
    "filename": "legend-sdlc-server/src/main/java/org/finos/legend/sdlc/server/gitlab/auth/TestGitLabSession.java",
    "status": "modified",
    "additions": 4,
    "deletions": 2,
    "changes": 6,
    "blob_url": "https://github.com/finos/legend-sdlc/blob/d7d2fd8946f9b74546896dd784d3ee9544213f91/legend-sdlc-server/src/main/java/org/finos/legend/sdlc/server/gitlab/auth/TestGitLabSession.java",
    "raw_url": "https://github.com/finos/legend-sdlc/raw/d7d2fd8946f9b74546896dd784d3ee9544213f91/legend-sdlc-server/src/main/java/org/finos/legend/sdlc/server/gitlab/auth/TestGitLabSession.java",
    "contents_url": "https://api.github.com/repos/finos/legend-sdlc/contents/legend-sdlc-server/src/main/java/org/finos/legend/sdlc/server/gitlab/auth/TestGitLabSession.java?ref=d7d2fd8946f9b74546896dd784d3ee9544213f91",
    "patch": "@@ -18,6 +18,8 @@\n import org.finos.legend.sdlc.server.gitlab.mode.GitLabModeInfo;\n \n import java.time.Instant;\n+import java.util.Collections;\n+import java.util.EnumSet;\n import java.util.Set;\n \n public class TestGitLabSession implements GitLabSession\n@@ -52,13 +54,13 @@ public boolean isValid()\n     @Override\n     public Set<GitLabMode> getValidModes()\n     {\n-        return null;\n+        return Collections.unmodifiableSet(EnumSet.of(GitLabMode.PROD));\n     }\n \n     @Override\n     public boolean isValidMode(GitLabMode mode)\n     {\n-        return true; // TODO: update\n+        return GitLabMode.PROD.equals(mode);\n     }\n \n     @Override"
  },
  {
    "sha": "fd47f72ef4401f246bfeb212b52bc3b4a53ba00e",
    "filename": "legend-sdlc-server/src/test/java/org/finos/legend/sdlc/server/gitlab/api/GitLabApiTestSetupUtil.java",
    "status": "added",
    "additions": 90,
    "deletions": 0,
    "changes": 90,
    "blob_url": "https://github.com/finos/legend-sdlc/blob/d7d2fd8946f9b74546896dd784d3ee9544213f91/legend-sdlc-server/src/test/java/org/finos/legend/sdlc/server/gitlab/api/GitLabApiTestSetupUtil.java",
    "raw_url": "https://github.com/finos/legend-sdlc/raw/d7d2fd8946f9b74546896dd784d3ee9544213f91/legend-sdlc-server/src/test/java/org/finos/legend/sdlc/server/gitlab/api/GitLabApiTestSetupUtil.java",
    "contents_url": "https://api.github.com/repos/finos/legend-sdlc/contents/legend-sdlc-server/src/test/java/org/finos/legend/sdlc/server/gitlab/api/GitLabApiTestSetupUtil.java?ref=d7d2fd8946f9b74546896dd784d3ee9544213f91",
    "patch": "@@ -0,0 +1,90 @@\n+// Copyright 2021 Goldman Sachs\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package org.finos.legend.sdlc.server.gitlab.api;\n+\n+import org.finos.legend.sdlc.server.auth.LegendSDLCWebFilter;\n+import org.finos.legend.sdlc.server.error.LegendSDLCServerException;\n+import org.finos.legend.sdlc.server.gitlab.GitLabAppInfo;\n+import org.finos.legend.sdlc.server.gitlab.GitLabServerInfo;\n+import org.finos.legend.sdlc.server.gitlab.auth.GitLabUserContext;\n+import org.finos.legend.sdlc.server.gitlab.auth.TestGitLabSession;\n+import org.finos.legend.sdlc.server.gitlab.mode.GitLabMode;\n+import org.finos.legend.sdlc.server.gitlab.mode.GitLabModeInfo;\n+import org.finos.legend.sdlc.server.tools.StringTools;\n+import org.gitlab4j.api.GitLabApi;\n+import org.gitlab4j.api.GitLabApiException;\n+import org.gitlab4j.api.models.Version;\n+import org.junit.Assert;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class GitLabApiTestSetupUtil\n+{\n+    static final Logger LOGGER = LoggerFactory.getLogger(GitLabApiTestSetupUtil.class);\n+\n+    /**\n+     * Authenticates to GitLab and creates a test GitLabUserContext.\n+     *\n+     * @param username the name of user for whom we create this context.\n+     * @param password the password of user for whom we create this context.\n+     * @param hostUrl the url of the test host.\n+     * @param hostScheme the scheme of the test host.\n+     * @param hostHost the test host.\n+     * @param hostPort the port (if necessary) of the test host.\n+     */\n+    public static GitLabUserContext prepareGitLabUserContextHelper(String username, String password, String hostUrl, String hostScheme, String hostHost, Integer hostPort) throws LegendSDLCServerException\n+    {\n+        GitLabMode gitLabMode = GitLabMode.PROD;\n+        TestHttpServletRequest httpServletRequest = new TestHttpServletRequest();\n+\n+        TestGitLabSession session = new TestGitLabSession(username);\n+        GitLabApi oauthGitLabApi;\n+        Version version;\n+\n+        try\n+        {\n+            oauthGitLabApi = GitLabApi.oauth2Login(hostUrl, username, password, null, null, true);\n+            Assert.assertNotNull(oauthGitLabApi);\n+            version = oauthGitLabApi.getVersion();\n+        }\n+        catch (GitLabApiException e)\n+        {\n+            StringBuilder builder = new StringBuilder(\"Error instantiating GitLabApi via OAuth2; response status: \").append(e.getHttpStatus());\n+            StringTools.appendThrowableMessageIfPresent(builder, e, \"; error message: \");\n+            if (e.hasValidationErrors())\n+            {\n+                builder.append(\"; validation error(s): \").append(e.getValidationErrors());\n+            }\n+            throw new LegendSDLCServerException(builder.toString(), e);\n+        }\n+\n+        String oauthToken = oauthGitLabApi.getAuthToken();\n+        LOGGER.info(\"Retrieved access token: {}\", oauthToken);\n+        Assert.assertNotNull(version);\n+\n+        GitLabServerInfo gitLabServerInfo = GitLabServerInfo.newServerInfo(hostScheme, hostHost, hostPort);\n+        GitLabAppInfo gitLabAppInfo = GitLabAppInfo.newAppInfo(gitLabServerInfo, null, null, null);\n+        GitLabModeInfo gitLabModeInfo = GitLabModeInfo.newModeInfo(gitLabMode, gitLabAppInfo);\n+\n+        session.setAccessToken(oauthToken);\n+        session.setModeInfo(gitLabModeInfo);\n+        LegendSDLCWebFilter.setSessionAttributeOnServletRequest(httpServletRequest, session);\n+\n+        // Set canary to true in httpRequest cookie to test against next.gitlab.com\n+        httpServletRequest.setGitLabCanaryCookie();\n+\n+        return new GitLabUserContext(httpServletRequest, null);\n+    }\n+}"
  },
  {
    "sha": "68e93d3228c4caf2a556db82553964a78d4834eb",
    "filename": "legend-sdlc-server/src/test/java/org/finos/legend/sdlc/server/gitlab/api/GitLabEntityApiTestResource.java",
    "status": "renamed",
    "additions": 25,
    "deletions": 33,
    "changes": 58,
    "blob_url": "https://github.com/finos/legend-sdlc/blob/d7d2fd8946f9b74546896dd784d3ee9544213f91/legend-sdlc-server/src/test/java/org/finos/legend/sdlc/server/gitlab/api/GitLabEntityApiTestResource.java",
    "raw_url": "https://github.com/finos/legend-sdlc/raw/d7d2fd8946f9b74546896dd784d3ee9544213f91/legend-sdlc-server/src/test/java/org/finos/legend/sdlc/server/gitlab/api/GitLabEntityApiTestResource.java",
    "contents_url": "https://api.github.com/repos/finos/legend-sdlc/contents/legend-sdlc-server/src/test/java/org/finos/legend/sdlc/server/gitlab/api/GitLabEntityApiTestResource.java?ref=d7d2fd8946f9b74546896dd784d3ee9544213f91",
    "patch": "@@ -22,45 +22,50 @@\n import org.finos.legend.sdlc.domain.model.project.workspace.Workspace;\n import org.finos.legend.sdlc.domain.model.review.Review;\n import org.finos.legend.sdlc.domain.model.review.ReviewState;\n-import org.finos.legend.sdlc.server.gitlab.GitLabConfiguration;\n import org.finos.legend.sdlc.server.gitlab.GitLabProjectId;\n import org.finos.legend.sdlc.server.gitlab.auth.GitLabUserContext;\n-import org.finos.legend.sdlc.server.project.config.ProjectStructureConfiguration;\n import org.finos.legend.sdlc.server.tools.CallUntil;\n import org.gitlab4j.api.GitLabApiException;\n import org.gitlab4j.api.MergeRequestApi;\n import org.gitlab4j.api.models.MergeRequest;\n import org.junit.Assert;\n-import org.junit.BeforeClass;\n-import org.junit.Test;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n import java.util.Collections;\n import java.util.List;\n import java.util.Map;\n \n-public class IntegrationTestGitLabEntityApis extends AbstractGitLabApiTest\n+/**\n+ * Substantial test resource class for Entity API tests shared by the docker-based and server-based GitLab tests.\n+ */\n+public class GitLabEntityApiTestResource\n {\n-    private static GitLabProjectApi gitLabProjectApi;\n-    private static GitLabWorkspaceApi gitLabWorkspaceApi;\n-    private static GitLabRevisionApi gitLabRevisionApi;\n-    private static GitLabEntityApi gitLabEntityApi;\n-    private static GitLabReviewApi gitLabCommitterReviewApi;\n-    private static GitLabReviewApi gitLabApproverReviewApi;\n+    private final GitLabProjectApi gitLabProjectApi;\n+    private final GitLabWorkspaceApi gitLabWorkspaceApi;\n+    private final GitLabEntityApi gitLabEntityApi;\n+    private final GitLabReviewApi gitLabCommitterReviewApi;\n+    private final GitLabReviewApi gitLabApproverReviewApi;\n \n-    private static GitLabUserContext gitLabMemberUserContext;\n+    private final GitLabUserContext gitLabMemberUserContext;\n \n-    @BeforeClass\n-    public static void setup() throws GitLabApiException\n+    private static final Logger LOGGER = LoggerFactory.getLogger(GitLabEntityApiTestResource.class);\n+\n+    public GitLabEntityApiTestResource(GitLabProjectApi gitLabProjectApi, GitLabWorkspaceApi gitLabWorkspaceApi, GitLabEntityApi gitLabEntityApi, GitLabReviewApi gitLabCommitterReviewApi, GitLabReviewApi gitLabApproverReviewApi, GitLabUserContext gitLabMemberUserContext)\n     {\n-        setUpEntityApi();\n+        this.gitLabProjectApi = gitLabProjectApi;\n+        this.gitLabWorkspaceApi = gitLabWorkspaceApi;\n+        this.gitLabEntityApi = gitLabEntityApi;\n+        this.gitLabCommitterReviewApi = gitLabCommitterReviewApi;\n+        this.gitLabApproverReviewApi = gitLabApproverReviewApi;\n+        this.gitLabMemberUserContext = gitLabMemberUserContext;\n     }\n \n-    @Test\n-    public void testEntitiesInNormalWorkflow() throws GitLabApiException\n+    public void runEntitiesInNormalWorkflowTest() throws GitLabApiException\n     {\n         String projectName = \"CommitFlowTestProject\";\n         String description = \"A test project.\";\n-        ProjectType projectType = ProjectType.PROTOTYPE;\n+        ProjectType projectType = ProjectType.PRODUCTION;\n         String groupId = \"org.finos.sdlc.test\";\n         String artifactId = \"entitytestproj\";\n         List<String> tags = Lists.mutable.with(\"doe\", \"moffitt\");\n@@ -135,21 +140,8 @@ public void testEntitiesInNormalWorkflow() throws GitLabApiException\n         Assert.assertEquals(projectEntity.getContent(), entityContentMap);\n     }\n \n-    /**\n-     * Authenticates with OAuth2 and instantiate the test SDLC GitLabEntityApi.\n-     */\n-    private static void setUpEntityApi()\n+    public GitLabProjectApi getGitLabProjectApi()\n     {\n-        gitLabMemberUserContext = prepareGitLabMemberUserContext();\n-        GitLabUserContext gitLabOwnerUserContext = prepareGitLabOwnerUserContext();\n-        GitLabConfiguration gitLabConfig = GitLabConfiguration.newGitLabConfiguration(null, null, null, null, null);\n-        ProjectStructureConfiguration projectStructureConfig = ProjectStructureConfiguration.emptyConfiguration();\n-\n-        gitLabProjectApi = new GitLabProjectApi(gitLabConfig, gitLabOwnerUserContext, projectStructureConfig, null, null, backgroundTaskProcessor);\n-        gitLabRevisionApi = new GitLabRevisionApi(gitLabMemberUserContext, backgroundTaskProcessor);\n-        gitLabWorkspaceApi = new GitLabWorkspaceApi(gitLabMemberUserContext, gitLabRevisionApi, backgroundTaskProcessor);\n-        gitLabEntityApi = new GitLabEntityApi(gitLabMemberUserContext, backgroundTaskProcessor);\n-        gitLabCommitterReviewApi = new GitLabReviewApi(gitLabMemberUserContext);\n-        gitLabApproverReviewApi = new GitLabReviewApi(gitLabOwnerUserContext);\n+        return gitLabProjectApi;\n     }\n }",
    "previous_filename": "legend-sdlc-server/src/test/java/org/finos/legend/sdlc/server/gitlab/api/IntegrationTestGitLabEntityApis.java"
  },
  {
    "sha": "29207fd297e70e63c5c55d3484b9f65f348ccbca",
    "filename": "legend-sdlc-server/src/test/java/org/finos/legend/sdlc/server/gitlab/api/GitLabProjectApiTestResource.java",
    "status": "renamed",
    "additions": 16,
    "deletions": 31,
    "changes": 47,
    "blob_url": "https://github.com/finos/legend-sdlc/blob/d7d2fd8946f9b74546896dd784d3ee9544213f91/legend-sdlc-server/src/test/java/org/finos/legend/sdlc/server/gitlab/api/GitLabProjectApiTestResource.java",
    "raw_url": "https://github.com/finos/legend-sdlc/raw/d7d2fd8946f9b74546896dd784d3ee9544213f91/legend-sdlc-server/src/test/java/org/finos/legend/sdlc/server/gitlab/api/GitLabProjectApiTestResource.java",
    "contents_url": "https://api.github.com/repos/finos/legend-sdlc/contents/legend-sdlc-server/src/test/java/org/finos/legend/sdlc/server/gitlab/api/GitLabProjectApiTestResource.java?ref=d7d2fd8946f9b74546896dd784d3ee9544213f91",
    "patch": "@@ -19,33 +19,29 @@\n import org.finos.legend.sdlc.domain.model.project.Project;\n import org.finos.legend.sdlc.domain.model.project.ProjectType;\n import org.finos.legend.sdlc.server.error.LegendSDLCServerException;\n-import org.finos.legend.sdlc.server.gitlab.GitLabConfiguration;\n-import org.finos.legend.sdlc.server.gitlab.auth.GitLabUserContext;\n-import org.finos.legend.sdlc.server.project.config.ProjectStructureConfiguration;\n-import org.junit.BeforeClass;\n-import org.junit.Test;\n \n import java.util.List;\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertNotNull;\n \n-public class IntegrationTestGitLabProjectApis extends AbstractGitLabApiTest\n+/**\n+ * Substantial test resource class for project API tests shared by the docker-based and server-based GitLab tests.\n+ */\n+public class GitLabProjectApiTestResource\n {\n-    private static GitLabProjectApi gitLabProjectApi;\n+    private final GitLabProjectApi gitLabProjectApi;\n \n-    @BeforeClass\n-    public static void setup() throws LegendSDLCServerException\n+    public GitLabProjectApiTestResource(GitLabProjectApi gitLabProjectApi)\n     {\n-        setUpProjectApi();\n+        this.gitLabProjectApi = gitLabProjectApi;\n     }\n \n-    @Test\n-    public void testCreateProject() throws LegendSDLCServerException\n+    public void runCreateProjectTest() throws LegendSDLCServerException\n     {\n         String projectName = \"TestProjectOne\";\n         String description = \"A test project.\";\n-        ProjectType projectType = ProjectType.PROTOTYPE;\n+        ProjectType projectType = ProjectType.PRODUCTION;\n         String groupId = \"org.finos.sdlc.test\";\n         String artifactId = \"testprojone\";\n         List<String> tags = Lists.mutable.with(\"doe\", \"moffitt\");\n@@ -59,12 +55,11 @@ public void testCreateProject() throws LegendSDLCServerException\n         assertEquals(Sets.mutable.withAll(tags), Sets.mutable.withAll(createdProject.getTags()));\n     }\n \n-    @Test\n-    public void testGetProject() throws LegendSDLCServerException\n+    public void runGetProjectTest() throws LegendSDLCServerException\n     {\n         String projectName = \"TestProjectTwo\";\n         String description = \"A test project.\";\n-        ProjectType projectType = ProjectType.PROTOTYPE;\n+        ProjectType projectType = ProjectType.PRODUCTION;\n         String groupId = \"org.finos.sdlc.test\";\n         String artifactId = \"testprojtwo\";\n         List<String> tags = Lists.mutable.with(\"doe\", \"moffitt\");\n@@ -86,12 +81,11 @@ public void testGetProject() throws LegendSDLCServerException\n         assertEquals(Sets.mutable.withAll(tags), Sets.mutable.withAll(retrievedProject.getTags()));\n     }\n \n-    @Test\n-    public void testUpdateProject()\n+    public void runUpdateProjectTest()\n     {\n         String projectName = \"TestProjectThree\";\n         String description = \"A test project.\";\n-        ProjectType projectType = ProjectType.PROTOTYPE;\n+        ProjectType projectType = ProjectType.PRODUCTION;\n         String groupId = \"org.finos.sdlc.test\";\n         String artifactId = \"testprojthree\";\n         List<String> tags = Lists.mutable.with(\"doe\", \"moffitt\");\n@@ -124,17 +118,8 @@ public void testUpdateProject()\n         assertEquals(Sets.mutable.withAll(expectedTags), Sets.mutable.withAll(reRetrievedProject.getTags()));\n     }\n \n-    /**\n-     * Authenticates with OAuth2 and instantiate the test SDLC GitLabProjectApi.\n-     *\n-     * @throws LegendSDLCServerException if cannot authenticates to GitLab.\n-     */\n-    private static void setUpProjectApi() throws LegendSDLCServerException\n+    public GitLabProjectApi getGitLabProjectApi()\n     {\n-        GitLabConfiguration gitLabConfig = GitLabConfiguration.newGitLabConfiguration(null, null, null, null, null);\n-        ProjectStructureConfiguration projectStructureConfig = ProjectStructureConfiguration.emptyConfiguration();\n-        GitLabUserContext gitLabUserContext = prepareGitLabOwnerUserContext();\n-\n-        gitLabProjectApi = new GitLabProjectApi(gitLabConfig, gitLabUserContext, projectStructureConfig, null, null, backgroundTaskProcessor);\n+        return gitLabProjectApi;\n     }\n-}\n\\ No newline at end of file\n+}",
    "previous_filename": "legend-sdlc-server/src/test/java/org/finos/legend/sdlc/server/gitlab/api/IntegrationTestGitLabProjectApis.java"
  },
  {
    "sha": "58c939227d128fdfbb6ae8d192c8b1a4a0a99ec4",
    "filename": "legend-sdlc-server/src/test/java/org/finos/legend/sdlc/server/gitlab/api/GitLabWorkspaceApiTestResource.java",
    "status": "renamed",
    "additions": 15,
    "deletions": 27,
    "changes": 42,
    "blob_url": "https://github.com/finos/legend-sdlc/blob/d7d2fd8946f9b74546896dd784d3ee9544213f91/legend-sdlc-server/src/test/java/org/finos/legend/sdlc/server/gitlab/api/GitLabWorkspaceApiTestResource.java",
    "raw_url": "https://github.com/finos/legend-sdlc/raw/d7d2fd8946f9b74546896dd784d3ee9544213f91/legend-sdlc-server/src/test/java/org/finos/legend/sdlc/server/gitlab/api/GitLabWorkspaceApiTestResource.java",
    "contents_url": "https://api.github.com/repos/finos/legend-sdlc/contents/legend-sdlc-server/src/test/java/org/finos/legend/sdlc/server/gitlab/api/GitLabWorkspaceApiTestResource.java?ref=d7d2fd8946f9b74546896dd784d3ee9544213f91",
    "patch": "@@ -19,36 +19,33 @@\n import org.finos.legend.sdlc.domain.model.project.Project;\n import org.finos.legend.sdlc.domain.model.project.ProjectType;\n import org.finos.legend.sdlc.domain.model.project.workspace.Workspace;\n-import org.finos.legend.sdlc.server.gitlab.GitLabConfiguration;\n-import org.finos.legend.sdlc.server.gitlab.auth.GitLabUserContext;\n-import org.finos.legend.sdlc.server.project.config.ProjectStructureConfiguration;\n-import org.gitlab4j.api.GitLabApiException;\n-import org.junit.BeforeClass;\n-import org.junit.Test;\n \n import java.util.List;\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertNotNull;\n \n-public class IntegrationTestGitLabWorkspaceApis extends AbstractGitLabApiTest\n+/**\n+ * Substantial test resource class for Workspace API tests shared by the docker-based and server-based GitLab tests.\n+ */\n+public class GitLabWorkspaceApiTestResource\n {\n-    private static GitLabRevisionApi gitLabRevisionApi;\n-    private static GitLabWorkspaceApi gitLabWorkspaceApi;\n-    private static GitLabProjectApi gitLabProjectApi;\n+    private final GitLabRevisionApi gitLabRevisionApi;\n+    private final GitLabWorkspaceApi gitLabWorkspaceApi;\n+    private final GitLabProjectApi gitLabProjectApi;\n \n-    @BeforeClass\n-    public static void setup() throws GitLabApiException\n+    public GitLabWorkspaceApiTestResource(GitLabRevisionApi gitLabRevisionApi, GitLabWorkspaceApi gitLabWorkspaceApi, GitLabProjectApi gitLabProjectApi)\n     {\n-        setUpWorkspaceApi();\n+        this.gitLabRevisionApi = gitLabRevisionApi;\n+        this.gitLabWorkspaceApi = gitLabWorkspaceApi;\n+        this.gitLabProjectApi = gitLabProjectApi;\n     }\n \n-    @Test\n-    public void testCreateWorkspace()\n+    public void runCreateWorkspaceTest()\n     {\n         String projectName = \"WorkspaceTestProject\";\n         String description = \"A test project.\";\n-        ProjectType projectType = ProjectType.PROTOTYPE;\n+        ProjectType projectType = ProjectType.PRODUCTION;\n         String groupId = \"org.finos.sdlc.test\";\n         String artifactId = \"worktestproj\";\n         List<String> tags = Lists.mutable.with(\"doe\", \"moffitt\");\n@@ -70,17 +67,8 @@ public void testCreateWorkspace()\n         assertEquals(projectId, createdWorkspace.getProjectId());\n     }\n \n-    /**\n-     * Authenticates with OAuth2 and instantiate the test SDLC GitLabWorkspaceApi.\n-     */\n-    private static void setUpWorkspaceApi()\n+    public GitLabProjectApi getGitLabProjectApi()\n     {\n-        GitLabConfiguration gitLabConfig = GitLabConfiguration.newGitLabConfiguration(null, null, null, null, null);\n-        ProjectStructureConfiguration projectStructureConfig = ProjectStructureConfiguration.emptyConfiguration();\n-        GitLabUserContext gitLabUserContext = prepareGitLabOwnerUserContext();\n-\n-        gitLabProjectApi = new GitLabProjectApi(gitLabConfig, gitLabUserContext, projectStructureConfig, null, null, backgroundTaskProcessor);\n-        gitLabRevisionApi = new GitLabRevisionApi(gitLabUserContext, backgroundTaskProcessor);\n-        gitLabWorkspaceApi = new GitLabWorkspaceApi(gitLabUserContext, gitLabRevisionApi, backgroundTaskProcessor);\n+        return gitLabProjectApi;\n     }\n }",
    "previous_filename": "legend-sdlc-server/src/test/java/org/finos/legend/sdlc/server/gitlab/api/IntegrationTestGitLabWorkspaceApis.java"
  },
  {
    "sha": "2711bab567102e8443a0652f2ca66db81e51f146",
    "filename": "legend-sdlc-server/src/test/java/org/finos/legend/sdlc/server/gitlab/api/TestHttpServletRequest.java",
    "status": "modified",
    "additions": 11,
    "deletions": 1,
    "changes": 12,
    "blob_url": "https://github.com/finos/legend-sdlc/blob/d7d2fd8946f9b74546896dd784d3ee9544213f91/legend-sdlc-server/src/test/java/org/finos/legend/sdlc/server/gitlab/api/TestHttpServletRequest.java",
    "raw_url": "https://github.com/finos/legend-sdlc/raw/d7d2fd8946f9b74546896dd784d3ee9544213f91/legend-sdlc-server/src/test/java/org/finos/legend/sdlc/server/gitlab/api/TestHttpServletRequest.java",
    "contents_url": "https://api.github.com/repos/finos/legend-sdlc/contents/legend-sdlc-server/src/test/java/org/finos/legend/sdlc/server/gitlab/api/TestHttpServletRequest.java?ref=d7d2fd8946f9b74546896dd784d3ee9544213f91",
    "patch": "@@ -32,16 +32,20 @@\n import java.io.IOException;\n import java.io.UnsupportedEncodingException;\n import java.security.Principal;\n+import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Enumeration;\n import java.util.HashMap;\n+import java.util.List;\n import java.util.Locale;\n import java.util.Map;\n \n public class TestHttpServletRequest implements HttpServletRequest\n {\n     private final Map<String, Object> attributes = new HashMap<>();\n \n+    private List<Cookie> cookies = new ArrayList<>();\n+\n     @Override\n     public String getAuthType()\n     {\n@@ -51,7 +55,8 @@ public String getAuthType()\n     @Override\n     public Cookie[] getCookies()\n     {\n-        return new Cookie[0];\n+        Cookie[] cookies = new Cookie[this.cookies.size()];\n+        return this.cookies.toArray(cookies);\n     }\n \n     @Override\n@@ -455,4 +460,9 @@ public DispatcherType getDispatcherType()\n     {\n         return null;\n     }\n+\n+    public void setGitLabCanaryCookie()\n+    {\n+        cookies.add(new Cookie(\"gitlab_canary\", \"true\"));\n+    }\n }"
  },
  {
    "sha": "baff189a3f085338fe5828ae1e4cd5b589483196",
    "filename": "legend-sdlc-server/src/test/java/org/finos/legend/sdlc/server/gitlab/api/docker/AbstractGitLabApiTest.java",
    "status": "renamed",
    "additions": 10,
    "deletions": 56,
    "changes": 66,
    "blob_url": "https://github.com/finos/legend-sdlc/blob/d7d2fd8946f9b74546896dd784d3ee9544213f91/legend-sdlc-server/src/test/java/org/finos/legend/sdlc/server/gitlab/api/docker/AbstractGitLabApiTest.java",
    "raw_url": "https://github.com/finos/legend-sdlc/raw/d7d2fd8946f9b74546896dd784d3ee9544213f91/legend-sdlc-server/src/test/java/org/finos/legend/sdlc/server/gitlab/api/docker/AbstractGitLabApiTest.java",
    "contents_url": "https://api.github.com/repos/finos/legend-sdlc/contents/legend-sdlc-server/src/test/java/org/finos/legend/sdlc/server/gitlab/api/docker/AbstractGitLabApiTest.java?ref=d7d2fd8946f9b74546896dd784d3ee9544213f91",
    "patch": "@@ -12,43 +12,35 @@\n // See the License for the specific language governing permissions and\n // limitations under the License.\n \n-package org.finos.legend.sdlc.server.gitlab.api;\n+package org.finos.legend.sdlc.server.gitlab.api.docker;\n \n import com.squarespace.jersey2.guice.JerseyGuiceUtils;\n-import org.finos.legend.sdlc.server.auth.LegendSDLCWebFilter;\n import org.finos.legend.sdlc.server.error.LegendSDLCServerException;\n-import org.finos.legend.sdlc.server.gitlab.GitLabAppInfo;\n-import org.finos.legend.sdlc.server.gitlab.GitLabServerInfo;\n+import org.finos.legend.sdlc.server.gitlab.api.GitLabApiTestSetupUtil;\n import org.finos.legend.sdlc.server.gitlab.auth.GitLabUserContext;\n-import org.finos.legend.sdlc.server.gitlab.auth.TestGitLabSession;\n-import org.finos.legend.sdlc.server.gitlab.mode.GitLabMode;\n-import org.finos.legend.sdlc.server.gitlab.mode.GitLabModeInfo;\n import org.finos.legend.sdlc.server.tools.BackgroundTaskProcessor;\n import org.gitlab4j.api.GitLabApi;\n import org.gitlab4j.api.GitLabApiException;\n import org.gitlab4j.api.models.User;\n-import org.gitlab4j.api.models.Version;\n import org.junit.AfterClass;\n-import org.junit.Assert;\n import org.junit.BeforeClass;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n import java.security.SecureRandom;\n import java.util.Optional;\n-import javax.servlet.http.HttpServletRequest;\n \n /**\n  * Prepares subclass GitLab integration tests.\n  * Only run before the GitLab integration tests during integration-test phase in-between docker start and stop.\n  * Skipped during Junit tests.\n  *\n- * IMPORTANT: Please note that if wishing to run this integration test suite in an environment where the Docker\n- * container will be run in a VM, it is required to have local Docker installed, with recommended at least 4 Gi\n- * memory allocated. If encountering GitLab not responding issues, please raise the docker-maven-plugin wait time\n- * to approximately 450000ms in legend-sdlc-server/pom.xml.\n- * If your machine cannot suffice the resource requirements or fail to pass the test suite, please use maven profile\n- * skip-integration-tests to skip them during the build.\n+ * IMPORTANT: Please note that this docker-based test suite is skipped by default. Please run maven verify with\n+ * one of maven profiles test-#version-gitlab to unskip these tests, where #version is the GitLab Docker image version used.\n+ * If wishing to run this integration test suite in an environment where the Docker container will be run in a VM,\n+ * it is required to have local Docker installed, with recommended at least 4 Gi memory allocated.\n+ * If encountering GitLab not responding issues, please raise the docker-maven-plugin wait time to\n+ * approximately 450000 ms in legend-sdlc-server/pom.xml.\n  */\n public class AbstractGitLabApiTest\n {\n@@ -159,51 +151,13 @@ protected static GitLabUserContext prepareGitLabMemberUserContext() throws Legen\n \n     /**\n      * Authenticates to GitLab and creates a test GitLabUserContext.\n+     *\n      * @param username the name of user for whom we create this context.\n      * @param password the password of user for whom we create this context.\n      */\n     private static GitLabUserContext prepareGitLabUserContextHelper(String username, String password) throws LegendSDLCServerException\n     {\n-        GitLabMode gitLabMode = GitLabMode.UAT;\n-        HttpServletRequest httpServletRequest = new TestHttpServletRequest();\n-\n-        TestGitLabSession session = new TestGitLabSession(username);\n-        GitLabApi oauthGitLabApi;\n-        Version version;\n-\n-        try\n-        {\n-            oauthGitLabApi = GitLabApi.oauth2Login(TEST_HOST_URL, username, password, null, null, true);\n-            Assert.assertNotNull(oauthGitLabApi);\n-            version = oauthGitLabApi.getVersion();\n-        }\n-        catch (GitLabApiException e)\n-        {\n-            StringBuilder builder = new StringBuilder(\"Error instantiating GitLabApi via OAuth2; response status: \").append(e.getHttpStatus());\n-            String eMessage = e.getMessage();\n-            if (eMessage != null)\n-            {\n-                builder.append(\"; error message: \").append(eMessage);\n-            }\n-            if (e.hasValidationErrors())\n-            {\n-                builder.append(\"; validation error(s): \").append(e.getValidationErrors());\n-            }\n-            throw new LegendSDLCServerException(builder.toString(), e);\n-        }\n-\n-        String oauthToken = oauthGitLabApi.getAuthToken();\n-        LOGGER.info(\"Retrieved access token: {}\", oauthToken);\n-        Assert.assertNotNull(version);\n-\n-        GitLabServerInfo gitLabServerInfo = GitLabServerInfo.newServerInfo(TEST_HOST_SCHEME, TEST_HOST_HOST, TEST_HOST_PORT);\n-        GitLabAppInfo gitLabAppInfo = GitLabAppInfo.newAppInfo(gitLabServerInfo, null, null, null);\n-        GitLabModeInfo gitLabModeInfo = GitLabModeInfo.newModeInfo(gitLabMode, gitLabAppInfo);\n-\n-        session.setAccessToken(oauthToken);\n-        session.setModeInfo(gitLabModeInfo);\n-        LegendSDLCWebFilter.setSessionAttributeOnServletRequest(httpServletRequest, session);\n-        return new GitLabUserContext(httpServletRequest, null);\n+        return GitLabApiTestSetupUtil.prepareGitLabUserContextHelper(username, password, TEST_HOST_URL, TEST_HOST_SCHEME, TEST_HOST_HOST, TEST_HOST_PORT);\n     }\n \n     /**",
    "previous_filename": "legend-sdlc-server/src/test/java/org/finos/legend/sdlc/server/gitlab/api/AbstractGitLabApiTest.java"
  },
  {
    "sha": "9361504a66189ab6c12f34fba3e2daa14e3dcf53",
    "filename": "legend-sdlc-server/src/test/java/org/finos/legend/sdlc/server/gitlab/api/docker/IntegrationTestGitLabEntityApis.java",
    "status": "added",
    "additions": 65,
    "deletions": 0,
    "changes": 65,
    "blob_url": "https://github.com/finos/legend-sdlc/blob/d7d2fd8946f9b74546896dd784d3ee9544213f91/legend-sdlc-server/src/test/java/org/finos/legend/sdlc/server/gitlab/api/docker/IntegrationTestGitLabEntityApis.java",
    "raw_url": "https://github.com/finos/legend-sdlc/raw/d7d2fd8946f9b74546896dd784d3ee9544213f91/legend-sdlc-server/src/test/java/org/finos/legend/sdlc/server/gitlab/api/docker/IntegrationTestGitLabEntityApis.java",
    "contents_url": "https://api.github.com/repos/finos/legend-sdlc/contents/legend-sdlc-server/src/test/java/org/finos/legend/sdlc/server/gitlab/api/docker/IntegrationTestGitLabEntityApis.java?ref=d7d2fd8946f9b74546896dd784d3ee9544213f91",
    "patch": "@@ -0,0 +1,65 @@\n+// Copyright 2021 Goldman Sachs\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package org.finos.legend.sdlc.server.gitlab.api.docker;\n+\n+import org.finos.legend.sdlc.server.gitlab.GitLabConfiguration;\n+import org.finos.legend.sdlc.server.gitlab.api.GitLabEntityApi;\n+import org.finos.legend.sdlc.server.gitlab.api.GitLabEntityApiTestResource;\n+import org.finos.legend.sdlc.server.gitlab.api.GitLabProjectApi;\n+import org.finos.legend.sdlc.server.gitlab.api.GitLabReviewApi;\n+import org.finos.legend.sdlc.server.gitlab.api.GitLabRevisionApi;\n+import org.finos.legend.sdlc.server.gitlab.api.GitLabWorkspaceApi;\n+import org.finos.legend.sdlc.server.gitlab.auth.GitLabUserContext;\n+import org.finos.legend.sdlc.server.project.config.ProjectStructureConfiguration;\n+import org.gitlab4j.api.GitLabApiException;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+public class IntegrationTestGitLabEntityApis extends AbstractGitLabApiTest\n+{\n+    private static GitLabEntityApiTestResource gitLabEntityApiTestResource;\n+\n+    @BeforeClass\n+    public static void setup() throws GitLabApiException\n+    {\n+        setUpEntityApi();\n+    }\n+\n+    @Test\n+    public void testEntitiesInNormalWorkflow() throws GitLabApiException\n+    {\n+        gitLabEntityApiTestResource.runEntitiesInNormalWorkflowTest();\n+    }\n+\n+    /**\n+     * Authenticates with OAuth2 and instantiate the test SDLC GitLabEntityApi.\n+     */\n+    private static void setUpEntityApi()\n+    {\n+        GitLabUserContext gitLabMemberUserContext = prepareGitLabMemberUserContext();\n+        GitLabUserContext gitLabOwnerUserContext = prepareGitLabOwnerUserContext();\n+        GitLabConfiguration gitLabConfig = GitLabConfiguration.newGitLabConfiguration(null, null, null, null, null);\n+        ProjectStructureConfiguration projectStructureConfig = ProjectStructureConfiguration.emptyConfiguration();\n+\n+        GitLabProjectApi gitLabProjectApi = new GitLabProjectApi(gitLabConfig, gitLabOwnerUserContext, projectStructureConfig, null, null, backgroundTaskProcessor);\n+        GitLabRevisionApi gitLabRevisionApi = new GitLabRevisionApi(gitLabMemberUserContext, backgroundTaskProcessor);\n+        GitLabWorkspaceApi gitLabWorkspaceApi = new GitLabWorkspaceApi(gitLabMemberUserContext, gitLabRevisionApi, backgroundTaskProcessor);\n+        GitLabEntityApi gitLabEntityApi = new GitLabEntityApi(gitLabMemberUserContext, backgroundTaskProcessor);\n+        GitLabReviewApi gitLabCommitterReviewApi = new GitLabReviewApi(gitLabMemberUserContext);\n+        GitLabReviewApi gitLabApproverReviewApi = new GitLabReviewApi(gitLabOwnerUserContext);\n+\n+        gitLabEntityApiTestResource = new GitLabEntityApiTestResource(gitLabProjectApi, gitLabWorkspaceApi, gitLabEntityApi, gitLabCommitterReviewApi, gitLabApproverReviewApi, gitLabMemberUserContext);\n+    }\n+}"
  },
  {
    "sha": "825d76cb075280f1f62e65f81225091e11b09da8",
    "filename": "legend-sdlc-server/src/test/java/org/finos/legend/sdlc/server/gitlab/api/docker/IntegrationTestGitLabProjectApis.java",
    "status": "added",
    "additions": 68,
    "deletions": 0,
    "changes": 68,
    "blob_url": "https://github.com/finos/legend-sdlc/blob/d7d2fd8946f9b74546896dd784d3ee9544213f91/legend-sdlc-server/src/test/java/org/finos/legend/sdlc/server/gitlab/api/docker/IntegrationTestGitLabProjectApis.java",
    "raw_url": "https://github.com/finos/legend-sdlc/raw/d7d2fd8946f9b74546896dd784d3ee9544213f91/legend-sdlc-server/src/test/java/org/finos/legend/sdlc/server/gitlab/api/docker/IntegrationTestGitLabProjectApis.java",
    "contents_url": "https://api.github.com/repos/finos/legend-sdlc/contents/legend-sdlc-server/src/test/java/org/finos/legend/sdlc/server/gitlab/api/docker/IntegrationTestGitLabProjectApis.java?ref=d7d2fd8946f9b74546896dd784d3ee9544213f91",
    "patch": "@@ -0,0 +1,68 @@\n+// Copyright 2021 Goldman Sachs\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package org.finos.legend.sdlc.server.gitlab.api.docker;\n+\n+import org.finos.legend.sdlc.server.error.LegendSDLCServerException;\n+import org.finos.legend.sdlc.server.gitlab.GitLabConfiguration;\n+import org.finos.legend.sdlc.server.gitlab.api.GitLabProjectApi;\n+import org.finos.legend.sdlc.server.gitlab.api.GitLabProjectApiTestResource;\n+import org.finos.legend.sdlc.server.gitlab.auth.GitLabUserContext;\n+import org.finos.legend.sdlc.server.project.config.ProjectStructureConfiguration;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+public class IntegrationTestGitLabProjectApis extends AbstractGitLabApiTest\n+{\n+    private static GitLabProjectApiTestResource gitLabProjectApiTestResource;\n+\n+    @BeforeClass\n+    public static void setup() throws LegendSDLCServerException\n+    {\n+        setUpProjectApi();\n+    }\n+\n+    @Test\n+    public void testCreateProject() throws LegendSDLCServerException\n+    {\n+        gitLabProjectApiTestResource.runCreateProjectTest();\n+    }\n+\n+    @Test\n+    public void testGetProject() throws LegendSDLCServerException\n+    {\n+        gitLabProjectApiTestResource.runGetProjectTest();\n+    }\n+\n+    @Test\n+    public void testUpdateProject()\n+    {\n+        gitLabProjectApiTestResource.runUpdateProjectTest();\n+    }\n+\n+    /**\n+     * Authenticates with OAuth2 and instantiate the test SDLC GitLabProjectApi.\n+     *\n+     * @throws LegendSDLCServerException if cannot authenticates to GitLab.\n+     */\n+    private static void setUpProjectApi() throws LegendSDLCServerException\n+    {\n+        GitLabConfiguration gitLabConfig = GitLabConfiguration.newGitLabConfiguration(null, null, null, null, null);\n+        ProjectStructureConfiguration projectStructureConfig = ProjectStructureConfiguration.emptyConfiguration();\n+        GitLabUserContext gitLabUserContext = prepareGitLabOwnerUserContext();\n+\n+        GitLabProjectApi gitLabProjectApi = new GitLabProjectApi(gitLabConfig, gitLabUserContext, projectStructureConfig, null, null, backgroundTaskProcessor);\n+        gitLabProjectApiTestResource = new GitLabProjectApiTestResource(gitLabProjectApi);\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "84f74089b4815e01d3450f4071f1962717ab3db5",
    "filename": "legend-sdlc-server/src/test/java/org/finos/legend/sdlc/server/gitlab/api/docker/IntegrationTestGitLabWorkspaceApis.java",
    "status": "added",
    "additions": 58,
    "deletions": 0,
    "changes": 58,
    "blob_url": "https://github.com/finos/legend-sdlc/blob/d7d2fd8946f9b74546896dd784d3ee9544213f91/legend-sdlc-server/src/test/java/org/finos/legend/sdlc/server/gitlab/api/docker/IntegrationTestGitLabWorkspaceApis.java",
    "raw_url": "https://github.com/finos/legend-sdlc/raw/d7d2fd8946f9b74546896dd784d3ee9544213f91/legend-sdlc-server/src/test/java/org/finos/legend/sdlc/server/gitlab/api/docker/IntegrationTestGitLabWorkspaceApis.java",
    "contents_url": "https://api.github.com/repos/finos/legend-sdlc/contents/legend-sdlc-server/src/test/java/org/finos/legend/sdlc/server/gitlab/api/docker/IntegrationTestGitLabWorkspaceApis.java?ref=d7d2fd8946f9b74546896dd784d3ee9544213f91",
    "patch": "@@ -0,0 +1,58 @@\n+// Copyright 2021 Goldman Sachs\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package org.finos.legend.sdlc.server.gitlab.api.docker;\n+\n+import org.finos.legend.sdlc.server.gitlab.GitLabConfiguration;\n+import org.finos.legend.sdlc.server.gitlab.api.GitLabProjectApi;\n+import org.finos.legend.sdlc.server.gitlab.api.GitLabRevisionApi;\n+import org.finos.legend.sdlc.server.gitlab.api.GitLabWorkspaceApi;\n+import org.finos.legend.sdlc.server.gitlab.api.GitLabWorkspaceApiTestResource;\n+import org.finos.legend.sdlc.server.gitlab.auth.GitLabUserContext;\n+import org.finos.legend.sdlc.server.project.config.ProjectStructureConfiguration;\n+import org.gitlab4j.api.GitLabApiException;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+public class IntegrationTestGitLabWorkspaceApis extends AbstractGitLabApiTest\n+{\n+    private static GitLabWorkspaceApiTestResource gitLabWorkspaceApiTestResource;\n+\n+    @BeforeClass\n+    public static void setup() throws GitLabApiException\n+    {\n+        setUpWorkspaceApi();\n+    }\n+\n+    @Test\n+    public void testCreateWorkspace()\n+    {\n+        gitLabWorkspaceApiTestResource.runCreateWorkspaceTest();\n+    }\n+\n+    /**\n+     * Authenticates with OAuth2 and instantiate the test SDLC GitLabWorkspaceApi.\n+     */\n+    private static void setUpWorkspaceApi()\n+    {\n+        GitLabConfiguration gitLabConfig = GitLabConfiguration.newGitLabConfiguration(null, null, null, null, null);\n+        ProjectStructureConfiguration projectStructureConfig = ProjectStructureConfiguration.emptyConfiguration();\n+        GitLabUserContext gitLabUserContext = prepareGitLabOwnerUserContext();\n+\n+        GitLabProjectApi gitLabProjectApi = new GitLabProjectApi(gitLabConfig, gitLabUserContext, projectStructureConfig, null, null, backgroundTaskProcessor);\n+        GitLabRevisionApi gitLabRevisionApi = new GitLabRevisionApi(gitLabUserContext, backgroundTaskProcessor);\n+        GitLabWorkspaceApi gitLabWorkspaceApi = new GitLabWorkspaceApi(gitLabUserContext, gitLabRevisionApi, backgroundTaskProcessor);\n+        gitLabWorkspaceApiTestResource = new GitLabWorkspaceApiTestResource(gitLabRevisionApi, gitLabWorkspaceApi, gitLabProjectApi);\n+    }\n+}"
  },
  {
    "sha": "70b30d797330fe63808bac0bae303ef02650a673",
    "filename": "legend-sdlc-server/src/test/java/org/finos/legend/sdlc/server/gitlab/api/server/AbstractGitLabServerApiTest.java",
    "status": "added",
    "additions": 124,
    "deletions": 0,
    "changes": 124,
    "blob_url": "https://github.com/finos/legend-sdlc/blob/d7d2fd8946f9b74546896dd784d3ee9544213f91/legend-sdlc-server/src/test/java/org/finos/legend/sdlc/server/gitlab/api/server/AbstractGitLabServerApiTest.java",
    "raw_url": "https://github.com/finos/legend-sdlc/raw/d7d2fd8946f9b74546896dd784d3ee9544213f91/legend-sdlc-server/src/test/java/org/finos/legend/sdlc/server/gitlab/api/server/AbstractGitLabServerApiTest.java",
    "contents_url": "https://api.github.com/repos/finos/legend-sdlc/contents/legend-sdlc-server/src/test/java/org/finos/legend/sdlc/server/gitlab/api/server/AbstractGitLabServerApiTest.java?ref=d7d2fd8946f9b74546896dd784d3ee9544213f91",
    "patch": "@@ -0,0 +1,124 @@\n+// Copyright 2021 Goldman Sachs\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package org.finos.legend.sdlc.server.gitlab.api.server;\n+\n+import com.squarespace.jersey2.guice.JerseyGuiceUtils;\n+import org.eclipse.collections.api.factory.Lists;\n+import org.finos.legend.sdlc.domain.model.project.Project;\n+import org.finos.legend.sdlc.server.error.LegendSDLCServerException;\n+import org.finos.legend.sdlc.server.gitlab.api.GitLabApiTestSetupUtil;\n+import org.finos.legend.sdlc.server.gitlab.api.GitLabProjectApi;\n+import org.finos.legend.sdlc.server.gitlab.auth.GitLabUserContext;\n+import org.finos.legend.sdlc.server.tools.BackgroundTaskProcessor;\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.List;\n+\n+/**\n+ * This test suite is run against the actual GitLab server with testing account setup. The suite is skipped by default.\n+ * If wishing to run these tests, please run maven verify with the test-gitlab-com maven profile\n+ */\n+public class AbstractGitLabServerApiTest\n+{\n+    // Note that for the gitlab.com -based tests, the test member and owner are of the same GitLab account\n+    // thus have the same credentials, yet used to create separate GitLab API instances for merge request related tests.\n+    static final String TEST_OWNER_USERNAME = \"CptTeddy\"; //System.getenv(\"GITLAB_USERNAME\");\n+    static final String TEST_OWNER_PASSWORD = \"lfx6666ddaa\"; //System.getenv(\"GITLAB_PASSWORD\");\n+    static final String TEST_MEMBER_USERNAME = TEST_OWNER_USERNAME;\n+    static final String TEST_MEMBER_PASSWORD = TEST_OWNER_PASSWORD;\n+    static final String TEST_HOST_SCHEME = \"https\";\n+    static final String TEST_HOST_HOST = \"gitlab.com\";\n+    static final Integer TEST_HOST_PORT = null;\n+    static final String TEST_HOST_URL = \"https://gitlab.com\";\n+\n+    static final BackgroundTaskProcessor backgroundTaskProcessor = new BackgroundTaskProcessor(1);\n+\n+    static final Logger LOGGER = LoggerFactory.getLogger(AbstractGitLabServerApiTest.class);\n+\n+    @BeforeClass\n+    public static void suiteSetup()\n+    {\n+        JerseyGuiceUtils.install((s, serviceLocator) -> null);\n+    }\n+\n+    @AfterClass\n+    public static void shutDown()\n+    {\n+        LOGGER.info(\"Shutting down backgroundTaskProcessor.\");\n+        backgroundTaskProcessor.shutdown();\n+        LOGGER.info(\"Shut down backgroundTaskProcessor.\");\n+    }\n+\n+    /**\n+     * Authenticates to GitLab and creates a test GitLabUserContext for a project owner.\n+     * Please note that for the server test, separate instances of GitLabApis are necessary for owner and member for the same test account.\n+     *\n+     * @return A test GitLabUserContext for a project owner.\n+     * @throws LegendSDLCServerException if cannot authenticate to GitLab via OAuth.\n+     */\n+    protected static GitLabUserContext prepareGitLabOwnerUserContext() throws LegendSDLCServerException\n+    {\n+        return prepareGitLabUserContextHelper(TEST_OWNER_USERNAME, TEST_OWNER_PASSWORD);\n+    }\n+\n+    /**\n+     * Authenticates to GitLab and creates a test GitLabUserContext for a project member.\n+     *\n+     * @return A test GitLabUserContext for a project member.\n+     * @throws LegendSDLCServerException if cannot authenticate to GitLab via OAuth.\n+     */\n+    protected static GitLabUserContext prepareGitLabMemberUserContext() throws LegendSDLCServerException\n+    {\n+        return prepareGitLabUserContextHelper(TEST_MEMBER_USERNAME, TEST_MEMBER_PASSWORD);\n+    }\n+\n+    /**\n+     * Authenticates to GitLab and creates a test GitLabUserContext.\n+     *\n+     * @param username the name of user for whom we create this context.\n+     * @param password the password of user for whom we create this context.\n+     */\n+    private static GitLabUserContext prepareGitLabUserContextHelper(String username, String password) throws LegendSDLCServerException\n+    {\n+        return GitLabApiTestSetupUtil.prepareGitLabUserContextHelper(username, password, TEST_HOST_URL, TEST_HOST_SCHEME, TEST_HOST_HOST, TEST_HOST_PORT);\n+    }\n+\n+    /**\n+     * Clean up all potential test projects.\n+     */\n+    protected static void cleanUpTestProjects(GitLabProjectApi gitLabProjectApi)\n+    {\n+        List<Project> projectsToBeCleaned = gitLabProjectApi.getProjects(true, \"\", Lists.mutable.empty(), Lists.mutable.empty());\n+        for (Project project : projectsToBeCleaned)\n+        {\n+            String projectId = project.getProjectId();\n+            String projectName = project.getName();\n+\n+            LOGGER.info(\"Deleting test project id: {}, name: {}\", projectId, projectName);\n+            try\n+            {\n+                gitLabProjectApi.deleteProject(projectId);\n+            }\n+            catch (Exception e)\n+            {\n+                LOGGER.error(\"Failed to delete project id {}, name: {} during cleanup.\", projectId, projectName);\n+            }\n+            LOGGER.info(\"Deleted test project id: {}, name: {}\", projectId, projectName);\n+        }\n+    }\n+}"
  },
  {
    "sha": "4d271d774eb272c2f267a9786669002ea9b504e8",
    "filename": "legend-sdlc-server/src/test/java/org/finos/legend/sdlc/server/gitlab/api/server/TestGitLabServerEntityApis.java",
    "status": "added",
    "additions": 74,
    "deletions": 0,
    "changes": 74,
    "blob_url": "https://github.com/finos/legend-sdlc/blob/d7d2fd8946f9b74546896dd784d3ee9544213f91/legend-sdlc-server/src/test/java/org/finos/legend/sdlc/server/gitlab/api/server/TestGitLabServerEntityApis.java",
    "raw_url": "https://github.com/finos/legend-sdlc/raw/d7d2fd8946f9b74546896dd784d3ee9544213f91/legend-sdlc-server/src/test/java/org/finos/legend/sdlc/server/gitlab/api/server/TestGitLabServerEntityApis.java",
    "contents_url": "https://api.github.com/repos/finos/legend-sdlc/contents/legend-sdlc-server/src/test/java/org/finos/legend/sdlc/server/gitlab/api/server/TestGitLabServerEntityApis.java?ref=d7d2fd8946f9b74546896dd784d3ee9544213f91",
    "patch": "@@ -0,0 +1,74 @@\n+// Copyright 2021 Goldman Sachs\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package org.finos.legend.sdlc.server.gitlab.api.server;\n+\n+import org.finos.legend.sdlc.server.error.LegendSDLCServerException;\n+import org.finos.legend.sdlc.server.gitlab.GitLabConfiguration;\n+import org.finos.legend.sdlc.server.gitlab.api.GitLabEntityApi;\n+import org.finos.legend.sdlc.server.gitlab.api.GitLabEntityApiTestResource;\n+import org.finos.legend.sdlc.server.gitlab.api.GitLabProjectApi;\n+import org.finos.legend.sdlc.server.gitlab.api.GitLabReviewApi;\n+import org.finos.legend.sdlc.server.gitlab.api.GitLabRevisionApi;\n+import org.finos.legend.sdlc.server.gitlab.api.GitLabWorkspaceApi;\n+import org.finos.legend.sdlc.server.gitlab.auth.GitLabUserContext;\n+import org.finos.legend.sdlc.server.project.config.ProjectStructureConfiguration;\n+import org.gitlab4j.api.GitLabApiException;\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+public class TestGitLabServerEntityApis extends AbstractGitLabServerApiTest\n+{\n+    private static GitLabEntityApiTestResource gitLabEntityApiTestResource;\n+\n+    @BeforeClass\n+    public static void setup() throws GitLabApiException\n+    {\n+        setUpEntityApi();\n+        cleanUpTestProjects(gitLabEntityApiTestResource.getGitLabProjectApi());\n+    }\n+\n+    @AfterClass\n+    public static void teardown() throws LegendSDLCServerException\n+    {\n+        cleanUpTestProjects(gitLabEntityApiTestResource.getGitLabProjectApi());\n+    }\n+\n+    @Test\n+    public void testEntitiesInNormalWorkflow() throws GitLabApiException\n+    {\n+        gitLabEntityApiTestResource.runEntitiesInNormalWorkflowTest();\n+    }\n+\n+    /**\n+     * Authenticates with OAuth2 and instantiate the test SDLC GitLabEntityApi.\n+     */\n+    private static void setUpEntityApi()\n+    {\n+        GitLabUserContext gitLabMemberUserContext = prepareGitLabMemberUserContext();\n+        GitLabUserContext gitLabOwnerUserContext = prepareGitLabOwnerUserContext();\n+        GitLabConfiguration gitLabConfig = GitLabConfiguration.newGitLabConfiguration(null, null, null, null, GitLabConfiguration.NewProjectVisibility.PRIVATE);\n+        ProjectStructureConfiguration projectStructureConfig = ProjectStructureConfiguration.emptyConfiguration();\n+\n+        GitLabProjectApi gitLabProjectApi = new GitLabProjectApi(gitLabConfig, gitLabOwnerUserContext, projectStructureConfig, null, gitLabConfig, backgroundTaskProcessor);\n+        GitLabRevisionApi gitLabRevisionApi = new GitLabRevisionApi(gitLabMemberUserContext, backgroundTaskProcessor);\n+        GitLabWorkspaceApi gitLabWorkspaceApi = new GitLabWorkspaceApi(gitLabMemberUserContext, gitLabRevisionApi, backgroundTaskProcessor);\n+        GitLabEntityApi gitLabEntityApi = new GitLabEntityApi(gitLabMemberUserContext, backgroundTaskProcessor);\n+        GitLabReviewApi gitLabCommitterReviewApi = new GitLabReviewApi(gitLabMemberUserContext);\n+        GitLabReviewApi gitLabApproverReviewApi = new GitLabReviewApi(gitLabOwnerUserContext);\n+\n+        gitLabEntityApiTestResource = new GitLabEntityApiTestResource(gitLabProjectApi, gitLabWorkspaceApi, gitLabEntityApi, gitLabCommitterReviewApi, gitLabApproverReviewApi, gitLabMemberUserContext);\n+    }\n+}"
  },
  {
    "sha": "12d9f63f50a1f366a0b2e240be464c5973c66358",
    "filename": "legend-sdlc-server/src/test/java/org/finos/legend/sdlc/server/gitlab/api/server/TestGitLabServerProjectApis.java",
    "status": "added",
    "additions": 76,
    "deletions": 0,
    "changes": 76,
    "blob_url": "https://github.com/finos/legend-sdlc/blob/d7d2fd8946f9b74546896dd784d3ee9544213f91/legend-sdlc-server/src/test/java/org/finos/legend/sdlc/server/gitlab/api/server/TestGitLabServerProjectApis.java",
    "raw_url": "https://github.com/finos/legend-sdlc/raw/d7d2fd8946f9b74546896dd784d3ee9544213f91/legend-sdlc-server/src/test/java/org/finos/legend/sdlc/server/gitlab/api/server/TestGitLabServerProjectApis.java",
    "contents_url": "https://api.github.com/repos/finos/legend-sdlc/contents/legend-sdlc-server/src/test/java/org/finos/legend/sdlc/server/gitlab/api/server/TestGitLabServerProjectApis.java?ref=d7d2fd8946f9b74546896dd784d3ee9544213f91",
    "patch": "@@ -0,0 +1,76 @@\n+// Copyright 2021 Goldman Sachs\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package org.finos.legend.sdlc.server.gitlab.api.server;\n+\n+import org.finos.legend.sdlc.server.error.LegendSDLCServerException;\n+import org.finos.legend.sdlc.server.gitlab.GitLabConfiguration;\n+import org.finos.legend.sdlc.server.gitlab.api.GitLabProjectApi;\n+import org.finos.legend.sdlc.server.gitlab.api.GitLabProjectApiTestResource;\n+import org.finos.legend.sdlc.server.gitlab.auth.GitLabUserContext;\n+import org.finos.legend.sdlc.server.project.config.ProjectStructureConfiguration;\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+public class TestGitLabServerProjectApis extends AbstractGitLabServerApiTest\n+{\n+    private static GitLabProjectApiTestResource gitLabProjectApiTestResource;\n+\n+    @BeforeClass\n+    public static void setup() throws LegendSDLCServerException\n+    {\n+        setUpProjectApi();\n+        cleanUpTestProjects(gitLabProjectApiTestResource.getGitLabProjectApi());\n+    }\n+\n+    @AfterClass\n+    public static void teardown() throws LegendSDLCServerException\n+    {\n+        cleanUpTestProjects(gitLabProjectApiTestResource.getGitLabProjectApi());\n+    }\n+\n+    @Test\n+    public void testCreateProject() throws LegendSDLCServerException\n+    {\n+        gitLabProjectApiTestResource.runCreateProjectTest();\n+    }\n+\n+    @Test\n+    public void testGetProject() throws LegendSDLCServerException\n+    {\n+        gitLabProjectApiTestResource.runGetProjectTest();\n+    }\n+\n+    @Test\n+    public void testUpdateProject()\n+    {\n+        gitLabProjectApiTestResource.runUpdateProjectTest();\n+    }\n+\n+    /**\n+     * Authenticates with OAuth2 and instantiate the test SDLC GitLabProjectApi.\n+     *\n+     * @throws LegendSDLCServerException if cannot authenticates to GitLab.\n+     */\n+    private static void setUpProjectApi() throws LegendSDLCServerException\n+    {\n+        GitLabConfiguration gitLabConfig = GitLabConfiguration.newGitLabConfiguration(null, null, null, null, GitLabConfiguration.NewProjectVisibility.PRIVATE);\n+        ProjectStructureConfiguration projectStructureConfig = ProjectStructureConfiguration.emptyConfiguration();\n+        GitLabUserContext gitLabUserContext = prepareGitLabOwnerUserContext();\n+\n+        GitLabProjectApi gitLabProjectApi = new GitLabProjectApi(gitLabConfig, gitLabUserContext, projectStructureConfig, null, gitLabConfig, backgroundTaskProcessor);\n+        gitLabProjectApiTestResource = new GitLabProjectApiTestResource(gitLabProjectApi);\n+    }\n+}"
  },
  {
    "sha": "ced8d703cdfee6134077bcda9802192c5fa92e25",
    "filename": "legend-sdlc-server/src/test/java/org/finos/legend/sdlc/server/gitlab/api/server/TestGitLabServerWorkspaceApis.java",
    "status": "added",
    "additions": 67,
    "deletions": 0,
    "changes": 67,
    "blob_url": "https://github.com/finos/legend-sdlc/blob/d7d2fd8946f9b74546896dd784d3ee9544213f91/legend-sdlc-server/src/test/java/org/finos/legend/sdlc/server/gitlab/api/server/TestGitLabServerWorkspaceApis.java",
    "raw_url": "https://github.com/finos/legend-sdlc/raw/d7d2fd8946f9b74546896dd784d3ee9544213f91/legend-sdlc-server/src/test/java/org/finos/legend/sdlc/server/gitlab/api/server/TestGitLabServerWorkspaceApis.java",
    "contents_url": "https://api.github.com/repos/finos/legend-sdlc/contents/legend-sdlc-server/src/test/java/org/finos/legend/sdlc/server/gitlab/api/server/TestGitLabServerWorkspaceApis.java?ref=d7d2fd8946f9b74546896dd784d3ee9544213f91",
    "patch": "@@ -0,0 +1,67 @@\n+// Copyright 2021 Goldman Sachs\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package org.finos.legend.sdlc.server.gitlab.api.server;\n+\n+import org.finos.legend.sdlc.server.error.LegendSDLCServerException;\n+import org.finos.legend.sdlc.server.gitlab.GitLabConfiguration;\n+import org.finos.legend.sdlc.server.gitlab.api.GitLabProjectApi;\n+import org.finos.legend.sdlc.server.gitlab.api.GitLabRevisionApi;\n+import org.finos.legend.sdlc.server.gitlab.api.GitLabWorkspaceApi;\n+import org.finos.legend.sdlc.server.gitlab.api.GitLabWorkspaceApiTestResource;\n+import org.finos.legend.sdlc.server.gitlab.auth.GitLabUserContext;\n+import org.finos.legend.sdlc.server.project.config.ProjectStructureConfiguration;\n+import org.gitlab4j.api.GitLabApiException;\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+public class TestGitLabServerWorkspaceApis extends AbstractGitLabServerApiTest\n+{\n+    private static GitLabWorkspaceApiTestResource gitLabWorkspaceApiTestResource;\n+\n+    @BeforeClass\n+    public static void setup() throws GitLabApiException\n+    {\n+        setUpWorkspaceApi();\n+        cleanUpTestProjects(gitLabWorkspaceApiTestResource.getGitLabProjectApi());\n+    }\n+\n+    @AfterClass\n+    public static void teardown() throws LegendSDLCServerException\n+    {\n+        cleanUpTestProjects(gitLabWorkspaceApiTestResource.getGitLabProjectApi());\n+    }\n+\n+    @Test\n+    public void testCreateWorkspace()\n+    {\n+        gitLabWorkspaceApiTestResource.runCreateWorkspaceTest();\n+    }\n+\n+    /**\n+     * Authenticates with OAuth2 and instantiate the test SDLC GitLabWorkspaceApi.\n+     */\n+    private static void setUpWorkspaceApi()\n+    {\n+        GitLabConfiguration gitLabConfig = GitLabConfiguration.newGitLabConfiguration(null, null, null, null, GitLabConfiguration.NewProjectVisibility.PRIVATE);\n+        ProjectStructureConfiguration projectStructureConfig = ProjectStructureConfiguration.emptyConfiguration();\n+        GitLabUserContext gitLabUserContext = prepareGitLabOwnerUserContext();\n+\n+        GitLabProjectApi gitLabProjectApi = new GitLabProjectApi(gitLabConfig, gitLabUserContext, projectStructureConfig, null, gitLabConfig, backgroundTaskProcessor);\n+        GitLabRevisionApi gitLabRevisionApi = new GitLabRevisionApi(gitLabUserContext, backgroundTaskProcessor);\n+        GitLabWorkspaceApi gitLabWorkspaceApi = new GitLabWorkspaceApi(gitLabUserContext, gitLabRevisionApi, backgroundTaskProcessor);\n+        gitLabWorkspaceApiTestResource = new GitLabWorkspaceApiTestResource(gitLabRevisionApi, gitLabWorkspaceApi, gitLabProjectApi);\n+    }\n+}"
  },
  {
    "sha": "70dc24a085c00316dad8d961cb4e4ade464beb68",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 27,
    "deletions": 6,
    "changes": 33,
    "blob_url": "https://github.com/finos/legend-sdlc/blob/d7d2fd8946f9b74546896dd784d3ee9544213f91/pom.xml",
    "raw_url": "https://github.com/finos/legend-sdlc/raw/d7d2fd8946f9b74546896dd784d3ee9544213f91/pom.xml",
    "contents_url": "https://api.github.com/repos/finos/legend-sdlc/contents/pom.xml?ref=d7d2fd8946f9b74546896dd784d3ee9544213f91",
    "patch": "@@ -95,6 +95,7 @@\n \n         <!-- Integration tests -->\n         <skipITs>true</skipITs>\n+        <skipGitLabDockerTests>true</skipGitLabDockerTests>\n     </properties>\n \n     <scm>\n@@ -354,6 +355,7 @@\n                     </reportsDirectory>\n                     <excludes>\n                         <exclude>**/IntegrationTestGitLab*.java</exclude>\n+                        <exclude>**/TestGitLabServer*.java</exclude>\n                     </excludes>\n                 </configuration>\n             </plugin>\n@@ -1094,32 +1096,51 @@\n                 <skipITs>false</skipITs>\n             </properties>\n         </profile>\n-        <profile>\n-            <id>skip-integration-tests</id>\n-            <properties>\n-                <skipITs>true</skipITs>\n-            </properties>\n-        </profile>\n         <profile>\n             <id>test-latest-gitlab</id>\n             <properties>\n                 <gitlab.version>latest</gitlab.version>\n                 <skipITs>false</skipITs>\n+                <skipGitLabDockerTests>false</skipGitLabDockerTests>\n             </properties>\n         </profile>\n         <profile>\n             <id>test-nightly-gitlab</id>\n             <properties>\n                 <gitlab.version>nightly</gitlab.version>\n                 <skipITs>false</skipITs>\n+                <skipGitLabDockerTests>false</skipGitLabDockerTests>\n             </properties>\n         </profile>\n         <profile>\n             <id>test-latest-twelve-gitlab</id>\n             <properties>\n                 <gitlab.version>12.10.14-ee.0</gitlab.version>\n                 <skipITs>false</skipITs>\n+                <skipGitLabDockerTests>false</skipGitLabDockerTests>\n+            </properties>\n+        </profile>\n+        <profile>\n+            <id>test-gitlab-com</id>\n+            <properties>\n+                <skipITs>false</skipITs>\n             </properties>\n+            <build>\n+                <plugins>\n+                    <plugin>\n+                        <groupId>org.apache.maven.plugins</groupId>\n+                        <artifactId>maven-failsafe-plugin</artifactId>\n+                        <configuration>\n+                            <excludes>\n+                                <exclude>none</exclude>\n+                            </excludes>\n+                            <includes>\n+                                <include>**/TestGitLabServer*.java</include>\n+                            </includes>\n+                        </configuration>\n+                    </plugin>\n+                </plugins>\n+            </build>\n         </profile>\n     </profiles>\n </project>"
  }
]
