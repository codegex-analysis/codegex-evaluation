[
  {
    "sha": "36717b4858e5b24442851088eb4f1337f249b916",
    "filename": ".github/ISSUE_TEMPLATE.md",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/Y-lenny/spring-framework/blob/e4f753e3e3237c1c7c6d0b57b7a30d6721923cba/.github/ISSUE_TEMPLATE.md",
    "raw_url": "https://github.com/Y-lenny/spring-framework/raw/e4f753e3e3237c1c7c6d0b57b7a30d6721923cba/.github/ISSUE_TEMPLATE.md",
    "contents_url": "https://api.github.com/repos/Y-lenny/spring-framework/contents/.github/ISSUE_TEMPLATE.md?ref=e4f753e3e3237c1c7c6d0b57b7a30d6721923cba",
    "patch": "@@ -1,5 +1,5 @@\n <!--\n-!!! For Security Vulnerabilities, please go to https://pivotal.io/security !!!\n+!!! For Security Vulnerabilities, please go to https://spring.io/security-policy !!!\n -->\n **Affects:** \\<Spring Framework version>\n \n@@ -14,4 +14,4 @@ Thanks for taking the time to create an issue. Please read the following:\n Issue or Pull Request? Create only one, not both. GitHub treats them as the same.\n If unsure, start with an issue, and if you submit a pull request later, the\n issue will be closed as superseded.\n--->\n\\ No newline at end of file\n+-->"
  },
  {
    "sha": "b08c4536d776ab01b34c647c53e8b567ca6af52a",
    "filename": ".gitignore",
    "status": "modified",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/Y-lenny/spring-framework/blob/e4f753e3e3237c1c7c6d0b57b7a30d6721923cba/.gitignore",
    "raw_url": "https://github.com/Y-lenny/spring-framework/raw/e4f753e3e3237c1c7c6d0b57b7a30d6721923cba/.gitignore",
    "contents_url": "https://api.github.com/repos/Y-lenny/spring-framework/contents/.gitignore?ref=e4f753e3e3237c1c7c6d0b57b7a30d6721923cba",
    "patch": "@@ -41,3 +41,6 @@ out\n test-output\n atlassian-ide-plugin.xml\n .gradletasknamecache\n+\n+# VS Code\n+.vscode/\n\\ No newline at end of file"
  },
  {
    "sha": "a236224cb58d2ce739257589c15729b726ed3253",
    "filename": "CONTRIBUTING.md",
    "status": "modified",
    "additions": 3,
    "deletions": 6,
    "changes": 9,
    "blob_url": "https://github.com/Y-lenny/spring-framework/blob/e4f753e3e3237c1c7c6d0b57b7a30d6721923cba/CONTRIBUTING.md",
    "raw_url": "https://github.com/Y-lenny/spring-framework/raw/e4f753e3e3237c1c7c6d0b57b7a30d6721923cba/CONTRIBUTING.md",
    "contents_url": "https://api.github.com/repos/Y-lenny/spring-framework/contents/CONTRIBUTING.md?ref=e4f753e3e3237c1c7c6d0b57b7a30d6721923cba",
    "patch": "@@ -125,10 +125,7 @@ The reference documentation is in the [src/docs/asciidoc](src/docs/asciidoc) dir\n edit source files, and submit directly from GitHub.\n \n When making changes locally, execute `./gradlew asciidoctor` and then browse the result under\n-`build/asciidoc/html5/index.html`.\n+`build/docs/ref-docs/html5/index.html`.\n \n-Asciidoctor also supports live editing. For more details read\n-[Editing AsciiDoc with Live Preview](https://asciidoctor.org/docs/editing-asciidoc-with-live-preview/).\n-Note that if you choose the\n-[System Monitor](https://asciidoctor.org/docs/editing-asciidoc-with-live-preview/#using-a-system-monitor)\n-option, you can find a Guardfile under `src/docs/asciidoc`.\n+Asciidoctor also supports live editing. For more details see\n+[AsciiDoc Tooling](https://docs.asciidoctor.org/asciidoctor/latest/tooling/)."
  },
  {
    "sha": "d3d16d18d1183e5c23b2d537efeb7d04e724f46c",
    "filename": "README.md",
    "status": "modified",
    "additions": 5,
    "deletions": 1,
    "changes": 6,
    "blob_url": "https://github.com/Y-lenny/spring-framework/blob/e4f753e3e3237c1c7c6d0b57b7a30d6721923cba/README.md",
    "raw_url": "https://github.com/Y-lenny/spring-framework/raw/e4f753e3e3237c1c7c6d0b57b7a30d6721923cba/README.md",
    "contents_url": "https://api.github.com/repos/Y-lenny/spring-framework/contents/README.md?ref=e4f753e3e3237c1c7c6d0b57b7a30d6721923cba",
    "patch": "@@ -1,4 +1,4 @@\n-# <img src=\"src/docs/spring-framework.png\" width=\"80\" height=\"80\"> Spring Framework [![Build Status](https://ci.spring.io/api/v1/teams/spring-framework/pipelines/spring-framework-5.3.x/jobs/build/badge)](https://ci.spring.io/teams/spring-framework/pipelines/spring-framework-5.3.x?groups=Build\")\n+# <img src=\"src/docs/spring-framework.png\" width=\"80\" height=\"80\"> Spring Framework [![Build Status](https://ci.spring.io/api/v1/teams/spring-framework/pipelines/spring-framework-5.3.x/jobs/build/badge)](https://ci.spring.io/teams/spring-framework/pipelines/spring-framework-5.3.x?groups=Build\") [![Revved up by Gradle Enterprise](https://img.shields.io/badge/Revved%20up%20by-Gradle%20Enterprise-06A0CE?logo=Gradle&labelColor=02303A)](https://ge.spring.io/scans?search.rootProjectNames=spring)\n \n This is the home of the Spring Framework: the foundation for all [Spring projects](https://spring.io/projects). Collectively the Spring Framework and the family of Spring projects are often referred to simply as \"Spring\". \n \n@@ -25,6 +25,10 @@ See the [Micro-Benchmarks](https://github.com/spring-projects/spring-framework/w\n \n See the [Build from Source](https://github.com/spring-projects/spring-framework/wiki/Build-from-Source) Wiki page and the [CONTRIBUTING.md](CONTRIBUTING.md) file.\n \n+## Continuous Integration Builds\n+\n+Information regarding CI builds can be found in the [Spring Framework Concourse pipeline](ci/README.adoc) documentation.\n+\n ## Stay in Touch\n \n Follow [@SpringCentral](https://twitter.com/springcentral), [@SpringFramework](https://twitter.com/springframework), and its [team members](https://twitter.com/springframework/lists/team/members) on Twitter. In-depth articles can be found at [The Spring Blog](https://spring.io/blog/), and releases are announced via our [news feed](https://spring.io/blog/category/news)."
  },
  {
    "sha": "28771f7859efb53691a8407f9197e76bb97f5111",
    "filename": "build.gradle",
    "status": "modified",
    "additions": 58,
    "deletions": 58,
    "changes": 116,
    "blob_url": "https://github.com/Y-lenny/spring-framework/blob/e4f753e3e3237c1c7c6d0b57b7a30d6721923cba/build.gradle",
    "raw_url": "https://github.com/Y-lenny/spring-framework/raw/e4f753e3e3237c1c7c6d0b57b7a30d6721923cba/build.gradle",
    "contents_url": "https://api.github.com/repos/Y-lenny/spring-framework/contents/build.gradle?ref=e4f753e3e3237c1c7c6d0b57b7a30d6721923cba",
    "patch": "@@ -1,15 +1,16 @@\n plugins {\n \tid 'io.spring.dependency-management' version '1.0.9.RELEASE' apply false\n \tid 'io.spring.nohttp' version '0.0.5.RELEASE'\n-\tid 'org.jetbrains.kotlin.jvm' version '1.4.10' apply false\n+\tid 'org.jetbrains.kotlin.jvm' version '1.4.31' apply false\n \tid 'org.jetbrains.dokka' version '0.10.1' apply false\n-\tid 'org.asciidoctor.jvm.convert' version '2.4.0'\n-\tid 'org.asciidoctor.jvm.pdf' version '2.4.0'\n+\tid 'org.asciidoctor.jvm.convert' version '3.1.0'\n+\tid 'org.asciidoctor.jvm.pdf' version '3.1.0'\n \tid 'de.undercouch.download' version '4.1.1'\n \tid \"io.freefair.aspectj\" version '5.1.1' apply false\n \tid \"com.github.ben-manes.versions\" version '0.28.0'\n-\tid \"me.champeau.gradle.jmh\" version \"0.5.0\" apply false\n-\tid \"org.jetbrains.kotlin.plugin.serialization\" version \"1.4.10\" apply false\n+\tid \"com.github.johnrengelman.shadow\" version \"6.1.0\" apply false\n+\tid \"me.champeau.gradle.jmh\" version \"0.5.2\" apply false\n+\tid \"org.jetbrains.kotlin.plugin.serialization\" version \"1.4.31\" apply false\n }\n \n ext {\n@@ -25,22 +26,22 @@ configure(allprojects) { project ->\n \n \tdependencyManagement {\n \t\timports {\n-\t\t\tmavenBom \"com.fasterxml.jackson:jackson-bom:2.11.2\"\n-\t\t\tmavenBom \"io.netty:netty-bom:4.1.52.Final\"\n-\t\t\tmavenBom \"io.projectreactor:reactor-bom:2020.0.0-RC1\"\n-\t\t\tmavenBom \"io.r2dbc:r2dbc-bom:Arabba-SR7\"\n-\t\t\tmavenBom \"io.rsocket:rsocket-bom:1.1.0-M2\"\n-\t\t\tmavenBom \"org.eclipse.jetty:jetty-bom:9.4.31.v20200723\"\n-\t\t\tmavenBom \"org.jetbrains.kotlin:kotlin-bom:1.4.10\"\n-\t\t\tmavenBom \"org.jetbrains.kotlinx:kotlinx-coroutines-bom:1.3.9\"\n-\t\t\tmavenBom \"org.junit:junit-bom:5.7.0\"\n+\t\t\tmavenBom \"com.fasterxml.jackson:jackson-bom:2.12.2\"\n+\t\t\tmavenBom \"io.netty:netty-bom:4.1.60.Final\"\n+\t\t\tmavenBom \"io.projectreactor:reactor-bom:2020.0.5\"\n+\t\t\tmavenBom \"io.r2dbc:r2dbc-bom:Arabba-SR9\"\n+\t\t\tmavenBom \"io.rsocket:rsocket-bom:1.1.0\"\n+\t\t\tmavenBom \"org.eclipse.jetty:jetty-bom:9.4.38.v20210224\"\n+\t\t\tmavenBom \"org.jetbrains.kotlin:kotlin-bom:1.4.30\"\n+\t\t\tmavenBom \"org.jetbrains.kotlinx:kotlinx-coroutines-bom:1.4.3\"\n+\t\t\tmavenBom \"org.junit:junit-bom:5.7.1\"\n \t\t}\n \t\tdependencies {\n-\t\t\tdependencySet(group: 'org.apache.logging.log4j', version: '2.13.3') {\n+\t\t\tdependencySet(group: 'org.apache.logging.log4j', version: '2.14.0') {\n \t\t\t\tentry 'log4j-api'\n \t\t\t\tentry 'log4j-core'\n-\t\t\t\tentry 'log4j-slf4j-impl'\n \t\t\t\tentry 'log4j-jul'\n+\t\t\t\tentry 'log4j-slf4j-impl'\n \t\t\t}\n \t\t\tdependency \"org.slf4j:slf4j-api:1.7.30\"\n \t\t\tdependency(\"com.google.code.findbugs:findbugs:3.0.1\") {\n@@ -53,7 +54,7 @@ configure(allprojects) { project ->\n \t\t\t\tentry 'aspectjtools'\n \t\t\t\tentry 'aspectjweaver'\n \t\t\t}\n-\t\t\tdependencySet(group: 'org.codehaus.groovy', version: '3.0.5') {\n+\t\t\tdependencySet(group: 'org.codehaus.groovy', version: '3.0.7') {\n \t\t\t\tentry 'groovy'\n \t\t\t\tentry 'groovy-jsr223'\n \t\t\t\tentry 'groovy-templates'  // requires findbugs for warning-free compilation\n@@ -63,23 +64,23 @@ configure(allprojects) { project ->\n \n \t\t\tdependency \"io.reactivex:rxjava:1.3.8\"\n \t\t\tdependency \"io.reactivex:rxjava-reactive-streams:1.2.1\"\n-\t\t\tdependency \"io.reactivex.rxjava2:rxjava:2.2.19\"\n-\t\t\tdependency \"io.reactivex.rxjava3:rxjava:3.0.6\"\n-\t\t\tdependency \"io.projectreactor.tools:blockhound:1.0.2.RELEASE\"\n+\t\t\tdependency \"io.reactivex.rxjava2:rxjava:2.2.21\"\n+\t\t\tdependency \"io.reactivex.rxjava3:rxjava:3.0.11\"\n+\t\t\tdependency \"io.projectreactor.tools:blockhound:1.0.4.RELEASE\"\n \n \t\t\tdependency \"com.caucho:hessian:4.0.63\"\n \t\t\tdependency \"com.fasterxml:aalto-xml:1.2.2\"\n-\t\t\tdependency(\"com.fasterxml.woodstox:woodstox-core:6.2.1\") {\n+\t\t\tdependency(\"com.fasterxml.woodstox:woodstox-core:6.2.4\") {\n \t\t\t\texclude group: \"stax\", name: \"stax-api\"\n \t\t\t}\n \t\t\tdependency \"com.google.code.gson:gson:2.8.6\"\n-\t\t\tdependency \"com.google.protobuf:protobuf-java-util:3.13.0\"\n+\t\t\tdependency \"com.google.protobuf:protobuf-java-util:3.15.5\"\n \t\t\tdependency \"com.googlecode.protobuf-java-format:protobuf-java-format:1.4\"\n-\t\t\tdependency(\"com.thoughtworks.xstream:xstream:1.4.13\") {\n+\t\t\tdependency(\"com.thoughtworks.xstream:xstream:1.4.15\") {\n \t\t\t\texclude group: \"xpp3\", name: \"xpp3_min\"\n \t\t\t\texclude group: \"xmlpull\", name: \"xmlpull\"\n \t\t\t}\n-\t\t\tdependency \"org.apache.johnzon:johnzon-jsonb:1.2.8\"\n+\t\t\tdependency \"org.apache.johnzon:johnzon-jsonb:1.2.10\"\n \t\t\tdependency(\"org.codehaus.jettison:jettison:1.3.8\") {\n \t\t\t\texclude group: \"stax\", name: \"stax-api\"\n \t\t\t}\n@@ -88,27 +89,28 @@ configure(allprojects) { project ->\n \t\t\t\tentry 'jibx-run'\n \t\t\t}\n \t\t\tdependency \"org.ogce:xpp3:1.1.6\"\n-\t\t\tdependency \"org.yaml:snakeyaml:1.26\"\n-\t\t\tdependencySet(group: 'org.jetbrains.kotlinx', version: '1.0.0-RC') {\n+\t\t\tdependency \"org.yaml:snakeyaml:1.28\"\n+\t\t\tdependencySet(group: 'org.jetbrains.kotlinx', version: '1.0.1') {\n \t\t\t\tentry 'kotlinx-serialization-core'\n+\t\t\t\tentry 'kotlinx-serialization-json'\n \t\t\t}\n \n \t\t\tdependency \"com.h2database:h2:1.4.200\"\n-\t\t\tdependency \"com.github.ben-manes.caffeine:caffeine:2.8.5\"\n-\t\t\tdependency \"com.github.librepdf:openpdf:1.3.20\"\n+\t\t\tdependency \"com.github.ben-manes.caffeine:caffeine:2.9.0\"\n+\t\t\tdependency \"com.github.librepdf:openpdf:1.3.25\"\n \t\t\tdependency \"com.rometools:rome:1.15.0\"\n \t\t\tdependency \"commons-io:commons-io:2.5\"\n \t\t\tdependency \"io.vavr:vavr:0.10.3\"\n \t\t\tdependency \"net.sf.jopt-simple:jopt-simple:5.0.4\"\n-\t\t\tdependencySet(group: 'org.apache.activemq', version: '5.16.0') {\n+\t\t\tdependencySet(group: 'org.apache.activemq', version: '5.16.1') {\n \t\t\t\tentry 'activemq-broker'\n \t\t\t\tentry('activemq-kahadb-store') {\n \t\t\t\t\texclude group: \"org.springframework\", name: \"spring-context\"\n \t\t\t\t}\n \t\t\t\tentry 'activemq-stomp'\n \t\t\t}\n \t\t\tdependency \"org.apache.bcel:bcel:6.0\"\n-\t\t\tdependency \"org.apache.commons:commons-pool2:2.8.0\"\n+\t\t\tdependency \"org.apache.commons:commons-pool2:2.9.0\"\n \t\t\tdependencySet(group: 'org.apache.derby', version: '10.14.2.0') {\n \t\t\t\tentry 'derby'\n \t\t\t\tentry 'derbyclient'\n@@ -122,23 +124,23 @@ configure(allprojects) { project ->\n \t\t\tdependency \"net.sf.ehcache:ehcache:2.10.6\"\n \t\t\tdependency \"org.ehcache:jcache:1.0.1\"\n \t\t\tdependency \"org.ehcache:ehcache:3.4.0\"\n-\t\t\tdependency \"org.hibernate:hibernate-core:5.4.21.Final\"\n-\t\t\tdependency \"org.hibernate:hibernate-validator:6.1.5.Final\"\n-\t\t\tdependency \"org.webjars:webjars-locator-core:0.45\"\n+\t\t\tdependency \"org.hibernate:hibernate-core:5.4.29.Final\"\n+\t\t\tdependency \"org.hibernate:hibernate-validator:6.2.0.Final\"\n+\t\t\tdependency \"org.webjars:webjars-locator-core:0.46\"\n \t\t\tdependency \"org.webjars:underscorejs:1.8.3\"\n \n-\t\t\tdependencySet(group: 'org.apache.tomcat', version: '9.0.38') {\n+\t\t\tdependencySet(group: 'org.apache.tomcat', version: '9.0.43') {\n \t\t\t\tentry 'tomcat-util'\n \t\t\t\tentry('tomcat-websocket') {\n \t\t\t\t\texclude group: \"org.apache.tomcat\", name: \"tomcat-websocket-api\"\n \t\t\t\t\texclude group: \"org.apache.tomcat\", name: \"tomcat-servlet-api\"\n \t\t\t\t}\n \t\t\t}\n-\t\t\tdependencySet(group: 'org.apache.tomcat.embed', version: '9.0.38') {\n+\t\t\tdependencySet(group: 'org.apache.tomcat.embed', version: '9.0.43') {\n \t\t\t\tentry 'tomcat-embed-core'\n \t\t\t\tentry 'tomcat-embed-websocket'\n \t\t\t}\n-\t\t\tdependencySet(group: 'io.undertow', version: '2.2.0.Final') {\n+\t\t\tdependencySet(group: 'io.undertow', version: '2.2.5.Final') {\n \t\t\t\tentry 'undertow-core'\n \t\t\t\tentry('undertow-websockets-jsr') {\n \t\t\t\t\texclude group: \"org.jboss.spec.javax.websocket\", name: \"jboss-websocket-api_1.1_spec\"\n@@ -153,17 +155,17 @@ configure(allprojects) { project ->\n \t\t\t\tentry 'okhttp'\n \t\t\t\tentry 'mockwebserver'\n \t\t\t}\n-\t\t\tdependency(\"org.apache.httpcomponents:httpclient:4.5.12\") {\n+\t\t\tdependency(\"org.apache.httpcomponents:httpclient:4.5.13\") {\n \t\t\t\texclude group: \"commons-logging\", name: \"commons-logging\"\n \t\t\t}\n \t\t\tdependency(\"org.apache.httpcomponents:httpasyncclient:4.1.4\") {\n \t\t\t\texclude group: \"commons-logging\", name: \"commons-logging\"\n \t\t\t}\n-\t\t\tdependency 'org.apache.httpcomponents.client5:httpclient5:5.0.1'\n-\t\t\tdependency 'org.apache.httpcomponents.core5:httpcore5-reactive:5.0.1'\n-\t\t\tdependency \"org.eclipse.jetty:jetty-reactive-httpclient:1.1.4\"\n+\t\t\tdependency 'org.apache.httpcomponents.client5:httpclient5:5.0.3'\n+\t\t\tdependency 'org.apache.httpcomponents.core5:httpcore5-reactive:5.0.3'\n+\t\t\tdependency \"org.eclipse.jetty:jetty-reactive-httpclient:1.1.6\"\n \n-\t\t\tdependency \"org.jruby:jruby:9.2.13.0\"\n+\t\t\tdependency \"org.jruby:jruby:9.2.16.0\"\n \t\t\tdependency \"org.python:jython-standalone:2.7.1\"\n \t\t\tdependency \"org.mozilla:rhino:1.7.11\"\n \n@@ -180,7 +182,7 @@ configure(allprojects) { project ->\n \t\t\t\texclude group: \"dom4j\", name: \"dom4j\"\n \t\t\t}\n \n-\t\t\tdependency(\"junit:junit:4.13\") {\n+\t\t\tdependency(\"junit:junit:4.13.2\") {\n \t\t\t\texclude group: \"org.hamcrest\", name: \"hamcrest-core\"\n \t\t\t}\n \t\t\tdependency(\"de.bechte.junit:junit-hierarchicalcontextrunner:4.12.1\") {\n@@ -189,33 +191,33 @@ configure(allprojects) { project ->\n \t\t\tdependency \"org.testng:testng:7.3.0\"\n \t\t\tdependency \"org.hamcrest:hamcrest:2.1\"\n \t\t\tdependency \"org.awaitility:awaitility:3.1.6\"\n-\t\t\tdependency \"org.assertj:assertj-core:3.17.2\"\n-\t\t\tdependencySet(group: 'org.xmlunit', version: '2.6.2') {\n+\t\t\tdependency \"org.assertj:assertj-core:3.19.0\"\n+\t\t\tdependencySet(group: 'org.xmlunit', version: '2.8.2') {\n \t\t\t\tentry 'xmlunit-assertj'\n \t\t\t\tentry('xmlunit-matchers') {\n \t\t\t\t\texclude group: \"org.hamcrest\", name: \"hamcrest-core\"\n \t\t\t\t}\n \t\t\t}\n-\t\t\tdependencySet(group: 'org.mockito', version: '3.5.11') {\n+\t\t\tdependencySet(group: 'org.mockito', version: '3.8.0') {\n \t\t\t\tentry('mockito-core') {\n \t\t\t\t\texclude group: \"org.hamcrest\", name: \"hamcrest-core\"\n \t\t\t\t}\n \t\t\t\tentry 'mockito-junit-jupiter'\n \t\t\t}\n-\t\t\tdependency \"io.mockk:mockk:1.10.0\"\n+\t\t\tdependency \"io.mockk:mockk:1.10.2\"\n \n-\t\t\tdependency(\"net.sourceforge.htmlunit:htmlunit:2.43.0\") {\n+\t\t\tdependency(\"net.sourceforge.htmlunit:htmlunit:2.47.1\") {\n \t\t\t\texclude group: \"commons-logging\", name: \"commons-logging\"\n \t\t\t}\n-\t\t\tdependency(\"org.seleniumhq.selenium:htmlunit-driver:2.43.1\") {\n+\t\t\tdependency(\"org.seleniumhq.selenium:htmlunit-driver:2.47.1\") {\n \t\t\t\texclude group: \"commons-logging\", name: \"commons-logging\"\n \t\t\t}\n \t\t\tdependency(\"org.seleniumhq.selenium:selenium-java:3.141.59\") {\n \t\t\t\texclude group: \"commons-logging\", name: \"commons-logging\"\n \t\t\t\texclude group: \"io.netty\", name: \"netty\"\n \t\t\t}\n \t\t\tdependency \"org.skyscreamer:jsonassert:1.5.0\"\n-\t\t\tdependency \"com.jayway.jsonpath:json-path:2.4.0\"\n+\t\t\tdependency \"com.jayway.jsonpath:json-path:2.5.0\"\n \t\t\tdependency \"org.bouncycastle:bcpkix-jdk15on:1.66\"\n \n \t\t\tdependencySet(group: 'org.apache.tiles', version: '3.0.8') {\n@@ -235,8 +237,8 @@ configure(allprojects) { project ->\n \n \t\t\tdependency \"com.ibm.websphere:uow:6.0.2.17\"\n \t\t\tdependency \"com.jamonapi:jamon:2.82\"\n-\t\t\tdependency \"joda-time:joda-time:2.10.6\"\n-\t\t\tdependency \"org.eclipse.persistence:org.eclipse.persistence.jpa:2.7.7\"\n+\t\t\tdependency \"joda-time:joda-time:2.10.10\"\n+\t\t\tdependency \"org.eclipse.persistence:org.eclipse.persistence.jpa:2.7.8\"\n \t\t\tdependency \"org.javamoney:moneta:1.3\"\n \n \t\t\tdependency \"com.sun.activation:javax.activation:1.2.0\"\n@@ -290,7 +292,6 @@ configure(allprojects) { project ->\n \t\trepositories {\n \t\t\tmavenCentral()\n \t\t\tmaven { url \"https://repo.spring.io/libs-spring-framework-build\" }\n-\t\t\tmaven { url \"https://repo.spring.io/milestone\" } // Reactor\n \t\t}\n \t}\n \tconfigurations.all {\n@@ -308,14 +309,13 @@ configure([rootProject] + javaProjects) { project ->\n \tapply plugin: \"java-test-fixtures\"\n \tapply plugin: \"checkstyle\"\n \tapply plugin: 'org.springframework.build.compile'\n-\tapply from: \"${rootDir}/gradle/custom-java-home.gradle\"\n+\tapply from: \"${rootDir}/gradle/toolchains.gradle\"\n \tapply from: \"${rootDir}/gradle/ide.gradle\"\n \n \tpluginManager.withPlugin(\"kotlin\") {\n \t\tapply plugin: \"org.jetbrains.dokka\"\n \t\tcompileKotlin {\n \t\t\tkotlinOptions {\n-\t\t\t\tjvmTarget = \"1.8\"\n \t\t\t\tlanguageVersion = \"1.3\"\n \t\t\t\tapiVersion = \"1.3\"\n \t\t\t\tfreeCompilerArgs = [\"-Xjsr305=strict\"]\n@@ -324,7 +324,6 @@ configure([rootProject] + javaProjects) { project ->\n \t\t}\n \t\tcompileTestKotlin {\n \t\t\tkotlinOptions {\n-\t\t\t\tjvmTarget = \"1.8\"\n \t\t\t\tfreeCompilerArgs = [\"-Xjsr305=strict\"]\n \t\t\t}\n \t\t}\n@@ -339,7 +338,7 @@ configure([rootProject] + javaProjects) { project ->\n \t}\n \n \tcheckstyle {\n-\t\ttoolVersion = \"8.36.1\"\n+\t\ttoolVersion = \"8.41\"\n \t\tconfigDirectory.set(rootProject.file(\"src/checkstyle\"))\n \t}\n \n@@ -379,8 +378,9 @@ configure([rootProject] + javaProjects) { project ->\n \t\t\t\"https://fasterxml.github.io/jackson-databind/javadoc/2.10/\",\n \t\t\t\"https://fasterxml.github.io/jackson-dataformat-xml/javadoc/2.10/\",\n \t\t\t\"https://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs/\",\n-\t\t\t\"https://junit.org/junit4/javadoc/4.13/\",\n-\t\t\t\"https://junit.org/junit5/docs/5.7.0/api/\"\n+\t\t\t\"https://projectreactor.io/docs/test/release/api/\",\n+\t\t\t\"https://junit.org/junit4/javadoc/4.13.2/\",\n+\t\t\t\"https://junit.org/junit5/docs/5.7.1/api/\"\n \t] as String[]\n }\n "
  },
  {
    "sha": "ada387cf7144614a6ca136960faf594cbb3da597",
    "filename": "buildSrc/README.md",
    "status": "modified",
    "additions": 2,
    "deletions": 8,
    "changes": 10,
    "blob_url": "https://github.com/Y-lenny/spring-framework/blob/e4f753e3e3237c1c7c6d0b57b7a30d6721923cba/buildSrc/README.md",
    "raw_url": "https://github.com/Y-lenny/spring-framework/raw/e4f753e3e3237c1c7c6d0b57b7a30d6721923cba/buildSrc/README.md",
    "contents_url": "https://api.github.com/repos/Y-lenny/spring-framework/contents/buildSrc/README.md?ref=e4f753e3e3237c1c7c6d0b57b7a30d6721923cba",
    "patch": "@@ -8,24 +8,18 @@ They are declared in the `build.gradle` file in this folder.\n ### Compiler conventions\n \n The `org.springframework.build.compile` plugin applies the Java compiler conventions to the build.\n-By default, the build compiles sources with Java `1.8` source and target compatibility.\n-You can test a different source compatibility version on the CLI with a project property like:\n-\n-```\n-./gradlew test -PjavaSourceVersion=11\n-```\n \n ## Build Plugins\n \n-## Optional dependencies\n+### Optional dependencies\n \n The `org.springframework.build.optional-dependencies` plugin creates a new `optional`\n Gradle configuration - it adds the dependencies to the project's compile and runtime classpath\n but doesn't affect the classpath of dependent projects.\n This plugin does not provide a `provided` configuration, as the native `compileOnly` and `testCompileOnly`\n configurations are preferred.\n \n-## API Diff\n+### API Diff\n \n This plugin uses the [Gradle JApiCmp](https://github.com/melix/japicmp-gradle-plugin) plugin\n to generate API Diff reports for each Spring Framework module. This plugin is applied once on the root"
  },
  {
    "sha": "5284df28f124c17d15df9ef614e943333ce13d70",
    "filename": "buildSrc/src/main/java/org/springframework/build/compile/CompilerConventionsPlugin.java",
    "status": "modified",
    "additions": 3,
    "deletions": 22,
    "changes": 25,
    "blob_url": "https://github.com/Y-lenny/spring-framework/blob/e4f753e3e3237c1c7c6d0b57b7a30d6721923cba/buildSrc/src/main/java/org/springframework/build/compile/CompilerConventionsPlugin.java",
    "raw_url": "https://github.com/Y-lenny/spring-framework/raw/e4f753e3e3237c1c7c6d0b57b7a30d6721923cba/buildSrc/src/main/java/org/springframework/build/compile/CompilerConventionsPlugin.java",
    "contents_url": "https://api.github.com/repos/Y-lenny/spring-framework/contents/buildSrc/src/main/java/org/springframework/build/compile/CompilerConventionsPlugin.java?ref=e4f753e3e3237c1c7c6d0b57b7a30d6721923cba",
    "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright 2002-2020 the original author or authors.\n+ * Copyright 2002-2021 the original author or authors.\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n@@ -20,31 +20,21 @@\n import java.util.Arrays;\n import java.util.List;\n \n-import org.gradle.api.JavaVersion;\n import org.gradle.api.Plugin;\n import org.gradle.api.Project;\n+import org.gradle.api.plugins.JavaLibraryPlugin;\n import org.gradle.api.plugins.JavaPlugin;\n import org.gradle.api.plugins.JavaPluginConvention;\n import org.gradle.api.tasks.compile.JavaCompile;\n \n /**\n  * {@link Plugin} that applies conventions for compiling Java sources in Spring Framework.\n- * <p>One can override the default Java source compatibility version\n- * with a dedicated property on the CLI: {@code \"./gradlew test -PjavaSourceVersion=11\"}.\n  *\n  * @author Brian Clozel\n  * @author Sam Brannen\n  */\n public class CompilerConventionsPlugin implements Plugin<Project> {\n \n-\t/**\n-\t * The project property that can be used to switch the Java source\n-\t * compatibility version for building source and test classes.\n-\t */\n-\tpublic static final String JAVA_SOURCE_VERSION_PROPERTY = \"javaSourceVersion\";\n-\n-\tpublic static final JavaVersion DEFAULT_COMPILER_VERSION = JavaVersion.VERSION_1_8;\n-\n \tprivate static final List<String> COMPILER_ARGS;\n \n \tprivate static final List<String> TEST_COMPILER_ARGS;\n@@ -69,7 +59,7 @@\n \n \t@Override\n \tpublic void apply(Project project) {\n-\t\tproject.getPlugins().withType(JavaPlugin.class, javaPlugin -> applyJavaCompileConventions(project));\n+\t\tproject.getPlugins().withType(JavaLibraryPlugin.class, javaPlugin -> applyJavaCompileConventions(project));\n \t}\n \n \t/**\n@@ -79,15 +69,6 @@ public void apply(Project project) {\n \t */\n \tprivate void applyJavaCompileConventions(Project project) {\n \t\tJavaPluginConvention java = project.getConvention().getPlugin(JavaPluginConvention.class);\n-\t\tif (project.hasProperty(JAVA_SOURCE_VERSION_PROPERTY)) {\n-\t\t\tJavaVersion javaSourceVersion = JavaVersion.toVersion(project.property(JAVA_SOURCE_VERSION_PROPERTY));\n-\t\t\tjava.setSourceCompatibility(javaSourceVersion);\n-\t\t}\n-\t\telse {\n-\t\t\tjava.setSourceCompatibility(DEFAULT_COMPILER_VERSION);\n-\t\t}\n-\t\tjava.setTargetCompatibility(DEFAULT_COMPILER_VERSION);\n-\n \t\tproject.getTasks().withType(JavaCompile.class)\n \t\t\t\t.matching(compileTask -> compileTask.getName().equals(JavaPlugin.COMPILE_JAVA_TASK_NAME))\n \t\t\t\t.forEach(compileTask -> {"
  },
  {
    "sha": "cb617637d9b4481106bbd400f2ae727c85c15ab6",
    "filename": "ci/README.adoc",
    "status": "modified",
    "additions": 9,
    "deletions": 3,
    "changes": 12,
    "blob_url": "https://github.com/Y-lenny/spring-framework/blob/e4f753e3e3237c1c7c6d0b57b7a30d6721923cba/ci/README.adoc",
    "raw_url": "https://github.com/Y-lenny/spring-framework/raw/e4f753e3e3237c1c7c6d0b57b7a30d6721923cba/ci/README.adoc",
    "contents_url": "https://api.github.com/repos/Y-lenny/spring-framework/contents/ci/README.adoc?ref=e4f753e3e3237c1c7c6d0b57b7a30d6721923cba",
    "patch": "@@ -1,7 +1,8 @@\n == Spring Framework Concourse pipeline\n \n-The Spring Framework is using https://concourse-ci.org/[Concourse] for its CI build and other automated tasks.\n-The Spring team has a dedicated Concourse instance available at https://ci.spring.io.\n+The Spring Framework uses https://concourse-ci.org/[Concourse] for its CI build and other automated tasks.\n+The Spring team has a dedicated Concourse instance available at https://ci.spring.io with a build pipeline\n+for https://ci.spring.io/teams/spring-framework/pipelines/spring-framework-5.3.x[Spring Framework 5.3.x].\n \n === Setting up your development environment\n \n@@ -25,13 +26,17 @@ spring                https://ci.spring.io  spring-framework      Wed, 25 Mar 20\n ----\n \n === Pipeline configuration and structure\n+\n The build pipelines are described in `pipeline.yml` file.\n+\n This file is listing Concourse resources, i.e. build inputs and outputs such as container images, artifact repositories, source repositories, notification services, etc.\n+\n It also describes jobs (a job is a sequence of inputs, tasks and outputs); jobs are organized by groups.\n \n The `pipeline.yml` definition contains `((parameters))` which are loaded from the `parameters.yml` file or from our https://docs.cloudfoundry.org/credhub/[credhub instance].\n \n You'll find in this folder the following resources:\n+\n * `pipeline.yml` the build pipeline\n * `parameters.yml` the build parameters used for the pipeline\n * `images/` holds the container images definitions used in this pipeline\n@@ -41,11 +46,12 @@ You'll find in this folder the following resources:\n === Updating the build pipeline\n \n Updating files on the repository is not enough to update the build pipeline, as changes need to be applied.\n+\n The pipeline can be deployed using the following command:\n \n [source]\n ----\n $ fly -t spring set-pipeline -p spring-framework-5.3.x -c ci/pipeline.yml -l ci/parameters.yml\n ----\n \n-NOTE: This assumes that you have credhub integration configured with the appropriate secrets.\n\\ No newline at end of file\n+NOTE: This assumes that you have credhub integration configured with the appropriate secrets."
  },
  {
    "sha": "248e58db739e7dd49b9780687e82fe6749a8027c",
    "filename": "ci/config/changelog-generator.yml",
    "status": "added",
    "additions": 17,
    "deletions": 0,
    "changes": 17,
    "blob_url": "https://github.com/Y-lenny/spring-framework/blob/e4f753e3e3237c1c7c6d0b57b7a30d6721923cba/ci/config/changelog-generator.yml",
    "raw_url": "https://github.com/Y-lenny/spring-framework/raw/e4f753e3e3237c1c7c6d0b57b7a30d6721923cba/ci/config/changelog-generator.yml",
    "contents_url": "https://api.github.com/repos/Y-lenny/spring-framework/contents/ci/config/changelog-generator.yml?ref=e4f753e3e3237c1c7c6d0b57b7a30d6721923cba",
    "patch": "@@ -0,0 +1,17 @@\n+changelog:\n+  repository: spring-projects/spring-framework\n+  sections:\n+    - title: \":star: New Features\"\n+      labels:\n+        - \"type: enhancement\"\n+    - title: \":beetle: Bug Fixes\"\n+      labels:\n+        - \"type: bug\"\n+        - \"type: regression\"\n+    - title: \":notebook_with_decorative_cover: Documentation\"\n+      labels:\n+        - \"type: documentation\"\n+    - title: \":hammer: Dependency Upgrades\"\n+      sort: \"title\"\n+      labels:\n+        - \"type: dependency-upgrade\""
  },
  {
    "sha": "d31f8cba00dccd07550d6c8aee09afc78c472642",
    "filename": "ci/config/release-scripts.yml",
    "status": "added",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/Y-lenny/spring-framework/blob/e4f753e3e3237c1c7c6d0b57b7a30d6721923cba/ci/config/release-scripts.yml",
    "raw_url": "https://github.com/Y-lenny/spring-framework/raw/e4f753e3e3237c1c7c6d0b57b7a30d6721923cba/ci/config/release-scripts.yml",
    "contents_url": "https://api.github.com/repos/Y-lenny/spring-framework/contents/ci/config/release-scripts.yml?ref=e4f753e3e3237c1c7c6d0b57b7a30d6721923cba",
    "patch": "@@ -0,0 +1,10 @@\n+logging:\n+  level:\n+    io.spring.concourse: DEBUG\n+spring:\n+  main:\n+    banner-mode: off\n+sonatype:\n+  exclude:\n+    - 'build-info\\.json'\n+    - '.*\\.zip'"
  },
  {
    "sha": "1ce41f37a9328a3add53767a000ae3c57d337aa6",
    "filename": "ci/images/ci-image/Dockerfile",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/Y-lenny/spring-framework/blob/e4f753e3e3237c1c7c6d0b57b7a30d6721923cba/ci/images/ci-image/Dockerfile",
    "raw_url": "https://github.com/Y-lenny/spring-framework/raw/e4f753e3e3237c1c7c6d0b57b7a30d6721923cba/ci/images/ci-image/Dockerfile",
    "contents_url": "https://api.github.com/repos/Y-lenny/spring-framework/contents/ci/images/ci-image/Dockerfile?ref=e4f753e3e3237c1c7c6d0b57b7a30d6721923cba",
    "patch": "@@ -0,0 +1,11 @@\n+FROM ubuntu:focal-20210119\n+\n+ADD setup.sh /setup.sh\n+ADD get-jdk-url.sh /get-jdk-url.sh\n+RUN ./setup.sh java8\n+\n+ENV JAVA_HOME /opt/openjdk/java8\n+ENV JDK11 /opt/openjdk/java11\n+ENV JDK15 /opt/openjdk/java15\n+\n+ENV PATH $JAVA_HOME/bin:$PATH"
  },
  {
    "sha": "f4f3ab84cf40d15f33751c1fd7be04705ac6e768",
    "filename": "ci/images/get-jdk-url.sh",
    "status": "modified",
    "additions": 3,
    "deletions": 6,
    "changes": 9,
    "blob_url": "https://github.com/Y-lenny/spring-framework/blob/e4f753e3e3237c1c7c6d0b57b7a30d6721923cba/ci/images/get-jdk-url.sh",
    "raw_url": "https://github.com/Y-lenny/spring-framework/raw/e4f753e3e3237c1c7c6d0b57b7a30d6721923cba/ci/images/get-jdk-url.sh",
    "contents_url": "https://api.github.com/repos/Y-lenny/spring-framework/contents/ci/images/get-jdk-url.sh?ref=e4f753e3e3237c1c7c6d0b57b7a30d6721923cba",
    "patch": "@@ -3,16 +3,13 @@ set -e\n \n case \"$1\" in\n \tjava8)\n-\t\t echo \"https://github.com/AdoptOpenJDK/openjdk8-binaries/releases/download/jdk8u265-b01/OpenJDK8U-jdk_x64_linux_hotspot_8u265b01.tar.gz\"\n+\t\t echo \"https://github.com/AdoptOpenJDK/openjdk8-binaries/releases/download/jdk8u282-b08/OpenJDK8U-jdk_x64_linux_hotspot_8u282b08.tar.gz\"\n \t;;\n \tjava11)\n-\t\t echo \"https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download/jdk-11.0.8%2B10/OpenJDK11U-jdk_x64_linux_hotspot_11.0.8_10.tar.gz\"\n-\t;;\n-\tjava14)\n-\t\t echo \"https://github.com/AdoptOpenJDK/openjdk14-binaries/releases/download/jdk-14.0.2%2B12/OpenJDK14U-jdk_x64_linux_hotspot_14.0.2_12.tar.gz\"\n+\t\t echo \"https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download/jdk-11.0.10%2B9/OpenJDK11U-jdk_x64_linux_hotspot_11.0.10_9.tar.gz\"\n \t;;\n   java15)\n-\t\t echo \"https://github.com/AdoptOpenJDK/openjdk15-binaries/releases/download/jdk-15%2B36/OpenJDK15U-jdk_x64_linux_hotspot_15_36.tar.gz\"\n+\t\t echo \"https://github.com/AdoptOpenJDK/openjdk15-binaries/releases/download/jdk-15.0.2%2B7/OpenJDK15U-jdk_x64_linux_hotspot_15.0.2_7.tar.gz\"\n   ;;\n   *)\n \t\techo $\"Unknown java version\""
  },
  {
    "sha": "2cbbce87d0cbdf8c601e06dbd393421c5c596873",
    "filename": "ci/images/setup.sh",
    "status": "modified",
    "additions": 18,
    "deletions": 8,
    "changes": 26,
    "blob_url": "https://github.com/Y-lenny/spring-framework/blob/e4f753e3e3237c1c7c6d0b57b7a30d6721923cba/ci/images/setup.sh",
    "raw_url": "https://github.com/Y-lenny/spring-framework/raw/e4f753e3e3237c1c7c6d0b57b7a30d6721923cba/ci/images/setup.sh",
    "contents_url": "https://api.github.com/repos/Y-lenny/spring-framework/contents/ci/images/setup.sh?ref=e4f753e3e3237c1c7c6d0b57b7a30d6721923cba",
    "patch": "@@ -5,24 +5,34 @@ set -ex\n # UTILS\n ###########################################################\n \n+export DEBIAN_FRONTEND=noninteractive\n apt-get update\n-apt-get install --no-install-recommends -y ca-certificates net-tools libxml2-utils git curl libudev1 libxml2-utils iptables iproute2 jq fontconfig\n+apt-get install --no-install-recommends -y tzdata ca-certificates net-tools libxml2-utils git curl libudev1 libxml2-utils iptables iproute2 jq fontconfig\n+ln -fs /usr/share/zoneinfo/UTC /etc/localtime\n+dpkg-reconfigure --frontend noninteractive tzdata\n rm -rf /var/lib/apt/lists/*\n \n-curl https://raw.githubusercontent.com/spring-io/concourse-java-scripts/v0.0.3/concourse-java.sh > /opt/concourse-java.sh\n+curl https://raw.githubusercontent.com/spring-io/concourse-java-scripts/v0.0.4/concourse-java.sh > /opt/concourse-java.sh\n \n-curl --output /opt/concourse-release-scripts.jar https://repo.spring.io/release/io/spring/concourse/releasescripts/concourse-release-scripts/0.2.0/concourse-release-scripts-0.2.0.jar\n+curl --output /opt/concourse-release-scripts.jar https://repo.spring.io/release/io/spring/concourse/releasescripts/concourse-release-scripts/0.3.1/concourse-release-scripts-0.3.1.jar\n \n ###########################################################\n # JAVA\n ###########################################################\n-JDK_URL=$( ./get-jdk-url.sh $1 )\n \n mkdir -p /opt/openjdk\n-cd /opt/openjdk\n-curl -L ${JDK_URL} | tar zx --strip-components=1\n-test -f /opt/openjdk/bin/java\n-test -f /opt/openjdk/bin/javac\n+pushd /opt/openjdk > /dev/null\n+for jdk in java8 java11 java15\n+do\n+  JDK_URL=$( /get-jdk-url.sh $jdk )\n+  mkdir $jdk\n+  pushd $jdk > /dev/null\n+  curl -L ${JDK_URL} | tar zx --strip-components=1\n+  test -f bin/java\n+  test -f bin/javac\n+  popd > /dev/null\n+done\n+popd\n \n ###########################################################\n # GRADLE ENTERPRISE"
  },
  {
    "sha": "2e237054650b9a5a955f07a1fb0a259a48a7066d",
    "filename": "ci/images/spring-framework-ci-image/Dockerfile",
    "status": "removed",
    "additions": 0,
    "deletions": 8,
    "changes": 8,
    "blob_url": "https://github.com/Y-lenny/spring-framework/blob/1061bcdba2d2953df0a7b07ca177354babfcb645/ci/images/spring-framework-ci-image/Dockerfile",
    "raw_url": "https://github.com/Y-lenny/spring-framework/raw/1061bcdba2d2953df0a7b07ca177354babfcb645/ci/images/spring-framework-ci-image/Dockerfile",
    "contents_url": "https://api.github.com/repos/Y-lenny/spring-framework/contents/ci/images/spring-framework-ci-image/Dockerfile?ref=1061bcdba2d2953df0a7b07ca177354babfcb645",
    "patch": "@@ -1,8 +0,0 @@\n-FROM ubuntu:bionic-20200713\n-\n-ADD setup.sh /setup.sh\n-ADD get-jdk-url.sh /get-jdk-url.sh\n-RUN ./setup.sh java8\n-\n-ENV JAVA_HOME /opt/openjdk\n-ENV PATH $JAVA_HOME/bin:$PATH"
  },
  {
    "sha": "29ac39677553c104ad3a7679f578be3ed2dcf5a1",
    "filename": "ci/images/spring-framework-jdk11-ci-image/Dockerfile",
    "status": "removed",
    "additions": 0,
    "deletions": 8,
    "changes": 8,
    "blob_url": "https://github.com/Y-lenny/spring-framework/blob/1061bcdba2d2953df0a7b07ca177354babfcb645/ci/images/spring-framework-jdk11-ci-image/Dockerfile",
    "raw_url": "https://github.com/Y-lenny/spring-framework/raw/1061bcdba2d2953df0a7b07ca177354babfcb645/ci/images/spring-framework-jdk11-ci-image/Dockerfile",
    "contents_url": "https://api.github.com/repos/Y-lenny/spring-framework/contents/ci/images/spring-framework-jdk11-ci-image/Dockerfile?ref=1061bcdba2d2953df0a7b07ca177354babfcb645",
    "patch": "@@ -1,8 +0,0 @@\n-FROM ubuntu:bionic-20200713\n-\n-ADD setup.sh /setup.sh\n-ADD get-jdk-url.sh /get-jdk-url.sh\n-RUN ./setup.sh java11\n-\n-ENV JAVA_HOME /opt/openjdk\n-ENV PATH $JAVA_HOME/bin:$PATH"
  },
  {
    "sha": "bd7a467de227428facb1d6ca3c5217a655f58c23",
    "filename": "ci/images/spring-framework-jdk14-ci-image/Dockerfile",
    "status": "removed",
    "additions": 0,
    "deletions": 8,
    "changes": 8,
    "blob_url": "https://github.com/Y-lenny/spring-framework/blob/1061bcdba2d2953df0a7b07ca177354babfcb645/ci/images/spring-framework-jdk14-ci-image/Dockerfile",
    "raw_url": "https://github.com/Y-lenny/spring-framework/raw/1061bcdba2d2953df0a7b07ca177354babfcb645/ci/images/spring-framework-jdk14-ci-image/Dockerfile",
    "contents_url": "https://api.github.com/repos/Y-lenny/spring-framework/contents/ci/images/spring-framework-jdk14-ci-image/Dockerfile?ref=1061bcdba2d2953df0a7b07ca177354babfcb645",
    "patch": "@@ -1,8 +0,0 @@\n-FROM ubuntu:bionic-20200713\n-\n-ADD setup.sh /setup.sh\n-ADD get-jdk-url.sh /get-jdk-url.sh\n-RUN ./setup.sh java14\n-\n-ENV JAVA_HOME /opt/openjdk\n-ENV PATH $JAVA_HOME/bin:$PATH"
  },
  {
    "sha": "c3b544e01cca15fd8ecdaa5393e30cd2100a6668",
    "filename": "ci/images/spring-framework-jdk15-ci-image/Dockerfile",
    "status": "removed",
    "additions": 0,
    "deletions": 8,
    "changes": 8,
    "blob_url": "https://github.com/Y-lenny/spring-framework/blob/1061bcdba2d2953df0a7b07ca177354babfcb645/ci/images/spring-framework-jdk15-ci-image/Dockerfile",
    "raw_url": "https://github.com/Y-lenny/spring-framework/raw/1061bcdba2d2953df0a7b07ca177354babfcb645/ci/images/spring-framework-jdk15-ci-image/Dockerfile",
    "contents_url": "https://api.github.com/repos/Y-lenny/spring-framework/contents/ci/images/spring-framework-jdk15-ci-image/Dockerfile?ref=1061bcdba2d2953df0a7b07ca177354babfcb645",
    "patch": "@@ -1,8 +0,0 @@\n-FROM ubuntu:bionic-20200713\n-\n-ADD setup.sh /setup.sh\n-ADD get-jdk-url.sh /get-jdk-url.sh\n-RUN ./setup.sh java15\n-\n-ENV JAVA_HOME /opt/openjdk\n-ENV PATH $JAVA_HOME/bin:$PATH"
  },
  {
    "sha": "578a1b892998136f6c728e3c6c34c4ec3c90fd2a",
    "filename": "ci/parameters.yml",
    "status": "modified",
    "additions": 2,
    "deletions": 3,
    "changes": 5,
    "blob_url": "https://github.com/Y-lenny/spring-framework/blob/e4f753e3e3237c1c7c6d0b57b7a30d6721923cba/ci/parameters.yml",
    "raw_url": "https://github.com/Y-lenny/spring-framework/raw/e4f753e3e3237c1c7c6d0b57b7a30d6721923cba/ci/parameters.yml",
    "contents_url": "https://api.github.com/repos/Y-lenny/spring-framework/contents/ci/parameters.yml?ref=e4f753e3e3237c1c7c6d0b57b7a30d6721923cba",
    "patch": "@@ -6,9 +6,8 @@ github-repo-name: \"spring-projects/spring-framework\"\n docker-hub-organization: \"springci\"\n artifactory-server: \"https://repo.spring.io\"\n branch: \"master\"\n+milestone: \"5.3.x\"\n build-name: \"spring-framework\"\n pipeline-name: \"spring-framework\"\n concourse-url: \"https://ci.spring.io\"\n-bintray-subject: \"spring\"\n-bintray-repo: \"jars\"\n-task-timeout: 1h00m\n\\ No newline at end of file\n+task-timeout: 1h00m"
  },
  {
    "sha": "e77e3b3990aec68b84b13ce78698a87b9b76c2f7",
    "filename": "ci/pipeline.yml",
    "status": "modified",
    "additions": 187,
    "deletions": 181,
    "changes": 368,
    "blob_url": "https://github.com/Y-lenny/spring-framework/blob/e4f753e3e3237c1c7c6d0b57b7a30d6721923cba/ci/pipeline.yml",
    "raw_url": "https://github.com/Y-lenny/spring-framework/raw/e4f753e3e3237c1c7c6d0b57b7a30d6721923cba/ci/pipeline.yml",
    "contents_url": "https://api.github.com/repos/Y-lenny/spring-framework/contents/ci/pipeline.yml?ref=e4f753e3e3237c1c7c6d0b57b7a30d6721923cba",
    "patch": "@@ -1,33 +1,70 @@\n+anchors:\n+  git-repo-resource-source: &git-repo-resource-source\n+    uri: ((github-repo))\n+    username: ((github-username))\n+    password: ((github-password))\n+    branch: ((branch))\n+  gradle-enterprise-task-params: &gradle-enterprise-task-params\n+    GRADLE_ENTERPRISE_ACCESS_KEY: ((gradle_enterprise_secret_access_key))\n+    GRADLE_ENTERPRISE_CACHE_USERNAME: ((gradle_enterprise_cache_user.username))\n+    GRADLE_ENTERPRISE_CACHE_PASSWORD: ((gradle_enterprise_cache_user.password))\n+  sonatype-task-params: &sonatype-task-params\n+    SONATYPE_USERNAME: ((sonatype-username))\n+    SONATYPE_PASSWORD: ((sonatype-password))\n+    SONATYPE_URL: ((sonatype-url))\n+    SONATYPE_STAGING_PROFILE_ID: ((sonatype-staging-profile-id))\n+  artifactory-task-params: &artifactory-task-params\n+    ARTIFACTORY_SERVER: ((artifactory-server))\n+    ARTIFACTORY_USERNAME: ((artifactory-username))\n+    ARTIFACTORY_PASSWORD: ((artifactory-password))\n+  build-project-task-params: &build-project-task-params\n+    privileged: true\n+    timeout: ((task-timeout))\n+    params:\n+      BRANCH: ((branch))\n+      <<: *gradle-enterprise-task-params\n+  docker-resource-source: &docker-resource-source\n+    username: ((docker-hub-username))\n+    password: ((docker-hub-password))\n+    tag: ((milestone))\n+  slack-fail-params: &slack-fail-params\n+    text: >\n+      :concourse-failed: <https://ci.spring.io/teams/${BUILD_TEAM_NAME}/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}|${BUILD_PIPELINE_NAME} ${BUILD_JOB_NAME} failed!>\n+      [$TEXT_FILE_CONTENT]\n+    text_file: git-repo/build/build-scan-uri.txt\n+    silent: true\n+    icon_emoji: \":concourse:\"\n+    username: concourse-ci\n+  changelog-task-params: &changelog-task-params\n+    name: generated-changelog/tag\n+    tag: generated-changelog/tag\n+    body: generated-changelog/changelog.md\n+  github-task-params: &github-task-params\n+    GITHUB_USERNAME: ((github-username))\n+    GITHUB_TOKEN: ((github-ci-release-token))\n+\n resource_types:\n - name: artifactory-resource\n-  type: docker-image\n+  type: registry-image\n   source:\n     repository: springio/artifactory-resource\n-    tag: 0.0.12-SNAPSHOT\n+    tag: 0.0.13\n - name: github-status-resource\n-  type: docker-image\n+  type: registry-image\n   source:\n     repository: dpb587/github-status-resource\n     tag: master\n-- name: email\n-  type: docker-image\n-  source:\n-    repository: pcfseceng/email-resource\n-    tag: 1.0.19\n - name: slack-notification\n-  type: docker-image\n+  type: registry-image\n   source:\n     repository: cfcommunity/slack-notification-resource\n     tag: latest\n resources:\n - name: git-repo\n   type: git\n-  icon: github-circle\n+  icon: github\n   source:\n-    uri: ((github-repo))\n-    username: ((github-username))\n-    password: ((github-password))\n-    branch: ((branch))\n+    <<: *git-repo-resource-source\n - name: every-morning\n   type: time\n   icon: alarm\n@@ -37,43 +74,17 @@ resources:\n     location: Europe/Vienna\n - name: ci-images-git-repo\n   type: git\n-  icon: github-circle\n+  icon: github\n   source:\n     uri: ((github-repo))\n     branch: ((branch))\n     paths: [\"ci/images/*\"]\n-- name: spring-framework-ci-image\n+- name: ci-image\n   type: docker-image\n   icon: docker\n   source:\n-    repository: ((docker-hub-organization))/spring-framework-ci-image\n-    username: ((docker-hub-username))\n-    password: ((docker-hub-password))\n-    tag: 5.3.x\n-- name: spring-framework-jdk11-ci-image\n-  type: docker-image\n-  icon: docker\n-  source:\n-    repository: ((docker-hub-organization))/spring-framework-jdk11-ci-image\n-    username: ((docker-hub-username))\n-    password: ((docker-hub-password))\n-    tag: 5.3.x\n-- name: spring-framework-jdk14-ci-image\n-  type: docker-image\n-  icon: docker\n-  source:\n-    repository: ((docker-hub-organization))/spring-framework-jdk14-ci-image\n-    username: ((docker-hub-username))\n-    password: ((docker-hub-password))\n-    tag: 5.3.x\n-- name: spring-framework-jdk15-ci-image\n-  type: docker-image\n-  icon: docker\n-  source:\n-    repository: ((docker-hub-organization))/spring-framework-jdk15-ci-image\n-    username: ((docker-hub-username))\n-    password: ((docker-hub-password))\n-    tag: 5.3.x\n+    <<: *docker-resource-source\n+    repository: ((docker-hub-organization))/spring-framework-ci\n - name: artifactory-repo\n   type: artifactory-resource\n   icon: package-variant\n@@ -98,14 +109,6 @@ resources:\n     access_token: ((github-ci-status-token))\n     branch: ((branch))\n     context: jdk11-build\n-- name: repo-status-jdk14-build\n-  type: github-status-resource\n-  icon: eye-check-outline\n-  source:\n-    repository: ((github-repo-name))\n-    access_token: ((github-ci-status-token))\n-    branch: ((branch))\n-    context: jdk14-build\n - name: repo-status-jdk15-build\n   type: github-status-resource\n   icon: eye-check-outline\n@@ -119,66 +122,60 @@ resources:\n   icon: slack\n   source:\n     url: ((slack-webhook-url))\n+- name: github-pre-release\n+  type: github-release\n+  icon: briefcase-download-outline\n+  source:\n+    owner: spring-projects\n+    repository: spring-framework\n+    access_token: ((github-ci-release-token))\n+    pre_release: true\n+    release: false\n+- name: github-release\n+  type: github-release\n+  icon: briefcase-download\n+  source:\n+    owner: spring-projects\n+    repository: spring-framework\n+    access_token: ((github-ci-release-token))\n+    pre_release: false\n jobs:\n-- name: build-spring-framework-ci-images\n+- name: build-ci-images\n   plan:\n   - get: ci-images-git-repo\n     trigger: true\n   - in_parallel:\n-    - put: spring-framework-ci-image\n+    - put: ci-image\n       params:\n         build: ci-images-git-repo/ci/images\n-        dockerfile: ci-images-git-repo/ci/images/spring-framework-ci-image/Dockerfile\n-    - put: spring-framework-jdk11-ci-image\n-      params:\n-        build: ci-images-git-repo/ci/images\n-        dockerfile: ci-images-git-repo/ci/images/spring-framework-jdk11-ci-image/Dockerfile\n-    - put: spring-framework-jdk14-ci-image\n-      params:\n-        build: ci-images-git-repo/ci/images\n-        dockerfile: ci-images-git-repo/ci/images/spring-framework-jdk14-ci-image/Dockerfile\n-    - put: spring-framework-jdk15-ci-image\n-      params:\n-        build: ci-images-git-repo/ci/images\n-        dockerfile: ci-images-git-repo/ci/images/spring-framework-jdk15-ci-image/Dockerfile\n+        dockerfile: ci-images-git-repo/ci/images/ci-image/Dockerfile\n - name: build\n   serial: true\n   public: true\n   plan:\n-  - get: spring-framework-ci-image\n+  - get: ci-image\n   - get: git-repo\n     trigger: true\n   - put: repo-status-build\n     params: { state: \"pending\", commit: \"git-repo\" }\n   - do:\n     - task: build-project\n-      privileged: true\n-      timeout: ((task-timeout))\n-      image: spring-framework-ci-image\n+      image: ci-image\n       file: git-repo/ci/tasks/build-project.yml\n-      params:\n-        BRANCH: ((branch))\n-        GRADLE_ENTERPRISE_ACCESS_KEY: ((gradle_enterprise_secret_access_key))\n-        GRADLE_ENTERPRISE_CACHE_USERNAME: ((gradle_enterprise_cache_user.username))\n-        GRADLE_ENTERPRISE_CACHE_PASSWORD: ((gradle_enterprise_cache_user.password))\n+      <<: *build-project-task-params\n     on_failure:\n       do:\n       - put: repo-status-build\n         params: { state: \"failure\", commit: \"git-repo\" }\n       - put: slack-alert\n         params:\n-          text: >\n-            :concourse-failed: ${BUILD_PIPELINE_NAME} ${BUILD_JOB_NAME} failed!\n-            [<https://ci.spring.io/teams/${BUILD_TEAM_NAME}/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}|build log>]\n-            [<$TEXT_FILE_CONTENT|build scan>]\n-          text_file: git-repo/build/build-scan-uri.txt\n-          silent: true\n-          icon_emoji: \":concourse:\"\n-          username: concourse-ci\n+          <<: *slack-fail-params\n   - put: repo-status-build\n     params: { state: \"success\", commit: \"git-repo\" }\n   - put: artifactory-repo\n     params: &artifactory-params\n+      signing_key: ((signing-key))\n+      signing_passphrase: ((signing-passphrase))\n       repo: libs-snapshot-local\n       folder: distribution-repository\n       build_uri: \"https://ci.spring.io/teams/${BUILD_TEAM_NAME}/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}\"\n@@ -210,127 +207,68 @@ jobs:\n   serial: true\n   public: true\n   plan:\n-  - get: spring-framework-jdk11-ci-image\n+  - get: ci-image\n   - get: git-repo\n   - get: every-morning\n     trigger: true\n   - put: repo-status-jdk11-build\n     params: { state: \"pending\", commit: \"git-repo\" }\n   - do:\n     - task: check-project\n-      privileged: true\n-      timeout: ((task-timeout))\n-      image: spring-framework-jdk11-ci-image\n+      image: ci-image\n       file: git-repo/ci/tasks/check-project.yml\n       params:\n-        BRANCH: ((branch))\n-        GRADLE_ENTERPRISE_ACCESS_KEY: ((gradle_enterprise_secret_access_key))\n-        GRADLE_ENTERPRISE_CACHE_USERNAME: ((gradle_enterprise_cache_user.username))\n-        GRADLE_ENTERPRISE_CACHE_PASSWORD: ((gradle_enterprise_cache_user.password))\n+        MAIN_TOOLCHAIN: 8\n+        TEST_TOOLCHAIN: 11\n+      <<: *build-project-task-params\n     on_failure:\n       do:\n       - put: repo-status-jdk11-build\n         params: { state: \"failure\", commit: \"git-repo\" }\n       - put: slack-alert\n         params:\n-          text: >\n-            :concourse-failed: ${BUILD_PIPELINE_NAME} ${BUILD_JOB_NAME} failed!\n-            [<https://ci.spring.io/teams/${BUILD_TEAM_NAME}/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}|build log>]\n-            [<$TEXT_FILE_CONTENT|build scan>]\n-          text_file: git-repo/build/build-scan-uri.txt\n-          silent: true\n-          icon_emoji: \":concourse:\"\n-          username: concourse-ci\n+          <<: *slack-fail-params\n   - put: repo-status-jdk11-build\n     params: { state: \"success\", commit: \"git-repo\" }\n-- name: jdk14-build\n+- name: jdk15-build\n   serial: true\n   public: true\n   plan:\n-    - get: spring-framework-jdk14-ci-image\n+    - get: ci-image\n     - get: git-repo\n     - get: every-morning\n       trigger: true\n-    - put: repo-status-jdk14-build\n+    - put: repo-status-jdk15-build\n       params: { state: \"pending\", commit: \"git-repo\" }\n     - do:\n       - task: check-project\n-        privileged: true\n-        timeout: ((task-timeout))\n-        image: spring-framework-jdk14-ci-image\n+        image: ci-image\n         file: git-repo/ci/tasks/check-project.yml\n         params:\n-          BRANCH: ((branch))\n-          GRADLE_ENTERPRISE_ACCESS_KEY: ((gradle_enterprise_secret_access_key))\n-          GRADLE_ENTERPRISE_CACHE_USERNAME: ((gradle_enterprise_cache_user.username))\n-          GRADLE_ENTERPRISE_CACHE_PASSWORD: ((gradle_enterprise_cache_user.password))\n-      on_failure:\n-        do:\n-          - put: repo-status-jdk14-build\n-            params: { state: \"failure\", commit: \"git-repo\" }\n-          - put: slack-alert\n-            params:\n-              text: >\n-                :concourse-failed: ${BUILD_PIPELINE_NAME} ${BUILD_JOB_NAME} failed!\n-                [<https://ci.spring.io/teams/${BUILD_TEAM_NAME}/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}|build log>]\n-                [<$TEXT_FILE_CONTENT|build scan>]\n-              text_file: git-repo/build/build-scan-uri.txt\n-              silent: true\n-              icon_emoji: \":concourse:\"\n-              username: concourse-ci\n-    - put: repo-status-jdk14-build\n-      params: { state: \"success\", commit: \"git-repo\" }\n-- name: jdk15-build\n-  serial: true\n-  public: true\n-  plan:\n-    - get: spring-framework-jdk15-ci-image\n-    - get: git-repo\n-    - get: every-morning\n-      trigger: true\n-    - put: repo-status-jdk15-build\n-      params: { state: \"pending\", commit: \"git-repo\" }\n-    - do:\n-        - task: check-project\n-          privileged: true\n-          timeout: ((task-timeout))\n-          image: spring-framework-jdk15-ci-image\n-          file: git-repo/ci/tasks/check-project.yml\n-          params:\n-            BRANCH: ((branch))\n-            GRADLE_ENTERPRISE_ACCESS_KEY: ((gradle_enterprise_secret_access_key))\n-            GRADLE_ENTERPRISE_CACHE_USERNAME: ((gradle_enterprise_cache_user.username))\n-            GRADLE_ENTERPRISE_CACHE_PASSWORD: ((gradle_enterprise_cache_user.password))\n+          MAIN_TOOLCHAIN: 8\n+          TEST_TOOLCHAIN: 15\n+        <<: *build-project-task-params\n       on_failure:\n         do:\n           - put: repo-status-jdk15-build\n             params: { state: \"failure\", commit: \"git-repo\" }\n           - put: slack-alert\n             params:\n-              text: >\n-                :concourse-failed: ${BUILD_PIPELINE_NAME} ${BUILD_JOB_NAME} failed!\n-                [<https://ci.spring.io/teams/${BUILD_TEAM_NAME}/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}|build log>]\n-                [<$TEXT_FILE_CONTENT|build scan>]\n-              text_file: git-repo/build/build-scan-uri.txt\n-              silent: true\n-              icon_emoji: \":concourse:\"\n-              username: concourse-ci\n+              <<: *slack-fail-params\n     - put: repo-status-jdk15-build\n       params: { state: \"success\", commit: \"git-repo\" }\n - name: stage-milestone\n   serial: true\n   plan:\n-    - get: spring-framework-ci-image\n+    - get: ci-image\n     - get: git-repo\n       trigger: false\n     - task: stage\n-      image: spring-framework-ci-image\n+      image: ci-image\n       file: git-repo/ci/tasks/stage-version.yml\n       params:\n         RELEASE_TYPE: M\n-        GRADLE_ENTERPRISE_ACCESS_KEY: ((gradle_enterprise_secret_access_key))\n-        GRADLE_ENTERPRISE_CACHE_USERNAME: ((gradle_enterprise_cache_user.username))\n-        GRADLE_ENTERPRISE_CACHE_PASSWORD: ((gradle_enterprise_cache_user.password))\n+        <<: *gradle-enterprise-task-params\n     - put: artifactory-repo\n       params:\n         <<: *artifactory-params\n@@ -341,7 +279,7 @@ jobs:\n - name: promote-milestone\n   serial: true\n   plan:\n-    - get: spring-framework-ci-image\n+    - get: ci-image\n     - get: git-repo\n       trigger: false\n     - get: artifactory-repo\n@@ -351,27 +289,31 @@ jobs:\n         download_artifacts: false\n         save_build_info: true\n     - task: promote\n-      image: spring-framework-ci-image\n+      image: ci-image\n       file: git-repo/ci/tasks/promote-version.yml\n       params:\n         RELEASE_TYPE: M\n-        ARTIFACTORY_SERVER: ((artifactory-server))\n-        ARTIFACTORY_USERNAME: ((artifactory-username))\n-        ARTIFACTORY_PASSWORD: ((artifactory-password))\n+        <<: *artifactory-task-params\n+    - task: generate-changelog\n+      file: git-repo/ci/tasks/generate-changelog.yml\n+      params:\n+        RELEASE_TYPE: M\n+        <<: *github-task-params\n+    - put: github-pre-release\n+      params:\n+        <<: *changelog-task-params\n - name: stage-rc\n   serial: true\n   plan:\n-    - get: spring-framework-ci-image\n+    - get: ci-image\n     - get: git-repo\n       trigger: false\n     - task: stage\n-      image: spring-framework-ci-image\n+      image: ci-image\n       file: git-repo/ci/tasks/stage-version.yml\n       params:\n         RELEASE_TYPE: RC\n-        GRADLE_ENTERPRISE_ACCESS_KEY: ((gradle_enterprise_secret_access_key))\n-        GRADLE_ENTERPRISE_CACHE_USERNAME: ((gradle_enterprise_cache_user.username))\n-        GRADLE_ENTERPRISE_CACHE_PASSWORD: ((gradle_enterprise_cache_user.password))\n+        <<: *gradle-enterprise-task-params\n     - put: artifactory-repo\n       params:\n         <<: *artifactory-params\n@@ -382,7 +324,7 @@ jobs:\n - name: promote-rc\n   serial: true\n   plan:\n-    - get: spring-framework-ci-image\n+    - get: ci-image\n     - get: git-repo\n       trigger: false\n     - get: artifactory-repo\n@@ -392,17 +334,81 @@ jobs:\n         download_artifacts: false\n         save_build_info: true\n     - task: promote\n-      image: spring-framework-ci-image\n+      image: ci-image\n       file: git-repo/ci/tasks/promote-version.yml\n       params:\n         RELEASE_TYPE: RC\n-        ARTIFACTORY_SERVER: ((artifactory-server))\n-        ARTIFACTORY_USERNAME: ((artifactory-username))\n-        ARTIFACTORY_PASSWORD: ((artifactory-password))\n+        <<: *artifactory-task-params\n+    - task: generate-changelog\n+      file: git-repo/ci/tasks/generate-changelog.yml\n+      params:\n+        RELEASE_TYPE: RC\n+        <<: *github-task-params\n+    - put: github-pre-release\n+      params:\n+        <<: *changelog-task-params\n+- name: stage-release\n+  serial: true\n+  plan:\n+    - get: ci-image\n+    - get: git-repo\n+      trigger: false\n+    - task: stage\n+      image: ci-image\n+      file: git-repo/ci/tasks/stage-version.yml\n+      params:\n+        RELEASE_TYPE: RELEASE\n+        <<: *gradle-enterprise-task-params\n+    - put: artifactory-repo\n+      params:\n+        <<: *artifactory-params\n+        repo: libs-staging-local\n+    - put: git-repo\n+      params:\n+        repository: stage-git-repo\n+- name: promote-release\n+  serial: true\n+  plan:\n+    - get: ci-image\n+    - get: git-repo\n+      trigger: false\n+    - get: artifactory-repo\n+      trigger: false\n+      passed: [stage-release]\n+      params:\n+        download_artifacts: true\n+        save_build_info: true\n+    - task: promote\n+      image: ci-image\n+      file: git-repo/ci/tasks/promote-version.yml\n+      params:\n+        RELEASE_TYPE: RELEASE\n+        <<: *artifactory-task-params\n+        <<: *sonatype-task-params\n+- name: create-github-release\n+  serial: true\n+  plan:\n+    - get: ci-image\n+    - get: git-repo\n+    - get: artifactory-repo\n+      trigger: true\n+      passed: [promote-release]\n+      params:\n+        download_artifacts: false\n+        save_build_info: true\n+    - task: generate-changelog\n+      file: git-repo/ci/tasks/generate-changelog.yml\n+      params:\n+        RELEASE_TYPE: RELEASE\n+        <<: *github-task-params\n+    - put: github-release\n+      params:\n+        <<: *changelog-task-params\n+\n groups:\n-- name: \"Build\"\n-  jobs: [\"build\", \"jdk11-build\", \"jdk14-build\", \"jdk15-build\"]\n-- name: \"Release\"\n-  jobs: [\"stage-milestone\",\"stage-rc\", \"promote-milestone\",\"promote-rc\"]\n-- name: \"CI Images\"\n-  jobs: [\"build-spring-framework-ci-images\"]\n+- name: \"builds\"\n+  jobs: [\"build\", \"jdk11-build\", \"jdk15-build\"]\n+- name: \"releases\"\n+  jobs: [\"stage-milestone\", \"stage-rc\", \"stage-release\", \"promote-milestone\", \"promote-rc\", \"promote-release\", \"create-github-release\"]\n+- name: \"ci-images\"\n+  jobs: [\"build-ci-images\"]"
  },
  {
    "sha": "f2bf454e35975d304592b72bca0bca8eb242d0e7",
    "filename": "ci/scripts/check-project.sh",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/Y-lenny/spring-framework/blob/e4f753e3e3237c1c7c6d0b57b7a30d6721923cba/ci/scripts/check-project.sh",
    "raw_url": "https://github.com/Y-lenny/spring-framework/raw/e4f753e3e3237c1c7c6d0b57b7a30d6721923cba/ci/scripts/check-project.sh",
    "contents_url": "https://api.github.com/repos/Y-lenny/spring-framework/contents/ci/scripts/check-project.sh?ref=e4f753e3e3237c1c7c6d0b57b7a30d6721923cba",
    "patch": "@@ -4,5 +4,6 @@ set -e\n source $(dirname $0)/common.sh\n \n pushd git-repo > /dev/null\n-./gradlew -Dorg.gradle.internal.launcher.welcomeMessageEnabled=false --no-daemon --max-workers=4 check\n+./gradlew -Dorg.gradle.internal.launcher.welcomeMessageEnabled=false -Dorg.gradle.java.installations.fromEnv=JDK11,JDK15 \\\n+  -PmainToolchain=$MAIN_TOOLCHAIN -PtestToolchain=$TEST_TOOLCHAIN --no-daemon --max-workers=4 check\n popd > /dev/null"
  },
  {
    "sha": "d3d2b97e5dbacbc2d1c3789b95dc3c732c3275ef",
    "filename": "ci/scripts/generate-changelog.sh",
    "status": "added",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/Y-lenny/spring-framework/blob/e4f753e3e3237c1c7c6d0b57b7a30d6721923cba/ci/scripts/generate-changelog.sh",
    "raw_url": "https://github.com/Y-lenny/spring-framework/raw/e4f753e3e3237c1c7c6d0b57b7a30d6721923cba/ci/scripts/generate-changelog.sh",
    "contents_url": "https://api.github.com/repos/Y-lenny/spring-framework/contents/ci/scripts/generate-changelog.sh?ref=e4f753e3e3237c1c7c6d0b57b7a30d6721923cba",
    "patch": "@@ -0,0 +1,12 @@\n+#!/bin/bash\n+set -e\n+\n+CONFIG_DIR=git-repo/ci/config\n+version=$( cat artifactory-repo/build-info.json | jq -r '.buildInfo.modules[0].id' | sed 's/.*:.*:\\(.*\\)/\\1/' )\n+\n+java -jar /github-changelog-generator.jar \\\n+  --spring.config.location=${CONFIG_DIR}/changelog-generator.yml \\\n+  ${version} generated-changelog/changelog.md\n+\n+echo ${version} > generated-changelog/version\n+echo v${version} > generated-changelog/tag"
  },
  {
    "sha": "44c5ff626f91b787ef92667ed2302ab13d728849",
    "filename": "ci/scripts/promote-version.sh",
    "status": "modified",
    "additions": 7,
    "deletions": 2,
    "changes": 9,
    "blob_url": "https://github.com/Y-lenny/spring-framework/blob/e4f753e3e3237c1c7c6d0b57b7a30d6721923cba/ci/scripts/promote-version.sh",
    "raw_url": "https://github.com/Y-lenny/spring-framework/raw/e4f753e3e3237c1c7c6d0b57b7a30d6721923cba/ci/scripts/promote-version.sh",
    "contents_url": "https://api.github.com/repos/Y-lenny/spring-framework/contents/ci/scripts/promote-version.sh?ref=e4f753e3e3237c1c7c6d0b57b7a30d6721923cba",
    "patch": "@@ -1,13 +1,18 @@\n #!/bin/bash\n \n source $(dirname $0)/common.sh\n+CONFIG_DIR=git-repo/ci/config\n \n version=$( cat artifactory-repo/build-info.json | jq -r '.buildInfo.modules[0].id' | sed 's/.*:.*:\\(.*\\)/\\1/' )\n export BUILD_INFO_LOCATION=$(pwd)/artifactory-repo/build-info.json\n \n-java -jar /opt/concourse-release-scripts.jar promote $RELEASE_TYPE $BUILD_INFO_LOCATION > /dev/null || { exit 1; }\n+java -jar /opt/concourse-release-scripts.jar \\\n+  --spring.config.location=${CONFIG_DIR}/release-scripts.yml \\\n+  publishToCentral $RELEASE_TYPE $BUILD_INFO_LOCATION artifactory-repo || { exit 1; }\n \n-java -jar /opt/concourse-release-scripts.jar distribute $RELEASE_TYPE $BUILD_INFO_LOCATION > /dev/null || { exit 1; }\n+java -jar /opt/concourse-release-scripts.jar \\\n+  --spring.config.location=${CONFIG_DIR}/release-scripts.yml \\\n+  promote $RELEASE_TYPE $BUILD_INFO_LOCATION || { exit 1; }\n \n echo \"Promotion complete\"\n echo $version > version/version"
  },
  {
    "sha": "b42631164ed5c7cd971a491caa53c3d39e3b37fd",
    "filename": "ci/scripts/sync-to-maven-central.sh",
    "status": "added",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/Y-lenny/spring-framework/blob/e4f753e3e3237c1c7c6d0b57b7a30d6721923cba/ci/scripts/sync-to-maven-central.sh",
    "raw_url": "https://github.com/Y-lenny/spring-framework/raw/e4f753e3e3237c1c7c6d0b57b7a30d6721923cba/ci/scripts/sync-to-maven-central.sh",
    "contents_url": "https://api.github.com/repos/Y-lenny/spring-framework/contents/ci/scripts/sync-to-maven-central.sh?ref=e4f753e3e3237c1c7c6d0b57b7a30d6721923cba",
    "patch": "@@ -0,0 +1,8 @@\n+#!/bin/bash\n+\n+export BUILD_INFO_LOCATION=$(pwd)/artifactory-repo/build-info.json\n+version=$( cat artifactory-repo/build-info.json | jq -r '.buildInfo.modules[0].id' | sed 's/.*:.*:\\(.*\\)/\\1/' )\n+java -jar /opt/concourse-release-scripts.jar syncToCentral \"RELEASE\" $BUILD_INFO_LOCATION || { exit 1; }\n+\n+echo \"Sync complete\"\n+echo $version > version/version"
  },
  {
    "sha": "bea1185231b91722506fcf9f178fe3dd2b43f105",
    "filename": "ci/tasks/check-project.yml",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/Y-lenny/spring-framework/blob/e4f753e3e3237c1c7c6d0b57b7a30d6721923cba/ci/tasks/check-project.yml",
    "raw_url": "https://github.com/Y-lenny/spring-framework/raw/e4f753e3e3237c1c7c6d0b57b7a30d6721923cba/ci/tasks/check-project.yml",
    "contents_url": "https://api.github.com/repos/Y-lenny/spring-framework/contents/ci/tasks/check-project.yml?ref=e4f753e3e3237c1c7c6d0b57b7a30d6721923cba",
    "patch": "@@ -10,6 +10,8 @@ caches:\n params:\n   BRANCH:\n   CI: true\n+  MAIN_TOOLCHAIN:\n+  TEST_TOOLCHAIN:\n   GRADLE_ENTERPRISE_ACCESS_KEY:\n   GRADLE_ENTERPRISE_CACHE_USERNAME:\n   GRADLE_ENTERPRISE_CACHE_PASSWORD:"
  },
  {
    "sha": "ea048af96a0fb2fbfc1a612a97503d6b85bb8f4b",
    "filename": "ci/tasks/generate-changelog.yml",
    "status": "added",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/Y-lenny/spring-framework/blob/e4f753e3e3237c1c7c6d0b57b7a30d6721923cba/ci/tasks/generate-changelog.yml",
    "raw_url": "https://github.com/Y-lenny/spring-framework/raw/e4f753e3e3237c1c7c6d0b57b7a30d6721923cba/ci/tasks/generate-changelog.yml",
    "contents_url": "https://api.github.com/repos/Y-lenny/spring-framework/contents/ci/tasks/generate-changelog.yml?ref=e4f753e3e3237c1c7c6d0b57b7a30d6721923cba",
    "patch": "@@ -0,0 +1,20 @@\n+---\n+platform: linux\n+image_resource:\n+  type: registry-image\n+  source:\n+    repository: springio/github-changelog-generator\n+    tag: '0.0.6'\n+inputs:\n+- name: git-repo\n+- name: artifactory-repo\n+outputs:\n+- name: generated-changelog\n+params:\n+  GITHUB_ORGANIZATION:\n+  GITHUB_REPO:\n+  GITHUB_USERNAME:\n+  GITHUB_TOKEN:\n+  RELEASE_TYPE:\n+run:\n+  path: git-repo/ci/scripts/generate-changelog.sh"
  },
  {
    "sha": "abdd8fed5c5cd64898fc32fb5951ea673c32dbf9",
    "filename": "ci/tasks/promote-version.yml",
    "status": "modified",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/Y-lenny/spring-framework/blob/e4f753e3e3237c1c7c6d0b57b7a30d6721923cba/ci/tasks/promote-version.yml",
    "raw_url": "https://github.com/Y-lenny/spring-framework/raw/e4f753e3e3237c1c7c6d0b57b7a30d6721923cba/ci/tasks/promote-version.yml",
    "contents_url": "https://api.github.com/repos/Y-lenny/spring-framework/contents/ci/tasks/promote-version.yml?ref=e4f753e3e3237c1c7c6d0b57b7a30d6721923cba",
    "patch": "@@ -10,9 +10,9 @@ params:\n   ARTIFACTORY_SERVER:\n   ARTIFACTORY_USERNAME:\n   ARTIFACTORY_PASSWORD:\n-  BINTRAY_SUBJECT:\n-  BINTRAY_REPO:\n-  BINTRAY_USERNAME:\n-  BINTRAY_API_KEY:\n+  SONATYPE_USER:\n+  SONATYPE_PASSWORD:\n+  SONATYPE_URL:\n+  SONATYPE_STAGING_PROFILE_ID:\n run:\n   path: git-repo/ci/scripts/promote-version.sh"
  },
  {
    "sha": "202ed82e194b07fae670ddfb82056e3d6de35b2d",
    "filename": "gradle.properties",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/Y-lenny/spring-framework/blob/e4f753e3e3237c1c7c6d0b57b7a30d6721923cba/gradle.properties",
    "raw_url": "https://github.com/Y-lenny/spring-framework/raw/e4f753e3e3237c1c7c6d0b57b7a30d6721923cba/gradle.properties",
    "contents_url": "https://api.github.com/repos/Y-lenny/spring-framework/contents/gradle.properties?ref=e4f753e3e3237c1c7c6d0b57b7a30d6721923cba",
    "patch": "@@ -1,4 +1,4 @@\n-version=5.3.0-SNAPSHOT\n+version=5.3.6-SNAPSHOT\n org.gradle.jvmargs=-Xmx1536M\n org.gradle.caching=true\n org.gradle.parallel=true"
  },
  {
    "sha": "54d1de1eb8f99d692138ae68c6a12e0957d7efc4",
    "filename": "gradle/custom-java-home.gradle",
    "status": "removed",
    "additions": 0,
    "deletions": 80,
    "changes": 80,
    "blob_url": "https://github.com/Y-lenny/spring-framework/blob/1061bcdba2d2953df0a7b07ca177354babfcb645/gradle/custom-java-home.gradle",
    "raw_url": "https://github.com/Y-lenny/spring-framework/raw/1061bcdba2d2953df0a7b07ca177354babfcb645/gradle/custom-java-home.gradle",
    "contents_url": "https://api.github.com/repos/Y-lenny/spring-framework/contents/gradle/custom-java-home.gradle?ref=1061bcdba2d2953df0a7b07ca177354babfcb645",
    "patch": "@@ -1,80 +0,0 @@\n-// -----------------------------------------------------------------------------\n-//\n-// This script adds support for the following two JVM system properties\n-// that control the build for alternative JDKs (i.e., a JDK other than\n-// the one used to launch the Gradle process).\n-//\n-// - customJavaHome: absolute path to the alternate JDK installation to\n-//     use to compile Java code and execute tests. This system property\n-//     is also used in spring-oxm.gradle to determine whether JiBX is\n-//     supported.\n-//\n-// - customJavaSourceVersion: Java version supplied to the `--release`\n-//     command line flag to control the Java source and target\n-//     compatibility version. Supported versions include 9 or higher.\n-//     Do not set this system property if Java 8 should be used.\n-//\n-// Examples:\n-//\n-// ./gradlew -DcustomJavaHome=/Library/Java/JavaVirtualMachines/jdk-14.jdk/Contents/Home test\n-//\n-// ./gradlew --no-build-cache -DcustomJavaHome=/Library/Java/JavaVirtualMachines/jdk-14.jdk/Contents/Home test\n-//\n-// ./gradlew -DcustomJavaHome=/Library/Java/JavaVirtualMachines/jdk-14.jdk/Contents/Home -DcustomJavaSourceVersion=14 test\n-//\n-//\n-// Credits: inspired by work from Marc Philipp and Stephane Nicoll\n-//\n-// -----------------------------------------------------------------------------\n-\n-import org.gradle.internal.os.OperatingSystem\n-// import org.jetbrains.kotlin.gradle.dsl.KotlinJvmCompile\n-\n-def customJavaHome = System.getProperty(\"customJavaHome\")\n-\n-if (customJavaHome) {\n-\tdef customJavaHomeDir = new File(customJavaHome)\n-\tdef customJavaSourceVersion = System.getProperty(\"customJavaSourceVersion\")\n-\n-\ttasks.withType(JavaCompile) {\n-\t\tlogger.info(\"Java home for \" + it.name + \" task in \" + project.name + \": \" + customJavaHomeDir)\n-\t\toptions.forkOptions.javaHome = customJavaHomeDir\n-\t\tinputs.property(\"customJavaHome\", customJavaHome)\n-\t\tif (customJavaSourceVersion) {\n-\t\t\toptions.compilerArgs += [ \"--release\", customJavaSourceVersion]\n-\t\t\tinputs.property(\"customJavaSourceVersion\", customJavaSourceVersion)\n-\t\t}\n-\t}\n-\n-\ttasks.withType(GroovyCompile) {\n-\t\tlogger.info(\"Java home for \" + it.name + \" task in \" + project.name + \": \" + customJavaHomeDir)\n-\t\toptions.forkOptions.javaHome = customJavaHomeDir\n-\t\tinputs.property(\"customJavaHome\", customJavaHome)\n-\t\tif (customJavaSourceVersion) {\n-\t\t\toptions.compilerArgs += [ \"--release\", customJavaSourceVersion]\n-\t\t\tinputs.property(\"customJavaSourceVersion\", customJavaSourceVersion)\n-\t\t}\n-\t}\n-\n-\t/*\n-\ttasks.withType(KotlinJvmCompile) {\n-\t\tlogger.info(\"Java home for \" + it.name + \" task in \" + project.name + \": \" + customJavaHome)\n-\t\tkotlinOptions.jdkHome = customJavaHomeDir\n-\t\tinputs.property(\"customJavaHome\", customJavaHome)\n-\t}\n-\t*/\n-\n-\ttasks.withType(Test) {\n-\t\tdef javaExecutable = customJavaHome + \"/bin/java\"\n-\t\tif (OperatingSystem.current().isWindows()) {\n-\t\t\tjavaExecutable += \".exe\"\n-\t\t}\n-\t\tlogger.info(\"Java executable for \" + it.name + \" task in \" + project.name + \": \" + javaExecutable)\n-\t\texecutable = javaExecutable\n-\t\tinputs.property(\"customJavaHome\", customJavaHome)\n-\t\tif (customJavaSourceVersion) {\n-\t\t\tinputs.property(\"customJavaSourceVersion\", customJavaSourceVersion)\n-\t\t}\n-\t}\n-\n-}"
  },
  {
    "sha": "4209b79fdc02285bbb97b541490b4d3c5f0e13c5",
    "filename": "gradle/docs.gradle",
    "status": "modified",
    "additions": 9,
    "deletions": 11,
    "changes": 20,
    "blob_url": "https://github.com/Y-lenny/spring-framework/blob/e4f753e3e3237c1c7c6d0b57b7a30d6721923cba/gradle/docs.gradle",
    "raw_url": "https://github.com/Y-lenny/spring-framework/raw/e4f753e3e3237c1c7c6d0b57b7a30d6721923cba/gradle/docs.gradle",
    "contents_url": "https://api.github.com/repos/Y-lenny/spring-framework/contents/gradle/docs.gradle?ref=e4f753e3e3237c1c7c6d0b57b7a30d6721923cba",
    "patch": "@@ -3,7 +3,7 @@ configurations {\n }\n \n dependencies {\n-\tasciidoctorExt(\"io.spring.asciidoctor:spring-asciidoctor-extensions-block-switch:0.4.2.RELEASE\")\n+\tasciidoctorExt(\"io.spring.asciidoctor:spring-asciidoctor-extensions-block-switch:0.5.0\")\n }\n \n repositories {\n@@ -106,11 +106,14 @@ dokka {\n \t\texternalDocumentationLink {\n \t\t\turl = new URL(\"https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/\")\n \t\t}\n+\t\texternalDocumentationLink {\n+\t\t\turl = new URL(\"https://r2dbc.io/spec/0.8.3.RELEASE/api/\")\n+\t\t}\n \t}\n }\n \n task downloadResources(type: Download) {\n-\tdef version = \"0.2.2.RELEASE\"\n+\tdef version = \"0.2.5\"\n \tsrc \"https://repo.spring.io/release/io/spring/docresources/\" +\n \t\t\t\"spring-doc-resources/$version/spring-doc-resources-${version}.zip\"\n \tdest project.file(\"$buildDir/docs/spring-doc-resources.zip\")\n@@ -124,11 +127,7 @@ task extractDocResources(type: Copy, dependsOn: downloadResources) {\n }\n \n asciidoctorj {\n-\tmodules {\n-\t\tpdf {\n-\t\t\tversion '1.5.0-beta.8'\n-\t\t}\n-\t}\n+\tversion = '2.4.1'\n \tfatalWarnings \".*\"\n \toptions doctype: 'book', eruby: 'erubis'\n \tattributes([\n@@ -153,7 +152,6 @@ asciidoctorj {\n  * in \"build/docs/ref-docs/html5\".\n  */\n asciidoctor {\n-\tdependsOn asciidoctorPdf\n \tbaseDirFollowsSourceDir()\n \tconfigurations 'asciidoctorExt'\n \tsources {\n@@ -186,7 +184,7 @@ asciidoctorPdf {\n /**\n  * Zip all docs (API and reference) into a single archive\n  */\n-task docsZip(type: Zip, dependsOn: ['api', 'asciidoctor', 'dokka']) {\n+task docsZip(type: Zip, dependsOn: ['api', 'asciidoctor', 'asciidoctorPdf', 'dokka']) {\n \tgroup = \"Distribution\"\n \tdescription = \"Builds -${archiveClassifier} archive containing api and reference \" +\n \t\t\t\"for deployment at https://docs.spring.io/spring-framework/docs.\"\n@@ -199,10 +197,10 @@ task docsZip(type: Zip, dependsOn: ['api', 'asciidoctor', 'dokka']) {\n \tfrom (api) {\n \t\tinto \"javadoc-api\"\n \t}\n-\tfrom (\"$asciidoctor.outputDir/html5\") {\n+\tfrom (\"$asciidoctor.outputDir\") {\n \t\tinto \"reference/html\"\n \t}\n-\tfrom (\"$asciidoctor.outputDir/pdf\") {\n+\tfrom (\"$asciidoctorPdf.outputDir\") {\n \t\tinto \"reference/pdf\"\n \t}\n \tfrom (dokka) {"
  },
  {
    "sha": "48dea87a9b319565bf4e650871263441757b3268",
    "filename": "gradle/ide.gradle",
    "status": "modified",
    "additions": 10,
    "deletions": 2,
    "changes": 12,
    "blob_url": "https://github.com/Y-lenny/spring-framework/blob/e4f753e3e3237c1c7c6d0b57b7a30d6721923cba/gradle/ide.gradle",
    "raw_url": "https://github.com/Y-lenny/spring-framework/raw/e4f753e3e3237c1c7c6d0b57b7a30d6721923cba/gradle/ide.gradle",
    "contents_url": "https://api.github.com/repos/Y-lenny/spring-framework/contents/gradle/ide.gradle?ref=e4f753e3e3237c1c7c6d0b57b7a30d6721923cba",
    "patch": "@@ -29,12 +29,11 @@ eclipse.classpath.file.whenMerged { classpath ->\n \tclasspath.entries.removeAll { entry -> (entry.path =~ /(?!.*?repack.*\\.jar).*?\\/([^\\/]+)\\/build\\/libs\\/[^\\/]+\\.jar/) }\n }\n \n-\n // Use separate main/test outputs (prevents WTP from packaging test classes)\n eclipse.classpath.defaultOutputDir = file(project.name+\"/bin/eclipse\")\n eclipse.classpath.file.beforeMerged { classpath ->\n \tclasspath.entries.findAll{ it instanceof SourceFolder }.each {\n-\t\tif(it.output.startsWith(\"bin/\")) {\n+\t\tif (it.output.startsWith(\"bin/\")) {\n \t\t\tit.output = null\n \t\t}\n \t}\n@@ -56,6 +55,15 @@ eclipse.classpath.file.whenMerged { classpath ->\n \t}\n }\n \n+// Ensure that JMH sources and resources are treated as test classpath entries\n+// so that they can see test fixtures.\n+// https://github.com/melix/jmh-gradle-plugin/issues/157\n+eclipse.classpath.file.whenMerged {\n+\tentries.findAll { it.path =~ /src\\/jmh\\/(java|resources)/ }.each {\n+\t\tit.entryAttributes['test'] = 'true'\n+\t}\n+}\n+\n // Allow projects to be used as WTP modules\n eclipse.project.natures \"org.eclipse.wst.common.project.facet.core.nature\"\n "
  }
]
