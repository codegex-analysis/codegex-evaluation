[
  {
    "sha": "ff81cc601b50963b9d126a23f2a54f6ab051da97",
    "filename": "build.properties",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/ldtteam/minecolonies/blob/888a90a816d316d8444dab7933bbc12525d2c772/build.properties",
    "raw_url": "https://github.com/ldtteam/minecolonies/raw/888a90a816d316d8444dab7933bbc12525d2c772/build.properties",
    "contents_url": "https://api.github.com/repos/ldtteam/minecolonies/contents/build.properties?ref=888a90a816d316d8444dab7933bbc12525d2c772",
    "patch": "@@ -7,4 +7,4 @@ forge_version=36.0.14\n mappings=20201028-1.16.3\n # Dependencies\n jei_version=7.6.1.71\n-structurize_version=0.13.148-ALPHA\n+structurize_version=0.13.149-ALPHA"
  },
  {
    "sha": "677a4343e3f6607b3881e475f38dc4a7b6d1d6e0",
    "filename": "src/api/java/com/minecolonies/api/configuration/ServerConfiguration.java",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/ldtteam/minecolonies/blob/888a90a816d316d8444dab7933bbc12525d2c772/src/api/java/com/minecolonies/api/configuration/ServerConfiguration.java",
    "raw_url": "https://github.com/ldtteam/minecolonies/raw/888a90a816d316d8444dab7933bbc12525d2c772/src/api/java/com/minecolonies/api/configuration/ServerConfiguration.java",
    "contents_url": "https://api.github.com/repos/ldtteam/minecolonies/contents/src/api/java/com/minecolonies/api/configuration/ServerConfiguration.java?ref=888a90a816d316d8444dab7933bbc12525d2c772",
    "patch": "@@ -60,6 +60,7 @@\n     public final ForgeConfigSpec.IntValue     colonyLoadStrictness;\n     public final ForgeConfigSpec.IntValue     badVisitorsChance;\n     public final ForgeConfigSpec.BooleanValue generateSupplyLoot;\n+    public final ForgeConfigSpec.IntValue     maxTreeSize;\n \n     /*  --------------------------------------------------------------------------- *\n      *  ------------------- ######## Research settings ######## ------------------- *\n@@ -216,6 +217,7 @@ protected ServerConfiguration(final ForgeConfigSpec.Builder builder)\n         colonyLoadStrictness = defineInteger(builder, \"colonyloadstrictness\", 3, 1, 15);\n         badVisitorsChance = defineInteger(builder, \"badvisitorchance\", 2, 1, 100);\n         generateSupplyLoot = defineBoolean(builder, \"generatesupplyloot\", true);\n+        maxTreeSize = defineInteger(builder, \"maxtreesize\", 256, 1, 1000);\n \n         swapToCategory(builder, \"research\");\n         researchCreativeCompletion = defineBoolean(builder, \"researchcreativecompletion\", true);"
  },
  {
    "sha": "099b9a20af6b60ccdcddc37dccaff8e4190107d3",
    "filename": "src/api/java/com/minecolonies/api/util/BlockPosUtil.java",
    "status": "modified",
    "additions": 95,
    "deletions": 0,
    "changes": 95,
    "blob_url": "https://github.com/ldtteam/minecolonies/blob/888a90a816d316d8444dab7933bbc12525d2c772/src/api/java/com/minecolonies/api/util/BlockPosUtil.java",
    "raw_url": "https://github.com/ldtteam/minecolonies/raw/888a90a816d316d8444dab7933bbc12525d2c772/src/api/java/com/minecolonies/api/util/BlockPosUtil.java",
    "contents_url": "https://api.github.com/repos/ldtteam/minecolonies/contents/src/api/java/com/minecolonies/api/util/BlockPosUtil.java?ref=888a90a816d316d8444dab7933bbc12525d2c772",
    "patch": "@@ -17,6 +17,8 @@\n import net.minecraft.util.Direction;\n import net.minecraft.util.Rotation;\n import net.minecraft.util.Tuple;\n+import net.minecraft.util.Direction.Axis;\n+import net.minecraft.util.Direction.AxisDirection;\n import net.minecraft.util.math.BlockPos;\n import net.minecraft.util.math.MathHelper;\n import net.minecraft.util.math.vector.Vector3d;\n@@ -735,4 +737,97 @@ public static BlockPos findAround(final IBlockReader world, final BlockPos start\n \n         return null;\n     }\n+\n+    /**\n+     * Returns plane furthest from lookFrom within the box.\n+     *\n+     * @param lookFrom from where to look at the box\n+     * @param boxStart possibly unsorted box start pos\n+     * @param boxEnd   possible unsorted box end pos\n+     * @param ignoreY  if should ignore Y planes or not\n+     * @return furthest plane from lookFrom within the box\n+     */\n+    public static Direction getBoxFurthestPlane(final BlockPos lookFrom,\n+        final BlockPos boxStart,\n+        final BlockPos boxEnd,\n+        final boolean ignoreY)\n+    {\n+        final int lfX = lookFrom.getX();\n+        final int lfY = lookFrom.getY();\n+        final int lfZ = lookFrom.getZ();\n+\n+        final int bsX = boxStart.getX();\n+        final int bsY = boxStart.getY();\n+        final int bsZ = boxStart.getZ();\n+        final int beX = boxEnd.getX();\n+        final int beY = boxEnd.getY();\n+        final int beZ = boxEnd.getZ();\n+        final int minX = Math.min(bsX, beX);\n+        final int minY = Math.min(bsY, beY);\n+        final int minZ = Math.min(bsZ, beZ);\n+        final int maxX = Math.max(bsX, beX);\n+        final int maxY = Math.max(bsY, beY);\n+        final int maxZ = Math.max(bsZ, beZ);\n+\n+        final int closestVecX;\n+        final int closestVecY;\n+        final int closestVecZ;\n+\n+        if (minX <= lfX && lfX <= maxX && (ignoreY || (minY <= lfY && lfY <= maxY)) && minZ <= lfZ && lfZ <= maxZ)\n+        {\n+            closestVecX = (Math.abs(bsX - lfX) >= Math.abs(beX - lfX) ? bsX : beX) - lfX;\n+            closestVecY = (Math.abs(bsY - lfY) >= Math.abs(beY - lfY) ? bsY : beY) - lfY;\n+            closestVecZ = (Math.abs(bsZ - lfZ) >= Math.abs(beZ - lfZ) ? bsZ : beZ) - lfZ;\n+        }\n+        else\n+        {\n+            closestVecX = (Math.abs(bsX - lfX) < Math.abs(beX - lfX) ? bsX : beX) - lfX;\n+            closestVecY = (Math.abs(bsY - lfY) < Math.abs(beY - lfY) ? bsY : beY) - lfY;\n+            closestVecZ = (Math.abs(bsZ - lfZ) < Math.abs(beZ - lfZ) ? bsZ : beZ) - lfZ;\n+        }\n+\n+        final int absX = Math.abs(closestVecX);\n+        final int absY = Math.abs(closestVecY);\n+        final int absZ = Math.abs(closestVecZ);\n+\n+        if ((ignoreY || absX > absY) && absX > absZ)\n+        {\n+            return Direction.byLong(closestVecX < 0 ? -1 : 1, 0, 0);\n+        }\n+        else if (!ignoreY && absY > absX && absY > absZ)\n+        {\n+            return Direction.byLong(0, closestVecY < 0 ? -1 : 1, 0);\n+        }\n+        else\n+        {\n+            return Direction.byLong(0, 0, closestVecZ < 0 ? -1 : 1);\n+        }\n+    }\n+\n+    private static Random planeRandom = new Random();\n+\n+    /**\n+     * Get random pos from border plane of given box.\n+     *\n+     * @param plane    pos source plane\n+     * @param boxStart possibly unsorted box start pos\n+     * @param boxEnd   possibly unsorted box end pos\n+     * @return random pos within the box calculated using given plane\n+     */\n+    public static BlockPos getRandomPosInBoxPlane(final Direction plane, final BlockPos boxStart, final BlockPos boxEnd)\n+    {\n+        Log.getLogger().info(plane.toString());\n+        final int minX = Math.min(boxStart.getX(), boxEnd.getX());\n+        final int minY = Math.min(boxStart.getY(), boxEnd.getY());\n+        final int minZ = Math.min(boxStart.getZ(), boxEnd.getZ());\n+        final int maxX = Math.max(boxStart.getX(), boxEnd.getX());\n+        final int maxY = Math.max(boxStart.getY(), boxEnd.getY());\n+        final int maxZ = Math.max(boxStart.getZ(), boxEnd.getZ());\n+\n+        int x = plane.getAxis() != Axis.X ? MathHelper.nextInt(planeRandom, minX, maxX) : (plane.getAxisDirection() == AxisDirection.POSITIVE ? maxX : minX);\n+        int y = plane.getAxis() != Axis.Y ? MathHelper.nextInt(planeRandom, minY, maxY) : (plane.getAxisDirection() == AxisDirection.POSITIVE ? maxY : minY);\n+        int z = plane.getAxis() != Axis.Z ? MathHelper.nextInt(planeRandom, minZ, maxZ) : (plane.getAxisDirection() == AxisDirection.POSITIVE ? maxZ : minZ);\n+\n+        return new BlockPos(x, y, z);\n+    }\n }"
  },
  {
    "sha": "6bc1ab69d3ce624d77495753e35f55f69990a4f3",
    "filename": "src/api/java/com/minecolonies/api/util/InventoryUtils.java",
    "status": "modified",
    "additions": 123,
    "deletions": 0,
    "changes": 123,
    "blob_url": "https://github.com/ldtteam/minecolonies/blob/888a90a816d316d8444dab7933bbc12525d2c772/src/api/java/com/minecolonies/api/util/InventoryUtils.java",
    "raw_url": "https://github.com/ldtteam/minecolonies/raw/888a90a816d316d8444dab7933bbc12525d2c772/src/api/java/com/minecolonies/api/util/InventoryUtils.java",
    "contents_url": "https://api.github.com/repos/ldtteam/minecolonies/contents/src/api/java/com/minecolonies/api/util/InventoryUtils.java?ref=888a90a816d316d8444dab7933bbc12525d2c772",
    "patch": "@@ -9,21 +9,27 @@\n import com.minecolonies.api.util.constant.IToolType;\n import net.minecraft.block.Block;\n import net.minecraft.entity.item.ItemEntity;\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.entity.player.PlayerInventory;\n+import net.minecraft.entity.player.ServerPlayerEntity;\n import net.minecraft.item.Food;\n import net.minecraft.item.Item;\n import net.minecraft.item.ItemStack;\n import net.minecraft.tileentity.ChestTileEntity;\n import net.minecraft.tileentity.TileEntity;\n import net.minecraft.util.Direction;\n import net.minecraft.util.math.BlockPos;\n+import net.minecraft.util.text.TranslationTextComponent;\n import net.minecraft.world.World;\n import net.minecraftforge.common.capabilities.ICapabilityProvider;\n import net.minecraftforge.items.IItemHandler;\n+\n import org.jetbrains.annotations.NotNull;\n import org.jetbrains.annotations.Nullable;\n \n import java.util.*;\n import java.util.function.Predicate;\n+import java.util.function.Supplier;\n import java.util.stream.Collectors;\n import java.util.stream.IntStream;\n \n@@ -2847,4 +2853,121 @@ public static boolean transferFoodUpToSaturation(\n         return foundSaturation > 0;\n     }\n \n+    /**\n+     * Tries to put given itemstack in hotbar and select it, fails when player inventory is full, successes otherwise.\n+     *\n+     * @param itemStack   itemstack to put into player's inv\n+     * @param player player entity\n+     * @return true if item was put into player's inv, false if dropped\n+     */\n+    public static boolean putItemToHotbarAndSelectOrDrop(final ItemStack itemStack, final PlayerEntity player)\n+    {\n+        final PlayerInventory playerInv = player.inventory;\n+\n+        final int emptySlot = playerInv.getFirstEmptyStack();\n+        if (emptySlot == -1) // try full inv first\n+        {\n+            player.dropItem(itemStack, false);\n+            return false;\n+        }\n+        else\n+        {\n+            final int hotbarSlot = playerInv.getBestHotbarSlot();\n+            final ItemStack curHotbarItem = playerInv.getStackInSlot(hotbarSlot);\n+\n+            // check if we need to make space first\n+            if (!curHotbarItem.isEmpty())\n+            {\n+                playerInv.setInventorySlotContents(emptySlot, curHotbarItem);\n+            }\n+\n+            playerInv.setInventorySlotContents(hotbarSlot, itemStack);\n+            playerInv.currentItem = hotbarSlot;\n+            playerInv.markDirty();\n+            updateHeldItemFromServer(player);\n+            return true;\n+        }\n+    }\n+\n+    /**\n+     * Tries to put given itemstack in hotbar, fails when player inventory is full, successes otherwise.\n+     * If fails sends a message to player about dropped item.\n+     *\n+     * @param itemStack   itemstack to put into player's inv\n+     * @param player player entity\n+     * @return true if item was put into player's inv, false if dropped\n+     */\n+    public static boolean putItemToHotbarAndSelectOrDropMessage(final ItemStack itemStack, final PlayerEntity player)\n+    {\n+        final boolean result = putItemToHotbarAndSelectOrDrop(itemStack, player);\n+\n+        if (!result)\n+        {\n+            player.sendMessage(itemStack.getDisplayName()\n+                .deepCopy()\n+                .append(new TranslationTextComponent(\"com.minecolonies.coremod.playerinvfull.hotbarinsert\")), player.getUniqueID());\n+        }\n+        return result;\n+    }\n+\n+    /**\n+     * If item is already in inventory then it's moved to hotbar and returned.\n+     * Else {@link #putItemToHotbarAndSelectOrDrop} is called with itemstack created from given factory.\n+     *\n+     * @param item             item to search for\n+     * @param player           player inventory to check and use\n+     * @param itemStackFactory factory for new item if not found\n+     * @param messageOnDrop    if true message player when new item was dropped\n+     * @return itemstack in hotbar or dropped in front of player\n+     */\n+    public static ItemStack getOrCreateItemAndPutToHotbarAndSelectOrDrop(final Item item,\n+        final PlayerEntity player,\n+        final Supplier<ItemStack> itemStackFactory,\n+        final boolean messageOnDrop)\n+    {\n+        final PlayerInventory playerInv = player.inventory;\n+\n+        for (int slot = 0; slot < playerInv.mainInventory.size(); slot++)\n+        {\n+            final ItemStack itemSlot = playerInv.getStackInSlot(slot);\n+            if (itemSlot.getItem() == item)\n+            {\n+                if (!PlayerInventory.isHotbar(slot))\n+                {\n+                    playerInv.pickItem(slot);\n+                }\n+                else\n+                {\n+                    playerInv.currentItem = slot;\n+                }\n+                playerInv.markDirty();\n+                updateHeldItemFromServer(player);\n+                return itemSlot;\n+            }\n+        }\n+\n+        final ItemStack newItem = itemStackFactory.get();\n+        if (messageOnDrop)\n+        {\n+            putItemToHotbarAndSelectOrDropMessage(newItem, player);\n+        }\n+        else\n+        {\n+            putItemToHotbarAndSelectOrDrop(newItem, player);\n+        }\n+        return newItem;\n+    }\n+\n+    /**\n+     * Updates held item slot on client. Client autoupdates server once per tick.\n+     *\n+     * @param player player to sync\n+     */\n+    private static void updateHeldItemFromServer(final PlayerEntity player)\n+    {\n+        if (player instanceof ServerPlayerEntity)\n+        {\n+            ((ServerPlayerEntity) player).server.getPlayerList().sendInventory((ServerPlayerEntity) player);\n+        }\n+    }\n }"
  },
  {
    "sha": "2be9b3ea6f035f598518ae5cb4fc218c644bb83b",
    "filename": "src/main/java/com/minecolonies/coremod/client/gui/WindowHireWorker.java",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/ldtteam/minecolonies/blob/888a90a816d316d8444dab7933bbc12525d2c772/src/main/java/com/minecolonies/coremod/client/gui/WindowHireWorker.java",
    "raw_url": "https://github.com/ldtteam/minecolonies/raw/888a90a816d316d8444dab7933bbc12525d2c772/src/main/java/com/minecolonies/coremod/client/gui/WindowHireWorker.java",
    "contents_url": "https://api.github.com/repos/ldtteam/minecolonies/contents/src/main/java/com/minecolonies/coremod/client/gui/WindowHireWorker.java?ref=888a90a816d316d8444dab7933bbc12525d2c772",
    "patch": "@@ -289,6 +289,7 @@ else if ((building.getWorkerId().size() >= building.getMaxInhabitants()) && !bui\n                 final TextBuilder textBuilder = PaneBuilders.textBuilder();\n                 int skillCount = citizen.getCitizenSkillHandler().getSkills().entrySet().size();\n \n+                textBuilder.append(new StringTextComponent(\"\"));\n                 for (final Map.Entry<Skill, Tuple<Integer, Double>> entry : citizen.getCitizenSkillHandler().getSkills().entrySet())\n                 {\n                     final String skillName = entry.getKey().name().toLowerCase(Locale.US);"
  },
  {
    "sha": "cd63baf940453d582f893ef159bc6c5889b6a3c1",
    "filename": "src/main/java/com/minecolonies/coremod/client/gui/WindowHutLumberjack.java",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/ldtteam/minecolonies/blob/888a90a816d316d8444dab7933bbc12525d2c772/src/main/java/com/minecolonies/coremod/client/gui/WindowHutLumberjack.java",
    "raw_url": "https://github.com/ldtteam/minecolonies/raw/888a90a816d316d8444dab7933bbc12525d2c772/src/main/java/com/minecolonies/coremod/client/gui/WindowHutLumberjack.java",
    "contents_url": "https://api.github.com/repos/ldtteam/minecolonies/contents/src/main/java/com/minecolonies/coremod/client/gui/WindowHutLumberjack.java?ref=888a90a816d316d8444dab7933bbc12525d2c772",
    "patch": "@@ -85,6 +85,7 @@ public WindowHutLumberjack(final BuildingLumberjack.View building)\n     private void giveTool()\n     {\n         givePlayerScepter();\n+        close();\n     }\n \n     /**"
  },
  {
    "sha": "eac3f6f2b8c48d6ee92f1603b37d7b8ddfc1adea",
    "filename": "src/main/java/com/minecolonies/coremod/colony/jobs/JobLumberjack.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/ldtteam/minecolonies/blob/888a90a816d316d8444dab7933bbc12525d2c772/src/main/java/com/minecolonies/coremod/colony/jobs/JobLumberjack.java",
    "raw_url": "https://github.com/ldtteam/minecolonies/raw/888a90a816d316d8444dab7933bbc12525d2c772/src/main/java/com/minecolonies/coremod/colony/jobs/JobLumberjack.java",
    "contents_url": "https://api.github.com/repos/ldtteam/minecolonies/contents/src/main/java/com/minecolonies/coremod/colony/jobs/JobLumberjack.java?ref=888a90a816d316d8444dab7933bbc12525d2c772",
    "patch": "@@ -82,7 +82,7 @@ public BipedModelType getModel()\n     public void deserializeNBT(final CompoundNBT compound)\n     {\n         super.deserializeNBT(compound);\n-        if (compound.keySet().contains(TAG_TREE))\n+        if (compound.contains(TAG_TREE))\n         {\n             tree = Tree.read(compound.getCompound(TAG_TREE));\n             if (!tree.isTree())"
  },
  {
    "sha": "127808b631e5db54ea32f967760724b3680a1a1f",
    "filename": "src/main/java/com/minecolonies/coremod/entity/ai/basic/AbstractEntityAIBasic.java",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/ldtteam/minecolonies/blob/888a90a816d316d8444dab7933bbc12525d2c772/src/main/java/com/minecolonies/coremod/entity/ai/basic/AbstractEntityAIBasic.java",
    "raw_url": "https://github.com/ldtteam/minecolonies/raw/888a90a816d316d8444dab7933bbc12525d2c772/src/main/java/com/minecolonies/coremod/entity/ai/basic/AbstractEntityAIBasic.java",
    "contents_url": "https://api.github.com/repos/ldtteam/minecolonies/contents/src/main/java/com/minecolonies/coremod/entity/ai/basic/AbstractEntityAIBasic.java?ref=888a90a816d316d8444dab7933bbc12525d2c772",
    "patch": "@@ -45,6 +45,7 @@\n import net.minecraft.util.math.BlockPos;\n import net.minecraft.util.text.TranslationTextComponent;\n import net.minecraftforge.common.capabilities.ICapabilityProvider;\n+import net.minecraftforge.fml.loading.FMLEnvironment;\n import net.minecraftforge.items.CapabilityItemHandler;\n import net.minecraftforge.items.IItemHandler;\n import org.jetbrains.annotations.NotNull;\n@@ -328,7 +329,7 @@ protected void onException(final RuntimeException e)\n         try\n         {\n             final int timeout = EXCEPTION_TIMEOUT * exceptionTimer;\n-            this.setDelay(timeout);\n+            this.setDelay(FMLEnvironment.production ? timeout : EXCEPTION_TIMEOUT);\n             // wait for longer now\n             exceptionTimer *= 2;\n             if (worker != null)"
  },
  {
    "sha": "569726211d4a2ed44a3449326cbcc79fef1bb8c9",
    "filename": "src/main/java/com/minecolonies/coremod/entity/ai/citizen/lumberjack/EntityAIWorkLumberjack.java",
    "status": "modified",
    "additions": 54,
    "deletions": 39,
    "changes": 93,
    "blob_url": "https://github.com/ldtteam/minecolonies/blob/888a90a816d316d8444dab7933bbc12525d2c772/src/main/java/com/minecolonies/coremod/entity/ai/citizen/lumberjack/EntityAIWorkLumberjack.java",
    "raw_url": "https://github.com/ldtteam/minecolonies/raw/888a90a816d316d8444dab7933bbc12525d2c772/src/main/java/com/minecolonies/coremod/entity/ai/citizen/lumberjack/EntityAIWorkLumberjack.java",
    "contents_url": "https://api.github.com/repos/ldtteam/minecolonies/contents/src/main/java/com/minecolonies/coremod/entity/ai/citizen/lumberjack/EntityAIWorkLumberjack.java?ref=888a90a816d316d8444dab7933bbc12525d2c772",
    "patch": "@@ -1,6 +1,5 @@\n package com.minecolonies.coremod.entity.ai.citizen.lumberjack;\n \n-import com.minecolonies.api.colony.buildings.IBuilding;\n import com.minecolonies.api.compatibility.Compatibility;\n import com.minecolonies.api.crafting.ItemStorage;\n import com.minecolonies.api.entity.ai.statemachine.AITarget;\n@@ -104,7 +103,7 @@\n     /**\n      * Time in ticks to wait before rechecking if there are trees in the range of the lumberjack.\n      */\n-    private static final int WAIT_BEFORE_SEARCH = 100;\n+    private static final int WAIT_BEFORE_SEARCH = 400;\n \n     /**\n      * Time in ticks before incrementing the search radius.\n@@ -161,7 +160,7 @@\n     /**\n      * The current path to the tree\n      */\n-    private PathResult pathToTree;\n+    private PathResult<?> pathToTree;\n \n     @Override\n     protected int getActionRewardForCraftingSuccess()\n@@ -208,6 +207,7 @@ protected IAIState decide()\n         if (checkIfStuck())\n         {\n             tryUnstuck();\n+            return getState();\n         }\n \n         if (walkToBuilding())\n@@ -275,7 +275,7 @@ private IAIState startWorkingAtOwnBuilding()\n      */\n     private IAIState prepareForWoodcutting()\n     {\n-        if (checkForToolOrWeapon(ToolType.AXE))\n+        if (checkForToolOrWeapon(ToolType.AXE) || checkForToolOrWeapon(ToolType.HOE))\n         {\n             // Reset everything, maybe there are new crafting requests\n             return START_WORKING;\n@@ -290,6 +290,8 @@ private IAIState prepareForWoodcutting()\n      */\n     private IAIState waitBeforeCheckingAgain()\n     {\n+        pathResult = null;\n+\n         if (hasNotDelayed(WAIT_BEFORE_SEARCH))\n         {\n             return getState();\n@@ -324,60 +326,60 @@ private IAIState findTrees()\n      */\n     private IAIState findTree()\n     {\n-        final IBuilding building = getOwnBuilding();\n+        final BuildingLumberjack building = getOwnBuilding();\n         worker.getCitizenData().setVisibleStatus(SEARCH);\n \n-        if (pathResult == null || pathResult.treeLocation == null)\n+        if (pathResult != null && pathResult.isComputing())\n         {\n-\n-            final BuildingLumberjack buildingLumberjack = (BuildingLumberjack) building;\n-            final Map<String, List<ItemStorage>> copy = buildingLumberjack.getCopyOfAllowedItems();\n-            if (buildingLumberjack.shouldRestrict())\n+            return getState();\n+        }\n+        if (pathResult == null)\n+        {\n+            final Map<String, List<ItemStorage>> copy = building.getCopyOfAllowedItems();\n+            if (building.shouldRestrict())\n             {\n-                final BlockPos startPos = buildingLumberjack.getStartRestriction();\n-                final BlockPos endPos = buildingLumberjack.getEndRestriction();\n-\n-                pathResult = worker.getNavigator().moveToTree(\n-                  startPos, endPos,\n-                  1.0D,\n-                  copy.getOrDefault(SAPLINGS_LIST, Collections.emptyList()),\n-                  worker.getCitizenColonyHandler().getColony()\n-                );\n+                final BlockPos startPos = building.getStartRestriction();\n+                final BlockPos endPos = building.getEndRestriction();\n+\n+                pathResult = worker.getNavigator()\n+                    .moveToTree(startPos,\n+                        endPos,\n+                        1.0D,\n+                        copy.getOrDefault(SAPLINGS_LIST, Collections.emptyList()),\n+                        worker.getCitizenColonyHandler().getColony());\n             }\n             else\n             {\n                 pathResult = worker.getNavigator()\n-                               .moveToTree(SEARCH_RANGE + searchIncrement,\n-                                 1.0D,\n-                                 copy.getOrDefault(SAPLINGS_LIST, Collections.emptyList()),\n-                                 worker.getCitizenColonyHandler().getColony());\n+                    .moveToTree(SEARCH_RANGE + searchIncrement,\n+                        1.0D,\n+                        copy.getOrDefault(SAPLINGS_LIST, Collections.emptyList()),\n+                        worker.getCitizenColonyHandler().getColony());\n             }\n+            return getState();\n         }\n         if (pathResult.isPathReachingDestination())\n         {\n-            return setNewTree();\n-        }\n-        if (pathResult.isCancelled())\n-        {\n-            pathResult = null;\n-            setDelay(TICKS_SECOND * GATHERING_DELAY);\n-            return LUMBERJACK_GATHERING;\n+            return setNewTree(building);\n         }\n \n         // None of the above yielded a result, report no trees found.\n         return LUMBERJACK_NO_TREES_FOUND;\n     }\n \n-    private IAIState setNewTree()\n+    private IAIState setNewTree(final BuildingLumberjack building)\n     {\n         if (pathResult.treeLocation == null)\n         {\n-            setDelay(WAIT_BEFORE_INCREMENT);\n-            if (searchIncrement + SEARCH_RANGE > SEARCH_LIMIT)\n+            if (!building.shouldRestrict() && searchIncrement + SEARCH_RANGE <= SEARCH_LIMIT)\n+            {\n+                searchIncrement += SEARCH_INCREMENT;\n+                setDelay(WAIT_BEFORE_INCREMENT);\n+            }\n+            else\n             {\n                 return LUMBERJACK_NO_TREES_FOUND;\n             }\n-            searchIncrement += SEARCH_INCREMENT;\n         }\n         else\n         {\n@@ -642,16 +644,29 @@ private void tryUnstuck()\n             {\n                 // Unstuck with path\n                 final List<BlockPos> checkPositions = new ArrayList<>();\n-                final PathPoint next = path.getPathPointFromIndex(path.getCurrentPathIndex());\n+                PathPoint next = path.getPathPointFromIndex(Math.min(path.getCurrentPathIndex() + 1, path.getCurrentPathLength() - 1));\n \n                 // Blocks in front of the worker\n-                for (int i = 0; i <= 2; i++)\n+                for (int i = 0; i < 2; i++)\n                 {\n                     checkPositions.add(new BlockPos(next.x, next.y + i, next.z));\n                 }\n-\n-                // Block above the worker\n-                checkPositions.add(new BlockPos(worker.getPosition().getX(), worker.getPosition().getY() + 2, worker.getPosition().getZ()));\n+                if (next.previous != null)\n+                {\n+                    next = next.previous;\n+                    for (int i = 0; i < 2; i++)\n+                    {\n+                        checkPositions.add(new BlockPos(next.x, next.y + i, next.z));\n+                    }\n+                    if (next.previous != null)\n+                    {\n+                        next = next.previous;\n+                        for (int i = 0; i < 2; i++)\n+                        {\n+                            checkPositions.add(new BlockPos(next.x, next.y + i, next.z));\n+                        }\n+                    }\n+                }\n \n                 mineIfEqualsBlockTag(checkPositions, BlockTags.LEAVES);\n                 return;"
  },
  {
    "sha": "c59425afe55ef645b2957834c7b62679736cab44",
    "filename": "src/main/java/com/minecolonies/coremod/entity/ai/citizen/lumberjack/Tree.java",
    "status": "modified",
    "additions": 6,
    "deletions": 12,
    "changes": 18,
    "blob_url": "https://github.com/ldtteam/minecolonies/blob/888a90a816d316d8444dab7933bbc12525d2c772/src/main/java/com/minecolonies/coremod/entity/ai/citizen/lumberjack/Tree.java",
    "raw_url": "https://github.com/ldtteam/minecolonies/raw/888a90a816d316d8444dab7933bbc12525d2c772/src/main/java/com/minecolonies/coremod/entity/ai/citizen/lumberjack/Tree.java",
    "contents_url": "https://api.github.com/repos/ldtteam/minecolonies/contents/src/main/java/com/minecolonies/coremod/entity/ai/citizen/lumberjack/Tree.java?ref=888a90a816d316d8444dab7933bbc12525d2c772",
    "patch": "@@ -61,11 +61,6 @@\n      */\n     private static final int LEAVES_WIDTH = 4;\n \n-    /**\n-     * Max size a tree should have.\n-     */\n-    private static final int MAX_TREE_SIZE = 256;\n-\n     /**\n      * A lot of luck to get a guaranteed saplings drop.\n      */\n@@ -156,11 +151,10 @@ public Tree(@NotNull final World world, @NotNull final BlockPos log)\n \n             checkTree(world, topLog);\n \n-            final Block bottomBlock = world.getBlockState(location).getBlock();\n-            dynamicTree = Compatibility.isDynamicBlock(bottomBlock);\n+            dynamicTree = Compatibility.isDynamicBlock(block);\n             stumpLocations = new ArrayList<>();\n             woodBlocks.clear();\n-            slimeTree = Compatibility.isSlimeBlock(bottomBlock);\n+            slimeTree = Compatibility.isSlimeBlock(block);\n             sapling = calcSapling(world);\n             if (sapling.getItem().isIn(fungi))\n             {\n@@ -395,7 +389,7 @@ public static boolean checkTree(@NotNull final IWorldReader world, final BlockPo\n         BlockPos bottom = bottomLog == null ? log : bottomLog;\n         BlockPos top = topLog == null ? log : topLog;\n \n-        if (woodenBlocks.size() >= MAX_TREE_SIZE)\n+        if (woodenBlocks.size() >= MineColonies.getConfig().getServer().maxTreeSize.get())\n         {\n             return new Tuple<>(bottom, top);\n         }\n@@ -453,7 +447,7 @@ private static boolean hasEnoughLeavesAndIsSupposedToCut(@NotNull final IWorldRe\n         {\n             for (int dz = -1; dz <= 1; dz++)\n             {\n-                for (int dy = -1; dy <= 1 + dynamicBonusY; dy++)\n+                for (int dy = -3; dy <= 1 + dynamicBonusY; dy++)\n                 {\n                     final BlockPos leafPos = pos.add(dx, dy, dz);\n                     if (world.getBlockState(leafPos).getMaterial().equals(Material.LEAVES) || BlockTags.WART_BLOCKS.contains(world.getBlockState(leafPos).getBlock()))\n@@ -638,7 +632,7 @@ public void fillTreeStumps(final int yLevel)\n      */\n     private void addAndSearch(@NotNull final World world, @NotNull final BlockPos log)\n     {\n-        if (woodBlocks.size() >= MAX_TREE_SIZE)\n+        if (woodBlocks.size() >= MineColonies.getConfig().getServer().maxTreeSize.get())\n         {\n             return;\n         }\n@@ -711,7 +705,7 @@ private void addAndSearch(@NotNull final World world)\n         }\n         for (int locX = locXMin; locX <= locXMax; locX++)\n         {\n-            for (int locY = locYMin; locY <= MAX_TREE_SIZE; locY++)\n+            for (int locY = locYMin; !world.isYOutOfBounds(locY); locY++)\n             {\n                 for (int locZ = locZMin; locZ <= locZMax; locZ++)\n                 {"
  },
  {
    "sha": "875134ead311fb2a8e7e95ffadde663739e75f58",
    "filename": "src/main/java/com/minecolonies/coremod/entity/citizen/citizenhandlers/CitizenSkillHandler.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/ldtteam/minecolonies/blob/888a90a816d316d8444dab7933bbc12525d2c772/src/main/java/com/minecolonies/coremod/entity/citizen/citizenhandlers/CitizenSkillHandler.java",
    "raw_url": "https://github.com/ldtteam/minecolonies/raw/888a90a816d316d8444dab7933bbc12525d2c772/src/main/java/com/minecolonies/coremod/entity/citizen/citizenhandlers/CitizenSkillHandler.java",
    "contents_url": "https://api.github.com/repos/ldtteam/minecolonies/contents/src/main/java/com/minecolonies/coremod/entity/citizen/citizenhandlers/CitizenSkillHandler.java?ref=888a90a816d316d8444dab7933bbc12525d2c772",
    "patch": "@@ -18,9 +18,9 @@\n import net.minecraftforge.common.util.Constants;\n import org.jetbrains.annotations.NotNull;\n \n-import java.util.HashMap;\n import java.util.Map;\n import java.util.Random;\n+import java.util.TreeMap;\n \n import static com.minecolonies.api.util.constant.CitizenConstants.MAX_CITIZEN_LEVEL;\n import static com.minecolonies.api.util.constant.NbtTagConstants.*;\n@@ -48,7 +48,7 @@\n     /**\n      * Skill map.\n      */\n-    public Map<Skill, Tuple<Integer, Double>> skillMap = new HashMap<>();\n+    public Map<Skill, Tuple<Integer, Double>> skillMap = new TreeMap<>((s1, s2) -> s1.toString().compareTo(s2.toString()));\n \n     @Override\n     public void init(final int levelCap)"
  },
  {
    "sha": "eac7265f45731b03201495942c79394f183d604c",
    "filename": "src/main/java/com/minecolonies/coremod/entity/pathfinding/MinecoloniesAdvancedPathNavigate.java",
    "status": "modified",
    "additions": 4,
    "deletions": 1,
    "changes": 5,
    "blob_url": "https://github.com/ldtteam/minecolonies/blob/888a90a816d316d8444dab7933bbc12525d2c772/src/main/java/com/minecolonies/coremod/entity/pathfinding/MinecoloniesAdvancedPathNavigate.java",
    "raw_url": "https://github.com/ldtteam/minecolonies/raw/888a90a816d316d8444dab7933bbc12525d2c772/src/main/java/com/minecolonies/coremod/entity/pathfinding/MinecoloniesAdvancedPathNavigate.java",
    "contents_url": "https://api.github.com/repos/ldtteam/minecolonies/contents/src/main/java/com/minecolonies/coremod/entity/pathfinding/MinecoloniesAdvancedPathNavigate.java?ref=888a90a816d316d8444dab7933bbc12525d2c772",
    "patch": "@@ -888,8 +888,11 @@ public TreePathResult moveToTree(final BlockPos startRestriction, final BlockPos\n         @NotNull final BlockPos start = AbstractPathJob.prepareStart(ourEntity);\n         final BlockPos buildingPos = ((AbstractEntityCitizen) entity).getCitizenColonyHandler().getWorkBuilding().getPosition();\n \n+        final BlockPos furthestRestriction = BlockPosUtil.getRandomPosInBoxPlane(BlockPosUtil\n+            .getBoxFurthestPlane(buildingPos, startRestriction, endRestriction, true), startRestriction, endRestriction);\n+\n         final PathJobFindTree job =\n-          new PathJobFindTree(CompatibilityUtils.getWorldFromEntity(entity), start, buildingPos, startRestriction, endRestriction, treesToCut, colony, ourEntity);\n+          new PathJobFindTree(CompatibilityUtils.getWorldFromEntity(entity), start, buildingPos, startRestriction, endRestriction, furthestRestriction, treesToCut, colony, ourEntity);\n \n         return (TreePathResult) setPathJob(job, null, speed);\n     }"
  },
  {
    "sha": "b11427d440c01f8bf1391ec0f873e1648f442473",
    "filename": "src/main/java/com/minecolonies/coremod/entity/pathfinding/pathjobs/AbstractPathJob.java",
    "status": "modified",
    "additions": 113,
    "deletions": 53,
    "changes": 166,
    "blob_url": "https://github.com/ldtteam/minecolonies/blob/888a90a816d316d8444dab7933bbc12525d2c772/src/main/java/com/minecolonies/coremod/entity/pathfinding/pathjobs/AbstractPathJob.java",
    "raw_url": "https://github.com/ldtteam/minecolonies/raw/888a90a816d316d8444dab7933bbc12525d2c772/src/main/java/com/minecolonies/coremod/entity/pathfinding/pathjobs/AbstractPathJob.java",
    "contents_url": "https://api.github.com/repos/ldtteam/minecolonies/contents/src/main/java/com/minecolonies/coremod/entity/pathfinding/pathjobs/AbstractPathJob.java?ref=888a90a816d316d8444dab7933bbc12525d2c772",
    "patch": "@@ -30,6 +30,7 @@\n import net.minecraft.util.math.BlockPos;\n import net.minecraft.util.math.MathHelper;\n import net.minecraft.util.math.shapes.VoxelShape;\n+import net.minecraft.util.math.vector.Vector3i;\n import net.minecraft.world.IWorldReader;\n import net.minecraft.world.World;\n import org.jetbrains.annotations.NotNull;\n@@ -51,7 +52,7 @@\n     @Nullable\n     public static Set<Node> lastDebugNodesNotVisited;\n     @Nullable\n-    public static Set<Node>          lastDebugNodesPath;\n+    public static Set<Node> lastDebugNodesPath;\n \n     /**\n      * Start position to path from.\n@@ -94,14 +95,19 @@\n     @Nullable\n     protected        Set<Node>          debugNodesPath       = null;\n     //  May be faster, but can produce strange results\n-    private          boolean            allowJumpPointSearchTypeWalk;\n+    private final    boolean            allowJumpPointSearchTypeWalk;\n     private          int                totalNodesAdded      = 0;\n     private          int                totalNodesVisited    = 0;\n \n     /**\n-     * Are there hard xz restrictions.\n+     * Are there xz restrictions.\n      */\n-    private boolean xzRestricted = false;\n+    private final boolean xzRestricted;\n+\n+    /**\n+     * Are xz restrictions hard or soft.\n+     */\n+    private final boolean hardXzRestriction;\n \n     /**\n      * The cost values for certain nodes.\n@@ -153,6 +159,9 @@ public AbstractPathJob(final World world, @NotNull final BlockPos start, @NotNul\n         final int maxX = Math.max(start.getX(), end.getX()) + (range / 2);\n         final int maxZ = Math.max(start.getZ(), end.getZ()) + (range / 2);\n \n+        this.xzRestricted = false;\n+        this.hardXzRestriction = false;\n+\n         this.world = new ChunkCache(world, new BlockPos(minX, MIN_Y, minZ), new BlockPos(maxX, MAX_Y, maxZ), range);\n \n         this.start = new BlockPos(start);\n@@ -176,32 +185,71 @@ public AbstractPathJob(final World world, @NotNull final BlockPos start, @NotNul\n      * AbstractPathJob constructor.\n      *\n      * @param world            the world within which to path.\n+     * @param start            the start position from which to path from.\n      * @param startRestriction start of restricted area.\n      * @param endRestriction   end of restricted area.\n+     * @param range            range^2 is used as cap for visited node count\n+     * @param hardRestriction  if <code>true</code> start has to be inside the restricted area (otherwise the search immidiately finishes) -\n+     *                         node visits outside the area are not allowed, isAtDestination is called on every node, if <code>false</code>\n+     *                         restricted area only applies to calling isAtDestination thus searching outside area is allowed\n      * @param result           path result.\n      * @param entity           the entity.\n-     * @see AbstractPathJob#AbstractPathJob(World, BlockPos, BlockPos, int, LivingEntity)\n      */\n-    public AbstractPathJob(final World world, final BlockPos startRestriction, final BlockPos endRestriction, final PathResult result, final LivingEntity entity)\n+    public AbstractPathJob(final World world,\n+        final BlockPos start,\n+        final BlockPos startRestriction,\n+        final BlockPos endRestriction,\n+        final int range,\n+        final boolean hardRestriction,\n+        final PathResult<AbstractPathJob> result,\n+        final LivingEntity entity)\n     {\n-        this.minX = Math.min(startRestriction.getX(), endRestriction.getX());\n-        this.minZ = Math.min(startRestriction.getZ(), endRestriction.getZ());\n-        this.maxX = Math.max(startRestriction.getX(), endRestriction.getX());\n-        this.maxZ = Math.max(startRestriction.getZ(), endRestriction.getZ());\n-\n-        xzRestricted = true;\n+        this(world, start, startRestriction, endRestriction, range, Vector3i.NULL_VECTOR, hardRestriction, result, entity);\n+    }\n \n+    /**\n+     * AbstractPathJob constructor.\n+     *\n+     * @param world            the world within which to path.\n+     * @param start            the start position from which to path from.\n+     * @param startRestriction start of restricted area.\n+     * @param endRestriction   end of restricted area.\n+     * @param range            range^2 is used as cap for visited node count\n+     * @param grow             adjustment for restricted area, can be either shrink or grow, is applied in both of xz directions after\n+     *                         getting min/max box values\n+     * @param hardRestriction  if <code>true</code> start has to be inside the restricted area (otherwise the search immidiately finishes) -\n+     *                         node visits outside the area are not allowed, isAtDestination is called on every node, if <code>false</code>\n+     *                         restricted area only applies to calling isAtDestination thus searching outside area is allowed\n+     * @param result           path result.\n+     * @param entity           the entity.\n+     */\n+    public AbstractPathJob(final World world,\n+        final BlockPos start,\n+        final BlockPos startRestriction,\n+        final BlockPos endRestriction,\n+        final int range,\n+        final Vector3i grow,\n+        final boolean hardRestriction,\n+        final PathResult<AbstractPathJob> result,\n+        final LivingEntity entity)\n+    {\n+        this.minX = Math.min(startRestriction.getX(), endRestriction.getX()) - grow.getX();\n+        this.minZ = Math.min(startRestriction.getZ(), endRestriction.getZ()) - grow.getZ();\n+        this.maxX = Math.max(startRestriction.getX(), endRestriction.getX()) + grow.getX();\n+        this.maxZ = Math.max(startRestriction.getZ(), endRestriction.getZ()) + grow.getZ();\n \n-        final int range = (int) Math.sqrt(Math.pow(maxX - minX, 2) + Math.pow(maxZ - minZ, 2)) * 2;\n+        this.xzRestricted = true;\n+        this.hardXzRestriction = hardRestriction;\n \n         this.world = new ChunkCache(world, new BlockPos(minX, MIN_Y, minZ), new BlockPos(maxX, MAX_Y, maxZ), range);\n \n-        this.start = startRestriction;\n+        this.start = start;\n         this.maxRange = range;\n \n         this.result = result;\n+        result.setJob(this);\n \n-        allowJumpPointSearchTypeWalk = false;\n+        this.allowJumpPointSearchTypeWalk = false;\n \n         if (MinecoloniesAPIProxy.getInstance().getConfig().getClient().pathfindingDebugDraw.get()) // this is automatically false when on server\n         {\n@@ -493,7 +541,11 @@ protected Path search()\n             handleDebugOptions(currentNode);\n             currentNode.setClosed();\n \n-            if (isAtDestination(currentNode))\n+            final boolean isInRestrictedArea = currentNode.pos.getX() >= minX && currentNode.pos.getX() <= maxX\n+                && currentNode.pos.getZ() >= minZ && currentNode.pos.getZ() <= maxZ;\n+            final boolean isPositionOk = !xzRestricted || isInRestrictedArea;\n+\n+            if (isPositionOk && isAtDestination(currentNode))\n             {\n                 bestNode = currentNode;\n                 result.setPathReachesDestination(true);\n@@ -503,16 +555,17 @@ protected Path search()\n             //  If this is the closest node to our destination, treat it as our best node\n             final double nodeResultScore =\n               getNodeResultScore(currentNode);\n-            if (nodeResultScore < bestNodeResultScore && !currentNode.isCornerNode()\n+            if (isPositionOk && nodeResultScore < bestNodeResultScore && !currentNode.isCornerNode()\n                   && isWalkableSurface(world.getBlockState(currentNode.pos.down()), currentNode.pos.down()) == SurfaceType.WALKABLE)\n             {\n                 bestNode = currentNode;\n                 bestNodeResultScore = nodeResultScore;\n             }\n \n-            if (!xzRestricted || (currentNode.pos.getX() >= minX && currentNode.pos.getX() <= maxX && currentNode.pos.getZ() >= minZ && currentNode.pos.getZ() <= maxZ))\n+            // if xz soft-restricted we can walk outside the restricted area to be able to find ways around back to the area\n+            if (!hardXzRestriction || isPositionOk)\n             {\n-                walkCurrentNode(currentNode);\n+                walkCurrentNode(currentNode, isInRestrictedArea);\n             }\n         }\n \n@@ -549,7 +602,7 @@ private void addPathNodeToDebug(final Node node)\n         debugNodesPath.add(node);\n     }\n \n-    private void walkCurrentNode(@NotNull final Node currentNode)\n+    private void walkCurrentNode(@NotNull final Node currentNode, final boolean isInRestrictedArea)\n     {\n         BlockPos dPos = BLOCKPOS_IDENTITY;\n         if (currentNode.parent != null)\n@@ -560,50 +613,50 @@ private void walkCurrentNode(@NotNull final Node currentNode)\n         //  On a ladder, we can go 1 straight-up\n         if (onLadderGoingUp(currentNode, dPos))\n         {\n-            walk(currentNode, BLOCKPOS_UP);\n+            walk(currentNode, BLOCKPOS_UP, isInRestrictedArea);\n         }\n \n         //  We can also go down 1, if the lower block is a ladder\n         if (onLadderGoingDown(currentNode, dPos))\n         {\n-            walk(currentNode, BLOCKPOS_DOWN);\n+            walk(currentNode, BLOCKPOS_DOWN, isInRestrictedArea);\n         }\n \n         // Only explore downwards when dropping\n         if ((currentNode.parent == null || !currentNode.parent.pos.equals(currentNode.pos.down())) && currentNode.isCornerNode())\n         {\n-            walk(currentNode, BLOCKPOS_DOWN);\n+            walk(currentNode, BLOCKPOS_DOWN, isInRestrictedArea);\n             return;\n         }\n \n         // Walk downwards node if passable\n-        if (isPassable(currentNode.pos.down(), false))\n+        if (isPassable(currentNode.pos.down(), false, isInRestrictedArea))\n         {\n-            walk(currentNode, BLOCKPOS_DOWN);\n+            walk(currentNode, BLOCKPOS_DOWN, isInRestrictedArea);\n         }\n \n         // N\n         if (dPos.getZ() <= 0)\n         {\n-            walk(currentNode, BLOCKPOS_NORTH);\n+            walk(currentNode, BLOCKPOS_NORTH, isInRestrictedArea);\n         }\n \n         // E\n         if (dPos.getX() >= 0)\n         {\n-            walk(currentNode, BLOCKPOS_EAST);\n+            walk(currentNode, BLOCKPOS_EAST, isInRestrictedArea);\n         }\n \n         // S\n         if (dPos.getZ() >= 0)\n         {\n-            walk(currentNode, BLOCKPOS_SOUTH);\n+            walk(currentNode, BLOCKPOS_SOUTH, isInRestrictedArea);\n         }\n \n         // W\n         if (dPos.getX() <= 0)\n         {\n-            walk(currentNode, BLOCKPOS_WEST);\n+            walk(currentNode, BLOCKPOS_WEST, isInRestrictedArea);\n         }\n     }\n \n@@ -679,6 +732,7 @@ private Path finalizePath(final Node targetNode)\n         points[0] = new PathPointExtended(node.pos);\n \n         @Nullable Node nextInPath = null;\n+        @Nullable PathPoint next = null;\n         node = targetNode;\n         while (node.parent != null)\n         {\n@@ -731,6 +785,11 @@ else if (onALadder(node.parent, node.parent, pos))\n                 p.setOnLadder(true);\n             }\n \n+            if (next != null)\n+            {\n+                next.previous = p;\n+            }\n+            next = p;\n             points[pathLength] = p;\n \n             nextInPath = node;\n@@ -809,12 +868,12 @@ private void doDebugPrinting(@NotNull final PathPoint[] points)\n      * @param dPos   Delta from parent, expected in range of [-1..1].\n      * @return true if a node was added or updated when attempting to move in the given direction.\n      */\n-    protected final boolean walk(@NotNull final Node parent, @NotNull BlockPos dPos)\n+    protected final boolean walk(@NotNull final Node parent, @NotNull BlockPos dPos, final boolean isInRestrictedArea)\n     {\n         BlockPos pos = parent.pos.add(dPos);\n \n         //  Can we traverse into this node?  Fix the y up\n-        final int newY = getGroundHeight(parent, pos);\n+        final int newY = getGroundHeight(parent, pos, isInRestrictedArea);\n \n         if (newY < 0)\n         {\n@@ -888,16 +947,16 @@ else if (updateCurrentNode(parent, node, heuristic, cost, score))\n         //  Jump Point Search-ish optimization:\n         // If this node was a (heuristic-based) improvement on our parent,\n         // lets go another step in the same direction...\n-        performJumpPointSearch(parent, dPos, node);\n+        performJumpPointSearch(parent, dPos, node, isInRestrictedArea);\n \n         return true;\n     }\n \n-    private void performJumpPointSearch(@NotNull final Node parent, @NotNull final BlockPos dPos, @NotNull final Node node)\n+    private void performJumpPointSearch(@NotNull final Node parent, @NotNull final BlockPos dPos, @NotNull final Node node, final boolean isInRestrictedArea)\n     {\n         if (allowJumpPointSearchTypeWalk && node.getHeuristic() <= parent.getHeuristic())\n         {\n-            walk(node, dPos);\n+            walk(node, dPos, isInRestrictedArea);\n         }\n     }\n \n@@ -956,20 +1015,20 @@ private boolean updateCurrentNode(@NotNull final Node parent, @NotNull final Nod\n      * @param pos    coordinate of block.\n      * @return y height of first open, viable block above ground, or -1 if blocked or too far a drop.\n      */\n-    protected int getGroundHeight(final Node parent, @NotNull final BlockPos pos)\n+    protected int getGroundHeight(final Node parent, @NotNull final BlockPos pos, final boolean isInRestrictedArea)\n     {\n         //  Check (y+1) first, as it's always needed, either for the upper body (level),\n         //  lower body (headroom drop) or lower body (jump up)\n-        if (checkHeadBlock(parent, pos))\n+        if (checkHeadBlock(parent, pos, isInRestrictedArea))\n         {\n-            return handleTargetNotPassable(parent, pos.up(), world.getBlockState(pos.up()));\n+            return handleTargetNotPassable(parent, pos.up(), world.getBlockState(pos.up()), isInRestrictedArea);\n         }\n \n         //  Now check the block we want to move to\n         final BlockState target = world.getBlockState(pos);\n-        if (!isPassable(target, pos))\n+        if (!isPassable(target, pos, isInRestrictedArea))\n         {\n-            return handleTargetNotPassable(parent, pos, target);\n+            return handleTargetNotPassable(parent, pos, target, isInRestrictedArea);\n         }\n \n         //  Do we have something to stand on in the target space?\n@@ -985,10 +1044,10 @@ else if (walkability == SurfaceType.NOT_PASSABLE)\n             return -1;\n         }\n \n-        return handleNotStanding(parent, pos, below);\n+        return handleNotStanding(parent, pos, below, isInRestrictedArea);\n     }\n \n-    private int handleNotStanding(@Nullable final Node parent, @NotNull final BlockPos pos, @NotNull final BlockState below)\n+    private int handleNotStanding(@Nullable final Node parent, @NotNull final BlockPos pos, @NotNull final BlockState below, final boolean isInRestrictedArea)\n     {\n         final boolean isSwimming = parent != null && parent.isSwimming();\n \n@@ -1002,14 +1061,14 @@ private int handleNotStanding(@Nullable final Node parent, @NotNull final BlockP\n             return pos.getY();\n         }\n \n-        return checkDrop(parent, pos, isSwimming);\n+        return checkDrop(parent, pos, isSwimming, isInRestrictedArea);\n     }\n \n-    private int checkDrop(@Nullable final Node parent, @NotNull final BlockPos pos, final boolean isSwimming)\n+    private int checkDrop(@Nullable final Node parent, @NotNull final BlockPos pos, final boolean isSwimming, final boolean isInRestrictedArea)\n     {\n         final boolean canDrop = parent != null && !parent.isLadder();\n         //  Nothing to stand on\n-        if (!canDrop || isSwimming || ((parent.pos.getX() != pos.getX() || parent.pos.getZ() != pos.getZ()) && isPassable(parent.pos.down(), false)\n+        if (!canDrop || isSwimming || ((parent.pos.getX() != pos.getX() || parent.pos.getZ() != pos.getZ()) && isPassable(parent.pos.down(), false, isInRestrictedArea)\n                                          && isWalkableSurface(world.getBlockState(parent.pos.down()), parent.pos.down()) == SurfaceType.DROPABLE))\n         {\n             return -1;\n@@ -1050,7 +1109,7 @@ private int handleInLiquid(@NotNull final BlockPos pos, @NotNull final BlockStat\n         return -1;\n     }\n \n-    private int handleTargetNotPassable(@Nullable final Node parent, @NotNull final BlockPos pos, @NotNull final BlockState target)\n+    private int handleTargetNotPassable(@Nullable final Node parent, @NotNull final BlockPos pos, @NotNull final BlockState target, final boolean isInRestrictedArea)\n     {\n         final boolean canJump = parent != null && !parent.isLadder() && !parent.isSwimming();\n         //  Need to try jumping up one, if we can\n@@ -1060,7 +1119,7 @@ private int handleTargetNotPassable(@Nullable final Node parent, @NotNull final\n         }\n \n         //  Check for headroom in the target space\n-        if (!isPassable(pos.up(2), false))\n+        if (!isPassable(pos.up(2), false, isInRestrictedArea))\n         {\n             final VoxelShape bb1 = world.getBlockState(pos).getCollisionShape(world, pos);\n             final VoxelShape bb2 = world.getBlockState(pos.up(2)).getCollisionShape(world, pos.up(2));\n@@ -1071,7 +1130,7 @@ private int handleTargetNotPassable(@Nullable final Node parent, @NotNull final\n         }\n \n         //  Check for jump room from the origin space\n-        if (!isPassable(parent.pos.up(2), false))\n+        if (!isPassable(parent.pos.up(2), false, isInRestrictedArea))\n         {\n             final VoxelShape bb1 = world.getBlockState(pos).getCollisionShape(world, pos);\n             final VoxelShape bb2 = world.getBlockState(parent.pos.up(2)).getCollisionShape(world, parent.pos.up(2));\n@@ -1101,7 +1160,7 @@ private int handleTargetNotPassable(@Nullable final Node parent, @NotNull final\n         return -1;\n     }\n \n-    private boolean checkHeadBlock(@Nullable final Node parent, @NotNull final BlockPos pos)\n+    private boolean checkHeadBlock(@Nullable final Node parent, @NotNull final BlockPos pos, final boolean isInRestrictedArea)\n     {\n         BlockPos localPos = pos;\n         final VoxelShape bb = world.getBlockState(localPos).getCollisionShape(world, localPos);\n@@ -1110,7 +1169,7 @@ private boolean checkHeadBlock(@Nullable final Node parent, @NotNull final Block\n             localPos = pos.up();\n         }\n \n-        if (!isPassable(pos.up(), true))\n+        if (!isPassable(pos.up(), true, isInRestrictedArea))\n         {\n             final VoxelShape bb1 = world.getBlockState(pos.down()).getCollisionShape(world, pos.down());\n             final VoxelShape bb2 = world.getBlockState(pos.up()).getCollisionShape(world, pos.up());\n@@ -1138,7 +1197,7 @@ private boolean checkHeadBlock(@Nullable final Node parent, @NotNull final Block\n                 return false;\n             }\n \n-            return hereState.getMaterial().isLiquid() && !isPassable(pos, false);\n+            return hereState.getMaterial().isLiquid() && !isPassable(pos, false, isInRestrictedArea);\n         }\n         return false;\n     }\n@@ -1169,9 +1228,10 @@ private double getEndY(final VoxelShape bb, final int def)\n      * Is the space passable.\n      *\n      * @param block the block we are checking.\n+     * @param isInRestrictedArea whether pos is in restricted area or not\n      * @return true if the block does not block movement.\n      */\n-    protected boolean isPassable(@NotNull final BlockState block, final BlockPos pos)\n+    protected boolean isPassable(@NotNull final BlockState block, final BlockPos pos, final boolean isInRestrictedArea)\n     {\n         if (block.getMaterial() != Material.AIR)\n         {\n@@ -1204,7 +1264,7 @@ else if (block.getBlock() instanceof FireBlock)\n         return true;\n     }\n \n-    protected boolean isPassable(final BlockPos pos, final boolean head)\n+    protected boolean isPassable(final BlockPos pos, final boolean head, final boolean isInRestrictedArea)\n     {\n         final BlockState state = world.getBlockState(pos);\n         final VoxelShape shape = state.getCollisionShape(world, pos);\n@@ -1214,7 +1274,7 @@ protected boolean isPassable(final BlockPos pos, final boolean head)\n                      || !(state.getBlock() instanceof CarpetBlock || state.getBlock() instanceof BlockFloatingCarpet)\n                      || isLadder(state.getBlock(), pos);\n         }\n-        return isPassable(state, pos);\n+        return isPassable(state, pos, isInRestrictedArea);\n     }\n \n     /**"
  },
  {
    "sha": "2f22562de5138afad650a1e4f9027fcac51c03e6",
    "filename": "src/main/java/com/minecolonies/coremod/entity/pathfinding/pathjobs/PathJobFindTree.java",
    "status": "modified",
    "additions": 29,
    "deletions": 11,
    "changes": 40,
    "blob_url": "https://github.com/ldtteam/minecolonies/blob/888a90a816d316d8444dab7933bbc12525d2c772/src/main/java/com/minecolonies/coremod/entity/pathfinding/pathjobs/PathJobFindTree.java",
    "raw_url": "https://github.com/ldtteam/minecolonies/raw/888a90a816d316d8444dab7933bbc12525d2c772/src/main/java/com/minecolonies/coremod/entity/pathfinding/pathjobs/PathJobFindTree.java",
    "contents_url": "https://api.github.com/repos/ldtteam/minecolonies/contents/src/main/java/com/minecolonies/coremod/entity/pathfinding/pathjobs/PathJobFindTree.java?ref=888a90a816d316d8444dab7933bbc12525d2c772",
    "patch": "@@ -4,12 +4,14 @@\n import com.minecolonies.api.compatibility.Compatibility;\n import com.minecolonies.api.crafting.ItemStorage;\n import com.minecolonies.api.entity.pathfinding.TreePathResult;\n+import com.minecolonies.api.util.BlockPosUtil;\n import com.minecolonies.coremod.entity.ai.citizen.lumberjack.Tree;\n import com.minecolonies.coremod.entity.pathfinding.Node;\n import net.minecraft.block.BlockState;\n-import net.minecraft.block.material.Material;\n import net.minecraft.entity.LivingEntity;\n+import net.minecraft.tags.BlockTags;\n import net.minecraft.util.math.BlockPos;\n+import net.minecraft.util.math.vector.Vector3i;\n import net.minecraft.world.World;\n import org.jetbrains.annotations.NotNull;\n \n@@ -25,6 +27,11 @@\n      */\n     private static final double TIE_BREAKER = 0.951D;\n \n+    /**\n+     * How much should be restricted area shrinked because of isTree check\n+     */\n+    private static final Vector3i AREA_SHRINK = new Vector3i(-1, 0, -1);\n+\n     /**\n      * The location of the hut of the lumberjack.\n      */\n@@ -40,6 +47,11 @@\n      */\n     private final IColony colony;\n \n+    /**\n+     * Fake goal when using restricted area\n+     */\n+    private final BlockPos furthestRestriction;\n+\n     /**\n      * AbstractPathJob constructor.\n      *\n@@ -64,6 +76,7 @@ public PathJobFindTree(\n         this.treesToNotCut = treesToCut;\n         this.hutLocation = home;\n         this.colony = colony;\n+        this.furthestRestriction = null;\n     }\n \n     /**\n@@ -84,14 +97,24 @@ public PathJobFindTree(\n       final BlockPos home,\n       final BlockPos startRestriction,\n       final BlockPos endRestriction,\n+      final BlockPos furthestRestriction,\n       final List<ItemStorage> treesToCut,\n       final IColony colony,\n       final LivingEntity entity)\n     {\n-        super(world, startRestriction, endRestriction, new TreePathResult(), entity);\n+        super(world,\n+            start,\n+            startRestriction,\n+            endRestriction,\n+            (int) Math.sqrt(BlockPosUtil.getDistanceSquared2D(home, furthestRestriction) * 1.5d),\n+            AREA_SHRINK,\n+            false,\n+            new TreePathResult(),\n+            entity);\n         this.treesToNotCut = treesToCut;\n         this.hutLocation = home;\n         this.colony = colony;\n+        this.furthestRestriction = furthestRestriction;\n     }\n \n     @NotNull\n@@ -104,12 +127,7 @@ public TreePathResult getResult()\n     @Override\n     protected double computeHeuristic(@NotNull final BlockPos pos)\n     {\n-        final int dx = pos.getX() - hutLocation.getX();\n-        final int dy = pos.getY() - hutLocation.getY();\n-        final int dz = pos.getZ() - hutLocation.getZ();\n-\n-        //  Manhattan Distance with a 1/1000th tie-breaker - halved\n-        return (Math.abs(dx) + Math.abs(dy) + Math.abs(dz)) * TIE_BREAKER;\n+        return furthestRestriction == null ? pos.distanceSq(hutLocation) * TIE_BREAKER : BlockPosUtil.getDistanceSquared2D(pos, furthestRestriction);\n     }\n \n     @Override\n@@ -128,7 +146,7 @@ private boolean isNearTree(@NotNull final Node n)\n         else\n         {\n             final int dx = n.pos.getX() > n.parent.pos.getX() ? 1 : -1;\n-            return isTree(n.pos.add(-dx, 0, 0)) || isTree(n.pos.add(0, 0, -1)) || isTree(n.pos.add(0, 0, +1));\n+            return isTree(n.pos.add(dx, 0, 0)) || isTree(n.pos.add(0, 0, -1)) || isTree(n.pos.add(0, 0, 1));\n         }\n     }\n \n@@ -150,8 +168,8 @@ protected double getNodeResultScore(final Node n)\n     }\n \n     @Override\n-    protected boolean isPassable(@NotNull final BlockState block, final BlockPos pos)\n+    protected boolean isPassable(@NotNull final BlockState block, final BlockPos pos, final boolean isInRestrictedArea)\n     {\n-        return super.isPassable(block, pos) || block.getMaterial() == Material.LEAVES || Compatibility.isDynamicTrunkShell(block.getBlock());\n+        return super.isPassable(block, pos, isInRestrictedArea) || (isInRestrictedArea && block.isIn(BlockTags.LEAVES)) || Compatibility.isDynamicTrunkShell(block.getBlock());\n     }\n }"
  },
  {
    "sha": "71155e6e7a6b5d74ad1ad675e960ac3c23142921",
    "filename": "src/main/java/com/minecolonies/coremod/entity/pathfinding/pathjobs/PathJobMoveToLocation.java",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/ldtteam/minecolonies/blob/888a90a816d316d8444dab7933bbc12525d2c772/src/main/java/com/minecolonies/coremod/entity/pathfinding/pathjobs/PathJobMoveToLocation.java",
    "raw_url": "https://github.com/ldtteam/minecolonies/raw/888a90a816d316d8444dab7933bbc12525d2c772/src/main/java/com/minecolonies/coremod/entity/pathfinding/pathjobs/PathJobMoveToLocation.java",
    "contents_url": "https://api.github.com/repos/ldtteam/minecolonies/contents/src/main/java/com/minecolonies/coremod/entity/pathfinding/pathjobs/PathJobMoveToLocation.java?ref=888a90a816d316d8444dab7933bbc12525d2c772",
    "patch": "@@ -58,7 +58,8 @@ protected Path search()\n         }\n \n         //  Compute destination slack - if the destination point cannot be stood in\n-        if (getGroundHeight(null, destination) != destination.getY())\n+        // destination is at restricted area\n+        if (getGroundHeight(null, destination, true) != destination.getY())\n         {\n             destinationSlack = DESTINATION_SLACK_ADJACENT;\n         }"
  },
  {
    "sha": "9c7d8cc31fb4bc0a72fe2aaa9be6ff2e037195f1",
    "filename": "src/main/java/com/minecolonies/coremod/entity/pathfinding/pathjobs/PathJobMoveToWithPassable.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/ldtteam/minecolonies/blob/888a90a816d316d8444dab7933bbc12525d2c772/src/main/java/com/minecolonies/coremod/entity/pathfinding/pathjobs/PathJobMoveToWithPassable.java",
    "raw_url": "https://github.com/ldtteam/minecolonies/raw/888a90a816d316d8444dab7933bbc12525d2c772/src/main/java/com/minecolonies/coremod/entity/pathfinding/pathjobs/PathJobMoveToWithPassable.java",
    "contents_url": "https://api.github.com/repos/ldtteam/minecolonies/contents/src/main/java/com/minecolonies/coremod/entity/pathfinding/pathjobs/PathJobMoveToWithPassable.java?ref=888a90a816d316d8444dab7933bbc12525d2c772",
    "patch": "@@ -38,8 +38,8 @@ public PathJobMoveToWithPassable(\n     }\n \n     @Override\n-    protected boolean isPassable(@NotNull final BlockState block, final BlockPos pos)\n+    protected boolean isPassable(@NotNull final BlockState block, final BlockPos pos, final boolean isInRestrictedArea)\n     {\n-        return super.isPassable(block, pos) || isPassable.apply(block);\n+        return super.isPassable(block, pos, isInRestrictedArea) || isPassable.apply(block);\n     }\n }"
  },
  {
    "sha": "552fba61fd839ecf47fc29fce5acf37df68ddeb4",
    "filename": "src/main/java/com/minecolonies/coremod/items/ItemScepterLumberjack.java",
    "status": "modified",
    "additions": 35,
    "deletions": 82,
    "changes": 117,
    "blob_url": "https://github.com/ldtteam/minecolonies/blob/888a90a816d316d8444dab7933bbc12525d2c772/src/main/java/com/minecolonies/coremod/items/ItemScepterLumberjack.java",
    "raw_url": "https://github.com/ldtteam/minecolonies/raw/888a90a816d316d8444dab7933bbc12525d2c772/src/main/java/com/minecolonies/coremod/items/ItemScepterLumberjack.java",
    "contents_url": "https://api.github.com/repos/ldtteam/minecolonies/contents/src/main/java/com/minecolonies/coremod/items/ItemScepterLumberjack.java?ref=888a90a816d316d8444dab7933bbc12525d2c772",
    "patch": "@@ -1,20 +1,16 @@\n package com.minecolonies.coremod.items;\n \n+import com.ldtteam.structurize.items.AbstractItemWithPosSelector;\n import com.ldtteam.structurize.util.LanguageHandler;\n import com.minecolonies.api.colony.IColony;\n import com.minecolonies.api.colony.IColonyManager;\n-import com.minecolonies.api.colony.buildings.IBuilding;\n+import com.minecolonies.api.items.ModItems;\n import com.minecolonies.api.util.BlockPosUtil;\n-import com.minecolonies.api.util.constant.Constants;\n-import com.minecolonies.coremod.colony.buildings.AbstractFilterableListBuilding;\n import com.minecolonies.coremod.colony.buildings.workerbuildings.BuildingLumberjack;\n import com.minecolonies.coremod.entity.ai.citizen.lumberjack.EntityAIWorkLumberjack;\n import net.minecraft.entity.player.PlayerEntity;\n import net.minecraft.item.ItemStack;\n-import net.minecraft.item.ItemUseContext;\n-import net.minecraft.nbt.CompoundNBT;\n import net.minecraft.util.ActionResultType;\n-import net.minecraft.util.Hand;\n import net.minecraft.util.math.BlockPos;\n import net.minecraft.world.World;\n \n@@ -24,105 +20,62 @@\n /**\n  * Lumberjack Scepter Item class. Used to give tasks to Lumberjacks.\n  */\n-public class ItemScepterLumberjack extends AbstractItemMinecolonies\n+public class ItemScepterLumberjack extends AbstractItemWithPosSelector\n {\n-    private static final String NBT_START_POS = Constants.MOD_ID + \":\" + \"start_pos\";\n-    private static final String NBT_END_POS   = Constants.MOD_ID + \":\" + \"end_pos\";\n-\n-    private boolean hasSetFirstPosition = false;\n-\n     /**\n      * LumberjackScepter constructor. Sets max stack to 1, like other tools.\n      *\n      * @param properties the properties.\n      */\n     public ItemScepterLumberjack(final Properties properties)\n     {\n-        super(\"scepterlumberjack\", properties.maxStackSize(1));\n+        super(properties.maxStackSize(1));\n+        setRegistryName(\"scepterlumberjack\");\n     }\n \n     @Override\n-    public ActionResultType onItemUse(final ItemUseContext useContext)\n+    public AbstractItemWithPosSelector getRegisteredItemInstance()\n     {\n-        // if server world, do nothing\n-        if (useContext.getWorld().isRemote)\n-        {\n-            return ActionResultType.FAIL;\n-        }\n-\n-        final ItemStack scepter = useContext.getPlayer().getHeldItem(useContext.getHand());\n-        if (!scepter.hasTag())\n-        {\n-            scepter.setTag(new CompoundNBT());\n-        }\n-        final CompoundNBT compound = scepter.getTag();\n-\n-        if (!hasSetFirstPosition)\n-        {\n-            LanguageHandler.sendPlayerMessage(useContext.getPlayer(), \"item.minecolonies.scepterlumberjack.usedstart\");\n-            setPosition(compound, NBT_START_POS, useContext.getPos());\n-        }\n-        else\n-        {\n-            LanguageHandler.sendPlayerMessage(useContext.getPlayer(), \"item.minecolonies.scepterlumberjack.usedend\");\n-            setPosition(compound, NBT_END_POS, useContext.getPos());\n-            storeRestrictedArea(useContext.getPlayer(), useContext.getHand(), useContext.getWorld());\n-        }\n-\n-        return super.onItemUse(useContext);\n+        return (AbstractItemWithPosSelector) ModItems.scepterLumberjack;\n     }\n \n-    private void storeRestrictedArea(final PlayerEntity player, final Hand hand, final World worldIn)\n+    @Override\n+    public ActionResultType onAirRightClick(final BlockPos start,\n+        final BlockPos end,\n+        final World world,\n+        final PlayerEntity player,\n+        final ItemStack itemStack)\n     {\n-        final ItemStack scepter = player.getHeldItem(hand);\n-        if (!scepter.hasTag())\n-        {\n-            scepter.setTag(new CompoundNBT());\n-        }\n-\n-        final CompoundNBT compound = scepter.getTag();\n-\n-        final BlockPos startRestriction = BlockPosUtil.read(compound, NBT_START_POS);\n-        final BlockPos endRestriction = BlockPosUtil.read(compound, NBT_END_POS);\n-\n-        // Check restricted area isn't too large\n-        final int minX = Math.min(startRestriction.getX(), endRestriction.getX());\n-        final int minZ = Math.min(startRestriction.getZ(), endRestriction.getZ());\n-        final int maxX = Math.max(startRestriction.getX(), endRestriction.getX());\n-        final int maxZ = Math.max(startRestriction.getZ(), endRestriction.getZ());\n-\n-        final int distX = maxX - minX;\n-        final int distZ = maxZ - minZ;\n-\n-        final int area = distX * distZ;\n-\n-        final int radius = EntityAIWorkLumberjack.SEARCH_RANGE;\n-        final double maxArea = 3.14 * Math.pow(radius, 2);\n+        final int minX = Math.min(start.getX(), end.getX());\n+        final int minZ = Math.min(start.getZ(), end.getZ());\n+        final int maxX = Math.max(start.getX(), end.getX());\n+        final int maxZ = Math.max(start.getZ(), end.getZ());\n+        final int area = (maxX - minX + 1) * (maxZ - minZ + 1);\n+        final int maxArea = (int) Math.floor(2 * Math.pow(EntityAIWorkLumberjack.SEARCH_RANGE, 2));\n \n         if (area > maxArea)\n         {\n-            LanguageHandler.sendPlayerMessage(player, \"item.minecolonies.scepterlumberjack.restrictiontoobig\", area, maxArea);\n-            return;\n+            if (world.isRemote)\n+            {\n+                LanguageHandler.sendPlayerMessage(player, \"item.minecolonies.scepterlumberjack.restrictiontoobig\", area, maxArea);\n+            }\n+            return ActionResultType.FAIL;\n         }\n \n-        LanguageHandler.sendPlayerMessage(player, \"item.minecolonies.scepterlumberjack.restrictionset\", area, maxArea);\n-\n-        final IColony colony = IColonyManager.getInstance().getColonyByWorld(compound.getInt(TAG_ID), worldIn);\n-        final BlockPos hutPos = BlockPosUtil.read(compound, TAG_POS);\n-        final IBuilding hut = colony.getBuildingManager().getBuilding(hutPos);\n-\n-        final AbstractFilterableListBuilding abstractBuilding = (AbstractFilterableListBuilding) hut;\n+        if (world.isRemote)\n+        {\n+            LanguageHandler\n+                .sendPlayerMessage(player, \"item.minecolonies.scepterlumberjack.restrictionset\", minX, maxX, minZ, maxZ, area, maxArea);\n+            return ActionResultType.CONSUME;\n+        }\n \n-        final BuildingLumberjack lumberjackBuilding = (BuildingLumberjack) abstractBuilding;\n+        final IColony colony = IColonyManager.getInstance().getColonyByWorld(itemStack.getTag().getInt(TAG_ID), world);\n+        final BuildingLumberjack lumberjackBuilding = (BuildingLumberjack) colony.getBuildingManager()\n+            .getBuilding(BlockPosUtil.read(itemStack.getTag(), TAG_POS));\n \n-        lumberjackBuilding.setRestrictedArea(startRestriction, endRestriction);\n+        lumberjackBuilding.setRestrictedArea(start, end);\n \n         player.inventory.removeStackFromSlot(player.inventory.currentItem);\n-    }\n-\n-    private void setPosition(final CompoundNBT compound, final String NBT, final BlockPos pos)\n-    {\n-        hasSetFirstPosition = !hasSetFirstPosition;\n-        BlockPosUtil.write(compound, NBT, pos);\n+        return ActionResultType.CONSUME;\n     }\n }"
  },
  {
    "sha": "324b643819d0d6d9368a146f2de19e2a4f69b248",
    "filename": "src/main/java/com/minecolonies/coremod/network/messages/server/colony/GuardScepterMessage.java",
    "status": "modified",
    "additions": 4,
    "deletions": 30,
    "changes": 34,
    "blob_url": "https://github.com/ldtteam/minecolonies/blob/888a90a816d316d8444dab7933bbc12525d2c772/src/main/java/com/minecolonies/coremod/network/messages/server/colony/GuardScepterMessage.java",
    "raw_url": "https://github.com/ldtteam/minecolonies/raw/888a90a816d316d8444dab7933bbc12525d2c772/src/main/java/com/minecolonies/coremod/network/messages/server/colony/GuardScepterMessage.java",
    "contents_url": "https://api.github.com/repos/ldtteam/minecolonies/contents/src/main/java/com/minecolonies/coremod/network/messages/server/colony/GuardScepterMessage.java?ref=888a90a816d316d8444dab7933bbc12525d2c772",
    "patch": "@@ -4,6 +4,7 @@\n import com.minecolonies.api.colony.buildings.views.IBuildingView;\n import com.minecolonies.api.items.ModItems;\n import com.minecolonies.api.util.BlockPosUtil;\n+import com.minecolonies.api.util.InventoryUtils;\n import com.minecolonies.coremod.network.messages.server.AbstractColonyServerMessage;\n import net.minecraft.entity.player.PlayerEntity;\n import net.minecraft.item.ItemStack;\n@@ -71,47 +72,20 @@ public void toBytesOverride(@NotNull final PacketBuffer buf)\n     @Override\n     protected void onExecute(final NetworkEvent.Context ctxIn, final boolean isLogicalServer, final IColony colony)\n     {\n-        final ItemStack scepter;\n-        boolean giveToPlayer = true;\n         final PlayerEntity player = ctxIn.getSender();\n         if (player == null)\n         {\n             return;\n         }\n \n-        if (player.getHeldItemMainhand().getItem() == ModItems.scepterGuard)\n-        {\n-            scepter = player.getHeldItemMainhand();\n-            giveToPlayer = false;\n-        }\n-        else\n-        {\n-            scepter = new ItemStack(ModItems.scepterGuard);\n-        }\n-\n-        if (!scepter.hasTag())\n-        {\n-            scepter.setTag(new CompoundNBT());\n-        }\n-        final CompoundNBT compound = scepter.getTag();\n+        final ItemStack scepter = InventoryUtils\n+            .getOrCreateItemAndPutToHotbarAndSelectOrDrop(ModItems.scepterGuard, player, ModItems.scepterGuard::getDefaultInstance, true);\n \n-        //Should never happen.\n-        if (compound == null)\n-        {\n-            return;\n-        }\n+        final CompoundNBT compound = scepter.getOrCreateTag();\n         compound.putInt(\"task\", taskId);\n-\n-        final int emptySlot = player.inventory.getFirstEmptyStack();\n         BlockPosUtil.write(compound, TAG_POS, buildingId);\n         compound.putInt(TAG_ID, colony.getID());\n \n-        if (giveToPlayer)\n-        {\n-            final ItemStack item = player.inventory.getStackInSlot(player.inventory.currentItem);\n-            player.inventory.setInventorySlotContents(emptySlot, item);\n-            player.inventory.setInventorySlotContents(player.inventory.currentItem, scepter);\n-        }\n         player.inventory.markDirty();\n     }\n }"
  },
  {
    "sha": "6da74a56b85f4ee0c5ae45561c57236553b53518",
    "filename": "src/main/java/com/minecolonies/coremod/network/messages/server/colony/building/beekeeper/BeekeeperScepterMessage.java",
    "status": "modified",
    "additions": 5,
    "deletions": 18,
    "changes": 23,
    "blob_url": "https://github.com/ldtteam/minecolonies/blob/888a90a816d316d8444dab7933bbc12525d2c772/src/main/java/com/minecolonies/coremod/network/messages/server/colony/building/beekeeper/BeekeeperScepterMessage.java",
    "raw_url": "https://github.com/ldtteam/minecolonies/raw/888a90a816d316d8444dab7933bbc12525d2c772/src/main/java/com/minecolonies/coremod/network/messages/server/colony/building/beekeeper/BeekeeperScepterMessage.java",
    "contents_url": "https://api.github.com/repos/ldtteam/minecolonies/contents/src/main/java/com/minecolonies/coremod/network/messages/server/colony/building/beekeeper/BeekeeperScepterMessage.java?ref=888a90a816d316d8444dab7933bbc12525d2c772",
    "patch": "@@ -4,6 +4,7 @@\n import com.minecolonies.api.colony.buildings.views.IBuildingView;\n import com.minecolonies.api.items.ModItems;\n import com.minecolonies.api.util.BlockPosUtil;\n+import com.minecolonies.api.util.InventoryUtils;\n import com.minecolonies.coremod.colony.buildings.workerbuildings.BuildingBeekeeper;\n import com.minecolonies.coremod.network.messages.server.AbstractBuildingServerMessage;\n import net.minecraft.entity.player.PlayerEntity;\n@@ -55,29 +56,15 @@ protected void onExecute(\n             return;\n         }\n \n-        final ItemStack scepter;\n-        boolean giveToPlayer = true;\n-        if (player.getHeldItemMainhand().getItem() == ModItems.scepterBeekeeper)\n-        {\n-            scepter = player.getHeldItemMainhand();\n-            giveToPlayer = false;\n-        }\n-        else\n-        {\n-            scepter = new ItemStack(ModItems.scepterBeekeeper);\n-        }\n+        final ItemStack scepter = InventoryUtils.getOrCreateItemAndPutToHotbarAndSelectOrDrop(ModItems.scepterBeekeeper,\n+            player,\n+            ModItems.scepterBeekeeper::getDefaultInstance,\n+            true);\n         final CompoundNBT compound = scepter.getOrCreateTag();\n \n-        final int emptySlot = player.inventory.getFirstEmptyStack();\n         BlockPosUtil.write(compound, TAG_POS, building.getID());\n         compound.putInt(TAG_ID, colony.getID());\n \n-        if (giveToPlayer)\n-        {\n-            final ItemStack item = player.inventory.getStackInSlot(player.inventory.currentItem);\n-            player.inventory.setInventorySlotContents(emptySlot, item);\n-            player.inventory.setInventorySlotContents(player.inventory.currentItem, scepter);\n-        }\n         player.inventory.markDirty();\n     }\n }"
  },
  {
    "sha": "a487ec81206e180525eb7d9f1937b89a59ca8853",
    "filename": "src/main/java/com/minecolonies/coremod/network/messages/server/colony/building/lumberjack/LumberjackScepterMessage.java",
    "status": "modified",
    "additions": 10,
    "deletions": 32,
    "changes": 42,
    "blob_url": "https://github.com/ldtteam/minecolonies/blob/888a90a816d316d8444dab7933bbc12525d2c772/src/main/java/com/minecolonies/coremod/network/messages/server/colony/building/lumberjack/LumberjackScepterMessage.java",
    "raw_url": "https://github.com/ldtteam/minecolonies/raw/888a90a816d316d8444dab7933bbc12525d2c772/src/main/java/com/minecolonies/coremod/network/messages/server/colony/building/lumberjack/LumberjackScepterMessage.java",
    "contents_url": "https://api.github.com/repos/ldtteam/minecolonies/contents/src/main/java/com/minecolonies/coremod/network/messages/server/colony/building/lumberjack/LumberjackScepterMessage.java?ref=888a90a816d316d8444dab7933bbc12525d2c772",
    "patch": "@@ -4,6 +4,7 @@\n import com.minecolonies.api.colony.buildings.views.IBuildingView;\n import com.minecolonies.api.items.ModItems;\n import com.minecolonies.api.util.BlockPosUtil;\n+import com.minecolonies.api.util.InventoryUtils;\n import com.minecolonies.coremod.colony.buildings.workerbuildings.BuildingLumberjack;\n import com.minecolonies.coremod.network.messages.server.AbstractBuildingServerMessage;\n import net.minecraft.entity.player.PlayerEntity;\n@@ -46,49 +47,26 @@ public LumberjackScepterMessage(final IBuildingView building)\n     }\n \n     @Override\n-    protected void onExecute(\n-      final NetworkEvent.Context ctxIn, final boolean isLogicalServer, final IColony colony, final BuildingLumberjack building)\n+    protected void onExecute(final NetworkEvent.Context ctxIn,\n+        final boolean isLogicalServer,\n+        final IColony colony,\n+        final BuildingLumberjack building)\n     {\n         final PlayerEntity player = ctxIn.getSender();\n         if (player == null)\n         {\n             return;\n         }\n \n-        final ItemStack scepter;\n-        boolean giveToPlayer = true;\n-        if (player.getHeldItemMainhand().getItem() == ModItems.scepterLumberjack)\n-        {\n-            scepter = player.getHeldItemMainhand();\n-            giveToPlayer = false;\n-        }\n-        else\n-        {\n-            scepter = new ItemStack(ModItems.scepterLumberjack);\n-        }\n-\n-        if (!scepter.hasTag())\n-        {\n-            scepter.setTag(new CompoundNBT());\n-        }\n-        final CompoundNBT compound = scepter.getTag();\n+        final ItemStack scepter = InventoryUtils.getOrCreateItemAndPutToHotbarAndSelectOrDrop(ModItems.scepterLumberjack,\n+            player,\n+            ModItems.scepterLumberjack::getDefaultInstance,\n+            true);\n \n-        //Should never happen.\n-        if (compound == null)\n-        {\n-            return;\n-        }\n-\n-        final int emptySlot = player.inventory.getFirstEmptyStack();\n+        final CompoundNBT compound = scepter.getOrCreateTag();\n         BlockPosUtil.write(compound, TAG_POS, building.getID());\n         compound.putInt(TAG_ID, colony.getID());\n \n-        if (giveToPlayer)\n-        {\n-            final ItemStack item = player.inventory.getStackInSlot(player.inventory.currentItem);\n-            player.inventory.setInventorySlotContents(emptySlot, item);\n-            player.inventory.setInventorySlotContents(player.inventory.currentItem, scepter);\n-        }\n         player.inventory.markDirty();\n     }\n }"
  },
  {
    "sha": "d6b30b0982182bf4e6cc38ba39e9b6918ca24434",
    "filename": "src/main/resources/META-INF/mods.toml",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/ldtteam/minecolonies/blob/888a90a816d316d8444dab7933bbc12525d2c772/src/main/resources/META-INF/mods.toml",
    "raw_url": "https://github.com/ldtteam/minecolonies/raw/888a90a816d316d8444dab7933bbc12525d2c772/src/main/resources/META-INF/mods.toml",
    "contents_url": "https://api.github.com/repos/ldtteam/minecolonies/contents/src/main/resources/META-INF/mods.toml?ref=888a90a816d316d8444dab7933bbc12525d2c772",
    "patch": "@@ -57,7 +57,7 @@ MineColonies is a colony simulator within Minecraft! There are numerous types of\n [[dependencies.minecolonies]]\n     modId=\"structurize\"\n     mandatory=true\n-    versionRange=\"[0.13.148-ALPHA]\"\n+    versionRange=\"[0.13.149-ALPHA]\"\n     ordering=\"AFTER\"\n     side=\"BOTH\"\n "
  },
  {
    "sha": "376accf1842f4dba1015affacf8afb96da07a2a5",
    "filename": "src/main/resources/assets/minecolonies/gui/layouthuts/layoutfilterablelist.xml",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/ldtteam/minecolonies/blob/888a90a816d316d8444dab7933bbc12525d2c772/src/main/resources/assets/minecolonies/gui/layouthuts/layoutfilterablelist.xml",
    "raw_url": "https://github.com/ldtteam/minecolonies/raw/888a90a816d316d8444dab7933bbc12525d2c772/src/main/resources/assets/minecolonies/gui/layouthuts/layoutfilterablelist.xml",
    "contents_url": "https://api.github.com/repos/ldtteam/minecolonies/contents/src/main/resources/assets/minecolonies/gui/layouthuts/layoutfilterablelist.xml?ref=888a90a816d316d8444dab7933bbc12525d2c772",
    "patch": "@@ -5,7 +5,7 @@\n \n     <list id=\"resources\" size=\"164 136\" pos=\"13 50\">\n         <box size=\"100% 17\" linewidth=\"2\">\n-            <itemicon id=\"resourceIcon\" size=\"17 17\" pos=\"0 0\"/>\n+            <itemicon id=\"resourceIcon\" size=\"16 16\" pos=\"0 0\"/>\n             <label id=\"resourceName\" size=\"100 12\" pos=\"20 1\" color=\"white\"/>\n             <buttonimage label=\"$(com.minecolonies.coremod.gui.workerhuts.retrieveOn)\" id=\"switch\" pos=\"120 1\" size=\"29 15\"\n                          source=\"minecolonies:textures/gui/builderhut/builder_button_very_small.png\" textcolor=\"black\"/>"
  },
  {
    "sha": "57ea7003435f7e026e53f082f495616eda2fa481",
    "filename": "src/main/resources/assets/minecolonies/lang/en_us.json",
    "status": "modified",
    "additions": 6,
    "deletions": 2,
    "changes": 8,
    "blob_url": "https://github.com/ldtteam/minecolonies/blob/888a90a816d316d8444dab7933bbc12525d2c772/src/main/resources/assets/minecolonies/lang/en_us.json",
    "raw_url": "https://github.com/ldtteam/minecolonies/raw/888a90a816d316d8444dab7933bbc12525d2c772/src/main/resources/assets/minecolonies/lang/en_us.json",
    "contents_url": "https://api.github.com/repos/ldtteam/minecolonies/contents/src/main/resources/assets/minecolonies/lang/en_us.json?ref=888a90a816d316d8444dab7933bbc12525d2c772",
    "patch": "@@ -61,8 +61,11 @@\n   \"item.minecolonies.scepterlumberjack\": \"Forest Tool\",\n   \"item.minecolonies.scepterlumberjack.usedstart\": \"First position set.\",\n   \"item.minecolonies.scepterlumberjack.usedend\": \"Second position set.\",\n-  \"item.minecolonies.scepterlumberjack.restrictiontoobig\": \"Area %s is too large. Maximum restricted area for the Forester is %s blocks.\",\n-  \"item.minecolonies.scepterlumberjack.restrictionset\": \"Forester restricted area set. Size is %s blocks. Max size is %s blocks.\",\n+  \"item.minecolonies.scepterlumberjack.restrictiontoobig\": \"An area of %d blocks is too large. The maximum restricted area for the Forester is %d blocks.\",\n+  \"item.minecolonies.scepterlumberjack.restrictionset\": \"Forester restricted area set (x: %d to %d, z: %d to %d, area: %d blocks). The max size is %d blocks.\",\n+  \n+  \"minecolonies.config.maxtreesize\": \"Max tree size\",\n+  \"minecolonies.config.maxtreesize.comment\": \"Maximal log count in one tree during lumberjack tree search.\",\n \n   \"com.minecolonies.coremod.gui.workerhuts.togglerestrictionon\": \"Restriction (on)\",\n   \"com.minecolonies.coremod.gui.workerhuts.togglerestrictionoff\": \"Restriction (off)\",\n@@ -1657,6 +1660,7 @@\n   \"item.minecolonies.amazonegg\": \"Amazon Spawn Egg\",\n   \"item.minecolonies.amazonchiefegg\": \"Amazon Leader Spawn Egg\",\n   \"com.minecolonies.coremod.playerinvfull\": \"You can't pick up this item, as your inventory is full!\",\n+  \"com.minecolonies.coremod.playerinvfull.hotbarinsert\": \" was dropped in front of you, as your inventory is full!\",\n \n   \"com.minecolonies.coremod.gui.workerhuts.concretemixer\": \"Concrete Mixer's Hut\",\n   \"com.minecolonies.coremod.job.concretemixer\": \"Concrete Mixer\","
  }
]
