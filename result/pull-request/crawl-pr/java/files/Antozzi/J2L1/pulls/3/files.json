[
  {
    "sha": "df1bc872276fce50b2dfc9f4ec8f173645ae6768",
    "filename": "Main/src/Main.java",
    "status": "removed",
    "additions": 0,
    "deletions": 9,
    "changes": 9,
    "blob_url": "https://github.com/Antozzi/J2L1/blob/a090e1e5203090695878eea08bd89c68aab71da4/Main/src/Main.java",
    "raw_url": "https://github.com/Antozzi/J2L1/raw/a090e1e5203090695878eea08bd89c68aab71da4/Main/src/Main.java",
    "contents_url": "https://api.github.com/repos/Antozzi/J2L1/contents/Main/src/Main.java?ref=a090e1e5203090695878eea08bd89c68aab71da4",
    "patch": "@@ -1,9 +0,0 @@\n-import java.sql.SQLOutput;\n-\n-public class Main {\n-\n-    public static void main(String[] args) {\n-        System.out.println(\"Nothing goes in here...\");\n-    }\n-\n-}"
  },
  {
    "sha": "1b3e2c4ed062cc75efe6c1435cb2997b415b6c71",
    "filename": "Main/src/ad/j2/hw1/Main.java",
    "status": "added",
    "additions": 41,
    "deletions": 0,
    "changes": 41,
    "blob_url": "https://github.com/Antozzi/J2L1/blob/407d41dc9019f338645ed0e820d320937702d910/Main/src/ad/j2/hw1/Main.java",
    "raw_url": "https://github.com/Antozzi/J2L1/raw/407d41dc9019f338645ed0e820d320937702d910/Main/src/ad/j2/hw1/Main.java",
    "contents_url": "https://api.github.com/repos/Antozzi/J2L1/contents/Main/src/ad/j2/hw1/Main.java?ref=407d41dc9019f338645ed0e820d320937702d910",
    "patch": "@@ -0,0 +1,41 @@\n+package ad.j2.hw1;\n+import java.util.Random;\n+import ad.j2.hw1.courses.*;\n+import ad.j2.hw1.teams.*;\n+\n+public class Main {\n+\n+    public static void main(String[] args) {\n+\n+        Random rnd = new Random();\n+        int distance = rnd.nextInt(1000);\n+        int height = rnd.nextInt(10);\n+\n+        Competitor[] competitors = {\n+                new Man(\"Vasya\"),\n+                new Cat(\"Murzik\"),\n+                new Robot(\"Kuzya\"),\n+                new Man(\"Fedya\")\n+        };\n+\n+        Obstacle[] obstacles = {new RunningLane(distance), new Wall(height)};\n+\n+        Team team = new Team(\"ManCatRobots\", competitors);\n+        System.out.println(\"***Team Name***\");\n+        System.out.println(team.getTeamName());\n+        System.out.println(\"***Show Team Results before Course***\");\n+        team.showResults();\n+        // start a new Course\n+        Course course = new Course(obstacles);\n+        System.out.println(\"***Team > Course***\");\n+        course.doIt(team);\n+        System.out.println(\"***Show Winners***\");\n+        team.showMembersCompletedCourse();\n+        System.out.println(\"***Show Team Results after Course***\");\n+        team.showResults();\n+\n+\n+    }\n+\n+}\n+"
  },
  {
    "sha": "03f2dad4ff91530f668537e07ef961f0e702f055",
    "filename": "Main/src/ad/j2/hw1/courses/Course.java",
    "status": "added",
    "additions": 27,
    "deletions": 0,
    "changes": 27,
    "blob_url": "https://github.com/Antozzi/J2L1/blob/407d41dc9019f338645ed0e820d320937702d910/Main/src/ad/j2/hw1/courses/Course.java",
    "raw_url": "https://github.com/Antozzi/J2L1/raw/407d41dc9019f338645ed0e820d320937702d910/Main/src/ad/j2/hw1/courses/Course.java",
    "contents_url": "https://api.github.com/repos/Antozzi/J2L1/contents/Main/src/ad/j2/hw1/courses/Course.java?ref=407d41dc9019f338645ed0e820d320937702d910",
    "patch": "@@ -0,0 +1,27 @@\n+package ad.j2.hw1.courses;\n+\n+import ad.j2.hw1.teams.Competitor;\n+import ad.j2.hw1.teams.Team;\n+\n+public class Course {\n+\n+    Obstacle[] obstacles;\n+\n+    public Course(Obstacle[] obstacles){\n+        this.obstacles = obstacles;\n+    }\n+\n+    public void doIt(Team team){\n+        Competitor[] teamMembers = team.getMembers();\n+        if(teamMembers.length > 0){\n+            for (Competitor c : teamMembers){\n+                for (Obstacle o : obstacles){\n+                    o.doIt(c);\n+                    if (!c.isOnDistance()) break;\n+                }\n+            }\n+        } else {\n+            System.out.println(\"There are no members in the team!\");\n+        }\n+    }\n+}"
  },
  {
    "sha": "f25ac4355a05aa3b5c0c2543a629d56729351e2d",
    "filename": "Main/src/ad/j2/hw1/courses/Obstacle.java",
    "status": "added",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/Antozzi/J2L1/blob/407d41dc9019f338645ed0e820d320937702d910/Main/src/ad/j2/hw1/courses/Obstacle.java",
    "raw_url": "https://github.com/Antozzi/J2L1/raw/407d41dc9019f338645ed0e820d320937702d910/Main/src/ad/j2/hw1/courses/Obstacle.java",
    "contents_url": "https://api.github.com/repos/Antozzi/J2L1/contents/Main/src/ad/j2/hw1/courses/Obstacle.java?ref=407d41dc9019f338645ed0e820d320937702d910",
    "patch": "@@ -0,0 +1,8 @@\n+package ad.j2.hw1.courses;\n+\n+import ad.j2.hw1.teams.TeamMember;\n+import ad.j2.hw1.teams.Competitor;\n+\n+public abstract class Obstacle {\n+    public abstract void doIt(Competitor competitor);\n+}"
  },
  {
    "sha": "539dd340572b6a1050fafc18838dfae8c94e7886",
    "filename": "Main/src/ad/j2/hw1/courses/RunningLane.java",
    "status": "added",
    "additions": 17,
    "deletions": 0,
    "changes": 17,
    "blob_url": "https://github.com/Antozzi/J2L1/blob/407d41dc9019f338645ed0e820d320937702d910/Main/src/ad/j2/hw1/courses/RunningLane.java",
    "raw_url": "https://github.com/Antozzi/J2L1/raw/407d41dc9019f338645ed0e820d320937702d910/Main/src/ad/j2/hw1/courses/RunningLane.java",
    "contents_url": "https://api.github.com/repos/Antozzi/J2L1/contents/Main/src/ad/j2/hw1/courses/RunningLane.java?ref=407d41dc9019f338645ed0e820d320937702d910",
    "patch": "@@ -0,0 +1,17 @@\n+package ad.j2.hw1.courses;\n+\n+import ad.j2.hw1.teams.TeamMember;\n+import ad.j2.hw1.teams.Competitor;\n+\n+public class RunningLane extends Obstacle {\n+    private int distance;\n+\n+    public RunningLane(int distance) {\n+        this.distance = distance;\n+    }\n+\n+    @Override\n+    public void doIt(Competitor competitor) {\n+        competitor.run(distance);\n+    }\n+}"
  },
  {
    "sha": "d8a1584ad23bd4a74415711bb20cfac0fd1beeec",
    "filename": "Main/src/ad/j2/hw1/courses/Wall.java",
    "status": "added",
    "additions": 17,
    "deletions": 0,
    "changes": 17,
    "blob_url": "https://github.com/Antozzi/J2L1/blob/407d41dc9019f338645ed0e820d320937702d910/Main/src/ad/j2/hw1/courses/Wall.java",
    "raw_url": "https://github.com/Antozzi/J2L1/raw/407d41dc9019f338645ed0e820d320937702d910/Main/src/ad/j2/hw1/courses/Wall.java",
    "contents_url": "https://api.github.com/repos/Antozzi/J2L1/contents/Main/src/ad/j2/hw1/courses/Wall.java?ref=407d41dc9019f338645ed0e820d320937702d910",
    "patch": "@@ -0,0 +1,17 @@\n+package ad.j2.hw1.courses;\n+\n+import ad.j2.hw1.teams.TeamMember;\n+import ad.j2.hw1.teams.Competitor;\n+\n+public class Wall extends Obstacle {\n+    private int height;\n+\n+    public Wall(int height) {\n+        this.height = height;\n+    }\n+\n+    @Override\n+    public void doIt(Competitor competitor) {\n+        competitor.jump(height);\n+    }\n+}"
  },
  {
    "sha": "4349351405bde981d0d68fc0f2b86bdbad4f44eb",
    "filename": "Main/src/ad/j2/hw1/teams/Cat.java",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/Antozzi/J2L1/blob/407d41dc9019f338645ed0e820d320937702d910/Main/src/ad/j2/hw1/teams/Cat.java",
    "raw_url": "https://github.com/Antozzi/J2L1/raw/407d41dc9019f338645ed0e820d320937702d910/Main/src/ad/j2/hw1/teams/Cat.java",
    "contents_url": "https://api.github.com/repos/Antozzi/J2L1/contents/Main/src/ad/j2/hw1/teams/Cat.java?ref=407d41dc9019f338645ed0e820d320937702d910",
    "patch": "@@ -0,0 +1,11 @@\n+package ad.j2.hw1.teams;\n+import java.util.Random;\n+\n+public class Cat extends TeamMember {\n+\n+    final static Random rnd = new Random();\n+\n+    public Cat(String name) {\n+        super(\"Кот\", name, rnd.nextInt(1000), rnd.nextInt(10));\n+    }\n+}"
  },
  {
    "sha": "547286212ec120046ca90423b62c250c19dc9c83",
    "filename": "Main/src/ad/j2/hw1/teams/Competitor.java",
    "status": "added",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/Antozzi/J2L1/blob/407d41dc9019f338645ed0e820d320937702d910/Main/src/ad/j2/hw1/teams/Competitor.java",
    "raw_url": "https://github.com/Antozzi/J2L1/raw/407d41dc9019f338645ed0e820d320937702d910/Main/src/ad/j2/hw1/teams/Competitor.java",
    "contents_url": "https://api.github.com/repos/Antozzi/J2L1/contents/Main/src/ad/j2/hw1/teams/Competitor.java?ref=407d41dc9019f338645ed0e820d320937702d910",
    "patch": "@@ -0,0 +1,8 @@\n+package ad.j2.hw1.teams;\n+\n+public interface Competitor {\n+    void run(int distance);\n+    void jump(int height);\n+    boolean isOnDistance();\n+    void showResult();\n+}"
  },
  {
    "sha": "fef10a841fa25bf29a75a689c39e24d00f72e972",
    "filename": "Main/src/ad/j2/hw1/teams/Man.java",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/Antozzi/J2L1/blob/407d41dc9019f338645ed0e820d320937702d910/Main/src/ad/j2/hw1/teams/Man.java",
    "raw_url": "https://github.com/Antozzi/J2L1/raw/407d41dc9019f338645ed0e820d320937702d910/Main/src/ad/j2/hw1/teams/Man.java",
    "contents_url": "https://api.github.com/repos/Antozzi/J2L1/contents/Main/src/ad/j2/hw1/teams/Man.java?ref=407d41dc9019f338645ed0e820d320937702d910",
    "patch": "@@ -0,0 +1,11 @@\n+package ad.j2.hw1.teams;\n+import java.util.Random;\n+\n+public class Man extends TeamMember{\n+\n+    final static Random rnd = new Random();\n+\n+    public Man(String name) {\n+        super(\"Man\", name, rnd.nextInt(1000), rnd.nextInt(10));\n+    }\n+}"
  },
  {
    "sha": "02013fa9b62d97ee0da20235ffaba1f41e642744",
    "filename": "Main/src/ad/j2/hw1/teams/Robot.java",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/Antozzi/J2L1/blob/407d41dc9019f338645ed0e820d320937702d910/Main/src/ad/j2/hw1/teams/Robot.java",
    "raw_url": "https://github.com/Antozzi/J2L1/raw/407d41dc9019f338645ed0e820d320937702d910/Main/src/ad/j2/hw1/teams/Robot.java",
    "contents_url": "https://api.github.com/repos/Antozzi/J2L1/contents/Main/src/ad/j2/hw1/teams/Robot.java?ref=407d41dc9019f338645ed0e820d320937702d910",
    "patch": "@@ -0,0 +1,11 @@\n+package ad.j2.hw1.teams;\n+import java.util.Random;\n+\n+public class Robot extends TeamMember{\n+\n+    final static Random rnd = new Random();\n+\n+    public Robot(String name) {\n+        super(\"Робот\", name, rnd.nextInt(1000), rnd.nextInt(10));\n+    }\n+}"
  },
  {
    "sha": "d1c93444b0fa64a7f484ced76ec71f7d4050946c",
    "filename": "Main/src/ad/j2/hw1/teams/Team.java",
    "status": "added",
    "additions": 33,
    "deletions": 0,
    "changes": 33,
    "blob_url": "https://github.com/Antozzi/J2L1/blob/407d41dc9019f338645ed0e820d320937702d910/Main/src/ad/j2/hw1/teams/Team.java",
    "raw_url": "https://github.com/Antozzi/J2L1/raw/407d41dc9019f338645ed0e820d320937702d910/Main/src/ad/j2/hw1/teams/Team.java",
    "contents_url": "https://api.github.com/repos/Antozzi/J2L1/contents/Main/src/ad/j2/hw1/teams/Team.java?ref=407d41dc9019f338645ed0e820d320937702d910",
    "patch": "@@ -0,0 +1,33 @@\n+package ad.j2.hw1.teams;\n+\n+public class Team {\n+    String teamName;\n+    Competitor[] teamMembers;\n+\n+\n+    public Team(String teamName, Competitor[] teamMembers){\n+        this.teamName = teamName;\n+        this.teamMembers = teamMembers;\n+    }\n+\n+    public String getTeamName(){\n+        return \"Team name: \"+teamName;\n+    }\n+\n+    public Competitor[] getMembers(){\n+        return teamMembers;\n+    }\n+\n+    public void showResults(){\n+        for(Competitor c: teamMembers){\n+            c.showResult();\n+        }\n+    }\n+\n+    public void showMembersCompletedCourse(){\n+        for(Competitor c: teamMembers){\n+            if(c.isOnDistance())\n+            c.showResult();\n+        }\n+    }\n+}"
  },
  {
    "sha": "1bf84df350afd77d1c81b76636a6c769a680a11a",
    "filename": "Main/src/ad/j2/hw1/teams/TeamMember.java",
    "status": "added",
    "additions": 44,
    "deletions": 0,
    "changes": 44,
    "blob_url": "https://github.com/Antozzi/J2L1/blob/407d41dc9019f338645ed0e820d320937702d910/Main/src/ad/j2/hw1/teams/TeamMember.java",
    "raw_url": "https://github.com/Antozzi/J2L1/raw/407d41dc9019f338645ed0e820d320937702d910/Main/src/ad/j2/hw1/teams/TeamMember.java",
    "contents_url": "https://api.github.com/repos/Antozzi/J2L1/contents/Main/src/ad/j2/hw1/teams/TeamMember.java?ref=407d41dc9019f338645ed0e820d320937702d910",
    "patch": "@@ -0,0 +1,44 @@\n+package ad.j2.hw1.teams;\n+\n+public abstract class TeamMember implements Competitor {\n+    String type;\n+    String name;\n+    int maxRunDistance;\n+    int maxJumpHeight;\n+    String onDistance;\n+\n+    public boolean isOnDistance(){\n+        return onDistance == \"Well Done!\";\n+    }\n+\n+    public TeamMember(String type, String name, int maxRunDistance, int maxJumpHeight) {\n+        this.type = type;\n+        this.name = name;\n+        this.maxRunDistance = maxRunDistance;\n+        this.maxJumpHeight = maxJumpHeight;\n+        this.onDistance = \"Well Done!\";\n+    }\n+\n+    public void run(int distance){\n+        if (distance <= maxRunDistance){\n+            System.out.printf(\"%s %s ran OK for distance %s meters\\n\",type,name,distance);\n+        } else {\n+            System.out.printf(\"%s %s could not run for %s meters distance\\n\",type,name,distance);\n+            onDistance = \"Looser!!!\";\n+        }\n+    }\n+\n+    public void jump(int height){\n+        if (height <= maxJumpHeight){\n+            System.out.printf(\"%s %s jumped OK at height %s meters\\n\",type,name,height);\n+        } else {\n+            System.out.printf(\"%s %s could not jump at height %s meters\\n\",type,name,height);\n+            onDistance = \"Looser!!!\";\n+        }\n+    }\n+\n+    public void showResult() {\n+        System.out.println(type + \" \" + name + \": \" + onDistance);\n+    }\n+\n+}"
  },
  {
    "sha": "5bd3a0648967aab5ca41d47be5b1feeac3bc0b3e",
    "filename": "Main/src/ad/j2l1/hw2/Main.java",
    "status": "added",
    "additions": 69,
    "deletions": 0,
    "changes": 69,
    "blob_url": "https://github.com/Antozzi/J2L1/blob/407d41dc9019f338645ed0e820d320937702d910/Main/src/ad/j2l1/hw2/Main.java",
    "raw_url": "https://github.com/Antozzi/J2L1/raw/407d41dc9019f338645ed0e820d320937702d910/Main/src/ad/j2l1/hw2/Main.java",
    "contents_url": "https://api.github.com/repos/Antozzi/J2L1/contents/Main/src/ad/j2l1/hw2/Main.java?ref=407d41dc9019f338645ed0e820d320937702d910",
    "patch": "@@ -0,0 +1,69 @@\n+package ad.j2l1.hw2;\n+\n+/**\n+ * 1. Напишите метод, на вход которого подаётся двумерный строковый массив размером 4х4,\n+ * при подаче массива другого размера необходимо бросить исключение MyArraySizeException.\n+ * 2. Далее метод должен пройтись по всем элементам массива, преобразовать в int, и просуммировать.\n+ * Если в каком-то элементе массива преобразование не удалось (например, в ячейке лежит символ или текст вместо числа),\n+ * должно быть брошено исключение MyArrayDataException, с детализацией в какой именно ячейке лежат неверные данные.\n+ * 3. В методе main() вызвать полученный метод, обработать возможные исключения MySizeArrayException и MyArrayDataException, и вывести результат расчета.\n+ */\n+\n+public class Main {\n+\n+    static int checkresult = 0;\n+\n+    public static void main(String[] args) {\n+\n+        String[][] rightArray = {{\"1\", \"2\", \"3\", \"4\"}, {\"1\", \"2\", \"3\", \"4\"}};\n+        String[][] wrongArray = {{\"1\", \"2\", \"3\", \"4\", \"5\"}, {\"1\", \"2\", \"3\", \"4\", \"5\", \"6\"}};\n+        String[][] wrongDataArray = {{\"1\", \"2\", \"3\", \"4x4\",}, {\"1\", \"2\", \"3\", \"4\"}};\n+\n+        System.out.println(\"Right array\");\n+        arrays(rightArray);\n+        System.out.println(\"Wrong array\");\n+        arrays(wrongArray);\n+        System.out.println(\"Wrong data array\");\n+        arrays(wrongDataArray);\n+\n+    }\n+\n+    public static void arrays(String[][] stringArray) {\n+\n+        try {\n+            checkresult = 0;\n+            checkresult = checkArrays(stringArray);\n+        } catch (MyArrSizeExcep | MyArrDataExcept e) {\n+            System.out.println(e.getMessage());\n+        } finally {\n+            System.out.println(\"Total Sum of Array = \" + checkresult);\n+        }\n+    }\n+\n+    public static int checkArrays(String[][] array) throws MyArrSizeExcep, MyArrDataExcept {\n+        int total = 0;\n+        int value;\n+        int row;\n+        int cell;\n+\n+        if (array.length != 2 || array[0].length != 4 || array[1].length != 4) {\n+            throw new MyArrSizeExcep();\n+        }\n+\n+        for (int i = 1; i < 3; i++) {\n+            row = i;\n+            for (int j = 1; j < 5; j++) {\n+                cell = j;\n+                try {\n+                    value = Integer.parseInt(array[i - 1][j - 1]);\n+                    total += value;\n+                } catch (IllegalArgumentException e) {\n+                    String message = \"in row \" + row + \", cell \" + cell;\n+                    throw new MyArrDataExcept(message);\n+                }\n+            }\n+        }\n+        return total;\n+    }\n+}\n+"
  },
  {
    "sha": "2f9d7e0ca7680142ab16950359deb8fda8b91dd7",
    "filename": "Main/src/ad/j2l1/hw2/MyArrDataExcept.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/Antozzi/J2L1/blob/407d41dc9019f338645ed0e820d320937702d910/Main/src/ad/j2l1/hw2/MyArrDataExcept.java",
    "raw_url": "https://github.com/Antozzi/J2L1/raw/407d41dc9019f338645ed0e820d320937702d910/Main/src/ad/j2l1/hw2/MyArrDataExcept.java",
    "contents_url": "https://api.github.com/repos/Antozzi/J2L1/contents/Main/src/ad/j2l1/hw2/MyArrDataExcept.java?ref=407d41dc9019f338645ed0e820d320937702d910",
    "patch": "@@ -0,0 +1,7 @@\n+package ad.j2l1.hw2;\n+\n+public class MyArrDataExcept extends RuntimeException {\n+    public MyArrDataExcept(String message) {\n+        super(\"Data is Wrong \" + message);\n+    }\n+}"
  },
  {
    "sha": "b07457b2bccbcfc26590b86dcb0f600cd2a63880",
    "filename": "Main/src/ad/j2l1/hw2/MyArrSizeExcep.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/Antozzi/J2L1/blob/407d41dc9019f338645ed0e820d320937702d910/Main/src/ad/j2l1/hw2/MyArrSizeExcep.java",
    "raw_url": "https://github.com/Antozzi/J2L1/raw/407d41dc9019f338645ed0e820d320937702d910/Main/src/ad/j2l1/hw2/MyArrSizeExcep.java",
    "contents_url": "https://api.github.com/repos/Antozzi/J2L1/contents/Main/src/ad/j2l1/hw2/MyArrSizeExcep.java?ref=407d41dc9019f338645ed0e820d320937702d910",
    "patch": "@@ -0,0 +1,7 @@\n+package ad.j2l1.hw2;\n+\n+public class MyArrSizeExcep extends RuntimeException {\n+    public MyArrSizeExcep() {\n+        super(\"Array is Wrong!\");\n+    }\n+}"
  }
]
