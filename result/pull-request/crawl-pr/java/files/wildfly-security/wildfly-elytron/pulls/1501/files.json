[
  {
    "sha": "db37d5dfea945645be5403066f83228fb0751995",
    "filename": "_posts/2021-03-15-automatic-registration-of-client-side-jvm-wide-default-sslcontext.adoc",
    "status": "added",
    "additions": 23,
    "deletions": 0,
    "changes": 23,
    "blob_url": "https://github.com/wildfly-security/wildfly-elytron/blob/f861b81edbd4147f296ba3348d5591e1e3bbd146/_posts/2021-03-15-automatic-registration-of-client-side-jvm-wide-default-sslcontext.adoc",
    "raw_url": "https://github.com/wildfly-security/wildfly-elytron/raw/f861b81edbd4147f296ba3348d5591e1e3bbd146/_posts/2021-03-15-automatic-registration-of-client-side-jvm-wide-default-sslcontext.adoc",
    "contents_url": "https://api.github.com/repos/wildfly-security/wildfly-elytron/contents/_posts/2021-03-15-automatic-registration-of-client-side-jvm-wide-default-sslcontext.adoc?ref=f861b81edbd4147f296ba3348d5591e1e3bbd146",
    "patch": "@@ -0,0 +1,23 @@\n+---\n+layout: post\n+title: 'Upcoming automatic registration of client side default SSLContext'\n+date: 2021-03-15\n+tags: elytron wildfly23 default ssl context client jvm security provider\n+synopsis: An overview of the upcoming automatic registration of client side JVM wide default SSLContext\n+author: dvilkola\n+---\n+\n+One of the features we have been working on for the Elytron subsytem is the ability to automatically register client side JVM wide default SSL context. This SSL context will be available to any library that supports the use of the default context.\n+\n+== Details\n+\n+We plan to provide implementation of new java security provider that will provide protocol named \"Default\". When registering this provider, elytron client will load configuration and provide initialized ssl context for clients requesting SSL context by using `SSLContext.getDefault()` or by using method `SSLContext.getInstance(\"Default\", newElytronClientProviderInstance)`.\n+\n+Our plans are that this provider will load the ssl context from either current authentication context obtained from classpath, or from authentication context obtained from file that is passed to the security provider either dynamically or as an argument in java.security file.\n+\n+== Summary\n+\n+This blog post has given a short overview of the upcoming client side jvm wide default SSL context that will be configurable in Elytron client configuration.\n+\n+For more details and updates on the status of this feature, keep an eye on https://issues.redhat.com/browse/WFLY-13762[WFCORE-5120]. You can also take a look at the https://github.com/wildfly/wildfly-proposals/pull/336[proposal]. We welcome feedback.\n+"
  },
  {
    "sha": "cfb8af2ed89cf8289ee5752fd5ddf7b38b4a2daa",
    "filename": "_posts/2021-03-15-sslcontext-delegation-to-alternate-instances-based-on-peer.adoc",
    "status": "added",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/wildfly-security/wildfly-elytron/blob/f861b81edbd4147f296ba3348d5591e1e3bbd146/_posts/2021-03-15-sslcontext-delegation-to-alternate-instances-based-on-peer.adoc",
    "raw_url": "https://github.com/wildfly-security/wildfly-elytron/raw/f861b81edbd4147f296ba3348d5591e1e3bbd146/_posts/2021-03-15-sslcontext-delegation-to-alternate-instances-based-on-peer.adoc",
    "contents_url": "https://api.github.com/repos/wildfly-security/wildfly-elytron/contents/_posts/2021-03-15-sslcontext-delegation-to-alternate-instances-based-on-peer.adoc?ref=f861b81edbd4147f296ba3348d5591e1e3bbd146",
    "patch": "@@ -0,0 +1,22 @@\n+---\n+layout: post\n+title: 'Upcoming SSLContext that supports delegation to alternate instances based on peer information'\n+date: 2021-03-15\n+tags: elytron wildfly23 ssl context delegation dynamic peer information\n+synopsis: An overview of the upcoming SSLContext that delegates to alternative instances based on peer's host and port information\n+author: dvilkola\n+---\n+\n+One of the features we have been working on for the Elytron subsytem is the ability to configure SSL context that will delegate to different instances of SSL context based on the host and port of the peer.\n+\n+== Background\n+\n+In some cases it can be useful to have SSL context that can select appropriate certificate/keystore for the connection based on the hostname and/or port of the peer. It would be easier to configure one such SSL context and provide rules at one place based on which the appropriate SSL Context instance will be selected.\n+\n+In Elytron it is already possible to configure `authentication-context` resource where you can provide rules that associate SSL context with specific host and/or port. After this feature is complete, you should be able to configure dynamic SSL context that will use these rules and will select appropriate SSL context for the connection.\n+\n+== Summary\n+\n+This blog post has given a short overview of the upcoming SSL context that selects appropriate instances based on peer information. It will be possible to configure it using WildFly CLI or directly in server configuration file.\n+\n+For more details and updates on the status of this feature, take a look at https://issues.redhat.com/browse/WFLY-13762[WFLY-13762]. You can also take a look at the https://github.com/wildfly/wildfly-proposals/pull/328[proposal]. We welcome feedback."
  }
]
