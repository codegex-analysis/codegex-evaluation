[
  {
    "sha": "3510fd83500645974244a2405eee4cbe11dc8a01",
    "filename": "Ghidra/Features/Decompiler/src/decompile/cpp/coreaction.cc",
    "status": "modified",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/NationalSecurityAgency/ghidra/blob/703592e71c68520f45032673f3fd13bc5ac26798/Ghidra/Features/Decompiler/src/decompile/cpp/coreaction.cc",
    "raw_url": "https://github.com/NationalSecurityAgency/ghidra/raw/703592e71c68520f45032673f3fd13bc5ac26798/Ghidra/Features/Decompiler/src/decompile/cpp/coreaction.cc",
    "contents_url": "https://api.github.com/repos/NationalSecurityAgency/ghidra/contents/Ghidra/Features/Decompiler/src/decompile/cpp/coreaction.cc?ref=703592e71c68520f45032673f3fd13bc5ac26798",
    "patch": "@@ -3317,6 +3317,8 @@ void ActionDeadCode::propagateConsumed(vector<Varnode *> &worklist)\n     pushConsumed(b,op->getIn(2), worklist);\n     break;\n   case CPUI_POPCOUNT:\n+  case CPUI_COUNTLEADINGZEROS:\n+  case CPUI_COUNTLEADINGONES:\n     a = 16 * op->getIn(0)->getSize() - 1;\t// Mask for possible bits that could be set\n     a &= outc;\t\t\t\t\t// Of the bits that could be set, which are consumed\n     b = (a == 0) ? 0 : ~((uintb)0);\t\t// if any consumed, treat all input bits as consumed\n@@ -5022,6 +5024,7 @@ void ActionDatabase::universalAction(Architecture *conf)\n \tactprop->addRule( new RulePiece2Sext(\"analysis\") );\n \tactprop->addRule( new RulePopcountBoolXor(\"analysis\") );\n \tactprop->addRule( new RuleXorSwap(\"analysis\") );\n+\tactprop->addRule( new RuleCountLeadingZerosShiftBool(\"analysis\") );\n \tactprop->addRule( new RuleSubvarAnd(\"subvar\") );\n \tactprop->addRule( new RuleSubvarSubpiece(\"subvar\") );\n \tactprop->addRule( new RuleSplitFlow(\"subvar\") );"
  },
  {
    "sha": "bea7eaa009199b0a276228e16c4f2f785bcda792",
    "filename": "Ghidra/Features/Decompiler/src/decompile/cpp/dynamic.cc",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/NationalSecurityAgency/ghidra/blob/703592e71c68520f45032673f3fd13bc5ac26798/Ghidra/Features/Decompiler/src/decompile/cpp/dynamic.cc",
    "raw_url": "https://github.com/NationalSecurityAgency/ghidra/raw/703592e71c68520f45032673f3fd13bc5ac26798/Ghidra/Features/Decompiler/src/decompile/cpp/dynamic.cc",
    "contents_url": "https://api.github.com/repos/NationalSecurityAgency/ghidra/contents/Ghidra/Features/Decompiler/src/decompile/cpp/dynamic.cc?ref=703592e71c68520f45032673f3fd13bc5ac26798",
    "patch": "@@ -55,7 +55,8 @@ uint4 DynamicHash::transtable[] = {\n \n   0,\t\t\t\t// CAST is skipped\n   CPUI_INT_ADD,  CPUI_INT_ADD, \t// PTRADD and PTRSUB hash same as INT_ADD\n-  CPUI_SEGMENTOP, CPUI_CPOOLREF, CPUI_NEW, CPUI_INSERT, CPUI_EXTRACT, CPUI_POPCOUNT\n+  CPUI_SEGMENTOP, CPUI_CPOOLREF, CPUI_NEW, CPUI_INSERT, CPUI_EXTRACT,\n+  CPUI_POPCOUNT, CPUI_COUNTLEADINGZEROS, CPUI_COUNTLEADINGONES\n   \n };\n "
  },
  {
    "sha": "e55203ee94f9698b0cb4ceaaaf7317f2ee31753c",
    "filename": "Ghidra/Features/Decompiler/src/decompile/cpp/op.cc",
    "status": "modified",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/NationalSecurityAgency/ghidra/blob/703592e71c68520f45032673f3fd13bc5ac26798/Ghidra/Features/Decompiler/src/decompile/cpp/op.cc",
    "raw_url": "https://github.com/NationalSecurityAgency/ghidra/raw/703592e71c68520f45032673f3fd13bc5ac26798/Ghidra/Features/Decompiler/src/decompile/cpp/op.cc",
    "contents_url": "https://api.github.com/repos/NationalSecurityAgency/ghidra/contents/Ghidra/Features/Decompiler/src/decompile/cpp/op.cc?ref=703592e71c68520f45032673f3fd13bc5ac26798",
    "patch": "@@ -627,6 +627,14 @@ uintb PcodeOp::getNZMaskLocal(bool cliploop) const\n     resmask = coveringmask((uintb)sz1);\n     resmask &= fullmask;\n     break;\n+  case CPUI_COUNTLEADINGZEROS:\n+  case CPUI_COUNTLEADINGONES:\n+    // TODO: COUNTLEADINGONES could use NZMask to get an actual upper bound\n+    // However, COUNTLEADINGZEROS cannot, as bits not in NZMask can still be zero.\n+    // For now, since COUNTLEADINGZEROS is more interesting, treat them both the same.\n+    resmask = coveringmask(getIn(0)->getSize() * 8);\n+    resmask &= fullmask;\n+    break;\n   case CPUI_SUBPIECE:\n     resmask = getIn(0)->getNZMask();\n     sz1 = (int4)getIn(1)->getOffset();"
  },
  {
    "sha": "c95b9729acebdbe1d4c47ca6bec0bfc347402862",
    "filename": "Ghidra/Features/Decompiler/src/decompile/cpp/opbehavior.cc",
    "status": "modified",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/NationalSecurityAgency/ghidra/blob/703592e71c68520f45032673f3fd13bc5ac26798/Ghidra/Features/Decompiler/src/decompile/cpp/opbehavior.cc",
    "raw_url": "https://github.com/NationalSecurityAgency/ghidra/raw/703592e71c68520f45032673f3fd13bc5ac26798/Ghidra/Features/Decompiler/src/decompile/cpp/opbehavior.cc",
    "contents_url": "https://api.github.com/repos/NationalSecurityAgency/ghidra/contents/Ghidra/Features/Decompiler/src/decompile/cpp/opbehavior.cc?ref=703592e71c68520f45032673f3fd13bc5ac26798",
    "patch": "@@ -102,6 +102,8 @@ void OpBehavior::registerInstructions(vector<OpBehavior *> &inst,const Translate\n   inst[CPUI_INSERT] = new OpBehavior(CPUI_INSERT,false);\n   inst[CPUI_EXTRACT] = new OpBehavior(CPUI_EXTRACT,false);\n   inst[CPUI_POPCOUNT] = new OpBehaviorPopcount();\n+  inst[CPUI_COUNTLEADINGZEROS] = new OpBehaviorCountLeadingZeros();\n+  inst[CPUI_COUNTLEADINGONES] = new OpBehaviorCountLeadingOnes();\n }\n \n /// \\param sizeout is the size of the output in bytes\n@@ -743,3 +745,15 @@ uintb OpBehaviorPopcount::evaluateUnary(int4 sizeout,int4 sizein,uintb in1) cons\n   return (uintb)popcount(in1);\n }\n \n+uintb OpBehaviorCountLeadingZeros::evaluateUnary(int4 sizeout,int4 sizein,uintb in1) const\n+\n+{\n+  return (uintb)(count_leading_zeros(in1) - 8*(sizeof(uintb) - sizein));\n+}\n+\n+uintb OpBehaviorCountLeadingOnes::evaluateUnary(int4 sizeout,int4 sizein,uintb in1) const\n+\n+{\n+  return (uintb)(count_leading_zeros(~in1) - 8*(sizeof(uintb) - sizein));\n+}\n+"
  },
  {
    "sha": "2ddf6aab4fa16bb852a49ee5bdbd7c5d2b639b42",
    "filename": "Ghidra/Features/Decompiler/src/decompile/cpp/opbehavior.hh",
    "status": "modified",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/NationalSecurityAgency/ghidra/blob/703592e71c68520f45032673f3fd13bc5ac26798/Ghidra/Features/Decompiler/src/decompile/cpp/opbehavior.hh",
    "raw_url": "https://github.com/NationalSecurityAgency/ghidra/raw/703592e71c68520f45032673f3fd13bc5ac26798/Ghidra/Features/Decompiler/src/decompile/cpp/opbehavior.hh",
    "contents_url": "https://api.github.com/repos/NationalSecurityAgency/ghidra/contents/Ghidra/Features/Decompiler/src/decompile/cpp/opbehavior.hh?ref=703592e71c68520f45032673f3fd13bc5ac26798",
    "patch": "@@ -509,4 +509,18 @@ public:\n   virtual uintb evaluateUnary(int4 sizeout,int4 sizein,uintb in1) const;\n };\n \n+/// CPUI_COUNTLEADINGZEROS behavior\n+class OpBehaviorCountLeadingZeros : public OpBehavior {\n+public:\n+  OpBehaviorCountLeadingZeros(void) : OpBehavior(CPUI_COUNTLEADINGZEROS,true) {}\t///< Constructor\n+  virtual uintb evaluateUnary(int4 sizeout,int4 sizein,uintb in1) const;\n+};\n+\n+/// CPUI_COUNTLEADINGONES behavior\n+class OpBehaviorCountLeadingOnes : public OpBehavior {\n+public:\n+  OpBehaviorCountLeadingOnes(void) : OpBehavior(CPUI_COUNTLEADINGONES,true) {}\t///< Constructor\n+  virtual uintb evaluateUnary(int4 sizeout,int4 sizein,uintb in1) const;\n+};\n+\n #endif"
  },
  {
    "sha": "866f5ea9d4dd4603ea013515b14fabaa19a99ec4",
    "filename": "Ghidra/Features/Decompiler/src/decompile/cpp/opcodes.cc",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/NationalSecurityAgency/ghidra/blob/703592e71c68520f45032673f3fd13bc5ac26798/Ghidra/Features/Decompiler/src/decompile/cpp/opcodes.cc",
    "raw_url": "https://github.com/NationalSecurityAgency/ghidra/raw/703592e71c68520f45032673f3fd13bc5ac26798/Ghidra/Features/Decompiler/src/decompile/cpp/opcodes.cc",
    "contents_url": "https://api.github.com/repos/NationalSecurityAgency/ghidra/contents/Ghidra/Features/Decompiler/src/decompile/cpp/opcodes.cc?ref=703592e71c68520f45032673f3fd13bc5ac26798",
    "patch": "@@ -42,11 +42,11 @@ static const char *opcode_name[] = {\n   \"TRUNC\", \"CEIL\", \"FLOOR\", \"ROUND\",\n   \"BUILD\", \"DELAY_SLOT\", \"PIECE\", \"SUBPIECE\", \"CAST\",\n   \"LABEL\", \"CROSSBUILD\", \"SEGMENTOP\", \"CPOOLREF\", \"NEW\",\n-  \"INSERT\", \"EXTRACT\", \"POPCOUNT\"\n+  \"INSERT\", \"EXTRACT\", \"POPCOUNT\", \"COUNTLEADINGZEROS\", \"COUNTLEADINGONES\"\n };\n \n static const int4 opcode_indices[] = {\n-  0, 39, 37, 40, 38,  4,  6, 60,  7,  8,  9, 64,  5, 57,  1, 68, 66,\n+   0, 39, 37, 40, 38,  4,  6, 60,  7,  8,  9, 64,  5, 57,  1, 73, 74, 68, 66,\n   61, 71, 55, 52, 47, 48, 41, 43, 44, 49, 46, 51, 42, 53, 50, 58, 70,\n   54, 24, 19, 27, 21, 33, 11, 29, 15, 16, 32, 25, 12, 28, 35, 30,\n   23, 22, 34, 18, 13, 14, 36, 31, 20, 26, 17, 65,  2, 69, 62, 72, 10, 59,"
  },
  {
    "sha": "1ac0cb42ee8ab2d00a3dbe6a329e64fc0b91d9a1",
    "filename": "Ghidra/Features/Decompiler/src/decompile/cpp/opcodes.hh",
    "status": "modified",
    "additions": 3,
    "deletions": 1,
    "changes": 4,
    "blob_url": "https://github.com/NationalSecurityAgency/ghidra/blob/703592e71c68520f45032673f3fd13bc5ac26798/Ghidra/Features/Decompiler/src/decompile/cpp/opcodes.hh",
    "raw_url": "https://github.com/NationalSecurityAgency/ghidra/raw/703592e71c68520f45032673f3fd13bc5ac26798/Ghidra/Features/Decompiler/src/decompile/cpp/opcodes.hh",
    "contents_url": "https://api.github.com/repos/NationalSecurityAgency/ghidra/contents/Ghidra/Features/Decompiler/src/decompile/cpp/opcodes.hh?ref=703592e71c68520f45032673f3fd13bc5ac26798",
    "patch": "@@ -123,8 +123,10 @@ enum OpCode {\n   CPUI_INSERT = 70,\t\t///< Insert a bit-range\n   CPUI_EXTRACT = 71,\t\t///< Extract a bit-range\n   CPUI_POPCOUNT = 72,\t\t///< Count the 1-bits\n+  CPUI_COUNTLEADINGZEROS = 73,\t///< Count the leading 0-bits\n+  CPUI_COUNTLEADINGONES = 74,\t///< Count the leading 1-bits\n \n-  CPUI_MAX = 73\t\t\t///< Value indicating the end of the op-code values\n+  CPUI_MAX = 75\t\t\t///< Value indicating the end of the op-code values\n };\n \n extern const char *get_opname(OpCode opc);\t\t///< Convert an OpCode to the name as a string"
  },
  {
    "sha": "792c28a6e0be844b38cd7d849af793cf06195f4c",
    "filename": "Ghidra/Features/Decompiler/src/decompile/cpp/printc.hh",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/NationalSecurityAgency/ghidra/blob/703592e71c68520f45032673f3fd13bc5ac26798/Ghidra/Features/Decompiler/src/decompile/cpp/printc.hh",
    "raw_url": "https://github.com/NationalSecurityAgency/ghidra/raw/703592e71c68520f45032673f3fd13bc5ac26798/Ghidra/Features/Decompiler/src/decompile/cpp/printc.hh",
    "contents_url": "https://api.github.com/repos/NationalSecurityAgency/ghidra/contents/Ghidra/Features/Decompiler/src/decompile/cpp/printc.hh?ref=703592e71c68520f45032673f3fd13bc5ac26798",
    "patch": "@@ -298,6 +298,8 @@ public:\n   virtual void opInsertOp(const PcodeOp *op);\n   virtual void opExtractOp(const PcodeOp *op);\n   virtual void opPopcountOp(const PcodeOp *op) { opFunc(op); }\n+  virtual void opCountLeadingZerosOp(const PcodeOp *op) { opFunc(op); }\n+  virtual void opCountLeadingOnesOp(const PcodeOp *op) { opFunc(op); }\n };\n \n #endif"
  },
  {
    "sha": "22904bbe50842b03fa4545c84381869ab9ffb5b4",
    "filename": "Ghidra/Features/Decompiler/src/decompile/cpp/printlanguage.hh",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/NationalSecurityAgency/ghidra/blob/703592e71c68520f45032673f3fd13bc5ac26798/Ghidra/Features/Decompiler/src/decompile/cpp/printlanguage.hh",
    "raw_url": "https://github.com/NationalSecurityAgency/ghidra/raw/703592e71c68520f45032673f3fd13bc5ac26798/Ghidra/Features/Decompiler/src/decompile/cpp/printlanguage.hh",
    "contents_url": "https://api.github.com/repos/NationalSecurityAgency/ghidra/contents/Ghidra/Features/Decompiler/src/decompile/cpp/printlanguage.hh?ref=703592e71c68520f45032673f3fd13bc5ac26798",
    "patch": "@@ -541,6 +541,8 @@ public:\n   virtual void opInsertOp(const PcodeOp *op)=0;\t\t\t\t///< Emit an INSERT operator\n   virtual void opExtractOp(const PcodeOp *op)=0;\t\t\t///< Emit an EXTRACT operator\n   virtual void opPopcountOp(const PcodeOp *op)=0;\t\t\t///< Emit a POPCOUNT operator\n+  virtual void opCountLeadingZerosOp(const PcodeOp *op)=0;\t\t///< Emit a COUNTLEADINGZEROS operator\n+  virtual void opCountLeadingOnesOp(const PcodeOp *op)=0;\t\t///< Emit a COUNTLEADINGONES operator\n \n   static int4 mostNaturalBase(uintb val); \t\t\t///< Determine the most natural base for an integer\n   static void formatBinary(ostream &s,uintb val);\t\t///< Print a number in binary form"
  },
  {
    "sha": "c671f15e3b03551992f6f0c2ddc180ae01ea4bd8",
    "filename": "Ghidra/Features/Decompiler/src/decompile/cpp/ruleaction.cc",
    "status": "modified",
    "additions": 55,
    "deletions": 0,
    "changes": 55,
    "blob_url": "https://github.com/NationalSecurityAgency/ghidra/blob/703592e71c68520f45032673f3fd13bc5ac26798/Ghidra/Features/Decompiler/src/decompile/cpp/ruleaction.cc",
    "raw_url": "https://github.com/NationalSecurityAgency/ghidra/raw/703592e71c68520f45032673f3fd13bc5ac26798/Ghidra/Features/Decompiler/src/decompile/cpp/ruleaction.cc",
    "contents_url": "https://api.github.com/repos/NationalSecurityAgency/ghidra/contents/Ghidra/Features/Decompiler/src/decompile/cpp/ruleaction.cc?ref=703592e71c68520f45032673f3fd13bc5ac26798",
    "patch": "@@ -9122,3 +9122,58 @@ int4 RuleXorSwap::applyOp(PcodeOp *op,Funcdata &data)\n   }\n   return 0;\n }\n+\n+/// \\class RuleCountLeadingZerosShiftBool\n+/// \\brief Simplify equality checks that use countLeadingZeros.\n+///\n+/// Some compilers check if a value is equal to zero by checking the most\n+/// significant bit in countLeadingZeros; for instance on a 32-bit system,\n+/// it being equal to 32 would have the 5th bit set.\n+///  - `countLeadingZeros(a ^ 3) >> 5  =>  a ^ 3 == 0  =>  a == 3` (by RuleXorCollapse)\n+///  - `countLeadingZeros(a - 3) >> 5  =>  a - 3 == 0  =>  a == 3` (by RuleEqual2Zero)\n+void RuleCountLeadingZerosShiftBool::getOpList(vector<uint4> &oplist) const\n+\n+{\n+  oplist.push_back(CPUI_COUNTLEADINGZEROS);\n+}\n+\n+int4 RuleCountLeadingZerosShiftBool::applyOp(PcodeOp *op,Funcdata &data)\n+\n+{\n+  Varnode *outVn = op->getOut();\n+  list<PcodeOp *>::const_iterator iter, iter2;\n+  uintb max_return = 8 * op->getIn(0)->getSize();\n+  if (popcount(max_return) != 1) {\n+    // This rule only makes sense with sizes that are powers of 2; if the maximum value\n+    // returned by countLeadingZeros was, say, 24, then both 16 >> 4 and 24 >> 4\n+    // are 1, and thus the check does not make sense.  (Such processors couldn't\n+    // use countLeadingZeros for checking equality in any case.)\n+    return 0;\n+  }\n+\n+  for(iter=outVn->beginDescend();iter!=outVn->endDescend();++iter) {\n+    PcodeOp *baseOp = *iter;\n+    if (baseOp->code() != CPUI_INT_RIGHT && baseOp->code() != CPUI_INT_SRIGHT) continue;\n+    Varnode *vn1 = baseOp->getIn(1);\n+    if (!vn1->isConstant()) continue;\n+    uintb shift = vn1->getOffset();\n+    if ((max_return >> shift) == 1) {\n+      // Becomes a comparison with zero\n+      PcodeOp* newOp = data.newOp(2, baseOp->getAddr());\n+      data.opSetOpcode(newOp, CPUI_INT_EQUAL);\n+      Varnode* b = data.newConstant(outVn->getSize(), 0);\n+      data.opSetInput(newOp, op->getIn(0), 0);\n+      data.opSetInput(newOp, b, 1);\n+\n+      Varnode* oldOut = baseOp->getOut();\n+      // Use a size of 1 to produce a bool (even though the actual result size is oldOut->getSize())\n+      Varnode* newOut = data.newUniqueOut(1, newOp);\n+      data.opSetOutput(newOp, newOut);\n+      data.opInsertBefore(newOp, baseOp);\n+      data.totalReplace(oldOut, newOut);\n+      data.opDestroy(baseOp);\n+      return 1;\n+    }\n+  }\n+  return 0;\n+}"
  },
  {
    "sha": "6c9f1cb56fbc625d6ebdc5e5ae26f32fdcf2295a",
    "filename": "Ghidra/Features/Decompiler/src/decompile/cpp/ruleaction.hh",
    "status": "modified",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/NationalSecurityAgency/ghidra/blob/703592e71c68520f45032673f3fd13bc5ac26798/Ghidra/Features/Decompiler/src/decompile/cpp/ruleaction.hh",
    "raw_url": "https://github.com/NationalSecurityAgency/ghidra/raw/703592e71c68520f45032673f3fd13bc5ac26798/Ghidra/Features/Decompiler/src/decompile/cpp/ruleaction.hh",
    "contents_url": "https://api.github.com/repos/NationalSecurityAgency/ghidra/contents/Ghidra/Features/Decompiler/src/decompile/cpp/ruleaction.hh?ref=703592e71c68520f45032673f3fd13bc5ac26798",
    "patch": "@@ -1489,4 +1489,14 @@ public:\n   virtual int4 applyOp(PcodeOp *op,Funcdata &data);\n };\n \n+class RuleCountLeadingZerosShiftBool : public Rule {\n+public:\n+  RuleCountLeadingZerosShiftBool(const string &g) : Rule( g, 0, \"countleadingzerosshiftbool\") {}\t///< Constructor\n+  virtual Rule *clone(const ActionGroupList &grouplist) const {\n+    if (!grouplist.contains(getGroup())) return (Rule *)0;\n+    return new RuleCountLeadingZerosShiftBool(getGroup());\n+  }\n+  virtual void getOpList(vector<uint4> &oplist) const;\n+  virtual int4 applyOp(PcodeOp *op,Funcdata &data);\n+};\n #endif"
  },
  {
    "sha": "d212f31ffb9d20fb3dedbb89bb5967c141b6b933",
    "filename": "Ghidra/Features/Decompiler/src/decompile/cpp/slgh_compile.cc",
    "status": "modified",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/NationalSecurityAgency/ghidra/blob/703592e71c68520f45032673f3fd13bc5ac26798/Ghidra/Features/Decompiler/src/decompile/cpp/slgh_compile.cc",
    "raw_url": "https://github.com/NationalSecurityAgency/ghidra/raw/703592e71c68520f45032673f3fd13bc5ac26798/Ghidra/Features/Decompiler/src/decompile/cpp/slgh_compile.cc",
    "contents_url": "https://api.github.com/repos/NationalSecurityAgency/ghidra/contents/Ghidra/Features/Decompiler/src/decompile/cpp/slgh_compile.cc?ref=703592e71c68520f45032673f3fd13bc5ac26798",
    "patch": "@@ -739,6 +739,12 @@ void ConsistencyChecker::printOpName(ostream &s,OpTpl *op)\n   case CPUI_POPCOUNT:\n     s << \"Count bits(popcount)\";\n     break;\n+  case CPUI_COUNTLEADINGZEROS:\n+    s << \"Count leading zero bits\";\n+    break;\n+  case CPUI_COUNTLEADINGONES:\n+    s << \"Count leading one bits\";\n+    break;\n   default:\n     break;\n   }"
  },
  {
    "sha": "1aacc003bf7ec84b8c250dd5ec090779a0507666",
    "filename": "Ghidra/Features/Decompiler/src/decompile/cpp/slghparse.cc",
    "status": "modified",
    "additions": 1383,
    "deletions": 1348,
    "changes": 2731,
    "blob_url": "https://github.com/NationalSecurityAgency/ghidra/blob/703592e71c68520f45032673f3fd13bc5ac26798/Ghidra/Features/Decompiler/src/decompile/cpp/slghparse.cc",
    "raw_url": "https://github.com/NationalSecurityAgency/ghidra/raw/703592e71c68520f45032673f3fd13bc5ac26798/Ghidra/Features/Decompiler/src/decompile/cpp/slghparse.cc",
    "contents_url": "https://api.github.com/repos/NationalSecurityAgency/ghidra/contents/Ghidra/Features/Decompiler/src/decompile/cpp/slghparse.cc?ref=703592e71c68520f45032673f3fd13bc5ac26798"
  },
  {
    "sha": "c830bc320bd82a25ec1553c21b7a1d9dfe7d3536",
    "filename": "Ghidra/Features/Decompiler/src/decompile/cpp/slghparse.hh",
    "status": "modified",
    "additions": 67,
    "deletions": 65,
    "changes": 132,
    "blob_url": "https://github.com/NationalSecurityAgency/ghidra/blob/703592e71c68520f45032673f3fd13bc5ac26798/Ghidra/Features/Decompiler/src/decompile/cpp/slghparse.hh",
    "raw_url": "https://github.com/NationalSecurityAgency/ghidra/raw/703592e71c68520f45032673f3fd13bc5ac26798/Ghidra/Features/Decompiler/src/decompile/cpp/slghparse.hh",
    "contents_url": "https://api.github.com/repos/NationalSecurityAgency/ghidra/contents/Ghidra/Features/Decompiler/src/decompile/cpp/slghparse.hh?ref=703592e71c68520f45032673f3fd13bc5ac26798",
    "patch": "@@ -107,70 +107,72 @@ extern int yydebug;\n     OP_CPOOLREF = 302,\n     OP_NEW = 303,\n     OP_POPCOUNT = 304,\n-    BADINTEGER = 305,\n-    GOTO_KEY = 306,\n-    CALL_KEY = 307,\n-    RETURN_KEY = 308,\n-    IF_KEY = 309,\n-    DEFINE_KEY = 310,\n-    ATTACH_KEY = 311,\n-    MACRO_KEY = 312,\n-    SPACE_KEY = 313,\n-    TYPE_KEY = 314,\n-    RAM_KEY = 315,\n-    DEFAULT_KEY = 316,\n-    REGISTER_KEY = 317,\n-    ENDIAN_KEY = 318,\n-    WITH_KEY = 319,\n-    ALIGN_KEY = 320,\n-    OP_UNIMPL = 321,\n-    TOKEN_KEY = 322,\n-    SIGNED_KEY = 323,\n-    NOFLOW_KEY = 324,\n-    HEX_KEY = 325,\n-    DEC_KEY = 326,\n-    BIG_KEY = 327,\n-    LITTLE_KEY = 328,\n-    SIZE_KEY = 329,\n-    WORDSIZE_KEY = 330,\n-    OFFSET_KEY = 331,\n-    NAMES_KEY = 332,\n-    VALUES_KEY = 333,\n-    VARIABLES_KEY = 334,\n-    PCODEOP_KEY = 335,\n-    IS_KEY = 336,\n-    LOCAL_KEY = 337,\n-    DELAYSLOT_KEY = 338,\n-    CROSSBUILD_KEY = 339,\n-    EXPORT_KEY = 340,\n-    BUILD_KEY = 341,\n-    CONTEXT_KEY = 342,\n-    ELLIPSIS_KEY = 343,\n-    GLOBALSET_KEY = 344,\n-    BITRANGE_KEY = 345,\n-    CHAR = 346,\n-    INTEGER = 347,\n-    INTB = 348,\n-    STRING = 349,\n-    SYMBOLSTRING = 350,\n-    SPACESYM = 351,\n-    SECTIONSYM = 352,\n-    TOKENSYM = 353,\n-    USEROPSYM = 354,\n-    VALUESYM = 355,\n-    VALUEMAPSYM = 356,\n-    CONTEXTSYM = 357,\n-    NAMESYM = 358,\n-    VARSYM = 359,\n-    BITSYM = 360,\n-    SPECSYM = 361,\n-    VARLISTSYM = 362,\n-    OPERANDSYM = 363,\n-    STARTSYM = 364,\n-    ENDSYM = 365,\n-    MACROSYM = 366,\n-    LABELSYM = 367,\n-    SUBTABLESYM = 368\n+    OP_COUNTLEADINGZEROS = 305,\n+    OP_COUNTLEADINGONES = 306,\n+    BADINTEGER = 307,\n+    GOTO_KEY = 308,\n+    CALL_KEY = 309,\n+    RETURN_KEY = 310,\n+    IF_KEY = 311,\n+    DEFINE_KEY = 312,\n+    ATTACH_KEY = 313,\n+    MACRO_KEY = 314,\n+    SPACE_KEY = 315,\n+    TYPE_KEY = 316,\n+    RAM_KEY = 317,\n+    DEFAULT_KEY = 318,\n+    REGISTER_KEY = 319,\n+    ENDIAN_KEY = 320,\n+    WITH_KEY = 321,\n+    ALIGN_KEY = 322,\n+    OP_UNIMPL = 323,\n+    TOKEN_KEY = 324,\n+    SIGNED_KEY = 325,\n+    NOFLOW_KEY = 326,\n+    HEX_KEY = 327,\n+    DEC_KEY = 328,\n+    BIG_KEY = 329,\n+    LITTLE_KEY = 330,\n+    SIZE_KEY = 331,\n+    WORDSIZE_KEY = 332,\n+    OFFSET_KEY = 333,\n+    NAMES_KEY = 334,\n+    VALUES_KEY = 335,\n+    VARIABLES_KEY = 336,\n+    PCODEOP_KEY = 337,\n+    IS_KEY = 338,\n+    LOCAL_KEY = 339,\n+    DELAYSLOT_KEY = 340,\n+    CROSSBUILD_KEY = 341,\n+    EXPORT_KEY = 342,\n+    BUILD_KEY = 343,\n+    CONTEXT_KEY = 344,\n+    ELLIPSIS_KEY = 345,\n+    GLOBALSET_KEY = 346,\n+    BITRANGE_KEY = 347,\n+    CHAR = 348,\n+    INTEGER = 349,\n+    INTB = 350,\n+    STRING = 351,\n+    SYMBOLSTRING = 352,\n+    SPACESYM = 353,\n+    SECTIONSYM = 354,\n+    TOKENSYM = 355,\n+    USEROPSYM = 356,\n+    VALUESYM = 357,\n+    VALUEMAPSYM = 358,\n+    CONTEXTSYM = 359,\n+    NAMESYM = 360,\n+    VARSYM = 361,\n+    BITSYM = 362,\n+    SPECSYM = 363,\n+    VARLISTSYM = 364,\n+    OPERANDSYM = 365,\n+    STARTSYM = 366,\n+    ENDSYM = 367,\n+    MACROSYM = 368,\n+    LABELSYM = 369,\n+    SUBTABLESYM = 370\n   };\n #endif\n \n@@ -223,7 +225,7 @@ union YYSTYPE\n   FamilySymbol *famsym;\n   SpecificSymbol *specsym;\n \n-#line 212 \"src/decompile/cpp/slghparse.hh\" /* yacc.c:1909  */\n+#line 214 \"src/decompile/cpp/slghparse.hh\" /* yacc.c:1909  */\n };\n \n typedef union YYSTYPE YYSTYPE;"
  },
  {
    "sha": "b7eb86896159d496dcaeb27bce917ad9c962a7ac",
    "filename": "Ghidra/Features/Decompiler/src/decompile/cpp/slghparse.y",
    "status": "modified",
    "additions": 3,
    "deletions": 1,
    "changes": 4,
    "blob_url": "https://github.com/NationalSecurityAgency/ghidra/blob/703592e71c68520f45032673f3fd13bc5ac26798/Ghidra/Features/Decompiler/src/decompile/cpp/slghparse.y",
    "raw_url": "https://github.com/NationalSecurityAgency/ghidra/raw/703592e71c68520f45032673f3fd13bc5ac26798/Ghidra/Features/Decompiler/src/decompile/cpp/slghparse.y",
    "contents_url": "https://api.github.com/repos/NationalSecurityAgency/ghidra/contents/Ghidra/Features/Decompiler/src/decompile/cpp/slghparse.y?ref=703592e71c68520f45032673f3fd13bc5ac26798",
    "patch": "@@ -93,7 +93,7 @@\n %right '!' '~'\n %token OP_ZEXT OP_CARRY OP_BORROW OP_SEXT OP_SCARRY OP_SBORROW OP_NAN OP_ABS\n %token OP_SQRT OP_CEIL OP_FLOOR OP_ROUND OP_INT2FLOAT OP_FLOAT2FLOAT\n-%token OP_TRUNC OP_CPOOLREF OP_NEW OP_POPCOUNT\n+%token OP_TRUNC OP_CPOOLREF OP_NEW OP_POPCOUNT OP_COUNTLEADINGZEROS OP_COUNTLEADINGONES\n \n %token BADINTEGER GOTO_KEY CALL_KEY RETURN_KEY IF_KEY\n %token DEFINE_KEY ATTACH_KEY MACRO_KEY SPACE_KEY TYPE_KEY RAM_KEY DEFAULT_KEY\n@@ -442,6 +442,8 @@ expr: varnode { $$ = new ExprTree($1); }\n   | OP_NEW '(' expr ')'     { $$ = slgh->pcode.createOp(CPUI_NEW,$3); }\n   | OP_NEW '(' expr ',' expr ')' { $$ = slgh->pcode.createOp(CPUI_NEW,$3,$5); }\n   | OP_POPCOUNT '(' expr ')' { $$ = slgh->pcode.createOp(CPUI_POPCOUNT,$3); }\n+  | OP_COUNTLEADINGZEROS '(' expr ')' { $$ = slgh->pcode.createOp(CPUI_COUNTLEADINGZEROS,$3); }\n+  | OP_COUNTLEADINGONES '(' expr ')' { $$ = slgh->pcode.createOp(CPUI_COUNTLEADINGONES,$3); }\n   | specificsymbol '(' integervarnode ')' { $$ = slgh->pcode.createOp(CPUI_SUBPIECE,new ExprTree($1->getVarnode()),new ExprTree($3)); }\n   | specificsymbol ':' INTEGER\t{ $$ = slgh->pcode.createBitRange($1,0,(uint4)(*$3 * 8)); delete $3; }\n   | specificsymbol '[' INTEGER ',' INTEGER ']' { $$ = slgh->pcode.createBitRange($1,(uint4)*$3,(uint4)*$5); delete $3, delete $5; }"
  },
  {
    "sha": "4186c0017bb1606871e575501b85e56d3dcfbf59",
    "filename": "Ghidra/Features/Decompiler/src/decompile/cpp/slghscan.cc",
    "status": "modified",
    "additions": 636,
    "deletions": 600,
    "changes": 1236,
    "blob_url": "https://github.com/NationalSecurityAgency/ghidra/blob/703592e71c68520f45032673f3fd13bc5ac26798/Ghidra/Features/Decompiler/src/decompile/cpp/slghscan.cc",
    "raw_url": "https://github.com/NationalSecurityAgency/ghidra/raw/703592e71c68520f45032673f3fd13bc5ac26798/Ghidra/Features/Decompiler/src/decompile/cpp/slghscan.cc",
    "contents_url": "https://api.github.com/repos/NationalSecurityAgency/ghidra/contents/Ghidra/Features/Decompiler/src/decompile/cpp/slghscan.cc?ref=703592e71c68520f45032673f3fd13bc5ac26798",
    "patch": "@@ -13,18 +13,18 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-#line 2 \"src/decompile/cpp/slghscan.cc\"\n+#line 1 \"src/decompile/cpp/slghscan.cc\"\n \n-#line 4 \"src/decompile/cpp/slghscan.cc\"\n+#line 3 \"src/decompile/cpp/slghscan.cc\"\n \n #define  YY_INT_ALIGNED short int\n \n /* A lexical scanner generated by flex */\n \n #define FLEX_SCANNER\n #define YY_FLEX_MAJOR_VERSION 2\n-#define YY_FLEX_MINOR_VERSION 5\n-#define YY_FLEX_SUBMINOR_VERSION 37\n+#define YY_FLEX_MINOR_VERSION 6\n+#define YY_FLEX_SUBMINOR_VERSION 4\n #if YY_FLEX_SUBMINOR_VERSION > 0\n #define FLEX_BETA\n #endif\n@@ -99,65 +99,61 @@ typedef unsigned int flex_uint32_t;\n #define UINT32_MAX             (4294967295U)\n #endif\n \n+#ifndef SIZE_MAX\n+#define SIZE_MAX               (~(size_t)0)\n+#endif\n+\n #endif /* ! C99 */\n \n #endif /* ! FLEXINT_H */\n \n-#ifdef __cplusplus\n-\n-/* The \"const\" storage-class-modifier is valid. */\n-#define YY_USE_CONST\n-\n-#else\t/* ! __cplusplus */\n-\n-/* C99 requires __STDC__ to be defined as 1. */\n-#if defined (__STDC__)\n-\n-#define YY_USE_CONST\n+/* begin standard C++ headers. */\n \n-#endif\t/* defined (__STDC__) */\n-#endif\t/* ! __cplusplus */\n-\n-#ifdef YY_USE_CONST\n+/* TODO: this is always defined, so inline it */\n #define yyconst const\n+\n+#if defined(__GNUC__) && __GNUC__ >= 3\n+#define yynoreturn __attribute__((__noreturn__))\n #else\n-#define yyconst\n+#define yynoreturn\n #endif\n \n /* Returned upon end-of-file. */\n #define YY_NULL 0\n \n-/* Promotes a possibly negative, possibly signed char to an unsigned\n- * integer for use as an array index.  If the signed char is negative,\n- * we want to instead treat it as an 8-bit unsigned char, hence the\n- * double cast.\n+/* Promotes a possibly negative, possibly signed char to an\n+ *   integer in range [0..255] for use as an array index.\n  */\n-#define YY_SC_TO_UI(c) ((unsigned int) (unsigned char) c)\n+#define YY_SC_TO_UI(c) ((YY_CHAR) (c))\n \n /* Enter a start condition.  This macro really ought to take a parameter,\n  * but we do it the disgusting crufty way forced on us by the ()-less\n  * definition of BEGIN.\n  */\n #define BEGIN (yy_start) = 1 + 2 *\n-\n /* Translate the current start state into a value that can be later handed\n  * to BEGIN to return to the state.  The YYSTATE alias is for lex\n  * compatibility.\n  */\n #define YY_START (((yy_start) - 1) / 2)\n #define YYSTATE YY_START\n-\n /* Action number for EOF rule of a given start state. */\n #define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)\n-\n /* Special action meaning \"start processing a new file\". */\n-#define YY_NEW_FILE yyrestart(yyin  )\n-\n+#define YY_NEW_FILE yyrestart( yyin  )\n #define YY_END_OF_BUFFER_CHAR 0\n \n /* Size of default input buffer. */\n #ifndef YY_BUF_SIZE\n+#ifdef __ia64__\n+/* On IA-64, the buffer size is 16k, not 8k.\n+ * Moreover, YY_BUF_SIZE is 2*YY_READ_BUF_SIZE in the general case.\n+ * Ditto for the __ia64__ case accordingly.\n+ */\n+#define YY_BUF_SIZE 32768\n+#else\n #define YY_BUF_SIZE 16384\n+#endif /* __ia64__ */\n #endif\n \n /* The state buf must be large enough to hold one state per character in the main buffer.\n@@ -174,15 +170,16 @@ typedef struct yy_buffer_state *YY_BUFFER_STATE;\n typedef size_t yy_size_t;\n #endif\n \n-extern yy_size_t yyleng;\n+extern int yyleng;\n \n extern FILE *yyin, *yyout;\n \n #define EOB_ACT_CONTINUE_SCAN 0\n #define EOB_ACT_END_OF_FILE 1\n #define EOB_ACT_LAST_MATCH 2\n-\n+    \n     #define YY_LESS_LINENO(n)\n+    #define YY_LINENO_REWIND_TO(ptr)\n     \n /* Return all but the first \"n\" matched characters back to the input stream. */\n #define yyless(n) \\\n@@ -197,7 +194,6 @@ extern FILE *yyin, *yyout;\n \t\tYY_DO_BEFORE_ACTION; /* set up yytext again */ \\\n \t\t} \\\n \twhile ( 0 )\n-\n #define unput(c) yyunput( c, (yytext_ptr)  )\n \n #ifndef YY_STRUCT_YY_BUFFER_STATE\n@@ -212,12 +208,12 @@ struct yy_buffer_state\n \t/* Size of input buffer in bytes, not including room for EOB\n \t * characters.\n \t */\n-\tyy_size_t yy_buf_size;\n+\tint yy_buf_size;\n \n \t/* Number of characters read into yy_ch_buf, not including EOB\n \t * characters.\n \t */\n-\tyy_size_t yy_n_chars;\n+\tint yy_n_chars;\n \n \t/* Whether we \"own\" the buffer - i.e., we know we created it,\n \t * and can realloc() it to grow it, and should free() it to\n@@ -240,7 +236,7 @@ struct yy_buffer_state\n \n     int yy_bs_lineno; /**< The line count. */\n     int yy_bs_column; /**< The column count. */\n-    \n+\n \t/* Whether to try to fill the input buffer when we reach the\n \t * end of it.\n \t */\n@@ -268,7 +264,7 @@ struct yy_buffer_state\n /* Stack of input buffers. */\n static size_t yy_buffer_stack_top = 0; /**< index of top of stack. */\n static size_t yy_buffer_stack_max = 0; /**< capacity of stack. */\n-static YY_BUFFER_STATE * yy_buffer_stack = 0; /**< Stack as an array. */\n+static YY_BUFFER_STATE * yy_buffer_stack = NULL; /**< Stack as an array. */\n \n /* We provide macros for accessing buffer states in case in the\n  * future we want to put the buffer states in a more general\n@@ -279,19 +275,18 @@ static YY_BUFFER_STATE * yy_buffer_stack = 0; /**< Stack as an array. */\n #define YY_CURRENT_BUFFER ( (yy_buffer_stack) \\\n                           ? (yy_buffer_stack)[(yy_buffer_stack_top)] \\\n                           : NULL)\n-\n /* Same as previous macro, but useful when we know that the buffer stack is not\n  * NULL or when we need an lvalue. For internal use only.\n  */\n #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]\n \n /* yy_hold_char holds the character lost when yytext is formed. */\n static char yy_hold_char;\n-static yy_size_t yy_n_chars;\t\t/* number of characters read into yy_ch_buf */\n-yy_size_t yyleng;\n+static int yy_n_chars;\t\t/* number of characters read into yy_ch_buf */\n+int yyleng;\n \n /* Points to current character in buffer. */\n-static char *yy_c_buf_p = (char *) 0;\n+static char *yy_c_buf_p = NULL;\n static int yy_init = 0;\t\t/* whether we need to initialize */\n static int yy_start = 0;\t/* start state number */\n \n@@ -300,152 +295,151 @@ static int yy_start = 0;\t/* start state number */\n  */\n static int yy_did_buffer_switch_on_eof;\n \n-void yyrestart (FILE *input_file  );\n-void yy_switch_to_buffer (YY_BUFFER_STATE new_buffer  );\n-YY_BUFFER_STATE yy_create_buffer (FILE *file,int size  );\n-void yy_delete_buffer (YY_BUFFER_STATE b  );\n-void yy_flush_buffer (YY_BUFFER_STATE b  );\n-void yypush_buffer_state (YY_BUFFER_STATE new_buffer  );\n-void yypop_buffer_state (void );\n+void yyrestart ( FILE *input_file  );\n+void yy_switch_to_buffer ( YY_BUFFER_STATE new_buffer  );\n+YY_BUFFER_STATE yy_create_buffer ( FILE *file, int size  );\n+void yy_delete_buffer ( YY_BUFFER_STATE b  );\n+void yy_flush_buffer ( YY_BUFFER_STATE b  );\n+void yypush_buffer_state ( YY_BUFFER_STATE new_buffer  );\n+void yypop_buffer_state ( void );\n \n-static void yyensure_buffer_stack (void );\n-static void yy_load_buffer_state (void );\n-static void yy_init_buffer (YY_BUFFER_STATE b,FILE *file  );\n+static void yyensure_buffer_stack ( void );\n+static void yy_load_buffer_state ( void );\n+static void yy_init_buffer ( YY_BUFFER_STATE b, FILE *file  );\n+#define YY_FLUSH_BUFFER yy_flush_buffer( YY_CURRENT_BUFFER )\n \n-#define YY_FLUSH_BUFFER yy_flush_buffer(YY_CURRENT_BUFFER )\n+YY_BUFFER_STATE yy_scan_buffer ( char *base, yy_size_t size  );\n+YY_BUFFER_STATE yy_scan_string ( const char *yy_str  );\n+YY_BUFFER_STATE yy_scan_bytes ( const char *bytes, int len  );\n \n-YY_BUFFER_STATE yy_scan_buffer (char *base,yy_size_t size  );\n-YY_BUFFER_STATE yy_scan_string (yyconst char *yy_str  );\n-YY_BUFFER_STATE yy_scan_bytes (yyconst char *bytes,yy_size_t len  );\n-\n-void *yyalloc (yy_size_t  );\n-void *yyrealloc (void *,yy_size_t  );\n-void yyfree (void *  );\n+void *yyalloc ( yy_size_t  );\n+void *yyrealloc ( void *, yy_size_t  );\n+void yyfree ( void *  );\n \n #define yy_new_buffer yy_create_buffer\n-\n #define yy_set_interactive(is_interactive) \\\n \t{ \\\n \tif ( ! YY_CURRENT_BUFFER ){ \\\n         yyensure_buffer_stack (); \\\n \t\tYY_CURRENT_BUFFER_LVALUE =    \\\n-            yy_create_buffer(yyin,YY_BUF_SIZE ); \\\n+            yy_create_buffer( yyin, YY_BUF_SIZE ); \\\n \t} \\\n \tYY_CURRENT_BUFFER_LVALUE->yy_is_interactive = is_interactive; \\\n \t}\n-\n #define yy_set_bol(at_bol) \\\n \t{ \\\n \tif ( ! YY_CURRENT_BUFFER ){\\\n         yyensure_buffer_stack (); \\\n \t\tYY_CURRENT_BUFFER_LVALUE =    \\\n-            yy_create_buffer(yyin,YY_BUF_SIZE ); \\\n+            yy_create_buffer( yyin, YY_BUF_SIZE ); \\\n \t} \\\n \tYY_CURRENT_BUFFER_LVALUE->yy_at_bol = at_bol; \\\n \t}\n-\n #define YY_AT_BOL() (YY_CURRENT_BUFFER_LVALUE->yy_at_bol)\n \n-typedef unsigned char YY_CHAR;\n+typedef flex_uint8_t YY_CHAR;\n \n-FILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;\n+FILE *yyin = NULL, *yyout = NULL;\n \n typedef int yy_state_type;\n \n extern int yylineno;\n-\n int yylineno = 1;\n \n extern char *yytext;\n+#ifdef yytext_ptr\n+#undef yytext_ptr\n+#endif\n #define yytext_ptr yytext\n \n-static yy_state_type yy_get_previous_state (void );\n-static yy_state_type yy_try_NUL_trans (yy_state_type current_state  );\n-static int yy_get_next_buffer (void );\n-static void yy_fatal_error (yyconst char msg[]  );\n+static yy_state_type yy_get_previous_state ( void );\n+static yy_state_type yy_try_NUL_trans ( yy_state_type current_state  );\n+static int yy_get_next_buffer ( void );\n+static void yynoreturn yy_fatal_error ( const char* msg  );\n \n /* Done after the current pattern has been matched and before the\n  * corresponding action - sets up yytext.\n  */\n #define YY_DO_BEFORE_ACTION \\\n \t(yytext_ptr) = yy_bp; \\\n-\tyyleng = (size_t) (yy_cp - yy_bp); \\\n+\tyyleng = (int) (yy_cp - yy_bp); \\\n \t(yy_hold_char) = *yy_cp; \\\n \t*yy_cp = '\\0'; \\\n \t(yy_c_buf_p) = yy_cp;\n-\n-#define YY_NUM_RULES 164\n-#define YY_END_OF_BUFFER 165\n+#define YY_NUM_RULES 166\n+#define YY_END_OF_BUFFER 167\n /* This struct is not used in this scanner,\n    but its presence is necessary. */\n struct yy_trans_info\n \t{\n \tflex_int32_t yy_verify;\n \tflex_int32_t yy_nxt;\n \t};\n-static yyconst flex_int16_t yy_accept[527] =\n+static const flex_int16_t yy_accept[547] =\n     {   0,\n         0,    0,    0,    0,    0,    0,    0,    0,    0,    0,\n-        0,    0,    0,    0,  165,   14,    7,    8,    6,   14,\n+        0,    0,    0,    0,  167,   14,    7,    8,    6,   14,\n         3,   13,    4,   13,   13,   13,   13,    5,    1,   58,\n        56,   57,   58,   50,   58,   25,   51,   52,   52,   26,\n        51,   51,   51,   51,   51,   51,   51,   51,   51,   51,\n        51,   51,   51,   51,   51,   23,   22,   20,   21,   22,\n        17,   19,   18,   15,   68,   66,   67,   61,   68,   61,\n        64,   62,   64,   59,   96,   94,   95,   96,   89,   96,\n        85,   88,   90,   91,   91,   88,   88,   90,   83,   84,\n-       87,   90,   90,   71,   86,   69,  161,  159,  160,  153,\n+       87,   90,   90,   71,   86,   69,  163,  161,  162,  155,\n \n-      154,  161,  153,  153,  155,  156,  156,  153,  153,  153,\n-      153,  155,  155,  155,  155,  155,  155,  155,  155,  155,\n-      155,  155,  155,  155,  155,  155,  153,   99,   97,  164,\n-      164,  163,  162,    7,    6,    0,   13,   13,   13,   13,\n+      156,  163,  155,  155,  157,  158,  158,  155,  155,  155,\n+      155,  157,  157,  157,  157,  157,  157,  157,  157,  157,\n+      157,  157,  157,  157,  157,  157,  155,   99,   97,  166,\n+      166,  165,  164,    7,    6,    0,   13,   13,   13,   13,\n        13,    1,    1,   56,    0,   55,   50,    0,   51,    0,\n         0,   52,   51,   51,   51,   51,   51,   51,   51,   51,\n        51,   51,   51,   51,   51,   51,   51,   51,   51,   51,\n        51,   23,   23,   20,    0,   19,   15,   15,   66,    0,\n        65,    0,   64,   63,   59,   59,   94,   76,   89,    0,\n         0,    0,    0,   90,   90,    0,    0,   91,   75,   77,\n \n-       78,   74,   90,   90,   69,   69,  159,  106,  154,    0,\n-      101,  155,    0,    0,  156,  104,  107,  105,  108,  103,\n-      102,  155,  155,  155,  155,  155,  155,  155,  155,  155,\n-        0,  118,  116,  117,  119,  122,    0,  123,  155,  155,\n-      144,  155,  155,  155,  155,  155,  155,  155,  110,  109,\n-      112,  113,  155,  155,  155,  155,  155,  155,  100,   97,\n-       97,    0,  163,  162,  162,    0,   13,   13,   13,   13,\n-        0,   54,   53,   51,   41,   51,   51,   38,   51,   51,\n-       37,   51,   51,   51,   51,   51,   51,   51,   51,   51,\n-       51,   51,   51,   51,   51,   51,    0,    0,    0,    0,\n-\n-       80,    0,   82,   93,   92,   90,   90,    0,  158,  157,\n-      133,  155,  155,  155,  155,  155,  155,  155,  155,  155,\n-      121,  124,  120,  125,  155,  155,  155,  155,  132,  155,\n-      155,  155,  155,  114,  115,  111,  155,  155,  155,  155,\n-      155,  155,    2,    0,   13,   13,   13,   12,   24,    0,\n-       51,   51,   51,   51,   51,   51,   51,   51,   51,   51,\n-       51,   51,   51,   43,   51,   51,   28,   51,   51,   51,\n-       16,    0,   60,    0,   70,    0,   79,   81,   90,   90,\n-       98,    0,  155,  155,  146,  155,  135,  155,  155,  155,\n-      155,  155,  155,  145,  155,  155,  155,  155,  155,  155,\n-\n-      155,  155,  129,  134,  155,  126,   13,   13,    9,   51,\n-       51,   51,   51,   51,   51,   46,   51,   51,   51,   51,\n-       51,   51,   27,   32,   51,   51,   51,   90,   90,  155,\n-      151,  127,  141,  155,  155,  155,  155,  136,  155,  152,\n-      155,  155,  155,  137,  155,  155,  140,   11,   10,   51,\n-       51,   51,   51,   39,   42,   36,   45,   51,   51,   51,\n-       35,   47,   51,   51,   90,   72,  128,  155,  155,  150,\n-      155,  155,  155,  155,  147,  155,  130,   51,   51,   33,\n-       30,   49,   51,   51,   51,   51,   90,  155,  155,  155,\n-      155,  155,  155,  131,   51,   34,   51,   51,   51,   44,\n-\n-       90,  155,  155,  155,  155,  155,  143,   40,   29,   51,\n-       48,   73,  155,  148,  155,  138,  142,   51,  149,  155,\n-       51,  139,   51,   51,   31,    0\n+       78,   74,   90,   90,   69,   69,  161,  106,  156,    0,\n+      101,  157,    0,    0,  158,  104,  107,  105,  108,  103,\n+      102,  157,  157,  157,  157,  157,  157,  157,  157,  157,\n+      157,    0,  118,  116,  117,  119,  122,    0,  123,  157,\n+      157,  146,  157,  157,  157,  157,  157,  157,  157,  110,\n+      109,  112,  113,  157,  157,  157,  157,  157,  157,  100,\n+       97,   97,    0,  165,  164,  164,    0,   13,   13,   13,\n+       13,    0,   54,   53,   51,   41,   51,   51,   38,   51,\n+       51,   37,   51,   51,   51,   51,   51,   51,   51,   51,\n+       51,   51,   51,   51,   51,   51,   51,    0,    0,    0,\n+\n+        0,   80,    0,   82,   93,   92,   90,   90,    0,  160,\n+      159,  133,  157,  157,  157,  157,  157,  157,  157,  157,\n+      157,  157,  121,  124,  120,  125,  157,  157,  157,  157,\n+      132,  157,  157,  157,  157,  114,  115,  111,  157,  157,\n+      157,  157,  157,  157,    2,    0,   13,   13,   13,   12,\n+       24,    0,   51,   51,   51,   51,   51,   51,   51,   51,\n+       51,   51,   51,   51,   51,   43,   51,   51,   28,   51,\n+       51,   51,   16,    0,   60,    0,   70,    0,   79,   81,\n+       90,   90,   98,    0,  157,  157,  148,  157,  135,  157,\n+      157,  157,  157,  157,  157,  157,  147,  157,  157,  157,\n+\n+      157,  157,  157,  157,  157,  129,  134,  157,  126,   13,\n+       13,    9,   51,   51,   51,   51,   51,   51,   46,   51,\n+       51,   51,   51,   51,   51,   27,   32,   51,   51,   51,\n+       90,   90,  157,  153,  127,  157,  141,  157,  157,  157,\n+      157,  136,  157,  154,  157,  157,  157,  137,  157,  157,\n+      140,   11,   10,   51,   51,   51,   51,   39,   42,   36,\n+       45,   51,   51,   51,   35,   47,   51,   51,   90,   72,\n+      128,  157,  157,  157,  152,  157,  157,  157,  157,  149,\n+      157,  130,   51,   51,   33,   30,   49,   51,   51,   51,\n+       51,   90,  157,  157,  157,  157,  157,  157,  157,  131,\n+\n+       51,   34,   51,   51,   51,   44,   90,  157,  157,  157,\n+      157,  157,  157,  143,   40,   29,   51,   48,   73,  157,\n+      157,  150,  157,  138,  142,   51,  157,  151,  157,   51,\n+      157,  139,   51,  157,   51,  157,  157,   31,  157,  157,\n+      157,  157,  145,  157,  144,    0\n     } ;\n \n-static yyconst flex_int32_t yy_ec[256] =\n+static const YY_CHAR yy_ec[256] =\n     {   0,\n         1,    1,    1,    1,    1,    1,    1,    1,    2,    3,\n         2,    1,    2,    1,    1,    1,    1,    1,    1,    1,\n@@ -454,13 +448,13 @@ static yyconst flex_int32_t yy_ec[256] =\n        11,   12,   13,   14,   15,   16,   17,   18,   19,   20,\n        21,   21,   21,   21,   21,   21,   21,   22,   23,   24,\n        25,   26,   27,   28,   29,   29,   29,   29,   29,   29,\n-       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,\n-       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,\n-       31,    1,   32,   33,   34,    1,   35,   36,   37,   38,\n+       30,   30,   30,   30,   30,   31,   30,   30,   32,   30,\n+       30,   30,   30,   30,   30,   30,   30,   30,   30,   33,\n+       34,    1,   35,   36,   37,    1,   38,   39,   40,   41,\n \n-       39,   40,   41,   42,   43,   44,   45,   46,   47,   48,\n-       49,   50,   51,   52,   53,   54,   55,   56,   57,   58,\n-       59,   60,   61,   62,   63,   64,    1,    1,    1,    1,\n+       42,   43,   44,   45,   46,   47,   48,   49,   50,   51,\n+       52,   53,   54,   55,   56,   57,   58,   59,   60,   61,\n+       62,   63,   64,   65,   66,   67,    1,    1,    1,    1,\n         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,\n         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,\n         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,\n@@ -477,371 +471,387 @@ static yyconst flex_int32_t yy_ec[256] =\n         1,    1,    1,    1,    1\n     } ;\n \n-static yyconst flex_int32_t yy_meta[65] =\n+static const YY_CHAR yy_meta[68] =\n     {   0,\n         1,    1,    2,    1,    1,    1,    1,    1,    1,    1,\n         3,    1,    1,    1,    1,    4,    1,    5,    5,    5,\n         5,    1,    1,    1,    1,    1,    1,    1,    5,    4,\n-        1,    1,    1,    4,    5,    5,    5,    5,    5,    5,\n+        4,    4,    4,    1,    1,    1,    4,    5,    5,    5,\n+        5,    5,    5,    4,    4,    4,    4,    4,    4,    4,\n         4,    4,    4,    4,    4,    4,    4,    4,    4,    4,\n-        4,    4,    4,    4,    4,    4,    4,    4,    4,    4,\n-        1,    1,    1,    1\n+        4,    4,    4,    1,    1,    1,    1\n     } ;\n \n-static yyconst flex_int16_t yy_base[564] =\n+static const flex_int16_t yy_base[584] =\n     {   0,\n-        0,  897,   64,  896,  128,  895,  192,  894,  256,  893,\n-      320,  892,    0,  382,  919,  926,  916,  926,    0,  907,\n-      926,    0,  926,  862,  876,  879,  870,  926,  909,  926,\n-      909,  926,  905,    0,  899,  926,    0,  350,  369,  926,\n-      862,  864,  857,  866,  856,  864,  859,  356,  861,  863,\n-      357,  350,  345,  864,  849,  894,  926,  894,  926,  885,\n-      926,    0,  926,  891,  926,  891,  926,  926,  887,  881,\n-        0,  926,  837,  886,  926,  886,  926,  862,    0,  385,\n-      926,  926,  870,  361,  393,  374,  376,    0,  926,  926,\n-      926,  839,  836,  926,  926,  880,  926,  880,  926,  856,\n-\n-        0,  870,  926,  870,    0,  367,  397,  382,  853,  396,\n-      844,  840,  374,  389,  836,  816,  423,  824,  397,  823,\n-      391,  822,  393,  436,  818,  830,  806,  926,  864,  926,\n-      863,  926,  862,  862,    0,    0,    0,  809,  822,  824,\n-      806,  856,  926,  856,  852,  851,    0,    0,    0,  432,\n-        0,  436,  812,  392,  806,  421,  815,  794,  797,  803,\n-      809,  808,  798,  799,  804,  411,  809,  798,  792,  413,\n-      789,  837,  926,  837,    0,    0,  835,  926,  835,  831,\n-      830,    0,    0,    0,  831,  926,  831,  926,    0,    0,\n-      784,  779,  781,  813,    0,  445,    0,  458,  926,  926,\n-\n-      926,  926,  779,  784,  823,  926,  823,  926,    0,    0,\n-      926,    0,  448,    0,  462,  926,  926,  926,  926,  926,\n-      926,  771,  771,  779,  422,  778,  771,  770,  772,  767,\n-      791,  926,  926,  926,  926,  790,  789,  788,  763,  757,\n-        0,  756,  772,  760,  750,  756,  751,  749,  926,  926,\n-      778,  459,  753,  766,  742,  747,  743,  739,  926,  793,\n-      926,  792,  926,  791,  926,  782,  757,  748,  738,  747,\n-      777,  470,    0,  746,    0,  734,  731,    0,  749,  740,\n-        0,  728,  742,  734,  726,  740,  743,  733,  727,  735,\n-      736,  733,  732,  715,  726,  730,  756,  755,  754,  726,\n-\n-      926,  711,    0,  472,    0,  726,  714,  749,  474,    0,\n-        0,  707,  712,  711,  704,  709,  705,  700,  717,  702,\n-      926,  926,  926,  926,  451,  701,  729,  713,    0,  698,\n-      709,  690,  696,  926,  926,  926,  691,  690,  687,  686,\n-      691,  684,  926,  726,  699,  687,  685,    0,  926,  722,\n-      684,  696,  691,  674,  693,  681,  673,  676,  685,  684,\n-      669,  668,  681,    0,  680,  670,    0,  678,  681,  662,\n-      926,  703,  926,  702,  926,  701,  926,  926,  676,  660,\n-      926,  698,  659,  669,    0,  647,    0,  659,  651,  644,\n-      650,  647,  648,    0,  659,  652,  661,  647,  643,  656,\n-\n-      641,  640,    0,    0,  654,    0,  648,  650,    0,  641,\n-      639,  628,  639,  636,  644,    0,  625,  627,  631,  629,\n-      624,  639,    0,    0,  623,  639,  631,  627,  626,  614,\n-        0,    0,    0,  634,  616,  614,  647,    0,  620,    0,\n-      621,  609,  615,    0,  613,  602,    0,    0,    0,  621,\n-      618,  604,  603,    0,    0,    0,    0,  606,  620,  615,\n-        0,    0,  607,  592,  598,    0,    0,  595,  603,    0,\n-      608,  598,  607,  597,    0,  587,    0,  595,  603,    0,\n-        0,    0,  604,  588,  600,  599,  598,  593,  586,  588,\n-      598,  595,  577,    0,  576,    0,  590,  594,  574,    0,\n-\n-      572,  579,  570,  574,  518,  506,    0,    0,    0,  476,\n-        0,    0,  474,    0,  464,    0,    0,  448,    0,  443,\n-      461,    0,  458,  455,    0,  926,  500,  505,  510,  512,\n-      517,  522,  527,  529,  534,  536,  541,  546,  548,  553,\n-      558,  560,  565,  570,  572,  577,  582,  587,  589,  591,\n-      465,  593,  595,  597,  426,  599,  404,  602,  605,  608,\n-      611,  614,  617\n+        0,  935,   67,  934,  134,  933,  201,  932,  268,  931,\n+      335,  930,    0,  400,  957,  964,  954,  964,    0,  945,\n+      964,    0,  964,  897,  911,  914,  905,  964,  947,  964,\n+      947,  964,  943,    0,  937,  964,    0,  365,  387,  964,\n+      897,  899,  892,  901,  891,  899,  894,  371,  896,  898,\n+      372,  365,  360,  899,  884,  932,  964,  932,  964,  923,\n+      964,    0,  964,  929,  964,  929,  964,  964,  925,  919,\n+        0,  964,  872,  924,  964,  924,  964,  900,    0,  403,\n+      964,  964,  908,  376,  411,  392,  394,    0,  964,  964,\n+      964,  874,  871,  964,  964,  918,  964,  918,  964,  894,\n+\n+        0,  908,  964,  908,    0,  382,  415,  400,  891,  413,\n+      879,  875,  388,  406,  871,  851,  450,  859,  399,  858,\n+      407,  857,  405,  461,  853,  865,  841,  964,  902,  964,\n+      901,  964,  900,  900,    0,    0,    0,  844,  857,  859,\n+      841,  894,  964,  894,  890,  889,    0,    0,    0,  433,\n+        0,  452,  847,  409,  841,  437,  850,  829,  832,  838,\n+      844,  843,  833,  834,  839,  416,  844,  833,  827,  433,\n+      824,  875,  964,  875,    0,    0,  873,  964,  873,  869,\n+      868,    0,    0,    0,  869,  964,  869,  964,    0,    0,\n+      819,  814,  816,  851,    0,  465,    0,  471,  964,  964,\n+\n+      964,  964,  814,  819,  861,  964,  861,  964,    0,    0,\n+      964,    0,  475,    0,  477,  964,  964,  964,  964,  964,\n+      964,  806,  806,  814,  453,  813,  800,  805,  804,  806,\n+      801,  828,  964,  964,  964,  964,  827,  826,  825,  797,\n+      791,    0,  790,  806,  794,  784,  790,  785,  783,  964,\n+      964,  815,  479,  787,  800,  776,  781,  777,  773,  964,\n+      830,  964,  829,  964,  828,  964,  819,  791,  782,  772,\n+      781,  814,  488,    0,  780,    0,  768,  765,    0,  783,\n+      774,    0,  762,  776,  768,  760,  774,  777,  767,  761,\n+      769,  770,  767,  766,  749,  760,  764,  793,  792,  791,\n+\n+      760,  964,  745,    0,  491,    0,  760,  748,  786,  493,\n+        0,    0,  741,  746,  745,  738,  743,  740,  738,  733,\n+      750,  735,  964,  964,  964,  964,  475,  734,  765,  746,\n+        0,  731,  742,  723,  729,  964,  964,  964,  724,  723,\n+      720,  719,  724,  717,  964,  762,  732,  720,  718,    0,\n+      964,  758,  717,  729,  724,  707,  726,  714,  706,  709,\n+      718,  717,  702,  701,  714,    0,  713,  703,    0,  711,\n+      714,  695,  964,  739,  964,  738,  964,  737,  964,  964,\n+      709,  693,  964,  734,  692,  702,    0,  680,    0,  684,\n+      691,  683,  676,  682,  679,  680,    0,  691,  684,  693,\n+\n+      679,  675,  688,  673,  672,    0,    0,  686,    0,  680,\n+      682,    0,  673,  671,  660,  671,  668,  676,    0,  657,\n+      659,  663,  661,  656,  671,    0,    0,  655,  671,  663,\n+      659,  658,  646,    0,    0,  674,    0,  665,  647,  645,\n+      681,    0,  651,    0,  652,  640,  646,    0,  644,  633,\n+        0,    0,    0,  652,  649,  635,  634,    0,    0,    0,\n+        0,  637,  651,  646,    0,    0,  638,  623,  629,    0,\n+        0,  642,  625,  633,    0,  638,  628,  637,  627,    0,\n+      617,    0,  625,  633,    0,    0,    0,  634,  618,  630,\n+      629,  628,  631,  622,  615,  617,  627,  624,  606,    0,\n+\n+      605,    0,  619,  623,  603,    0,  601,  616,  607,  598,\n+      602,  596,  595,    0,    0,    0,  595,    0,    0,  604,\n+      558,    0,  549,    0,    0,  503,  488,    0,  469,  487,\n+      480,    0,  483,  484,  480,  470,  478,    0,  477,  463,\n+      458,  434,    0,  425,    0,  964,  527,  532,  537,  539,\n+      544,  549,  554,  556,  561,  563,  568,  573,  575,  580,\n+      585,  587,  592,  597,  599,  604,  609,  614,  616,  618,\n+      463,  620,  622,  624,  451,  626,  422,  629,  632,  635,\n+      638,  641,  644\n     } ;\n \n-static yyconst flex_int16_t yy_def[564] =\n+static const flex_int16_t yy_def[584] =\n     {   0,\n-      526,    1,  526,    3,  526,    5,  526,    7,  526,    9,\n-      526,   11,  527,  528,  526,  526,  526,  526,  529,  526,\n-      526,  530,  526,  530,  530,  530,  530,  526,  531,  526,\n-      526,  526,  532,  533,  526,  526,  534,  526,  526,  526,\n-      534,  534,  534,  534,  534,  534,  534,  534,  534,  534,\n-      534,  534,  534,  534,  534,  535,  526,  526,  526,  526,\n-      526,  536,  526,  537,  526,  526,  526,  526,  538,  526,\n-      539,  526,  539,  540,  526,  526,  526,  526,  541,  526,\n-      526,  526,  542,  526,  526,  526,  526,  542,  526,  526,\n-      526,  542,  542,  526,  526,  543,  526,  526,  526,  526,\n-\n-      544,  526,  526,  526,  545,  526,  526,  526,  526,  526,\n-      526,  545,  545,  545,  545,  545,  545,  545,  545,  545,\n-      545,  545,  545,  545,  545,  545,  526,  526,  546,  526,\n-      547,  526,  548,  526,  529,  549,  530,  530,  530,  530,\n-      530,  531,  526,  526,  532,  526,  533,  550,  534,  526,\n-      551,  526,  534,  534,  534,  534,  534,  534,  534,  534,\n-      534,  534,  534,  534,  534,  534,  534,  534,  534,  534,\n-      534,  535,  526,  526,  552,  536,  537,  526,  526,  538,\n-      526,  553,  539,  539,  540,  526,  526,  526,  541,  554,\n-      526,  526,  526,  542,  542,  526,  555,  526,  526,  526,\n-\n-      526,  526,  542,  542,  543,  526,  526,  526,  544,  556,\n-      526,  545,  526,  557,  526,  526,  526,  526,  526,  526,\n-      526,  545,  545,  545,  545,  545,  545,  545,  545,  545,\n-      526,  526,  526,  526,  526,  526,  526,  526,  545,  545,\n-      545,  545,  545,  545,  545,  545,  545,  545,  526,  526,\n-      526,  526,  545,  545,  545,  545,  545,  545,  526,  546,\n-      526,  547,  526,  548,  526,  558,  530,  530,  530,  530,\n-      559,  526,  551,  534,  534,  534,  534,  534,  534,  534,\n-      534,  534,  534,  534,  534,  534,  534,  534,  534,  534,\n-      534,  534,  534,  534,  534,  534,  560,  561,  562,  526,\n-\n-      526,  526,  542,  526,  555,  542,  542,  563,  526,  557,\n-      545,  545,  545,  545,  545,  545,  545,  545,  545,  545,\n-      526,  526,  526,  526,  545,  545,  545,  545,  545,  545,\n-      545,  545,  545,  526,  526,  526,  545,  545,  545,  545,\n-      545,  545,  526,  558,  530,  530,  530,  530,  526,  559,\n-      534,  534,  534,  534,  534,  534,  534,  534,  534,  534,\n-      534,  534,  534,  534,  534,  534,  534,  534,  534,  534,\n-      526,  560,  526,  561,  526,  562,  526,  526,  542,  542,\n-      526,  563,  545,  545,  545,  545,  545,  545,  545,  545,\n-      545,  545,  545,  545,  545,  545,  545,  545,  545,  545,\n-\n-      545,  545,  545,  545,  545,  545,  530,  530,  530,  534,\n-      534,  534,  534,  534,  534,  534,  534,  534,  534,  534,\n-      534,  534,  534,  534,  534,  534,  534,  542,  542,  545,\n-      545,  545,  545,  545,  545,  545,  545,  545,  545,  545,\n-      545,  545,  545,  545,  545,  545,  545,  530,  530,  534,\n-      534,  534,  534,  534,  534,  534,  534,  534,  534,  534,\n-      534,  534,  534,  534,  542,  542,  545,  545,  545,  545,\n-      545,  545,  545,  545,  545,  545,  545,  534,  534,  534,\n-      534,  534,  534,  534,  534,  534,  542,  545,  545,  545,\n-      545,  545,  545,  545,  534,  534,  534,  534,  534,  534,\n-\n-      542,  545,  545,  545,  545,  545,  545,  534,  534,  534,\n-      534,  542,  545,  545,  545,  545,  545,  534,  545,  545,\n-      534,  545,  534,  534,  534,    0,  526,  526,  526,  526,\n-      526,  526,  526,  526,  526,  526,  526,  526,  526,  526,\n-      526,  526,  526,  526,  526,  526,  526,  526,  526,  526,\n-      526,  526,  526,  526,  526,  526,  526,  526,  526,  526,\n-      526,  526,  526\n+      546,    1,  546,    3,  546,    5,  546,    7,  546,    9,\n+      546,   11,  547,  548,  546,  546,  546,  546,  549,  546,\n+      546,  550,  546,  550,  550,  550,  550,  546,  551,  546,\n+      546,  546,  552,  553,  546,  546,  554,  546,  546,  546,\n+      554,  554,  554,  554,  554,  554,  554,  554,  554,  554,\n+      554,  554,  554,  554,  554,  555,  546,  546,  546,  546,\n+      546,  556,  546,  557,  546,  546,  546,  546,  558,  546,\n+      559,  546,  559,  560,  546,  546,  546,  546,  561,  546,\n+      546,  546,  562,  546,  546,  546,  546,  562,  546,  546,\n+      546,  562,  562,  546,  546,  563,  546,  546,  546,  546,\n+\n+      564,  546,  546,  546,  565,  546,  546,  546,  546,  546,\n+      546,  565,  565,  565,  565,  565,  565,  565,  565,  565,\n+      565,  565,  565,  565,  565,  565,  546,  546,  566,  546,\n+      567,  546,  568,  546,  549,  569,  550,  550,  550,  550,\n+      550,  551,  546,  546,  552,  546,  553,  570,  554,  546,\n+      571,  546,  554,  554,  554,  554,  554,  554,  554,  554,\n+      554,  554,  554,  554,  554,  554,  554,  554,  554,  554,\n+      554,  555,  546,  546,  572,  556,  557,  546,  546,  558,\n+      546,  573,  559,  559,  560,  546,  546,  546,  561,  574,\n+      546,  546,  546,  562,  562,  546,  575,  546,  546,  546,\n+\n+      546,  546,  562,  562,  563,  546,  546,  546,  564,  576,\n+      546,  565,  546,  577,  546,  546,  546,  546,  546,  546,\n+      546,  565,  565,  565,  565,  565,  565,  565,  565,  565,\n+      565,  546,  546,  546,  546,  546,  546,  546,  546,  565,\n+      565,  565,  565,  565,  565,  565,  565,  565,  565,  546,\n+      546,  546,  546,  565,  565,  565,  565,  565,  565,  546,\n+      566,  546,  567,  546,  568,  546,  578,  550,  550,  550,\n+      550,  579,  546,  571,  554,  554,  554,  554,  554,  554,\n+      554,  554,  554,  554,  554,  554,  554,  554,  554,  554,\n+      554,  554,  554,  554,  554,  554,  554,  580,  581,  582,\n+\n+      546,  546,  546,  562,  546,  575,  562,  562,  583,  546,\n+      577,  565,  565,  565,  565,  565,  565,  565,  565,  565,\n+      565,  565,  546,  546,  546,  546,  565,  565,  565,  565,\n+      565,  565,  565,  565,  565,  546,  546,  546,  565,  565,\n+      565,  565,  565,  565,  546,  578,  550,  550,  550,  550,\n+      546,  579,  554,  554,  554,  554,  554,  554,  554,  554,\n+      554,  554,  554,  554,  554,  554,  554,  554,  554,  554,\n+      554,  554,  546,  580,  546,  581,  546,  582,  546,  546,\n+      562,  562,  546,  583,  565,  565,  565,  565,  565,  565,\n+      565,  565,  565,  565,  565,  565,  565,  565,  565,  565,\n+\n+      565,  565,  565,  565,  565,  565,  565,  565,  565,  550,\n+      550,  550,  554,  554,  554,  554,  554,  554,  554,  554,\n+      554,  554,  554,  554,  554,  554,  554,  554,  554,  554,\n+      562,  562,  565,  565,  565,  565,  565,  565,  565,  565,\n+      565,  565,  565,  565,  565,  565,  565,  565,  565,  565,\n+      565,  550,  550,  554,  554,  554,  554,  554,  554,  554,\n+      554,  554,  554,  554,  554,  554,  554,  554,  562,  562,\n+      565,  565,  565,  565,  565,  565,  565,  565,  565,  565,\n+      565,  565,  554,  554,  554,  554,  554,  554,  554,  554,\n+      554,  562,  565,  565,  565,  565,  565,  565,  565,  565,\n+\n+      554,  554,  554,  554,  554,  554,  562,  565,  565,  565,\n+      565,  565,  565,  565,  554,  554,  554,  554,  562,  565,\n+      565,  565,  565,  565,  565,  554,  565,  565,  565,  554,\n+      565,  565,  554,  565,  554,  565,  565,  554,  565,  565,\n+      565,  565,  565,  565,  565,    0,  546,  546,  546,  546,\n+      546,  546,  546,  546,  546,  546,  546,  546,  546,  546,\n+      546,  546,  546,  546,  546,  546,  546,  546,  546,  546,\n+      546,  546,  546,  546,  546,  546,  546,  546,  546,  546,\n+      546,  546,  546\n     } ;\n \n-static yyconst flex_int16_t yy_nxt[991] =\n+static const flex_int16_t yy_nxt[1032] =\n     {   0,\n        16,   17,   18,   16,   16,   19,   20,   16,   16,   21,\n        21,   16,   16,   21,   21,   22,   16,   16,   16,   16,\n        16,   23,   16,   16,   16,   16,   16,   16,   22,   22,\n-       16,   16,   16,   22,   24,   22,   22,   25,   22,   22,\n-       22,   22,   22,   22,   22,   22,   26,   22,   22,   22,\n-       22,   22,   22,   22,   22,   22,   27,   22,   22,   22,\n-       28,   16,   16,   16,   30,   31,   32,   30,   33,   34,\n-       35,   30,   30,   36,   36,   30,   30,   36,   30,   37,\n-       30,   38,   39,   39,   39,   36,   40,   30,   36,   30,\n-       30,   30,   37,   37,   36,   36,   30,   37,   41,   42,\n-\n-       43,   44,   45,   37,   37,   46,   37,   37,   37,   47,\n-       37,   48,   49,   50,   37,   51,   52,   53,   37,   54,\n-       55,   37,   37,   37,   30,   30,   30,   30,   57,   58,\n-       59,   57,   57,   57,   60,   57,   57,   61,   61,   57,\n-       57,   61,   57,   62,   57,   57,   57,   57,   57,   57,\n-       57,   57,   57,   57,   57,   57,   62,   62,   57,   57,\n-       57,   62,   62,   62,   62,   62,   62,   62,   62,   62,\n+       22,   22,   22,   16,   16,   16,   22,   24,   22,   22,\n+       25,   22,   22,   22,   22,   22,   22,   22,   22,   26,\n+       22,   22,   22,   22,   22,   22,   22,   22,   22,   27,\n+       22,   22,   22,   28,   16,   16,   16,   30,   31,   32,\n+       30,   33,   34,   35,   30,   30,   36,   36,   30,   30,\n+       36,   30,   37,   30,   38,   39,   39,   39,   36,   40,\n+       30,   36,   30,   30,   30,   37,   37,   37,   37,   37,\n+\n+       36,   36,   30,   37,   41,   42,   43,   44,   45,   37,\n+       37,   46,   37,   37,   37,   47,   37,   48,   49,   50,\n+       37,   51,   52,   53,   37,   54,   55,   37,   37,   37,\n+       30,   30,   30,   30,   57,   58,   59,   57,   57,   57,\n+       60,   57,   57,   61,   61,   57,   57,   61,   57,   62,\n+       57,   57,   57,   57,   57,   57,   57,   57,   57,   57,\n+       57,   57,   62,   62,   62,   62,   62,   57,   57,   57,\n+       62,   62,   62,   62,   62,   62,   62,   62,   62,   62,\n        62,   62,   62,   62,   62,   62,   62,   62,   62,   62,\n-       62,   62,   62,   62,   62,   62,   62,   62,   63,   57,\n-       57,   57,   65,   66,   67,   68,   69,   68,   70,   68,\n+       62,   62,   62,   62,   62,   62,   62,   63,   57,   57,\n \n-       68,   68,   68,   68,   68,   68,   68,   71,   68,   68,\n-       68,   68,   68,   68,   68,   68,   68,   68,   68,   68,\n-       71,   71,   68,   68,   72,   71,   71,   71,   71,   71,\n-       71,   71,   71,   71,   73,   71,   71,   71,   71,   71,\n+       57,   65,   66,   67,   68,   69,   68,   70,   68,   68,\n+       68,   68,   68,   68,   68,   68,   71,   68,   68,   68,\n+       68,   68,   68,   68,   68,   68,   68,   68,   68,   71,\n+       71,   71,   71,   71,   68,   68,   72,   71,   71,   71,\n+       71,   71,   71,   71,   71,   71,   73,   71,   71,   71,\n        71,   71,   71,   71,   71,   71,   71,   71,   71,   71,\n-       71,   71,   68,   68,   68,   68,   75,   76,   77,   78,\n-       75,   79,   80,   75,   81,   82,   82,   82,   82,   82,\n-       82,   83,   82,   84,   85,   85,   85,   82,   82,   86,\n-       82,   87,   75,   75,   88,   88,   89,   90,   91,   88,\n-       88,   88,   88,   88,   88,   88,   92,   88,   88,   88,\n-\n-       88,   88,   88,   88,   88,   88,   88,   88,   88,   88,\n-       93,   88,   88,   88,   88,   88,   94,   95,   75,   82,\n-       97,   98,   99,  100,   97,  101,  102,  103,  104,  103,\n-      103,  103,  103,  103,  103,  105,  103,  106,  107,  107,\n-      107,  103,  103,  108,  109,  110,   97,   97,  105,  105,\n-      103,  103,  111,  105,  112,  113,  114,  115,  116,  117,\n-      118,  105,  119,  105,  105,  120,  105,  121,  105,  122,\n-      105,  123,  124,  125,  105,  105,  105,  105,  105,  126,\n-       97,  127,  128,  103,  132,  150,  152,  152,  152,  152,\n-      160,  164,  166,  168,  190,  165,  196,  199,  200,  167,\n-\n-      201,  202,  213,  169,  161,  216,  217,  151,  310,  133,\n-      198,  198,  198,  198,  215,  215,  215,  215,  197,  191,\n-      219,  220,  223,  225,  214,  244,  231,  226,  224,  245,\n-      305,  247,  275,  192,  232,  233,  241,  234,  227,  235,\n-      228,  248,  193,  249,  242,  276,  236,  237,  238,  272,\n-      272,  289,  250,  152,  152,  152,  152,  278,  294,  251,\n-      279,  252,  304,  304,  295,  309,  309,  314,  239,  273,\n-      290,  253,  254,  315,  255,  198,  198,  198,  198,  215,\n-      215,  215,  215,  335,  336,  392,  256,  272,  272,  304,\n-      304,  309,  309,  525,  524,  523,  522,  521,  520,  393,\n-\n-      130,  130,  130,  130,  130,  131,  131,  131,  131,  131,\n-      135,  519,  135,  135,  135,  137,  137,  142,  142,  142,\n-      142,  142,  145,  145,  145,  145,  145,  147,  518,  147,\n-      147,  147,  149,  149,  172,  172,  172,  172,  172,  176,\n-      176,  177,  177,  177,  177,  177,  180,  180,  180,  180,\n-      180,  183,  183,  185,  185,  185,  185,  185,  189,  517,\n-      189,  189,  189,  195,  195,  205,  205,  205,  205,  205,\n-      209,  516,  209,  209,  209,  212,  212,  260,  260,  260,\n-      260,  260,  262,  262,  262,  262,  262,  264,  264,  264,\n-      264,  264,  266,  266,  271,  271,  297,  297,  298,  298,\n-\n-      299,  299,  308,  308,  344,  344,  344,  350,  350,  350,\n-      372,  372,  372,  374,  374,  374,  376,  376,  376,  382,\n-      382,  382,  515,  514,  513,  512,  511,  510,  509,  508,\n-      507,  506,  505,  504,  503,  502,  501,  500,  499,  498,\n-      497,  496,  495,  494,  493,  492,  491,  490,  489,  488,\n-      487,  486,  485,  484,  483,  482,  481,  480,  479,  478,\n-      477,  476,  475,  474,  473,  472,  471,  470,  469,  468,\n-      467,  466,  465,  464,  463,  462,  461,  460,  459,  458,\n-      457,  456,  455,  454,  453,  452,  451,  450,  449,  448,\n-      447,  446,  445,  444,  443,  442,  441,  440,  439,  438,\n-\n-      437,  436,  435,  434,  433,  432,  431,  430,  381,  429,\n-      428,  375,  373,  371,  427,  426,  425,  424,  423,  422,\n-      421,  420,  419,  418,  417,  416,  415,  414,  413,  412,\n-      411,  410,  349,  409,  408,  407,  343,  406,  405,  404,\n-      403,  402,  401,  400,  399,  398,  397,  396,  395,  394,\n-      391,  390,  389,  388,  387,  386,  385,  384,  383,  381,\n-      380,  379,  378,  377,  375,  373,  371,  370,  369,  368,\n-      367,  366,  365,  364,  363,  362,  361,  360,  359,  358,\n-      357,  356,  355,  354,  353,  352,  351,  349,  348,  347,\n-      346,  345,  343,  265,  263,  261,  342,  341,  340,  339,\n-\n-      338,  337,  334,  333,  332,  331,  330,  329,  328,  327,\n-      326,  325,  324,  323,  322,  321,  320,  319,  318,  317,\n-      316,  313,  312,  311,  207,  206,  307,  306,  303,  302,\n-      301,  300,  187,  186,  180,  181,  179,  178,  174,  173,\n-      296,  293,  292,  291,  288,  287,  286,  285,  284,  283,\n-      282,  281,  280,  277,  274,  145,  146,  144,  143,  270,\n-      269,  268,  267,  134,  265,  263,  261,  259,  258,  257,\n-      246,  243,  240,  230,  229,  222,  221,  218,  211,  210,\n-      208,  207,  206,  204,  203,  194,  188,  187,  186,  184,\n-      182,  181,  179,  178,  175,  174,  173,  171,  170,  163,\n-\n-      162,  159,  158,  157,  156,  155,  154,  153,  148,  146,\n-      144,  143,  141,  140,  139,  138,  136,  134,  526,  129,\n-       96,   74,   64,   56,   29,   15,  526,  526,  526,  526,\n-      526,  526,  526,  526,  526,  526,  526,  526,  526,  526,\n-      526,  526,  526,  526,  526,  526,  526,  526,  526,  526,\n-      526,  526,  526,  526,  526,  526,  526,  526,  526,  526,\n-      526,  526,  526,  526,  526,  526,  526,  526,  526,  526,\n-      526,  526,  526,  526,  526,  526,  526,  526,  526,  526,\n-      526,  526,  526,  526,  526,  526,  526,  526,  526,  526\n+       71,   71,   71,   71,   68,   68,   68,   68,   75,   76,\n+       77,   78,   75,   79,   80,   75,   81,   82,   82,   82,\n+       82,   82,   82,   83,   82,   84,   85,   85,   85,   82,\n+       82,   86,   82,   87,   75,   75,   88,   88,   88,   88,\n+\n+       88,   89,   90,   91,   88,   88,   88,   88,   88,   88,\n+       88,   92,   88,   88,   88,   88,   88,   88,   88,   88,\n+       88,   88,   88,   88,   88,   93,   88,   88,   88,   88,\n+       88,   94,   95,   75,   82,   97,   98,   99,  100,   97,\n+      101,  102,  103,  104,  103,  103,  103,  103,  103,  103,\n+      105,  103,  106,  107,  107,  107,  103,  103,  108,  109,\n+      110,   97,   97,  105,  105,  105,  105,  105,  103,  103,\n+      111,  105,  112,  113,  114,  115,  116,  117,  118,  105,\n+      119,  105,  105,  120,  105,  121,  105,  122,  105,  123,\n+      124,  125,  105,  105,  105,  105,  105,  126,   97,  127,\n+\n+      128,  103,  132,  150,  152,  152,  152,  152,  160,  164,\n+      166,  168,  190,  165,  196,  199,  200,  167,  201,  202,\n+      213,  169,  161,  216,  217,  151,  311,  133,  198,  198,\n+      198,  198,  215,  215,  215,  215,  197,  219,  220,  223,\n+      191,  242,  214,  225,  245,  224,  248,  226,  246,  243,\n+      273,  273,  276,  232,  192,  306,  249,  227,  228,  290,\n+      229,  233,  234,  193,  235,  277,  236,  274,  250,  152,\n+      152,  152,  152,  237,  238,  239,  279,  251,  291,  280,\n+      545,  295,  305,  305,  252,  544,  253,  296,  198,  198,\n+      198,  198,  310,  310,  215,  215,  215,  215,  240,  254,\n+\n+      255,  315,  256,  337,  338,  273,  273,  316,  305,  305,\n+      310,  310,  395,  543,  257,  536,  537,  542,  541,  540,\n+      539,  538,  535,  534,  533,  532,  396,  130,  130,  130,\n+      130,  130,  131,  131,  131,  131,  131,  135,  531,  135,\n+      135,  135,  137,  137,  142,  142,  142,  142,  142,  145,\n+      145,  145,  145,  145,  147,  530,  147,  147,  147,  149,\n+      149,  172,  172,  172,  172,  172,  176,  176,  177,  177,\n+      177,  177,  177,  180,  180,  180,  180,  180,  183,  183,\n+      185,  185,  185,  185,  185,  189,  529,  189,  189,  189,\n+      195,  195,  205,  205,  205,  205,  205,  209,  528,  209,\n+\n+      209,  209,  212,  212,  261,  261,  261,  261,  261,  263,\n+      263,  263,  263,  263,  265,  265,  265,  265,  265,  267,\n+      267,  272,  272,  298,  298,  299,  299,  300,  300,  309,\n+      309,  346,  346,  346,  352,  352,  352,  374,  374,  374,\n+      376,  376,  376,  378,  378,  378,  384,  384,  384,  527,\n+      526,  525,  524,  523,  522,  521,  520,  519,  518,  517,\n+      516,  515,  514,  513,  512,  511,  510,  509,  508,  507,\n+      506,  505,  504,  503,  502,  501,  500,  499,  498,  497,\n+      496,  495,  494,  493,  492,  491,  490,  489,  488,  487,\n+      486,  485,  484,  483,  482,  481,  480,  479,  478,  477,\n+\n+      476,  475,  474,  473,  472,  471,  470,  469,  468,  467,\n+      466,  465,  464,  463,  462,  461,  460,  459,  458,  457,\n+      456,  455,  454,  453,  452,  451,  450,  449,  448,  447,\n+      446,  445,  444,  443,  442,  441,  440,  439,  438,  437,\n+      436,  435,  434,  433,  383,  432,  431,  377,  375,  373,\n+      430,  429,  428,  427,  426,  425,  424,  423,  422,  421,\n+      420,  419,  418,  417,  416,  415,  414,  413,  351,  412,\n+      411,  410,  345,  409,  408,  407,  406,  405,  404,  403,\n+      402,  401,  400,  399,  398,  397,  394,  393,  392,  391,\n+      390,  389,  388,  387,  386,  385,  383,  382,  381,  380,\n+\n+      379,  377,  375,  373,  372,  371,  370,  369,  368,  367,\n+      366,  365,  364,  363,  362,  361,  360,  359,  358,  357,\n+      356,  355,  354,  353,  351,  350,  349,  348,  347,  345,\n+      266,  264,  262,  344,  343,  342,  341,  340,  339,  336,\n+      335,  334,  333,  332,  331,  330,  329,  328,  327,  326,\n+      325,  324,  323,  322,  321,  320,  319,  318,  317,  314,\n+      313,  312,  207,  206,  308,  307,  304,  303,  302,  301,\n+      187,  186,  180,  181,  179,  178,  174,  173,  297,  294,\n+      293,  292,  289,  288,  287,  286,  285,  284,  283,  282,\n+      281,  278,  275,  145,  146,  144,  143,  271,  270,  269,\n+\n+      268,  134,  266,  264,  262,  260,  259,  258,  247,  244,\n+      241,  231,  230,  222,  221,  218,  211,  210,  208,  207,\n+      206,  204,  203,  194,  188,  187,  186,  184,  182,  181,\n+      179,  178,  175,  174,  173,  171,  170,  163,  162,  159,\n+      158,  157,  156,  155,  154,  153,  148,  146,  144,  143,\n+      141,  140,  139,  138,  136,  134,  546,  129,   96,   74,\n+       64,   56,   29,   15,  546,  546,  546,  546,  546,  546,\n+      546,  546,  546,  546,  546,  546,  546,  546,  546,  546,\n+      546,  546,  546,  546,  546,  546,  546,  546,  546,  546,\n+      546,  546,  546,  546,  546,  546,  546,  546,  546,  546,\n+\n+      546,  546,  546,  546,  546,  546,  546,  546,  546,  546,\n+      546,  546,  546,  546,  546,  546,  546,  546,  546,  546,\n+      546,  546,  546,  546,  546,  546,  546,  546,  546,  546,\n+      546\n     } ;\n \n-static yyconst flex_int16_t yy_chk[991] =\n+static const flex_int16_t yy_chk[1032] =\n     {   0,\n         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,\n         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,\n         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,\n         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,\n         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,\n         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,\n-        1,    1,    1,    1,    3,    3,    3,    3,    3,    3,\n+        1,    1,    1,    1,    1,    1,    1,    3,    3,    3,\n         3,    3,    3,    3,    3,    3,    3,    3,    3,    3,\n         3,    3,    3,    3,    3,    3,    3,    3,    3,    3,\n         3,    3,    3,    3,    3,    3,    3,    3,    3,    3,\n \n         3,    3,    3,    3,    3,    3,    3,    3,    3,    3,\n         3,    3,    3,    3,    3,    3,    3,    3,    3,    3,\n-        3,    3,    3,    3,    3,    3,    3,    3,    5,    5,\n+        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,\n+        3,    3,    3,    3,    5,    5,    5,    5,    5,    5,\n         5,    5,    5,    5,    5,    5,    5,    5,    5,    5,\n         5,    5,    5,    5,    5,    5,    5,    5,    5,    5,\n         5,    5,    5,    5,    5,    5,    5,    5,    5,    5,\n         5,    5,    5,    5,    5,    5,    5,    5,    5,    5,\n         5,    5,    5,    5,    5,    5,    5,    5,    5,    5,\n         5,    5,    5,    5,    5,    5,    5,    5,    5,    5,\n-        5,    5,    7,    7,    7,    7,    7,    7,    7,    7,\n \n+        5,    7,    7,    7,    7,    7,    7,    7,    7,    7,\n         7,    7,    7,    7,    7,    7,    7,    7,    7,    7,\n         7,    7,    7,    7,    7,    7,    7,    7,    7,    7,\n         7,    7,    7,    7,    7,    7,    7,    7,    7,    7,\n         7,    7,    7,    7,    7,    7,    7,    7,    7,    7,\n         7,    7,    7,    7,    7,    7,    7,    7,    7,    7,\n-        7,    7,    7,    7,    7,    7,    9,    9,    9,    9,\n-        9,    9,    9,    9,    9,    9,    9,    9,    9,    9,\n+        7,    7,    7,    7,    7,    7,    7,    7,    9,    9,\n         9,    9,    9,    9,    9,    9,    9,    9,    9,    9,\n         9,    9,    9,    9,    9,    9,    9,    9,    9,    9,\n         9,    9,    9,    9,    9,    9,    9,    9,    9,    9,\n \n         9,    9,    9,    9,    9,    9,    9,    9,    9,    9,\n         9,    9,    9,    9,    9,    9,    9,    9,    9,    9,\n+        9,    9,    9,    9,    9,    9,    9,    9,    9,    9,\n+        9,    9,    9,    9,    9,   11,   11,   11,   11,   11,\n        11,   11,   11,   11,   11,   11,   11,   11,   11,   11,\n        11,   11,   11,   11,   11,   11,   11,   11,   11,   11,\n        11,   11,   11,   11,   11,   11,   11,   11,   11,   11,\n        11,   11,   11,   11,   11,   11,   11,   11,   11,   11,\n        11,   11,   11,   11,   11,   11,   11,   11,   11,   11,\n        11,   11,   11,   11,   11,   11,   11,   11,   11,   11,\n-       11,   11,   11,   11,   14,   38,   39,   39,   39,   39,\n-       48,   51,   52,   53,   80,   51,   84,   86,   86,   52,\n-\n-       87,   87,  106,   53,   48,  108,  108,   38,  557,   14,\n-       85,   85,   85,   85,  107,  107,  107,  107,   84,   80,\n-      110,  110,  113,  114,  106,  121,  117,  114,  113,  121,\n-      555,  123,  154,   80,  117,  117,  119,  117,  114,  117,\n-      114,  123,   80,  124,  119,  154,  117,  117,  117,  150,\n-      150,  166,  124,  152,  152,  152,  152,  156,  170,  124,\n-      156,  124,  196,  196,  170,  213,  213,  225,  117,  551,\n-      166,  124,  124,  225,  124,  198,  198,  198,  198,  215,\n-      215,  215,  215,  252,  252,  325,  124,  272,  272,  304,\n-      304,  309,  309,  524,  523,  521,  520,  518,  515,  325,\n-\n-      527,  527,  527,  527,  527,  528,  528,  528,  528,  528,\n-      529,  513,  529,  529,  529,  530,  530,  531,  531,  531,\n-      531,  531,  532,  532,  532,  532,  532,  533,  510,  533,\n-      533,  533,  534,  534,  535,  535,  535,  535,  535,  536,\n-      536,  537,  537,  537,  537,  537,  538,  538,  538,  538,\n-      538,  539,  539,  540,  540,  540,  540,  540,  541,  506,\n-      541,  541,  541,  542,  542,  543,  543,  543,  543,  543,\n-      544,  505,  544,  544,  544,  545,  545,  546,  546,  546,\n-      546,  546,  547,  547,  547,  547,  547,  548,  548,  548,\n-      548,  548,  549,  549,  550,  550,  552,  552,  553,  553,\n-\n-      554,  554,  556,  556,  558,  558,  558,  559,  559,  559,\n-      560,  560,  560,  561,  561,  561,  562,  562,  562,  563,\n-      563,  563,  504,  503,  502,  501,  499,  498,  497,  495,\n-      493,  492,  491,  490,  489,  488,  487,  486,  485,  484,\n-      483,  479,  478,  476,  474,  473,  472,  471,  469,  468,\n-      465,  464,  463,  460,  459,  458,  453,  452,  451,  450,\n-      446,  445,  443,  442,  441,  439,  437,  436,  435,  434,\n-      430,  429,  428,  427,  426,  425,  422,  421,  420,  419,\n-      418,  417,  415,  414,  413,  412,  411,  410,  408,  407,\n-      405,  402,  401,  400,  399,  398,  397,  396,  395,  393,\n-\n-      392,  391,  390,  389,  388,  386,  384,  383,  382,  380,\n-      379,  376,  374,  372,  370,  369,  368,  366,  365,  363,\n-      362,  361,  360,  359,  358,  357,  356,  355,  354,  353,\n-      352,  351,  350,  347,  346,  345,  344,  342,  341,  340,\n-      339,  338,  337,  333,  332,  331,  330,  328,  327,  326,\n-      320,  319,  318,  317,  316,  315,  314,  313,  312,  308,\n-      307,  306,  302,  300,  299,  298,  297,  296,  295,  294,\n-      293,  292,  291,  290,  289,  288,  287,  286,  285,  284,\n-      283,  282,  280,  279,  277,  276,  274,  271,  270,  269,\n-      268,  267,  266,  264,  262,  260,  258,  257,  256,  255,\n-\n-      254,  253,  251,  248,  247,  246,  245,  244,  243,  242,\n-      240,  239,  238,  237,  236,  231,  230,  229,  228,  227,\n-      226,  224,  223,  222,  207,  205,  204,  203,  194,  193,\n-      192,  191,  187,  185,  181,  180,  179,  177,  174,  172,\n-      171,  169,  168,  167,  165,  164,  163,  162,  161,  160,\n-      159,  158,  157,  155,  153,  146,  145,  144,  142,  141,\n-      140,  139,  138,  134,  133,  131,  129,  127,  126,  125,\n-      122,  120,  118,  116,  115,  112,  111,  109,  104,  102,\n-      100,   98,   96,   93,   92,   83,   78,   76,   74,   73,\n-       70,   69,   66,   64,   60,   58,   56,   55,   54,   50,\n-\n-       49,   47,   46,   45,   44,   43,   42,   41,   35,   33,\n-       31,   29,   27,   26,   25,   24,   20,   17,   15,   12,\n-       10,    8,    6,    4,    2,  526,  526,  526,  526,  526,\n-      526,  526,  526,  526,  526,  526,  526,  526,  526,  526,\n-      526,  526,  526,  526,  526,  526,  526,  526,  526,  526,\n-      526,  526,  526,  526,  526,  526,  526,  526,  526,  526,\n-      526,  526,  526,  526,  526,  526,  526,  526,  526,  526,\n-      526,  526,  526,  526,  526,  526,  526,  526,  526,  526,\n-      526,  526,  526,  526,  526,  526,  526,  526,  526,  526\n+\n+       11,   11,   14,   38,   39,   39,   39,   39,   48,   51,\n+       52,   53,   80,   51,   84,   86,   86,   52,   87,   87,\n+      106,   53,   48,  108,  108,   38,  577,   14,   85,   85,\n+       85,   85,  107,  107,  107,  107,   84,  110,  110,  113,\n+       80,  119,  106,  114,  121,  113,  123,  114,  121,  119,\n+      150,  150,  154,  117,   80,  575,  123,  114,  114,  166,\n+      114,  117,  117,   80,  117,  154,  117,  571,  124,  152,\n+      152,  152,  152,  117,  117,  117,  156,  124,  166,  156,\n+      544,  170,  196,  196,  124,  542,  124,  170,  198,  198,\n+      198,  198,  213,  213,  215,  215,  215,  215,  117,  124,\n+\n+      124,  225,  124,  253,  253,  273,  273,  225,  305,  305,\n+      310,  310,  327,  541,  124,  534,  534,  540,  539,  537,\n+      536,  535,  533,  531,  530,  529,  327,  547,  547,  547,\n+      547,  547,  548,  548,  548,  548,  548,  549,  527,  549,\n+      549,  549,  550,  550,  551,  551,  551,  551,  551,  552,\n+      552,  552,  552,  552,  553,  526,  553,  553,  553,  554,\n+      554,  555,  555,  555,  555,  555,  556,  556,  557,  557,\n+      557,  557,  557,  558,  558,  558,  558,  558,  559,  559,\n+      560,  560,  560,  560,  560,  561,  523,  561,  561,  561,\n+      562,  562,  563,  563,  563,  563,  563,  564,  521,  564,\n+\n+      564,  564,  565,  565,  566,  566,  566,  566,  566,  567,\n+      567,  567,  567,  567,  568,  568,  568,  568,  568,  569,\n+      569,  570,  570,  572,  572,  573,  573,  574,  574,  576,\n+      576,  578,  578,  578,  579,  579,  579,  580,  580,  580,\n+      581,  581,  581,  582,  582,  582,  583,  583,  583,  520,\n+      517,  513,  512,  511,  510,  509,  508,  507,  505,  504,\n+      503,  501,  499,  498,  497,  496,  495,  494,  493,  492,\n+      491,  490,  489,  488,  484,  483,  481,  479,  478,  477,\n+      476,  474,  473,  472,  469,  468,  467,  464,  463,  462,\n+      457,  456,  455,  454,  450,  449,  447,  446,  445,  443,\n+\n+      441,  440,  439,  438,  436,  433,  432,  431,  430,  429,\n+      428,  425,  424,  423,  422,  421,  420,  418,  417,  416,\n+      415,  414,  413,  411,  410,  408,  405,  404,  403,  402,\n+      401,  400,  399,  398,  396,  395,  394,  393,  392,  391,\n+      390,  388,  386,  385,  384,  382,  381,  378,  376,  374,\n+      372,  371,  370,  368,  367,  365,  364,  363,  362,  361,\n+      360,  359,  358,  357,  356,  355,  354,  353,  352,  349,\n+      348,  347,  346,  344,  343,  342,  341,  340,  339,  335,\n+      334,  333,  332,  330,  329,  328,  322,  321,  320,  319,\n+      318,  317,  316,  315,  314,  313,  309,  308,  307,  303,\n+\n+      301,  300,  299,  298,  297,  296,  295,  294,  293,  292,\n+      291,  290,  289,  288,  287,  286,  285,  284,  283,  281,\n+      280,  278,  277,  275,  272,  271,  270,  269,  268,  267,\n+      265,  263,  261,  259,  258,  257,  256,  255,  254,  252,\n+      249,  248,  247,  246,  245,  244,  243,  241,  240,  239,\n+      238,  237,  232,  231,  230,  229,  228,  227,  226,  224,\n+      223,  222,  207,  205,  204,  203,  194,  193,  192,  191,\n+      187,  185,  181,  180,  179,  177,  174,  172,  171,  169,\n+      168,  167,  165,  164,  163,  162,  161,  160,  159,  158,\n+      157,  155,  153,  146,  145,  144,  142,  141,  140,  139,\n+\n+      138,  134,  133,  131,  129,  127,  126,  125,  122,  120,\n+      118,  116,  115,  112,  111,  109,  104,  102,  100,   98,\n+       96,   93,   92,   83,   78,   76,   74,   73,   70,   69,\n+       66,   64,   60,   58,   56,   55,   54,   50,   49,   47,\n+       46,   45,   44,   43,   42,   41,   35,   33,   31,   29,\n+       27,   26,   25,   24,   20,   17,   15,   12,   10,    8,\n+        6,    4,    2,  546,  546,  546,  546,  546,  546,  546,\n+      546,  546,  546,  546,  546,  546,  546,  546,  546,  546,\n+      546,  546,  546,  546,  546,  546,  546,  546,  546,  546,\n+      546,  546,  546,  546,  546,  546,  546,  546,  546,  546,\n+\n+      546,  546,  546,  546,  546,  546,  546,  546,  546,  546,\n+      546,  546,  546,  546,  546,  546,  546,  546,  546,  546,\n+      546,  546,  546,  546,  546,  546,  546,  546,  546,  546,\n+      546\n     } ;\n \n static yy_state_type yy_last_accepting_state;\n@@ -1115,7 +1125,7 @@ int4 preprocess(int4 cur_state,int4 blank_state)\n       if (yyin == (FILE *)0)\n         preproc_error(\"Could not open included file \"+fname);\n       filebuffers.back().file = yyin;\n-      yy_switch_to_buffer(yy_create_buffer(yyin,YY_BUF_SIZE) );\n+      yy_switch_to_buffer( yy_create_buffer(yyin, YY_BUF_SIZE) );\n       check_to_endofline(s);\n     }\n   }\n@@ -1238,7 +1248,7 @@ void preproc_macroexpand(void)\n   string value;\n   if (!slgh->getPreprocValue(macro,value))\n     preproc_error(\"Unknown preprocessing macro \"+macro);\n-  yy_switch_to_buffer(yy_scan_string(value.c_str() ) );\n+  yy_switch_to_buffer( yy_scan_string( value.c_str() ) );\n   slgh->parsePreprocMacro();\n }\n \n@@ -1340,13 +1350,9 @@ int4 scan_number(char *numtext,YYSTYPE *lval,bool signednum)\n   return INTEGER;\n }\n \n+#line 1338 \"src/decompile/cpp/slghscan.cc\"\n \n-\n-\n-\n-\n-\n-#line 1335 \"src/decompile/cpp/slghscan.cc\"\n+#line 1340 \"src/decompile/cpp/slghscan.cc\"\n \n #define INITIAL 0\n #define defblock 1\n@@ -1368,80 +1374,88 @@ int4 scan_number(char *numtext,YYSTYPE *lval,bool signednum)\n #define YY_EXTRA_TYPE void *\n #endif\n \n-static int yy_init_globals (void );\n+static int yy_init_globals ( void );\n \n /* Accessor methods to globals.\n    These are made visible to non-reentrant scanners for convenience. */\n \n-int yylex_destroy (void );\n+int yylex_destroy ( void );\n \n-int yyget_debug (void );\n+int yyget_debug ( void );\n \n-void yyset_debug (int debug_flag  );\n+void yyset_debug ( int debug_flag  );\n \n-YY_EXTRA_TYPE yyget_extra (void );\n+YY_EXTRA_TYPE yyget_extra ( void );\n \n-void yyset_extra (YY_EXTRA_TYPE user_defined  );\n+void yyset_extra ( YY_EXTRA_TYPE user_defined  );\n \n-FILE *yyget_in (void );\n+FILE *yyget_in ( void );\n \n-void yyset_in  (FILE * in_str  );\n+void yyset_in  ( FILE * _in_str  );\n \n-FILE *yyget_out (void );\n+FILE *yyget_out ( void );\n \n-void yyset_out  (FILE * out_str  );\n+void yyset_out  ( FILE * _out_str  );\n \n-yy_size_t yyget_leng (void );\n+\t\t\tint yyget_leng ( void );\n \n-char *yyget_text (void );\n+char *yyget_text ( void );\n \n-int yyget_lineno (void );\n+int yyget_lineno ( void );\n \n-void yyset_lineno (int line_number  );\n+void yyset_lineno ( int _line_number  );\n \n /* Macros after this point can all be overridden by user definitions in\n  * section 1.\n  */\n \n #ifndef YY_SKIP_YYWRAP\n #ifdef __cplusplus\n-extern \"C\" int yywrap (void );\n+extern \"C\" int yywrap ( void );\n #else\n-extern int yywrap (void );\n+extern int yywrap ( void );\n #endif\n #endif\n \n-    static void yyunput (int c,char *buf_ptr  );\n+#ifndef YY_NO_UNPUT\n     \n+    static void yyunput ( int c, char *buf_ptr  );\n+    \n+#endif\n+\n #ifndef yytext_ptr\n-static void yy_flex_strncpy (char *,yyconst char *,int );\n+static void yy_flex_strncpy ( char *, const char *, int );\n #endif\n \n #ifdef YY_NEED_STRLEN\n-static int yy_flex_strlen (yyconst char * );\n+static int yy_flex_strlen ( const char * );\n #endif\n \n #ifndef YY_NO_INPUT\n-\n #ifdef __cplusplus\n-static int yyinput (void );\n+static int yyinput ( void );\n #else\n-static int input (void );\n+static int input ( void );\n #endif\n \n #endif\n \n /* Amount of stuff to slurp up with each read. */\n #ifndef YY_READ_BUF_SIZE\n+#ifdef __ia64__\n+/* On IA-64, the buffer size is 16k, not 8k */\n+#define YY_READ_BUF_SIZE 16384\n+#else\n #define YY_READ_BUF_SIZE 8192\n+#endif /* __ia64__ */\n #endif\n \n /* Copy whatever the last rule matched to the standard output. */\n #ifndef ECHO\n /* This used to be an fputs(), but since the string might contain NUL's,\n  * we now use fwrite().\n  */\n-#define ECHO do { if (fwrite( yytext, yyleng, 1, yyout )) {} } while (0)\n+#define ECHO do { if (fwrite( yytext, (size_t) yyleng, 1, yyout )) {} } while (0)\n #endif\n \n /* Gets input and stuffs it into \"buf\".  number of characters read, or YY_NULL,\n@@ -1452,7 +1466,7 @@ static int input (void );\n \tif ( YY_CURRENT_BUFFER_LVALUE->yy_is_interactive ) \\\n \t\t{ \\\n \t\tint c = '*'; \\\n-\t\tsize_t n; \\\n+\t\tint n; \\\n \t\tfor ( n = 0; n < max_size && \\\n \t\t\t     (c = getc( yyin )) != EOF && c != '\\n'; ++n ) \\\n \t\t\tbuf[n] = (char) c; \\\n@@ -1465,7 +1479,7 @@ static int input (void );\n \telse \\\n \t\t{ \\\n \t\terrno=0; \\\n-\t\twhile ( (result = fread(buf, 1, max_size, yyin))==0 && ferror(yyin)) \\\n+\t\twhile ( (result = (int) fread(buf, 1, (yy_size_t) max_size, yyin)) == 0 && ferror(yyin)) \\\n \t\t\t{ \\\n \t\t\tif( errno != EINTR) \\\n \t\t\t\t{ \\\n@@ -1520,7 +1534,7 @@ extern int yylex (void);\n \n /* Code executed at the end of each rule. */\n #ifndef YY_BREAK\n-#define YY_BREAK break;\n+#define YY_BREAK /*LINTED*/break;\n #endif\n \n #define YY_RULE_SETUP \\\n@@ -1533,15 +1547,10 @@ extern int yylex (void);\n  */\n YY_DECL\n {\n-\tregister yy_state_type yy_current_state;\n-\tregister char *yy_cp, *yy_bp;\n-\tregister int yy_act;\n+\tyy_state_type yy_current_state;\n+\tchar *yy_cp, *yy_bp;\n+\tint yy_act;\n     \n-#line 490 \"src/decompile/cpp/slghscan.l\"\n-\n-\n-#line 1529 \"src/decompile/cpp/slghscan.cc\"\n-\n \tif ( !(yy_init) )\n \t\t{\n \t\t(yy_init) = 1;\n@@ -1562,13 +1571,19 @@ YY_DECL\n \t\tif ( ! YY_CURRENT_BUFFER ) {\n \t\t\tyyensure_buffer_stack ();\n \t\t\tYY_CURRENT_BUFFER_LVALUE =\n-\t\t\t\tyy_create_buffer(yyin,YY_BUF_SIZE );\n+\t\t\t\tyy_create_buffer( yyin, YY_BUF_SIZE );\n \t\t}\n \n-\t\tyy_load_buffer_state( );\n+\t\tyy_load_buffer_state(  );\n \t\t}\n \n-\twhile ( 1 )\t\t/* loops until end-of-file is reached */\n+\t{\n+#line 490 \"src/decompile/cpp/slghscan.l\"\n+\n+\n+#line 1569 \"src/decompile/cpp/slghscan.cc\"\n+\n+\twhile ( /*CONSTCOND*/1 )\t\t/* loops until end-of-file is reached */\n \t\t{\n \t\tyy_cp = (yy_c_buf_p);\n \n@@ -1585,7 +1600,7 @@ YY_DECL\n yy_match:\n \t\tdo\n \t\t\t{\n-\t\t\tregister YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)];\n+\t\t\tYY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)] ;\n \t\t\tif ( yy_accept[yy_current_state] )\n \t\t\t\t{\n \t\t\t\t(yy_last_accepting_state) = yy_current_state;\n@@ -1594,13 +1609,13 @@ YY_DECL\n \t\t\twhile ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )\n \t\t\t\t{\n \t\t\t\tyy_current_state = (int) yy_def[yy_current_state];\n-\t\t\t\tif ( yy_current_state >= 527 )\n-\t\t\t\t\tyy_c = yy_meta[(unsigned int) yy_c];\n+\t\t\t\tif ( yy_current_state >= 547 )\n+\t\t\t\t\tyy_c = yy_meta[yy_c];\n \t\t\t\t}\n-\t\t\tyy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];\n+\t\t\tyy_current_state = yy_nxt[yy_base[yy_current_state] + yy_c];\n \t\t\t++yy_cp;\n \t\t\t}\n-\t\twhile ( yy_base[yy_current_state] != 926 );\n+\t\twhile ( yy_base[yy_current_state] != 964 );\n \n yy_find_action:\n \t\tyy_act = yy_accept[yy_current_state];\n@@ -2355,72 +2370,72 @@ YY_RULE_SETUP\n case 144:\n YY_RULE_SETUP\n #line 641 \"src/decompile/cpp/slghscan.l\"\n-{ return IF_KEY; }\n+{ return OP_COUNTLEADINGZEROS; }\n \tYY_BREAK\n case 145:\n YY_RULE_SETUP\n #line 642 \"src/decompile/cpp/slghscan.l\"\n-{ return GOTO_KEY; }\n+{ return OP_COUNTLEADINGONES; }\n \tYY_BREAK\n case 146:\n YY_RULE_SETUP\n #line 643 \"src/decompile/cpp/slghscan.l\"\n-{ return CALL_KEY; }\n+{ return IF_KEY; }\n \tYY_BREAK\n case 147:\n YY_RULE_SETUP\n #line 644 \"src/decompile/cpp/slghscan.l\"\n-{ return RETURN_KEY; }\n+{ return GOTO_KEY; }\n \tYY_BREAK\n case 148:\n YY_RULE_SETUP\n #line 645 \"src/decompile/cpp/slghscan.l\"\n-{ return DELAYSLOT_KEY; }\n+{ return CALL_KEY; }\n \tYY_BREAK\n case 149:\n YY_RULE_SETUP\n #line 646 \"src/decompile/cpp/slghscan.l\"\n-{ return CROSSBUILD_KEY; }\n+{ return RETURN_KEY; }\n \tYY_BREAK\n case 150:\n YY_RULE_SETUP\n #line 647 \"src/decompile/cpp/slghscan.l\"\n-{ return EXPORT_KEY; }\n+{ return DELAYSLOT_KEY; }\n \tYY_BREAK\n case 151:\n YY_RULE_SETUP\n #line 648 \"src/decompile/cpp/slghscan.l\"\n-{ return BUILD_KEY; }\n+{ return CROSSBUILD_KEY; }\n \tYY_BREAK\n case 152:\n YY_RULE_SETUP\n #line 649 \"src/decompile/cpp/slghscan.l\"\n-{ return LOCAL_KEY; }\n+{ return EXPORT_KEY; }\n \tYY_BREAK\n case 153:\n YY_RULE_SETUP\n #line 650 \"src/decompile/cpp/slghscan.l\"\n-{ yylval.ch = yytext[0]; return yytext[0]; }\n+{ return BUILD_KEY; }\n \tYY_BREAK\n case 154:\n YY_RULE_SETUP\n #line 651 \"src/decompile/cpp/slghscan.l\"\n-\n+{ return LOCAL_KEY; }\n \tYY_BREAK\n case 155:\n YY_RULE_SETUP\n #line 652 \"src/decompile/cpp/slghscan.l\"\n-{ return find_symbol();   }\n+{ yylval.ch = yytext[0]; return yytext[0]; }\n \tYY_BREAK\n case 156:\n YY_RULE_SETUP\n #line 653 \"src/decompile/cpp/slghscan.l\"\n-{ return scan_number(yytext,&yylval,false); }\n+\n \tYY_BREAK\n case 157:\n YY_RULE_SETUP\n #line 654 \"src/decompile/cpp/slghscan.l\"\n-{ return scan_number(yytext,&yylval,false); }\n+{ return find_symbol();   }\n \tYY_BREAK\n case 158:\n YY_RULE_SETUP\n@@ -2430,29 +2445,39 @@ YY_RULE_SETUP\n case 159:\n YY_RULE_SETUP\n #line 656 \"src/decompile/cpp/slghscan.l\"\n-\n+{ return scan_number(yytext,&yylval,false); }\n \tYY_BREAK\n case 160:\n-/* rule 160 can match eol */\n YY_RULE_SETUP\n #line 657 \"src/decompile/cpp/slghscan.l\"\n-{ slgh->nextLine(); }\n+{ return scan_number(yytext,&yylval,false); }\n \tYY_BREAK\n case 161:\n YY_RULE_SETUP\n #line 658 \"src/decompile/cpp/slghscan.l\"\n-{ return yytext[0]; }\n+\n \tYY_BREAK\n case 162:\n /* rule 162 can match eol */\n YY_RULE_SETUP\n+#line 659 \"src/decompile/cpp/slghscan.l\"\n+{ slgh->nextLine(); }\n+\tYY_BREAK\n+case 163:\n+YY_RULE_SETUP\n #line 660 \"src/decompile/cpp/slghscan.l\"\n+{ return yytext[0]; }\n+\tYY_BREAK\n+case 164:\n+/* rule 164 can match eol */\n+YY_RULE_SETUP\n+#line 662 \"src/decompile/cpp/slghscan.l\"\n { slgh->nextLine(); BEGIN( preprocess(preproc,preproc) ); }\n \tYY_BREAK\n-case 163:\n-/* rule 163 can match eol */\n+case 165:\n+/* rule 165 can match eol */\n YY_RULE_SETUP\n-#line 661 \"src/decompile/cpp/slghscan.l\"\n+#line 663 \"src/decompile/cpp/slghscan.l\"\n { slgh->nextLine(); }\n \tYY_BREAK\n case YY_STATE_EOF(INITIAL):\n@@ -2462,24 +2487,24 @@ case YY_STATE_EOF(print):\n case YY_STATE_EOF(pattern):\n case YY_STATE_EOF(sem):\n case YY_STATE_EOF(preproc):\n-#line 663 \"src/decompile/cpp/slghscan.l\"\n-{ yy_delete_buffer(YY_CURRENT_BUFFER );\n+#line 665 \"src/decompile/cpp/slghscan.l\"\n+{ yy_delete_buffer( YY_CURRENT_BUFFER );\n           if (filebuffers.empty())\n             yyterminate(); \n-          yy_switch_to_buffer(filebuffers.back().lastbuffer );\n+          yy_switch_to_buffer( filebuffers.back().lastbuffer );\n \t  FILE *curfile = filebuffers.back().file;\n \t  if (curfile != (FILE *)0)\n \t    fclose(curfile);\n           filebuffers.pop_back();\n           slgh->parseFileFinished();\n         }\n \tYY_BREAK\n-case 164:\n+case 166:\n YY_RULE_SETUP\n-#line 673 \"src/decompile/cpp/slghscan.l\"\n+#line 675 \"src/decompile/cpp/slghscan.l\"\n ECHO;\n \tYY_BREAK\n-#line 2468 \"src/decompile/cpp/slghscan.cc\"\n+#line 2492 \"src/decompile/cpp/slghscan.cc\"\n \n \tcase YY_END_OF_BUFFER:\n \t\t{\n@@ -2555,7 +2580,7 @@ ECHO;\n \t\t\t\t{\n \t\t\t\t(yy_did_buffer_switch_on_eof) = 0;\n \n-\t\t\t\tif ( yywrap( ) )\n+\t\t\t\tif ( yywrap(  ) )\n \t\t\t\t\t{\n \t\t\t\t\t/* Note: because we've taken care in\n \t\t\t\t\t * yy_get_next_buffer() to have set up\n@@ -2608,6 +2633,7 @@ ECHO;\n \t\t\t\"fatal flex scanner internal error--no action found\" );\n \t} /* end of action switch */\n \t\t} /* end of scanning one token */\n+\t} /* end of user's declarations */\n } /* end of yylex */\n \n /* yy_get_next_buffer - try to read in a new buffer\n@@ -2619,9 +2645,9 @@ ECHO;\n  */\n static int yy_get_next_buffer (void)\n {\n-    \tregister char *dest = YY_CURRENT_BUFFER_LVALUE->yy_ch_buf;\n-\tregister char *source = (yytext_ptr);\n-\tregister int number_to_move, i;\n+    \tchar *dest = YY_CURRENT_BUFFER_LVALUE->yy_ch_buf;\n+\tchar *source = (yytext_ptr);\n+\tint number_to_move, i;\n \tint ret_val;\n \n \tif ( (yy_c_buf_p) > &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] )\n@@ -2650,7 +2676,7 @@ static int yy_get_next_buffer (void)\n \t/* Try to read more data. */\n \n \t/* First move last chars to start of buffer. */\n-\tnumber_to_move = (int) ((yy_c_buf_p) - (yytext_ptr)) - 1;\n+\tnumber_to_move = (int) ((yy_c_buf_p) - (yytext_ptr) - 1);\n \n \tfor ( i = 0; i < number_to_move; ++i )\n \t\t*(dest++) = *(source++);\n@@ -2663,7 +2689,7 @@ static int yy_get_next_buffer (void)\n \n \telse\n \t\t{\n-\t\t\tyy_size_t num_to_read =\n+\t\t\tint num_to_read =\n \t\t\tYY_CURRENT_BUFFER_LVALUE->yy_buf_size - number_to_move - 1;\n \n \t\twhile ( num_to_read <= 0 )\n@@ -2677,7 +2703,7 @@ static int yy_get_next_buffer (void)\n \n \t\t\tif ( b->yy_is_our_buffer )\n \t\t\t\t{\n-\t\t\t\tyy_size_t new_size = b->yy_buf_size * 2;\n+\t\t\t\tint new_size = b->yy_buf_size * 2;\n \n \t\t\t\tif ( new_size <= 0 )\n \t\t\t\t\tb->yy_buf_size += b->yy_buf_size / 8;\n@@ -2686,11 +2712,12 @@ static int yy_get_next_buffer (void)\n \n \t\t\t\tb->yy_ch_buf = (char *)\n \t\t\t\t\t/* Include room in for 2 EOB chars. */\n-\t\t\t\t\tyyrealloc((void *) b->yy_ch_buf,b->yy_buf_size + 2  );\n+\t\t\t\t\tyyrealloc( (void *) b->yy_ch_buf,\n+\t\t\t\t\t\t\t (yy_size_t) (b->yy_buf_size + 2)  );\n \t\t\t\t}\n \t\t\telse\n \t\t\t\t/* Can't grow it, we don't own it. */\n-\t\t\t\tb->yy_ch_buf = 0;\n+\t\t\t\tb->yy_ch_buf = NULL;\n \n \t\t\tif ( ! b->yy_ch_buf )\n \t\t\t\tYY_FATAL_ERROR(\n@@ -2718,7 +2745,7 @@ static int yy_get_next_buffer (void)\n \t\tif ( number_to_move == YY_MORE_ADJ )\n \t\t\t{\n \t\t\tret_val = EOB_ACT_END_OF_FILE;\n-\t\t\tyyrestart(yyin  );\n+\t\t\tyyrestart( yyin  );\n \t\t\t}\n \n \t\telse\n@@ -2732,12 +2759,15 @@ static int yy_get_next_buffer (void)\n \telse\n \t\tret_val = EOB_ACT_CONTINUE_SCAN;\n \n-\tif ((yy_size_t) ((yy_n_chars) + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {\n+\tif (((yy_n_chars) + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {\n \t\t/* Extend the array by 50%, plus the number we really need. */\n-\t\tyy_size_t new_size = (yy_n_chars) + number_to_move + ((yy_n_chars) >> 1);\n-\t\tYY_CURRENT_BUFFER_LVALUE->yy_ch_buf = (char *) yyrealloc((void *) YY_CURRENT_BUFFER_LVALUE->yy_ch_buf,new_size  );\n+\t\tint new_size = (yy_n_chars) + number_to_move + ((yy_n_chars) >> 1);\n+\t\tYY_CURRENT_BUFFER_LVALUE->yy_ch_buf = (char *) yyrealloc(\n+\t\t\t(void *) YY_CURRENT_BUFFER_LVALUE->yy_ch_buf, (yy_size_t) new_size  );\n \t\tif ( ! YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )\n \t\t\tYY_FATAL_ERROR( \"out of dynamic memory in yy_get_next_buffer()\" );\n+\t\t/* \"- 2\" to take care of EOB's */\n+\t\tYY_CURRENT_BUFFER_LVALUE->yy_buf_size = (int) (new_size - 2);\n \t}\n \n \t(yy_n_chars) += number_to_move;\n@@ -2753,15 +2783,15 @@ static int yy_get_next_buffer (void)\n \n     static yy_state_type yy_get_previous_state (void)\n {\n-\tregister yy_state_type yy_current_state;\n-\tregister char *yy_cp;\n+\tyy_state_type yy_current_state;\n+\tchar *yy_cp;\n     \n \tyy_current_state = (yy_start);\n \tyy_current_state += YY_AT_BOL();\n \n \tfor ( yy_cp = (yytext_ptr) + YY_MORE_ADJ; yy_cp < (yy_c_buf_p); ++yy_cp )\n \t\t{\n-\t\tregister YY_CHAR yy_c = (*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1);\n+\t\tYY_CHAR yy_c = (*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1);\n \t\tif ( yy_accept[yy_current_state] )\n \t\t\t{\n \t\t\t(yy_last_accepting_state) = yy_current_state;\n@@ -2770,10 +2800,10 @@ static int yy_get_next_buffer (void)\n \t\twhile ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )\n \t\t\t{\n \t\t\tyy_current_state = (int) yy_def[yy_current_state];\n-\t\t\tif ( yy_current_state >= 527 )\n-\t\t\t\tyy_c = yy_meta[(unsigned int) yy_c];\n+\t\t\tif ( yy_current_state >= 547 )\n+\t\t\t\tyy_c = yy_meta[yy_c];\n \t\t\t}\n-\t\tyy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];\n+\t\tyy_current_state = yy_nxt[yy_base[yy_current_state] + yy_c];\n \t\t}\n \n \treturn yy_current_state;\n@@ -2786,10 +2816,10 @@ static int yy_get_next_buffer (void)\n  */\n     static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state )\n {\n-\tregister int yy_is_jam;\n-    \tregister char *yy_cp = (yy_c_buf_p);\n+\tint yy_is_jam;\n+    \tchar *yy_cp = (yy_c_buf_p);\n \n-\tregister YY_CHAR yy_c = 1;\n+\tYY_CHAR yy_c = 1;\n \tif ( yy_accept[yy_current_state] )\n \t\t{\n \t\t(yy_last_accepting_state) = yy_current_state;\n@@ -2798,18 +2828,20 @@ static int yy_get_next_buffer (void)\n \twhile ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )\n \t\t{\n \t\tyy_current_state = (int) yy_def[yy_current_state];\n-\t\tif ( yy_current_state >= 527 )\n-\t\t\tyy_c = yy_meta[(unsigned int) yy_c];\n+\t\tif ( yy_current_state >= 547 )\n+\t\t\tyy_c = yy_meta[yy_c];\n \t\t}\n-\tyy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];\n-\tyy_is_jam = (yy_current_state == 526);\n+\tyy_current_state = yy_nxt[yy_base[yy_current_state] + yy_c];\n+\tyy_is_jam = (yy_current_state == 546);\n \n \t\treturn yy_is_jam ? 0 : yy_current_state;\n }\n \n-    static void yyunput (int c, register char * yy_bp )\n+#ifndef YY_NO_UNPUT\n+\n+    static void yyunput (int c, char * yy_bp )\n {\n-\tregister char *yy_cp;\n+\tchar *yy_cp;\n     \n     yy_cp = (yy_c_buf_p);\n \n@@ -2819,10 +2851,10 @@ static int yy_get_next_buffer (void)\n \tif ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )\n \t\t{ /* need to shift things up to make room */\n \t\t/* +2 for EOB chars. */\n-\t\tregister yy_size_t number_to_move = (yy_n_chars) + 2;\n-\t\tregister char *dest = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[\n+\t\tint number_to_move = (yy_n_chars) + 2;\n+\t\tchar *dest = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[\n \t\t\t\t\tYY_CURRENT_BUFFER_LVALUE->yy_buf_size + 2];\n-\t\tregister char *source =\n+\t\tchar *source =\n \t\t\t\t&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move];\n \n \t\twhile ( source > YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )\n@@ -2831,7 +2863,7 @@ static int yy_get_next_buffer (void)\n \t\tyy_cp += (int) (dest - source);\n \t\tyy_bp += (int) (dest - source);\n \t\tYY_CURRENT_BUFFER_LVALUE->yy_n_chars =\n-\t\t\t(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_buf_size;\n+\t\t\t(yy_n_chars) = (int) YY_CURRENT_BUFFER_LVALUE->yy_buf_size;\n \n \t\tif ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )\n \t\t\tYY_FATAL_ERROR( \"flex scanner push-back overflow\" );\n@@ -2844,6 +2876,8 @@ static int yy_get_next_buffer (void)\n \t(yy_c_buf_p) = yy_cp;\n }\n \n+#endif\n+\n #ifndef YY_NO_INPUT\n #ifdef __cplusplus\n     static int yyinput (void)\n@@ -2868,7 +2902,7 @@ static int yy_get_next_buffer (void)\n \n \t\telse\n \t\t\t{ /* need more input */\n-\t\t\tyy_size_t offset = (yy_c_buf_p) - (yytext_ptr);\n+\t\t\tint offset = (int) ((yy_c_buf_p) - (yytext_ptr));\n \t\t\t++(yy_c_buf_p);\n \n \t\t\tswitch ( yy_get_next_buffer(  ) )\n@@ -2885,14 +2919,14 @@ static int yy_get_next_buffer (void)\n \t\t\t\t\t */\n \n \t\t\t\t\t/* Reset buffer status. */\n-\t\t\t\t\tyyrestart(yyin );\n+\t\t\t\t\tyyrestart( yyin );\n \n \t\t\t\t\t/*FALLTHROUGH*/\n \n \t\t\t\tcase EOB_ACT_END_OF_FILE:\n \t\t\t\t\t{\n-\t\t\t\t\tif ( yywrap( ) )\n-\t\t\t\t\t\treturn EOF;\n+\t\t\t\t\tif ( yywrap(  ) )\n+\t\t\t\t\t\treturn 0;\n \n \t\t\t\t\tif ( ! (yy_did_buffer_switch_on_eof) )\n \t\t\t\t\t\tYY_NEW_FILE;\n@@ -2931,11 +2965,11 @@ static int yy_get_next_buffer (void)\n \tif ( ! YY_CURRENT_BUFFER ){\n         yyensure_buffer_stack ();\n \t\tYY_CURRENT_BUFFER_LVALUE =\n-            yy_create_buffer(yyin,YY_BUF_SIZE );\n+            yy_create_buffer( yyin, YY_BUF_SIZE );\n \t}\n \n-\tyy_init_buffer(YY_CURRENT_BUFFER,input_file );\n-\tyy_load_buffer_state( );\n+\tyy_init_buffer( YY_CURRENT_BUFFER, input_file );\n+\tyy_load_buffer_state(  );\n }\n \n /** Switch to a different input buffer.\n@@ -2963,7 +2997,7 @@ static int yy_get_next_buffer (void)\n \t\t}\n \n \tYY_CURRENT_BUFFER_LVALUE = new_buffer;\n-\tyy_load_buffer_state( );\n+\tyy_load_buffer_state(  );\n \n \t/* We don't actually know whether we did this switch during\n \t * EOF (yywrap()) processing, but the only time this flag\n@@ -2991,7 +3025,7 @@ static void yy_load_buffer_state  (void)\n {\n \tYY_BUFFER_STATE b;\n     \n-\tb = (YY_BUFFER_STATE) yyalloc(sizeof( struct yy_buffer_state )  );\n+\tb = (YY_BUFFER_STATE) yyalloc( sizeof( struct yy_buffer_state )  );\n \tif ( ! b )\n \t\tYY_FATAL_ERROR( \"out of dynamic memory in yy_create_buffer()\" );\n \n@@ -3000,13 +3034,13 @@ static void yy_load_buffer_state  (void)\n \t/* yy_ch_buf has to be 2 characters longer than the size given because\n \t * we need to put in 2 end-of-buffer characters.\n \t */\n-\tb->yy_ch_buf = (char *) yyalloc(b->yy_buf_size + 2  );\n+\tb->yy_ch_buf = (char *) yyalloc( (yy_size_t) (b->yy_buf_size + 2)  );\n \tif ( ! b->yy_ch_buf )\n \t\tYY_FATAL_ERROR( \"out of dynamic memory in yy_create_buffer()\" );\n \n \tb->yy_is_our_buffer = 1;\n \n-\tyy_init_buffer(b,file );\n+\tyy_init_buffer( b, file );\n \n \treturn b;\n }\n@@ -3025,9 +3059,9 @@ static void yy_load_buffer_state  (void)\n \t\tYY_CURRENT_BUFFER_LVALUE = (YY_BUFFER_STATE) 0;\n \n \tif ( b->yy_is_our_buffer )\n-\t\tyyfree((void *) b->yy_ch_buf  );\n+\t\tyyfree( (void *) b->yy_ch_buf  );\n \n-\tyyfree((void *) b  );\n+\tyyfree( (void *) b  );\n }\n \n /* Initializes or reinitializes a buffer.\n@@ -3039,7 +3073,7 @@ static void yy_load_buffer_state  (void)\n {\n \tint oerrno = errno;\n     \n-\tyy_flush_buffer(b );\n+\tyy_flush_buffer( b );\n \n \tb->yy_input_file = file;\n \tb->yy_fill_buffer = 1;\n@@ -3082,7 +3116,7 @@ static void yy_load_buffer_state  (void)\n \tb->yy_buffer_status = YY_BUFFER_NEW;\n \n \tif ( b == YY_CURRENT_BUFFER )\n-\t\tyy_load_buffer_state( );\n+\t\tyy_load_buffer_state(  );\n }\n \n /** Pushes the new state onto the stack. The new state becomes\n@@ -3113,7 +3147,7 @@ void yypush_buffer_state (YY_BUFFER_STATE new_buffer )\n \tYY_CURRENT_BUFFER_LVALUE = new_buffer;\n \n \t/* copied from yy_switch_to_buffer. */\n-\tyy_load_buffer_state( );\n+\tyy_load_buffer_state(  );\n \t(yy_did_buffer_switch_on_eof) = 1;\n }\n \n@@ -3132,7 +3166,7 @@ void yypop_buffer_state (void)\n \t\t--(yy_buffer_stack_top);\n \n \tif (YY_CURRENT_BUFFER) {\n-\t\tyy_load_buffer_state( );\n+\t\tyy_load_buffer_state(  );\n \t\t(yy_did_buffer_switch_on_eof) = 1;\n \t}\n }\n@@ -3150,15 +3184,15 @@ static void yyensure_buffer_stack (void)\n \t\t * scanner will even need a stack. We use 2 instead of 1 to avoid an\n \t\t * immediate realloc on the next call.\n          */\n-\t\tnum_to_alloc = 1;\n+      num_to_alloc = 1; /* After all that talk, this was set to 1 anyways... */\n \t\t(yy_buffer_stack) = (struct yy_buffer_state**)yyalloc\n \t\t\t\t\t\t\t\t(num_to_alloc * sizeof(struct yy_buffer_state*)\n \t\t\t\t\t\t\t\t);\n \t\tif ( ! (yy_buffer_stack) )\n \t\t\tYY_FATAL_ERROR( \"out of dynamic memory in yyensure_buffer_stack()\" );\n-\t\t\t\t\t\t\t\t  \n+\n \t\tmemset((yy_buffer_stack), 0, num_to_alloc * sizeof(struct yy_buffer_state*));\n-\t\t\t\t\n+\n \t\t(yy_buffer_stack_max) = num_to_alloc;\n \t\t(yy_buffer_stack_top) = 0;\n \t\treturn;\n@@ -3167,7 +3201,7 @@ static void yyensure_buffer_stack (void)\n \tif ((yy_buffer_stack_top) >= ((yy_buffer_stack_max)) - 1){\n \n \t\t/* Increase the buffer to prepare for a possible push. */\n-\t\tint grow_size = 8 /* arbitrary grow size */;\n+\t\tyy_size_t grow_size = 8 /* arbitrary grow size */;\n \n \t\tnum_to_alloc = (yy_buffer_stack_max) + grow_size;\n \t\t(yy_buffer_stack) = (struct yy_buffer_state**)yyrealloc\n@@ -3187,7 +3221,7 @@ static void yyensure_buffer_stack (void)\n  * @param base the character buffer\n  * @param size the size in bytes of the character buffer\n  * \n- * @return the newly allocated buffer state object. \n+ * @return the newly allocated buffer state object.\n  */\n YY_BUFFER_STATE yy_scan_buffer  (char * base, yy_size_t  size )\n {\n@@ -3197,23 +3231,23 @@ YY_BUFFER_STATE yy_scan_buffer  (char * base, yy_size_t  size )\n \t     base[size-2] != YY_END_OF_BUFFER_CHAR ||\n \t     base[size-1] != YY_END_OF_BUFFER_CHAR )\n \t\t/* They forgot to leave room for the EOB's. */\n-\t\treturn 0;\n+\t\treturn NULL;\n \n-\tb = (YY_BUFFER_STATE) yyalloc(sizeof( struct yy_buffer_state )  );\n+\tb = (YY_BUFFER_STATE) yyalloc( sizeof( struct yy_buffer_state )  );\n \tif ( ! b )\n \t\tYY_FATAL_ERROR( \"out of dynamic memory in yy_scan_buffer()\" );\n \n-\tb->yy_buf_size = size - 2;\t/* \"- 2\" to take care of EOB's */\n+\tb->yy_buf_size = (int) (size - 2);\t/* \"- 2\" to take care of EOB's */\n \tb->yy_buf_pos = b->yy_ch_buf = base;\n \tb->yy_is_our_buffer = 0;\n-\tb->yy_input_file = 0;\n+\tb->yy_input_file = NULL;\n \tb->yy_n_chars = b->yy_buf_size;\n \tb->yy_is_interactive = 0;\n \tb->yy_at_bol = 1;\n \tb->yy_fill_buffer = 0;\n \tb->yy_buffer_status = YY_BUFFER_NEW;\n \n-\tyy_switch_to_buffer(b  );\n+\tyy_switch_to_buffer( b  );\n \n \treturn b;\n }\n@@ -3226,10 +3260,10 @@ YY_BUFFER_STATE yy_scan_buffer  (char * base, yy_size_t  size )\n  * @note If you want to scan bytes that may contain NUL values, then use\n  *       yy_scan_bytes() instead.\n  */\n-YY_BUFFER_STATE yy_scan_string (yyconst char * yystr )\n+YY_BUFFER_STATE yy_scan_string (const char * yystr )\n {\n     \n-\treturn yy_scan_bytes(yystr,strlen(yystr) );\n+\treturn yy_scan_bytes( yystr, (int) strlen(yystr) );\n }\n \n /** Setup the input buffer state to scan the given bytes. The next call to yylex() will\n@@ -3239,16 +3273,16 @@ YY_BUFFER_STATE yy_scan_string (yyconst char * yystr )\n  * \n  * @return the newly allocated buffer state object.\n  */\n-YY_BUFFER_STATE yy_scan_bytes  (yyconst char * yybytes, yy_size_t  _yybytes_len )\n+YY_BUFFER_STATE yy_scan_bytes  (const char * yybytes, int  _yybytes_len )\n {\n \tYY_BUFFER_STATE b;\n \tchar *buf;\n \tyy_size_t n;\n \tint i;\n     \n \t/* Get memory for full buffer, including space for trailing EOB's. */\n-\tn = _yybytes_len + 2;\n-\tbuf = (char *) yyalloc(n  );\n+\tn = (yy_size_t) (_yybytes_len + 2);\n+\tbuf = (char *) yyalloc( n  );\n \tif ( ! buf )\n \t\tYY_FATAL_ERROR( \"out of dynamic memory in yy_scan_bytes()\" );\n \n@@ -3257,7 +3291,7 @@ YY_BUFFER_STATE yy_scan_bytes  (yyconst char * yybytes, yy_size_t  _yybytes_len\n \n \tbuf[_yybytes_len] = buf[_yybytes_len+1] = YY_END_OF_BUFFER_CHAR;\n \n-\tb = yy_scan_buffer(buf,n );\n+\tb = yy_scan_buffer( buf, n );\n \tif ( ! b )\n \t\tYY_FATAL_ERROR( \"bad buffer in yy_scan_bytes()\" );\n \n@@ -3273,9 +3307,9 @@ YY_BUFFER_STATE yy_scan_bytes  (yyconst char * yybytes, yy_size_t  _yybytes_len\n #define YY_EXIT_FAILURE 2\n #endif\n \n-static void yy_fatal_error (yyconst char* msg )\n+static void yynoreturn yy_fatal_error (const char* msg )\n {\n-    \t(void) fprintf( stderr, \"%s\\n\", msg );\n+\t\t\tfprintf( stderr, \"%s\\n\", msg );\n \texit( YY_EXIT_FAILURE );\n }\n \n@@ -3303,7 +3337,7 @@ static void yy_fatal_error (yyconst char* msg )\n  */\n int yyget_lineno  (void)\n {\n-        \n+    \n     return yylineno;\n }\n \n@@ -3326,7 +3360,7 @@ FILE *yyget_out  (void)\n /** Get the length of the current token.\n  * \n  */\n-yy_size_t yyget_leng  (void)\n+int yyget_leng  (void)\n {\n         return yyleng;\n }\n@@ -3341,39 +3375,39 @@ char *yyget_text  (void)\n }\n \n /** Set the current line number.\n- * @param line_number\n+ * @param _line_number line number\n  * \n  */\n-void yyset_lineno (int  line_number )\n+void yyset_lineno (int  _line_number )\n {\n     \n-    yylineno = line_number;\n+    yylineno = _line_number;\n }\n \n /** Set the input stream. This does not discard the current\n  * input buffer.\n- * @param in_str A readable stream.\n+ * @param _in_str A readable stream.\n  * \n  * @see yy_switch_to_buffer\n  */\n-void yyset_in (FILE *  in_str )\n+void yyset_in (FILE *  _in_str )\n {\n-        yyin = in_str ;\n+        yyin = _in_str ;\n }\n \n-void yyset_out (FILE *  out_str )\n+void yyset_out (FILE *  _out_str )\n {\n-        yyout = out_str ;\n+        yyout = _out_str ;\n }\n \n int yyget_debug  (void)\n {\n         return yy_flex_debug;\n }\n \n-void yyset_debug (int  bdebug )\n+void yyset_debug (int  _bdebug )\n {\n-        yy_flex_debug = bdebug ;\n+        yy_flex_debug = _bdebug ;\n }\n \n static int yy_init_globals (void)\n@@ -3382,10 +3416,10 @@ static int yy_init_globals (void)\n      * This function is called from yylex_destroy(), so don't allocate here.\n      */\n \n-    (yy_buffer_stack) = 0;\n+    (yy_buffer_stack) = NULL;\n     (yy_buffer_stack_top) = 0;\n     (yy_buffer_stack_max) = 0;\n-    (yy_c_buf_p) = (char *) 0;\n+    (yy_c_buf_p) = NULL;\n     (yy_init) = 0;\n     (yy_start) = 0;\n \n@@ -3394,8 +3428,8 @@ static int yy_init_globals (void)\n     yyin = stdin;\n     yyout = stdout;\n #else\n-    yyin = (FILE *) 0;\n-    yyout = (FILE *) 0;\n+    yyin = NULL;\n+    yyout = NULL;\n #endif\n \n     /* For future reference: Set errno on error, since we are called by\n@@ -3410,7 +3444,7 @@ int yylex_destroy  (void)\n     \n     /* Pop the buffer stack, destroying each element. */\n \twhile(YY_CURRENT_BUFFER){\n-\t\tyy_delete_buffer(YY_CURRENT_BUFFER  );\n+\t\tyy_delete_buffer( YY_CURRENT_BUFFER  );\n \t\tYY_CURRENT_BUFFER_LVALUE = NULL;\n \t\tyypop_buffer_state();\n \t}\n@@ -3431,18 +3465,19 @@ int yylex_destroy  (void)\n  */\n \n #ifndef yytext_ptr\n-static void yy_flex_strncpy (char* s1, yyconst char * s2, int n )\n+static void yy_flex_strncpy (char* s1, const char * s2, int n )\n {\n-\tregister int i;\n+\t\t\n+\tint i;\n \tfor ( i = 0; i < n; ++i )\n \t\ts1[i] = s2[i];\n }\n #endif\n \n #ifdef YY_NEED_STRLEN\n-static int yy_flex_strlen (yyconst char * s )\n+static int yy_flex_strlen (const char * s )\n {\n-\tregister int n;\n+\tint n;\n \tfor ( n = 0; s[n]; ++n )\n \t\t;\n \n@@ -3452,26 +3487,27 @@ static int yy_flex_strlen (yyconst char * s )\n \n void *yyalloc (yy_size_t  size )\n {\n-\treturn (void *) malloc( size );\n+\t\t\treturn malloc(size);\n }\n \n void *yyrealloc  (void * ptr, yy_size_t  size )\n {\n+\t\t\n \t/* The cast to (char *) in the following accommodates both\n \t * implementations that use char* generic pointers, and those\n \t * that use void* generic pointers.  It works with the latter\n \t * because both ANSI C and C++ allow castless assignment from\n \t * any pointer type to void*, and deal with argument conversions\n \t * as though doing an assignment.\n \t */\n-\treturn (void *) realloc( (char *) ptr, size );\n+\treturn realloc(ptr, size);\n }\n \n void yyfree (void * ptr )\n {\n-\tfree( (char *) ptr );\t/* see yyrealloc() for (char *) cast */\n+\t\t\tfree( (char *) ptr );\t/* see yyrealloc() for (char *) cast */\n }\n \n #define YYTABLES_NAME \"yytables\"\n \n-#line 673 \"src/decompile/cpp/slghscan.l\"\n+#line 675 \"src/decompile/cpp/slghscan.l\""
  },
  {
    "sha": "ba57f22ee66a714b550b5e62d46c8db179425191",
    "filename": "Ghidra/Features/Decompiler/src/decompile/cpp/slghscan.l",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/NationalSecurityAgency/ghidra/blob/703592e71c68520f45032673f3fd13bc5ac26798/Ghidra/Features/Decompiler/src/decompile/cpp/slghscan.l",
    "raw_url": "https://github.com/NationalSecurityAgency/ghidra/raw/703592e71c68520f45032673f3fd13bc5ac26798/Ghidra/Features/Decompiler/src/decompile/cpp/slghscan.l",
    "contents_url": "https://api.github.com/repos/NationalSecurityAgency/ghidra/contents/Ghidra/Features/Decompiler/src/decompile/cpp/slghscan.l?ref=703592e71c68520f45032673f3fd13bc5ac26798",
    "patch": "@@ -638,6 +638,8 @@ with   { BEGIN(pattern); withsection = 1; slgh->calcContextLayout(); return WITH\n <sem>cpool         { return OP_CPOOLREF; }\n <sem>newobject     { return OP_NEW; }\n <sem>popcount      { return OP_POPCOUNT; }\n+<sem>countLeadingZeros { return OP_COUNTLEADINGZEROS; }\n+<sem>countLeadingOnes  { return OP_COUNTLEADINGONES; }\n <sem>if            { return IF_KEY; }\n <sem>goto          { return GOTO_KEY; }\n <sem>call          { return CALL_KEY; }"
  },
  {
    "sha": "6f37f82b59f8646c5dc36c843c787f7f440e8840",
    "filename": "Ghidra/Features/Decompiler/src/decompile/cpp/typeop.cc",
    "status": "modified",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/NationalSecurityAgency/ghidra/blob/703592e71c68520f45032673f3fd13bc5ac26798/Ghidra/Features/Decompiler/src/decompile/cpp/typeop.cc",
    "raw_url": "https://github.com/NationalSecurityAgency/ghidra/raw/703592e71c68520f45032673f3fd13bc5ac26798/Ghidra/Features/Decompiler/src/decompile/cpp/typeop.cc",
    "contents_url": "https://api.github.com/repos/NationalSecurityAgency/ghidra/contents/Ghidra/Features/Decompiler/src/decompile/cpp/typeop.cc?ref=703592e71c68520f45032673f3fd13bc5ac26798",
    "patch": "@@ -103,6 +103,8 @@ void TypeOp::registerInstructions(vector<TypeOp *> &inst,TypeFactory *tlst,\n   inst[CPUI_INSERT] = new TypeOpInsert(tlst);\n   inst[CPUI_EXTRACT] = new TypeOpExtract(tlst);\n   inst[CPUI_POPCOUNT] = new TypeOpPopcount(tlst);\n+  inst[CPUI_COUNTLEADINGZEROS] = new TypeOpCountLeadingZeros(tlst);\n+  inst[CPUI_COUNTLEADINGONES] = new TypeOpCountLeadingOnes(tlst);\n }\n \n /// Change basic data-type info (signed vs unsigned) and operator names ( '>>' vs '>>>' )\n@@ -1879,3 +1881,17 @@ TypeOpPopcount::TypeOpPopcount(TypeFactory *t)\n   opflags = PcodeOp::unary;\n   behave = new OpBehaviorPopcount();\n }\n+\n+TypeOpCountLeadingZeros::TypeOpCountLeadingZeros(TypeFactory *t)\n+  : TypeOpFunc(t,CPUI_COUNTLEADINGZEROS,\"COUNTLEADINGZEROS\",TYPE_INT,TYPE_UNKNOWN)\n+{\n+  opflags = PcodeOp::unary;\n+  behave = new OpBehaviorCountLeadingZeros();\n+}\n+\n+TypeOpCountLeadingOnes::TypeOpCountLeadingOnes(TypeFactory *t)\n+  : TypeOpFunc(t,CPUI_COUNTLEADINGONES,\"COUNTLEADINGONES\",TYPE_INT,TYPE_UNKNOWN)\n+{\n+  opflags = PcodeOp::unary;\n+  behave = new OpBehaviorCountLeadingOnes();\n+}"
  },
  {
    "sha": "b7b1ef30c7a3090d2d3fce95f5b7d4f524306d5a",
    "filename": "Ghidra/Features/Decompiler/src/decompile/cpp/typeop.hh",
    "status": "modified",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/NationalSecurityAgency/ghidra/blob/703592e71c68520f45032673f3fd13bc5ac26798/Ghidra/Features/Decompiler/src/decompile/cpp/typeop.hh",
    "raw_url": "https://github.com/NationalSecurityAgency/ghidra/raw/703592e71c68520f45032673f3fd13bc5ac26798/Ghidra/Features/Decompiler/src/decompile/cpp/typeop.hh",
    "contents_url": "https://api.github.com/repos/NationalSecurityAgency/ghidra/contents/Ghidra/Features/Decompiler/src/decompile/cpp/typeop.hh?ref=703592e71c68520f45032673f3fd13bc5ac26798",
    "patch": "@@ -802,4 +802,18 @@ public:\n   virtual void push(PrintLanguage *lng,const PcodeOp *op,const PcodeOp *readOp) const { lng->opPopcountOp(op); }\n };\n \n+/// \\brief Information about the COUNTLEADINGZEROS op-code\n+class TypeOpCountLeadingZeros : public TypeOpFunc {\n+public:\n+  TypeOpCountLeadingZeros(TypeFactory *t);\t\t\t///< Constructor\n+  virtual void push(PrintLanguage *lng,const PcodeOp *op,const PcodeOp *readOp) const { lng->opCountLeadingZerosOp(op); }\n+};\n+\n+/// \\brief Information about the COUNTLEADINGONES op-code\n+class TypeOpCountLeadingOnes : public TypeOpFunc {\n+public:\n+  TypeOpCountLeadingOnes(TypeFactory *t);\t\t\t///< Constructor\n+  virtual void push(PrintLanguage *lng,const PcodeOp *op,const PcodeOp *readOp) const { lng->opCountLeadingOnesOp(op); }\n+};\n+\n #endif"
  },
  {
    "sha": "3fcd5193974fe66db760f62b637696c144af7b2a",
    "filename": "Ghidra/Features/Decompiler/src/main/doc/pcoderef.xml",
    "status": "modified",
    "additions": 105,
    "deletions": 1,
    "changes": 106,
    "blob_url": "https://github.com/NationalSecurityAgency/ghidra/blob/703592e71c68520f45032673f3fd13bc5ac26798/Ghidra/Features/Decompiler/src/main/doc/pcoderef.xml",
    "raw_url": "https://github.com/NationalSecurityAgency/ghidra/raw/703592e71c68520f45032673f3fd13bc5ac26798/Ghidra/Features/Decompiler/src/main/doc/pcoderef.xml",
    "contents_url": "https://api.github.com/repos/NationalSecurityAgency/ghidra/contents/Ghidra/Features/Decompiler/src/main/doc/pcoderef.xml?ref=703592e71c68520f45032673f3fd13bc5ac26798",
    "patch": "@@ -2,7 +2,7 @@\n <article>\n <info>\n   <title>P-Code Reference Manual</title>\n-  <releaseinfo>Last updated September 5, 2019</releaseinfo>\n+  <releaseinfo>Last updated March 4, 2021</releaseinfo>\n </info>\n <table xml:id=\"mytoc.htmltable\" width=\"90%\" frame='none'>\n   <col width=\"25%\"/>\n@@ -136,6 +136,12 @@\n  <td><link linkend=\"cpui_bool_and\">BOOL_AND</link></td>\n  <td><link linkend=\"cpui_new\">NEW</link></td>\n </tr>\n+<tr>\n+ <td></td>\n+ <td><link linkend=\"cpui_countleadingzeros\">COUNTLEADINGZEROS</link></td>\n+ <td><link linkend=\"cpui_countleadingones\">COUNTLEADINGONES</link></td>\n+ <td></td>\n+</tr>\n </tbody>\n </table>\n <sect1 id=\"index\">\n@@ -3937,6 +3943,94 @@ to SLEIGH <emphasis role=\"bold\">bitrange</emphasis> syntax such as output = inpu\n </para>\n </sect2>\n \n+<sect2 id=\"cpui_countleadingzeros\"><title>COUNTLEADINGZEROS</title>\n+<informalexample>\n+<table xml:id=\"countleadingzeros.htmltable\" frame=\"above\" width=\"80%\" rules=\"groups\">\n+<col width=\"23%\"/>\n+<col width=\"15%\"/>\n+<col width=\"61%\"/>\n+<thead>\n+<tr>\n+  <td align=\"center\" colspan=\"2\"><emphasis role=\"bold\">Parameters</emphasis></td>\n+  <td><emphasis role=\"bold\">Description</emphasis></td>\n+</tr>\n+</thead>\n+<tbody>\n+<tr>\n+  <td align='right'>input0</td>\n+  <td/>\n+  <td>Input varnode to count.</td>\n+</tr>\n+<tr>\n+  <td align='right'>output</td>\n+  <td/>\n+  <td>Resulting integer varnode containing count.</td>\n+</tr>\n+</tbody>\n+<tfoot>\n+<tr>\n+  <td align=\"center\" colspan=\"2\"><emphasis role=\"bold\">Semantic statement</emphasis></td>\n+  <td/>\n+</tr>\n+<tr>\n+  <td/>\n+  <td colspan=\"2\"><code>output = countLeadingZeros(input0);</code></td>\n+</tr>\n+</tfoot>\n+</table>\n+</informalexample>\n+<para>\n+This operator counts the number of zeros starting at the most significant bit.\n+For instance, for a 4-byte varnode, a value of 0 returns 32, a value of 1\n+returns 31, and the value 2<superscript>31</superscript> returns 0.\n+The resulting count is zero extended into the output varnode.\n+</para>\n+</sect2>\n+\n+<sect2 id=\"cpui_countleadingones\"><title>COUNTLEADINGONES</title>\n+<informalexample>\n+<table xml:id=\"countleadingones.htmltable\" frame=\"above\" width=\"80%\" rules=\"groups\">\n+<col width=\"23%\"/>\n+<col width=\"15%\"/>\n+<col width=\"61%\"/>\n+<thead>\n+<tr>\n+  <td align=\"center\" colspan=\"2\"><emphasis role=\"bold\">Parameters</emphasis></td>\n+  <td><emphasis role=\"bold\">Description</emphasis></td>\n+</tr>\n+</thead>\n+<tbody>\n+<tr>\n+  <td align='right'>input0</td>\n+  <td/>\n+  <td>Input varnode to count.</td>\n+</tr>\n+<tr>\n+  <td align='right'>output</td>\n+  <td/>\n+  <td>Resulting integer varnode containing count.</td>\n+</tr>\n+</tbody>\n+<tfoot>\n+<tr>\n+  <td align=\"center\" colspan=\"2\"><emphasis role=\"bold\">Semantic statement</emphasis></td>\n+  <td/>\n+</tr>\n+<tr>\n+  <td/>\n+  <td colspan=\"2\"><code>output = countLeadingOnes(input0);</code></td>\n+</tr>\n+</tfoot>\n+</table>\n+</informalexample>\n+<para>\n+This operator counts the number of one bits starting at the most significant bit.\n+For instance, for a 4-byte varnode, a value of 0 returns 0, the value 2<superscript>31</superscript>\n+returns 1, and the value 2<superscript>32</superscript>-1 returns 32.\n+The resulting count is zero extended into the output varnode.\n+</para>\n+</sect2>\n+\n </sect1>\n \n <sect1 id=\"reference\">\n@@ -4420,6 +4514,16 @@ to SLEIGH <emphasis role=\"bold\">bitrange</emphasis> syntax such as output = inpu\n   <td><code>&lt;na></code></td>\n   <td>Extract a bit-range from a varnode</td>\n </tr>\n+<tr>\n+  <td>COUNTLEADINGZEROS</td>\n+  <td><code>countLeadingZeros(v0)</code></td>\n+  <td>Counts the number of leading zero bits</td>\n+</tr>\n+<tr>\n+  <td>COUNTLEADINGONES</td>\n+  <td><code>countLeadingOnes(v0)</code></td>\n+  <td>Counts the number of leading one bits</td>\n+</tr>\n </tbody>\n </table>\n </informalexample>"
  },
  {
    "sha": "89a9faa6ddd2a30b21860e37cec3f59f1c475827",
    "filename": "Ghidra/Features/Decompiler/src/main/doc/sleigh.xml",
    "status": "modified",
    "additions": 15,
    "deletions": 2,
    "changes": 17,
    "blob_url": "https://github.com/NationalSecurityAgency/ghidra/blob/703592e71c68520f45032673f3fd13bc5ac26798/Ghidra/Features/Decompiler/src/main/doc/sleigh.xml",
    "raw_url": "https://github.com/NationalSecurityAgency/ghidra/raw/703592e71c68520f45032673f3fd13bc5ac26798/Ghidra/Features/Decompiler/src/main/doc/sleigh.xml",
    "contents_url": "https://api.github.com/repos/NationalSecurityAgency/ghidra/contents/Ghidra/Features/Decompiler/src/main/doc/sleigh.xml?ref=703592e71c68520f45032673f3fd13bc5ac26798",
    "patch": "@@ -4,7 +4,7 @@\n   <title>SLEIGH</title>\n   <subtitle>A Language for Rapid Processor Specification</subtitle>\n   <pubdate>Originally published December 16, 2005</pubdate>\n-  <releaseinfo>Last updated October 28, 2020</releaseinfo>\n+  <releaseinfo>Last updated March 4, 2021</releaseinfo>\n </info>\n <simplesect>\n <info>\n@@ -279,7 +279,8 @@ general purpose processor instruction sets. They break up into groups.\n </tr>\n <tr>\n   <td>Logical</td>\n-  <td><code>INT_NEGATE, INT_XOR, INT_AND, INT_OR, INT_LEFT, INT_RIGHT, INT_SRIGHT, POPCOUNT</code></td>\n+  <td><code>INT_NEGATE, INT_XOR, INT_AND, INT_OR, INT_LEFT, INT_RIGHT, INT_SRIGHT,\n+  POPCOUNT, COUNTLEADINGZEROS, COUNTLEADINGONES</code></td>\n </tr>\n <tr>\n   <td>Integer Comparison</td>\n@@ -3824,6 +3825,18 @@ to lowest.\n   <td>Count the number of 1 bits in v0.\n   </td>\n </tr>\n+<tr>\n+  <td><code>COUNTLEADINGZEROS</code></td>\n+  <td><code>countLeadingZeros(v0)</code></td>\n+  <td>Count the number of leading 0 bits in v0.\n+  </td>\n+</tr>\n+<tr>\n+  <td><code>COUNTLEADINGONES</code></td>\n+  <td><code>countLeadingOnes(v0)</code></td>\n+  <td>Count the number of leading 1 bits in v0.\n+  </td>\n+</tr>\n <tr>\n   <td><code>(simulated)</code></td>\n   <td><code>v0[6,1]</code></td>"
  },
  {
    "sha": "196f438a13de5cf3f880176c7bd22b9113f27bba",
    "filename": "Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/pcode/emulate/callother/CountLeadingOnesOpBehavior.java",
    "status": "removed",
    "additions": 0,
    "deletions": 57,
    "changes": 57,
    "blob_url": "https://github.com/NationalSecurityAgency/ghidra/blob/c905c203f0300abdd8ef12ca847ec65111b6bd17/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/pcode/emulate/callother/CountLeadingOnesOpBehavior.java",
    "raw_url": "https://github.com/NationalSecurityAgency/ghidra/raw/c905c203f0300abdd8ef12ca847ec65111b6bd17/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/pcode/emulate/callother/CountLeadingOnesOpBehavior.java",
    "contents_url": "https://api.github.com/repos/NationalSecurityAgency/ghidra/contents/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/pcode/emulate/callother/CountLeadingOnesOpBehavior.java?ref=c905c203f0300abdd8ef12ca847ec65111b6bd17",
    "patch": "@@ -1,57 +0,0 @@\n-/* ###\n- * IP: GHIDRA\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- * \n- *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-package ghidra.pcode.emulate.callother;\n-\n-import ghidra.pcode.emulate.Emulate;\n-import ghidra.pcode.memstate.MemoryState;\n-import ghidra.pcodeCPort.error.LowlevelError;\n-import ghidra.program.model.pcode.Varnode;\n-\n-public class CountLeadingOnesOpBehavior implements OpBehaviorOther {\n-\n-\t@Override\n-\tpublic void evaluate(Emulate emu, Varnode out, Varnode[] inputs) {\n-\n-\t\tif (out == null) {\n-\t\t\tthrow new LowlevelError(\"CALLOTHER: Count Leading Ones op missing required output\");\n-\t\t}\n-\n-\t\tif (inputs.length != 2 || inputs[1].getSize() == 0 || inputs[1].isConstant()) {\n-\t\t\tthrow new LowlevelError(\n-\t\t\t\t\"CALLOTHER: Count Leading Ones op requires one non-constant varnode input\");\n-\t\t}\n-\n-\t\t// TODO: add support for larger varnode sizes\n-\n-\t\tVarnode in = inputs[1];\n-\t\tif (in.getSize() > 8 || out.getSize() > 8) {\n-\t\t\tthrow new LowlevelError(\n-\t\t\t\t\"CALLOTHER: Count Leading Ones op only supports varnodes of size 8-bytes or less\");\n-\t\t}\n-\n-\t\tMemoryState memoryState = emu.getMemoryState();\n-\n-\t\tlong value = memoryState.getValue(in);\n-\t\tlong mask = 1L << ((in.getSize() * 8) - 1);\n-\t\tlong count = 0;\n-\t\twhile ( (mask & value) != 0 ) {\n-\t\t\t++count;\n-\t\t\tvalue = value << 1;\n-\t\t}\n-\n-\t\tmemoryState.setValue(out, count);\n-\t}\n-}"
  },
  {
    "sha": "b65ee6b2764576df39ec002911d63d7de3003b3b",
    "filename": "Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/pcode/emulate/callother/CountLeadingZerosOpBehavior.java",
    "status": "removed",
    "additions": 0,
    "deletions": 60,
    "changes": 60,
    "blob_url": "https://github.com/NationalSecurityAgency/ghidra/blob/c905c203f0300abdd8ef12ca847ec65111b6bd17/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/pcode/emulate/callother/CountLeadingZerosOpBehavior.java",
    "raw_url": "https://github.com/NationalSecurityAgency/ghidra/raw/c905c203f0300abdd8ef12ca847ec65111b6bd17/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/pcode/emulate/callother/CountLeadingZerosOpBehavior.java",
    "contents_url": "https://api.github.com/repos/NationalSecurityAgency/ghidra/contents/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/pcode/emulate/callother/CountLeadingZerosOpBehavior.java?ref=c905c203f0300abdd8ef12ca847ec65111b6bd17",
    "patch": "@@ -1,60 +0,0 @@\n-/* ###\n- * IP: GHIDRA\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- * \n- *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-package ghidra.pcode.emulate.callother;\n-\n-import ghidra.pcode.emulate.Emulate;\n-import ghidra.pcode.memstate.MemoryState;\n-import ghidra.pcodeCPort.error.LowlevelError;\n-import ghidra.program.model.pcode.Varnode;\n-\n-public class CountLeadingZerosOpBehavior implements OpBehaviorOther {\n-\n-\t@Override\n-\tpublic void evaluate(Emulate emu, Varnode out, Varnode[] inputs) {\n-\n-\t\tif (out == null) {\n-\t\t\tthrow new LowlevelError(\"CALLOTHER: Count Leading Zeros op missing required output\");\n-\t\t}\n-\n-\t\tif (inputs.length != 2 || inputs[1].getSize() == 0 || inputs[1].isConstant()) {\n-\t\t\tthrow new LowlevelError(\n-\t\t\t\t\"CALLOTHER: Count Leading Zeros op requires one non-constant varnode input\");\n-\t\t}\n-\n-\t\t// TODO: add support for larger varnode sizes\n-\n-\t\tVarnode in = inputs[1];\n-\t\tif (in.getSize() > 8 || out.getSize() > 8) {\n-\t\t\tthrow new LowlevelError(\n-\t\t\t\t\"CALLOTHER: Count Leading Zeros op only supports varnodes of size 8-bytes or less\");\n-\t\t}\n-\n-\t\tMemoryState memoryState = emu.getMemoryState();\n-\n-\t\tlong value = memoryState.getValue(in);\n-\t\tlong mask = 1L << ((in.getSize() * 8) - 1);\n-\t\tlong count = 0;\n-\t\twhile (mask != 0) {\n-\t\t\tif ((mask & value) != 0) {\n-\t\t\t\tbreak;\n-\t\t\t}\n-\t\t\t++count;\n-\t\t\tmask >>>= 1;\n-\t\t}\n-\n-\t\tmemoryState.setValue(out, count);\n-\t}\n-}"
  },
  {
    "sha": "f42880cb31c6afca19e5591346cb58adb77c774b",
    "filename": "Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/pcode/opbehavior/OpBehaviorCountLeadingOnes.java",
    "status": "added",
    "additions": 45,
    "deletions": 0,
    "changes": 45,
    "blob_url": "https://github.com/NationalSecurityAgency/ghidra/blob/703592e71c68520f45032673f3fd13bc5ac26798/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/pcode/opbehavior/OpBehaviorCountLeadingOnes.java",
    "raw_url": "https://github.com/NationalSecurityAgency/ghidra/raw/703592e71c68520f45032673f3fd13bc5ac26798/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/pcode/opbehavior/OpBehaviorCountLeadingOnes.java",
    "contents_url": "https://api.github.com/repos/NationalSecurityAgency/ghidra/contents/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/pcode/opbehavior/OpBehaviorCountLeadingOnes.java?ref=703592e71c68520f45032673f3fd13bc5ac26798",
    "patch": "@@ -0,0 +1,45 @@\n+/* ###\n+ * IP: GHIDRA\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ * \n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package ghidra.pcode.opbehavior;\n+\n+import java.math.BigInteger;\n+\n+import ghidra.program.model.pcode.PcodeOp;\n+\n+public class OpBehaviorCountLeadingOnes extends UnaryOpBehavior {\n+\n+\tpublic OpBehaviorCountLeadingOnes() {\n+\t\tsuper(PcodeOp.COUNTLEADINGONES);\n+\t}\n+\n+\t@Override\n+\tpublic long evaluateUnary(int sizeout, int sizein, long val) {\n+\t\tlong mask = 1L << ((sizein * 8) - 1);\n+\t\tlong count = 0;\n+\t\twhile ( (mask & val) != 0 ) {\n+\t\t\t++count;\n+\t\t\tval = val << 1;\n+\t\t}\n+\n+\t\treturn count;\n+\t}\n+\n+\t@Override\n+\tpublic BigInteger evaluateUnary(int sizeout, int sizein, BigInteger unsignedIn1) {\n+\t\t// TODO Auto-generated method stub\n+\t\treturn null;\n+\t}\n+}"
  },
  {
    "sha": "71a3320ff77bacf22075430e8a7cc43dcbb9a9d0",
    "filename": "Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/pcode/opbehavior/OpBehaviorCountLeadingZeros.java",
    "status": "added",
    "additions": 48,
    "deletions": 0,
    "changes": 48,
    "blob_url": "https://github.com/NationalSecurityAgency/ghidra/blob/703592e71c68520f45032673f3fd13bc5ac26798/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/pcode/opbehavior/OpBehaviorCountLeadingZeros.java",
    "raw_url": "https://github.com/NationalSecurityAgency/ghidra/raw/703592e71c68520f45032673f3fd13bc5ac26798/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/pcode/opbehavior/OpBehaviorCountLeadingZeros.java",
    "contents_url": "https://api.github.com/repos/NationalSecurityAgency/ghidra/contents/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/pcode/opbehavior/OpBehaviorCountLeadingZeros.java?ref=703592e71c68520f45032673f3fd13bc5ac26798",
    "patch": "@@ -0,0 +1,48 @@\n+/* ###\n+ * IP: GHIDRA\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ * \n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package ghidra.pcode.opbehavior;\n+\n+import java.math.BigInteger;\n+\n+import ghidra.program.model.pcode.PcodeOp;\n+\n+public class OpBehaviorCountLeadingZeros extends UnaryOpBehavior {\n+\n+\tpublic OpBehaviorCountLeadingZeros() {\n+\t\tsuper(PcodeOp.COUNTLEADINGZEROS);\n+\t}\n+\n+\t@Override\n+\tpublic long evaluateUnary(int sizeout, int sizein, long val) {\n+\t\tlong mask = 1L << ((sizein * 8) - 1);\n+\t\tlong count = 0;\n+\t\twhile (mask != 0) {\n+\t\t\tif ((mask & val) != 0) {\n+\t\t\t\tbreak;\n+\t\t\t}\n+\t\t\t++count;\n+\t\t\tmask >>>= 1;\n+\t\t}\n+\n+\t\treturn count;\n+\t}\n+\n+\t@Override\n+\tpublic BigInteger evaluateUnary(int sizeout, int sizein, BigInteger unsignedIn1) {\n+\t\t// TODO Auto-generated method stub\n+\t\treturn null;\n+\t}\n+}"
  },
  {
    "sha": "f0e20bf9ecc3a55b01236a99c467f27c21f8ce6b",
    "filename": "Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/pcode/opbehavior/OpBehaviorFactory.java",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/NationalSecurityAgency/ghidra/blob/703592e71c68520f45032673f3fd13bc5ac26798/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/pcode/opbehavior/OpBehaviorFactory.java",
    "raw_url": "https://github.com/NationalSecurityAgency/ghidra/raw/703592e71c68520f45032673f3fd13bc5ac26798/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/pcode/opbehavior/OpBehaviorFactory.java",
    "contents_url": "https://api.github.com/repos/NationalSecurityAgency/ghidra/contents/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/pcode/opbehavior/OpBehaviorFactory.java?ref=703592e71c68520f45032673f3fd13bc5ac26798",
    "patch": "@@ -104,6 +104,8 @@\n \t\topBehaviorMap.put(PcodeOp.INSERT, new SpecialOpBehavior(PcodeOp.INSERT));\n \t\topBehaviorMap.put(PcodeOp.EXTRACT, new SpecialOpBehavior(PcodeOp.EXTRACT));\n \t\topBehaviorMap.put(PcodeOp.POPCOUNT, new OpBehaviorPopcount());\n+\t\topBehaviorMap.put(PcodeOp.COUNTLEADINGZEROS, new OpBehaviorCountLeadingZeros());\n+\t\topBehaviorMap.put(PcodeOp.COUNTLEADINGONES, new OpBehaviorCountLeadingOnes());\n \t}\n \n \tprivate OpBehaviorFactory() {"
  },
  {
    "sha": "2dfb3dc94976ec6a679af110d839891c763f809f",
    "filename": "Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/pcodeCPort/opcodes/OpCode.java",
    "status": "modified",
    "additions": 5,
    "deletions": 2,
    "changes": 7,
    "blob_url": "https://github.com/NationalSecurityAgency/ghidra/blob/703592e71c68520f45032673f3fd13bc5ac26798/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/pcodeCPort/opcodes/OpCode.java",
    "raw_url": "https://github.com/NationalSecurityAgency/ghidra/raw/703592e71c68520f45032673f3fd13bc5ac26798/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/pcodeCPort/opcodes/OpCode.java",
    "contents_url": "https://api.github.com/repos/NationalSecurityAgency/ghidra/contents/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/pcodeCPort/opcodes/OpCode.java?ref=703592e71c68520f45032673f3fd13bc5ac26798",
    "patch": "@@ -113,6 +113,8 @@\n \tCPUI_INSERT,\n \tCPUI_EXTRACT,\n \tCPUI_POPCOUNT,\n+\tCPUI_COUNTLEADINGZEROS,\n+\tCPUI_COUNTLEADINGONES,\n \n \tCPUI_MAX;\n \n@@ -203,13 +205,14 @@ public boolean getBooleanFlip()\n \t\t\"UNUSED1\", \"FLOAT_NAN\", \"FLOAT_ADD\", \"FLOAT_DIV\", \"FLOAT_MULT\", \"FLOAT_SUB\",\n \t\t\"FLOAT_NEG\", \"FLOAT_ABS\", \"FLOAT_SQRT\", \"INT2FLOAT\", \"FLOAT2FLOAT\", \"TRUNC\", \"CEIL\",\n \t\t\"FLOOR\", \"ROUND\", \"BUILD\", \"DELAY_SLOT\", \"PIECE\", \"SUBPIECE\", \"CAST\", \"LABEL\",\n-\t\t\"CROSSBUILD\", \"SEGMENTOP\", \"CPOOLREF\", \"NEW\", \"INSERT\", \"EXTRACT\", \"POPCOUNT\" };\n+\t\t\"CROSSBUILD\", \"SEGMENTOP\", \"CPOOLREF\", \"NEW\", \"INSERT\", \"EXTRACT\", \"POPCOUNT\",\n+\t\t\"COUNTLEADINGZEROS\", \"COUNTLEADINGONES\" };\n \n \tpublic static String get_opname(OpCode op) {\n \t\treturn opcode_name[op.ordinal()];\n \t}\n \n-\tstatic final int opcode_indices[] = { 0, 39, 37, 40, 38, 4, 6, 60, 7, 8, 9, 64, 5, 57, 1, 68, 66,\n+\tstatic final int opcode_indices[] = { 0, 39, 37, 40, 38, 4, 6, 60, 7, 8, 9, 64, 5, 57, 1, 73, 74, 68, 66,\n \t\t\t61, 71, 55, 52, 47, 48, 41, 43, 44, 49, 46, 51, 42, 53, 50, 58, 70, 54, 24, 19, 27, 21,\n \t\t\t33, 11, 29, 15, 16, 32, 25, 12, 28, 35, 30, 23, 22, 34, 18, 13, 14, 36, 31, 20, 26, 17,\n \t\t\t65, 2, 69, 62, 72, 10, 59, 67, 3, 63, 56, 45 };"
  },
  {
    "sha": "ad2ecbc01ab4a736683190643de2ac955083788a",
    "filename": "Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/pcodeCPort/slgh_compile/PcodeCompile.java",
    "status": "modified",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/NationalSecurityAgency/ghidra/blob/703592e71c68520f45032673f3fd13bc5ac26798/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/pcodeCPort/slgh_compile/PcodeCompile.java",
    "raw_url": "https://github.com/NationalSecurityAgency/ghidra/raw/703592e71c68520f45032673f3fd13bc5ac26798/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/pcodeCPort/slgh_compile/PcodeCompile.java",
    "contents_url": "https://api.github.com/repos/NationalSecurityAgency/ghidra/contents/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/pcodeCPort/slgh_compile/PcodeCompile.java?ref=703592e71c68520f45032673f3fd13bc5ac26798",
    "patch": "@@ -1001,6 +1001,12 @@ public Object findInternalFunction(Location location, String name, VectorSTL<Exp\n \t\tif (\"popcount\".equals(name) && hasOperands(1, operands, location, name)) {\n \t\t\treturn createOp(location, OpCode.CPUI_POPCOUNT, r);\n \t\t}\n+\t\tif (\"countLeadingZeros\".equals(name) && hasOperands(1, operands, location, name)) {\n+\t\t\treturn createOp(location, OpCode.CPUI_COUNTLEADINGZEROS, r);\n+\t\t}\n+\t\tif (\"countLeadingOnes\".equals(name) && hasOperands(1, operands, location, name)) {\n+\t\t\treturn createOp(location, OpCode.CPUI_COUNTLEADINGONES, r);\n+\t\t}\n \n \t\treturn null;\n \t}\n@@ -1077,6 +1083,12 @@ public boolean isInternalFunction(String name) {\n \t\tif (\"popcount\".equals(name)) {\n \t\t\treturn true;\n \t\t}\n+\t\tif (\"countLeadingZeros\".equals(name)) {\n+\t\t\treturn true;\n+\t\t}\n+\t\tif (\"countLeadingOnes\".equals(name)) {\n+\t\t\treturn true;\n+\t\t}\n \n \t\treturn false;\n \t}"
  },
  {
    "sha": "00c0bec60642a9c71b0104559fb6ab804ba61165",
    "filename": "Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/pcode/DynamicHash.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/NationalSecurityAgency/ghidra/blob/703592e71c68520f45032673f3fd13bc5ac26798/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/pcode/DynamicHash.java",
    "raw_url": "https://github.com/NationalSecurityAgency/ghidra/raw/703592e71c68520f45032673f3fd13bc5ac26798/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/pcode/DynamicHash.java",
    "contents_url": "https://api.github.com/repos/NationalSecurityAgency/ghidra/contents/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/pcode/DynamicHash.java?ref=703592e71c68520f45032673f3fd13bc5ac26798",
    "patch": "@@ -89,7 +89,7 @@\n \t\t0,\t\t\t\t// CAST is skipped\n \t\tPcodeOp.INT_ADD, PcodeOp.INT_ADD,\t\t// PTRADD and PTRSUB hash same as INT_ADD\n \t\tPcodeOp.SEGMENTOP, PcodeOp.CPOOLREF, PcodeOp.NEW, PcodeOp.INSERT, PcodeOp.EXTRACT,\n-\t\tPcodeOp.POPCOUNT };\n+\t\tPcodeOp.POPCOUNT, PcodeOp.COUNTLEADINGZEROS, PcodeOp.COUNTLEADINGONES };\n \n \t/**\n \t * An edge between a Varnode and a PcodeOp"
  },
  {
    "sha": "57e85d6680f917419c102b1a7403159a358ab6e0",
    "filename": "Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/pcode/PcodeOp.java",
    "status": "modified",
    "additions": 7,
    "deletions": 1,
    "changes": 8,
    "blob_url": "https://github.com/NationalSecurityAgency/ghidra/blob/703592e71c68520f45032673f3fd13bc5ac26798/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/pcode/PcodeOp.java",
    "raw_url": "https://github.com/NationalSecurityAgency/ghidra/raw/703592e71c68520f45032673f3fd13bc5ac26798/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/pcode/PcodeOp.java",
    "contents_url": "https://api.github.com/repos/NationalSecurityAgency/ghidra/contents/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/pcode/PcodeOp.java?ref=703592e71c68520f45032673f3fd13bc5ac26798",
    "patch": "@@ -131,8 +131,10 @@\n \tpublic static final int INSERT = 70;\n \tpublic static final int EXTRACT = 71;\n \tpublic static final int POPCOUNT = 72;\n+\tpublic static final int COUNTLEADINGZEROS = 73;\n+\tpublic static final int COUNTLEADINGONES = 74;\n \n-\tpublic static final int PCODE_MAX = 73;\n+\tpublic static final int PCODE_MAX = 75;\n \n \tprivate static Hashtable<String, Integer> opcodeTable;\n \n@@ -690,6 +692,10 @@ public final static String getMnemonic(int op) {\n \t\t\t\treturn \"EXTRACT\";\n \t\t\tcase POPCOUNT:\n \t\t\t\treturn \"POPCOUNT\";\n+\t\t\tcase COUNTLEADINGZEROS:\n+\t\t\t\treturn \"COUNTLEADINGZEROS\";\n+\t\t\tcase COUNTLEADINGONES:\n+\t\t\t\treturn \"COUNTLEADINGONES\";\n \n \t\t\tdefault:\n \t\t\t\treturn \"INVALID_OP\";"
  }
]
