[
  {
    "sha": "5715c80888a71a626ef3e24a5fb944cb87488b49",
    "filename": "Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/analysis/DefaultDataTypeManagerService.java",
    "status": "modified",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/NationalSecurityAgency/ghidra/blob/a02e67e41de0e9aa470f46a98e3c9373f9f3ecae/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/analysis/DefaultDataTypeManagerService.java",
    "raw_url": "https://github.com/NationalSecurityAgency/ghidra/raw/a02e67e41de0e9aa470f46a98e3c9373f9f3ecae/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/analysis/DefaultDataTypeManagerService.java",
    "contents_url": "https://api.github.com/repos/NationalSecurityAgency/ghidra/contents/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/analysis/DefaultDataTypeManagerService.java?ref=a02e67e41de0e9aa470f46a98e3c9373f9f3ecae",
    "patch": "@@ -145,6 +145,11 @@ public void edit(DataType dt) {\n \t\tthrow new UnsupportedOperationException();\n \t}\n \n+\t@Override\n+\tpublic void edit(DataType dt, int offset) {\n+\t\tthrow new UnsupportedOperationException();\n+\t}\n+\n \t@Override\n \tpublic DataTypeManager getBuiltInDataTypesManager() {\n \t\treturn builtInDataTypesManager;"
  },
  {
    "sha": "d98f37a81872f400cbd97e68c6c8678ebb6f8010",
    "filename": "Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/compositeeditor/CompositeEditorPanel.java",
    "status": "modified",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/NationalSecurityAgency/ghidra/blob/a02e67e41de0e9aa470f46a98e3c9373f9f3ecae/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/compositeeditor/CompositeEditorPanel.java",
    "raw_url": "https://github.com/NationalSecurityAgency/ghidra/raw/a02e67e41de0e9aa470f46a98e3c9373f9f3ecae/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/compositeeditor/CompositeEditorPanel.java",
    "contents_url": "https://api.github.com/repos/NationalSecurityAgency/ghidra/contents/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/compositeeditor/CompositeEditorPanel.java?ref=a02e67e41de0e9aa470f46a98e3c9373f9f3ecae",
    "patch": "@@ -1148,6 +1148,22 @@ public void selectionChanged() {\n \t\tclsm.setLeadSelectionIndex(column);\n \t}\n \n+\t/**\n+\t * Select and scroll to the component at the given offset.\n+\t * @param offset The offset of the component to scroll to.\n+\t */\n+\tpublic void selectComponentWithOffset(int offset) {\n+\t\tint num = model.getNumComponents();\n+\t\tfor (int i = 0; i < num; i++) {\n+\t\t\tDataTypeComponent dtc = model.getComponent(i);\n+\t\t\tif (dtc.getOffset() >= offset) {\n+\t\t\t\tmodel.setSelection(new int[]{i});\n+\t\t\t\tscrollToCell(i, 0);\n+\t\t\t\treturn;\n+\t\t\t}\n+\t\t}\n+\t}\n+\n \tprivate class ComponentStringCellEditor extends ComponentCellEditor {\n \t\tpublic ComponentStringCellEditor(JTextField textField) {\n \t\t\tsuper(textField);"
  },
  {
    "sha": "2e5d06b43b98a1790a6c8d99d01f694c2aadca9e",
    "filename": "Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/compositeeditor/StructureEditorProvider.java",
    "status": "modified",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/NationalSecurityAgency/ghidra/blob/a02e67e41de0e9aa470f46a98e3c9373f9f3ecae/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/compositeeditor/StructureEditorProvider.java",
    "raw_url": "https://github.com/NationalSecurityAgency/ghidra/raw/a02e67e41de0e9aa470f46a98e3c9373f9f3ecae/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/compositeeditor/StructureEditorProvider.java",
    "contents_url": "https://api.github.com/repos/NationalSecurityAgency/ghidra/contents/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/compositeeditor/StructureEditorProvider.java?ref=a02e67e41de0e9aa470f46a98e3c9373f9f3ecae",
    "patch": "@@ -87,4 +87,12 @@ public String getHelpName() {\n \tpublic String getHelpTopic() {\n \t\treturn \"DataTypeEditors\";\n \t}\n+\n+\t/**\n+\t * Scroll to the field at the given offset.\n+\t * @param offset The offset of the field to scroll to.\n+\t */\n+\tpublic void goToOffset(int offset) {\n+\t\teditorPanel.selectComponentWithOffset(offset);\n+\t}\n }"
  },
  {
    "sha": "992dc17b7bf37ac2b4dc65c6a9b1b99e426abf8f",
    "filename": "Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/datamgr/DataTypeManagerPlugin.java",
    "status": "modified",
    "additions": 6,
    "deletions": 1,
    "changes": 7,
    "blob_url": "https://github.com/NationalSecurityAgency/ghidra/blob/a02e67e41de0e9aa470f46a98e3c9373f9f3ecae/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/datamgr/DataTypeManagerPlugin.java",
    "raw_url": "https://github.com/NationalSecurityAgency/ghidra/raw/a02e67e41de0e9aa470f46a98e3c9373f9f3ecae/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/datamgr/DataTypeManagerPlugin.java",
    "contents_url": "https://api.github.com/repos/NationalSecurityAgency/ghidra/contents/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/datamgr/DataTypeManagerPlugin.java?ref=a02e67e41de0e9aa470f46a98e3c9373f9f3ecae",
    "patch": "@@ -468,6 +468,11 @@ public boolean isEditable(DataType dt) {\n \n \t@Override\n \tpublic void edit(DataType dt) {\n+\t\tedit(dt, -1);\n+\t}\n+\n+\t@Override\n+\tpublic void edit(DataType dt, int offset) {\n \t\tDataTypeManager dataTypeManager = dt.getDataTypeManager();\n \t\tif (dataTypeManager == null) {\n \t\t\tthrow new IllegalArgumentException(\n@@ -479,7 +484,7 @@ public void edit(DataType dt) {\n \t\t\tthrow new IllegalArgumentException(\n \t\t\t\t\"DataType \" + dt.getName() + \" has no category path!\");\n \t\t}\n-\t\teditorManager.edit(dt);\n+\t\teditorManager.edit(dt, offset);\n \t}\n \n \t@Override"
  },
  {
    "sha": "c36a7574eb416923a6423d50795dcd2ee463f184",
    "filename": "Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/datamgr/editor/DataTypeEditorManager.java",
    "status": "modified",
    "additions": 36,
    "deletions": 20,
    "changes": 56,
    "blob_url": "https://github.com/NationalSecurityAgency/ghidra/blob/a02e67e41de0e9aa470f46a98e3c9373f9f3ecae/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/datamgr/editor/DataTypeEditorManager.java",
    "raw_url": "https://github.com/NationalSecurityAgency/ghidra/raw/a02e67e41de0e9aa470f46a98e3c9373f9f3ecae/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/datamgr/editor/DataTypeEditorManager.java",
    "contents_url": "https://api.github.com/repos/NationalSecurityAgency/ghidra/contents/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/datamgr/editor/DataTypeEditorManager.java?ref=a02e67e41de0e9aa470f46a98e3c9373f9f3ecae",
    "patch": "@@ -101,8 +101,9 @@ public boolean isEditable(DataType dt) {\n \t * is already being edited then it is brought to the front. Otherwise, a new editor is created\n \t * and displayed.\n \t * @param dataType the data type to edit.\n+\t * @param offset Scroll to the field with this offset, if it is non-negative.\n \t */\n-\tpublic void edit(DataType dataType) {\n+\tpublic void edit(DataType dataType, int offset) {\n \n \t\tDataTypeManager dataTypeManager = dataType.getDataTypeManager();\n \t\tif (dataTypeManager == null) {\n@@ -115,27 +116,42 @@ public void edit(DataType dataType) {\n \t\t\tComponentProvider componentProvider = editor.getComponentProvider();\n \t\t\tplugin.getTool().showComponentProvider(componentProvider, true);\n \t\t\tcomponentProvider.toFront();\n-\t\t\treturn;\n-\t\t}\n-\n-\t\tif (dataType instanceof Enum) {\n-\t\t\teditor = new EnumEditorProvider(plugin, (Enum) dataType);\n-\t\t}\n-\t\telse if (dataType instanceof Union) {\n-\t\t\teditor = new UnionEditorProvider(plugin, (Union) dataType, showUnionNumbersInHex());\n-\t\t}\n-\t\telse if (dataType instanceof Structure) {\n-\t\t\teditor = new StructureEditorProvider(plugin, (Structure) dataType,\n-\t\t\t\tshowStructureNumbersInHex());\n-\t\t}\n-\t\telse if (dataType instanceof FunctionDefinition) {\n-\t\t\teditFunctionSignature((FunctionDefinition) dataType);\n+\t\t} else {\n+\t\t\tif (dataType instanceof Enum) {\n+\t\t\t\teditor = new EnumEditorProvider(plugin, (Enum) dataType);\n+\t\t\t}\n+\t\t\telse if (dataType instanceof Union) {\n+\t\t\t\teditor = new UnionEditorProvider(plugin, (Union) dataType, showUnionNumbersInHex());\n+\t\t\t}\n+\t\t\telse if (dataType instanceof Structure) {\n+\t\t\t\teditor = new StructureEditorProvider(plugin, (Structure) dataType,\n+\t\t\t\t\tshowStructureNumbersInHex());\n+\t\t\t}\n+\t\t\telse if (dataType instanceof FunctionDefinition) {\n+\t\t\t\teditFunctionSignature((FunctionDefinition) dataType);\n+\t\t\t}\n+\t\t\tif (editor == null) {\n+\t\t\t\treturn;\n+\t\t\t}\n+\t\t\teditor.addEditorListener(this);\n+\t\t\teditorList.add(editor);\n \t\t}\n-\t\tif (editor == null) {\n-\t\t\treturn;\n+\t\tif (offset >= 0) {\n+\t\t\tif (editor instanceof StructureEditorProvider)\n+\t\t\t\t((StructureEditorProvider) editor).goToOffset(offset);\n+\t\t\telse\n+\t\t\t\tthrow new IllegalArgumentException(\"Cannot navigate to an offset with this data type.\");\n \t\t}\n-\t\teditor.addEditorListener(this);\n-\t\teditorList.add(editor);\n+\t}\n+\n+\t/**\n+\t * Displays a data type editor for editing the indicated data type. If the data type is\n+\t * is already being edited then it is brought to the front. Otherwise, a new editor is created\n+\t * and displayed.\n+\t * @param dataType the data type to edit.\n+\t */\n+\tpublic void edit(DataType dataType) {\n+\t\tedit(dataType, -1);\n \t}\n \n \tprivate void installEditorActions() {"
  },
  {
    "sha": "f31ad3667709897a0332141495fd281e6b4d0c2e",
    "filename": "Ghidra/Features/Base/src/main/java/ghidra/app/services/DataTypeManagerService.java",
    "status": "modified",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/NationalSecurityAgency/ghidra/blob/a02e67e41de0e9aa470f46a98e3c9373f9f3ecae/Ghidra/Features/Base/src/main/java/ghidra/app/services/DataTypeManagerService.java",
    "raw_url": "https://github.com/NationalSecurityAgency/ghidra/raw/a02e67e41de0e9aa470f46a98e3c9373f9f3ecae/Ghidra/Features/Base/src/main/java/ghidra/app/services/DataTypeManagerService.java",
    "contents_url": "https://api.github.com/repos/NationalSecurityAgency/ghidra/contents/Ghidra/Features/Base/src/main/java/ghidra/app/services/DataTypeManagerService.java?ref=a02e67e41de0e9aa470f46a98e3c9373f9f3ecae",
    "patch": "@@ -101,6 +101,16 @@\n \t */\n \tpublic void edit(DataType dt);\n \n+\t/**\n+\t * Pop up an editor dialog for the given data type and offset.\n+\t *\n+\t * @param dt data type that either a Structure or a Union; built in types cannot be edited\n+\t * @param offset offset of the field within dt to edit / focus\n+\t * @throws IllegalArgumentException if the given has not been resolved by a DataTypeManager;\n+\t *         in other words, if {@link DataType#getDataTypeManager()} returns null.\n+\t */\n+\tpublic void edit(DataType dt, int offset);\n+\n \t/**\n \t * Closes the archive for the given {@link DataTypeManager}.  This will ignore request to \n \t * close the open Program's manager and the built-in manager.  "
  },
  {
    "sha": "f30683dbde66c0f6b7f7002b1e50448ad1506f9f",
    "filename": "Ghidra/Features/Base/src/test/java/ghidra/app/services/TestDoubleDataTypeManagerService.java",
    "status": "modified",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/NationalSecurityAgency/ghidra/blob/a02e67e41de0e9aa470f46a98e3c9373f9f3ecae/Ghidra/Features/Base/src/test/java/ghidra/app/services/TestDoubleDataTypeManagerService.java",
    "raw_url": "https://github.com/NationalSecurityAgency/ghidra/raw/a02e67e41de0e9aa470f46a98e3c9373f9f3ecae/Ghidra/Features/Base/src/test/java/ghidra/app/services/TestDoubleDataTypeManagerService.java",
    "contents_url": "https://api.github.com/repos/NationalSecurityAgency/ghidra/contents/Ghidra/Features/Base/src/test/java/ghidra/app/services/TestDoubleDataTypeManagerService.java?ref=a02e67e41de0e9aa470f46a98e3c9373f9f3ecae",
    "patch": "@@ -94,6 +94,11 @@ public void edit(DataType dt) {\n \t\tthrow new UnsupportedOperationException();\n \t}\n \n+\t@Override\n+\tpublic void edit(DataType dt, int offset) {\n+\t\tthrow new UnsupportedOperationException();\n+\t}\n+\n \t@Override\n \tpublic void closeArchive(DataTypeManager dtm) {\n \t\tthrow new UnsupportedOperationException();"
  },
  {
    "sha": "da01be065c0f79a2dd854ef8a9553acfc98ce39d",
    "filename": "Ghidra/Features/Decompiler/src/main/java/ghidra/app/decompiler/component/CDisplayPanel.java",
    "status": "modified",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/NationalSecurityAgency/ghidra/blob/a02e67e41de0e9aa470f46a98e3c9373f9f3ecae/Ghidra/Features/Decompiler/src/main/java/ghidra/app/decompiler/component/CDisplayPanel.java",
    "raw_url": "https://github.com/NationalSecurityAgency/ghidra/raw/a02e67e41de0e9aa470f46a98e3c9373f9f3ecae/Ghidra/Features/Decompiler/src/main/java/ghidra/app/decompiler/component/CDisplayPanel.java",
    "contents_url": "https://api.github.com/repos/NationalSecurityAgency/ghidra/contents/Ghidra/Features/Decompiler/src/main/java/ghidra/app/decompiler/component/CDisplayPanel.java?ref=a02e67e41de0e9aa470f46a98e3c9373f9f3ecae",
    "patch": "@@ -24,6 +24,7 @@\n import ghidra.app.plugin.core.decompile.DecompilerClipboardProvider;\n import ghidra.app.util.viewer.listingpanel.ProgramLocationListener;\n import ghidra.program.model.address.Address;\n+import ghidra.program.model.data.DataType;\n import ghidra.program.model.listing.Function;\n import ghidra.program.model.listing.Program;\n import ghidra.program.util.ProgramLocation;\n@@ -140,6 +141,11 @@ public void goToFunction(Function function, boolean newWindow) {\n \t\t// stub\n \t}\n \n+\t@Override\n+\tpublic void goToField(DataType dataType, int offset) {\n+\t\t// stub\n+\t}\n+\n \t@Override\n \tpublic void locationChanged(ProgramLocation programLocation) {\n \t\tif (locationListener == null) {"
  },
  {
    "sha": "5cbb5454731f15790226789da9921fd0612e60c8",
    "filename": "Ghidra/Features/Decompiler/src/main/java/ghidra/app/decompiler/component/DecompilerCallbackHandler.java",
    "status": "modified",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/NationalSecurityAgency/ghidra/blob/a02e67e41de0e9aa470f46a98e3c9373f9f3ecae/Ghidra/Features/Decompiler/src/main/java/ghidra/app/decompiler/component/DecompilerCallbackHandler.java",
    "raw_url": "https://github.com/NationalSecurityAgency/ghidra/raw/a02e67e41de0e9aa470f46a98e3c9373f9f3ecae/Ghidra/Features/Decompiler/src/main/java/ghidra/app/decompiler/component/DecompilerCallbackHandler.java",
    "contents_url": "https://api.github.com/repos/NationalSecurityAgency/ghidra/contents/Ghidra/Features/Decompiler/src/main/java/ghidra/app/decompiler/component/DecompilerCallbackHandler.java?ref=a02e67e41de0e9aa470f46a98e3c9373f9f3ecae",
    "patch": "@@ -16,6 +16,7 @@\n package ghidra.app.decompiler.component;\n \n import ghidra.program.model.address.Address;\n+import ghidra.program.model.data.DataType;\n import ghidra.program.model.listing.Function;\n import ghidra.program.util.ProgramLocation;\n import ghidra.program.util.ProgramSelection;\n@@ -47,4 +48,6 @@\n \tvoid goToFunction(Function function, boolean newWindow);\n \n \tvoid doWheNotBusy(Callback c);\n+\n+\tvoid goToField(DataType dataType, int offset);\n }"
  },
  {
    "sha": "0c5007b439ef92d35a00d4f609b267218b7458d3",
    "filename": "Ghidra/Features/Decompiler/src/main/java/ghidra/app/decompiler/component/DecompilerController.java",
    "status": "modified",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/NationalSecurityAgency/ghidra/blob/a02e67e41de0e9aa470f46a98e3c9373f9f3ecae/Ghidra/Features/Decompiler/src/main/java/ghidra/app/decompiler/component/DecompilerController.java",
    "raw_url": "https://github.com/NationalSecurityAgency/ghidra/raw/a02e67e41de0e9aa470f46a98e3c9373f9f3ecae/Ghidra/Features/Decompiler/src/main/java/ghidra/app/decompiler/component/DecompilerController.java",
    "contents_url": "https://api.github.com/repos/NationalSecurityAgency/ghidra/contents/Ghidra/Features/Decompiler/src/main/java/ghidra/app/decompiler/component/DecompilerController.java?ref=a02e67e41de0e9aa470f46a98e3c9373f9f3ecae",
    "patch": "@@ -25,6 +25,7 @@\n import ghidra.app.decompiler.*;\n import ghidra.app.plugin.core.decompile.DecompilerClipboardProvider;\n import ghidra.program.model.address.Address;\n+import ghidra.program.model.data.DataType;\n import ghidra.program.model.listing.*;\n import ghidra.program.model.pcode.HighFunction;\n import ghidra.program.util.ProgramLocation;\n@@ -291,6 +292,10 @@ void goToScalar(long value, boolean newWindow) {\n \t\tcallbackHandler.goToScalar(value, newWindow);\n \t}\n \n+\tpublic void goToField(DataType dataType, int offset) {\n+\t\tcallbackHandler.goToField(dataType, offset);\n+\t}\n+\n \tpublic DecompileData getDecompileData() {\n \t\treturn currentDecompileData;\n \t}"
  },
  {
    "sha": "43868f70f32d3b910927efd6f74ac15834a0f7ac",
    "filename": "Ghidra/Features/Decompiler/src/main/java/ghidra/app/decompiler/component/DecompilerPanel.java",
    "status": "modified",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/NationalSecurityAgency/ghidra/blob/a02e67e41de0e9aa470f46a98e3c9373f9f3ecae/Ghidra/Features/Decompiler/src/main/java/ghidra/app/decompiler/component/DecompilerPanel.java",
    "raw_url": "https://github.com/NationalSecurityAgency/ghidra/raw/a02e67e41de0e9aa470f46a98e3c9373f9f3ecae/Ghidra/Features/Decompiler/src/main/java/ghidra/app/decompiler/component/DecompilerPanel.java",
    "contents_url": "https://api.github.com/repos/NationalSecurityAgency/ghidra/contents/Ghidra/Features/Decompiler/src/main/java/ghidra/app/decompiler/component/DecompilerPanel.java?ref=a02e67e41de0e9aa470f46a98e3c9373f9f3ecae",
    "patch": "@@ -45,6 +45,7 @@\n import ghidra.app.plugin.core.decompile.actions.FieldBasedSearchLocation;\n import ghidra.app.plugin.core.decompile.actions.TokenHighlightColorProvider;\n import ghidra.program.model.address.*;\n+import ghidra.program.model.data.DataType;\n import ghidra.program.model.listing.Function;\n import ghidra.program.model.listing.Program;\n import ghidra.program.model.pcode.*;\n@@ -599,6 +600,9 @@ else if (token instanceof ClangCommentToken) {\n \t\telse if (token instanceof ClangSyntaxToken) {\n \t\t\ttryGoToSyntaxToken((ClangSyntaxToken) token);\n \t\t}\n+\t\telse if (token instanceof ClangFieldToken) {\n+\t\t\ttryGoToFieldToken((ClangFieldToken) token);\n+\t\t}\n \t}\n \n \tprivate void tryGoToComment(FieldLocation location, MouseEvent event, ClangTextField textField,\n@@ -731,6 +735,12 @@ else if (text.startsWith(\"(\") && text.endsWith(\")\")) {\n \t\t}\n \t}\n \n+\tprivate void tryGoToFieldToken(ClangFieldToken token) {\n+\t\tDataType dataType = token.getDataType();\n+\t\tint offset = token.getOffset();\n+\t\tcontroller.goToField(dataType, offset);\n+\t}\n+\n \tProgram getProgram() {\n \t\treturn decompileData.getProgram();\n \t}"
  },
  {
    "sha": "be5252f6b22a557c6936114c91f41c8eed0a8edb",
    "filename": "Ghidra/Features/Decompiler/src/main/java/ghidra/app/plugin/core/decompile/DecompilerProvider.java",
    "status": "modified",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/NationalSecurityAgency/ghidra/blob/a02e67e41de0e9aa470f46a98e3c9373f9f3ecae/Ghidra/Features/Decompiler/src/main/java/ghidra/app/plugin/core/decompile/DecompilerProvider.java",
    "raw_url": "https://github.com/NationalSecurityAgency/ghidra/raw/a02e67e41de0e9aa470f46a98e3c9373f9f3ecae/Ghidra/Features/Decompiler/src/main/java/ghidra/app/plugin/core/decompile/DecompilerProvider.java",
    "contents_url": "https://api.github.com/repos/NationalSecurityAgency/ghidra/contents/Ghidra/Features/Decompiler/src/main/java/ghidra/app/plugin/core/decompile/DecompilerProvider.java?ref=a02e67e41de0e9aa470f46a98e3c9373f9f3ecae",
    "patch": "@@ -32,6 +32,7 @@\n import ghidra.app.decompiler.*;\n import ghidra.app.decompiler.component.*;\n import ghidra.app.nav.*;\n+import ghidra.app.plugin.core.datamgr.util.DataTypeUtils;\n import ghidra.app.plugin.core.decompile.actions.*;\n import ghidra.app.services.*;\n import ghidra.app.util.HelpTopics;\n@@ -42,6 +43,8 @@\n import ghidra.framework.plugintool.NavigatableComponentProviderAdapter;\n import ghidra.framework.plugintool.util.ServiceListener;\n import ghidra.program.model.address.*;\n+import ghidra.program.model.data.DataType;\n+import ghidra.program.model.data.DataTypeManager;\n import ghidra.program.model.listing.Function;\n import ghidra.program.model.listing.Program;\n import ghidra.program.model.symbol.*;\n@@ -645,6 +648,19 @@ public void goToFunction(Function function, boolean newWindow) {\n \t\t}\n \t}\n \n+\t@Override\n+\tpublic void goToField(DataType dataType, int offset) {\n+\t\tDataType baseDataType = DataTypeUtils.getBaseDataType(dataType);\n+\t\tDataTypeManager dataTypeManager = program.getDataTypeManager();\n+\t\tDataTypeManager baseDtDTM = baseDataType.getDataTypeManager();\n+\t\tif (baseDtDTM != dataTypeManager) {\n+\t\t\tbaseDataType = baseDataType.clone(dataTypeManager);\n+\t\t}\n+\t\tfinal DataTypeManagerService service =\n+\t\t\ttool.getService(DataTypeManagerService.class);\n+\t\tservice.edit(baseDataType, offset);\n+\t}\n+\n \t@Override\n \tpublic void doWheNotBusy(Callback c) {\n \t\tfollowUpWork.offer(c);"
  }
]
