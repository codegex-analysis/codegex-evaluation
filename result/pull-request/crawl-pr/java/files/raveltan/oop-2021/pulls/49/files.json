[
  {
    "sha": "15ef3f37e6a7ef350f471c83bead01ebac1d1599",
    "filename": "1.Compilation/JAVA Calculator/Calculator.java (2).docx",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/raveltan/oop-2021/blob/91fc499c5f54cc52e8f4ab2cfcac56453081a873/1.Compilation/JAVA%20Calculator/Calculator.java%20(2).docx",
    "raw_url": "https://github.com/raveltan/oop-2021/raw/91fc499c5f54cc52e8f4ab2cfcac56453081a873/1.Compilation/JAVA%20Calculator/Calculator.java%20(2).docx",
    "contents_url": "https://api.github.com/repos/raveltan/oop-2021/contents/1.Compilation/JAVA%20Calculator/Calculator.java%20(2).docx?ref=91fc499c5f54cc52e8f4ab2cfcac56453081a873"
  },
  {
    "sha": "6666534bf85075cff00cee71b248033fa9f0a61e",
    "filename": "2.operations - Shortcut.lnk",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/raveltan/oop-2021/blob/91fc499c5f54cc52e8f4ab2cfcac56453081a873/2.operations%20-%20Shortcut.lnk",
    "raw_url": "https://github.com/raveltan/oop-2021/raw/91fc499c5f54cc52e8f4ab2cfcac56453081a873/2.operations%20-%20Shortcut.lnk",
    "contents_url": "https://api.github.com/repos/raveltan/oop-2021/contents/2.operations%20-%20Shortcut.lnk?ref=91fc499c5f54cc52e8f4ab2cfcac56453081a873"
  },
  {
    "sha": "bf50f0f515aafdbb752e1d5be742eb6e199b09ab",
    "filename": "Practical java",
    "status": "added",
    "additions": 72,
    "deletions": 0,
    "changes": 72,
    "blob_url": "https://github.com/raveltan/oop-2021/blob/91fc499c5f54cc52e8f4ab2cfcac56453081a873/Practical%20java",
    "raw_url": "https://github.com/raveltan/oop-2021/raw/91fc499c5f54cc52e8f4ab2cfcac56453081a873/Practical%20java",
    "contents_url": "https://api.github.com/repos/raveltan/oop-2021/contents/Practical%20java?ref=91fc499c5f54cc52e8f4ab2cfcac56453081a873",
    "patch": "@@ -0,0 +1,72 @@\n+//Calculator\n+import java.util.Scanner;\n+//Numbers with Decimals \n+// addition, subtraction, multiplication, division, exponenets\n+//Modulus\n+//error messages when something is wrong\n+// keeps running until told to quit\n+\n+\n+public class Calculator{\n+\n+\t//MAIN PROGRAM\n+\tpublic static void main(String[] args){\n+\t\tScanner keyboard = new Scanner(System.in);\n+\n+\t\tdouble num1, num2, ans;\n+\t\tString oper;\n+\n+\t\tSystem.out.println(\"NAGMA's SIMPLE CALCULATOR PROGRAM\");\n+\t\t\n+\t\tdo{\n+\t\t\tSystem.out.println(\"Please enter your calculation (number 1 [operation] number 2: \");\n+\t\t\tSystem.out.print(\"> \");\n+\t\t\tnum1 = keyboard.nextDouble();\n+\t\t\toper = keyboard.next();\n+\t\t\tnum2 = keyboard.nextDouble();\n+\n+\t\t\tif (oper.equals(\"+\")){\n+\t\t\t\tans = num1 + num2;\n+\t\t\t}\n+\t\t\telse if (oper.equals(\"-\")){\n+\t\t\t\tans = num1 - num2;\n+\t\t\t}\n+\t\t\telse if (oper.equals(\"*\")){\n+\t\t\t\tans = num1 * num2;\n+\t\t\t}\n+\t\t\telse if (oper.equals(\"/\")){\n+\t\t\t\tans = num1/num2;\n+\t\t\t}\n+\t\t\telse if (oper.equals(\"^\")){\n+\t\t\t\tans = Math.pow(num1, num2);\n+\t\t\t}\n+\t\t\telse if (oper.equals(\"%\")){\n+\t\t\t\t//converting double to long to do modulus\n+\t\t\t\tlong n1 = Math.round(num1);\n+\t\t\t\tlong n2 = Math.round(num2);\n+\t\t\t\tans = is_Mod(n1, n2);\n+\t\t\t}\n+\t\t\telse{\n+\t\t\t\tSystem.out.println(\"Undefined operator: '\" + oper + \"'.\");\n+\t\t\t\tans = 0;\n+\t\t\t}\n+\t\t\t\n+\t\t\tSystem.out.println(\"Result: \" + ans);\n+\t\t}\n+\t\twhile(num1!=0);\n+\t\tSystem.out.println(\"CALCULATION OVER. Bye.\");\n+\t}\n+\n+\t//Calculates Modulus\n+\tpublic static double is_Mod(long num1, long num2){\n+\t\tdouble ans;\n+\t\tif (num1%num2 == 0){\n+\t\t\tSystem.out.println(\"\\n\" + num1 + \" is fully divisible by \" + num2);\n+\t\t\treturn ans = num1%num2;\n+\t\t}\n+\t\telse {\n+\t\t\tSystem.out.println(\"\\n\" + num1 + \" returns a remainder when divided by \" + num2);\n+\t\t\treturn ans = num1%num2;\n+\t\t}\n+\t}\n+}"
  },
  {
    "sha": "9062c3a72c2d6fdd987c15892e3e27202d06fea5",
    "filename": "calculator java program",
    "status": "added",
    "additions": 164,
    "deletions": 0,
    "changes": 164,
    "blob_url": "https://github.com/raveltan/oop-2021/blob/91fc499c5f54cc52e8f4ab2cfcac56453081a873/calculator%20java%20program",
    "raw_url": "https://github.com/raveltan/oop-2021/raw/91fc499c5f54cc52e8f4ab2cfcac56453081a873/calculator%20java%20program",
    "contents_url": "https://api.github.com/repos/raveltan/oop-2021/contents/calculator%20java%20program?ref=91fc499c5f54cc52e8f4ab2cfcac56453081a873",
    "patch": "@@ -0,0 +1,164 @@\n+//Calculator java\n+\n+import java.util.Scanner;\n+\n+//Numbers with Decimals \n+\n+// addition, subtraction, multiplication, division, exponenets\n+\n+//Modulus\n+\n+//error messages when something is wrong\n+\n+// keeps running until told to quit\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+public class Calculator{\n+\n+\n+\n+\n+\t//MAIN PROGRAM\n+\n+\tpublic static void main(String[] args){\n+\n+\t\tScanner keyboard = new Scanner(System.in);\n+\n+\n+\n+\n+\t\tdouble num1, num2, ans;\n+\n+\t\tString oper;\n+\n+\n+\n+\n+\t\tSystem.out.println(\"NAGMA's SIMPLE CALCULATOR PROGRAM\");\n+\n+\t\t\n+\n+\t\tdo{\n+\n+\t\t\tSystem.out.println(\"Please enter your calculation (number 1 [operation] number 2: \");\n+\n+\t\t\tSystem.out.print(\"> \");\n+\n+\t\t\tnum1 = keyboard.nextDouble();\n+\n+\t\t\toper = keyboard.next();\n+\n+\t\t\tnum2 = keyboard.nextDouble();\n+\n+\n+\n+\n+\t\t\tif (oper.equals(\"+\")){\n+\n+\t\t\t\tans = num1 + num2;\n+\n+\t\t\t}\n+\n+\t\t\telse if (oper.equals(\"-\")){\n+\n+\t\t\t\tans = num1 - num2;\n+\n+\t\t\t}\n+\n+\t\t\telse if (oper.equals(\"*\")){\n+\n+\t\t\t\tans = num1 * num2;\n+\n+\t\t\t}\n+\n+\t\t\telse if (oper.equals(\"/\")){\n+\n+\t\t\t\tans = num1/num2;\n+\n+\t\t\t}\n+\n+\t\t\telse if (oper.equals(\"^\")){\n+\n+\t\t\t\tans = Math.pow(num1, num2);\n+\n+\t\t\t}\n+\n+\t\t\telse if (oper.equals(\"%\")){\n+\n+\t\t\t\t//converting double to long to do modulus\n+\n+\t\t\t\tlong n1 = Math.round(num1);\n+\n+\t\t\t\tlong n2 = Math.round(num2);\n+\n+\t\t\t\tans = is_Mod(n1, n2);\n+\n+\t\t\t}\n+\n+\t\t\telse{\n+\n+\t\t\t\tSystem.out.println(\"Undefined operator: '\" + oper + \"'.\");\n+\n+\t\t\t\tans = 0;\n+\n+\t\t\t}\n+\n+\t\t\t\n+\n+\t\t\tSystem.out.println(\"Result: \" + ans);\n+\n+\t\t}\n+\n+\t\twhile(num1!=0);\n+\n+\t\tSystem.out.println(\"CALCULATION OVER. Bye.\");\n+\n+\t}\n+\n+\n+\n+\n+\t//Calculates Modulus\n+\n+\tpublic static double is_Mod(long num1, long num2){\n+\n+\t\tdouble ans;\n+\n+\t\tif (num1%num2 == 0){\n+\n+\t\t\tSystem.out.println(\"\\n\" + num1 + \" is fully divisible by \" + num2);\n+\n+\t\t\treturn ans = num1%num2;\n+\n+\t\t}\n+\n+\t\telse {\n+\n+\t\t\tSystem.out.println(\"\\n\" + num1 + \" returns a remainder when divided by \" + num2);\n+\n+\t\t\treturn ans = num1%num2;\n+\n+\t\t}\n+\n+\t}\n+\n+}\n+"
  },
  {
    "sha": "2f40a71b8c5e61a5f11a3997b63abe60986b3579",
    "filename": "oop-2021",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": null,
    "raw_url": null,
    "contents_url": "https://api.github.com/repos/raveltan/oop-2021/contents/oop-2021?ref=91fc499c5f54cc52e8f4ab2cfcac56453081a873",
    "patch": "@@ -0,0 +1 @@\n+Subproject commit 2f40a71b8c5e61a5f11a3997b63abe60986b3579"
  }
]
