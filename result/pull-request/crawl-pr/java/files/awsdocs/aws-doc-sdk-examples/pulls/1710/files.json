[
  {
    "sha": "6c27d0b66815ffea6f30979fad839388c4dab6fd",
    "filename": "go/example_code/cloudwatch/getmetricdata.go",
    "status": "added",
    "additions": 84,
    "deletions": 0,
    "changes": 84,
    "blob_url": "https://github.com/awsdocs/aws-doc-sdk-examples/blob/42b396334f3c23769d39d7f94d32ec12a73a754c/go/example_code/cloudwatch/getmetricdata.go",
    "raw_url": "https://github.com/awsdocs/aws-doc-sdk-examples/raw/42b396334f3c23769d39d7f94d32ec12a73a754c/go/example_code/cloudwatch/getmetricdata.go",
    "contents_url": "https://api.github.com/repos/awsdocs/aws-doc-sdk-examples/contents/go/example_code/cloudwatch/getmetricdata.go?ref=42b396334f3c23769d39d7f94d32ec12a73a754c",
    "patch": "@@ -0,0 +1,84 @@\n+// snippet-comment:[These are tags for the AWS doc team's sample catalog. Do not remove.]\n+// snippet-sourceauthor:[neo7337]\n+// snippet-sourcedescription:[Retrieves a list of published AWS CloudWatch metrics.]\n+// snippet-keyword:[AWS CloudWatch]\n+// snippet-keyword:[GetMetricData function]\n+// snippet-keyword:[Go]\n+// snippet-sourcesyntax:[go]\n+// snippet-service:[cloudwatch]\n+// snippet-keyword:[Code Sample]\n+// snippet-sourcetype:[full-example]\n+// snippet-sourcedate:[2021-03-13]\n+\n+package main\n+\n+import (\n+\t\"fmt\"\n+\t\"os\"\n+\n+\t\"github.com/aws/aws-sdk-go/aws\"\n+\t\"github.com/aws/aws-sdk-go/aws/session\"\n+\t\"github.com/aws/aws-sdk-go/service/cloudwatch\"\n+)\n+\n+// Fetches the cloudwatch metrics for your provided input in the given time-frame\n+\n+func main() {\n+\tif len(os.Args) != 9 {\n+\t\tfmt.Println(\"You must supply a metric name, namespace, dimension name, dimension value, id, start time, end time, stat and period\")\n+\t\tos.Exit(1)\n+\t}\n+\n+\tmetricName := os.Args[1] //case sensitive\n+\tnamespace := os.Args[2]\n+\tdimensionName := os.Args[3]\n+\tdimensionValue := os.Args[4]\n+\tid := os.Args[5]\n+\t//The parameter EndTime must be greater than StartTime\n+\tstartTime := os.Args[6] //time.Unix(time.Now().Add(time.Duration(-60)*time.Minute).Unix(), 0)\n+\tendTime := os.Args[7]   //time.Unix(time.Now().Unix(), 0)\n+\tstat := os.Args[8]\n+\tperiod := os.Args[9]\n+\n+\t// Initialize a session that the SDK uses to load\n+\t// credentials from the shared credentials file ~/.aws/credentials\n+\t// and configuration from the shared configuration file ~/.aws/config.\n+\tsess := session.Must(session.NewSessionWithOptions(session.Options{\n+\t\tSharedConfigState: session.SharedConfigEnable,\n+\t}))\n+\n+\t// Create CloudWatch client\n+\tsvc := cloudwatch.New(sess)\n+\n+\t// Invoke the GetMetricData\n+\tresult, err := svc.GetMetricData(&cloudwatch.GetMetricDataInput{\n+\t\tEndTime:   aws.Time(startTime),\n+\t\tStartTime: aws.Time(endTime),\n+\t\tMetricDataQueries: []*cloudwatch.MetricDataQuery{\n+\t\t\t&cloudwatch.MetricDataQuery{\n+\t\t\t\tId: aws.String(id),\n+\t\t\t\tMetricStat: &cloudwatch.MetricStat{\n+\t\t\t\t\tMetric: &cloudwatch.Metric{\n+\t\t\t\t\t\tNamespace:  aws.String(namespace),\n+\t\t\t\t\t\tMetricName: aws.String(metricName),\n+\t\t\t\t\t\tDimensions: []*cloudwatch.Dimension{\n+\t\t\t\t\t\t\t&cloudwatch.Dimension{\n+\t\t\t\t\t\t\t\tName:  aws.String(dimensionName),\n+\t\t\t\t\t\t\t\tValue: aws.String(dimensionValue),\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t},\n+\t\t\t\t\t},\n+\t\t\t\t\tPeriod: aws.Int64(period),\n+\t\t\t\t\tStat:   aws.String(stat),\n+\t\t\t\t},\n+\t\t\t},\n+\t\t},\n+\t})\n+\n+\tif err != nil {\n+\t\tfmt.Println(\"Error\", err)\n+\t\treturn\n+\t}\n+\n+\tfmt.Println(\"Metrics\", result)\n+}"
  }
]
