[
  {
    "sha": "979359929c1a61c6dfb40f0f0b1dd4411c3b0da8",
    "filename": "README.md",
    "status": "modified",
    "additions": 11,
    "deletions": 4,
    "changes": 15,
    "blob_url": "https://github.com/nemanovich/otus-study-algorithm/blob/4e91521ddfc975857563270db52758dc59de8ff2/README.md",
    "raw_url": "https://github.com/nemanovich/otus-study-algorithm/raw/4e91521ddfc975857563270db52758dc59de8ff2/README.md",
    "contents_url": "https://api.github.com/repos/nemanovich/otus-study-algorithm/contents/README.md?ref=4e91521ddfc975857563270db52758dc59de8ff2",
    "patch": "@@ -1,20 +1,27 @@\n # Курс по алгоритмам на otus\n \n-## Lesson 1\n+## HW1 - Циклы и рекурсия\n \n ### Подсчет количества счастливых билетов\n Билет с 2N значным номером считается счастливым,\n если сумма N первых цифр равна сумме последних N цифр.\n Посчитать, сколько существует счастливых 2N-значных билетов.\n \n-## Lesson 2 (алгебра)\n+## HW2 - Алгебраические алгоритмы\n \n ### Возведение в степень\n+\n Вычислить $$A^N$$, N >= 0\n \n ### Ряд Фибоначчи\n+\n Найти и вывести на экран точное значение N-ого числа Фибоначчи.\n \n ### Простые числа (решето Эратосфена)\n-На первой строчке записано целое число N >= 1.\n-Найти количество простых чисел от 1 до N.\n+\n+На первой строчке записано целое число N >= 1. Найти количество простых чисел от 1 до N.\n+\n+## HW3 - Битовая арифметика\n+\n+Нахождение возможных ходов фигур с помощью битовой шахматной доски\n+"
  },
  {
    "sha": "2cfcadbfd57276b5351bb3318a95fffcf1f917ad",
    "filename": "build.gradle",
    "status": "modified",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/nemanovich/otus-study-algorithm/blob/4e91521ddfc975857563270db52758dc59de8ff2/build.gradle",
    "raw_url": "https://github.com/nemanovich/otus-study-algorithm/raw/4e91521ddfc975857563270db52758dc59de8ff2/build.gradle",
    "contents_url": "https://api.github.com/repos/nemanovich/otus-study-algorithm/contents/build.gradle?ref=4e91521ddfc975857563270db52758dc59de8ff2",
    "patch": "@@ -17,6 +17,10 @@ dependencies {\n     testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'\n }\n \n+tasks.withType(JavaCompile) {\n+    options.encoding = 'UTF-8'\n+}\n+\n test {\n     useJUnitPlatform()\n }"
  },
  {
    "sha": "88489880c56fec9d3776e8ca0a5e547d9f006a95",
    "filename": "src/main/java/io/github/nemanovic/otus/algorithm/hw3/BitboardMasks.java",
    "status": "added",
    "additions": 28,
    "deletions": 0,
    "changes": 28,
    "blob_url": "https://github.com/nemanovich/otus-study-algorithm/blob/4e91521ddfc975857563270db52758dc59de8ff2/src/main/java/io/github/nemanovic/otus/algorithm/hw3/BitboardMasks.java",
    "raw_url": "https://github.com/nemanovich/otus-study-algorithm/raw/4e91521ddfc975857563270db52758dc59de8ff2/src/main/java/io/github/nemanovic/otus/algorithm/hw3/BitboardMasks.java",
    "contents_url": "https://api.github.com/repos/nemanovich/otus-study-algorithm/contents/src/main/java/io/github/nemanovic/otus/algorithm/hw3/BitboardMasks.java?ref=4e91521ddfc975857563270db52758dc59de8ff2",
    "patch": "@@ -0,0 +1,28 @@\n+package io.github.nemanovic.otus.algorithm.hw3;\n+\n+// https://gekomad.github.io/Cinnamon/BitboardCalculator/\n+public class BitboardMasks {\n+\n+    public static final long FILLED = Long.parseUnsignedLong(\"18446744073709551615\");\n+\n+    private static final long[] EXCLUDE_COLUMNS = {\n+            Long.parseUnsignedLong(\"18374403900871474942\"),\n+            Long.parseUnsignedLong(\"18302063728033398269\"),\n+            Long.parseUnsignedLong(\"18157383382357244923\"),\n+            Long.parseUnsignedLong(\"17868022691004938231\"),\n+            Long.parseUnsignedLong(\"17289301308300324847\"),\n+            Long.parseUnsignedLong(\"16131858542891098079\"),\n+            Long.parseUnsignedLong(\"13816973012072644543\"),\n+            Long.parseUnsignedLong(\"9187201950435737471\")\n+    };\n+\n+\n+    public static final long EXCLUDE_A = EXCLUDE_COLUMNS[0];\n+    public static final long EXCLUDE_B = EXCLUDE_COLUMNS[1];\n+    public static final long EXCLUDE_G = EXCLUDE_COLUMNS[6];\n+    public static final long EXCLUDE_H = EXCLUDE_COLUMNS[7];\n+\n+    public static long getExcludeColumn(int i) {\n+        return EXCLUDE_COLUMNS[i];\n+    }\n+}"
  },
  {
    "sha": "64ba6f6df1b59bbee75e6357f5addd357dc5e390",
    "filename": "src/main/java/io/github/nemanovic/otus/algorithm/hw3/BitboardSolution.java",
    "status": "added",
    "additions": 60,
    "deletions": 0,
    "changes": 60,
    "blob_url": "https://github.com/nemanovich/otus-study-algorithm/blob/4e91521ddfc975857563270db52758dc59de8ff2/src/main/java/io/github/nemanovic/otus/algorithm/hw3/BitboardSolution.java",
    "raw_url": "https://github.com/nemanovich/otus-study-algorithm/raw/4e91521ddfc975857563270db52758dc59de8ff2/src/main/java/io/github/nemanovic/otus/algorithm/hw3/BitboardSolution.java",
    "contents_url": "https://api.github.com/repos/nemanovich/otus-study-algorithm/contents/src/main/java/io/github/nemanovic/otus/algorithm/hw3/BitboardSolution.java?ref=4e91521ddfc975857563270db52758dc59de8ff2",
    "patch": "@@ -0,0 +1,60 @@\n+package io.github.nemanovic.otus.algorithm.hw3;\n+\n+import static io.github.nemanovic.otus.algorithm.hw3.BitboardMasks.EXCLUDE_A;\n+import static io.github.nemanovic.otus.algorithm.hw3.BitboardMasks.EXCLUDE_B;\n+import static io.github.nemanovic.otus.algorithm.hw3.BitboardMasks.EXCLUDE_G;\n+import static io.github.nemanovic.otus.algorithm.hw3.BitboardMasks.EXCLUDE_H;\n+\n+// Шахматная битовая доска https://habr.com/ru/company/otus/blog/476510/\n+public class BitboardSolution {\n+    public static long findKingMoves(int positionIndex) {\n+        long p = Long.rotateLeft(1, positionIndex);\n+        return ((p & EXCLUDE_A) << 7) | (p << 8) | ((p & EXCLUDE_H) << 9)  // \"верхние\" ходы\n+                | ((p & EXCLUDE_A) >>> 1) | ((p & EXCLUDE_H) << 1)  // боковые\n+                | ((p & EXCLUDE_A) >>> 9) | (p >>> 8) | ((p & EXCLUDE_H) >>> 7); // нижние\n+    }\n+\n+    public static long findKnightMoves(int positionIndex) {\n+        long p = Long.rotateLeft(1, positionIndex);\n+        return ((p & EXCLUDE_A) << 15) | ((p & EXCLUDE_H) << 17) |\n+                ((p & EXCLUDE_A & EXCLUDE_B) << 6) | ((p & EXCLUDE_G & EXCLUDE_H) << 10) |\n+                ((p & EXCLUDE_A & EXCLUDE_B) >>> 10) | ((p & EXCLUDE_G & EXCLUDE_H) >>> 6) |\n+                ((p & EXCLUDE_A) >>> 17) | ((p & EXCLUDE_H) >>> 15);\n+    }\n+\n+    public static long findRookMoves(int positionIndex) {\n+        long p = Long.rotateLeft(1, positionIndex);\n+        long position = 0;\n+        long excludeLeftColumns = BitboardMasks.FILLED;\n+        long excludeRightColumns = BitboardMasks.FILLED;\n+        for (int i = 0; i < 8; i++) {\n+            excludeLeftColumns &= BitboardMasks.getExcludeColumn(i);\n+            excludeRightColumns &= BitboardMasks.getExcludeColumn(7 - i);\n+            position |= (p << (i + 1) * 8) | (p >>> (i + 1) * 8) | // вверх/вниз по доске без ограничений\n+                    ((p & excludeLeftColumns) >>> i + 1) | //пошагово смещаем влево по доске, расширяя \"запретную зону\"\n+                    ((p & excludeRightColumns) << i + 1); // аналогично вправо\n+        }\n+        return position - p; // вместо проверки ограничений вертикального смещения исключаем начальную точку.\n+    }\n+\n+    // аналогично ладье, но надо проверять ограничения в любом направлении\n+    public static long findBishopMoves(int positionIndex) {\n+        long p = Long.rotateLeft(1, positionIndex);\n+        long position = 0;\n+        long excludeLeftColumns = BitboardMasks.FILLED;\n+        long excludeRightColumns = BitboardMasks.FILLED;\n+        for (int i = 0; i < 8; i++) {\n+            excludeLeftColumns &= BitboardMasks.getExcludeColumn(i);\n+            excludeRightColumns &= BitboardMasks.getExcludeColumn(7 - i);\n+            position |= ((p & excludeLeftColumns) << (i + 1) * 7) |\n+                    ((p & excludeRightColumns) << (i + 1) * 9) |\n+                    ((p & excludeRightColumns) >>> (i + 1) * 7) |\n+                    ((p & excludeLeftColumns) >>> (i + 1) * 9);\n+        }\n+        return position;\n+    }\n+\n+    public static long findQueenMoves(int positionIndex) {\n+        return findBishopMoves(positionIndex) | findRookMoves(positionIndex);\n+    }\n+}"
  },
  {
    "sha": "bfb3ba322fbb7c0335898888fc19f33521f20a09",
    "filename": "src/test/java/io/github/nemanovic/otus/algorithm/TestHelper.java",
    "status": "modified",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/nemanovich/otus-study-algorithm/blob/4e91521ddfc975857563270db52758dc59de8ff2/src/test/java/io/github/nemanovic/otus/algorithm/TestHelper.java",
    "raw_url": "https://github.com/nemanovich/otus-study-algorithm/raw/4e91521ddfc975857563270db52758dc59de8ff2/src/test/java/io/github/nemanovic/otus/algorithm/TestHelper.java",
    "contents_url": "https://api.github.com/repos/nemanovich/otus-study-algorithm/contents/src/test/java/io/github/nemanovic/otus/algorithm/TestHelper.java?ref=4e91521ddfc975857563270db52758dc59de8ff2",
    "patch": "@@ -1,8 +1,24 @@\n package io.github.nemanovic.otus.algorithm;\n \n+import io.github.nemanovic.otus.algorithm.hw3.BitboardSolutionTest;\n import org.junit.jupiter.params.ParameterizedTest;\n \n+import java.util.Scanner;\n+import java.util.function.Function;\n+import java.util.stream.Stream;\n+\n+\n public class TestHelper {\n     public static final String METHOD_NAME = ParameterizedTest.DISPLAY_NAME_PLACEHOLDER +\n             ParameterizedTest.DEFAULT_DISPLAY_NAME;\n+\n+    public static Object[] readResource(String path, final Function<Scanner, Object[]> readFunction) {\n+        try (Scanner s = new Scanner(BitboardSolutionTest.class.getResourceAsStream(path))) {\n+            return readFunction.apply(s);\n+        }\n+    }\n+\n+    public static Object[] concat(Object[] a, Object[] b) {\n+        return Stream.of(a, b).flatMap(Stream::of).toArray();\n+    }\n }"
  },
  {
    "sha": "7e46c1bde853d0aa625cdc1f29836c8b86f89d6c",
    "filename": "src/test/java/io/github/nemanovic/otus/algorithm/hw2/FibonacciTest.java",
    "status": "modified",
    "additions": 0,
    "deletions": 3,
    "changes": 3,
    "blob_url": "https://github.com/nemanovich/otus-study-algorithm/blob/4e91521ddfc975857563270db52758dc59de8ff2/src/test/java/io/github/nemanovic/otus/algorithm/hw2/FibonacciTest.java",
    "raw_url": "https://github.com/nemanovich/otus-study-algorithm/raw/4e91521ddfc975857563270db52758dc59de8ff2/src/test/java/io/github/nemanovic/otus/algorithm/hw2/FibonacciTest.java",
    "contents_url": "https://api.github.com/repos/nemanovich/otus-study-algorithm/contents/src/test/java/io/github/nemanovic/otus/algorithm/hw2/FibonacciTest.java?ref=4e91521ddfc975857563270db52758dc59de8ff2",
    "patch": "@@ -41,7 +41,6 @@\n \n     // O(2^n) без мемоизации\n     private BigInteger findFiboViaRecurrent(int n) {\n-        assert n >= 0;\n         if (n <= 1) {\n             return BigInteger.valueOf(n);\n         }\n@@ -51,7 +50,6 @@ private BigInteger findFiboViaRecurrent(int n) {\n     // по формуле Бине\n     // O(log(n)) операций без учета длинной арифматики. при N > 10000 накапливается погрешность.\n     private BigInteger findFiboViaGoldenRatio(int n) {\n-        assert n >= 0;\n         if (n <= 1) {\n             return BigInteger.valueOf(n);\n         }\n@@ -68,7 +66,6 @@ private BigInteger findFiboViaGoldenRatio(int n) {\n     // Матрица перехода q находится из уравнения ((f2, f1), (f1, f0)) * X = ((f3, f2), (f2, f1))\n     // O(log(n)) операций без учета длинной арифматики.\n     private BigInteger findFiboViaMatrixMultiplication(int n) {\n-        assert n >= 0;\n         if (n <= 1) {\n             return BigInteger.valueOf(n);\n         }"
  },
  {
    "sha": "8b8bf03c1e9a371d4ae6c48dd8153dda69bb1f7d",
    "filename": "src/test/java/io/github/nemanovic/otus/algorithm/hw3/BitboardSolutionTest.java",
    "status": "added",
    "additions": 102,
    "deletions": 0,
    "changes": 102,
    "blob_url": "https://github.com/nemanovich/otus-study-algorithm/blob/4e91521ddfc975857563270db52758dc59de8ff2/src/test/java/io/github/nemanovic/otus/algorithm/hw3/BitboardSolutionTest.java",
    "raw_url": "https://github.com/nemanovich/otus-study-algorithm/raw/4e91521ddfc975857563270db52758dc59de8ff2/src/test/java/io/github/nemanovic/otus/algorithm/hw3/BitboardSolutionTest.java",
    "contents_url": "https://api.github.com/repos/nemanovich/otus-study-algorithm/contents/src/test/java/io/github/nemanovic/otus/algorithm/hw3/BitboardSolutionTest.java?ref=4e91521ddfc975857563270db52758dc59de8ff2",
    "patch": "@@ -0,0 +1,102 @@\n+package io.github.nemanovic.otus.algorithm.hw3;\n+\n+\n+import io.github.nemanovic.otus.algorithm.TestHelper;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.MethodSource;\n+\n+import java.util.List;\n+import java.util.function.Function;\n+import java.util.stream.IntStream;\n+\n+import static io.github.nemanovic.otus.algorithm.TestHelper.METHOD_NAME;\n+import static java.util.stream.Collectors.toList;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+public class BitboardSolutionTest {\n+    private static List<Object[]> testKingProvider() {\n+        return IntStream.rangeClosed(0, 9)\n+                .mapToObj(i -> \"/hw3/1.Bitboard.King/test.\" + i)\n+                .map(getBitboardTestMapping()).collect(toList());\n+    }\n+\n+    private static List<Object[]> testKnightProvider() {\n+        return IntStream.rangeClosed(0, 9)\n+                .mapToObj(i -> \"/hw3/2.Bitboard.Knight/test.\" + i)\n+                .map(getBitboardTestMapping()).collect(toList());\n+    }\n+\n+    private static List<Object[]> testRookProvider() {\n+        return IntStream.rangeClosed(0, 9)\n+                .mapToObj(i -> \"/hw3/3.Bitboard.Rook/test.\" + i)\n+                .map(getBitboardTestMapping())\n+                .collect(toList());\n+    }\n+\n+    private static List<Object[]> testBishopProvider() {\n+        return IntStream.rangeClosed(0, 9)\n+                .mapToObj(i -> \"/hw3/4.Bitboard.Bishop/test.\" + i)\n+                .map(getBitboardTestMapping())\n+                .collect(toList());\n+    }\n+\n+    private static List<Object[]> testQueenProvider() {\n+        return IntStream.rangeClosed(0, 9)\n+                .mapToObj(i -> \"/hw3/5.Bitboard.Queen/test.\" + i)\n+                .map(getBitboardTestMapping())\n+                .collect(toList());\n+    }\n+\n+    private static Function<String, Object[]> getBitboardTestMapping() {\n+        return n -> TestHelper.concat(\n+                TestHelper.readResource(n + \".in\", s -> new Object[]{\n+                        s.nextInt()\n+                }),\n+                TestHelper.readResource(n + \".out\", s ->\n+                        new Object[]{\n+                                Integer.parseInt(s.nextLine()),\n+                                Long.parseUnsignedLong(s.nextLine())\n+                        })\n+        );\n+    }\n+\n+    @ParameterizedTest(name = METHOD_NAME)\n+    @MethodSource(\"testKingProvider\")\n+    public void testKingMoves(int positionIndex, int expectedCount, long expectedMap) {\n+        long actualMap = BitboardSolution.findKingMoves(positionIndex);\n+        assertEquals(expectedMap, actualMap);\n+        assertEquals(expectedCount, Long.bitCount(actualMap));\n+    }\n+\n+    @ParameterizedTest(name = METHOD_NAME)\n+    @MethodSource(\"testKnightProvider\")\n+    public void testKnightMoves(int positionIndex, int expectedCount, long expectedMap) {\n+        long actualMap = BitboardSolution.findKnightMoves(positionIndex);\n+        assertEquals(expectedMap, actualMap);\n+        assertEquals(expectedCount, Long.bitCount(actualMap));\n+    }\n+\n+    @ParameterizedTest(name = METHOD_NAME)\n+    @MethodSource(\"testRookProvider\")\n+    public void testRookMoves(int positionIndex, int expectedCount, long expectedMap) {\n+        long actualMap = BitboardSolution.findRookMoves(positionIndex);\n+        assertEquals(expectedMap, actualMap);\n+        assertEquals(expectedCount, Long.bitCount(actualMap));\n+    }\n+\n+    @ParameterizedTest(name = METHOD_NAME)\n+    @MethodSource(\"testBishopProvider\")\n+    public void testBishopMoves(int positionIndex, int expectedCount, long expectedMap) {\n+        long actualMap = BitboardSolution.findBishopMoves(positionIndex);\n+        assertEquals(expectedMap, actualMap);\n+        assertEquals(expectedCount, Long.bitCount(actualMap));\n+    }\n+\n+    @ParameterizedTest(name = METHOD_NAME)\n+    @MethodSource(\"testQueenProvider\")\n+    public void testQueenMoves(int positionIndex, int expectedCount, long expectedMap) {\n+        long actualMap = BitboardSolution.findQueenMoves(positionIndex);\n+        assertEquals(expectedMap, actualMap);\n+        assertEquals(expectedCount, Long.bitCount(actualMap));\n+    }\n+}"
  },
  {
    "sha": "b1ab522e91c19c959e9983bd60a5807c1e27d9c5",
    "filename": "src/test/resources/hw3/1.Bitboard.King/1744.png",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/nemanovich/otus-study-algorithm/blob/4e91521ddfc975857563270db52758dc59de8ff2/src/test/resources/hw3/1.Bitboard.King/1744.png",
    "raw_url": "https://github.com/nemanovich/otus-study-algorithm/raw/4e91521ddfc975857563270db52758dc59de8ff2/src/test/resources/hw3/1.Bitboard.King/1744.png",
    "contents_url": "https://api.github.com/repos/nemanovich/otus-study-algorithm/contents/src/test/resources/hw3/1.Bitboard.King/1744.png?ref=4e91521ddfc975857563270db52758dc59de8ff2"
  },
  {
    "sha": "5ba175111888eb3a99775d55fb48e4b36d60caf9",
    "filename": "src/test/resources/hw3/1.Bitboard.King/problem.txt",
    "status": "added",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/nemanovich/otus-study-algorithm/blob/4e91521ddfc975857563270db52758dc59de8ff2/src/test/resources/hw3/1.Bitboard.King/problem.txt",
    "raw_url": "https://github.com/nemanovich/otus-study-algorithm/raw/4e91521ddfc975857563270db52758dc59de8ff2/src/test/resources/hw3/1.Bitboard.King/problem.txt",
    "contents_url": "https://api.github.com/repos/nemanovich/otus-study-algorithm/contents/src/test/resources/hw3/1.Bitboard.King/problem.txt?ref=4e91521ddfc975857563270db52758dc59de8ff2",
    "patch": "@@ -0,0 +1,20 @@\n+1.Прогулка Короля - BITS\n+\n+00000000 00000000 00000011 00000010 = 2^9 + 2^8 + 2^1 = 512 + 256 + 2 = 770\n+\n+Король решил прогуляться по пустынной шахматной доске.\n+Сейчас он находится в указанной клетке.\n+Куда он может походить?\n+Вывести количество возможных ходов короля\n+и ulong число с установленными битами тех полей, куда он может походить.\n+\n+Дано>: число от 0 до 63 - индекс позиции короля\n+Поля нумеруются от а1 = 0, b1 = 1  до  h8 = 63.\n+\n+Надо: два числа на двух строчках:\n+количество возможных ходов\n+битовая маска всех возможных ходов короля.\n+\n+На доске кроме короля никого нет, \n+король ходит на одну клетку в любую сторону \n+по горизонтали/вертикали/диагонали."
  },
  {
    "sha": "c227083464fb9af8955c90d2924774ee50abb547",
    "filename": "src/test/resources/hw3/1.Bitboard.King/test.0.in",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/nemanovich/otus-study-algorithm/blob/4e91521ddfc975857563270db52758dc59de8ff2/src/test/resources/hw3/1.Bitboard.King/test.0.in",
    "raw_url": "https://github.com/nemanovich/otus-study-algorithm/raw/4e91521ddfc975857563270db52758dc59de8ff2/src/test/resources/hw3/1.Bitboard.King/test.0.in",
    "contents_url": "https://api.github.com/repos/nemanovich/otus-study-algorithm/contents/src/test/resources/hw3/1.Bitboard.King/test.0.in?ref=4e91521ddfc975857563270db52758dc59de8ff2",
    "patch": "@@ -0,0 +1 @@\n+0\n\\ No newline at end of file"
  },
  {
    "sha": "000f0cd183943a78954a695fcac9ae12cd9a3a1d",
    "filename": "src/test/resources/hw3/1.Bitboard.King/test.0.out",
    "status": "added",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/nemanovich/otus-study-algorithm/blob/4e91521ddfc975857563270db52758dc59de8ff2/src/test/resources/hw3/1.Bitboard.King/test.0.out",
    "raw_url": "https://github.com/nemanovich/otus-study-algorithm/raw/4e91521ddfc975857563270db52758dc59de8ff2/src/test/resources/hw3/1.Bitboard.King/test.0.out",
    "contents_url": "https://api.github.com/repos/nemanovich/otus-study-algorithm/contents/src/test/resources/hw3/1.Bitboard.King/test.0.out?ref=4e91521ddfc975857563270db52758dc59de8ff2",
    "patch": "@@ -0,0 +1,2 @@\n+3\n+770"
  },
  {
    "sha": "56a6051ca2b02b04ef92d5150c9ef600403cb1de",
    "filename": "src/test/resources/hw3/1.Bitboard.King/test.1.in",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/nemanovich/otus-study-algorithm/blob/4e91521ddfc975857563270db52758dc59de8ff2/src/test/resources/hw3/1.Bitboard.King/test.1.in",
    "raw_url": "https://github.com/nemanovich/otus-study-algorithm/raw/4e91521ddfc975857563270db52758dc59de8ff2/src/test/resources/hw3/1.Bitboard.King/test.1.in",
    "contents_url": "https://api.github.com/repos/nemanovich/otus-study-algorithm/contents/src/test/resources/hw3/1.Bitboard.King/test.1.in?ref=4e91521ddfc975857563270db52758dc59de8ff2",
    "patch": "@@ -0,0 +1 @@\n+1\n\\ No newline at end of file"
  },
  {
    "sha": "16a10a3cb53d696ae2d104fb1196732e236b92f3",
    "filename": "src/test/resources/hw3/1.Bitboard.King/test.1.out",
    "status": "added",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/nemanovich/otus-study-algorithm/blob/4e91521ddfc975857563270db52758dc59de8ff2/src/test/resources/hw3/1.Bitboard.King/test.1.out",
    "raw_url": "https://github.com/nemanovich/otus-study-algorithm/raw/4e91521ddfc975857563270db52758dc59de8ff2/src/test/resources/hw3/1.Bitboard.King/test.1.out",
    "contents_url": "https://api.github.com/repos/nemanovich/otus-study-algorithm/contents/src/test/resources/hw3/1.Bitboard.King/test.1.out?ref=4e91521ddfc975857563270db52758dc59de8ff2",
    "patch": "@@ -0,0 +1,2 @@\n+5\n+1797"
  },
  {
    "sha": "c7930257dfef505fd996e1d6f22f2f35149990d0",
    "filename": "src/test/resources/hw3/1.Bitboard.King/test.2.in",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/nemanovich/otus-study-algorithm/blob/4e91521ddfc975857563270db52758dc59de8ff2/src/test/resources/hw3/1.Bitboard.King/test.2.in",
    "raw_url": "https://github.com/nemanovich/otus-study-algorithm/raw/4e91521ddfc975857563270db52758dc59de8ff2/src/test/resources/hw3/1.Bitboard.King/test.2.in",
    "contents_url": "https://api.github.com/repos/nemanovich/otus-study-algorithm/contents/src/test/resources/hw3/1.Bitboard.King/test.2.in?ref=4e91521ddfc975857563270db52758dc59de8ff2",
    "patch": "@@ -0,0 +1 @@\n+7\n\\ No newline at end of file"
  },
  {
    "sha": "d04c54d0abe92cabf791e5b4fec8c7dd8a370ef7",
    "filename": "src/test/resources/hw3/1.Bitboard.King/test.2.out",
    "status": "added",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/nemanovich/otus-study-algorithm/blob/4e91521ddfc975857563270db52758dc59de8ff2/src/test/resources/hw3/1.Bitboard.King/test.2.out",
    "raw_url": "https://github.com/nemanovich/otus-study-algorithm/raw/4e91521ddfc975857563270db52758dc59de8ff2/src/test/resources/hw3/1.Bitboard.King/test.2.out",
    "contents_url": "https://api.github.com/repos/nemanovich/otus-study-algorithm/contents/src/test/resources/hw3/1.Bitboard.King/test.2.out?ref=4e91521ddfc975857563270db52758dc59de8ff2",
    "patch": "@@ -0,0 +1,2 @@\n+3\n+49216"
  },
  {
    "sha": "301160a93062df23030a69f4b5e4d9bf71866ee9",
    "filename": "src/test/resources/hw3/1.Bitboard.King/test.3.in",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/nemanovich/otus-study-algorithm/blob/4e91521ddfc975857563270db52758dc59de8ff2/src/test/resources/hw3/1.Bitboard.King/test.3.in",
    "raw_url": "https://github.com/nemanovich/otus-study-algorithm/raw/4e91521ddfc975857563270db52758dc59de8ff2/src/test/resources/hw3/1.Bitboard.King/test.3.in",
    "contents_url": "https://api.github.com/repos/nemanovich/otus-study-algorithm/contents/src/test/resources/hw3/1.Bitboard.King/test.3.in?ref=4e91521ddfc975857563270db52758dc59de8ff2",
    "patch": "@@ -0,0 +1 @@\n+8\n\\ No newline at end of file"
  },
  {
    "sha": "7099602b3d76a167f31c0ad0672f366491ebe794",
    "filename": "src/test/resources/hw3/1.Bitboard.King/test.3.out",
    "status": "added",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/nemanovich/otus-study-algorithm/blob/4e91521ddfc975857563270db52758dc59de8ff2/src/test/resources/hw3/1.Bitboard.King/test.3.out",
    "raw_url": "https://github.com/nemanovich/otus-study-algorithm/raw/4e91521ddfc975857563270db52758dc59de8ff2/src/test/resources/hw3/1.Bitboard.King/test.3.out",
    "contents_url": "https://api.github.com/repos/nemanovich/otus-study-algorithm/contents/src/test/resources/hw3/1.Bitboard.King/test.3.out?ref=4e91521ddfc975857563270db52758dc59de8ff2",
    "patch": "@@ -0,0 +1,2 @@\n+5\n+197123"
  },
  {
    "sha": "9a037142aa3c1b4c490e1a38251620f113465330",
    "filename": "src/test/resources/hw3/1.Bitboard.King/test.4.in",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/nemanovich/otus-study-algorithm/blob/4e91521ddfc975857563270db52758dc59de8ff2/src/test/resources/hw3/1.Bitboard.King/test.4.in",
    "raw_url": "https://github.com/nemanovich/otus-study-algorithm/raw/4e91521ddfc975857563270db52758dc59de8ff2/src/test/resources/hw3/1.Bitboard.King/test.4.in",
    "contents_url": "https://api.github.com/repos/nemanovich/otus-study-algorithm/contents/src/test/resources/hw3/1.Bitboard.King/test.4.in?ref=4e91521ddfc975857563270db52758dc59de8ff2",
    "patch": "@@ -0,0 +1 @@\n+10\n\\ No newline at end of file"
  },
  {
    "sha": "77b0538df67d49dd45889253188244d238fd9b06",
    "filename": "src/test/resources/hw3/1.Bitboard.King/test.4.out",
    "status": "added",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/nemanovich/otus-study-algorithm/blob/4e91521ddfc975857563270db52758dc59de8ff2/src/test/resources/hw3/1.Bitboard.King/test.4.out",
    "raw_url": "https://github.com/nemanovich/otus-study-algorithm/raw/4e91521ddfc975857563270db52758dc59de8ff2/src/test/resources/hw3/1.Bitboard.King/test.4.out",
    "contents_url": "https://api.github.com/repos/nemanovich/otus-study-algorithm/contents/src/test/resources/hw3/1.Bitboard.King/test.4.out?ref=4e91521ddfc975857563270db52758dc59de8ff2",
    "patch": "@@ -0,0 +1,2 @@\n+8\n+920078"
  },
  {
    "sha": "3f10ffe7a4c473619c926cfb1e8d95e726e5a0ec",
    "filename": "src/test/resources/hw3/1.Bitboard.King/test.5.in",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/nemanovich/otus-study-algorithm/blob/4e91521ddfc975857563270db52758dc59de8ff2/src/test/resources/hw3/1.Bitboard.King/test.5.in",
    "raw_url": "https://github.com/nemanovich/otus-study-algorithm/raw/4e91521ddfc975857563270db52758dc59de8ff2/src/test/resources/hw3/1.Bitboard.King/test.5.in",
    "contents_url": "https://api.github.com/repos/nemanovich/otus-study-algorithm/contents/src/test/resources/hw3/1.Bitboard.King/test.5.in?ref=4e91521ddfc975857563270db52758dc59de8ff2",
    "patch": "@@ -0,0 +1 @@\n+15\n\\ No newline at end of file"
  },
  {
    "sha": "a07a97cc5bf579fabbcc45c55b725fa073747eec",
    "filename": "src/test/resources/hw3/1.Bitboard.King/test.5.out",
    "status": "added",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/nemanovich/otus-study-algorithm/blob/4e91521ddfc975857563270db52758dc59de8ff2/src/test/resources/hw3/1.Bitboard.King/test.5.out",
    "raw_url": "https://github.com/nemanovich/otus-study-algorithm/raw/4e91521ddfc975857563270db52758dc59de8ff2/src/test/resources/hw3/1.Bitboard.King/test.5.out",
    "contents_url": "https://api.github.com/repos/nemanovich/otus-study-algorithm/contents/src/test/resources/hw3/1.Bitboard.King/test.5.out?ref=4e91521ddfc975857563270db52758dc59de8ff2",
    "patch": "@@ -0,0 +1,2 @@\n+5\n+12599488"
  },
  {
    "sha": "43c451e0c6da52ad30bb605a60c7cb34497f3d30",
    "filename": "src/test/resources/hw3/1.Bitboard.King/test.6.in",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/nemanovich/otus-study-algorithm/blob/4e91521ddfc975857563270db52758dc59de8ff2/src/test/resources/hw3/1.Bitboard.King/test.6.in",
    "raw_url": "https://github.com/nemanovich/otus-study-algorithm/raw/4e91521ddfc975857563270db52758dc59de8ff2/src/test/resources/hw3/1.Bitboard.King/test.6.in",
    "contents_url": "https://api.github.com/repos/nemanovich/otus-study-algorithm/contents/src/test/resources/hw3/1.Bitboard.King/test.6.in?ref=4e91521ddfc975857563270db52758dc59de8ff2",
    "patch": "@@ -0,0 +1 @@\n+54\n\\ No newline at end of file"
  },
  {
    "sha": "1b04a6b349e6a8a62c8916b59cca6156c6b2b3a4",
    "filename": "src/test/resources/hw3/1.Bitboard.King/test.6.out",
    "status": "added",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/nemanovich/otus-study-algorithm/blob/4e91521ddfc975857563270db52758dc59de8ff2/src/test/resources/hw3/1.Bitboard.King/test.6.out",
    "raw_url": "https://github.com/nemanovich/otus-study-algorithm/raw/4e91521ddfc975857563270db52758dc59de8ff2/src/test/resources/hw3/1.Bitboard.King/test.6.out",
    "contents_url": "https://api.github.com/repos/nemanovich/otus-study-algorithm/contents/src/test/resources/hw3/1.Bitboard.King/test.6.out?ref=4e91521ddfc975857563270db52758dc59de8ff2",
    "patch": "@@ -0,0 +1,2 @@\n+8\n+16186183351374184448"
  },
  {
    "sha": "7c6ba0fe181de786f8f09b1b8cc1ad6bbc1dd5a4",
    "filename": "src/test/resources/hw3/1.Bitboard.King/test.7.in",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/nemanovich/otus-study-algorithm/blob/4e91521ddfc975857563270db52758dc59de8ff2/src/test/resources/hw3/1.Bitboard.King/test.7.in",
    "raw_url": "https://github.com/nemanovich/otus-study-algorithm/raw/4e91521ddfc975857563270db52758dc59de8ff2/src/test/resources/hw3/1.Bitboard.King/test.7.in",
    "contents_url": "https://api.github.com/repos/nemanovich/otus-study-algorithm/contents/src/test/resources/hw3/1.Bitboard.King/test.7.in?ref=4e91521ddfc975857563270db52758dc59de8ff2",
    "patch": "@@ -0,0 +1 @@\n+55\n\\ No newline at end of file"
  },
  {
    "sha": "72c142ce0d523ff0d4ed0ddd7fac100322b2ff6b",
    "filename": "src/test/resources/hw3/1.Bitboard.King/test.7.out",
    "status": "added",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/nemanovich/otus-study-algorithm/blob/4e91521ddfc975857563270db52758dc59de8ff2/src/test/resources/hw3/1.Bitboard.King/test.7.out",
    "raw_url": "https://github.com/nemanovich/otus-study-algorithm/raw/4e91521ddfc975857563270db52758dc59de8ff2/src/test/resources/hw3/1.Bitboard.King/test.7.out",
    "contents_url": "https://api.github.com/repos/nemanovich/otus-study-algorithm/contents/src/test/resources/hw3/1.Bitboard.King/test.7.out?ref=4e91521ddfc975857563270db52758dc59de8ff2",
    "patch": "@@ -0,0 +1,2 @@\n+5\n+13853283560024178688"
  },
  {
    "sha": "2ebc6516c7df177c819b752dfac7b5ce5064189f",
    "filename": "src/test/resources/hw3/1.Bitboard.King/test.8.in",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/nemanovich/otus-study-algorithm/blob/4e91521ddfc975857563270db52758dc59de8ff2/src/test/resources/hw3/1.Bitboard.King/test.8.in",
    "raw_url": "https://github.com/nemanovich/otus-study-algorithm/raw/4e91521ddfc975857563270db52758dc59de8ff2/src/test/resources/hw3/1.Bitboard.King/test.8.in",
    "contents_url": "https://api.github.com/repos/nemanovich/otus-study-algorithm/contents/src/test/resources/hw3/1.Bitboard.King/test.8.in?ref=4e91521ddfc975857563270db52758dc59de8ff2",
    "patch": "@@ -0,0 +1 @@\n+56\n\\ No newline at end of file"
  },
  {
    "sha": "aa6c8552486b334c97c37b234a8f4eb518ff3540",
    "filename": "src/test/resources/hw3/1.Bitboard.King/test.8.out",
    "status": "added",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/nemanovich/otus-study-algorithm/blob/4e91521ddfc975857563270db52758dc59de8ff2/src/test/resources/hw3/1.Bitboard.King/test.8.out",
    "raw_url": "https://github.com/nemanovich/otus-study-algorithm/raw/4e91521ddfc975857563270db52758dc59de8ff2/src/test/resources/hw3/1.Bitboard.King/test.8.out",
    "contents_url": "https://api.github.com/repos/nemanovich/otus-study-algorithm/contents/src/test/resources/hw3/1.Bitboard.King/test.8.out?ref=4e91521ddfc975857563270db52758dc59de8ff2",
    "patch": "@@ -0,0 +1,2 @@\n+3\n+144959613005987840"
  },
  {
    "sha": "4e9e288487445d1193130dba3e3c6af29b242115",
    "filename": "src/test/resources/hw3/1.Bitboard.King/test.9.in",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/nemanovich/otus-study-algorithm/blob/4e91521ddfc975857563270db52758dc59de8ff2/src/test/resources/hw3/1.Bitboard.King/test.9.in",
    "raw_url": "https://github.com/nemanovich/otus-study-algorithm/raw/4e91521ddfc975857563270db52758dc59de8ff2/src/test/resources/hw3/1.Bitboard.King/test.9.in",
    "contents_url": "https://api.github.com/repos/nemanovich/otus-study-algorithm/contents/src/test/resources/hw3/1.Bitboard.King/test.9.in?ref=4e91521ddfc975857563270db52758dc59de8ff2",
    "patch": "@@ -0,0 +1 @@\n+63\n\\ No newline at end of file"
  },
  {
    "sha": "0158965b542213cdf8c8b218db7eae09a5f677e8",
    "filename": "src/test/resources/hw3/1.Bitboard.King/test.9.out",
    "status": "added",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/nemanovich/otus-study-algorithm/blob/4e91521ddfc975857563270db52758dc59de8ff2/src/test/resources/hw3/1.Bitboard.King/test.9.out",
    "raw_url": "https://github.com/nemanovich/otus-study-algorithm/raw/4e91521ddfc975857563270db52758dc59de8ff2/src/test/resources/hw3/1.Bitboard.King/test.9.out",
    "contents_url": "https://api.github.com/repos/nemanovich/otus-study-algorithm/contents/src/test/resources/hw3/1.Bitboard.King/test.9.out?ref=4e91521ddfc975857563270db52758dc59de8ff2",
    "patch": "@@ -0,0 +1,2 @@\n+3\n+4665729213955833856"
  },
  {
    "sha": "336386c61e412380fe15188473f39465bd85bb2f",
    "filename": "src/test/resources/hw3/2.Bitboard.Knight/1745.png",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/nemanovich/otus-study-algorithm/blob/4e91521ddfc975857563270db52758dc59de8ff2/src/test/resources/hw3/2.Bitboard.Knight/1745.png",
    "raw_url": "https://github.com/nemanovich/otus-study-algorithm/raw/4e91521ddfc975857563270db52758dc59de8ff2/src/test/resources/hw3/2.Bitboard.Knight/1745.png",
    "contents_url": "https://api.github.com/repos/nemanovich/otus-study-algorithm/contents/src/test/resources/hw3/2.Bitboard.Knight/1745.png?ref=4e91521ddfc975857563270db52758dc59de8ff2"
  }
]
