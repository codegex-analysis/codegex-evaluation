[
  {
    "sha": "933182c6257ff76d25a5d90870bd1c97d1b534bd",
    "filename": "java-exceptions-template.iml",
    "status": "added",
    "additions": 23,
    "deletions": 0,
    "changes": 23,
    "blob_url": "https://github.com/Andreyprofkip/java-exceptions-template/blob/d065c8a5bd95dc2cde95450526790731082dceec/java-exceptions-template.iml",
    "raw_url": "https://github.com/Andreyprofkip/java-exceptions-template/raw/d065c8a5bd95dc2cde95450526790731082dceec/java-exceptions-template.iml",
    "contents_url": "https://api.github.com/repos/Andreyprofkip/java-exceptions-template/contents/java-exceptions-template.iml?ref=d065c8a5bd95dc2cde95450526790731082dceec",
    "patch": "@@ -0,0 +1,23 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule=\"true\" type=\"JAVA_MODULE\" version=\"4\">\n+  <component name=\"NewModuleRootManager\" LANGUAGE_LEVEL=\"JDK_1_8\">\n+    <output url=\"file://$MODULE_DIR$/target/classes\" />\n+    <output-test url=\"file://$MODULE_DIR$/target/test-classes\" />\n+    <content url=\"file://$MODULE_DIR$\">\n+      <sourceFolder url=\"file://$MODULE_DIR$/src/main/java\" isTestSource=\"false\" />\n+      <sourceFolder url=\"file://$MODULE_DIR$/src/test/java\" isTestSource=\"true\" />\n+      <excludeFolder url=\"file://$MODULE_DIR$/target\" />\n+    </content>\n+    <orderEntry type=\"inheritedJdk\" />\n+    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n+    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.jupiter:junit-jupiter:5.5.2\" level=\"project\" />\n+    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.jupiter:junit-jupiter-api:5.5.2\" level=\"project\" />\n+    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.apiguardian:apiguardian-api:1.1.0\" level=\"project\" />\n+    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.opentest4j:opentest4j:1.2.0\" level=\"project\" />\n+    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.platform:junit-platform-commons:1.5.2\" level=\"project\" />\n+    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.jupiter:junit-jupiter-params:5.5.2\" level=\"project\" />\n+    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.jupiter:junit-jupiter-engine:5.5.2\" level=\"project\" />\n+    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.platform:junit-platform-engine:1.5.2\" level=\"project\" />\n+    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: org.projectlombok:lombok:1.18.10\" level=\"project\" />\n+  </component>\n+</module>\n\\ No newline at end of file"
  },
  {
    "sha": "909419a5a9e8d11e9b75970c01774d670ec5fa58",
    "filename": "src/main/java/com/epam/izh/rd/online/exception/NotAccessException.java",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/Andreyprofkip/java-exceptions-template/blob/d065c8a5bd95dc2cde95450526790731082dceec/src/main/java/com/epam/izh/rd/online/exception/NotAccessException.java",
    "raw_url": "https://github.com/Andreyprofkip/java-exceptions-template/raw/d065c8a5bd95dc2cde95450526790731082dceec/src/main/java/com/epam/izh/rd/online/exception/NotAccessException.java",
    "contents_url": "https://api.github.com/repos/Andreyprofkip/java-exceptions-template/contents/src/main/java/com/epam/izh/rd/online/exception/NotAccessException.java?ref=d065c8a5bd95dc2cde95450526790731082dceec",
    "patch": "@@ -0,0 +1,5 @@\n+package com.epam.izh.rd.online.exception;\n+public class NotAccessException  extends Throwable {\n+        NotAccessException(){}\n+        public NotAccessException(String msg){super(msg);}\n+}"
  },
  {
    "sha": "6fa9e6c4c40d524d22443d71d91a51a05e2ca8be",
    "filename": "src/main/java/com/epam/izh/rd/online/exception/NotCorrectPasswordException.java",
    "status": "added",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/Andreyprofkip/java-exceptions-template/blob/d065c8a5bd95dc2cde95450526790731082dceec/src/main/java/com/epam/izh/rd/online/exception/NotCorrectPasswordException.java",
    "raw_url": "https://github.com/Andreyprofkip/java-exceptions-template/raw/d065c8a5bd95dc2cde95450526790731082dceec/src/main/java/com/epam/izh/rd/online/exception/NotCorrectPasswordException.java",
    "contents_url": "https://api.github.com/repos/Andreyprofkip/java-exceptions-template/contents/src/main/java/com/epam/izh/rd/online/exception/NotCorrectPasswordException.java?ref=d065c8a5bd95dc2cde95450526790731082dceec",
    "patch": "@@ -0,0 +1,6 @@\n+package com.epam.izh.rd.online.exception;\n+public class NotCorrectPasswordException extends Throwable{\n+    public NotCorrectPasswordException(String msg){\n+        super(msg);\n+    }\n+}"
  },
  {
    "sha": "f2490ac600712f391558935fd47013dcb0e196fb",
    "filename": "src/main/java/com/epam/izh/rd/online/exception/SimplePasswordException.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/Andreyprofkip/java-exceptions-template/blob/d065c8a5bd95dc2cde95450526790731082dceec/src/main/java/com/epam/izh/rd/online/exception/SimplePasswordException.java",
    "raw_url": "https://github.com/Andreyprofkip/java-exceptions-template/raw/d065c8a5bd95dc2cde95450526790731082dceec/src/main/java/com/epam/izh/rd/online/exception/SimplePasswordException.java",
    "contents_url": "https://api.github.com/repos/Andreyprofkip/java-exceptions-template/contents/src/main/java/com/epam/izh/rd/online/exception/SimplePasswordException.java?ref=d065c8a5bd95dc2cde95450526790731082dceec",
    "patch": "@@ -0,0 +1,7 @@\n+package com.epam.izh.rd.online.exception;\n+\n+public class SimplePasswordException extends Throwable {\n+    SimplePasswordException(){}\n+    public SimplePasswordException(String msg){super(msg);}\n+}\n+"
  },
  {
    "sha": "fb02b9721f82907fb31fad7c0a33991eae07ab27",
    "filename": "src/main/java/com/epam/izh/rd/online/exception/UserAlreadyRegisteredException.java",
    "status": "added",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/Andreyprofkip/java-exceptions-template/blob/d065c8a5bd95dc2cde95450526790731082dceec/src/main/java/com/epam/izh/rd/online/exception/UserAlreadyRegisteredException.java",
    "raw_url": "https://github.com/Andreyprofkip/java-exceptions-template/raw/d065c8a5bd95dc2cde95450526790731082dceec/src/main/java/com/epam/izh/rd/online/exception/UserAlreadyRegisteredException.java",
    "contents_url": "https://api.github.com/repos/Andreyprofkip/java-exceptions-template/contents/src/main/java/com/epam/izh/rd/online/exception/UserAlreadyRegisteredException.java?ref=d065c8a5bd95dc2cde95450526790731082dceec",
    "patch": "@@ -0,0 +1,6 @@\n+package com.epam.izh.rd.online.exception;\n+\n+public class UserAlreadyRegisteredException extends Throwable {\n+    UserAlreadyRegisteredException(){}\n+    public UserAlreadyRegisteredException(String msg){super(msg);}\n+}"
  },
  {
    "sha": "753e64bc8e87fa80c0d34bedb433eec77ee0e7d5",
    "filename": "src/main/java/com/epam/izh/rd/online/exception/UserNotFoundException.java",
    "status": "added",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/Andreyprofkip/java-exceptions-template/blob/d065c8a5bd95dc2cde95450526790731082dceec/src/main/java/com/epam/izh/rd/online/exception/UserNotFoundException.java",
    "raw_url": "https://github.com/Andreyprofkip/java-exceptions-template/raw/d065c8a5bd95dc2cde95450526790731082dceec/src/main/java/com/epam/izh/rd/online/exception/UserNotFoundException.java",
    "contents_url": "https://api.github.com/repos/Andreyprofkip/java-exceptions-template/contents/src/main/java/com/epam/izh/rd/online/exception/UserNotFoundException.java?ref=d065c8a5bd95dc2cde95450526790731082dceec",
    "patch": "@@ -0,0 +1,4 @@\n+package com.epam.izh.rd.online.exception;\n+public class UserNotFoundException extends Throwable {\n+    public UserNotFoundException(String msg){super(msg);}\n+}"
  },
  {
    "sha": "f859df6187fb2764650cf20a0f1fd262af45b9df",
    "filename": "src/main/java/com/epam/izh/rd/online/service/AuthenticationService.java",
    "status": "modified",
    "additions": 15,
    "deletions": 4,
    "changes": 19,
    "blob_url": "https://github.com/Andreyprofkip/java-exceptions-template/blob/d065c8a5bd95dc2cde95450526790731082dceec/src/main/java/com/epam/izh/rd/online/service/AuthenticationService.java",
    "raw_url": "https://github.com/Andreyprofkip/java-exceptions-template/raw/d065c8a5bd95dc2cde95450526790731082dceec/src/main/java/com/epam/izh/rd/online/service/AuthenticationService.java",
    "contents_url": "https://api.github.com/repos/Andreyprofkip/java-exceptions-template/contents/src/main/java/com/epam/izh/rd/online/service/AuthenticationService.java?ref=d065c8a5bd95dc2cde95450526790731082dceec",
    "patch": "@@ -1,6 +1,8 @@\n package com.epam.izh.rd.online.service;\n \n import com.epam.izh.rd.online.entity.User;\n+import com.epam.izh.rd.online.exception.NotCorrectPasswordException;\n+import com.epam.izh.rd.online.exception.UserNotFoundException;\n import com.epam.izh.rd.online.repository.IUserRepository;\n \n public class AuthenticationService implements IAuthenticationService {\n@@ -25,18 +27,24 @@ public AuthenticationService(IUserRepository userRepository) {\n      * @param user - пользователь проходящий авторизацию\n      */\n     @Override\n-    public User login(User user) {\n+    public User login(User user) throws UserNotFoundException, NotCorrectPasswordException {\n         // Находим пользователя в базе\n         User foundUser = userRepository.findByLogin(user.getLogin());\n \n-        //\n-        // Здесь необходимо реализовать перечисленные выше проверки\n-        //\n+        if (foundUser == null) {\n+            throw new UserNotFoundException(\"Пользователь с таким логином не найден\");\n+        }\n+\n+        if(!user.getPassword().equals(foundUser.getPassword())){\n+            throw new NotCorrectPasswordException(\"Пароль введен неверно!\");\n+        }\n \n         // Устанавливаем найденного пользователя, который прошел все проверки, как вошедшего в систему.\n         CurrentUserManager.setCurrentLoggedInUser(foundUser);\n \n         return foundUser;\n+\n+\n     }\n \n     /**\n@@ -46,4 +54,7 @@ public User login(User user) {\n     public void logout() {\n         CurrentUserManager.setCurrentLoggedInUser(null);\n     }\n+\n+\n }\n+"
  },
  {
    "sha": "7840306f8917133d01f40240a70872b3206f1068",
    "filename": "src/main/java/com/epam/izh/rd/online/service/IAuthenticationService.java",
    "status": "modified",
    "additions": 3,
    "deletions": 1,
    "changes": 4,
    "blob_url": "https://github.com/Andreyprofkip/java-exceptions-template/blob/d065c8a5bd95dc2cde95450526790731082dceec/src/main/java/com/epam/izh/rd/online/service/IAuthenticationService.java",
    "raw_url": "https://github.com/Andreyprofkip/java-exceptions-template/raw/d065c8a5bd95dc2cde95450526790731082dceec/src/main/java/com/epam/izh/rd/online/service/IAuthenticationService.java",
    "contents_url": "https://api.github.com/repos/Andreyprofkip/java-exceptions-template/contents/src/main/java/com/epam/izh/rd/online/service/IAuthenticationService.java?ref=d065c8a5bd95dc2cde95450526790731082dceec",
    "patch": "@@ -1,9 +1,11 @@\n package com.epam.izh.rd.online.service;\n \n import com.epam.izh.rd.online.entity.User;\n+import com.epam.izh.rd.online.exception.NotCorrectPasswordException;\n+import com.epam.izh.rd.online.exception.UserNotFoundException;\n \n public interface IAuthenticationService {\n-    User login(User user);\n+    User login(User user) throws UserNotFoundException, NotCorrectPasswordException;\n \n     void logout();\n }"
  },
  {
    "sha": "5cc0fcbf9e48e4ea986732c79f6a32630d89a1d4",
    "filename": "src/main/java/com/epam/izh/rd/online/service/IUserService.java",
    "status": "modified",
    "additions": 5,
    "deletions": 2,
    "changes": 7,
    "blob_url": "https://github.com/Andreyprofkip/java-exceptions-template/blob/d065c8a5bd95dc2cde95450526790731082dceec/src/main/java/com/epam/izh/rd/online/service/IUserService.java",
    "raw_url": "https://github.com/Andreyprofkip/java-exceptions-template/raw/d065c8a5bd95dc2cde95450526790731082dceec/src/main/java/com/epam/izh/rd/online/service/IUserService.java",
    "contents_url": "https://api.github.com/repos/Andreyprofkip/java-exceptions-template/contents/src/main/java/com/epam/izh/rd/online/service/IUserService.java?ref=d065c8a5bd95dc2cde95450526790731082dceec",
    "patch": "@@ -1,10 +1,13 @@\n package com.epam.izh.rd.online.service;\n \n import com.epam.izh.rd.online.entity.User;\n+import com.epam.izh.rd.online.exception.NotAccessException;\n+import com.epam.izh.rd.online.exception.SimplePasswordException;\n+import com.epam.izh.rd.online.exception.UserAlreadyRegisteredException;\n \n public interface IUserService {\n \n-    User register(User user);\n+    User register(User user) throws UserAlreadyRegisteredException, SimplePasswordException;\n \n-    void delete(String login);\n+    void delete(String login) throws NotAccessException;\n }"
  },
  {
    "sha": "ea34ba9d980096a7fce3109d6b6bebd71de2f1b3",
    "filename": "src/main/java/com/epam/izh/rd/online/service/UserService.java",
    "status": "modified",
    "additions": 30,
    "deletions": 10,
    "changes": 40,
    "blob_url": "https://github.com/Andreyprofkip/java-exceptions-template/blob/d065c8a5bd95dc2cde95450526790731082dceec/src/main/java/com/epam/izh/rd/online/service/UserService.java",
    "raw_url": "https://github.com/Andreyprofkip/java-exceptions-template/raw/d065c8a5bd95dc2cde95450526790731082dceec/src/main/java/com/epam/izh/rd/online/service/UserService.java",
    "contents_url": "https://api.github.com/repos/Andreyprofkip/java-exceptions-template/contents/src/main/java/com/epam/izh/rd/online/service/UserService.java?ref=d065c8a5bd95dc2cde95450526790731082dceec",
    "patch": "@@ -1,6 +1,9 @@\n package com.epam.izh.rd.online.service;\n \n import com.epam.izh.rd.online.entity.User;\n+import com.epam.izh.rd.online.exception.NotAccessException;\n+import com.epam.izh.rd.online.exception.SimplePasswordException;\n+import com.epam.izh.rd.online.exception.UserAlreadyRegisteredException;\n import com.epam.izh.rd.online.repository.IUserRepository;\n import com.epam.izh.rd.online.repository.UserRepository;\n \n@@ -30,13 +33,23 @@ public UserService(IUserRepository userRepository) {\n      * @param user - даныне регистрирующегося пользователя\n      */\n     @Override\n-    public User register(User user) {\n+    public User register(User user) throws UserAlreadyRegisteredException, SimplePasswordException {\n \n-        //\n-        // Здесь необходимо реализовать перечисленные выше проверки\n-        //\n+        if(user.getLogin() == null || user.getLogin().equals(\"\") ||\n+            user.getPassword() == null || user.getPassword().equals(\"\")){\n+            throw new IllegalArgumentException(\"Ошибка в заполнении полей\");\n+        }\n+\n+        if(userRepository.findByLogin(user.getLogin()) != null) {\n+            throw new UserAlreadyRegisteredException(\"Пользователь с логином \" + user.getLogin() + \" уже зарегистрирован\");\n+        }\n+\n+        String regexpAlphabet = \"^.*(?=.*[a-z]).*$\";\n+\n+        if (!user.getPassword().matches(regexpAlphabet) ) {\n+            throw new SimplePasswordException(\"Пароль не соответствует требованиям безопасности\");\n+        }\n \n-        // Если все проверки успешно пройдены, сохраняем пользователя в базу\n         return userRepository.save(user);\n     }\n \n@@ -58,14 +71,21 @@ public User register(User user) {\n      *\n      * @param login\n      */\n-    public void delete(String login) {\n+    public void delete(String login) throws NotAccessException {\n \n-        // Здесь необходимо сделать доработку метод\n+        try {\n+            if(CurrentUserManager.getCurrentLoggedInUser().getLogin().equals(\"Admin\")){\n+                userRepository.deleteByLogin(login);\n+            } else {\n+                throw new UnsupportedOperationException();\n+            }\n+        } catch(UnsupportedOperationException e){\n+            throw new NotAccessException(\"Недостаточно прав для выполнения операции\");\n+        }\n+\n+    }\n \n-            userRepository.deleteByLogin(login);\n \n-        // Здесь необходимо сделать доработку метода\n \n-    }\n \n }"
  },
  {
    "sha": "5f9212deee2ff96e54279b2db13be19af3b1e757",
    "filename": "src/test/java/com/epam/izh/rd/online/Assert.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/Andreyprofkip/java-exceptions-template/blob/d065c8a5bd95dc2cde95450526790731082dceec/src/test/java/com/epam/izh/rd/online/Assert.java",
    "raw_url": "https://github.com/Andreyprofkip/java-exceptions-template/raw/d065c8a5bd95dc2cde95450526790731082dceec/src/test/java/com/epam/izh/rd/online/Assert.java",
    "contents_url": "https://api.github.com/repos/Andreyprofkip/java-exceptions-template/contents/src/test/java/com/epam/izh/rd/online/Assert.java?ref=d065c8a5bd95dc2cde95450526790731082dceec",
    "patch": "@@ -7,12 +7,12 @@\n \n public class Assert<T extends Throwable> {\n \n-    public T assertThrowsWithClassName(String className, Executable executable, String message) {\n+    public T assertThrowsWithClassName (String className, Executable executable, String message) throws ClassNotFoundException {\n         return assertThrows(forName(className), executable, message);\n     }\n \n     @SneakyThrows\n-    private Class<T> forName(String className) {\n+    private Class<T> forName(String className) throws ClassNotFoundException {\n         return (Class<T>) Class.forName(\"com.epam.izh.rd.online.exception.\" + className);\n     }\n }"
  },
  {
    "sha": "7abbae3e559922314bf0ddffe19be3be6077dc83",
    "filename": "src/test/java/com/epam/izh/rd/online/AuthenticationServiceTest.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/Andreyprofkip/java-exceptions-template/blob/d065c8a5bd95dc2cde95450526790731082dceec/src/test/java/com/epam/izh/rd/online/AuthenticationServiceTest.java",
    "raw_url": "https://github.com/Andreyprofkip/java-exceptions-template/raw/d065c8a5bd95dc2cde95450526790731082dceec/src/test/java/com/epam/izh/rd/online/AuthenticationServiceTest.java",
    "contents_url": "https://api.github.com/repos/Andreyprofkip/java-exceptions-template/contents/src/test/java/com/epam/izh/rd/online/AuthenticationServiceTest.java?ref=d065c8a5bd95dc2cde95450526790731082dceec",
    "patch": "@@ -25,14 +25,14 @@ private void setup() {\n \n     @Test\n     @DisplayName(\"Тест метода IAuthenticationService.login(User user)\")\n-    void testRegisterCase1() {\n+    void testRegisterCase1() throws ClassNotFoundException {\n         assertion.assertThrowsWithClassName(\"UserNotFoundException\", () -> authenticationService.login(getUser()),\n                 \"Пользователь с таким логином не найден\");\n     }\n \n     @Test\n     @DisplayName(\"Тест метода IAuthenticationService.login(User user)\")\n-    void testRegisterCase2() {\n+    void testRegisterCase2() throws ClassNotFoundException {\n         User user = getUser();\n         userRepository.save(user);\n "
  },
  {
    "sha": "652252d30e6f0ef5e0c767b8494d7e4b908f56aa",
    "filename": "src/test/java/com/epam/izh/rd/online/UserServiceTest.java",
    "status": "modified",
    "additions": 6,
    "deletions": 4,
    "changes": 10,
    "blob_url": "https://github.com/Andreyprofkip/java-exceptions-template/blob/d065c8a5bd95dc2cde95450526790731082dceec/src/test/java/com/epam/izh/rd/online/UserServiceTest.java",
    "raw_url": "https://github.com/Andreyprofkip/java-exceptions-template/raw/d065c8a5bd95dc2cde95450526790731082dceec/src/test/java/com/epam/izh/rd/online/UserServiceTest.java",
    "contents_url": "https://api.github.com/repos/Andreyprofkip/java-exceptions-template/contents/src/test/java/com/epam/izh/rd/online/UserServiceTest.java?ref=d065c8a5bd95dc2cde95450526790731082dceec",
    "patch": "@@ -1,6 +1,8 @@\n package com.epam.izh.rd.online;\n \n import com.epam.izh.rd.online.entity.User;\n+import com.epam.izh.rd.online.exception.SimplePasswordException;\n+import com.epam.izh.rd.online.exception.UserAlreadyRegisteredException;\n import com.epam.izh.rd.online.repository.IUserRepository;\n import com.epam.izh.rd.online.repository.UserRepository;\n import com.epam.izh.rd.online.service.CurrentUserManager;\n@@ -39,17 +41,17 @@ void testRegisterCase1(User user) {\n \n     @Test\n     @DisplayName(\"Тест метода IUserService.register(User user) кейс 2\")\n-    void testRegisterCase2() throws Exception {\n+    void testRegisterCase2() throws Exception, UserAlreadyRegisteredException, SimplePasswordException {\n         User user = Providers.getUser();\n \n         userService.register(user);\n         assertion.assertThrowsWithClassName(\"UserAlreadyRegisteredException\", () -> userService.register(user),\n-                \"Пользователь с логином \" + user.getLogin() + \" уже зарегистрирован\");\n+                 \"Пользователь с логином \"+ user.getLogin() + \" уже зарегистрирован\");\n     }\n \n     @Test\n     @DisplayName(\"Тест метода IUserService.register(User user) кейс 3\")\n-    void testRegisterCase3() {\n+    void testRegisterCase3() throws Exception {\n         User user = getUserWithNumberPassword();\n \n         assertion.assertThrowsWithClassName(\"SimplePasswordException\", () -> userService.register(user),\n@@ -60,7 +62,7 @@ void testRegisterCase3() {\n     @ParameterizedTest\n     @MethodSource(\"com.epam.izh.rd.online.Providers#testDelete\")\n     @DisplayName(\"Тест метода IUserService.delete(String login)\")\n-    void testDelete(User user) {\n+    void testDelete(User user) throws ClassNotFoundException {\n         CurrentUserManager.setCurrentLoggedInUser(user);\n         assertion.assertThrowsWithClassName(\"NotAccessException\", () -> userService.delete(\"123\"),\n                 \"Недостаточно прав для выполнения операции\");"
  }
]
