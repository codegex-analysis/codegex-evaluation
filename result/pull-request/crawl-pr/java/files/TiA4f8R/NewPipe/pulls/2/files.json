[
  {
    "sha": "9e8e89a5f8c8f4c6803b2cf594063ed10502efe6",
    "filename": "app/build.gradle",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/TiA4f8R/NewPipe/blob/401c5ed4f0707289c0a5f265805810a908ee91ff/app/build.gradle",
    "raw_url": "https://github.com/TiA4f8R/NewPipe/raw/401c5ed4f0707289c0a5f265805810a908ee91ff/app/build.gradle",
    "contents_url": "https://api.github.com/repos/TiA4f8R/NewPipe/contents/app/build.gradle?ref=401c5ed4f0707289c0a5f265805810a908ee91ff",
    "patch": "@@ -180,7 +180,7 @@ dependencies {\n \n     // NewPipe dependencies\n     // You can use a local version by uncommenting a few lines in settings.gradle\n-    implementation \"com.github.TeamNewPipe:NewPipeExtractor:7e6f464407fc1a2c8fb0886d294093526a6ef0f1\"\n+    implementation \"com.github.TiA4f8R:NewPipeExtractor:379d7312faaa5f1e21987f09a968f6590471745c\"\n     implementation \"com.github.TeamNewPipe:nanojson:1d9e1aea9049fc9f85e68b43ba39fe7be1c1f751\"\n \n     implementation \"org.jsoup:jsoup:1.13.1\""
  },
  {
    "sha": "891824a554283db3b7f19b4e6b3c30259f10396f",
    "filename": "app/src/androidTest/java/org/schabi/newpipe/error/ErrorInfoTest.java",
    "status": "added",
    "additions": 46,
    "deletions": 0,
    "changes": 46,
    "blob_url": "https://github.com/TiA4f8R/NewPipe/blob/401c5ed4f0707289c0a5f265805810a908ee91ff/app/src/androidTest/java/org/schabi/newpipe/error/ErrorInfoTest.java",
    "raw_url": "https://github.com/TiA4f8R/NewPipe/raw/401c5ed4f0707289c0a5f265805810a908ee91ff/app/src/androidTest/java/org/schabi/newpipe/error/ErrorInfoTest.java",
    "contents_url": "https://api.github.com/repos/TiA4f8R/NewPipe/contents/app/src/androidTest/java/org/schabi/newpipe/error/ErrorInfoTest.java?ref=401c5ed4f0707289c0a5f265805810a908ee91ff",
    "patch": "@@ -0,0 +1,46 @@\n+package org.schabi.newpipe.error;\n+\n+import android.os.Parcel;\n+\n+import androidx.test.ext.junit.runners.AndroidJUnit4;\n+import androidx.test.filters.LargeTest;\n+\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.schabi.newpipe.R;\n+import org.schabi.newpipe.extractor.ServiceList;\n+import org.schabi.newpipe.extractor.exceptions.ParsingException;\n+\n+import java.util.Arrays;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+\n+/**\n+ * Instrumented tests for {@link ErrorInfo}.\n+ */\n+@RunWith(AndroidJUnit4.class)\n+@LargeTest\n+public class ErrorInfoTest {\n+\n+    @Test\n+    public void errorInfoTestParcelable() {\n+        final ErrorInfo info = new ErrorInfo(new ParsingException(\"Hello\"),\n+                UserAction.USER_REPORT, \"request\", ServiceList.YouTube.getServiceId());\n+        // Obtain a Parcel object and write the parcelable object to it:\n+        final Parcel parcel = Parcel.obtain();\n+        info.writeToParcel(parcel, 0);\n+        parcel.setDataPosition(0);\n+        final ErrorInfo infoFromParcel = (ErrorInfo) ErrorInfo.CREATOR.createFromParcel(parcel);\n+\n+        assertTrue(Arrays.toString(infoFromParcel.getStackTraces())\n+                .contains(ErrorInfoTest.class.getSimpleName()));\n+        assertEquals(UserAction.USER_REPORT, infoFromParcel.getUserAction());\n+        assertEquals(ServiceList.YouTube.getServiceInfo().getName(),\n+                infoFromParcel.getServiceName());\n+        assertEquals(\"request\", infoFromParcel.getRequest());\n+        assertEquals(R.string.parsing_error, infoFromParcel.getMessageStringId());\n+\n+        parcel.recycle();\n+    }\n+}"
  },
  {
    "sha": "09ae5648d56ec8b7d8dedd7a554e64fd25a9dd35",
    "filename": "app/src/androidTest/java/org/schabi/newpipe/report/ErrorInfoTest.java",
    "status": "removed",
    "additions": 0,
    "deletions": 38,
    "changes": 38,
    "blob_url": "https://github.com/TiA4f8R/NewPipe/blob/4c31636d191dc5da3b2dcc1a58cf93901ddd398f/app/src/androidTest/java/org/schabi/newpipe/report/ErrorInfoTest.java",
    "raw_url": "https://github.com/TiA4f8R/NewPipe/raw/4c31636d191dc5da3b2dcc1a58cf93901ddd398f/app/src/androidTest/java/org/schabi/newpipe/report/ErrorInfoTest.java",
    "contents_url": "https://api.github.com/repos/TiA4f8R/NewPipe/contents/app/src/androidTest/java/org/schabi/newpipe/report/ErrorInfoTest.java?ref=4c31636d191dc5da3b2dcc1a58cf93901ddd398f",
    "patch": "@@ -1,38 +0,0 @@\n-package org.schabi.newpipe.report;\n-\n-import android.os.Parcel;\n-\n-import androidx.test.ext.junit.runners.AndroidJUnit4;\n-import androidx.test.filters.LargeTest;\n-\n-import org.junit.Test;\n-import org.junit.runner.RunWith;\n-import org.schabi.newpipe.R;\n-\n-import static org.junit.Assert.assertEquals;\n-\n-/**\n- * Instrumented tests for {@link ErrorInfo}.\n- */\n-@RunWith(AndroidJUnit4.class)\n-@LargeTest\n-public class ErrorInfoTest {\n-\n-    @Test\n-    public void errorInfoTestParcelable() {\n-        final ErrorInfo info = ErrorInfo.make(UserAction.USER_REPORT, \"youtube\", \"request\",\n-                R.string.general_error);\n-        // Obtain a Parcel object and write the parcelable object to it:\n-        final Parcel parcel = Parcel.obtain();\n-        info.writeToParcel(parcel, 0);\n-        parcel.setDataPosition(0);\n-        final ErrorInfo infoFromParcel = ErrorInfo.CREATOR.createFromParcel(parcel);\n-\n-        assertEquals(UserAction.USER_REPORT, infoFromParcel.getUserAction());\n-        assertEquals(\"youtube\", infoFromParcel.getServiceName());\n-        assertEquals(\"request\", infoFromParcel.getRequest());\n-        assertEquals(R.string.general_error, infoFromParcel.getMessage());\n-\n-        parcel.recycle();\n-    }\n-}"
  },
  {
    "sha": "e7fa95759ea66d3bf0f1eab84af92b1c30bd94d4",
    "filename": "app/src/main/AndroidManifest.xml",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/TiA4f8R/NewPipe/blob/401c5ed4f0707289c0a5f265805810a908ee91ff/app/src/main/AndroidManifest.xml",
    "raw_url": "https://github.com/TiA4f8R/NewPipe/raw/401c5ed4f0707289c0a5f265805810a908ee91ff/app/src/main/AndroidManifest.xml",
    "contents_url": "https://api.github.com/repos/TiA4f8R/NewPipe/contents/app/src/main/AndroidManifest.xml?ref=401c5ed4f0707289c0a5f265805810a908ee91ff",
    "patch": "@@ -85,7 +85,7 @@\n             android:name=\".ExitActivity\"\n             android:label=\"@string/general_error\"\n             android:theme=\"@android:style/Theme.NoDisplay\" />\n-        <activity android:name=\".report.ErrorActivity\" />\n+        <activity android:name=\".error.ErrorActivity\" />\n \n         <!-- giga get related -->\n         <activity\n@@ -106,7 +106,7 @@\n         </activity>\n \n         <activity\n-            android:name=\".ReCaptchaActivity\"\n+            android:name=\".error.ReCaptchaActivity\"\n             android:label=\"@string/recaptcha\" />\n \n         <provider"
  },
  {
    "sha": "9321b307196ee17ee5e90a1aa045784f8e66b1f9",
    "filename": "app/src/main/java/org/schabi/newpipe/ActivityCommunicator.java",
    "status": "removed",
    "additions": 0,
    "deletions": 47,
    "changes": 47,
    "blob_url": "https://github.com/TiA4f8R/NewPipe/blob/4c31636d191dc5da3b2dcc1a58cf93901ddd398f/app/src/main/java/org/schabi/newpipe/ActivityCommunicator.java",
    "raw_url": "https://github.com/TiA4f8R/NewPipe/raw/4c31636d191dc5da3b2dcc1a58cf93901ddd398f/app/src/main/java/org/schabi/newpipe/ActivityCommunicator.java",
    "contents_url": "https://api.github.com/repos/TiA4f8R/NewPipe/contents/app/src/main/java/org/schabi/newpipe/ActivityCommunicator.java?ref=4c31636d191dc5da3b2dcc1a58cf93901ddd398f",
    "patch": "@@ -1,47 +0,0 @@\n-package org.schabi.newpipe;\n-\n-/*\n- * Created by Christian Schabesberger on 24.12.15.\n- *\n- * Copyright (C) Christian Schabesberger 2015 <chris.schabesberger@mailbox.org>\n- * ActivityCommunicator.java is part of NewPipe.\n- *\n- * NewPipe is free software: you can redistribute it and/or modify\n- * it under the terms of the GNU General Public License as published by\n- * the Free Software Foundation, either version 3 of the License, or\n- * (at your option) any later version.\n- *\n- * NewPipe is distributed in the hope that it will be useful,\n- * but WITHOUT ANY WARRANTY; without even the implied warranty of\n- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n- * GNU General Public License for more details.\n- *\n- * You should have received a copy of the GNU General Public License\n- * along with NewPipe.  If not, see <http://www.gnu.org/licenses/>.\n- */\n-\n-/**\n- * Singleton:\n- * Used to send data between certain Activity/Services within the same process.\n- * This can be considered as an ugly hack inside the Android universe.\n- **/\n-public class ActivityCommunicator {\n-\n-    private static ActivityCommunicator activityCommunicator;\n-    private volatile Class returnActivity;\n-\n-    public static ActivityCommunicator getCommunicator() {\n-        if (activityCommunicator == null) {\n-            activityCommunicator = new ActivityCommunicator();\n-        }\n-        return activityCommunicator;\n-    }\n-\n-    public Class getReturnActivity() {\n-        return returnActivity;\n-    }\n-\n-    public void setReturnActivity(final Class returnActivity) {\n-        this.returnActivity = returnActivity;\n-    }\n-}"
  },
  {
    "sha": "e3e9c3e4ebee835b9b188be973e73e1c28ab62a1",
    "filename": "app/src/main/java/org/schabi/newpipe/App.java",
    "status": "modified",
    "additions": 8,
    "deletions": 11,
    "changes": 19,
    "blob_url": "https://github.com/TiA4f8R/NewPipe/blob/401c5ed4f0707289c0a5f265805810a908ee91ff/app/src/main/java/org/schabi/newpipe/App.java",
    "raw_url": "https://github.com/TiA4f8R/NewPipe/raw/401c5ed4f0707289c0a5f265805810a908ee91ff/app/src/main/java/org/schabi/newpipe/App.java",
    "contents_url": "https://api.github.com/repos/TiA4f8R/NewPipe/contents/app/src/main/java/org/schabi/newpipe/App.java?ref=401c5ed4f0707289c0a5f265805810a908ee91ff",
    "patch": "@@ -20,12 +20,13 @@\n import org.acra.config.ACRAConfigurationException;\n import org.acra.config.CoreConfiguration;\n import org.acra.config.CoreConfigurationBuilder;\n+import org.schabi.newpipe.error.ErrorActivity;\n+import org.schabi.newpipe.error.ErrorInfo;\n+import org.schabi.newpipe.error.ReCaptchaActivity;\n+import org.schabi.newpipe.error.UserAction;\n import org.schabi.newpipe.extractor.NewPipe;\n import org.schabi.newpipe.extractor.downloader.Downloader;\n import org.schabi.newpipe.ktx.ExceptionUtils;\n-import org.schabi.newpipe.report.ErrorActivity;\n-import org.schabi.newpipe.report.ErrorInfo;\n-import org.schabi.newpipe.report.UserAction;\n import org.schabi.newpipe.settings.SettingsActivity;\n import org.schabi.newpipe.util.Localization;\n import org.schabi.newpipe.util.ServiceHelper;\n@@ -224,14 +225,10 @@ protected void initACRA() {\n                     .setBuildConfigClass(BuildConfig.class)\n                     .build();\n             ACRA.init(this, acraConfig);\n-        } catch (final ACRAConfigurationException ace) {\n-            ace.printStackTrace();\n-            ErrorActivity.reportError(this,\n-                    ace,\n-                    null,\n-                    null,\n-                    ErrorInfo.make(UserAction.SOMETHING_ELSE, \"none\",\n-                            \"Could not initialize ACRA crash report\", R.string.app_ui_crash));\n+        } catch (final ACRAConfigurationException exception) {\n+            exception.printStackTrace();\n+            ErrorActivity.reportError(this, new ErrorInfo(exception,\n+                    UserAction.SOMETHING_ELSE, \"Could not initialize ACRA crash report\"));\n         }\n     }\n "
  },
  {
    "sha": "f84d986aab0010855ad1e54b8a823b055b5d3f5c",
    "filename": "app/src/main/java/org/schabi/newpipe/CheckForNewAppVersion.java",
    "status": "modified",
    "additions": 18,
    "deletions": 16,
    "changes": 34,
    "blob_url": "https://github.com/TiA4f8R/NewPipe/blob/401c5ed4f0707289c0a5f265805810a908ee91ff/app/src/main/java/org/schabi/newpipe/CheckForNewAppVersion.java",
    "raw_url": "https://github.com/TiA4f8R/NewPipe/raw/401c5ed4f0707289c0a5f265805810a908ee91ff/app/src/main/java/org/schabi/newpipe/CheckForNewAppVersion.java",
    "contents_url": "https://api.github.com/repos/TiA4f8R/NewPipe/contents/app/src/main/java/org/schabi/newpipe/CheckForNewAppVersion.java?ref=401c5ed4f0707289c0a5f265805810a908ee91ff",
    "patch": "@@ -10,19 +10,22 @@\n import android.net.ConnectivityManager;\n import android.net.Uri;\n import android.util.Log;\n+\n import androidx.annotation.NonNull;\n import androidx.annotation.Nullable;\n import androidx.core.app.NotificationCompat;\n import androidx.core.app.NotificationManagerCompat;\n import androidx.core.content.ContextCompat;\n import androidx.preference.PreferenceManager;\n+\n import com.grack.nanojson.JsonObject;\n import com.grack.nanojson.JsonParser;\n import com.grack.nanojson.JsonParserException;\n-import io.reactivex.rxjava3.android.schedulers.AndroidSchedulers;\n-import io.reactivex.rxjava3.core.Maybe;\n-import io.reactivex.rxjava3.disposables.Disposable;\n-import io.reactivex.rxjava3.schedulers.Schedulers;\n+\n+import org.schabi.newpipe.error.ErrorActivity;\n+import org.schabi.newpipe.error.ErrorInfo;\n+import org.schabi.newpipe.error.UserAction;\n+\n import java.io.ByteArrayInputStream;\n import java.io.InputStream;\n import java.security.MessageDigest;\n@@ -31,9 +34,11 @@\n import java.security.cert.CertificateException;\n import java.security.cert.CertificateFactory;\n import java.security.cert.X509Certificate;\n-import org.schabi.newpipe.report.ErrorActivity;\n-import org.schabi.newpipe.report.ErrorInfo;\n-import org.schabi.newpipe.report.UserAction;\n+\n+import io.reactivex.rxjava3.android.schedulers.AndroidSchedulers;\n+import io.reactivex.rxjava3.core.Maybe;\n+import io.reactivex.rxjava3.disposables.Disposable;\n+import io.reactivex.rxjava3.schedulers.Schedulers;\n \n public final class CheckForNewAppVersion {\n     private CheckForNewAppVersion() { }\n@@ -58,9 +63,8 @@ private static String getCertificateSHA1Fingerprint(@NonNull final Application a\n             packageInfo = application.getPackageManager().getPackageInfo(\n                     application.getPackageName(), PackageManager.GET_SIGNATURES);\n         } catch (final PackageManager.NameNotFoundException e) {\n-            ErrorActivity.reportError(application, e, null, null,\n-                    ErrorInfo.make(UserAction.SOMETHING_ELSE, \"none\",\n-                            \"Could not find package info\", R.string.app_ui_crash));\n+            ErrorActivity.reportError(application, new ErrorInfo(e,\n+                    UserAction.CHECK_FOR_NEW_APP_VERSION, \"Could not find package info\"));\n             return \"\";\n         }\n \n@@ -72,9 +76,8 @@ private static String getCertificateSHA1Fingerprint(@NonNull final Application a\n             final CertificateFactory cf = CertificateFactory.getInstance(\"X509\");\n             c = (X509Certificate) cf.generateCertificate(input);\n         } catch (final CertificateException e) {\n-            ErrorActivity.reportError(application, e, null, null,\n-                    ErrorInfo.make(UserAction.SOMETHING_ELSE, \"none\",\n-                            \"Certificate error\", R.string.app_ui_crash));\n+            ErrorActivity.reportError(application, new ErrorInfo(e,\n+                    UserAction.CHECK_FOR_NEW_APP_VERSION, \"Certificate error\"));\n             return \"\";\n         }\n \n@@ -83,9 +86,8 @@ private static String getCertificateSHA1Fingerprint(@NonNull final Application a\n             final byte[] publicKey = md.digest(c.getEncoded());\n             return byte2HexFormatted(publicKey);\n         } catch (NoSuchAlgorithmException | CertificateEncodingException e) {\n-            ErrorActivity.reportError(application, e, null, null,\n-                    ErrorInfo.make(UserAction.SOMETHING_ELSE, \"none\",\n-                            \"Could not retrieve SHA1 key\", R.string.app_ui_crash));\n+            ErrorActivity.reportError(application, new ErrorInfo(e,\n+                    UserAction.CHECK_FOR_NEW_APP_VERSION, \"Could not retrieve SHA1 key\"));\n             return \"\";\n         }\n     }"
  },
  {
    "sha": "3adc71ff2f02fc18e151b3b8e93c089b145c3b44",
    "filename": "app/src/main/java/org/schabi/newpipe/DownloaderImpl.java",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/TiA4f8R/NewPipe/blob/401c5ed4f0707289c0a5f265805810a908ee91ff/app/src/main/java/org/schabi/newpipe/DownloaderImpl.java",
    "raw_url": "https://github.com/TiA4f8R/NewPipe/raw/401c5ed4f0707289c0a5f265805810a908ee91ff/app/src/main/java/org/schabi/newpipe/DownloaderImpl.java",
    "contents_url": "https://api.github.com/repos/TiA4f8R/NewPipe/contents/app/src/main/java/org/schabi/newpipe/DownloaderImpl.java?ref=401c5ed4f0707289c0a5f265805810a908ee91ff",
    "patch": "@@ -7,6 +7,7 @@\n import androidx.annotation.Nullable;\n import androidx.preference.PreferenceManager;\n \n+import org.schabi.newpipe.error.ReCaptchaActivity;\n import org.schabi.newpipe.extractor.downloader.Downloader;\n import org.schabi.newpipe.extractor.downloader.Request;\n import org.schabi.newpipe.extractor.downloader.Response;"
  },
  {
    "sha": "1b8f3190e637a9cc2e77a546c3fecb18ab7e7663",
    "filename": "app/src/main/java/org/schabi/newpipe/MainActivity.java",
    "status": "modified",
    "additions": 11,
    "deletions": 14,
    "changes": 25,
    "blob_url": "https://github.com/TiA4f8R/NewPipe/blob/401c5ed4f0707289c0a5f265805810a908ee91ff/app/src/main/java/org/schabi/newpipe/MainActivity.java",
    "raw_url": "https://github.com/TiA4f8R/NewPipe/raw/401c5ed4f0707289c0a5f265805810a908ee91ff/app/src/main/java/org/schabi/newpipe/MainActivity.java",
    "contents_url": "https://api.github.com/repos/TiA4f8R/NewPipe/contents/app/src/main/java/org/schabi/newpipe/MainActivity.java?ref=401c5ed4f0707289c0a5f265805810a908ee91ff",
    "patch": "@@ -60,6 +60,7 @@\n import org.schabi.newpipe.databinding.DrawerLayoutBinding;\n import org.schabi.newpipe.databinding.InstanceSpinnerLayoutBinding;\n import org.schabi.newpipe.databinding.ToolbarLayoutBinding;\n+import org.schabi.newpipe.error.ErrorActivity;\n import org.schabi.newpipe.extractor.NewPipe;\n import org.schabi.newpipe.extractor.StreamingService;\n import org.schabi.newpipe.extractor.exceptions.ExtractionException;\n@@ -72,7 +73,6 @@\n import org.schabi.newpipe.player.event.OnKeyDownListener;\n import org.schabi.newpipe.player.helper.PlayerHolder;\n import org.schabi.newpipe.player.playqueue.PlayQueue;\n-import org.schabi.newpipe.report.ErrorActivity;\n import org.schabi.newpipe.util.Constants;\n import org.schabi.newpipe.util.DeviceUtils;\n import org.schabi.newpipe.util.KioskTranslator;\n@@ -153,7 +153,7 @@ protected void onCreate(final Bundle savedInstanceState) {\n         try {\n             setupDrawer();\n         } catch (final Exception e) {\n-            ErrorActivity.reportUiError(this, e);\n+            ErrorActivity.reportUiErrorInSnackbar(this, \"Setting up drawer\", e);\n         }\n \n         if (DeviceUtils.isTv(this)) {\n@@ -238,7 +238,7 @@ private boolean drawerItemSelected(final MenuItem item) {\n                 try {\n                     tabSelected(item);\n                 } catch (final Exception e) {\n-                    ErrorActivity.reportUiError(this, e);\n+                    ErrorActivity.reportUiErrorInSnackbar(this, \"Selecting main page tab\", e);\n                 }\n                 break;\n             case R.id.menu_options_about_group:\n@@ -340,7 +340,7 @@ private void toggleServices() {\n             try {\n                 showTabs();\n             } catch (final Exception e) {\n-                ErrorActivity.reportUiError(this, e);\n+                ErrorActivity.reportUiErrorInSnackbar(this, \"Showing main page tabs\", e);\n             }\n         }\n     }\n@@ -487,7 +487,7 @@ protected void onResume() {\n             drawerHeaderBinding.drawerHeaderActionButton.setContentDescription(\n                     getString(R.string.drawer_header_description) + selectedServiceName);\n         } catch (final Exception e) {\n-            ErrorActivity.reportUiError(this, e);\n+            ErrorActivity.reportUiErrorInSnackbar(this, \"Setting up service toggle\", e);\n         }\n \n         final SharedPreferences sharedPreferences\n@@ -679,19 +679,16 @@ public boolean onCreateOptionsMenu(final Menu menu) {\n     }\n \n     @Override\n-    public boolean onOptionsItemSelected(final MenuItem item) {\n+    public boolean onOptionsItemSelected(@NonNull final MenuItem item) {\n         if (DEBUG) {\n             Log.d(TAG, \"onOptionsItemSelected() called with: item = [\" + item + \"]\");\n         }\n-        final int id = item.getItemId();\n \n-        switch (id) {\n-            case android.R.id.home:\n-                onHomeButtonPressed();\n-                return true;\n-            default:\n-                return super.onOptionsItemSelected(item);\n+        if (item.getItemId() == android.R.id.home) {\n+            onHomeButtonPressed();\n+            return true;\n         }\n+        return super.onOptionsItemSelected(item);\n     }\n \n     /*//////////////////////////////////////////////////////////////////////////\n@@ -799,7 +796,7 @@ private void handleIntent(final Intent intent) {\n                 NavigationHelper.gotoMainFragment(getSupportFragmentManager());\n             }\n         } catch (final Exception e) {\n-            ErrorActivity.reportUiError(this, e);\n+            ErrorActivity.reportUiErrorInSnackbar(this, \"Handling intent\", e);\n         }\n     }\n "
  },
  {
    "sha": "179fab8dc4d01bd82ff0b54e5995cf651f0e541b",
    "filename": "app/src/main/java/org/schabi/newpipe/RouterActivity.java",
    "status": "modified",
    "additions": 82,
    "deletions": 33,
    "changes": 115,
    "blob_url": "https://github.com/TiA4f8R/NewPipe/blob/401c5ed4f0707289c0a5f265805810a908ee91ff/app/src/main/java/org/schabi/newpipe/RouterActivity.java",
    "raw_url": "https://github.com/TiA4f8R/NewPipe/raw/401c5ed4f0707289c0a5f265805810a908ee91ff/app/src/main/java/org/schabi/newpipe/RouterActivity.java",
    "contents_url": "https://api.github.com/repos/TiA4f8R/NewPipe/contents/app/src/main/java/org/schabi/newpipe/RouterActivity.java?ref=401c5ed4f0707289c0a5f265805810a908ee91ff",
    "patch": "@@ -33,23 +33,36 @@\n import org.schabi.newpipe.databinding.ListRadioIconItemBinding;\n import org.schabi.newpipe.databinding.SingleChoiceDialogViewBinding;\n import org.schabi.newpipe.download.DownloadDialog;\n+import org.schabi.newpipe.error.ErrorActivity;\n+import org.schabi.newpipe.error.ErrorInfo;\n+import org.schabi.newpipe.error.ReCaptchaActivity;\n+import org.schabi.newpipe.error.UserAction;\n import org.schabi.newpipe.extractor.Info;\n import org.schabi.newpipe.extractor.NewPipe;\n import org.schabi.newpipe.extractor.StreamingService;\n import org.schabi.newpipe.extractor.StreamingService.LinkType;\n import org.schabi.newpipe.extractor.channel.ChannelInfo;\n+import org.schabi.newpipe.extractor.exceptions.AgeRestrictedContentException;\n+import org.schabi.newpipe.extractor.exceptions.ContentNotAvailableException;\n+import org.schabi.newpipe.extractor.exceptions.ContentNotSupportedException;\n import org.schabi.newpipe.extractor.exceptions.ExtractionException;\n+import org.schabi.newpipe.extractor.exceptions.GeographicRestrictionException;\n+import org.schabi.newpipe.extractor.exceptions.PaidContentException;\n+import org.schabi.newpipe.extractor.exceptions.PrivateContentException;\n+import org.schabi.newpipe.extractor.exceptions.ReCaptchaException;\n+import org.schabi.newpipe.extractor.exceptions.SoundCloudGoPlusContentException;\n+import org.schabi.newpipe.extractor.exceptions.YoutubeMusicPremiumContentException;\n import org.schabi.newpipe.extractor.playlist.PlaylistInfo;\n import org.schabi.newpipe.extractor.stream.StreamInfo;\n import org.schabi.newpipe.extractor.stream.VideoStream;\n+import org.schabi.newpipe.ktx.ExceptionUtils;\n import org.schabi.newpipe.player.MainPlayer;\n import org.schabi.newpipe.player.helper.PlayerHelper;\n import org.schabi.newpipe.player.helper.PlayerHolder;\n import org.schabi.newpipe.player.playqueue.ChannelPlayQueue;\n import org.schabi.newpipe.player.playqueue.PlayQueue;\n import org.schabi.newpipe.player.playqueue.PlaylistPlayQueue;\n import org.schabi.newpipe.player.playqueue.SinglePlayQueue;\n-import org.schabi.newpipe.report.UserAction;\n import org.schabi.newpipe.util.Constants;\n import org.schabi.newpipe.util.DeviceUtils;\n import org.schabi.newpipe.util.ExtractorHelper;\n@@ -84,13 +97,6 @@\n  * Get the url from the intent and open it in the chosen preferred player.\n  */\n public class RouterActivity extends AppCompatActivity {\n-    public static final String INTERNAL_ROUTE_KEY = \"internalRoute\";\n-    /**\n-     * Removes invisible separators (\\p{Z}) and punctuation characters including\n-     * brackets (\\p{P}). See http://www.regular-expressions.info/unicode.html for\n-     * more details.\n-     */\n-    private static final String REGEX_REMOVE_FROM_URL = \"[\\\\p{Z}\\\\p{P}]\";\n     protected final CompositeDisposable disposables = new CompositeDisposable();\n     @State\n     protected int currentServiceId = -1;\n@@ -100,7 +106,6 @@\n     protected int selectedRadioPosition = -1;\n     protected int selectedPreviously = -1;\n     protected String currentUrl;\n-    protected boolean internalRoute = false;\n     private StreamingService currentService;\n     private boolean selectionIsDownload = false;\n \n@@ -123,7 +128,7 @@ protected void onCreate(final Bundle savedInstanceState) {\n     }\n \n     @Override\n-    protected void onSaveInstanceState(final Bundle outState) {\n+    protected void onSaveInstanceState(@NonNull final Bundle outState) {\n         super.onSaveInstanceState(outState);\n         Icepick.saveInstanceState(this, outState);\n     }\n@@ -145,37 +150,79 @@ protected void onDestroy() {\n     private void handleUrl(final String url) {\n         disposables.add(Observable\n                 .fromCallable(() -> {\n-                    if (currentServiceId == -1) {\n-                        currentService = NewPipe.getServiceByUrl(url);\n-                        currentServiceId = currentService.getServiceId();\n-                        currentLinkType = currentService.getLinkTypeByUrl(url);\n-                        currentUrl = url;\n-                    } else {\n-                        currentService = NewPipe.getService(currentServiceId);\n+                    try {\n+                        if (currentServiceId == -1) {\n+                            currentService = NewPipe.getServiceByUrl(url);\n+                            currentServiceId = currentService.getServiceId();\n+                            currentLinkType = currentService.getLinkTypeByUrl(url);\n+                            currentUrl = url;\n+                        } else {\n+                            currentService = NewPipe.getService(currentServiceId);\n+                        }\n+\n+                        // return whether the url was found to be supported or not\n+                        return currentLinkType != LinkType.NONE;\n+                    } catch (final ExtractionException e) {\n+                        // this can be reached only when the url is completely unsupported\n+                        return false;\n                     }\n-\n-                    return currentLinkType != LinkType.NONE;\n                 })\n                 .subscribeOn(Schedulers.io())\n                 .observeOn(AndroidSchedulers.mainThread())\n-                .subscribe(result -> {\n-                    if (result) {\n+                .subscribe(isUrlSupported -> {\n+                    if (isUrlSupported) {\n                         onSuccess();\n                     } else {\n                         showUnsupportedUrlDialog(url);\n                     }\n-                }, throwable -> handleError(throwable, url)));\n+                }, throwable -> handleError(this, new ErrorInfo(throwable,\n+                        UserAction.SHARE_TO_NEWPIPE, \"Getting service from url: \" + url))));\n     }\n \n-    private void handleError(final Throwable throwable, final String url) {\n-        throwable.printStackTrace();\n+    /**\n+     * @param context the context. It will be {@code finish()}ed at the end of the handling if it is\n+     *                an instance of {@link RouterActivity}.\n+     * @param errorInfo the error information\n+     */\n+    private static void handleError(final Context context, final ErrorInfo errorInfo) {\n+        if (errorInfo.getThrowable() != null) {\n+            errorInfo.getThrowable().printStackTrace();\n+        }\n \n-        if (throwable instanceof ExtractionException) {\n-            showUnsupportedUrlDialog(url);\n+        if (errorInfo.getThrowable() instanceof ReCaptchaException) {\n+            Toast.makeText(context, R.string.recaptcha_request_toast, Toast.LENGTH_LONG).show();\n+            // Starting ReCaptcha Challenge Activity\n+            final Intent intent = new Intent(context, ReCaptchaActivity.class);\n+            intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\n+            context.startActivity(intent);\n+        } else if (errorInfo.getThrowable() != null\n+                && ExceptionUtils.isNetworkRelated(errorInfo.getThrowable())) {\n+            Toast.makeText(context, R.string.network_error, Toast.LENGTH_LONG).show();\n+        } else if (errorInfo.getThrowable() instanceof AgeRestrictedContentException) {\n+            Toast.makeText(context, R.string.restricted_video_no_stream,\n+                    Toast.LENGTH_LONG).show();\n+        } else if (errorInfo.getThrowable() instanceof GeographicRestrictionException) {\n+            Toast.makeText(context, R.string.georestricted_content, Toast.LENGTH_LONG).show();\n+        } else if (errorInfo.getThrowable() instanceof PaidContentException) {\n+            Toast.makeText(context, R.string.paid_content, Toast.LENGTH_LONG).show();\n+        } else if (errorInfo.getThrowable() instanceof PrivateContentException) {\n+            Toast.makeText(context, R.string.private_content, Toast.LENGTH_LONG).show();\n+        } else if (errorInfo.getThrowable() instanceof SoundCloudGoPlusContentException) {\n+            Toast.makeText(context, R.string.soundcloud_go_plus_content,\n+                    Toast.LENGTH_LONG).show();\n+        } else if (errorInfo.getThrowable() instanceof YoutubeMusicPremiumContentException) {\n+            Toast.makeText(context, R.string.youtube_music_premium_content,\n+                    Toast.LENGTH_LONG).show();\n+        } else if (errorInfo.getThrowable() instanceof ContentNotAvailableException) {\n+            Toast.makeText(context, R.string.content_not_available, Toast.LENGTH_LONG).show();\n+        } else if (errorInfo.getThrowable() instanceof ContentNotSupportedException) {\n+            Toast.makeText(context, R.string.content_not_supported, Toast.LENGTH_LONG).show();\n         } else {\n-            ExtractorHelper.handleGeneralException(this, -1, url, throwable,\n-                    UserAction.SOMETHING_ELSE, null);\n-            finish();\n+            ErrorActivity.reportError(context, errorInfo);\n+        }\n+\n+        if (context instanceof RouterActivity) {\n+            ((RouterActivity) context).finish();\n         }\n     }\n \n@@ -500,7 +547,8 @@ private void handleChoice(final String selectedChoiceKey) {\n                     .subscribe(intent -> {\n                         startActivity(intent);\n                         finish();\n-                    }, throwable -> handleError(throwable, currentUrl))\n+                    }, throwable -> handleError(this, new ErrorInfo(throwable,\n+                            UserAction.SHARE_TO_NEWPIPE, \"Starting info activity: \" + currentUrl)))\n             );\n             return;\n         }\n@@ -580,6 +628,7 @@ public void onRequestPermissionsResult(final int requestCode,\n             this.playerChoice = playerChoice;\n         }\n \n+        @NonNull\n         @Override\n         public String toString() {\n             return serviceId + \":\" + url + \" > \" + linkType + \" ::: \" + playerChoice;\n@@ -646,9 +695,9 @@ public void handleChoice(final Choice choice) {\n                             if (fetcher != null) {\n                                 fetcher.dispose();\n                             }\n-                        }, throwable -> ExtractorHelper.handleGeneralException(this,\n-                                choice.serviceId, choice.url, throwable, finalUserAction,\n-                                \", opened with \" + choice.playerChoice));\n+                        }, throwable -> handleError(this, new ErrorInfo(throwable, finalUserAction,\n+                                choice.url + \" opened with \" + choice.playerChoice,\n+                                choice.serviceId)));\n             }\n         }\n "
  },
  {
    "sha": "0d46f20bfb8c017eb46a02de76a1dd36ab69f832",
    "filename": "app/src/main/java/org/schabi/newpipe/database/playlist/PlaylistStreamEntry.kt",
    "status": "modified",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/TiA4f8R/NewPipe/blob/401c5ed4f0707289c0a5f265805810a908ee91ff/app/src/main/java/org/schabi/newpipe/database/playlist/PlaylistStreamEntry.kt",
    "raw_url": "https://github.com/TiA4f8R/NewPipe/raw/401c5ed4f0707289c0a5f265805810a908ee91ff/app/src/main/java/org/schabi/newpipe/database/playlist/PlaylistStreamEntry.kt",
    "contents_url": "https://api.github.com/repos/TiA4f8R/NewPipe/contents/app/src/main/java/org/schabi/newpipe/database/playlist/PlaylistStreamEntry.kt?ref=401c5ed4f0707289c0a5f265805810a908ee91ff",
    "patch": "@@ -7,7 +7,6 @@ import org.schabi.newpipe.database.playlist.model.PlaylistStreamEntity\n import org.schabi.newpipe.database.stream.model.StreamEntity\n import org.schabi.newpipe.database.stream.model.StreamStateEntity\n import org.schabi.newpipe.extractor.stream.StreamInfoItem\n-import kotlin.jvm.Throws\n \n data class PlaylistStreamEntry(\n     @Embedded"
  },
  {
    "sha": "e573879c0397f48120ff3afe89210e488a59e3ea",
    "filename": "app/src/main/java/org/schabi/newpipe/download/DownloadDialog.java",
    "status": "modified",
    "additions": 5,
    "deletions": 16,
    "changes": 21,
    "blob_url": "https://github.com/TiA4f8R/NewPipe/blob/401c5ed4f0707289c0a5f265805810a908ee91ff/app/src/main/java/org/schabi/newpipe/download/DownloadDialog.java",
    "raw_url": "https://github.com/TiA4f8R/NewPipe/raw/401c5ed4f0707289c0a5f265805810a908ee91ff/app/src/main/java/org/schabi/newpipe/download/DownloadDialog.java",
    "contents_url": "https://api.github.com/repos/TiA4f8R/NewPipe/contents/app/src/main/java/org/schabi/newpipe/download/DownloadDialog.java?ref=401c5ed4f0707289c0a5f265805810a908ee91ff",
    "patch": "@@ -37,6 +37,9 @@\n import org.schabi.newpipe.R;\n import org.schabi.newpipe.RouterActivity;\n import org.schabi.newpipe.databinding.DownloadDialogBinding;\n+import org.schabi.newpipe.error.ErrorActivity;\n+import org.schabi.newpipe.error.ErrorInfo;\n+import org.schabi.newpipe.error.UserAction;\n import org.schabi.newpipe.extractor.MediaFormat;\n import org.schabi.newpipe.extractor.NewPipe;\n import org.schabi.newpipe.extractor.localization.Localization;\n@@ -45,9 +48,6 @@\n import org.schabi.newpipe.extractor.stream.StreamInfo;\n import org.schabi.newpipe.extractor.stream.SubtitlesStream;\n import org.schabi.newpipe.extractor.stream.VideoStream;\n-import org.schabi.newpipe.report.ErrorActivity;\n-import org.schabi.newpipe.report.ErrorInfo;\n-import org.schabi.newpipe.report.UserAction;\n import org.schabi.newpipe.settings.NewPipeSettings;\n import org.schabi.newpipe.util.FilePickerActivityHelper;\n import org.schabi.newpipe.util.FilenameUtils;\n@@ -61,7 +61,6 @@\n import java.io.File;\n import java.io.IOException;\n import java.util.ArrayList;\n-import java.util.Collections;\n import java.util.List;\n import java.util.Locale;\n \n@@ -591,17 +590,6 @@ private void showFailedDialog(@StringRes final int msg) {\n                 .show();\n     }\n \n-    private void showErrorActivity(final Exception e) {\n-        ErrorActivity.reportError(\n-                context,\n-                Collections.singletonList(e),\n-                null,\n-                null,\n-                ErrorInfo\n-                        .make(UserAction.SOMETHING_ELSE, \"-\", \"-\", R.string.general_error)\n-        );\n-    }\n-\n     private void prepareSelectedDownload() {\n         final StoredDirectoryHelper mainStorage;\n         final MediaFormat format;\n@@ -705,7 +693,8 @@ private void checkSelectedDownload(final StoredDirectoryHelper mainStorage,\n                         mainStorage.getTag());\n             }\n         } catch (final Exception e) {\n-            showErrorActivity(e);\n+            ErrorActivity.reportErrorInSnackbar(this,\n+                    new ErrorInfo(e, UserAction.DOWNLOAD_FAILED, \"Getting storage\"));\n             return;\n         }\n "
  },
  {
    "sha": "60d4908ebc05a6b2dbeab5dead535c9c38e1f6c6",
    "filename": "app/src/main/java/org/schabi/newpipe/error/AcraReportSender.java",
    "status": "renamed",
    "additions": 9,
    "deletions": 4,
    "changes": 13,
    "blob_url": "https://github.com/TiA4f8R/NewPipe/blob/401c5ed4f0707289c0a5f265805810a908ee91ff/app/src/main/java/org/schabi/newpipe/error/AcraReportSender.java",
    "raw_url": "https://github.com/TiA4f8R/NewPipe/raw/401c5ed4f0707289c0a5f265805810a908ee91ff/app/src/main/java/org/schabi/newpipe/error/AcraReportSender.java",
    "contents_url": "https://api.github.com/repos/TiA4f8R/NewPipe/contents/app/src/main/java/org/schabi/newpipe/error/AcraReportSender.java?ref=401c5ed4f0707289c0a5f265805810a908ee91ff",
    "patch": "@@ -1,9 +1,10 @@\n-package org.schabi.newpipe.report;\n+package org.schabi.newpipe.error;\n \n import android.content.Context;\n \n import androidx.annotation.NonNull;\n \n+import org.acra.ReportField;\n import org.acra.data.CrashReportData;\n import org.acra.sender.ReportSender;\n import org.schabi.newpipe.R;\n@@ -32,8 +33,12 @@\n \n     @Override\n     public void send(@NonNull final Context context, @NonNull final CrashReportData report) {\n-        ErrorActivity.reportError(context, report,\n-                ErrorInfo.make(UserAction.UI_ERROR, \"none\",\n-                        \"App crash, UI failure\", R.string.app_ui_crash));\n+        ErrorActivity.reportError(context, new ErrorInfo(\n+                new String[]{report.getString(ReportField.STACK_TRACE)},\n+                UserAction.UI_ERROR,\n+                ErrorInfo.SERVICE_NONE,\n+                \"ACRA report\",\n+                R.string.app_ui_crash,\n+                null));\n     }\n }",
    "previous_filename": "app/src/main/java/org/schabi/newpipe/report/AcraReportSender.java"
  },
  {
    "sha": "e63d55063b214bfb17bc135bc15a9c6c9bab75ff",
    "filename": "app/src/main/java/org/schabi/newpipe/error/AcraReportSenderFactory.java",
    "status": "renamed",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/TiA4f8R/NewPipe/blob/401c5ed4f0707289c0a5f265805810a908ee91ff/app/src/main/java/org/schabi/newpipe/error/AcraReportSenderFactory.java",
    "raw_url": "https://github.com/TiA4f8R/NewPipe/raw/401c5ed4f0707289c0a5f265805810a908ee91ff/app/src/main/java/org/schabi/newpipe/error/AcraReportSenderFactory.java",
    "contents_url": "https://api.github.com/repos/TiA4f8R/NewPipe/contents/app/src/main/java/org/schabi/newpipe/error/AcraReportSenderFactory.java?ref=401c5ed4f0707289c0a5f265805810a908ee91ff",
    "patch": "@@ -1,4 +1,4 @@\n-package org.schabi.newpipe.report;\n+package org.schabi.newpipe.error;\n \n import android.content.Context;\n ",
    "previous_filename": "app/src/main/java/org/schabi/newpipe/report/AcraReportSenderFactory.java"
  },
  {
    "sha": "c39d616e6a4f21ccc4a5a38c17e62670e9d96038",
    "filename": "app/src/main/java/org/schabi/newpipe/error/ErrorActivity.java",
    "status": "renamed",
    "additions": 69,
    "deletions": 142,
    "changes": 211,
    "blob_url": "https://github.com/TiA4f8R/NewPipe/blob/401c5ed4f0707289c0a5f265805810a908ee91ff/app/src/main/java/org/schabi/newpipe/error/ErrorActivity.java",
    "raw_url": "https://github.com/TiA4f8R/NewPipe/raw/401c5ed4f0707289c0a5f265805810a908ee91ff/app/src/main/java/org/schabi/newpipe/error/ErrorActivity.java",
    "contents_url": "https://api.github.com/repos/TiA4f8R/NewPipe/contents/app/src/main/java/org/schabi/newpipe/error/ErrorActivity.java?ref=401c5ed4f0707289c0a5f265805810a908ee91ff",
    "patch": "@@ -1,4 +1,4 @@\n-package org.schabi.newpipe.report;\n+package org.schabi.newpipe.error;\n \n import android.app.Activity;\n import android.app.AlertDialog;\n@@ -8,7 +8,6 @@\n import android.net.Uri;\n import android.os.Build;\n import android.os.Bundle;\n-import android.os.Handler;\n import android.util.Log;\n import android.view.Menu;\n import android.view.MenuInflater;\n@@ -18,14 +17,11 @@\n import androidx.annotation.Nullable;\n import androidx.appcompat.app.ActionBar;\n import androidx.appcompat.app.AppCompatActivity;\n-import androidx.core.app.NavUtils;\n+import androidx.fragment.app.Fragment;\n \n import com.google.android.material.snackbar.Snackbar;\n import com.grack.nanojson.JsonWriter;\n \n-import org.acra.ReportField;\n-import org.acra.data.CrashReportData;\n-import org.schabi.newpipe.ActivityCommunicator;\n import org.schabi.newpipe.BuildConfig;\n import org.schabi.newpipe.MainActivity;\n import org.schabi.newpipe.R;\n@@ -34,14 +30,9 @@\n import org.schabi.newpipe.util.ShareUtils;\n import org.schabi.newpipe.util.ThemeHelper;\n \n-import java.io.PrintWriter;\n-import java.io.StringWriter;\n-import java.text.SimpleDateFormat;\n+import java.time.LocalDateTime;\n+import java.time.format.DateTimeFormatter;\n import java.util.Arrays;\n-import java.util.Date;\n-import java.util.List;\n-import java.util.TimeZone;\n-import java.util.Vector;\n \n import static org.schabi.newpipe.util.Localization.assureCorrectAppLanguage;\n \n@@ -70,109 +61,78 @@\n     public static final String TAG = ErrorActivity.class.toString();\n     // BUNDLE TAGS\n     public static final String ERROR_INFO = \"error_info\";\n-    public static final String ERROR_LIST = \"error_list\";\n \n     public static final String ERROR_EMAIL_ADDRESS = \"crashreport@newpipe.schabi.org\";\n-    public static final String ERROR_EMAIL_SUBJECT\n-            = \"Exception in NewPipe \" + BuildConfig.VERSION_NAME;\n+    public static final String ERROR_EMAIL_SUBJECT = \"Exception in \";\n \n     public static final String ERROR_GITHUB_ISSUE_URL\n             = \"https://github.com/TeamNewPipe/NewPipe/issues\";\n \n-    private String[] errorList;\n+    public static final DateTimeFormatter CURRENT_TIMESTAMP_FORMATTER\n+            = DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");\n+\n+\n     private ErrorInfo errorInfo;\n-    private Class returnActivity;\n     private String currentTimeStamp;\n \n     private ActivityErrorBinding activityErrorBinding;\n \n-    public static void reportUiError(final AppCompatActivity activity, final Throwable el) {\n-        reportError(activity, el, activity.getClass(), null, ErrorInfo.make(UserAction.UI_ERROR,\n-                \"none\", \"\", R.string.app_ui_crash));\n-    }\n-\n-    public static void reportError(final Context context, final List<Throwable> el,\n-                                   final Class returnActivity, final View rootView,\n-                                   final ErrorInfo errorInfo) {\n-        if (rootView != null) {\n-            Snackbar.make(rootView, R.string.error_snackbar_message, 3 * 1000)\n-                    .setActionTextColor(Color.YELLOW)\n-                    .setAction(context.getString(R.string.error_snackbar_action).toUpperCase(), v ->\n-                            startErrorActivity(returnActivity, context, errorInfo, el)).show();\n-        } else {\n-            startErrorActivity(returnActivity, context, errorInfo, el);\n-        }\n-    }\n-\n-    private static void startErrorActivity(final Class returnActivity, final Context context,\n-                                           final ErrorInfo errorInfo, final List<Throwable> el) {\n-        final ActivityCommunicator ac = ActivityCommunicator.getCommunicator();\n-        ac.setReturnActivity(returnActivity);\n+    public static void reportError(final Context context, final ErrorInfo errorInfo) {\n         final Intent intent = new Intent(context, ErrorActivity.class);\n         intent.putExtra(ERROR_INFO, errorInfo);\n-        intent.putExtra(ERROR_LIST, elToSl(el));\n         intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\n         context.startActivity(intent);\n     }\n \n-    public static void reportError(final Context context, final Throwable e,\n-                                   final Class returnActivity, final View rootView,\n-                                   final ErrorInfo errorInfo) {\n-        List<Throwable> el = null;\n-        if (e != null) {\n-            el = new Vector<>();\n-            el.add(e);\n-        }\n-        reportError(context, el, returnActivity, rootView, errorInfo);\n+    public static void reportErrorInSnackbar(final Context context, final ErrorInfo errorInfo) {\n+        final View rootView = context instanceof Activity\n+                ? ((Activity) context).findViewById(android.R.id.content) : null;\n+        reportErrorInSnackbar(context, rootView, errorInfo);\n     }\n \n-    // async call\n-    public static void reportError(final Handler handler, final Context context,\n-                                   final Throwable e, final Class returnActivity,\n-                                   final View rootView, final ErrorInfo errorInfo) {\n-\n-        List<Throwable> el = null;\n-        if (e != null) {\n-            el = new Vector<>();\n-            el.add(e);\n+    public static void reportErrorInSnackbar(final Fragment fragment, final ErrorInfo errorInfo) {\n+        View rootView = fragment.getView();\n+        if (rootView == null && fragment.getActivity() != null) {\n+            rootView = fragment.getActivity().findViewById(android.R.id.content);\n         }\n-        reportError(handler, context, el, returnActivity, rootView, errorInfo);\n+        reportErrorInSnackbar(fragment.requireContext(), rootView, errorInfo);\n     }\n \n-    // async call\n-    public static void reportError(final Handler handler, final Context context,\n-                                   final List<Throwable> el, final Class returnActivity,\n-                                   final View rootView, final ErrorInfo errorInfo) {\n-        handler.post(() -> reportError(context, el, returnActivity, rootView, errorInfo));\n+    public static void reportUiErrorInSnackbar(final Context context,\n+                                               final String request,\n+                                               final Throwable throwable) {\n+        reportErrorInSnackbar(context, new ErrorInfo(throwable, UserAction.UI_ERROR, request));\n     }\n \n-    public static void reportError(final Context context, final CrashReportData report,\n-                                   final ErrorInfo errorInfo) {\n-        final String[] el = {report.getString(ReportField.STACK_TRACE)};\n-\n-        final Intent intent = new Intent(context, ErrorActivity.class);\n-        intent.putExtra(ERROR_INFO, errorInfo);\n-        intent.putExtra(ERROR_LIST, el);\n-        intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\n-        context.startActivity(intent);\n+    public static void reportUiErrorInSnackbar(final Fragment fragment,\n+                                               final String request,\n+                                               final Throwable throwable) {\n+        reportErrorInSnackbar(fragment, new ErrorInfo(throwable, UserAction.UI_ERROR, request));\n     }\n \n-    private static String getStackTrace(final Throwable throwable) {\n-        final StringWriter sw = new StringWriter();\n-        final PrintWriter pw = new PrintWriter(sw, true);\n-        throwable.printStackTrace(pw);\n-        return sw.getBuffer().toString();\n-    }\n \n-    // errorList to StringList\n-    private static String[] elToSl(final List<Throwable> stackTraces) {\n-        final String[] out = new String[stackTraces.size()];\n-        for (int i = 0; i < stackTraces.size(); i++) {\n-            out[i] = getStackTrace(stackTraces.get(i));\n+    ////////////////////////////////////////////////////////////////////////\n+    // Utils\n+    ////////////////////////////////////////////////////////////////////////\n+\n+    private static void reportErrorInSnackbar(final Context context,\n+                                              @Nullable final View rootView,\n+                                              final ErrorInfo errorInfo) {\n+        if (rootView != null) {\n+            Snackbar.make(rootView, R.string.error_snackbar_message, Snackbar.LENGTH_LONG)\n+                    .setActionTextColor(Color.YELLOW)\n+                    .setAction(context.getString(R.string.error_snackbar_action).toUpperCase(), v ->\n+                            reportError(context, errorInfo)).show();\n+        } else {\n+            reportError(context, errorInfo);\n         }\n-        return out;\n     }\n \n+\n+    ////////////////////////////////////////////////////////////////////////\n+    // Activity lifecycle\n+    ////////////////////////////////////////////////////////////////////////\n+\n     @Override\n     protected void onCreate(final Bundle savedInstanceState) {\n         assureCorrectAppLanguage(this);\n@@ -193,38 +153,28 @@ protected void onCreate(final Bundle savedInstanceState) {\n             actionBar.setDisplayShowTitleEnabled(true);\n         }\n \n-        final ActivityCommunicator ac = ActivityCommunicator.getCommunicator();\n-        returnActivity = ac.getReturnActivity();\n         errorInfo = intent.getParcelableExtra(ERROR_INFO);\n-        errorList = intent.getStringArrayExtra(ERROR_LIST);\n \n         // important add guru meditation\n         addGuruMeditation();\n-        currentTimeStamp = getCurrentTimeStamp();\n+        currentTimeStamp = CURRENT_TIMESTAMP_FORMATTER.format(LocalDateTime.now());\n \n         activityErrorBinding.errorReportEmailButton.setOnClickListener(v ->\n                 openPrivacyPolicyDialog(this, \"EMAIL\"));\n \n-        activityErrorBinding.errorReportCopyButton.setOnClickListener(v -> {\n-                ShareUtils.copyToClipboard(this, buildMarkdown());\n-        });\n+        activityErrorBinding.errorReportCopyButton.setOnClickListener(v ->\n+                ShareUtils.copyToClipboard(this, buildMarkdown()));\n \n         activityErrorBinding.errorReportGitHubButton.setOnClickListener(v ->\n                 openPrivacyPolicyDialog(this, \"GITHUB\"));\n \n         // normal bugreport\n         buildInfo(errorInfo);\n-        if (errorInfo.getMessage() != 0) {\n-            activityErrorBinding.errorMessageView.setText(errorInfo.getMessage());\n-        } else {\n-            activityErrorBinding.errorMessageView.setVisibility(View.GONE);\n-            activityErrorBinding.messageWhatHappenedView.setVisibility(View.GONE);\n-        }\n-\n-        activityErrorBinding.errorView.setText(formErrorText(errorList));\n+        activityErrorBinding.errorMessageView.setText(errorInfo.getMessageStringId());\n+        activityErrorBinding.errorView.setText(formErrorText(errorInfo.getStackTraces()));\n \n         // print stack trace once again for debugging:\n-        for (final String e : errorList) {\n+        for (final String e : errorInfo.getStackTraces()) {\n             Log.e(TAG, e);\n         }\n     }\n@@ -239,15 +189,14 @@ public boolean onCreateOptionsMenu(final Menu menu) {\n     @Override\n     public boolean onOptionsItemSelected(final MenuItem item) {\n         final int id = item.getItemId();\n-        switch (id) {\n-            case android.R.id.home:\n-                goToReturnActivity();\n-                break;\n-            case R.id.menu_item_share_error:\n-                ShareUtils.shareText(this, getString(R.string.error_report_title), buildJson());\n-                break;\n+        if (id == android.R.id.home) {\n+            onBackPressed();\n+        } else if (id == R.id.menu_item_share_error) {\n+            ShareUtils.shareText(this, getString(R.string.error_report_title), buildJson());\n+        } else {\n+            return false;\n         }\n-        return false;\n+        return true;\n     }\n \n     private void openPrivacyPolicyDialog(final Context context, final String action) {\n@@ -264,7 +213,9 @@ private void openPrivacyPolicyDialog(final Context context, final String action)\n                         final Intent i = new Intent(Intent.ACTION_SENDTO)\n                                 .setData(Uri.parse(\"mailto:\")) // only email apps should handle this\n                                 .putExtra(Intent.EXTRA_EMAIL, new String[]{ERROR_EMAIL_ADDRESS})\n-                                .putExtra(Intent.EXTRA_SUBJECT, ERROR_EMAIL_SUBJECT)\n+                                .putExtra(Intent.EXTRA_SUBJECT, ERROR_EMAIL_SUBJECT\n+                                        + getString(R.string.app_name) + \" \"\n+                                        + BuildConfig.VERSION_NAME)\n                                 .putExtra(Intent.EXTRA_TEXT, buildJson());\n                         if (i.resolveActivity(getPackageManager()) != null) {\n                             ShareUtils.openIntentInApp(context, i);\n@@ -310,17 +261,6 @@ private String formErrorText(final String[] el) {\n         return checkedReturnActivity;\n     }\n \n-    private void goToReturnActivity() {\n-        final Class<? extends Activity> checkedReturnActivity = getReturnActivity(returnActivity);\n-        if (checkedReturnActivity == null) {\n-            super.onBackPressed();\n-        } else {\n-            final Intent intent = new Intent(this, checkedReturnActivity);\n-            intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);\n-            NavUtils.navigateUpTo(this, intent);\n-        }\n-    }\n-\n     private void buildInfo(final ErrorInfo info) {\n         String text = \"\";\n \n@@ -355,7 +295,7 @@ private String buildJson() {\n                     .value(\"version\", BuildConfig.VERSION_NAME)\n                     .value(\"os\", getOsString())\n                     .value(\"time\", currentTimeStamp)\n-                    .array(\"exceptions\", Arrays.asList(errorList))\n+                    .array(\"exceptions\", Arrays.asList(errorInfo.getStackTraces()))\n                     .value(\"user_comment\", activityErrorBinding.errorCommentBox.getText()\n                             .toString())\n                     .end()\n@@ -393,27 +333,27 @@ private String buildMarkdown() {\n \n             // Collapse all logs to a single paragraph when there are more than one\n             // to keep the GitHub issue clean.\n-            if (errorList.length > 1) {\n+            if (errorInfo.getStackTraces().length > 1) {\n                 htmlErrorReport\n                         .append(\"<details><summary><b>Exceptions (\")\n-                        .append(errorList.length)\n+                        .append(errorInfo.getStackTraces().length)\n                         .append(\")</b></summary><p>\\n\");\n             }\n \n             // add the logs\n-            for (int i = 0; i < errorList.length; i++) {\n+            for (int i = 0; i < errorInfo.getStackTraces().length; i++) {\n                 htmlErrorReport.append(\"<details><summary><b>Crash log \");\n-                if (errorList.length > 1) {\n+                if (errorInfo.getStackTraces().length > 1) {\n                     htmlErrorReport.append(i + 1);\n                 }\n                 htmlErrorReport.append(\"</b>\")\n                         .append(\"</summary><p>\\n\")\n-                        .append(\"\\n```\\n\").append(errorList[i]).append(\"\\n```\\n\")\n+                        .append(\"\\n```\\n\").append(errorInfo.getStackTraces()[i]).append(\"\\n```\\n\")\n                         .append(\"</details>\\n\");\n             }\n \n             // make sure to close everything\n-            if (errorList.length > 1) {\n+            if (errorInfo.getStackTraces().length > 1) {\n                 htmlErrorReport.append(\"</p></details>\\n\");\n             }\n             htmlErrorReport.append(\"<hr>\\n\");\n@@ -460,17 +400,4 @@ private void addGuruMeditation() {\n         text += \"\\n\" + getString(R.string.guru_meditation);\n         activityErrorBinding.errorSorryView.setText(text);\n     }\n-\n-    @Override\n-    public void onBackPressed() {\n-        //super.onBackPressed();\n-        goToReturnActivity();\n-    }\n-\n-    public String getCurrentTimeStamp() {\n-        final SimpleDateFormat df = new SimpleDateFormat(\"yyyy-MM-dd HH:mm\");\n-        df.setTimeZone(TimeZone.getTimeZone(\"GMT\"));\n-        return df.format(new Date());\n-    }\n-\n }",
    "previous_filename": "app/src/main/java/org/schabi/newpipe/report/ErrorActivity.java"
  },
  {
    "sha": "e1249bc8398feeb2f418cdf28ab7b44f77933557",
    "filename": "app/src/main/java/org/schabi/newpipe/error/ErrorInfo.kt",
    "status": "added",
    "additions": 113,
    "deletions": 0,
    "changes": 113,
    "blob_url": "https://github.com/TiA4f8R/NewPipe/blob/401c5ed4f0707289c0a5f265805810a908ee91ff/app/src/main/java/org/schabi/newpipe/error/ErrorInfo.kt",
    "raw_url": "https://github.com/TiA4f8R/NewPipe/raw/401c5ed4f0707289c0a5f265805810a908ee91ff/app/src/main/java/org/schabi/newpipe/error/ErrorInfo.kt",
    "contents_url": "https://api.github.com/repos/TiA4f8R/NewPipe/contents/app/src/main/java/org/schabi/newpipe/error/ErrorInfo.kt?ref=401c5ed4f0707289c0a5f265805810a908ee91ff",
    "patch": "@@ -0,0 +1,113 @@\n+package org.schabi.newpipe.error\n+\n+import android.os.Parcelable\n+import androidx.annotation.StringRes\n+import kotlinx.android.parcel.Parcelize\n+import org.schabi.newpipe.R\n+import org.schabi.newpipe.extractor.Info\n+import org.schabi.newpipe.extractor.NewPipe\n+import org.schabi.newpipe.extractor.exceptions.ContentNotAvailableException\n+import org.schabi.newpipe.extractor.exceptions.ContentNotSupportedException\n+import org.schabi.newpipe.extractor.exceptions.ExtractionException\n+import org.schabi.newpipe.extractor.services.youtube.extractors.YoutubeStreamExtractor.DeobfuscateException\n+import org.schabi.newpipe.ktx.isNetworkRelated\n+import java.io.PrintWriter\n+import java.io.StringWriter\n+\n+@Parcelize\n+class ErrorInfo(\n+    val stackTraces: Array<String>,\n+    val userAction: UserAction,\n+    val serviceName: String,\n+    val request: String,\n+    val messageStringId: Int,\n+    @Transient // no need to store throwable, all data for report is in other variables\n+    var throwable: Throwable? = null\n+) : Parcelable {\n+\n+    private constructor(\n+        throwable: Throwable,\n+        userAction: UserAction,\n+        serviceName: String,\n+        request: String\n+    ) : this(\n+        throwableToStringList(throwable),\n+        userAction,\n+        serviceName,\n+        request,\n+        getMessageStringId(throwable, userAction),\n+        throwable\n+    )\n+\n+    private constructor(\n+        throwable: List<Throwable>,\n+        userAction: UserAction,\n+        serviceName: String,\n+        request: String\n+    ) : this(\n+        throwableListToStringList(throwable),\n+        userAction,\n+        serviceName,\n+        request,\n+        getMessageStringId(throwable.firstOrNull(), userAction),\n+        throwable.firstOrNull()\n+    )\n+\n+    // constructors with single throwable\n+    constructor(throwable: Throwable, userAction: UserAction, request: String) :\n+        this(throwable, userAction, SERVICE_NONE, request)\n+    constructor(throwable: Throwable, userAction: UserAction, request: String, serviceId: Int) :\n+        this(throwable, userAction, NewPipe.getNameOfService(serviceId), request)\n+    constructor(throwable: Throwable, userAction: UserAction, request: String, info: Info?) :\n+        this(throwable, userAction, getInfoServiceName(info), request)\n+\n+    // constructors with list of throwables\n+    constructor(throwable: List<Throwable>, userAction: UserAction, request: String) :\n+        this(throwable, userAction, SERVICE_NONE, request)\n+    constructor(throwable: List<Throwable>, userAction: UserAction, request: String, serviceId: Int) :\n+        this(throwable, userAction, NewPipe.getNameOfService(serviceId), request)\n+    constructor(throwable: List<Throwable>, userAction: UserAction, request: String, info: Info?) :\n+        this(throwable, userAction, getInfoServiceName(info), request)\n+\n+    companion object {\n+        const val SERVICE_NONE = \"none\"\n+\n+        private fun getStackTrace(throwable: Throwable): String {\n+            StringWriter().use { stringWriter ->\n+                PrintWriter(stringWriter, true).use { printWriter ->\n+                    throwable.printStackTrace(printWriter)\n+                    return stringWriter.buffer.toString()\n+                }\n+            }\n+        }\n+\n+        fun throwableToStringList(throwable: Throwable) = arrayOf(getStackTrace(throwable))\n+\n+        fun throwableListToStringList(throwable: List<Throwable>) =\n+            Array(throwable.size) { i -> getStackTrace(throwable[i]) }\n+\n+        private fun getInfoServiceName(info: Info?) =\n+            if (info == null) SERVICE_NONE else NewPipe.getNameOfService(info.serviceId)\n+\n+        @StringRes\n+        private fun getMessageStringId(\n+            throwable: Throwable?,\n+            action: UserAction\n+        ): Int {\n+            return when {\n+                throwable is ContentNotAvailableException -> R.string.content_not_available\n+                throwable != null && throwable.isNetworkRelated -> R.string.network_error\n+                throwable is ContentNotSupportedException -> R.string.content_not_supported\n+                throwable is DeobfuscateException -> R.string.youtube_signature_deobfuscation_error\n+                throwable is ExtractionException -> R.string.parsing_error\n+                action == UserAction.UI_ERROR -> R.string.app_ui_crash\n+                action == UserAction.REQUESTED_COMMENTS -> R.string.error_unable_to_load_comments\n+                action == UserAction.SUBSCRIPTION_CHANGE -> R.string.subscription_change_failed\n+                action == UserAction.SUBSCRIPTION_UPDATE -> R.string.subscription_update_failed\n+                action == UserAction.LOAD_IMAGE -> R.string.could_not_load_thumbnails\n+                action == UserAction.DOWNLOAD_OPEN_DIALOG -> R.string.could_not_setup_download_menu\n+                else -> R.string.general_error\n+            }\n+        }\n+    }\n+}"
  },
  {
    "sha": "49bcfa92672db3a7736ee9d265de460e4eadc450",
    "filename": "app/src/main/java/org/schabi/newpipe/error/ErrorPanelHelper.kt",
    "status": "added",
    "additions": 132,
    "deletions": 0,
    "changes": 132,
    "blob_url": "https://github.com/TiA4f8R/NewPipe/blob/401c5ed4f0707289c0a5f265805810a908ee91ff/app/src/main/java/org/schabi/newpipe/error/ErrorPanelHelper.kt",
    "raw_url": "https://github.com/TiA4f8R/NewPipe/raw/401c5ed4f0707289c0a5f265805810a908ee91ff/app/src/main/java/org/schabi/newpipe/error/ErrorPanelHelper.kt",
    "contents_url": "https://api.github.com/repos/TiA4f8R/NewPipe/contents/app/src/main/java/org/schabi/newpipe/error/ErrorPanelHelper.kt?ref=401c5ed4f0707289c0a5f265805810a908ee91ff",
    "patch": "@@ -0,0 +1,132 @@\n+package org.schabi.newpipe.error\n+\n+import android.content.Context\n+import android.content.Intent\n+import android.util.Log\n+import android.view.View\n+import android.widget.Button\n+import android.widget.TextView\n+import androidx.core.view.isVisible\n+import androidx.fragment.app.Fragment\n+import com.jakewharton.rxbinding4.view.clicks\n+import io.reactivex.rxjava3.android.schedulers.AndroidSchedulers\n+import io.reactivex.rxjava3.disposables.Disposable\n+import org.schabi.newpipe.MainActivity\n+import org.schabi.newpipe.R\n+import org.schabi.newpipe.extractor.exceptions.AgeRestrictedContentException\n+import org.schabi.newpipe.extractor.exceptions.ContentNotAvailableException\n+import org.schabi.newpipe.extractor.exceptions.ContentNotSupportedException\n+import org.schabi.newpipe.extractor.exceptions.GeographicRestrictionException\n+import org.schabi.newpipe.extractor.exceptions.PaidContentException\n+import org.schabi.newpipe.extractor.exceptions.PrivateContentException\n+import org.schabi.newpipe.extractor.exceptions.ReCaptchaException\n+import org.schabi.newpipe.extractor.exceptions.SoundCloudGoPlusContentException\n+import org.schabi.newpipe.extractor.exceptions.YoutubeMusicPremiumContentException\n+import org.schabi.newpipe.ktx.animate\n+import org.schabi.newpipe.ktx.isInterruptedCaused\n+import org.schabi.newpipe.ktx.isNetworkRelated\n+import java.util.concurrent.TimeUnit\n+\n+class ErrorPanelHelper(\n+    private val fragment: Fragment,\n+    rootView: View,\n+    onRetry: Runnable\n+) {\n+    private val context: Context = rootView.context!!\n+    private val errorPanelRoot: View = rootView.findViewById(R.id.error_panel)\n+    private val errorTextView: TextView = errorPanelRoot.findViewById(R.id.error_message_view)\n+    private val errorButtonAction: Button = errorPanelRoot.findViewById(R.id.error_button_action)\n+    private val errorButtonRetry: Button = errorPanelRoot.findViewById(R.id.error_button_retry)\n+\n+    private var errorDisposable: Disposable? = null\n+\n+    init {\n+        errorDisposable = errorButtonRetry.clicks()\n+            .debounce(300, TimeUnit.MILLISECONDS)\n+            .observeOn(AndroidSchedulers.mainThread())\n+            .subscribe { onRetry.run() }\n+    }\n+\n+    fun showError(errorInfo: ErrorInfo) {\n+\n+        if (errorInfo.throwable != null && errorInfo.throwable!!.isInterruptedCaused) {\n+            if (DEBUG) {\n+                Log.w(TAG, \"onError() isInterruptedCaused! = [$errorInfo.throwable]\")\n+            }\n+            return\n+        }\n+\n+        errorButtonAction.isVisible = true\n+        if (errorInfo.throwable is ReCaptchaException) {\n+            errorButtonAction.setText(R.string.recaptcha_solve)\n+            errorButtonAction.setOnClickListener {\n+                // Starting ReCaptcha Challenge Activity\n+                val intent = Intent(context, ReCaptchaActivity::class.java)\n+                intent.putExtra(\n+                    ReCaptchaActivity.RECAPTCHA_URL_EXTRA,\n+                    (errorInfo.throwable as ReCaptchaException).url\n+                )\n+                fragment.startActivityForResult(intent, ReCaptchaActivity.RECAPTCHA_REQUEST)\n+                errorButtonAction.setOnClickListener(null)\n+            }\n+            errorTextView.setText(R.string.recaptcha_request_toast)\n+            errorButtonRetry.isVisible = true\n+        } else {\n+            errorButtonAction.setText(R.string.error_snackbar_action)\n+            errorButtonAction.setOnClickListener {\n+                ErrorActivity.reportError(context, errorInfo)\n+            }\n+\n+            // hide retry button by default, then show only if not unavailable/unsupported content\n+            errorButtonRetry.isVisible = false\n+            errorTextView.setText(\n+                when (errorInfo.throwable) {\n+                    is AgeRestrictedContentException -> R.string.restricted_video_no_stream\n+                    is GeographicRestrictionException -> R.string.georestricted_content\n+                    is PaidContentException -> R.string.paid_content\n+                    is PrivateContentException -> R.string.private_content\n+                    is SoundCloudGoPlusContentException -> R.string.soundcloud_go_plus_content\n+                    is YoutubeMusicPremiumContentException -> R.string.youtube_music_premium_content\n+                    is ContentNotAvailableException -> R.string.content_not_available\n+                    is ContentNotSupportedException -> R.string.content_not_supported\n+                    else -> {\n+                        // show retry button only for content which is not unavailable or unsupported\n+                        errorButtonRetry.isVisible = true\n+                        if (errorInfo.throwable != null && errorInfo.throwable!!.isNetworkRelated) {\n+                            R.string.network_error\n+                        } else {\n+                            R.string.error_snackbar_message\n+                        }\n+                    }\n+                }\n+            )\n+        }\n+        errorPanelRoot.animate(true, 300)\n+    }\n+\n+    fun showTextError(errorString: String) {\n+        errorButtonAction.isVisible = false\n+        errorButtonRetry.isVisible = false\n+        errorTextView.text = errorString\n+    }\n+\n+    fun hide() {\n+        errorButtonAction.setOnClickListener(null)\n+        errorPanelRoot.animate(false, 150)\n+    }\n+\n+    fun isVisible(): Boolean {\n+        return errorPanelRoot.isVisible\n+    }\n+\n+    fun dispose() {\n+        errorButtonAction.setOnClickListener(null)\n+        errorButtonRetry.setOnClickListener(null)\n+        errorDisposable?.dispose()\n+    }\n+\n+    companion object {\n+        val TAG: String = ErrorPanelHelper::class.simpleName!!\n+        val DEBUG: Boolean = MainActivity.DEBUG\n+    }\n+}"
  },
  {
    "sha": "23df7ed95b6881237e13b0ef7033c1fe5c35054f",
    "filename": "app/src/main/java/org/schabi/newpipe/error/ReCaptchaActivity.java",
    "status": "renamed",
    "additions": 4,
    "deletions": 1,
    "changes": 5,
    "blob_url": "https://github.com/TiA4f8R/NewPipe/blob/401c5ed4f0707289c0a5f265805810a908ee91ff/app/src/main/java/org/schabi/newpipe/error/ReCaptchaActivity.java",
    "raw_url": "https://github.com/TiA4f8R/NewPipe/raw/401c5ed4f0707289c0a5f265805810a908ee91ff/app/src/main/java/org/schabi/newpipe/error/ReCaptchaActivity.java",
    "contents_url": "https://api.github.com/repos/TiA4f8R/NewPipe/contents/app/src/main/java/org/schabi/newpipe/error/ReCaptchaActivity.java?ref=401c5ed4f0707289c0a5f265805810a908ee91ff",
    "patch": "@@ -1,4 +1,4 @@\n-package org.schabi.newpipe;\n+package org.schabi.newpipe.error;\n \n import android.content.Intent;\n import android.content.SharedPreferences;\n@@ -20,6 +20,9 @@\n import androidx.webkit.WebViewClientCompat;\n \n import org.schabi.newpipe.databinding.ActivityRecaptchaBinding;\n+import org.schabi.newpipe.DownloaderImpl;\n+import org.schabi.newpipe.MainActivity;\n+import org.schabi.newpipe.R;\n import org.schabi.newpipe.util.ThemeHelper;\n \n import java.io.UnsupportedEncodingException;",
    "previous_filename": "app/src/main/java/org/schabi/newpipe/ReCaptchaActivity.java"
  },
  {
    "sha": "e8dec9556b2197fbcc06a13f1cd95e0374379ff8",
    "filename": "app/src/main/java/org/schabi/newpipe/error/UserAction.java",
    "status": "renamed",
    "additions": 12,
    "deletions": 5,
    "changes": 17,
    "blob_url": "https://github.com/TiA4f8R/NewPipe/blob/401c5ed4f0707289c0a5f265805810a908ee91ff/app/src/main/java/org/schabi/newpipe/error/UserAction.java",
    "raw_url": "https://github.com/TiA4f8R/NewPipe/raw/401c5ed4f0707289c0a5f265805810a908ee91ff/app/src/main/java/org/schabi/newpipe/error/UserAction.java",
    "contents_url": "https://api.github.com/repos/TiA4f8R/NewPipe/contents/app/src/main/java/org/schabi/newpipe/error/UserAction.java?ref=401c5ed4f0707289c0a5f265805810a908ee91ff",
    "patch": "@@ -1,14 +1,17 @@\n-package org.schabi.newpipe.report;\n+package org.schabi.newpipe.error;\n \n /**\n  * The user actions that can cause an error.\n  */\n public enum UserAction {\n     USER_REPORT(\"user report\"),\n     UI_ERROR(\"ui error\"),\n-    SUBSCRIPTION(\"subscription\"),\n+    SUBSCRIPTION_CHANGE(\"subscription change\"),\n+    SUBSCRIPTION_UPDATE(\"subscription update\"),\n+    SUBSCRIPTION_GET(\"get subscription\"),\n+    SUBSCRIPTION_IMPORT_EXPORT(\"subscription import or export\"),\n     LOAD_IMAGE(\"load image\"),\n-    SOMETHING_ELSE(\"something\"),\n+    SOMETHING_ELSE(\"something else\"),\n     SEARCHED(\"searched\"),\n     GET_SUGGESTIONS(\"get suggestions\"),\n     REQUESTED_STREAM(\"requested stream\"),\n@@ -17,11 +20,15 @@\n     REQUESTED_KIOSK(\"requested kiosk\"),\n     REQUESTED_COMMENTS(\"requested comments\"),\n     REQUESTED_FEED(\"requested feed\"),\n+    REQUESTED_BOOKMARK(\"bookmark\"),\n     DELETE_FROM_HISTORY(\"delete from history\"),\n-    PLAY_STREAM(\"Play stream\"),\n+    PLAY_STREAM(\"play stream\"),\n+    DOWNLOAD_OPEN_DIALOG(\"download open dialog\"),\n     DOWNLOAD_POSTPROCESSING(\"download post-processing\"),\n     DOWNLOAD_FAILED(\"download failed\"),\n-    PREFERENCES_MIGRATION(\"migration of preferences\");\n+    PREFERENCES_MIGRATION(\"migration of preferences\"),\n+    SHARE_TO_NEWPIPE(\"share to newpipe\"),\n+    CHECK_FOR_NEW_APP_VERSION(\"check for new app version\");\n \n \n     private final String message;",
    "previous_filename": "app/src/main/java/org/schabi/newpipe/report/UserAction.java"
  },
  {
    "sha": "0de3ea0123056cbc6442870d634d7f073ed664cd",
    "filename": "app/src/main/java/org/schabi/newpipe/fragments/BaseStateFragment.java",
    "status": "modified",
    "additions": 55,
    "deletions": 177,
    "changes": 232,
    "blob_url": "https://github.com/TiA4f8R/NewPipe/blob/401c5ed4f0707289c0a5f265805810a908ee91ff/app/src/main/java/org/schabi/newpipe/fragments/BaseStateFragment.java",
    "raw_url": "https://github.com/TiA4f8R/NewPipe/raw/401c5ed4f0707289c0a5f265805810a908ee91ff/app/src/main/java/org/schabi/newpipe/fragments/BaseStateFragment.java",
    "contents_url": "https://api.github.com/repos/TiA4f8R/NewPipe/contents/app/src/main/java/org/schabi/newpipe/fragments/BaseStateFragment.java?ref=401c5ed4f0707289c0a5f265805810a908ee91ff",
    "patch": "@@ -1,48 +1,23 @@\n package org.schabi.newpipe.fragments;\n \n-import android.content.Context;\n-import android.content.Intent;\n import android.os.Bundle;\n import android.util.Log;\n import android.view.View;\n-import android.widget.Button;\n import android.widget.ProgressBar;\n-import android.widget.TextView;\n-import android.widget.Toast;\n \n import androidx.annotation.NonNull;\n import androidx.annotation.Nullable;\n-import androidx.annotation.StringRes;\n-\n-import com.jakewharton.rxbinding4.view.RxView;\n \n import org.schabi.newpipe.BaseFragment;\n-import org.schabi.newpipe.MainActivity;\n import org.schabi.newpipe.R;\n-import org.schabi.newpipe.ReCaptchaActivity;\n-import org.schabi.newpipe.extractor.exceptions.AgeRestrictedContentException;\n-import org.schabi.newpipe.extractor.exceptions.ContentNotAvailableException;\n-import org.schabi.newpipe.extractor.exceptions.ContentNotSupportedException;\n-import org.schabi.newpipe.extractor.exceptions.GeographicRestrictionException;\n-import org.schabi.newpipe.extractor.exceptions.PaidContentException;\n-import org.schabi.newpipe.extractor.exceptions.PrivateContentException;\n-import org.schabi.newpipe.extractor.exceptions.ReCaptchaException;\n-import org.schabi.newpipe.extractor.exceptions.SoundCloudGoPlusContentException;\n-import org.schabi.newpipe.extractor.exceptions.YoutubeMusicPremiumContentException;\n-import org.schabi.newpipe.ktx.ExceptionUtils;\n-import org.schabi.newpipe.report.ErrorActivity;\n-import org.schabi.newpipe.report.ErrorInfo;\n-import org.schabi.newpipe.report.UserAction;\n+import org.schabi.newpipe.error.ErrorActivity;\n+import org.schabi.newpipe.error.ErrorInfo;\n+import org.schabi.newpipe.error.ErrorPanelHelper;\n import org.schabi.newpipe.util.InfoCache;\n \n-import java.util.Collections;\n-import java.util.List;\n-import java.util.concurrent.TimeUnit;\n import java.util.concurrent.atomic.AtomicBoolean;\n \n import icepick.State;\n-import io.reactivex.rxjava3.android.schedulers.AndroidSchedulers;\n-import io.reactivex.rxjava3.disposables.Disposable;\n \n import static org.schabi.newpipe.ktx.ViewUtils.animate;\n \n@@ -56,11 +31,10 @@\n     @Nullable\n     private ProgressBar loadingProgressBar;\n \n-    private Disposable errorDisposable;\n-\n-    protected View errorPanelRoot;\n-    private Button errorButtonRetry;\n-    private TextView errorTextView;\n+    private ErrorPanelHelper errorPanelHelper;\n+    @Nullable\n+    @State\n+    protected ErrorInfo lastPanelError = null;\n \n     @Override\n     public void onViewCreated(@NonNull final View rootView, final Bundle savedInstanceState) {\n@@ -74,12 +48,18 @@ public void onPause() {\n         wasLoading.set(isLoading.get());\n     }\n \n+    @Override\n+    public void onResume() {\n+        super.onResume();\n+        if (lastPanelError != null) {\n+            showError(lastPanelError);\n+        }\n+    }\n+\n     @Override\n     public void onDestroy() {\n         super.onDestroy();\n-        if (errorDisposable != null) {\n-            errorDisposable.dispose();\n-        }\n+        errorPanelHelper.dispose();\n     }\n \n     /*//////////////////////////////////////////////////////////////////////////\n@@ -89,22 +69,9 @@ public void onDestroy() {\n     @Override\n     protected void initViews(final View rootView, final Bundle savedInstanceState) {\n         super.initViews(rootView, savedInstanceState);\n-\n         emptyStateView = rootView.findViewById(R.id.empty_state_view);\n         loadingProgressBar = rootView.findViewById(R.id.loading_progress_bar);\n-\n-        errorPanelRoot = rootView.findViewById(R.id.error_panel);\n-        errorButtonRetry = rootView.findViewById(R.id.error_button_retry);\n-        errorTextView = rootView.findViewById(R.id.error_message_view);\n-    }\n-\n-    @Override\n-    protected void initListeners() {\n-        super.initListeners();\n-        errorDisposable = RxView.clicks(errorButtonRetry)\n-                .debounce(300, TimeUnit.MILLISECONDS)\n-                .observeOn(AndroidSchedulers.mainThread())\n-                .subscribe(o -> onRetryButtonClicked());\n+        errorPanelHelper = new ErrorPanelHelper(this, rootView, this::onRetryButtonClicked);\n     }\n \n     protected void onRetryButtonClicked() {\n@@ -143,7 +110,7 @@ public void showLoading() {\n         if (loadingProgressBar != null) {\n             animate(loadingProgressBar, true, 400);\n         }\n-        animate(errorPanelRoot, false, 150);\n+        hideErrorPanel();\n     }\n \n     @Override\n@@ -154,10 +121,9 @@ public void hideLoading() {\n         if (loadingProgressBar != null) {\n             animate(loadingProgressBar, false, 0);\n         }\n-        animate(errorPanelRoot, false, 150);\n+        hideErrorPanel();\n     }\n \n-    @Override\n     public void showEmptyState() {\n         isLoading.set(false);\n         if (emptyStateView != null) {\n@@ -166,168 +132,80 @@ public void showEmptyState() {\n         if (loadingProgressBar != null) {\n             animate(loadingProgressBar, false, 0);\n         }\n-        animate(errorPanelRoot, false, 150);\n+        hideErrorPanel();\n     }\n \n     @Override\n-    public void showError(final String message, final boolean showRetryButton) {\n+    public void handleResult(final I result) {\n         if (DEBUG) {\n-            Log.d(TAG, \"showError() called with: \"\n-                    + \"message = [\" + message + \"], showRetryButton = [\" + showRetryButton + \"]\");\n+            Log.d(TAG, \"handleResult() called with: result = [\" + result + \"]\");\n         }\n-        isLoading.set(false);\n-        InfoCache.getInstance().clearCache();\n         hideLoading();\n-\n-        errorTextView.setText(message);\n-        if (showRetryButton) {\n-            animate(errorButtonRetry, true, 600);\n-        } else {\n-            animate(errorButtonRetry, false, 0);\n-        }\n-        animate(errorPanelRoot, true, 300);\n     }\n \n     @Override\n-    public void handleResult(final I result) {\n-        if (DEBUG) {\n-            Log.d(TAG, \"handleResult() called with: result = [\" + result + \"]\");\n+    public void handleError() {\n+        isLoading.set(false);\n+        InfoCache.getInstance().clearCache();\n+        if (emptyStateView != null) {\n+            animate(emptyStateView, false, 150);\n+        }\n+        if (loadingProgressBar != null) {\n+            animate(loadingProgressBar, false, 0);\n         }\n-        hideLoading();\n     }\n \n     /*//////////////////////////////////////////////////////////////////////////\n     // Error handling\n     //////////////////////////////////////////////////////////////////////////*/\n \n-    /**\n-     * Default implementation handles some general exceptions.\n-     *\n-     * @param exception The exception that should be handled\n-     * @return If the exception was handled\n-     */\n-    protected boolean onError(final Throwable exception) {\n-        if (DEBUG) {\n-            Log.d(TAG, \"onError() called with: exception = [\" + exception + \"]\");\n-        }\n-        isLoading.set(false);\n+    public final void showError(final ErrorInfo errorInfo) {\n+        handleError();\n \n         if (isDetached() || isRemoving()) {\n             if (DEBUG) {\n-                Log.w(TAG, \"onError() is detached or removing = [\" + exception + \"]\");\n+                Log.w(TAG, \"showError() is detached or removing = [\" + errorInfo + \"]\");\n             }\n-            return true;\n-        }\n-\n-        if (ExceptionUtils.isInterruptedCaused(exception)) {\n-            if (DEBUG) {\n-                Log.w(TAG, \"onError() isInterruptedCaused! = [\" + exception + \"]\");\n-            }\n-            return true;\n-        }\n-\n-        if (exception instanceof ReCaptchaException) {\n-            onReCaptchaException((ReCaptchaException) exception);\n-            return true;\n-        } else if (ExceptionUtils.isNetworkRelated(exception)) {\n-            showError(getString(R.string.network_error), true);\n-            return true;\n-        } else if (exception instanceof AgeRestrictedContentException) {\n-            showError(getString(R.string.restricted_video_no_stream), false);\n-            return true;\n-        } else if (exception instanceof GeographicRestrictionException) {\n-            showError(getString(R.string.georestricted_content), false);\n-            return true;\n-        } else if (exception instanceof PaidContentException) {\n-            showError(getString(R.string.paid_content), false);\n-            return true;\n-        } else if (exception instanceof PrivateContentException) {\n-            showError(getString(R.string.private_content), false);\n-            return true;\n-        } else if (exception instanceof SoundCloudGoPlusContentException) {\n-            showError(getString(R.string.soundcloud_go_plus_content), false);\n-            return true;\n-        } else if (exception instanceof YoutubeMusicPremiumContentException) {\n-            showError(getString(R.string.youtube_music_premium_content), false);\n-            return true;\n-        } else if (exception instanceof ContentNotAvailableException) {\n-            showError(getString(R.string.content_not_available), false);\n-            return true;\n-        } else if (exception instanceof ContentNotSupportedException) {\n-            showError(getString(R.string.content_not_supported), false);\n-            return true;\n+            return;\n         }\n \n-        return false;\n+        errorPanelHelper.showError(errorInfo);\n+        lastPanelError = errorInfo;\n     }\n \n-    public void onReCaptchaException(final ReCaptchaException exception) {\n-        if (DEBUG) {\n-            Log.d(TAG, \"onReCaptchaException() called\");\n+    public final void showTextError(@NonNull final String errorString) {\n+        handleError();\n+\n+        if (isDetached() || isRemoving()) {\n+            if (DEBUG) {\n+                Log.w(TAG, \"showTextError() is detached or removing = [\" + errorString + \"]\");\n+            }\n+            return;\n         }\n-        Toast.makeText(activity, R.string.recaptcha_request_toast, Toast.LENGTH_LONG).show();\n-        // Starting ReCaptcha Challenge Activity\n-        final Intent intent = new Intent(activity, ReCaptchaActivity.class);\n-        intent.putExtra(ReCaptchaActivity.RECAPTCHA_URL_EXTRA, exception.getUrl());\n-        startActivityForResult(intent, ReCaptchaActivity.RECAPTCHA_REQUEST);\n \n-        showError(getString(R.string.recaptcha_request_toast), false);\n+        errorPanelHelper.showTextError(errorString);\n     }\n \n-    public void onUnrecoverableError(final Throwable exception, final UserAction userAction,\n-                                     final String serviceName, final String request,\n-                                     @StringRes final int errorId) {\n-        onUnrecoverableError(Collections.singletonList(exception), userAction, serviceName,\n-                request, errorId);\n+    public final void hideErrorPanel() {\n+        errorPanelHelper.hide();\n+        lastPanelError = null;\n     }\n \n-    public void onUnrecoverableError(final List<Throwable> exception, final UserAction userAction,\n-                                     final String serviceName, final String request,\n-                                     @StringRes final int errorId) {\n-        if (DEBUG) {\n-            Log.d(TAG, \"onUnrecoverableError() called with: exception = [\" + exception + \"]\");\n-        }\n-\n-        ErrorActivity.reportError(getContext(), exception, MainActivity.class, null,\n-                ErrorInfo.make(userAction, serviceName == null ? \"none\" : serviceName,\n-                        request == null ? \"none\" : request, errorId));\n-    }\n-\n-    public void showSnackBarError(final Throwable exception, final UserAction userAction,\n-                                  final String serviceName, final String request,\n-                                  @StringRes final int errorId) {\n-        showSnackBarError(Collections.singletonList(exception), userAction, serviceName, request,\n-                errorId);\n+    public final boolean isErrorPanelVisible() {\n+        return errorPanelHelper.isVisible();\n     }\n \n     /**\n      * Show a SnackBar and only call\n-     * {@link ErrorActivity#reportError(Context, List, Class, View, ErrorInfo)}\n+     * {@link ErrorActivity#reportErrorInSnackbar(androidx.fragment.app.Fragment, ErrorInfo)}\n      * IF we a find a valid view (otherwise the error screen appears).\n      *\n-     * @param exception List of the exceptions to show\n-     * @param userAction The user action that caused the exception\n-     * @param serviceName The service where the exception happened\n-     * @param request The page that was requested\n-     * @param errorId The ID of the error\n+     * @param errorInfo The error information\n      */\n-    public void showSnackBarError(final List<Throwable> exception, final UserAction userAction,\n-                                  final String serviceName, final String request,\n-                                  @StringRes final int errorId) {\n+    public void showSnackBarError(final ErrorInfo errorInfo) {\n         if (DEBUG) {\n-            Log.d(TAG, \"showSnackBarError() called with: \"\n-                    + \"exception = [\" + exception + \"], userAction = [\" + userAction + \"], \"\n-                    + \"request = [\" + request + \"], errorId = [\" + errorId + \"]\");\n-        }\n-        View rootView = activity != null ? activity.findViewById(android.R.id.content) : null;\n-        if (rootView == null && getView() != null) {\n-            rootView = getView();\n+            Log.d(TAG, \"showSnackBarError() called with: errorInfo = [\" + errorInfo + \"]\");\n         }\n-        if (rootView == null) {\n-            return;\n-        }\n-\n-        ErrorActivity.reportError(getContext(), exception, MainActivity.class, rootView,\n-                ErrorInfo.make(userAction, serviceName, request, errorId));\n+        ErrorActivity.reportErrorInSnackbar(this, errorInfo);\n     }\n }"
  },
  {
    "sha": "fbf2711bcc489c649ddf474eccad235fae6d4463",
    "filename": "app/src/main/java/org/schabi/newpipe/fragments/EmptyFragment.java",
    "status": "modified",
    "additions": 10,
    "deletions": 1,
    "changes": 11,
    "blob_url": "https://github.com/TiA4f8R/NewPipe/blob/401c5ed4f0707289c0a5f265805810a908ee91ff/app/src/main/java/org/schabi/newpipe/fragments/EmptyFragment.java",
    "raw_url": "https://github.com/TiA4f8R/NewPipe/raw/401c5ed4f0707289c0a5f265805810a908ee91ff/app/src/main/java/org/schabi/newpipe/fragments/EmptyFragment.java",
    "contents_url": "https://api.github.com/repos/TiA4f8R/NewPipe/contents/app/src/main/java/org/schabi/newpipe/fragments/EmptyFragment.java?ref=401c5ed4f0707289c0a5f265805810a908ee91ff",
    "patch": "@@ -11,9 +11,18 @@\n import org.schabi.newpipe.R;\n \n public class EmptyFragment extends BaseFragment {\n+    final boolean showMessage;\n+\n+    public EmptyFragment(final boolean showMessage) {\n+        this.showMessage = showMessage;\n+    }\n+\n     @Override\n     public View onCreateView(final LayoutInflater inflater, @Nullable final ViewGroup container,\n                              final Bundle savedInstanceState) {\n-        return inflater.inflate(R.layout.fragment_empty, container, false);\n+        final View view = inflater.inflate(R.layout.fragment_empty, container, false);\n+        view.findViewById(R.id.empty_state_view).setVisibility(\n+                showMessage ? View.VISIBLE : View.GONE);\n+        return view;\n     }\n }"
  },
  {
    "sha": "5fb68ba305c1d468ab4eb6e3ae99dac25fb4cfa3",
    "filename": "app/src/main/java/org/schabi/newpipe/fragments/MainFragment.java",
    "status": "modified",
    "additions": 13,
    "deletions": 17,
    "changes": 30,
    "blob_url": "https://github.com/TiA4f8R/NewPipe/blob/401c5ed4f0707289c0a5f265805810a908ee91ff/app/src/main/java/org/schabi/newpipe/fragments/MainFragment.java",
    "raw_url": "https://github.com/TiA4f8R/NewPipe/raw/401c5ed4f0707289c0a5f265805810a908ee91ff/app/src/main/java/org/schabi/newpipe/fragments/MainFragment.java",
    "contents_url": "https://api.github.com/repos/TiA4f8R/NewPipe/contents/app/src/main/java/org/schabi/newpipe/fragments/MainFragment.java?ref=401c5ed4f0707289c0a5f265805810a908ee91ff",
    "patch": "@@ -14,7 +14,6 @@\n import androidx.annotation.NonNull;\n import androidx.annotation.Nullable;\n import androidx.appcompat.app.ActionBar;\n-import androidx.appcompat.app.AppCompatActivity;\n import androidx.fragment.app.Fragment;\n import androidx.fragment.app.FragmentManager;\n import androidx.fragment.app.FragmentStatePagerAdapterMenuWorkaround;\n@@ -25,10 +24,8 @@\n import org.schabi.newpipe.BaseFragment;\n import org.schabi.newpipe.R;\n import org.schabi.newpipe.databinding.FragmentMainBinding;\n+import org.schabi.newpipe.error.ErrorActivity;\n import org.schabi.newpipe.extractor.exceptions.ExtractionException;\n-import org.schabi.newpipe.report.ErrorActivity;\n-import org.schabi.newpipe.report.ErrorInfo;\n-import org.schabi.newpipe.report.UserAction;\n import org.schabi.newpipe.settings.tabs.Tab;\n import org.schabi.newpipe.settings.tabs.TabsManager;\n import org.schabi.newpipe.util.NavigationHelper;\n@@ -128,7 +125,8 @@ public void onDestroy() {\n     //////////////////////////////////////////////////////////////////////////*/\n \n     @Override\n-    public void onCreateOptionsMenu(final Menu menu, final MenuInflater inflater) {\n+    public void onCreateOptionsMenu(@NonNull final Menu menu,\n+                                    @NonNull final MenuInflater inflater) {\n         super.onCreateOptionsMenu(menu, inflater);\n         if (DEBUG) {\n             Log.d(TAG, \"onCreateOptionsMenu() called with: \"\n@@ -144,15 +142,14 @@ public void onCreateOptionsMenu(final Menu menu, final MenuInflater inflater) {\n \n     @Override\n     public boolean onOptionsItemSelected(final MenuItem item) {\n-        switch (item.getItemId()) {\n-            case R.id.action_search:\n-                try {\n-                    NavigationHelper.openSearchFragment(getFM(),\n-                            ServiceHelper.getSelectedServiceId(activity), \"\");\n-                } catch (final Exception e) {\n-                    ErrorActivity.reportUiError((AppCompatActivity) getActivity(), e);\n-                }\n-                return true;\n+        if (item.getItemId() == R.id.action_search) {\n+            try {\n+                NavigationHelper.openSearchFragment(getFM(),\n+                        ServiceHelper.getSelectedServiceId(activity), \"\");\n+            } catch (final Exception e) {\n+                ErrorActivity.reportUiErrorInSnackbar(this, \"Opening search fragment\", e);\n+            }\n+            return true;\n         }\n         return super.onOptionsItemSelected(item);\n     }\n@@ -241,8 +238,7 @@ public Fragment getItem(final int position) {\n             }\n \n             if (throwable != null) {\n-                ErrorActivity.reportError(context, throwable, null, null, ErrorInfo\n-                        .make(UserAction.UI_ERROR, \"none\", \"\", R.string.app_ui_crash));\n+                ErrorActivity.reportUiErrorInSnackbar(context, \"Getting fragment item\", throwable);\n                 return new BlankFragment();\n             }\n \n@@ -254,7 +250,7 @@ public Fragment getItem(final int position) {\n         }\n \n         @Override\n-        public int getItemPosition(final Object object) {\n+        public int getItemPosition(@NonNull final Object object) {\n             // Causes adapter to reload all Fragments when\n             // notifyDataSetChanged is called\n             return POSITION_NONE;"
  },
  {
    "sha": "78f644ffbe85ce7e8942783077b2727a6472afbe",
    "filename": "app/src/main/java/org/schabi/newpipe/fragments/ViewContract.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/TiA4f8R/NewPipe/blob/401c5ed4f0707289c0a5f265805810a908ee91ff/app/src/main/java/org/schabi/newpipe/fragments/ViewContract.java",
    "raw_url": "https://github.com/TiA4f8R/NewPipe/raw/401c5ed4f0707289c0a5f265805810a908ee91ff/app/src/main/java/org/schabi/newpipe/fragments/ViewContract.java",
    "contents_url": "https://api.github.com/repos/TiA4f8R/NewPipe/contents/app/src/main/java/org/schabi/newpipe/fragments/ViewContract.java?ref=401c5ed4f0707289c0a5f265805810a908ee91ff",
    "patch": "@@ -7,7 +7,7 @@\n \n     void showEmptyState();\n \n-    void showError(String message, boolean showRetryButton);\n-\n     void handleResult(I result);\n+\n+    void handleError();\n }"
  },
  {
    "sha": "08ec9a5fc8b221c74350c0f35705d8379928eb79",
    "filename": "app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java",
    "status": "modified",
    "additions": 32,
    "deletions": 58,
    "changes": 90,
    "blob_url": "https://github.com/TiA4f8R/NewPipe/blob/401c5ed4f0707289c0a5f265805810a908ee91ff/app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java",
    "raw_url": "https://github.com/TiA4f8R/NewPipe/raw/401c5ed4f0707289c0a5f265805810a908ee91ff/app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java",
    "contents_url": "https://api.github.com/repos/TiA4f8R/NewPipe/contents/app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java?ref=401c5ed4f0707289c0a5f265805810a908ee91ff",
    "patch": "@@ -37,12 +37,10 @@\n import androidx.annotation.Nullable;\n import androidx.annotation.StringRes;\n import androidx.appcompat.app.AlertDialog;\n-import androidx.appcompat.app.AppCompatActivity;\n import androidx.appcompat.content.res.AppCompatResources;\n import androidx.appcompat.widget.Toolbar;\n import androidx.coordinatorlayout.widget.CoordinatorLayout;\n import androidx.core.content.ContextCompat;\n-import androidx.fragment.app.Fragment;\n import androidx.preference.PreferenceManager;\n \n import com.google.android.exoplayer2.ExoPlaybackException;\n@@ -56,21 +54,23 @@\n \n import org.schabi.newpipe.App;\n import org.schabi.newpipe.R;\n-import org.schabi.newpipe.ReCaptchaActivity;\n import org.schabi.newpipe.databinding.FragmentVideoDetailBinding;\n import org.schabi.newpipe.download.DownloadDialog;\n+import org.schabi.newpipe.error.ErrorActivity;\n+import org.schabi.newpipe.error.ErrorInfo;\n+import org.schabi.newpipe.error.ReCaptchaActivity;\n+import org.schabi.newpipe.error.UserAction;\n import org.schabi.newpipe.extractor.InfoItem;\n import org.schabi.newpipe.extractor.NewPipe;\n-import org.schabi.newpipe.extractor.ServiceList;\n import org.schabi.newpipe.extractor.exceptions.ExtractionException;\n-import org.schabi.newpipe.extractor.services.youtube.extractors.YoutubeStreamExtractor;\n import org.schabi.newpipe.extractor.stream.AudioStream;\n import org.schabi.newpipe.extractor.stream.Stream;\n import org.schabi.newpipe.extractor.stream.StreamInfo;\n import org.schabi.newpipe.extractor.stream.StreamType;\n import org.schabi.newpipe.extractor.stream.VideoStream;\n import org.schabi.newpipe.fragments.BackPressable;\n import org.schabi.newpipe.fragments.BaseStateFragment;\n+import org.schabi.newpipe.fragments.EmptyFragment;\n import org.schabi.newpipe.fragments.list.comments.CommentsFragment;\n import org.schabi.newpipe.fragments.list.videos.RelatedVideosFragment;\n import org.schabi.newpipe.ktx.AnimationType;\n@@ -86,9 +86,6 @@\n import org.schabi.newpipe.player.playqueue.PlayQueue;\n import org.schabi.newpipe.player.playqueue.PlayQueueItem;\n import org.schabi.newpipe.player.playqueue.SinglePlayQueue;\n-import org.schabi.newpipe.report.ErrorActivity;\n-import org.schabi.newpipe.report.ErrorInfo;\n-import org.schabi.newpipe.report.UserAction;\n import org.schabi.newpipe.util.Constants;\n import org.schabi.newpipe.util.DeviceUtils;\n import org.schabi.newpipe.util.ExtractorHelper;\n@@ -151,6 +148,7 @@\n     private static final String COMMENTS_TAB_TAG = \"COMMENTS\";\n     private static final String RELATED_TAB_TAG = \"NEXT VIDEO\";\n     private static final String DESCRIPTION_TAB_TAG = \"DESCRIPTION TAB\";\n+    private static final String EMPTY_TAB_TAG = \"EMPTY TAB\";\n \n     // tabs\n     private boolean showComments;\n@@ -526,7 +524,7 @@ private void openChannel(final String subChannelUrl, final String subChannelName\n             NavigationHelper.openChannelFragment(getFM(), currentInfo.getServiceId(),\n                     subChannelUrl, subChannelName);\n         } catch (final Exception e) {\n-            ErrorActivity.reportUiError((AppCompatActivity) getActivity(), e);\n+            ErrorActivity.reportUiErrorInSnackbar(this, \"Opening channel fragment\", e);\n         }\n     }\n \n@@ -684,13 +682,12 @@ private void initThumbnailViews(@NonNull final StreamInfo info) {\n         binding.detailThumbnailImageView.setImageResource(R.drawable.dummy_thumbnail_dark);\n \n         if (!isEmpty(info.getThumbnailUrl())) {\n-            final String infoServiceName = NewPipe.getNameOfService(info.getServiceId());\n             final ImageLoadingListener onFailListener = new SimpleImageLoadingListener() {\n                 @Override\n                 public void onLoadingFailed(final String imageUri, final View view,\n                                             final FailReason failReason) {\n-                    showSnackBarError(failReason.getCause(), UserAction.LOAD_IMAGE,\n-                            infoServiceName, imageUri, R.string.could_not_load_thumbnails);\n+                    showSnackBarError(new ErrorInfo(failReason.getCause(), UserAction.LOAD_IMAGE,\n+                            imageUri, info));\n                 }\n             };\n \n@@ -906,10 +903,8 @@ private void runWorker(final boolean forceLoad, final boolean addToBackStack) {\n                             openVideoPlayer();\n                         }\n                     }\n-                }, throwable -> {\n-                    isLoading.set(false);\n-                    onError(throwable);\n-                });\n+                }, throwable -> showError(new ErrorInfo(throwable, UserAction.REQUESTED_STREAM,\n+                        url == null ? \"no url\" : url, serviceId)));\n     }\n \n     /*//////////////////////////////////////////////////////////////////////////\n@@ -932,18 +927,22 @@ private void initTabs() {\n         }\n \n         if (showRelatedStreams && binding.relatedStreamsLayout == null) {\n-            //temp empty fragment. will be updated in handleResult\n-            pageAdapter.addFragment(new Fragment(), RELATED_TAB_TAG);\n+            // temp empty fragment. will be updated in handleResult\n+            pageAdapter.addFragment(new EmptyFragment(false), RELATED_TAB_TAG);\n             tabIcons.add(R.drawable.ic_art_track_white_24dp);\n             tabContentDescriptions.add(R.string.related_streams_tab_description);\n         }\n \n         if (showDescription) {\n             // temp empty fragment. will be updated in handleResult\n-            pageAdapter.addFragment(new Fragment(), DESCRIPTION_TAB_TAG);\n+            pageAdapter.addFragment(new EmptyFragment(false), DESCRIPTION_TAB_TAG);\n             tabIcons.add(R.drawable.ic_description_white_24dp);\n             tabContentDescriptions.add(R.string.description_tab_description);\n         }\n+\n+        if (pageAdapter.getCount() == 0) {\n+            pageAdapter.addFragment(new EmptyFragment(true), EMPTY_TAB_TAG);\n+        }\n         pageAdapter.notifyDataSetUpdate();\n \n         if (pageAdapter.getCount() >= 2) {\n@@ -1327,8 +1326,8 @@ private void setErrorImage(final int imageResource) {\n     }\n \n     @Override\n-    public void showError(final String message, final boolean showRetryButton) {\n-        super.showError(message, showRetryButton);\n+    public void handleError() {\n+        super.handleError();\n         setErrorImage(R.drawable.not_available_monkey);\n \n         if (binding.relatedStreamsLayout != null) { // hide related streams for tablets\n@@ -1341,8 +1340,8 @@ public void showError(final String message, final boolean showRetryButton) {\n     }\n \n     private void hideAgeRestrictedContent() {\n-        showError(getString(R.string.restricted_video,\n-                getString(R.string.show_age_restricted_content_title)), false);\n+        showTextError(getString(R.string.restricted_video,\n+                getString(R.string.show_age_restricted_content_title)));\n     }\n \n     private void setupBroadcastReceiver() {\n@@ -1548,11 +1547,8 @@ public void handleResult(@NonNull final StreamInfo info) {\n         }\n \n         if (!info.getErrors().isEmpty()) {\n-            showSnackBarError(info.getErrors(),\n-                    UserAction.REQUESTED_STREAM,\n-                    NewPipe.getNameOfService(info.getServiceId()),\n-                    info.getUrl(),\n-                    0);\n+            showSnackBarError(new ErrorInfo(info.getErrors(),\n+                    UserAction.REQUESTED_STREAM, info.getUrl(), info));\n         }\n \n         binding.detailControlsDownload.setVisibility(info.getStreamType() == StreamType.LIVE_STREAM\n@@ -1592,6 +1588,10 @@ private void displayBothUploaderAndSubChannel(final StreamInfo info) {\n     }\n \n     public void openDownloadDialog() {\n+        if (currentInfo == null) {\n+            return;\n+        }\n+\n         try {\n             final DownloadDialog downloadDialog = DownloadDialog.newInstance(currentInfo);\n             downloadDialog.setVideoStreams(sortedVideoStreams);\n@@ -1601,43 +1601,16 @@ public void openDownloadDialog() {\n \n             downloadDialog.show(activity.getSupportFragmentManager(), \"downloadDialog\");\n         } catch (final Exception e) {\n-            final ErrorInfo info = ErrorInfo.make(UserAction.UI_ERROR,\n-                    ServiceList.all()\n-                            .get(currentInfo\n-                                    .getServiceId())\n-                            .getServiceInfo()\n-                            .getName(), \"\",\n-                    R.string.could_not_setup_download_menu);\n-\n-            ErrorActivity.reportError(activity,\n-                    e,\n-                    activity.getClass(),\n-                    activity.findViewById(android.R.id.content), info);\n+            ErrorActivity.reportErrorInSnackbar(activity,\n+                    new ErrorInfo(e, UserAction.DOWNLOAD_OPEN_DIALOG, \"Showing download dialog\",\n+                            currentInfo));\n         }\n     }\n \n     /*//////////////////////////////////////////////////////////////////////////\n     // Stream Results\n     //////////////////////////////////////////////////////////////////////////*/\n \n-    @Override\n-    protected boolean onError(final Throwable exception) {\n-        if (super.onError(exception)) {\n-            return true;\n-        }\n-\n-        final int errorId = exception instanceof YoutubeStreamExtractor.DeobfuscateException\n-                ? R.string.youtube_signature_deobfuscation_error\n-                : exception instanceof ExtractionException\n-                ? R.string.parsing_error\n-                : R.string.general_error;\n-\n-        onUnrecoverableError(exception, UserAction.REQUESTED_STREAM,\n-                NewPipe.getNameOfService(serviceId), url, errorId);\n-\n-        return true;\n-    }\n-\n     private void updateProgressInfo(@NonNull final StreamInfo info) {\n         if (positionSubscriber != null) {\n             positionSubscriber.dispose();\n@@ -1853,6 +1826,7 @@ public void onFullscreenStateChanged(final boolean fullscreen) {\n \n         if (fullscreen) {\n             hideSystemUiIfNeeded();\n+            binding.overlayPlayPauseButton.requestFocus();\n         } else {\n             showSystemUi();\n         }"
  },
  {
    "sha": "3c37bd1287b8690d60c4432001268e4566f39651",
    "filename": "app/src/main/java/org/schabi/newpipe/fragments/list/BaseListFragment.java",
    "status": "modified",
    "additions": 20,
    "deletions": 11,
    "changes": 31,
    "blob_url": "https://github.com/TiA4f8R/NewPipe/blob/401c5ed4f0707289c0a5f265805810a908ee91ff/app/src/main/java/org/schabi/newpipe/fragments/list/BaseListFragment.java",
    "raw_url": "https://github.com/TiA4f8R/NewPipe/raw/401c5ed4f0707289c0a5f265805810a908ee91ff/app/src/main/java/org/schabi/newpipe/fragments/list/BaseListFragment.java",
    "contents_url": "https://api.github.com/repos/TiA4f8R/NewPipe/contents/app/src/main/java/org/schabi/newpipe/fragments/list/BaseListFragment.java?ref=401c5ed4f0707289c0a5f265805810a908ee91ff",
    "patch": "@@ -14,14 +14,14 @@\n import androidx.annotation.NonNull;\n import androidx.annotation.Nullable;\n import androidx.appcompat.app.ActionBar;\n-import androidx.appcompat.app.AppCompatActivity;\n import androidx.preference.PreferenceManager;\n import androidx.recyclerview.widget.GridLayoutManager;\n import androidx.recyclerview.widget.RecyclerView;\n import androidx.viewbinding.ViewBinding;\n \n import org.schabi.newpipe.R;\n import org.schabi.newpipe.databinding.PignateFooterBinding;\n+import org.schabi.newpipe.error.ErrorActivity;\n import org.schabi.newpipe.extractor.InfoItem;\n import org.schabi.newpipe.extractor.channel.ChannelInfoItem;\n import org.schabi.newpipe.extractor.comments.CommentsInfoItem;\n@@ -33,7 +33,6 @@\n import org.schabi.newpipe.info_list.InfoItemDialog;\n import org.schabi.newpipe.info_list.InfoListAdapter;\n import org.schabi.newpipe.player.helper.PlayerHolder;\n-import org.schabi.newpipe.report.ErrorActivity;\n import org.schabi.newpipe.util.KoreUtil;\n import org.schabi.newpipe.util.NavigationHelper;\n import org.schabi.newpipe.util.OnClickGesture;\n@@ -47,6 +46,7 @@\n import java.util.Queue;\n \n import static org.schabi.newpipe.ktx.ViewUtils.animate;\n+import static org.schabi.newpipe.ktx.ViewUtils.animateHideRecyclerViewAllowingScrolling;\n \n public abstract class BaseListFragment<I, N> extends BaseStateFragment<I>\n         implements ListViewContract<I, N>, StateSaver.WriteRead,\n@@ -292,7 +292,8 @@ public void selected(final ChannelInfoItem selectedItem) {\n                             selectedItem.getUrl(),\n                             selectedItem.getName());\n                 } catch (final Exception e) {\n-                    ErrorActivity.reportUiError((AppCompatActivity) getActivity(), e);\n+                    ErrorActivity.reportUiErrorInSnackbar(\n+                            BaseListFragment.this, \"Opening channel fragment\", e);\n                 }\n             }\n         });\n@@ -307,7 +308,8 @@ public void selected(final PlaylistInfoItem selectedItem) {\n                             selectedItem.getUrl(),\n                             selectedItem.getName());\n                 } catch (final Exception e) {\n-                    ErrorActivity.reportUiError((AppCompatActivity) getActivity(), e);\n+                    ErrorActivity.reportUiErrorInSnackbar(BaseListFragment.this,\n+                            \"Opening playlist fragment\", e);\n                 }\n             }\n         });\n@@ -407,22 +409,22 @@ public void onCreateOptionsMenu(final Menu menu, final MenuInflater inflater) {\n     //////////////////////////////////////////////////////////////////////////*/\n \n     @Override\n-    public void hideLoading() {\n-        super.hideLoading();\n-        animate(itemsList, true, 300);\n+    public void showLoading() {\n+        super.showLoading();\n+        animateHideRecyclerViewAllowingScrolling(itemsList);\n     }\n \n     @Override\n-    public void showError(final String message, final boolean showRetryButton) {\n-        super.showError(message, showRetryButton);\n-        showListFooter(false);\n-        animate(itemsList, false, 200);\n+    public void hideLoading() {\n+        super.hideLoading();\n+        animate(itemsList, true, 300);\n     }\n \n     @Override\n     public void showEmptyState() {\n         super.showEmptyState();\n         showListFooter(false);\n+        animateHideRecyclerViewAllowingScrolling(itemsList);\n     }\n \n     @Override\n@@ -439,6 +441,13 @@ public void handleNextItems(final N result) {\n         isLoading.set(false);\n     }\n \n+    @Override\n+    public void handleError() {\n+        super.handleError();\n+        showListFooter(false);\n+        animateHideRecyclerViewAllowingScrolling(itemsList);\n+    }\n+\n     @Override\n     public void onSharedPreferenceChanged(final SharedPreferences sharedPreferences,\n                                           final String key) {"
  },
  {
    "sha": "6874f80d5e62e7b9e1a6a7f9db1339e6cb787f4f",
    "filename": "app/src/main/java/org/schabi/newpipe/fragments/list/BaseListInfoFragment.java",
    "status": "modified",
    "additions": 44,
    "deletions": 5,
    "changes": 49,
    "blob_url": "https://github.com/TiA4f8R/NewPipe/blob/401c5ed4f0707289c0a5f265805810a908ee91ff/app/src/main/java/org/schabi/newpipe/fragments/list/BaseListInfoFragment.java",
    "raw_url": "https://github.com/TiA4f8R/NewPipe/raw/401c5ed4f0707289c0a5f265805810a908ee91ff/app/src/main/java/org/schabi/newpipe/fragments/list/BaseListInfoFragment.java",
    "contents_url": "https://api.github.com/repos/TiA4f8R/NewPipe/contents/app/src/main/java/org/schabi/newpipe/fragments/list/BaseListInfoFragment.java?ref=401c5ed4f0707289c0a5f265805810a908ee91ff",
    "patch": "@@ -7,12 +7,17 @@\n \n import androidx.annotation.NonNull;\n \n+import org.schabi.newpipe.error.ErrorInfo;\n+import org.schabi.newpipe.error.UserAction;\n import org.schabi.newpipe.extractor.ListExtractor;\n import org.schabi.newpipe.extractor.ListInfo;\n import org.schabi.newpipe.extractor.Page;\n+import org.schabi.newpipe.extractor.exceptions.ContentNotSupportedException;\n import org.schabi.newpipe.util.Constants;\n import org.schabi.newpipe.views.NewPipeRecyclerView;\n \n+import java.util.ArrayList;\n+import java.util.List;\n import java.util.Queue;\n \n import icepick.State;\n@@ -30,10 +35,15 @@\n     @State\n     protected String url;\n \n+    private final UserAction errorUserAction;\n     protected I currentInfo;\n     protected Page currentNextPage;\n     protected Disposable currentWorker;\n \n+    protected BaseListInfoFragment(final UserAction errorUserAction) {\n+        this.errorUserAction = errorUserAction;\n+    }\n+\n     @Override\n     protected void initViews(final View rootView, final Bundle savedInstanceState) {\n         super.initViews(rootView, savedInstanceState);\n@@ -133,7 +143,9 @@ public void startLoading(final boolean forceLoad) {\n                     currentInfo = result;\n                     currentNextPage = result.getNextPage();\n                     handleResult(result);\n-                }, this::onError);\n+                }, throwable ->\n+                        showError(new ErrorInfo(throwable, errorUserAction,\n+                                \"Start loading: \" + url, serviceId)));\n     }\n \n     /**\n@@ -161,10 +173,9 @@ protected void loadMoreItems() {\n                 .subscribe((@NonNull ListExtractor.InfoItemsPage InfoItemsPage) -> {\n                     isLoading.set(false);\n                     handleNextItems(InfoItemsPage);\n-                }, (@NonNull Throwable throwable) -> {\n-                    isLoading.set(false);\n-                    onError(throwable);\n-                });\n+                }, (@NonNull Throwable throwable) ->\n+                        dynamicallyShowErrorPanelOrSnackbar(new ErrorInfo(throwable,\n+                                errorUserAction, \"Loading more items: \" + url, serviceId)));\n     }\n \n     private void forbidDownwardFocusScroll() {\n@@ -182,10 +193,16 @@ private void allowDownwardFocusScroll() {\n     @Override\n     public void handleNextItems(final ListExtractor.InfoItemsPage result) {\n         super.handleNextItems(result);\n+\n         currentNextPage = result.getNextPage();\n         infoListAdapter.addInfoItemList(result.getItems());\n \n         showListFooter(hasMoreItems());\n+\n+        if (!result.getErrors().isEmpty()) {\n+            dynamicallyShowErrorPanelOrSnackbar(new ErrorInfo(result.getErrors(), errorUserAction,\n+                    \"Get next items of: \" + url, serviceId));\n+        }\n     }\n \n     @Override\n@@ -213,6 +230,18 @@ public void handleResult(@NonNull final I result) {\n                 showEmptyState();\n             }\n         }\n+\n+        if (!result.getErrors().isEmpty()) {\n+            final List<Throwable> errors = new ArrayList<>(result.getErrors());\n+            // handling ContentNotSupportedException not to show the error but an appropriate string\n+            // so that crashes won't be sent uselessly and the user will understand what happened\n+            errors.removeIf(throwable -> throwable instanceof ContentNotSupportedException);\n+\n+            if (!errors.isEmpty()) {\n+                dynamicallyShowErrorPanelOrSnackbar(new ErrorInfo(result.getErrors(),\n+                        errorUserAction, \"Start loading: \" + url, serviceId));\n+            }\n+        }\n     }\n \n     /*//////////////////////////////////////////////////////////////////////////\n@@ -224,4 +253,14 @@ protected void setInitialData(final int sid, final String u, final String title)\n         this.url = u;\n         this.name = !TextUtils.isEmpty(title) ? title : \"\";\n     }\n+\n+    private void dynamicallyShowErrorPanelOrSnackbar(final ErrorInfo errorInfo) {\n+        if (infoListAdapter.getItemCount() == 0) {\n+            // show error panel only if no items already visible\n+            showError(errorInfo);\n+        } else {\n+            isLoading.set(false);\n+            showSnackBarError(errorInfo);\n+        }\n+    }\n }"
  },
  {
    "sha": "a94581cfd53c2e051658ec1bd4892d0a7d8ec944",
    "filename": "app/src/main/java/org/schabi/newpipe/fragments/list/channel/ChannelFragment.java",
    "status": "modified",
    "additions": 18,
    "deletions": 69,
    "changes": 87,
    "blob_url": "https://github.com/TiA4f8R/NewPipe/blob/401c5ed4f0707289c0a5f265805810a908ee91ff/app/src/main/java/org/schabi/newpipe/fragments/list/channel/ChannelFragment.java",
    "raw_url": "https://github.com/TiA4f8R/NewPipe/raw/401c5ed4f0707289c0a5f265805810a908ee91ff/app/src/main/java/org/schabi/newpipe/fragments/list/channel/ChannelFragment.java",
    "contents_url": "https://api.github.com/repos/TiA4f8R/NewPipe/contents/app/src/main/java/org/schabi/newpipe/fragments/list/channel/ChannelFragment.java?ref=401c5ed4f0707289c0a5f265805810a908ee91ff",
    "patch": "@@ -16,7 +16,6 @@\n import androidx.annotation.NonNull;\n import androidx.annotation.Nullable;\n import androidx.appcompat.app.ActionBar;\n-import androidx.appcompat.app.AppCompatActivity;\n import androidx.core.content.ContextCompat;\n import androidx.viewbinding.ViewBinding;\n \n@@ -27,20 +26,19 @@\n import org.schabi.newpipe.databinding.ChannelHeaderBinding;\n import org.schabi.newpipe.databinding.FragmentChannelBinding;\n import org.schabi.newpipe.databinding.PlaylistControlBinding;\n+import org.schabi.newpipe.error.ErrorActivity;\n+import org.schabi.newpipe.error.ErrorInfo;\n+import org.schabi.newpipe.error.UserAction;\n import org.schabi.newpipe.extractor.InfoItem;\n import org.schabi.newpipe.extractor.ListExtractor;\n-import org.schabi.newpipe.extractor.NewPipe;\n import org.schabi.newpipe.extractor.channel.ChannelInfo;\n import org.schabi.newpipe.extractor.exceptions.ContentNotSupportedException;\n-import org.schabi.newpipe.extractor.exceptions.ExtractionException;\n import org.schabi.newpipe.extractor.stream.StreamInfoItem;\n import org.schabi.newpipe.fragments.list.BaseListInfoFragment;\n import org.schabi.newpipe.ktx.AnimationType;\n import org.schabi.newpipe.local.subscription.SubscriptionManager;\n import org.schabi.newpipe.player.playqueue.ChannelPlayQueue;\n import org.schabi.newpipe.player.playqueue.PlayQueue;\n-import org.schabi.newpipe.report.ErrorActivity;\n-import org.schabi.newpipe.report.UserAction;\n import org.schabi.newpipe.util.ExtractorHelper;\n import org.schabi.newpipe.util.ImageDisplayConstants;\n import org.schabi.newpipe.util.Localization;\n@@ -91,6 +89,10 @@ public static ChannelFragment getInstance(final int serviceId, final String url,\n         return instance;\n     }\n \n+    public ChannelFragment() {\n+        super(UserAction.REQUESTED_CHANNEL);\n+    }\n+\n     @Override\n     public void setUserVisibleHint(final boolean isVisibleToUser) {\n         super.setUserVisibleHint(isVisibleToUser);\n@@ -217,9 +219,8 @@ public boolean onOptionsItemSelected(final MenuItem item) {\n     private void monitorSubscription(final ChannelInfo info) {\n         final Consumer<Throwable> onError = (Throwable throwable) -> {\n             animate(headerBinding.channelSubscribeButton, false, 100);\n-            showSnackBarError(throwable, UserAction.SUBSCRIPTION,\n-                    NewPipe.getNameOfService(currentInfo.getServiceId()),\n-                    \"Get subscription status\", 0);\n+            showSnackBarError(new ErrorInfo(throwable, UserAction.SUBSCRIPTION_GET,\n+                    \"Get subscription status\", currentInfo));\n         };\n \n         final Observable<List<SubscriptionEntity>> observable = subscriptionManager\n@@ -269,11 +270,8 @@ private void updateSubscription(final ChannelInfo info) {\n         };\n \n         final Consumer<Throwable> onError = (@NonNull Throwable throwable) ->\n-                onUnrecoverableError(throwable,\n-                        UserAction.SUBSCRIPTION,\n-                        NewPipe.getNameOfService(info.getServiceId()),\n-                        \"Updating Subscription for \" + info.getUrl(),\n-                        R.string.subscription_update_failed);\n+                showSnackBarError(new ErrorInfo(throwable, UserAction.SUBSCRIPTION_UPDATE,\n+                        \"Updating subscription for \" + info.getUrl(), info));\n \n         disposables.add(subscriptionManager.updateChannelInfo(info)\n                 .subscribeOn(Schedulers.io())\n@@ -290,11 +288,8 @@ private Disposable monitorSubscribeButton(final Button subscribeButton,\n         };\n \n         final Consumer<Throwable> onError = (@NonNull Throwable throwable) ->\n-                onUnrecoverableError(throwable,\n-                        UserAction.SUBSCRIPTION,\n-                        NewPipe.getNameOfService(currentInfo.getServiceId()),\n-                        \"Subscription Change\",\n-                        R.string.subscription_change_failed);\n+                showSnackBarError(new ErrorInfo(throwable, UserAction.SUBSCRIPTION_CHANGE,\n+                        \"Changing subscription for \" + currentInfo.getUrl(), currentInfo));\n \n         /* Emit clicks from main thread unto io thread */\n         return RxView.clicks(subscribeButton)\n@@ -408,7 +403,7 @@ public void onClick(final View v) {\n                                 currentInfo.getParentChannelUrl(),\n                                 currentInfo.getParentChannelName());\n                     } catch (final Exception e) {\n-                        ErrorActivity.reportUiError((AppCompatActivity) getActivity(), e);\n+                        ErrorActivity.reportUiErrorInSnackbar(this, \"Opening channel fragment\", e);\n                     }\n                 } else if (DEBUG) {\n                     Log.i(TAG, \"Can't open parent channel because we got no channel URL\");\n@@ -469,27 +464,13 @@ public void handleResult(@NonNull final ChannelInfo result) {\n \n         playlistControlBinding.getRoot().setVisibility(View.VISIBLE);\n \n-        final List<Throwable> errors = new ArrayList<>(result.getErrors());\n-        if (!errors.isEmpty()) {\n-\n-            // handling ContentNotSupportedException not to show the error but an appropriate string\n-            // so that crashes won't be sent uselessly and the user will understand what happened\n-            errors.removeIf(throwable -> {\n-                if (throwable instanceof ContentNotSupportedException) {\n-                    showContentNotSupported();\n-                }\n-                return throwable instanceof ContentNotSupportedException;\n-            });\n-\n-            if (!errors.isEmpty()) {\n-                showSnackBarError(errors, UserAction.REQUESTED_CHANNEL,\n-                        NewPipe.getNameOfService(result.getServiceId()), result.getUrl(), 0);\n+        for (final Throwable throwable : result.getErrors()) {\n+            if (throwable instanceof ContentNotSupportedException) {\n+                showContentNotSupported();\n             }\n         }\n \n-        if (disposables != null) {\n-            disposables.clear();\n-        }\n+        disposables.clear();\n         if (subscribeButtonMonitor != null) {\n             subscribeButtonMonitor.dispose();\n         }\n@@ -539,38 +520,6 @@ private PlayQueue getPlayQueue(final int index) {\n                 currentInfo.getNextPage(), streamItems, index);\n     }\n \n-    @Override\n-    public void handleNextItems(final ListExtractor.InfoItemsPage result) {\n-        super.handleNextItems(result);\n-\n-        if (!result.getErrors().isEmpty()) {\n-            showSnackBarError(result.getErrors(),\n-                    UserAction.REQUESTED_CHANNEL,\n-                    NewPipe.getNameOfService(serviceId),\n-                    \"Get next page of: \" + url,\n-                    R.string.general_error);\n-        }\n-    }\n-\n-    /*//////////////////////////////////////////////////////////////////////////\n-    // OnError\n-    //////////////////////////////////////////////////////////////////////////*/\n-\n-    @Override\n-    protected boolean onError(final Throwable exception) {\n-        if (super.onError(exception)) {\n-            return true;\n-        }\n-\n-        final int errorId = exception instanceof ExtractionException\n-                ? R.string.parsing_error : R.string.general_error;\n-\n-        onUnrecoverableError(exception, UserAction.REQUESTED_CHANNEL,\n-                NewPipe.getNameOfService(serviceId), url, errorId);\n-\n-        return true;\n-    }\n-\n     /*//////////////////////////////////////////////////////////////////////////\n     // Utils\n     //////////////////////////////////////////////////////////////////////////*/"
  },
  {
    "sha": "35ab663a62630ace720526211a79c81d259b22dc",
    "filename": "app/src/main/java/org/schabi/newpipe/fragments/list/comments/CommentsFragment.java",
    "status": "modified",
    "additions": 6,
    "deletions": 42,
    "changes": 48,
    "blob_url": "https://github.com/TiA4f8R/NewPipe/blob/401c5ed4f0707289c0a5f265805810a908ee91ff/app/src/main/java/org/schabi/newpipe/fragments/list/comments/CommentsFragment.java",
    "raw_url": "https://github.com/TiA4f8R/NewPipe/raw/401c5ed4f0707289c0a5f265805810a908ee91ff/app/src/main/java/org/schabi/newpipe/fragments/list/comments/CommentsFragment.java",
    "contents_url": "https://api.github.com/repos/TiA4f8R/NewPipe/contents/app/src/main/java/org/schabi/newpipe/fragments/list/comments/CommentsFragment.java?ref=401c5ed4f0707289c0a5f265805810a908ee91ff",
    "patch": "@@ -11,12 +11,11 @@\n import androidx.annotation.Nullable;\n \n import org.schabi.newpipe.R;\n+import org.schabi.newpipe.error.UserAction;\n import org.schabi.newpipe.extractor.ListExtractor;\n-import org.schabi.newpipe.extractor.NewPipe;\n import org.schabi.newpipe.extractor.comments.CommentsInfo;\n import org.schabi.newpipe.fragments.list.BaseListInfoFragment;\n import org.schabi.newpipe.ktx.ViewUtils;\n-import org.schabi.newpipe.report.UserAction;\n import org.schabi.newpipe.util.ExtractorHelper;\n \n import io.reactivex.rxjava3.core.Single;\n@@ -25,13 +24,17 @@\n public class CommentsFragment extends BaseListInfoFragment<CommentsInfo> {\n     private final CompositeDisposable disposables = new CompositeDisposable();\n \n-    public static CommentsFragment getInstance(final int serviceId, final  String url,\n+    public static CommentsFragment getInstance(final int serviceId, final String url,\n                                                final String name) {\n         final CommentsFragment instance = new CommentsFragment();\n         instance.setInitialData(serviceId, url, name);\n         return instance;\n     }\n \n+    public CommentsFragment() {\n+        super(UserAction.REQUESTED_COMMENTS);\n+    }\n+\n     /*//////////////////////////////////////////////////////////////////////////\n     // LifeCycle\n     //////////////////////////////////////////////////////////////////////////*/\n@@ -67,52 +70,13 @@ public void onDestroy() {\n     // Contract\n     //////////////////////////////////////////////////////////////////////////*/\n \n-    @Override\n-    public void showLoading() {\n-        super.showLoading();\n-    }\n-\n     @Override\n     public void handleResult(@NonNull final CommentsInfo result) {\n         super.handleResult(result);\n-\n         ViewUtils.slideUp(requireView(), 120, 150, 0.06f);\n-\n-        if (!result.getErrors().isEmpty()) {\n-            showSnackBarError(result.getErrors(), UserAction.REQUESTED_COMMENTS,\n-                    NewPipe.getNameOfService(result.getServiceId()), result.getUrl(), 0);\n-        }\n-\n         disposables.clear();\n     }\n \n-    @Override\n-    public void handleNextItems(final ListExtractor.InfoItemsPage result) {\n-        super.handleNextItems(result);\n-\n-        if (!result.getErrors().isEmpty()) {\n-            showSnackBarError(result.getErrors(), UserAction.REQUESTED_COMMENTS,\n-                    NewPipe.getNameOfService(serviceId), \"Get next page of: \" + url,\n-                    R.string.general_error);\n-        }\n-    }\n-\n-    /*//////////////////////////////////////////////////////////////////////////\n-    // OnError\n-    //////////////////////////////////////////////////////////////////////////*/\n-\n-    @Override\n-    protected boolean onError(final Throwable exception) {\n-        if (super.onError(exception)) {\n-            return true;\n-        }\n-\n-        hideLoading();\n-        showSnackBarError(exception, UserAction.REQUESTED_COMMENTS,\n-                NewPipe.getNameOfService(serviceId), url, R.string.error_unable_to_load_comments);\n-        return true;\n-    }\n-\n     /*//////////////////////////////////////////////////////////////////////////\n     // Utils\n     //////////////////////////////////////////////////////////////////////////*/"
  },
  {
    "sha": "d0b9e3a3dd2d8e99137b30318c7902047881dcd9",
    "filename": "app/src/main/java/org/schabi/newpipe/fragments/list/kiosk/DefaultKioskFragment.java",
    "status": "modified",
    "additions": 5,
    "deletions": 3,
    "changes": 8,
    "blob_url": "https://github.com/TiA4f8R/NewPipe/blob/401c5ed4f0707289c0a5f265805810a908ee91ff/app/src/main/java/org/schabi/newpipe/fragments/list/kiosk/DefaultKioskFragment.java",
    "raw_url": "https://github.com/TiA4f8R/NewPipe/raw/401c5ed4f0707289c0a5f265805810a908ee91ff/app/src/main/java/org/schabi/newpipe/fragments/list/kiosk/DefaultKioskFragment.java",
    "contents_url": "https://api.github.com/repos/TiA4f8R/NewPipe/contents/app/src/main/java/org/schabi/newpipe/fragments/list/kiosk/DefaultKioskFragment.java?ref=401c5ed4f0707289c0a5f265805810a908ee91ff",
    "patch": "@@ -2,14 +2,16 @@\n \n import android.os.Bundle;\n \n+import org.schabi.newpipe.error.ErrorInfo;\n+import org.schabi.newpipe.error.UserAction;\n import org.schabi.newpipe.extractor.NewPipe;\n import org.schabi.newpipe.extractor.exceptions.ExtractionException;\n import org.schabi.newpipe.extractor.kiosk.KioskList;\n-import org.schabi.newpipe.report.UserAction;\n import org.schabi.newpipe.util.KioskTranslator;\n import org.schabi.newpipe.util.ServiceHelper;\n \n public class DefaultKioskFragment extends KioskFragment {\n+\n     @Override\n     public void onCreate(final Bundle savedInstanceState) {\n         super.onCreate(savedInstanceState);\n@@ -46,8 +48,8 @@ private void updateSelectedDefaultKiosk() {\n             currentInfo = null;\n             currentNextPage = null;\n         } catch (final ExtractionException e) {\n-            onUnrecoverableError(e, UserAction.REQUESTED_KIOSK, \"none\",\n-                    \"Loading default kiosk from selected service\", 0);\n+            showError(new ErrorInfo(e, UserAction.REQUESTED_KIOSK,\n+                    \"Loading default kiosk for selected service\"));\n         }\n     }\n }"
  },
  {
    "sha": "882bb021dc0625143c2ccb5051ebd4e57720ad12",
    "filename": "app/src/main/java/org/schabi/newpipe/fragments/list/kiosk/KioskFragment.java",
    "status": "modified",
    "additions": 7,
    "deletions": 29,
    "changes": 36,
    "blob_url": "https://github.com/TiA4f8R/NewPipe/blob/401c5ed4f0707289c0a5f265805810a908ee91ff/app/src/main/java/org/schabi/newpipe/fragments/list/kiosk/KioskFragment.java",
    "raw_url": "https://github.com/TiA4f8R/NewPipe/raw/401c5ed4f0707289c0a5f265805810a908ee91ff/app/src/main/java/org/schabi/newpipe/fragments/list/kiosk/KioskFragment.java",
    "contents_url": "https://api.github.com/repos/TiA4f8R/NewPipe/contents/app/src/main/java/org/schabi/newpipe/fragments/list/kiosk/KioskFragment.java?ref=401c5ed4f0707289c0a5f265805810a908ee91ff",
    "patch": "@@ -12,6 +12,8 @@\n import androidx.appcompat.app.ActionBar;\n \n import org.schabi.newpipe.R;\n+import org.schabi.newpipe.error.ErrorInfo;\n+import org.schabi.newpipe.error.UserAction;\n import org.schabi.newpipe.extractor.ListExtractor;\n import org.schabi.newpipe.extractor.NewPipe;\n import org.schabi.newpipe.extractor.StreamingService;\n@@ -20,16 +22,13 @@\n import org.schabi.newpipe.extractor.linkhandler.ListLinkHandlerFactory;\n import org.schabi.newpipe.extractor.localization.ContentCountry;\n import org.schabi.newpipe.fragments.list.BaseListInfoFragment;\n-import org.schabi.newpipe.report.UserAction;\n import org.schabi.newpipe.util.ExtractorHelper;\n import org.schabi.newpipe.util.KioskTranslator;\n import org.schabi.newpipe.util.Localization;\n \n import icepick.State;\n import io.reactivex.rxjava3.core.Single;\n \n-import static org.schabi.newpipe.ktx.ViewUtils.animate;\n-\n /**\n  * Created by Christian Schabesberger on 23.09.17.\n  * <p>\n@@ -82,6 +81,10 @@ public static KioskFragment getInstance(final int serviceId, final String kioskI\n         return instance;\n     }\n \n+    public KioskFragment() {\n+        super(UserAction.REQUESTED_KIOSK);\n+    }\n+\n     /*//////////////////////////////////////////////////////////////////////////\n     // LifeCycle\n     //////////////////////////////////////////////////////////////////////////*/\n@@ -102,9 +105,7 @@ public void setUserVisibleHint(final boolean isVisibleToUser) {\n             try {\n                 setTitle(kioskTranslatedName);\n             } catch (final Exception e) {\n-                onUnrecoverableError(e, UserAction.UI_ERROR,\n-                        \"none\",\n-                        \"none\", R.string.app_ui_crash);\n+                showSnackBarError(new ErrorInfo(e, UserAction.UI_ERROR, \"Setting kiosk title\"));\n             }\n         }\n     }\n@@ -157,34 +158,11 @@ public void onCreateOptionsMenu(final Menu menu, final MenuInflater inflater) {\n     // Contract\n     //////////////////////////////////////////////////////////////////////////*/\n \n-    @Override\n-    public void showLoading() {\n-        super.showLoading();\n-        animate(itemsList, false, 100);\n-    }\n-\n     @Override\n     public void handleResult(@NonNull final KioskInfo result) {\n         super.handleResult(result);\n \n         name = kioskTranslatedName;\n         setTitle(kioskTranslatedName);\n-\n-        if (!result.getErrors().isEmpty()) {\n-            showSnackBarError(result.getErrors(),\n-                    UserAction.REQUESTED_KIOSK,\n-                    NewPipe.getNameOfService(result.getServiceId()), result.getUrl(), 0);\n-        }\n-    }\n-\n-    @Override\n-    public void handleNextItems(final ListExtractor.InfoItemsPage result) {\n-        super.handleNextItems(result);\n-\n-        if (!result.getErrors().isEmpty()) {\n-            showSnackBarError(result.getErrors(),\n-                    UserAction.REQUESTED_PLAYLIST, NewPipe.getNameOfService(serviceId),\n-                    \"Get next page of: \" + url, 0);\n-        }\n     }\n }"
  }
]
