[
  {
    "sha": "0131d6c96a44cfa4dd728676fc04a678ea91f456",
    "filename": "providers/multipart/src/main/java/org/jboss/resteasy/plugins/providers/multipart/Mime4JWorkaround.java",
    "status": "modified",
    "additions": 42,
    "deletions": 3,
    "changes": 45,
    "blob_url": "https://github.com/resteasy/Resteasy/blob/85694e63410f9bd8fbe856afa25f6ab325ed57e9/providers/multipart/src/main/java/org/jboss/resteasy/plugins/providers/multipart/Mime4JWorkaround.java",
    "raw_url": "https://github.com/resteasy/Resteasy/raw/85694e63410f9bd8fbe856afa25f6ab325ed57e9/providers/multipart/src/main/java/org/jboss/resteasy/plugins/providers/multipart/Mime4JWorkaround.java",
    "contents_url": "https://api.github.com/repos/resteasy/Resteasy/contents/providers/multipart/src/main/java/org/jboss/resteasy/plugins/providers/multipart/Mime4JWorkaround.java?ref=85694e63410f9bd8fbe856afa25f6ab325ed57e9",
    "patch": "@@ -7,6 +7,9 @@\n import java.io.IOException;\n import java.io.InputStream;\n import java.io.OutputStream;\n+import java.security.AccessController;\n+import java.security.PrivilegedActionException;\n+import java.security.PrivilegedExceptionAction;\n import java.util.HashSet;\n import java.util.Iterator;\n import java.util.Set;\n@@ -116,9 +119,45 @@ public static Message parseMessage(InputStream is) throws IOException, MimeIOExc\n \n         public StorageOutputStream createStorageOutputStream() throws IOException\n         {\n-            File file = File.createTempFile(prefix, suffix, directory);\n+            return new TempFileStorageOutputStream(createTempFile(prefix, suffix, directory));\n+        }\n \n-            return new TempFileStorageOutputStream(file);\n+        private static File createTempFile(String prefix, String suffix, File directory) throws IOException\n+        {\n+            boolean java2SecurityEnabled = System.getSecurityManager() != null;\n+            if (java2SecurityEnabled)\n+            {\n+                try {\n+                    return AccessController.doPrivileged((PrivilegedExceptionAction<File>) () ->\n+                        File.createTempFile(prefix, suffix, directory));\n+                } catch (PrivilegedActionException pae) {\n+                    Throwable cause = pae.getCause();\n+                    if (cause instanceof IOException)\n+                    {\n+                        throw (IOException) cause;\n+                    } else throw new RuntimeException(cause);\n+                }\n+            }\n+            return File.createTempFile(prefix, suffix, directory);\n+        }\n+\n+        private static FileOutputStream createFileOutputStream(File file) throws IOException\n+        {\n+            boolean java2SecurityEnabled = System.getSecurityManager() != null;\n+            if (java2SecurityEnabled)\n+            {\n+                try {\n+                    return AccessController.doPrivileged((PrivilegedExceptionAction<FileOutputStream>) () ->\n+                        new FileOutputStream(file));\n+                } catch (PrivilegedActionException pae) {\n+                    Throwable cause = pae.getCause();\n+                    if (cause instanceof IOException)\n+                    {\n+                        throw (IOException) cause;\n+                    } else throw new RuntimeException(cause);\n+                }\n+            }\n+            return new FileOutputStream(file);\n         }\n \n         private static final class TempFileStorageOutputStream extends StorageOutputStream\n@@ -130,7 +169,7 @@ public StorageOutputStream createStorageOutputStream() throws IOException\n             TempFileStorageOutputStream(final File file) throws IOException\n             {\n                 this.file = file;\n-                this.out = new FileOutputStream(file);\n+                this.out = createFileOutputStream(file);\n             }\n \n             @Override"
  }
]
