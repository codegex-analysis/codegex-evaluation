[
  {
    "sha": "e27b5802ad031b334df31c1f08ccd0144e5400fa",
    "filename": "new/Action.java",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/emervlad/smart-home-2021/blob/1ee24448f166437ed766ab6938618f3c72a142c1/new/Action.java",
    "raw_url": "https://github.com/emervlad/smart-home-2021/raw/1ee24448f166437ed766ab6938618f3c72a142c1/new/Action.java",
    "contents_url": "https://api.github.com/repos/emervlad/smart-home-2021/contents/new/Action.java?ref=1ee24448f166437ed766ab6938618f3c72a142c1",
    "patch": "@@ -0,0 +1,5 @@\n+package ru.sbt.mipt.oop;\r\n+\r\n+public interface Action {\r\n+    void apply(Actionable actionable);\r\n+}\r"
  },
  {
    "sha": "8035dbfceac7c27f95549f84bd4807c1c3c8f9b8",
    "filename": "new/Actionable.java",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/emervlad/smart-home-2021/blob/1ee24448f166437ed766ab6938618f3c72a142c1/new/Actionable.java",
    "raw_url": "https://github.com/emervlad/smart-home-2021/raw/1ee24448f166437ed766ab6938618f3c72a142c1/new/Actionable.java",
    "contents_url": "https://api.github.com/repos/emervlad/smart-home-2021/contents/new/Actionable.java?ref=1ee24448f166437ed766ab6938618f3c72a142c1",
    "patch": "@@ -0,0 +1,5 @@\n+package ru.sbt.mipt.oop;\r\n+\r\n+public interface Actionable {\r\n+    void execute(Action action);\r\n+}\r"
  },
  {
    "sha": "e015c195934bf8c051ee873925212a0a712dc254",
    "filename": "new/Application.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/emervlad/smart-home-2021/blob/1ee24448f166437ed766ab6938618f3c72a142c1/new/Application.java",
    "raw_url": "https://github.com/emervlad/smart-home-2021/raw/1ee24448f166437ed766ab6938618f3c72a142c1/new/Application.java",
    "contents_url": "https://api.github.com/repos/emervlad/smart-home-2021/contents/new/Application.java?ref=1ee24448f166437ed766ab6938618f3c72a142c1",
    "patch": "@@ -7,14 +7,14 @@\n public class Application {\r\n \r\n     public static void main(String... args) throws IOException {\r\n-        Application application = new Application(new EventProcessor(new EventCreatorImpl()), new HomeGetterJS(\"smart-home-1.js\"));\r\n+        Application application = new Application(new EventProcessor(new EventCreatorImpl()), new HomeReaderJS(\"smart-home-1.js\"));\r\n         application.run();\r\n     }\r\n \r\n     private final EventProcessor processor;\r\n-    private final HomeGetter homeGetter;\r\n+    private final HomeReader homeGetter;\r\n \r\n-    public Application(EventProcessor processor, HomeGetter homeGetter) {\r\n+    public Application(EventProcessor processor, HomeReader homeGetter) {\r\n         this.processor = processor;\r\n         this.homeGetter = homeGetter;\r\n     }\r"
  },
  {
    "sha": "22038459751751b7ef6891e2396aadd758c47d72",
    "filename": "new/Door.java",
    "status": "modified",
    "additions": 10,
    "deletions": 1,
    "changes": 11,
    "blob_url": "https://github.com/emervlad/smart-home-2021/blob/1ee24448f166437ed766ab6938618f3c72a142c1/new/Door.java",
    "raw_url": "https://github.com/emervlad/smart-home-2021/raw/1ee24448f166437ed766ab6938618f3c72a142c1/new/Door.java",
    "contents_url": "https://api.github.com/repos/emervlad/smart-home-2021/contents/new/Door.java?ref=1ee24448f166437ed766ab6938618f3c72a142c1",
    "patch": "@@ -1,6 +1,6 @@\n package ru.sbt.mipt.oop;\r\n \r\n-public class Door {\r\n+public class Door implements Actionable{\r\n     private final String id;\r\n     private boolean isOpen;\r\n \r\n@@ -13,7 +13,16 @@ public String getId() {\n         return id;\r\n     }\r\n \r\n+    public boolean isOpen() {\r\n+        return isOpen;\r\n+    }\r\n+\r\n     public void setOpen(boolean open) {\r\n         isOpen = open;\r\n     }\r\n+\r\n+    @Override\r\n+    public void execute(Action action) {\r\n+        action.apply(this);\r\n+    }\r\n }\r"
  },
  {
    "sha": "9dc761001fc900686ccb1662153ae29ed1ee9490",
    "filename": "new/DoorProcessor.java",
    "status": "modified",
    "additions": 21,
    "deletions": 18,
    "changes": 39,
    "blob_url": "https://github.com/emervlad/smart-home-2021/blob/1ee24448f166437ed766ab6938618f3c72a142c1/new/DoorProcessor.java",
    "raw_url": "https://github.com/emervlad/smart-home-2021/raw/1ee24448f166437ed766ab6938618f3c72a142c1/new/DoorProcessor.java",
    "contents_url": "https://api.github.com/repos/emervlad/smart-home-2021/contents/new/DoorProcessor.java?ref=1ee24448f166437ed766ab6938618f3c72a142c1",
    "patch": "@@ -1,32 +1,35 @@\n package ru.sbt.mipt.oop;\r\n \r\n-import static ru.sbt.mipt.oop.SensorEventType.LIGHT_OFF;\r\n-import static ru.sbt.mipt.oop.SensorEventType.LIGHT_ON;\r\n+\r\n+import static ru.sbt.mipt.oop.SensorEventType.*;\r\n \r\n public class DoorProcessor implements EventTypeProcessor{\r\n     @Override\r\n-    public void DoorLightProcessor(SensorEvent event, SmartHome smartHome) {\r\n-        if (event.getType() == LIGHT_ON || event.getType() == LIGHT_OFF) {\r\n-            // событие от источника света\r\n-            for (Room room : smartHome.getRooms()) {\r\n-                for (Light light : room.getLights()) {\r\n-                    if (light.getId().equals(event.getObjectId())) {\r\n-                        if (event.getType() == LIGHT_ON) {\r\n-                            light.setOn(true);\r\n-                            printStatus(light.getId(), room.getName(), true);\r\n+    public void processEvent(SensorEvent event, SmartHome smartHome) {\r\n+        if (event.getType() == DOOR_OPEN || event.getType() == DOOR_CLOSED) {\r\n+            // событие от двери\r\n+            smartHome.execute(homeComponent -> {\r\n+                if (homeComponent instanceof Door) {\r\n+                    Door door = (Door) homeComponent;\r\n+                    if (door.getId().equals(event.getObjectId())) {\r\n+                        if (event.getType() == DOOR_OPEN) {\r\n+                            door.setOpen(true);\r\n+                            printStatus(door.getId(), true);\r\n                         } else {\r\n-                            light.setOn(false);\r\n-                            printStatus(light.getId(), room.getName(), false);\r\n+                            door.setOpen(false);\r\n+                            printStatus(door.getId(), false);\r\n                         }\r\n                     }\r\n                 }\r\n-            }\r\n+            });\r\n         }\r\n     }\r\n \r\n-    @Override\r\n-    public void printStatus(String id, String name, boolean is) {\r\n-            String f = is ? \"on\" : \"off\";\r\n-            System.out.println(\"Light \" + id + \" in room \" + name + \" was turned \" + f + \".\");\r\n+\r\n+    public void printStatus(String id, boolean is) {\r\n+        String f = is ? \"opened\" : \"closed\";\r\n+        System.out.println(\"Door \" + id + \" in room \" + \" was \" + f + \".\");\r\n     }\r\n+\r\n+\r\n }\r"
  },
  {
    "sha": "ddc6ba53d09055fb80049da42e68131e1e8b11f6",
    "filename": "new/DoorProcessorTest.java",
    "status": "added",
    "additions": 62,
    "deletions": 0,
    "changes": 62,
    "blob_url": "https://github.com/emervlad/smart-home-2021/blob/1ee24448f166437ed766ab6938618f3c72a142c1/new/DoorProcessorTest.java",
    "raw_url": "https://github.com/emervlad/smart-home-2021/raw/1ee24448f166437ed766ab6938618f3c72a142c1/new/DoorProcessorTest.java",
    "contents_url": "https://api.github.com/repos/emervlad/smart-home-2021/contents/new/DoorProcessorTest.java?ref=1ee24448f166437ed766ab6938618f3c72a142c1",
    "patch": "@@ -0,0 +1,62 @@\n+package ru.sbt.mipt.oop;\r\n+\r\n+import org.junit.jupiter.api.Test;\r\n+\r\n+import java.util.Arrays;\r\n+import java.util.Collections;\r\n+import static ru.sbt.mipt.oop.SensorEventType.*;\r\n+import static org.junit.jupiter.api.Assertions.*;\r\n+\r\n+class DoorProcessorTest {\r\n+    private final Door door0 = new Door(true, \"0\");\r\n+    private final Door door1 = new Door(false, \"1\");\r\n+    private final Door door2 = new Door(true, \"2\");\r\n+\r\n+    private final Light light0 = new Light(\"0\", false);\r\n+    private final Light light1 = new Light(\"1\", true);\r\n+    private final Light light2 = new Light(\"2\", false);\r\n+\r\n+    SmartHome smartHome = new SmartHome(Arrays.asList(\r\n+            new Room(Collections.singletonList(light0), Collections.singletonList(door0), \"bedroom\"),\r\n+            new Room(Collections.singletonList(light1), Collections.singletonList(door1), \"kitchen\"),\r\n+            new Room(Collections.singletonList(light2), Collections.singletonList(door2), \"hall\")\r\n+    ));\r\n+\r\n+    private final DoorProcessor doorProcessor = new DoorProcessor();\r\n+\r\n+    @Test\r\n+    public void doorClose() {\r\n+        doorProcessor.processEvent(new SensorEvent(DOOR_CLOSED, \"0\"), smartHome);\r\n+        assertFalse(light0.isOn());\r\n+        assertTrue(light1.isOn());\r\n+        assertFalse(light2.isOn());\r\n+\r\n+        assertFalse(door0.isOpen());\r\n+        assertFalse(door1.isOpen());\r\n+        assertTrue(door2.isOpen());\r\n+    }\r\n+\r\n+    @Test\r\n+    public void doorOpen() {\r\n+        doorProcessor.processEvent(new SensorEvent(DOOR_OPEN, \"1\"), smartHome);\r\n+        assertFalse(light0.isOn());\r\n+        assertTrue(light1.isOn());\r\n+        assertFalse(light2.isOn());\r\n+\r\n+        assertTrue(door0.isOpen());\r\n+        assertTrue(door1.isOpen());\r\n+        assertTrue(door2.isOpen());\r\n+    }\r\n+\r\n+    @Test\r\n+    public void doorWithoutID() {\r\n+        doorProcessor.processEvent(new SensorEvent(DOOR_CLOSED, \"10\"), smartHome);\r\n+        assertFalse(light0.isOn());\r\n+        assertTrue(light1.isOn());\r\n+        assertFalse(light2.isOn());\r\n+\r\n+        assertTrue(door0.isOpen());\r\n+        assertFalse(door1.isOpen());\r\n+        assertTrue(door2.isOpen());\r\n+    }\r\n+}\r"
  },
  {
    "sha": "caca10130c9718b0234f4a66b7c95a4667ebd557",
    "filename": "new/EventProcessor.java",
    "status": "modified",
    "additions": 2,
    "deletions": 4,
    "changes": 6,
    "blob_url": "https://github.com/emervlad/smart-home-2021/blob/1ee24448f166437ed766ab6938618f3c72a142c1/new/EventProcessor.java",
    "raw_url": "https://github.com/emervlad/smart-home-2021/raw/1ee24448f166437ed766ab6938618f3c72a142c1/new/EventProcessor.java",
    "contents_url": "https://api.github.com/repos/emervlad/smart-home-2021/contents/new/EventProcessor.java?ref=1ee24448f166437ed766ab6938618f3c72a142c1",
    "patch": "@@ -1,7 +1,5 @@\n package ru.sbt.mipt.oop;\r\n \r\n-import static ru.sbt.mipt.oop.SensorEventType.*;\r\n-\r\n public class EventProcessor {\r\n     private final EventCreator sensorEventCreator;\r\n \r\n@@ -13,8 +11,8 @@ public void processEvent(SmartHome smartHome) {\n         SensorEvent event = sensorEventCreator.getNextEvent();\r\n         while (event != null) {\r\n             System.out.println(\"Got event: \" + event);\r\n-            new LightProcessor().DoorLightProcessor(event, smartHome);\r\n-            new DoorProcessor().DoorLightProcessor(event, smartHome);\r\n+            new DoorProcessor().processEvent(event, smartHome);\r\n+            new LightProcessor().processEvent(event, smartHome);\r\n             event = sensorEventCreator.getNextEvent();\r\n         }\r\n     }\r"
  },
  {
    "sha": "558d38807522c6e21ccad0ab52c50d2a696bcb91",
    "filename": "new/EventTypeProcessor.java",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/emervlad/smart-home-2021/blob/1ee24448f166437ed766ab6938618f3c72a142c1/new/EventTypeProcessor.java",
    "raw_url": "https://github.com/emervlad/smart-home-2021/raw/1ee24448f166437ed766ab6938618f3c72a142c1/new/EventTypeProcessor.java",
    "contents_url": "https://api.github.com/repos/emervlad/smart-home-2021/contents/new/EventTypeProcessor.java?ref=1ee24448f166437ed766ab6938618f3c72a142c1",
    "patch": "@@ -1,6 +1,5 @@\n package ru.sbt.mipt.oop;\r\n \r\n public interface EventTypeProcessor {\r\n-    void DoorLightProcessor(SensorEvent event, SmartHome smartHome);\r\n-    void printStatus(String id, String name, boolean is);\r\n+    void processEvent(SensorEvent event, SmartHome smartHome);\r\n }\r"
  },
  {
    "sha": "1d9db04b0dfae4fcd29677e11b1e2d9ba072b7f1",
    "filename": "new/HallDoorProcessor.java",
    "status": "added",
    "additions": 28,
    "deletions": 0,
    "changes": 28,
    "blob_url": "https://github.com/emervlad/smart-home-2021/blob/1ee24448f166437ed766ab6938618f3c72a142c1/new/HallDoorProcessor.java",
    "raw_url": "https://github.com/emervlad/smart-home-2021/raw/1ee24448f166437ed766ab6938618f3c72a142c1/new/HallDoorProcessor.java",
    "contents_url": "https://api.github.com/repos/emervlad/smart-home-2021/contents/new/HallDoorProcessor.java?ref=1ee24448f166437ed766ab6938618f3c72a142c1",
    "patch": "@@ -0,0 +1,28 @@\n+package ru.sbt.mipt.oop;\r\n+import static ru.sbt.mipt.oop.SensorEventType.*;\r\n+\r\n+public class HallDoorProcessor implements EventTypeProcessor{\r\n+    @Override\r\n+    public void processEvent(SensorEvent event, SmartHome smartHome) {\r\n+        if (event.getType() == DOOR_CLOSED || event.getType() == DOOR_OPEN) {\r\n+            smartHome.execute(homeComponent -> {\r\n+                if (homeComponent instanceof Room) {\r\n+                    Room room = (Room) homeComponent;\r\n+                    if (room.getName().equals(\"hall\")) {\r\n+                        room.execute(roomComponent -> {\r\n+                            if (roomComponent instanceof Door) {\r\n+                                Door door = (Door) roomComponent;\r\n+                                if (door.getId().equals(event.getObjectId())) {\r\n+\r\n+                                    if (event.getType() == DOOR_CLOSED) {\r\n+                                        (new Interrupter()).lightOffAnywhere(smartHome);\r\n+                                    }\r\n+                                }\r\n+                            }\r\n+                        });\r\n+                    }\r\n+                }\r\n+            });\r\n+        }\r\n+    }\r\n+}\r"
  },
  {
    "sha": "448245a11acfafb4b42f0a257d49cec680ae73f4",
    "filename": "new/HallDoorProcessorTest.java",
    "status": "added",
    "additions": 65,
    "deletions": 0,
    "changes": 65,
    "blob_url": "https://github.com/emervlad/smart-home-2021/blob/1ee24448f166437ed766ab6938618f3c72a142c1/new/HallDoorProcessorTest.java",
    "raw_url": "https://github.com/emervlad/smart-home-2021/raw/1ee24448f166437ed766ab6938618f3c72a142c1/new/HallDoorProcessorTest.java",
    "contents_url": "https://api.github.com/repos/emervlad/smart-home-2021/contents/new/HallDoorProcessorTest.java?ref=1ee24448f166437ed766ab6938618f3c72a142c1",
    "patch": "@@ -0,0 +1,65 @@\n+package ru.sbt.mipt.oop;\r\n+\r\n+import org.junit.jupiter.api.Test;\r\n+\r\n+import java.util.Arrays;\r\n+import java.util.Collections;\r\n+\r\n+import static ru.sbt.mipt.oop.SensorEventType.*;\r\n+import static org.junit.jupiter.api.Assertions.*;\r\n+\r\n+class HallDoorProcessorTest {\r\n+    private final Door door0 = new Door(true, \"0\");\r\n+    private final Door door1 = new Door(false, \"1\");\r\n+    private final Door door2 = new Door(true, \"2\");\r\n+\r\n+    private final Light light0 = new Light(\"0\", true);\r\n+    private final Light light1 = new Light(\"1\", true);\r\n+    private final Light light2 = new Light(\"2\", false);\r\n+\r\n+    SmartHome smartHome = new SmartHome(Arrays.asList(\r\n+            new Room(Collections.singletonList(light0), Collections.singletonList(door0), \"bedroom\"),\r\n+            new Room(Collections.singletonList(light1), Collections.singletonList(door1), \"kitchen\"),\r\n+            new Room(Collections.singletonList(light2), Collections.singletonList(door2), \"hall\")\r\n+    ));\r\n+\r\n+    private final HallDoorProcessor hallDoorProcessor = new HallDoorProcessor();\r\n+\r\n+    @Test\r\n+    public void hallDoorLightOff() {\r\n+        hallDoorProcessor.processEvent(new SensorEvent(DOOR_CLOSED, \"2\"), smartHome);\r\n+        assertFalse(light0.isOn());\r\n+        assertFalse(light1.isOn());\r\n+        assertFalse(light2.isOn());\r\n+\r\n+        assertTrue(door0.isOpen());\r\n+        assertFalse(door1.isOpen());\r\n+        assertTrue(door2.isOpen());\r\n+    }\r\n+\r\n+    @Test\r\n+    public void hallDoorOpen() {\r\n+        hallDoorProcessor.processEvent(new SensorEvent(DOOR_OPEN, \"2\"), smartHome);\r\n+        assertTrue(light0.isOn());\r\n+        assertTrue(light1.isOn());\r\n+        assertFalse(light2.isOn());\r\n+\r\n+        assertTrue(door0.isOpen());\r\n+        assertFalse(door1.isOpen());\r\n+        assertTrue(door2.isOpen());\r\n+    }\r\n+\r\n+    @Test\r\n+    public void hallDoorLightOn() {\r\n+        hallDoorProcessor.processEvent(new SensorEvent(DOOR_CLOSED, \"0\"), smartHome);\r\n+        hallDoorProcessor.processEvent(new SensorEvent(DOOR_OPEN, \"1\"), smartHome);\r\n+        assertTrue(light0.isOn());\r\n+        assertTrue(light1.isOn());\r\n+        assertFalse(light2.isOn());\r\n+\r\n+        assertTrue(door0.isOpen());\r\n+        assertFalse(door1.isOpen());\r\n+        assertTrue(door2.isOpen());\r\n+    }\r\n+\r\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "072985adb9af1d50d8e5f57c0adf23dd62177080",
    "filename": "new/HomeReader.java",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/emervlad/smart-home-2021/blob/1ee24448f166437ed766ab6938618f3c72a142c1/new/HomeReader.java",
    "raw_url": "https://github.com/emervlad/smart-home-2021/raw/1ee24448f166437ed766ab6938618f3c72a142c1/new/HomeReader.java",
    "contents_url": "https://api.github.com/repos/emervlad/smart-home-2021/contents/new/HomeReader.java?ref=1ee24448f166437ed766ab6938618f3c72a142c1",
    "patch": "@@ -0,0 +1,5 @@\n+package ru.sbt.mipt.oop;\r\n+\r\n+public interface HomeReader {\r\n+    SmartHome getSmartHome();\r\n+}\r"
  },
  {
    "sha": "8cc26f605779168f668b2896d32d90a8465f297a",
    "filename": "new/HomeReaderJS.java",
    "status": "added",
    "additions": 30,
    "deletions": 0,
    "changes": 30,
    "blob_url": "https://github.com/emervlad/smart-home-2021/blob/1ee24448f166437ed766ab6938618f3c72a142c1/new/HomeReaderJS.java",
    "raw_url": "https://github.com/emervlad/smart-home-2021/raw/1ee24448f166437ed766ab6938618f3c72a142c1/new/HomeReaderJS.java",
    "contents_url": "https://api.github.com/repos/emervlad/smart-home-2021/contents/new/HomeReaderJS.java?ref=1ee24448f166437ed766ab6938618f3c72a142c1",
    "patch": "@@ -0,0 +1,30 @@\n+package ru.sbt.mipt.oop;\r\n+\r\n+import java.io.IOException;\r\n+import java.nio.file.Files;\r\n+import java.nio.file.Paths;\r\n+\r\n+import com.google.gson.Gson;\r\n+import com.google.gson.JsonElement;\r\n+import com.google.gson.JsonObject;\r\n+\r\n+public class HomeReaderJS implements HomeReader {\r\n+\r\n+    private final String filename;\r\n+\r\n+    public HomeReaderJS(String filename) {\r\n+        this.filename = filename;\r\n+    }\r\n+\r\n+    @Override\r\n+    public SmartHome getSmartHome() {\r\n+        Gson gson = new Gson();\r\n+        String json = null;\r\n+        try {\r\n+            json = new String(Files.readAllBytes(Paths.get(filename)));\r\n+        } catch (IOException e) {\r\n+            System.out.println(\"Error in method \\\"readAllBytes\\\"\");\r\n+        }\r\n+        return gson.fromJson(json , SmartHome.class);\r\n+    }\r\n+}\r"
  },
  {
    "sha": "dabd57e9f951ae31814bb5ef0027973ee9338105",
    "filename": "new/Interrupter.java",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/emervlad/smart-home-2021/blob/1ee24448f166437ed766ab6938618f3c72a142c1/new/Interrupter.java",
    "raw_url": "https://github.com/emervlad/smart-home-2021/raw/1ee24448f166437ed766ab6938618f3c72a142c1/new/Interrupter.java",
    "contents_url": "https://api.github.com/repos/emervlad/smart-home-2021/contents/new/Interrupter.java?ref=1ee24448f166437ed766ab6938618f3c72a142c1",
    "patch": "@@ -0,0 +1,16 @@\n+package ru.sbt.mipt.oop;\r\n+\r\n+public class Interrupter {\r\n+    void lightOffAnywhere(SmartHome smartHome) {\r\n+        smartHome.execute(homeComponent -> {\r\n+            if (homeComponent instanceof Light) {\r\n+                Light light = (Light) homeComponent;\r\n+                light.setOn(false);\r\n+                (new DoorProcessor()).printStatus(light.getId(), false);\r\n+                SensorCommand command = new SensorCommand(CommandType.LIGHT_OFF, light.getId());\r\n+                command.sendCommand();\r\n+            }\r\n+        });\r\n+\r\n+    }\r\n+}\r"
  },
  {
    "sha": "dcacb0822e75611eb2cff5d01f67e73b9b5b4762",
    "filename": "new/Light.java",
    "status": "modified",
    "additions": 6,
    "deletions": 1,
    "changes": 7,
    "blob_url": "https://github.com/emervlad/smart-home-2021/blob/1ee24448f166437ed766ab6938618f3c72a142c1/new/Light.java",
    "raw_url": "https://github.com/emervlad/smart-home-2021/raw/1ee24448f166437ed766ab6938618f3c72a142c1/new/Light.java",
    "contents_url": "https://api.github.com/repos/emervlad/smart-home-2021/contents/new/Light.java?ref=1ee24448f166437ed766ab6938618f3c72a142c1",
    "patch": "@@ -1,6 +1,6 @@\n package ru.sbt.mipt.oop;\r\n \r\n-public class Light {\r\n+public class Light implements Actionable{\r\n     private boolean isOn;\r\n     private final String id;\r\n \r\n@@ -20,4 +20,9 @@ public String getId() {\n     public void setOn(boolean on) {\r\n         isOn = on;\r\n     }\r\n+\r\n+    @Override\r\n+    public void execute(Action action) {\r\n+        action.apply(this);\r\n+    }\r\n }\r"
  },
  {
    "sha": "c675cc31c4a4df75966e2091d1b14e7b8ff553c4",
    "filename": "new/LightProcessor.java",
    "status": "modified",
    "additions": 19,
    "deletions": 32,
    "changes": 51,
    "blob_url": "https://github.com/emervlad/smart-home-2021/blob/1ee24448f166437ed766ab6938618f3c72a142c1/new/LightProcessor.java",
    "raw_url": "https://github.com/emervlad/smart-home-2021/raw/1ee24448f166437ed766ab6938618f3c72a142c1/new/LightProcessor.java",
    "contents_url": "https://api.github.com/repos/emervlad/smart-home-2021/contents/new/LightProcessor.java?ref=1ee24448f166437ed766ab6938618f3c72a142c1",
    "patch": "@@ -1,46 +1,33 @@\n package ru.sbt.mipt.oop;\r\n \r\n-import java.util.Collection;\r\n-\r\n-import static ru.sbt.mipt.oop.SensorEventType.DOOR_CLOSED;\r\n-import static ru.sbt.mipt.oop.SensorEventType.DOOR_OPEN;\r\n+import static ru.sbt.mipt.oop.SensorEventType.LIGHT_OFF;\r\n+import static ru.sbt.mipt.oop.SensorEventType.LIGHT_ON;\r\n \r\n public class LightProcessor implements EventTypeProcessor{\r\n     @Override\r\n-    public void DoorLightProcessor(SensorEvent event, SmartHome smartHome) {\r\n-        if (event.getType() == DOOR_OPEN || event.getType() == DOOR_CLOSED) {\r\n-            // событие от двери\r\n-            for (Room room : smartHome.getRooms()) {\r\n-                for (Door door : room.getDoors()) {\r\n-                    if (door.getId().equals(event.getObjectId())) {\r\n-                        if (event.getType() == DOOR_OPEN) {\r\n-                            door.setOpen(true);\r\n-                            printStatus(door.getId(), room.getName(), true);\r\n-                        } else {\r\n-                            door.setOpen(false);\r\n-                            printStatus(door.getId(), room.getName(), false);\r\n-                            lightOffAnywhere(smartHome.getRooms(), room.getName());\r\n-                        }\r\n+    public void processEvent(SensorEvent event, SmartHome smartHome) {\r\n+        if (event.getType() == LIGHT_ON || event.getType() == LIGHT_OFF) {\r\n+            // событие от источника света\r\n+            smartHome.execute(homeComponent -> {\r\n+                if (homeComponent instanceof Light) {\r\n+                Light light = (Light) homeComponent;\r\n+                if (light.getId().equals(event.getObjectId())) {\r\n+                    if (event.getType() == LIGHT_ON) {\r\n+                        light.setOn(true);\r\n+                        printStatus(light.getId(), true);\r\n+                    } else {\r\n+                        light.setOn(false);\r\n+                        printStatus(light.getId(), false);\r\n                     }\r\n                 }\r\n             }\r\n+            });\r\n         }\r\n     }\r\n \r\n-    public void printStatus(String id, String name, boolean is) {\r\n-        String f = is ? \"opened\" : \"closed\";\r\n-        System.out.println(\"Door \" + id + \" in room \" + name + \" was \" + f + \".\");\r\n-    }\r\n \r\n-    private void lightOffAnywhere(Collection <Room> rooms, String roomName) {\r\n-        if (roomName.equals(\"hall\")) {\r\n-            for (Room homeRoom : rooms) {\r\n-                for (Light light : homeRoom.getLights()) {\r\n-                    light.setOn(false);\r\n-                    SensorCommand command = new SensorCommand(CommandType.LIGHT_OFF, light.getId());\r\n-                    command.sendCommand();\r\n-                }\r\n-            }\r\n-        }\r\n+    public void printStatus(String id, boolean is) {\r\n+            String f = is ? \"on\" : \"off\";\r\n+            System.out.println(\"Light \" + id + \" in room \" + \" was turned \" + f + \".\");\r\n     }\r\n }\r"
  },
  {
    "sha": "26c483b85901f270fd2f93f0ef4d164f2fdd09fa",
    "filename": "new/LightProcessorTest.java",
    "status": "added",
    "additions": 61,
    "deletions": 0,
    "changes": 61,
    "blob_url": "https://github.com/emervlad/smart-home-2021/blob/1ee24448f166437ed766ab6938618f3c72a142c1/new/LightProcessorTest.java",
    "raw_url": "https://github.com/emervlad/smart-home-2021/raw/1ee24448f166437ed766ab6938618f3c72a142c1/new/LightProcessorTest.java",
    "contents_url": "https://api.github.com/repos/emervlad/smart-home-2021/contents/new/LightProcessorTest.java?ref=1ee24448f166437ed766ab6938618f3c72a142c1",
    "patch": "@@ -0,0 +1,61 @@\n+package ru.sbt.mipt.oop;\r\n+\r\n+import org.junit.jupiter.api.Test;\r\n+\r\n+import java.util.Arrays;\r\n+import java.util.Collections;\r\n+import static ru.sbt.mipt.oop.SensorEventType.*;\r\n+import static org.junit.jupiter.api.Assertions.*;\r\n+\r\n+class LightProcessorTest {\r\n+    private final Door door0 = new Door(true, \"0\");\r\n+    private final Door door1 = new Door(false, \"1\");\r\n+    private final Door door2 = new Door(true, \"2\");\r\n+\r\n+    private final Light light0 = new Light(\"0\", false);\r\n+    private final Light light1 = new Light(\"1\", true);\r\n+    private final Light light2 = new Light(\"2\", false);\r\n+\r\n+    SmartHome smartHome = new SmartHome(Arrays.asList(\r\n+            new Room(Collections.singletonList(light0), Collections.singletonList(door0), \"bedroom\"),\r\n+            new Room(Collections.singletonList(light1), Collections.singletonList(door1), \"kitchen\"),\r\n+            new Room(Collections.singletonList(light2), Collections.singletonList(door2), \"hall\")\r\n+    ));\r\n+\r\n+    private final LightProcessor lightProcessor = new LightProcessor();\r\n+    @Test\r\n+    public void lightOff() {\r\n+        lightProcessor.processEvent(new SensorEvent(LIGHT_OFF, \"1\"), smartHome);\r\n+        assertFalse(light0.isOn());\r\n+        assertFalse(light1.isOn());\r\n+        assertFalse(light2.isOn());\r\n+\r\n+        assertTrue(door0.isOpen());\r\n+        assertFalse(door1.isOpen());\r\n+        assertTrue(door2.isOpen());\r\n+    }\r\n+\r\n+    @Test\r\n+    public void lightOpenDoors() {\r\n+        lightProcessor.processEvent(new SensorEvent(LIGHT_ON, \"0\"), smartHome);\r\n+        assertTrue(light0.isOn());\r\n+        assertTrue(light1.isOn());\r\n+        assertFalse(light2.isOn());\r\n+\r\n+        assertTrue(door0.isOpen());\r\n+        assertFalse(door1.isOpen());\r\n+        assertTrue(door2.isOpen());\r\n+    }\r\n+\r\n+    @Test\r\n+    public void lightWithoutID() {\r\n+        lightProcessor.processEvent(new SensorEvent(DOOR_CLOSED, \"10\"), smartHome);\r\n+        assertFalse(light0.isOn());\r\n+        assertTrue(light1.isOn());\r\n+        assertFalse(light2.isOn());\r\n+\r\n+        assertTrue(door0.isOpen());\r\n+        assertFalse(door1.isOpen());\r\n+        assertTrue(door2.isOpen());\r\n+    }\r\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "67002ad86781813e1b22ec8376635c736517844d",
    "filename": "new/Room.java",
    "status": "modified",
    "additions": 8,
    "deletions": 1,
    "changes": 9,
    "blob_url": "https://github.com/emervlad/smart-home-2021/blob/1ee24448f166437ed766ab6938618f3c72a142c1/new/Room.java",
    "raw_url": "https://github.com/emervlad/smart-home-2021/raw/1ee24448f166437ed766ab6938618f3c72a142c1/new/Room.java",
    "contents_url": "https://api.github.com/repos/emervlad/smart-home-2021/contents/new/Room.java?ref=1ee24448f166437ed766ab6938618f3c72a142c1",
    "patch": "@@ -2,7 +2,7 @@\n \r\n import java.util.Collection;\r\n \r\n-public class Room {\r\n+public class Room implements Actionable {\r\n     private Collection<Light> lights;\r\n     private Collection<Door> doors;\r\n     private String name;\r\n@@ -24,4 +24,11 @@ public Room(Collection<Light> lights, Collection<Door> doors, String name) {\n     public String getName() {\r\n         return name;\r\n     }\r\n+\r\n+    @Override\r\n+    public void execute(Action action) {\r\n+        action.apply(this);\r\n+        lights.forEach(light -> light.execute(action));\r\n+        doors.forEach(door -> door.execute(action));\r\n+    }\r\n }\r"
  },
  {
    "sha": "46ed5a2171638090f2ad6d0c36dc7b2bd343475c",
    "filename": "new/SmartHome.java",
    "status": "modified",
    "additions": 7,
    "deletions": 1,
    "changes": 8,
    "blob_url": "https://github.com/emervlad/smart-home-2021/blob/1ee24448f166437ed766ab6938618f3c72a142c1/new/SmartHome.java",
    "raw_url": "https://github.com/emervlad/smart-home-2021/raw/1ee24448f166437ed766ab6938618f3c72a142c1/new/SmartHome.java",
    "contents_url": "https://api.github.com/repos/emervlad/smart-home-2021/contents/new/SmartHome.java?ref=1ee24448f166437ed766ab6938618f3c72a142c1",
    "patch": "@@ -3,7 +3,7 @@\n import java.util.ArrayList;\r\n import java.util.Collection;\r\n \r\n-public class SmartHome {\r\n+public class SmartHome implements Actionable {\r\n     Collection<Room> rooms;\r\n \r\n     public SmartHome() {\r\n@@ -21,4 +21,10 @@ public void addRoom(Room room) {\n     public Collection<Room> getRooms() {\r\n         return rooms;\r\n     }\r\n+\r\n+    @Override\r\n+    public void execute(Action action) {\r\n+        action.apply(this);\r\n+        rooms.forEach(room -> room.execute(action));\r\n+    }\r\n }\r"
  }
]
