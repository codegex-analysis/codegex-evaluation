[
  {
    "sha": "5d9d2f3e3df5007f6b64bbdae7ccfd592fb47a3f",
    "filename": ".github/workflows/build.yml",
    "status": "added",
    "additions": 32,
    "deletions": 0,
    "changes": 32,
    "blob_url": "https://github.com/exxcellent/swt2-bsa-backend/blob/c84ad5e2c1f31529f8b7bec86efb449798ac73fa/.github/workflows/build.yml",
    "raw_url": "https://github.com/exxcellent/swt2-bsa-backend/raw/c84ad5e2c1f31529f8b7bec86efb449798ac73fa/.github/workflows/build.yml",
    "contents_url": "https://api.github.com/repos/exxcellent/swt2-bsa-backend/contents/.github/workflows/build.yml?ref=c84ad5e2c1f31529f8b7bec86efb449798ac73fa",
    "patch": "@@ -0,0 +1,32 @@\n+name: Build\n+on: [push, pull_request]\n+jobs:\n+  build:\n+    name: Build\n+    runs-on: ubuntu-latest\n+    steps:\n+      - uses: actions/checkout@v2\n+        with:\n+          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis\n+      - name: Set up JDK 11\n+        uses: actions/setup-java@v1\n+        with:\n+          java-version: 11\n+      - name: Cache SonarCloud packages\n+        uses: actions/cache@v1\n+        with:\n+          path: ~/.sonar/cache\n+          key: ${{ runner.os }}-sonar\n+          restore-keys: ${{ runner.os }}-sonar\n+      - name: Cache Maven packages\n+        uses: actions/cache@v1\n+        with:\n+          path: ~/.m2\n+          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}\n+          restore-keys: ${{ runner.os }}-m2\n+      - name: Build and analyze\n+        env:\n+          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any\n+          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}\n+        working-directory: ./bogenliga\n+        run: mvn clean org.jacoco:jacoco-maven-plugin:prepare-agent verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar"
  },
  {
    "sha": "9076a8f4b29c9bf0b54a4c85a4736af9e1bd829e",
    "filename": "README.md",
    "status": "modified",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/exxcellent/swt2-bsa-backend/blob/c84ad5e2c1f31529f8b7bec86efb449798ac73fa/README.md",
    "raw_url": "https://github.com/exxcellent/swt2-bsa-backend/raw/c84ad5e2c1f31529f8b7bec86efb449798ac73fa/README.md",
    "contents_url": "https://api.github.com/repos/exxcellent/swt2-bsa-backend/contents/README.md?ref=c84ad5e2c1f31529f8b7bec86efb449798ac73fa",
    "patch": "@@ -1,4 +1,3 @@\n-[![Build Status](https://travis-ci.org/exxcellent/swt2-bsa-backend.svg?branch=master)](https://travis-ci.org/exxcellent/swt2-bsa-backend)\n [![sonarcloud](https://sonarcloud.io/api/project_badges/measure?project=de.bogenliga.application&metric=alert_status)](https://sonarcloud.io/dashboard?id=de.bogenliga.application)\n [![sonarcloud_cov](https://sonarcloud.io/api/project_badges/measure?project=de.bogenliga.application&metric=coverage)](https://sonarcloud.io/dashboard?id=de.bogenliga.application)\n "
  },
  {
    "sha": "0247eebbeb814ecf16607dc907427cbe418a69e8",
    "filename": "Test",
    "status": "removed",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/exxcellent/swt2-bsa-backend/blob/b165e2c7b0f16003e2e02abd91bfad10a3c956fe/Test",
    "raw_url": "https://github.com/exxcellent/swt2-bsa-backend/raw/b165e2c7b0f16003e2e02abd91bfad10a3c956fe/Test",
    "contents_url": "https://api.github.com/repos/exxcellent/swt2-bsa-backend/contents/Test?ref=b165e2c7b0f16003e2e02abd91bfad10a3c956fe",
    "patch": "@@ -1 +0,0 @@\n-asdas"
  },
  {
    "sha": "13d5e7dd34c717e59299e28c016cc45967654f3f",
    "filename": "bogenliga/bogenliga-application/pom.xml",
    "status": "modified",
    "additions": 35,
    "deletions": 2,
    "changes": 37,
    "blob_url": "https://github.com/exxcellent/swt2-bsa-backend/blob/c84ad5e2c1f31529f8b7bec86efb449798ac73fa/bogenliga/bogenliga-application/pom.xml",
    "raw_url": "https://github.com/exxcellent/swt2-bsa-backend/raw/c84ad5e2c1f31529f8b7bec86efb449798ac73fa/bogenliga/bogenliga-application/pom.xml",
    "contents_url": "https://api.github.com/repos/exxcellent/swt2-bsa-backend/contents/bogenliga/bogenliga-application/pom.xml?ref=c84ad5e2c1f31529f8b7bec86efb449798ac73fa",
    "patch": "@@ -30,7 +30,11 @@\n             <artifactId>bogenliga-business-logic</artifactId>\n             <version>${project.version}</version>\n         </dependency>\n-\n+        <dependency>\n+            <groupId>de.bogenliga</groupId>\n+            <artifactId>bogenliga-common</artifactId>\n+            <version>${project.version}</version>\n+        </dependency>       \n         <dependency>\n             <groupId>org.springframework.boot</groupId>\n             <artifactId>spring-boot-starter-web</artifactId>\n@@ -134,6 +138,16 @@\n     </profiles>\n \n     <build>\n+        <pluginManagement>\n+            <plugins>\n+                <plugin>\n+                    <groupId>org.jacoco</groupId>\n+                    <artifactId>jacoco-maven-plugin</artifactId>\n+                    <version>0.8.6</version>\n+                </plugin>\n+            </plugins>\n+        </pluginManagement>\n+        \n         <plugins>\n             <plugin>\n                 <groupId>org.springframework.boot</groupId>\n@@ -146,7 +160,6 @@\n                     </execution>\n                 </executions>\n             </plugin>\n-\n             <plugin>\n                 <groupId>org.codehaus.mojo</groupId>\n                 <artifactId>cobertura-maven-plugin</artifactId>\n@@ -200,6 +213,26 @@\n                 </executions>\n             </plugin>\n \n+            <plugin>\n+                <groupId>org.jacoco</groupId>\n+                <artifactId>jacoco-maven-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <id>prepare-agent</id>\n+                        <goals>\n+                            <goal>prepare-agent</goal>\n+                        </goals>\n+                    </execution>\n+                    <execution>\n+                        <id>report-aggregate</id>\n+                        <phase>verify</phase>\n+                        <goals>\n+                            <goal>report-aggregate</goal>\n+                        </goals>\n+                    </execution>\n+                </executions>\n+            </plugin>\n+\n             <!-- database migration -->\n             <plugin>\n                 <groupId>org.flywaydb</groupId>"
  },
  {
    "sha": "d5ebc34210096ffc2a8efa797bc4b4ab49826e2e",
    "filename": "bogenliga/bogenliga-application/src/main/java/de/bogenliga/application/services/v1/kampfrichter/service/KampfrichterService.java",
    "status": "modified",
    "additions": 54,
    "deletions": 56,
    "changes": 110,
    "blob_url": "https://github.com/exxcellent/swt2-bsa-backend/blob/c84ad5e2c1f31529f8b7bec86efb449798ac73fa/bogenliga/bogenliga-application/src/main/java/de/bogenliga/application/services/v1/kampfrichter/service/KampfrichterService.java",
    "raw_url": "https://github.com/exxcellent/swt2-bsa-backend/raw/c84ad5e2c1f31529f8b7bec86efb449798ac73fa/bogenliga/bogenliga-application/src/main/java/de/bogenliga/application/services/v1/kampfrichter/service/KampfrichterService.java",
    "contents_url": "https://api.github.com/repos/exxcellent/swt2-bsa-backend/contents/bogenliga/bogenliga-application/src/main/java/de/bogenliga/application/services/v1/kampfrichter/service/KampfrichterService.java?ref=c84ad5e2c1f31529f8b7bec86efb449798ac73fa",
    "patch": "@@ -51,7 +51,6 @@\n @CrossOrigin\n @RequestMapping(\"v1/kampfrichter\")\n public class KampfrichterService implements ServiceFacade {\n-    // TODO: Implement this entire class\n     private static final String PRECONDITION_MSG_KAMPFRICHTER = \"KampfrichterDO must not be null\";\n     private static final String PRECONDITION_MSG_KAMPFRICHTER_BENUTZER_ID = \"KampfrichterBenutzerID must not be negative and must not be null\";\n     private static final String PRECONDITION_MSG_KAMPFRICHTER_WETTKAMPF_ID = \"KampfrichterWettkampfID must not be negative and must not be null\";\n@@ -99,81 +98,80 @@ public KampfrichterDTO create(@RequestBody final KampfrichterDTO kampfrichterDTO\n         // TODO: What does this do and why do we need it?\n //        final long userId = UserProvider.getCurrentUserId(principal);\n \n-        final KampfrichterDO savedKampfrichterDO = kampfrichterComponent.create(newKampfrichterDO, newKampfrichterDO.getUserId());\n+        final KampfrichterDO savedKampfrichterDO = kampfrichterComponent.create(newKampfrichterDO,\n+                newKampfrichterDO.getUserId());\n         return KampfrichterDTOMapper.toDTO.apply(savedKampfrichterDO);\n     }\n \n \n-    @RequestMapping(method = RequestMethod.PUT,\n-            consumes = MediaType.APPLICATION_JSON_VALUE,\n-            produces = MediaType.APPLICATION_JSON_VALUE)\n-    @RequiresOnePermissions(perm = {UserPermission.CAN_MODIFY_WETTKAMPF, UserPermission.CAN_MODIFY_MY_WETTKAMPF})\n-    public KampfrichterDTO update(@RequestBody final KampfrichterDTO kampfrichterDTO,\n-                                  final Principal principal) throws NoPermissionException {\n-        System.out.println(\"KAMPFRICHTER_DTO:\\n\" + kampfrichterDTO.toString());\n-        checkPreconditions(kampfrichterDTO);\n-\n-        LOG.debug(\n-                \"Received 'update' request with userID '{}', wettkampfID '{}', leitend'{}'\",\n-                kampfrichterDTO.getUserID(),\n-                kampfrichterDTO.getWettkampfID(),\n-                kampfrichterDTO.getLeitend());\n-\n-//        if (this.hasPermission(UserPermission.CAN_MODIFY_WETTKAMPF) || this.hasSpecificPermission(\n-//                UserPermission.CAN_MODIFY_MY_WETTKAMPF, kampfrichterDTO.getUserId())) {\n+//    @RequestMapping(method = RequestMethod.PUT,\n+//            consumes = MediaType.APPLICATION_JSON_VALUE,\n+//            produces = MediaType.APPLICATION_JSON_VALUE)\n+//    @RequiresOnePermissions(perm = {UserPermission.CAN_MODIFY_WETTKAMPF, UserPermission.CAN_MODIFY_MY_WETTKAMPF})\n+//    public KampfrichterDTO update(@RequestBody final KampfrichterDTO kampfrichterDTO,\n+//                                  final Principal principal) throws NoPermissionException {\n+//        System.out.println(\"KAMPFRICHTER_DTO:\\n\" + kampfrichterDTO.toString());\n+//        checkPreconditions(kampfrichterDTO);\n //\n-//        } else {\n-//            throw new NoPermissionException();\n-//        }\n-        final KampfrichterDO newKampfrichterDO = KampfrichterDTOMapper.toDO.apply(kampfrichterDTO);\n-\n-        // TODO: What does this do and why do we need it?\n-//        final long userId = UserProvider.getCurrentUserId(principal);\n-//        System.out.println(\"userId:\");\n-//        System.out.println(userId);\n+//        LOG.debug(\n+//                \"Received 'update' request with userID '{}', wettkampfID '{}', leitend'{}'\",\n+//                kampfrichterDTO.getUserID(),\n+//                kampfrichterDTO.getWettkampfID(),\n+//                kampfrichterDTO.getLeitend());\n+//\n+////        if (this.hasPermission(UserPermission.CAN_MODIFY_WETTKAMPF) || this.hasSpecificPermission(\n+////                UserPermission.CAN_MODIFY_MY_WETTKAMPF, kampfrichterDTO.getUserId())) {\n+////\n+////        } else {\n+////            throw new NoPermissionException();\n+////        }\n+//        final KampfrichterDO newKampfrichterDO = KampfrichterDTOMapper.toDO.apply(kampfrichterDTO);\n+//\n+//        // TODO: What does this do and why do we need it?\n+////        final long userId = UserProvider.getCurrentUserId(principal);\n+////        System.out.println(\"userId:\");\n+////        System.out.println(userId);\n+//\n+//        final KampfrichterDO updatedKampfrichterDO = kampfrichterComponent.update(newKampfrichterDO,\n+//                newKampfrichterDO.getUserId());\n+//        return KampfrichterDTOMapper.toDTO.apply(updatedKampfrichterDO);\n+//    }\n \n-        final KampfrichterDO updatedKampfrichterDO = kampfrichterComponent.update(newKampfrichterDO, newKampfrichterDO.getUserId());\n-        return KampfrichterDTOMapper.toDTO.apply(updatedKampfrichterDO);\n-    }\n \n     /**\n      * Delete-Method removes an entry from the database\n      *\n-     * @param id\n+     * @param userID\n      * @param principal\n      */\n-    @RequestMapping(value = \"{id}\", method = RequestMethod.DELETE)\n-    @RequiresPermission(UserPermission.CAN_DELETE_STAMMDATEN)\n-    public void delete(@PathVariable(\"id\") final long id, final Principal principal) {\n-        Preconditions.checkArgument(id >= 0, \"ID must not be negative.\");\n-\n-        LOG.debug(\"Receive 'delete' request with id '{}'\", id);\n-\n-        // allow value == null, the value will be ignored\n-        final KampfrichterDO kampfrichterDO = new KampfrichterDO(id, 999L, false);\n-//        final long userId = UserProvider.getCurrentUserId(principal);\n-\n-        kampfrichterComponent.delete(kampfrichterDO, id);\n-    }\n-\n-\n-    // TODO: See if this works\n-    @RequestMapping(method = RequestMethod.DELETE,\n-            consumes = MediaType.APPLICATION_JSON_VALUE)\n-    @RequiresPermission(UserPermission.CAN_DELETE_STAMMDATEN)\n-    public void testDelete(@RequestBody final KampfrichterDTO kampfrichterDTO,\n-                           final Principal principal) {\n+//    @RequestMapping(value = \"{id}\", method = RequestMethod.DELETE)\n+//    @RequiresPermission(UserPermission.CAN_DELETE_STAMMDATEN)\n+//    public void delete(@PathVariable(\"id\") final long id, final Principal principal) {\n //        Preconditions.checkArgument(id >= 0, \"ID must not be negative.\");\n //\n //        LOG.debug(\"Receive 'delete' request with id '{}'\", id);\n //\n //        // allow value == null, the value will be ignored\n //        final KampfrichterDO kampfrichterDO = new KampfrichterDO(id, 999L, false);\n-//        final long userId = UserProvider.getCurrentUserId(principal);\n+////        final long userId = UserProvider.getCurrentUserId(principal);\n+//\n+//        kampfrichterComponent.delete(kampfrichterDO, id);\n+//    }\n \n-        final KampfrichterDO kampfrichterDO = KampfrichterDTOMapper.toDO.apply(kampfrichterDTO);\n+    @RequestMapping(value = \"{userID}/{wettkampfID}\", method = RequestMethod.DELETE)\n+    @RequiresPermission(UserPermission.CAN_DELETE_STAMMDATEN)\n+    public void delete(@PathVariable(\"userID\") final long userID, @PathVariable(\"wettkampfID\") final long wettkampfID,\n+                       final Principal principal) {\n+        Preconditions.checkArgument(userID >= 0, \"User-ID must not be negative.\");\n+        Preconditions.checkArgument(wettkampfID >= 0, \"Wettkampf-ID must not be negative.\");\n+\n+        LOG.debug(\"Receive 'delete' request with user-ID '{}' and wettkampf-ID '{}'\", userID, wettkampfID);\n+\n+        // allow value == null, the value will be ignored\n+        final KampfrichterDO kampfrichterDO = new KampfrichterDO(userID, wettkampfID, false);\n+//        final long userId = UserProvider.getCurrentUserId(principal);\n \n-        kampfrichterComponent.testDelete(kampfrichterDO);\n+        kampfrichterComponent.delete(kampfrichterDO, userID);\n     }\n \n "
  },
  {
    "sha": "82d417a0d0f96e27e7de6fb1210d9a4cb79f185f",
    "filename": "bogenliga/bogenliga-application/src/main/java/de/bogenliga/application/services/v1/user/service/UserService.java",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/exxcellent/swt2-bsa-backend/blob/c84ad5e2c1f31529f8b7bec86efb449798ac73fa/bogenliga/bogenliga-application/src/main/java/de/bogenliga/application/services/v1/user/service/UserService.java",
    "raw_url": "https://github.com/exxcellent/swt2-bsa-backend/raw/c84ad5e2c1f31529f8b7bec86efb449798ac73fa/bogenliga/bogenliga-application/src/main/java/de/bogenliga/application/services/v1/user/service/UserService.java",
    "contents_url": "https://api.github.com/repos/exxcellent/swt2-bsa-backend/contents/bogenliga/bogenliga-application/src/main/java/de/bogenliga/application/services/v1/user/service/UserService.java?ref=c84ad5e2c1f31529f8b7bec86efb449798ac73fa",
    "patch": "@@ -21,6 +21,7 @@\n import de.bogenliga.application.services.v1.user.model.*;\n import de.bogenliga.application.springconfiguration.security.WebSecurityConfiguration;\n import de.bogenliga.application.springconfiguration.security.jsonwebtoken.JwtTokenProvider;\n+import de.bogenliga.application.springconfiguration.security.permissions.RequiresOnePermissions;\n import de.bogenliga.application.springconfiguration.security.permissions.RequiresOwnIdentity;\n import de.bogenliga.application.springconfiguration.security.permissions.RequiresPermission;\n import de.bogenliga.application.springconfiguration.security.types.UserPermission;\n@@ -433,7 +434,7 @@ public UserDTO resetPassword(final HttpServletRequest requestWithHeader,\n             value = \"/create\",\n             consumes = MediaType.APPLICATION_JSON_VALUE,\n             produces = MediaType.APPLICATION_JSON_VALUE)\n-    @RequiresPermission(UserPermission.CAN_CREATE_SYSTEMDATEN)\n+    @RequiresOnePermissions(perm = {UserPermission.CAN_CREATE_SYSTEMDATEN, UserPermission.CAN_CREATE_SYSTEMDATEN_LIGALEITER})\n     public UserDTO create(final HttpServletRequest requestWithHeader,\n                           @RequestBody final UserCredentialsDTO userCredentialsDTO) {\n "
  },
  {
    "sha": "fecb506dcdec0597503e317d12df8aa7d3d2d6a7",
    "filename": "bogenliga/bogenliga-application/src/main/java/de/bogenliga/application/services/v1/vereine/mapper/VereineDTOMapper.java",
    "status": "modified",
    "additions": 4,
    "deletions": 2,
    "changes": 6,
    "blob_url": "https://github.com/exxcellent/swt2-bsa-backend/blob/c84ad5e2c1f31529f8b7bec86efb449798ac73fa/bogenliga/bogenliga-application/src/main/java/de/bogenliga/application/services/v1/vereine/mapper/VereineDTOMapper.java",
    "raw_url": "https://github.com/exxcellent/swt2-bsa-backend/raw/c84ad5e2c1f31529f8b7bec86efb449798ac73fa/bogenliga/bogenliga-application/src/main/java/de/bogenliga/application/services/v1/vereine/mapper/VereineDTOMapper.java",
    "contents_url": "https://api.github.com/repos/exxcellent/swt2-bsa-backend/contents/bogenliga/bogenliga-application/src/main/java/de/bogenliga/application/services/v1/vereine/mapper/VereineDTOMapper.java?ref=c84ad5e2c1f31529f8b7bec86efb449798ac73fa",
    "patch": "@@ -25,13 +25,14 @@\n         final String regionName = vereinDO.getRegionName();\n         final String vereinWebsite = vereinDO.getWebsite();\n         final String vereinDescription = vereinDO.getDescription();\n+        final String vereinIcon = vereinDO.getIcon();\n         final Long createdByUserId = vereinDO.getCreatedByUserId();\n         final OffsetDateTime createdAtUtc = vereinDO.getCreatedAtUtc();\n         final Long version = vereinDO.getVersion();\n \n \n         return new VereineDTO(vereinId, vereinName, vereinIdentifier, regionId, regionName,\n-                              vereinWebsite, vereinDescription, createdAtUtc,createdByUserId, version);\n+                              vereinWebsite, vereinDescription, vereinIcon, createdAtUtc,createdByUserId, version);\n     };\n \n     /**\n@@ -45,12 +46,13 @@\n         final Long regionId = dto.getRegionId();\n         final String vereinWebsite = dto.getWebsite();\n         final String vereinDescription = dto.getDescription();\n+        final String vereinIcon = dto.getIcon();\n         final Long createdByUserId = dto.getCreatedByUserId();\n         final OffsetDateTime createdAtUtc = dto.getCreatedAtUtc();\n         final Long version = dto.getVersion();\n \n         return new VereinDO(vereinId, vereinName, vereinIdentifier, regionId, vereinWebsite,\n-                            vereinDescription, createdAtUtc, createdByUserId, version);\n+                            vereinDescription, vereinIcon, createdAtUtc, createdByUserId, version);\n     };\n \n     /**"
  },
  {
    "sha": "a8bfa7a508e206e589a2174ee12fc71521d6d520",
    "filename": "bogenliga/bogenliga-application/src/main/java/de/bogenliga/application/services/v1/vereine/model/VereineDTO.java",
    "status": "modified",
    "additions": 11,
    "deletions": 2,
    "changes": 13,
    "blob_url": "https://github.com/exxcellent/swt2-bsa-backend/blob/c84ad5e2c1f31529f8b7bec86efb449798ac73fa/bogenliga/bogenliga-application/src/main/java/de/bogenliga/application/services/v1/vereine/model/VereineDTO.java",
    "raw_url": "https://github.com/exxcellent/swt2-bsa-backend/raw/c84ad5e2c1f31529f8b7bec86efb449798ac73fa/bogenliga/bogenliga-application/src/main/java/de/bogenliga/application/services/v1/vereine/model/VereineDTO.java",
    "contents_url": "https://api.github.com/repos/exxcellent/swt2-bsa-backend/contents/bogenliga/bogenliga-application/src/main/java/de/bogenliga/application/services/v1/vereine/model/VereineDTO.java?ref=c84ad5e2c1f31529f8b7bec86efb449798ac73fa",
    "patch": "@@ -18,6 +18,7 @@\n     private String regionName;\n     private String website;\n     private String description;\n+    private String icon;\n     private OffsetDateTime createdAtUtc;\n     private Long createdByUserId;\n     private Long version;\n@@ -46,7 +47,7 @@ public VereineDTO() {\n      * @param version\n      */\n     public VereineDTO(Long id, String name, String identifier, Long regionId, String regionName,\n-                      String website, String description, OffsetDateTime createdAtUtc,\n+                      String website, String description, String icon, OffsetDateTime createdAtUtc,\n                       Long createdByUserId, Long version) {\n         this.id = id;\n         this.name = name;\n@@ -55,20 +56,22 @@ public VereineDTO(Long id, String name, String identifier, Long regionId, String\n         this.regionName = regionName;\n         this.website = website;\n         this.description = description;\n+        this.icon = icon;\n         this.createdAtUtc = createdAtUtc;\n         this.createdByUserId = createdByUserId;\n         this.version = version;\n     }\n \n     public VereineDTO(Long id, String name, String identifier, Long regionId,\n-                      String website, String description, OffsetDateTime createdAtUtc,\n+                      String website, String description, String icon, OffsetDateTime createdAtUtc,\n                       Long createdByUserId, Long version) {\n         this.id = id;\n         this.name = name;\n         this.identifier = identifier;\n         this.regionId = regionId;\n         this.website = website;\n         this.description = description;\n+        this.icon = icon;\n         this.createdAtUtc = createdAtUtc;\n         this.createdByUserId = createdByUserId;\n         this.version = version;\n@@ -136,6 +139,12 @@ public void setRegionName(String regionName) {\n     public void setDescription(String description) { this.description = description; }\n \n \n+    public String getIcon() { return icon; }\n+\n+\n+    public void setIcon(String icon) { this.icon = icon; }\n+\n+\n     public OffsetDateTime getCreatedAtUtc() {\n         return createdAtUtc;\n     }"
  },
  {
    "sha": "7ff3edd76e2048519474b703ecbaaa74447fcb93",
    "filename": "bogenliga/bogenliga-application/src/main/java/de/bogenliga/application/services/v1/vereine/service/VereineService.java",
    "status": "modified",
    "additions": 8,
    "deletions": 17,
    "changes": 25,
    "blob_url": "https://github.com/exxcellent/swt2-bsa-backend/blob/c84ad5e2c1f31529f8b7bec86efb449798ac73fa/bogenliga/bogenliga-application/src/main/java/de/bogenliga/application/services/v1/vereine/service/VereineService.java",
    "raw_url": "https://github.com/exxcellent/swt2-bsa-backend/raw/c84ad5e2c1f31529f8b7bec86efb449798ac73fa/bogenliga/bogenliga-application/src/main/java/de/bogenliga/application/services/v1/vereine/service/VereineService.java",
    "contents_url": "https://api.github.com/repos/exxcellent/swt2-bsa-backend/contents/bogenliga/bogenliga-application/src/main/java/de/bogenliga/application/services/v1/vereine/service/VereineService.java?ref=c84ad5e2c1f31529f8b7bec86efb449798ac73fa",
    "patch": "@@ -66,7 +66,6 @@\n      *\n      * @param vereinComponent to handle the database CRUD requests\n      */\n-\n     @Autowired\n     public VereineService(final VereinComponent vereinComponent, final JwtTokenProvider jwtTokenProvider,\n                           final DsbMitgliedComponent dsbMitgliedComponent, final UserComponent userComponent) {\n@@ -76,7 +75,6 @@ public VereineService(final VereinComponent vereinComponent, final JwtTokenProvi\n         this.dsbMitgliedComponent = dsbMitgliedComponent;\n     }\n \n-\n     /**\n      * I return all the teams (Vereine) of the database.\n      *\n@@ -90,7 +88,6 @@ public VereineService(final VereinComponent vereinComponent, final JwtTokenProvi\n         return vereinDOList.stream().map(VereineDTOMapper.toDTO).collect(Collectors.toList());\n     }\n \n-\n     /**\n      * I return the verein Entry of the database with a specific id\n      *\n@@ -108,14 +105,12 @@ public VereineDTO findById(@PathVariable(\"id\") final long id) {\n         return VereineDTOMapper.toDTO.apply(vereinDO);\n     }\n \n-\n-/*\n+    /**\n      * I persist a newer version of the dsbMitglied in the database.\n      * <p>\n      * You are only able to modify the Verein, if you have the explicit permission to Modify it or if you are the\n      * Mannschaftsführer/Sportleiter of the Verein.\n      */\n-\n     @RequestMapping(method = RequestMethod.PUT,\n             consumes = MediaType.APPLICATION_JSON_VALUE,\n             produces = MediaType.APPLICATION_JSON_VALUE)\n@@ -127,13 +122,14 @@ public VereineDTO update(@RequestBody final VereineDTO vereineDTO,\n \n         LOG.debug(\n                 \"Receive  'update' request with id '{}', name '{}', dsb_identifier '{}',\" +\n-                \"region_id '{}', website '{}', description '{}'\",\n+                \"region_id '{}', website '{}', description '{}', icon '{}'\",\n                 vereineDTO.getId(),\n                 vereineDTO.getName(),\n                 vereineDTO.getIdentifier(),\n                 vereineDTO.getRegionId(),\n                 vereineDTO.getWebsite(),\n-                vereineDTO.getDescription());\n+                vereineDTO.getDescription(),\n+                vereineDTO.getIcon());\n \n         if (this.hasPermissions(UserPermission.CAN_MODIFY_STAMMDATEN)) {\n         } else if (this.hasSpecificPermission(UserPermission.CAN_MODIFY_MY_VEREIN, vereineDTO.getId())) {\n@@ -151,7 +147,6 @@ public VereineDTO update(@RequestBody final VereineDTO vereineDTO,\n         return VereineDTOMapper.toDTO.apply(updateVereinDO);\n     }\n \n-\n     /**\n      * I delete an existing Verein entry from the DB.\n      */\n@@ -167,7 +162,6 @@ public void delete(@PathVariable(\"id\") final long id, final Principal principal)\n         vereinComponent.delete(vereinDO, userId);\n     }\n \n-\n     /**\n      * I persist a new verein and return this verein entry.\n      *\n@@ -176,7 +170,6 @@ public void delete(@PathVariable(\"id\") final long id, final Principal principal)\n      *\n      * @return list of {@link VereineDTO} as JSON\n      */\n-\n     @RequestMapping(method = RequestMethod.POST,\n             consumes = MediaType.APPLICATION_JSON_VALUE,\n             produces = MediaType.APPLICATION_JSON_VALUE)\n@@ -186,13 +179,14 @@ public VereineDTO create(@RequestBody final VereineDTO vereineDTO, final Princip\n         final long userId = UserProvider.getCurrentUserId(principal);\n \n         LOG.debug(\n-                \"Receive 'create' request with name '{}', identifier '{}',\" +\n-                \"region id '{}', website '{}', description '{}' version '{}', createdBy '{}'\",\n+                \"Receive 'create' request with name '{}', identifier '{}', region id '{}', website '{}', \" +\n+                        \"description '{}', icon '{}', version '{}', createdBy '{}'\",\n                 vereineDTO.getName(),\n                 vereineDTO.getIdentifier(),\n                 vereineDTO.getRegionId(),\n                 vereineDTO.getWebsite(),\n                 vereineDTO.getDescription(),\n+                vereineDTO.getIcon(),\n                 vereineDTO.getVersion(),\n                 userId);\n \n@@ -202,7 +196,6 @@ public VereineDTO create(@RequestBody final VereineDTO vereineDTO, final Princip\n         return VereineDTOMapper.toDTO.apply(persistedVereinDO);\n     }\n \n-\n     private void checkPreconditions(@RequestBody final VereineDTO vereinDTO) {\n         Preconditions.checkNotNull(vereinDTO, PRECONDITION_MSG_VEREIN);\n         Preconditions.checkNotNull(vereinDTO.getName(), PRECONDITION_MSG_NAME);\n@@ -212,7 +205,6 @@ private void checkPreconditions(@RequestBody final VereineDTO vereinDTO) {\n         Preconditions.checkArgument(vereinDTO.getRegionId() >= 0, PRECONDITION_MSG_REGION_ID_NOT_NEG);\n     }\n \n-\n     /**\n      * method to check, if a user has a Specific permission with the matching parameters\n      *\n@@ -247,7 +239,6 @@ boolean hasSpecificPermission(UserPermission toTest, Long vereinsId) {\n         return result;\n     }\n \n-\n     boolean hasPermissions(UserPermission toTest) {\n         boolean result = false;\n         // get current http request from thread\n@@ -271,4 +262,4 @@ boolean hasPermissions(UserPermission toTest) {\n         }\n         return result;\n     }\n-}\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "5c754a4ee5762a9a28f1fcc73a579d9cad3fef77",
    "filename": "bogenliga/bogenliga-application/src/main/java/de/bogenliga/application/services/v1/wettkampf/mapper/WettkampfDTOMapper.java",
    "status": "modified",
    "additions": 2,
    "deletions": 4,
    "changes": 6,
    "blob_url": "https://github.com/exxcellent/swt2-bsa-backend/blob/c84ad5e2c1f31529f8b7bec86efb449798ac73fa/bogenliga/bogenliga-application/src/main/java/de/bogenliga/application/services/v1/wettkampf/mapper/WettkampfDTOMapper.java",
    "raw_url": "https://github.com/exxcellent/swt2-bsa-backend/raw/c84ad5e2c1f31529f8b7bec86efb449798ac73fa/bogenliga/bogenliga-application/src/main/java/de/bogenliga/application/services/v1/wettkampf/mapper/WettkampfDTOMapper.java",
    "contents_url": "https://api.github.com/repos/exxcellent/swt2-bsa-backend/contents/bogenliga/bogenliga-application/src/main/java/de/bogenliga/application/services/v1/wettkampf/mapper/WettkampfDTOMapper.java?ref=c84ad5e2c1f31529f8b7bec86efb449798ac73fa",
    "patch": "@@ -33,12 +33,11 @@\n         final Long wettkampfDisziplinId = wettkampfDO.getWettkampfDisziplinId();\n         final Long wettkampfTypId = wettkampfDO.getWettkampfTypId();\n         final Long version = wettkampfDO.getVersion();\n-        final Long kampfrichterID = wettkampfDO.getKampfrichterID();\n         final Long wettkampfAusrichter = wettkampfDO.getWettkampfAusrichter();\n \n         return new WettkampfDTO(wettkampfId, wettkampfVeranstaltungsId, wettkampfDatum, wettkampfStrasse,\n                 wettkampfPlz, wettkampfOrtsname, wettkampfOrtsinfo, wettkampfBeginn, wettkampfTag,\n-                wettkampfDisziplinId, wettkampfTypId, version, kampfrichterID, wettkampfAusrichter);\n+                wettkampfDisziplinId, wettkampfTypId, version, wettkampfAusrichter);\n     };\n \n \n@@ -59,12 +58,11 @@\n         final Long wettkampfDisziplinId = wettkampfDTO.getWettkampfDisziplinId();\n         final Long wettkampfTypId = wettkampfDTO.getWettkampfTypId();\n         final Long version = wettkampfDTO.getVersion();\n-        final Long kampfrichterID = wettkampfDTO.getKampfrichterID();\n         final Long wettkampfAusrichter = wettkampfDTO.getWettkampfAusrichter();\n \n         return new WettkampfDO(wettkampfId, wettkampfVeranstaltungsId, wettkampfDatum, wettkampfStrasse,\n                 wettkampfPlz, wettkampfOrtsname, wettkampfOrtsinfo, wettkampfBeginn, wettkampfTag,\n-                wettkampfDisziplinId, wettkampfTypId, version, kampfrichterID, wettkampfAusrichter);\n+                wettkampfDisziplinId, wettkampfTypId, version, wettkampfAusrichter);\n     };\n \n "
  },
  {
    "sha": "3a0d323c788fafbc01d2d95432248c943a8f6ff0",
    "filename": "bogenliga/bogenliga-application/src/main/java/de/bogenliga/application/services/v1/wettkampf/model/WettkampfDTO.java",
    "status": "modified",
    "additions": 1,
    "deletions": 14,
    "changes": 15,
    "blob_url": "https://github.com/exxcellent/swt2-bsa-backend/blob/c84ad5e2c1f31529f8b7bec86efb449798ac73fa/bogenliga/bogenliga-application/src/main/java/de/bogenliga/application/services/v1/wettkampf/model/WettkampfDTO.java",
    "raw_url": "https://github.com/exxcellent/swt2-bsa-backend/raw/c84ad5e2c1f31529f8b7bec86efb449798ac73fa/bogenliga/bogenliga-application/src/main/java/de/bogenliga/application/services/v1/wettkampf/model/WettkampfDTO.java",
    "contents_url": "https://api.github.com/repos/exxcellent/swt2-bsa-backend/contents/bogenliga/bogenliga-application/src/main/java/de/bogenliga/application/services/v1/wettkampf/model/WettkampfDTO.java?ref=c84ad5e2c1f31529f8b7bec86efb449798ac73fa",
    "patch": "@@ -25,7 +25,6 @@\n     private Long wettkampfDisziplinId;\n     private Long wettkampfTypId;\n     private Long version;\n-    private Long kampfrichterID;\n     private Long wettkampfAusrichter;\n \n \n@@ -34,7 +33,7 @@ public WettkampfDTO(Long wettkampfId, Long wettkampfVeranstaltungsId, Date wettk\n                         String wettkampfPlz, String wettkampfOrtsname, String wettkampfOrtsinfo,\n                         String wettkampfBeginn, Long wettkampfTag,\n                         Long wettkampfDisziplinId, Long wettkampfTypId,\n-                        Long version, Long kampfrichterID, Long wettkampfAusrichter) {\n+                        Long version, Long wettkampfAusrichter) {\n \n         this.setId(wettkampfId);\n         this.setwettkampfVeranstaltungsId(wettkampfVeranstaltungsId);\n@@ -48,7 +47,6 @@ public WettkampfDTO(Long wettkampfId, Long wettkampfVeranstaltungsId, Date wettk\n         this.setWettkampfDisziplinId(wettkampfDisziplinId);\n         this.setWettkampfTypId(wettkampfTypId);\n         this.setVersion(version);\n-        this.setKampfrichterID(kampfrichterID);\n         this.setWettkampfAusrichter(wettkampfAusrichter);\n \n     }\n@@ -175,16 +173,6 @@ public void setVersion(Long version) {\n     }\n \n \n-    public Long getKampfrichterID() {\n-        return this.kampfrichterID;\n-    }\n-\n-\n-    public void setKampfrichterID(Long kampfrichterID) {\n-        this.kampfrichterID = kampfrichterID;\n-    }\n-\n-\n     public Long getWettkampfAusrichter() {\n         return wettkampfAusrichter;\n     }\n@@ -210,7 +198,6 @@ public String toString() {\n                 \", wettkampfDisziplinId='\" + this.wettkampfDisziplinId + '\\'' +\n                 \", wettkampfTypId='\" + this.wettkampfTypId + '\\'' +\n                 \", version='\" + this.version + '\\'' +\n-                \", kampfrichterID='\" + this.kampfrichterID + '\\'' +\n                 \", wettkampfAusrichter='\" + this.wettkampfAusrichter +\n                 \"}\";\n     }"
  },
  {
    "sha": "9086c6e1ff2d788f8c0df860f1e0c9ae607ac364",
    "filename": "bogenliga/bogenliga-application/src/main/java/de/bogenliga/application/springconfiguration/security/types/UserPermission.java",
    "status": "modified",
    "additions": 6,
    "deletions": 1,
    "changes": 7,
    "blob_url": "https://github.com/exxcellent/swt2-bsa-backend/blob/c84ad5e2c1f31529f8b7bec86efb449798ac73fa/bogenliga/bogenliga-application/src/main/java/de/bogenliga/application/springconfiguration/security/types/UserPermission.java",
    "raw_url": "https://github.com/exxcellent/swt2-bsa-backend/raw/c84ad5e2c1f31529f8b7bec86efb449798ac73fa/bogenliga/bogenliga-application/src/main/java/de/bogenliga/application/springconfiguration/security/types/UserPermission.java",
    "contents_url": "https://api.github.com/repos/exxcellent/swt2-bsa-backend/contents/bogenliga/bogenliga-application/src/main/java/de/bogenliga/application/springconfiguration/security/types/UserPermission.java?ref=c84ad5e2c1f31529f8b7bec86efb449798ac73fa",
    "patch": "@@ -160,7 +160,12 @@\n \n     CAN_DELETE_MANNSCHAFT,\n     CAN_MODIFY_MANNSCHAFT,\n-    CAN_MODIFY_MY_WETTKAMPF\n+    CAN_MODIFY_MY_WETTKAMPF,\n+\n+    CAN_MODIFY_SYSTEMDATEN_LIGALEITER,\n+    CAN_CREATE_SYSTEMDATEN_LIGALEITER,\n+    CAN_CREATE_STAMMDATEN_LIGALEITER,\n+    CAN_MODIFY_STAMMDATEN_LIGALEITER\n     ;\n \n "
  },
  {
    "sha": "57b98412f4bd3c7920c893ae5d64811d0aebaa19",
    "filename": "bogenliga/bogenliga-application/src/main/resources/db/migration/DEV/V3_0__alter_verein.sql",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/exxcellent/swt2-bsa-backend/blob/c84ad5e2c1f31529f8b7bec86efb449798ac73fa/bogenliga/bogenliga-application/src/main/resources/db/migration/DEV/V3_0__alter_verein.sql",
    "raw_url": "https://github.com/exxcellent/swt2-bsa-backend/raw/c84ad5e2c1f31529f8b7bec86efb449798ac73fa/bogenliga/bogenliga-application/src/main/resources/db/migration/DEV/V3_0__alter_verein.sql",
    "contents_url": "https://api.github.com/repos/exxcellent/swt2-bsa-backend/contents/bogenliga/bogenliga-application/src/main/resources/db/migration/DEV/V3_0__alter_verein.sql?ref=c84ad5e2c1f31529f8b7bec86efb449798ac73fa",
    "patch": "@@ -1,2 +1,3 @@\n ALTER TABLE verein ADD COLUMN verein_website varchar(200);\n ALTER TABLE verein ADD COLUMN verein_description varchar(300);\n+ALTER TABLE verein ADD COLUMN verein_icon varchar(10485760);"
  },
  {
    "sha": "611b9bbb9bfac7833a67ec2917df9b33b9a706e1",
    "filename": "bogenliga/bogenliga-application/src/main/resources/db/migration/LOCAL/V2_0__klasse_alter.sql",
    "status": "removed",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/exxcellent/swt2-bsa-backend/blob/b165e2c7b0f16003e2e02abd91bfad10a3c956fe/bogenliga/bogenliga-application/src/main/resources/db/migration/LOCAL/V2_0__klasse_alter.sql",
    "raw_url": "https://github.com/exxcellent/swt2-bsa-backend/raw/b165e2c7b0f16003e2e02abd91bfad10a3c956fe/bogenliga/bogenliga-application/src/main/resources/db/migration/LOCAL/V2_0__klasse_alter.sql",
    "contents_url": "https://api.github.com/repos/exxcellent/swt2-bsa-backend/contents/bogenliga/bogenliga-application/src/main/resources/db/migration/LOCAL/V2_0__klasse_alter.sql?ref=b165e2c7b0f16003e2e02abd91bfad10a3c956fe",
    "patch": "@@ -1 +0,0 @@\n-ALTER TABLE klasse ALTER COLUMN klasse_nr TYPE NUMERIC(3);"
  },
  {
    "sha": "1338de6d46836ed603ff4fc43988cb7dce189545",
    "filename": "bogenliga/bogenliga-application/src/main/resources/db/migration/LOCAL/V3_0__alter_verein.sql",
    "status": "modified",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/exxcellent/swt2-bsa-backend/blob/c84ad5e2c1f31529f8b7bec86efb449798ac73fa/bogenliga/bogenliga-application/src/main/resources/db/migration/LOCAL/V3_0__alter_verein.sql",
    "raw_url": "https://github.com/exxcellent/swt2-bsa-backend/raw/c84ad5e2c1f31529f8b7bec86efb449798ac73fa/bogenliga/bogenliga-application/src/main/resources/db/migration/LOCAL/V3_0__alter_verein.sql",
    "contents_url": "https://api.github.com/repos/exxcellent/swt2-bsa-backend/contents/bogenliga/bogenliga-application/src/main/resources/db/migration/LOCAL/V3_0__alter_verein.sql?ref=c84ad5e2c1f31529f8b7bec86efb449798ac73fa",
    "patch": "@@ -1,3 +1,6 @@\n ALTER TABLE verein ADD COLUMN verein_website varchar(200);\n ALTER TABLE verein ADD COLUMN verein_description varchar(300);\n+ALTER TABLE verein ADD COLUMN verein_icon varchar(10485760);\n+\n+\n "
  },
  {
    "sha": "7e4ff2ea4fa0e8926d9a26e715a495e14203afa4",
    "filename": "bogenliga/bogenliga-application/src/main/resources/db/migration/LOCAL/V9_0__insert_adress_columns_wettkampf+delete_ort_column.sql",
    "status": "removed",
    "additions": 0,
    "deletions": 14,
    "changes": 14,
    "blob_url": "https://github.com/exxcellent/swt2-bsa-backend/blob/b165e2c7b0f16003e2e02abd91bfad10a3c956fe/bogenliga/bogenliga-application/src/main/resources/db/migration/LOCAL/V9_0__insert_adress_columns_wettkampf+delete_ort_column.sql",
    "raw_url": "https://github.com/exxcellent/swt2-bsa-backend/raw/b165e2c7b0f16003e2e02abd91bfad10a3c956fe/bogenliga/bogenliga-application/src/main/resources/db/migration/LOCAL/V9_0__insert_adress_columns_wettkampf+delete_ort_column.sql",
    "contents_url": "https://api.github.com/repos/exxcellent/swt2-bsa-backend/contents/bogenliga/bogenliga-application/src/main/resources/db/migration/LOCAL/V9_0__insert_adress_columns_wettkampf+delete_ort_column.sql?ref=b165e2c7b0f16003e2e02abd91bfad10a3c956fe",
    "patch": "@@ -1,14 +0,0 @@\n-/**\n- * This script is necessary, to store the adress of a \"Wettkampftag\",\n- * because we splitted the adress in 4 parts and deleted the single column \"wettkampf_ort\"\n- **/\n-\n-\n-ALTER TABLE wettkampf\n-    DROP COLUMN wettkampf_ort,                     -- delete column wettkampf_ort\n-    ADD COLUMN wettkampf_strasse VARCHAR (30),     -- The street for the \"Wettkampf Tag\" will be stored in this column\n-    ADD COLUMN wettkampf_plz VARCHAR (10),         -- The plz for the \"Wettkampf Tag\" will be stored in this column\n-    ADD COLUMN wettkampf_ortsname VARCHAR (25),    -- The city name for the \"Wettkampf Tag\" will be stored in this column\n-    ADD COLUMN wettkampf_ortsinfo VARCHAR (200);   -- Some additional adress information for the \"Wettkampf Tag\" will be stored in this column\n-;\n-"
  },
  {
    "sha": "57b98412f4bd3c7920c893ae5d64811d0aebaa19",
    "filename": "bogenliga/bogenliga-application/src/main/resources/db/migration/PROD/V3_0__alter_verein.sql",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/exxcellent/swt2-bsa-backend/blob/c84ad5e2c1f31529f8b7bec86efb449798ac73fa/bogenliga/bogenliga-application/src/main/resources/db/migration/PROD/V3_0__alter_verein.sql",
    "raw_url": "https://github.com/exxcellent/swt2-bsa-backend/raw/c84ad5e2c1f31529f8b7bec86efb449798ac73fa/bogenliga/bogenliga-application/src/main/resources/db/migration/PROD/V3_0__alter_verein.sql",
    "contents_url": "https://api.github.com/repos/exxcellent/swt2-bsa-backend/contents/bogenliga/bogenliga-application/src/main/resources/db/migration/PROD/V3_0__alter_verein.sql?ref=c84ad5e2c1f31529f8b7bec86efb449798ac73fa",
    "patch": "@@ -1,2 +1,3 @@\n ALTER TABLE verein ADD COLUMN verein_website varchar(200);\n-ALTER TABLE verein ADD COLUMN verein_description varchar(300);\n\\ No newline at end of file\n+ALTER TABLE verein ADD COLUMN verein_description varchar(300);\n+ALTER TABLE verein ADD COLUMN verein_icon varchar(10485760);"
  },
  {
    "sha": "365c88785e735de0f227e8c7e898a2eb0085a5b1",
    "filename": "bogenliga/bogenliga-application/src/main/resources/db/migration/all/V13_0__new_permissions_for_ligaleiter.sql",
    "status": "added",
    "additions": 25,
    "deletions": 0,
    "changes": 25,
    "blob_url": "https://github.com/exxcellent/swt2-bsa-backend/blob/c84ad5e2c1f31529f8b7bec86efb449798ac73fa/bogenliga/bogenliga-application/src/main/resources/db/migration/all/V13_0__new_permissions_for_ligaleiter.sql",
    "raw_url": "https://github.com/exxcellent/swt2-bsa-backend/raw/c84ad5e2c1f31529f8b7bec86efb449798ac73fa/bogenliga/bogenliga-application/src/main/resources/db/migration/all/V13_0__new_permissions_for_ligaleiter.sql",
    "contents_url": "https://api.github.com/repos/exxcellent/swt2-bsa-backend/contents/bogenliga/bogenliga-application/src/main/resources/db/migration/all/V13_0__new_permissions_for_ligaleiter.sql?ref=c84ad5e2c1f31529f8b7bec86efb449798ac73fa",
    "patch": "@@ -0,0 +1,25 @@\n+--create new permissions specific for role 'LIGALEITER' use only\n+INSERT INTO recht (recht_id, recht_name)\n+VALUES(31, 'CAN_MODIFY_SYSTEMDATEN_LIGALEITER');\n+\n+INSERT INTO recht (recht_id, recht_name)\n+VALUES(32, 'CAN_CREATE_SYSTEMDATEN_LIGALEITER');\n+\n+INSERT INTO recht (recht_id, recht_name)\n+VALUES(33, 'CAN_CREATE_STAMMDATEN_LIGALEITER');\n+\n+INSERT INTO recht (recht_id, recht_name)\n+VALUES(34, 'CAN_MODIFY_STAMMDATEN_LIGALEITER');\n+\n+--assign new permissions to role 'LIGALEITER'\n+INSERT INTO rolle_recht (rolle_recht_rolle_id, rolle_recht_recht_id)\n+VALUES (2, 31);\n+\n+INSERT INTO rolle_recht (rolle_recht_rolle_id, rolle_recht_recht_id)\n+VALUES (2, 32);\n+\n+INSERT INTO rolle_recht (rolle_recht_rolle_id, rolle_recht_recht_id)\n+VALUES (2, 33);\n+\n+INSERT INTO rolle_recht (rolle_recht_rolle_id, rolle_recht_recht_id)\n+VALUES (2, 34);"
  },
  {
    "sha": "9c67f981ecc061772a3e23405418b280152b99ca",
    "filename": "bogenliga/bogenliga-application/src/main/resources/db/migration/all/V14_0__this_script_has_no_use.sql",
    "status": "added",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/exxcellent/swt2-bsa-backend/blob/c84ad5e2c1f31529f8b7bec86efb449798ac73fa/bogenliga/bogenliga-application/src/main/resources/db/migration/all/V14_0__this_script_has_no_use.sql",
    "raw_url": "https://github.com/exxcellent/swt2-bsa-backend/raw/c84ad5e2c1f31529f8b7bec86efb449798ac73fa/bogenliga/bogenliga-application/src/main/resources/db/migration/all/V14_0__this_script_has_no_use.sql",
    "contents_url": "https://api.github.com/repos/exxcellent/swt2-bsa-backend/contents/bogenliga/bogenliga-application/src/main/resources/db/migration/all/V14_0__this_script_has_no_use.sql?ref=c84ad5e2c1f31529f8b7bec86efb449798ac73fa",
    "patch": "@@ -0,0 +1,2 @@\n+-- i reserved a sql script number and didnt need it anymore :(\n+-- this script is a placeholder, so that the migration runs through\n\\ No newline at end of file"
  },
  {
    "sha": "e7eef992c7ad1a9978c3ae0c12d9213728503fa6",
    "filename": "bogenliga/bogenliga-application/src/main/resources/db/migration/all/V15_0__delete_kampfrichter_row_from_wettkampf_table.sql",
    "status": "added",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/exxcellent/swt2-bsa-backend/blob/c84ad5e2c1f31529f8b7bec86efb449798ac73fa/bogenliga/bogenliga-application/src/main/resources/db/migration/all/V15_0__delete_kampfrichter_row_from_wettkampf_table.sql",
    "raw_url": "https://github.com/exxcellent/swt2-bsa-backend/raw/c84ad5e2c1f31529f8b7bec86efb449798ac73fa/bogenliga/bogenliga-application/src/main/resources/db/migration/all/V15_0__delete_kampfrichter_row_from_wettkampf_table.sql",
    "contents_url": "https://api.github.com/repos/exxcellent/swt2-bsa-backend/contents/bogenliga/bogenliga-application/src/main/resources/db/migration/all/V15_0__delete_kampfrichter_row_from_wettkampf_table.sql?ref=c84ad5e2c1f31529f8b7bec86efb449798ac73fa",
    "patch": "@@ -0,0 +1,6 @@\n+-- Since kampfrichter have their own table we no longer need a kampfrichter_id in wettkampf.\n+-- It can be deleted without worries because the kampfrichter_id hasn't been used so far anyway.\n+\n+ALTER TABLE wettkampf\n+    DROP COLUMN kampfrichter_id\n+;\n\\ No newline at end of file"
  },
  {
    "sha": "8a53f2b8df95983f4324c28c00e65fcea2aa649c",
    "filename": "bogenliga/bogenliga-application/src/main/resources/db/migration/all/V16_0__create_rechte_admin.sql",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/exxcellent/swt2-bsa-backend/blob/c84ad5e2c1f31529f8b7bec86efb449798ac73fa/bogenliga/bogenliga-application/src/main/resources/db/migration/all/V16_0__create_rechte_admin.sql",
    "raw_url": "https://github.com/exxcellent/swt2-bsa-backend/raw/c84ad5e2c1f31529f8b7bec86efb449798ac73fa/bogenliga/bogenliga-application/src/main/resources/db/migration/all/V16_0__create_rechte_admin.sql",
    "contents_url": "https://api.github.com/repos/exxcellent/swt2-bsa-backend/contents/bogenliga/bogenliga-application/src/main/resources/db/migration/all/V16_0__create_rechte_admin.sql?ref=c84ad5e2c1f31529f8b7bec86efb449798ac73fa",
    "patch": "@@ -0,0 +1 @@\n+INSERT INTO rolle_recht(ROLLE_RECHT_ROLLE_ID, ROLLE_RECHT_RECHT_ID) VALUES (1,19)\n\\ No newline at end of file"
  },
  {
    "sha": "e0f6dfaedd50460632404601a81a4af495c3904f",
    "filename": "bogenliga/bogenliga-application/src/test/java/de/bogenliga/application/services/v1/match/service/MatchServiceTest.java",
    "status": "modified",
    "additions": 4,
    "deletions": 1,
    "changes": 5,
    "blob_url": "https://github.com/exxcellent/swt2-bsa-backend/blob/c84ad5e2c1f31529f8b7bec86efb449798ac73fa/bogenliga/bogenliga-application/src/test/java/de/bogenliga/application/services/v1/match/service/MatchServiceTest.java",
    "raw_url": "https://github.com/exxcellent/swt2-bsa-backend/raw/c84ad5e2c1f31529f8b7bec86efb449798ac73fa/bogenliga/bogenliga-application/src/test/java/de/bogenliga/application/services/v1/match/service/MatchServiceTest.java",
    "contents_url": "https://api.github.com/repos/exxcellent/swt2-bsa-backend/contents/bogenliga/bogenliga-application/src/test/java/de/bogenliga/application/services/v1/match/service/MatchServiceTest.java?ref=c84ad5e2c1f31529f8b7bec86efb449798ac73fa",
    "patch": "@@ -37,6 +37,7 @@\n import static org.assertj.core.api.Java6Assertions.assertThatThrownBy;\n import static org.mockito.ArgumentMatchers.anyLong;\n import static org.mockito.Mockito.*;\n+import java.io.*;\n \n /**\n  * @author Dominik Halle, HSRT MKI SS19 - SWT2\n@@ -143,6 +144,7 @@\n     private static final String REGION_NAME = \"\";\n     private static final String VEREIN_WEBSITE = \"\";\n     private static final String VEREIN_DESCRIPTION = \"\";\n+    private static final String VEREIN_ICON = null;\n     private static final OffsetDateTime VEREIN_OFFSETDATETIME = null;\n \n \n@@ -203,6 +205,7 @@ protected VereinDO getVereinDO(Long id) {\n                 REGION_NAME,\n                 VEREIN_WEBSITE,\n                 VEREIN_DESCRIPTION,\n+                VEREIN_ICON,\n                 VEREIN_OFFSETDATETIME,\n                 VEREIN_USER,\n                 VEREIN_OFFSETDATETIME,\n@@ -226,7 +229,7 @@ protected DsbMannschaftDO getMannschaftDO(Long id) {\n \n \n     protected WettkampfDO getWettkampfDO(Long id) {\n-        return new WettkampfDO(id, W_vid, W_datum, W_strasse, W_plz, W_ortsname, W_ortsinfo, W_begin, W_tag, W_disId, W_typId, null,null,null, null, null);\n+        return new WettkampfDO(id, W_vid, W_datum, W_strasse, W_plz, W_ortsname, W_ortsinfo, W_begin, W_tag, W_disId, W_typId, null,null,null, null);\n     }\n \n "
  },
  {
    "sha": "9c7d8d78135a16a6e0b8e938c1b8f6716d8f39d3",
    "filename": "bogenliga/bogenliga-application/src/test/java/de/bogenliga/application/services/v1/vereine/service/VereineServiceTest.java",
    "status": "modified",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/exxcellent/swt2-bsa-backend/blob/c84ad5e2c1f31529f8b7bec86efb449798ac73fa/bogenliga/bogenliga-application/src/test/java/de/bogenliga/application/services/v1/vereine/service/VereineServiceTest.java",
    "raw_url": "https://github.com/exxcellent/swt2-bsa-backend/raw/c84ad5e2c1f31529f8b7bec86efb449798ac73fa/bogenliga/bogenliga-application/src/test/java/de/bogenliga/application/services/v1/vereine/service/VereineServiceTest.java",
    "contents_url": "https://api.github.com/repos/exxcellent/swt2-bsa-backend/contents/bogenliga/bogenliga-application/src/test/java/de/bogenliga/application/services/v1/vereine/service/VereineServiceTest.java?ref=c84ad5e2c1f31529f8b7bec86efb449798ac73fa",
    "patch": "@@ -30,6 +30,8 @@\n import static org.mockito.Mockito.verify;\n import static org.mockito.Mockito.when;\n \n+import java.io.*;\n+\n public class VereineServiceTest {\n \n     private static final long USER = 0;\n@@ -45,6 +47,7 @@\n     private static final String REGION_NAME = \"\";\n     private static final String VEREIN_WEBSITE = \"\";\n     private static final String VEREIN_DESCRIPTION = \"\";\n+    private static final String VEREIN_ICON = \"\";\n     private static final OffsetDateTime VEREIN_OFFSETDATETIME = null;\n     private static final Logger LOG = LoggerFactory.getLogger(VereineService.class);\n     @Rule\n@@ -74,6 +77,7 @@ public static VereinBE getDsbMitgliedBE() {\n         expectedBE.setVereinRegionId(REGION_ID);\n         expectedBE.setVereinWebsite(VEREIN_WEBSITE);\n         expectedBE.setVereinDescription(VEREIN_DESCRIPTION);\n+        expectedBE.setVereinIcon(VEREIN_ICON);\n \n         return expectedBE;\n     }\n@@ -86,6 +90,7 @@ public static VereinDO getVereinDO() {\n                 REGION_NAME,\n                 VEREIN_WEBSITE,\n                 VEREIN_DESCRIPTION,\n+                VEREIN_ICON,\n                 VEREIN_OFFSETDATETIME,\n                 USER,\n                 VEREIN_OFFSETDATETIME,"
  },
  {
    "sha": "1de5f30bca9b9ab5fb6c595fa31032366c1d8dcc",
    "filename": "bogenliga/bogenliga-application/src/test/java/de/bogenliga/application/services/v1/wettkampf/service/WettkampfServiceTest.java",
    "status": "modified",
    "additions": 0,
    "deletions": 4,
    "changes": 4,
    "blob_url": "https://github.com/exxcellent/swt2-bsa-backend/blob/c84ad5e2c1f31529f8b7bec86efb449798ac73fa/bogenliga/bogenliga-application/src/test/java/de/bogenliga/application/services/v1/wettkampf/service/WettkampfServiceTest.java",
    "raw_url": "https://github.com/exxcellent/swt2-bsa-backend/raw/c84ad5e2c1f31529f8b7bec86efb449798ac73fa/bogenliga/bogenliga-application/src/test/java/de/bogenliga/application/services/v1/wettkampf/service/WettkampfServiceTest.java",
    "contents_url": "https://api.github.com/repos/exxcellent/swt2-bsa-backend/contents/bogenliga/bogenliga-application/src/test/java/de/bogenliga/application/services/v1/wettkampf/service/WettkampfServiceTest.java?ref=c84ad5e2c1f31529f8b7bec86efb449798ac73fa",
    "patch": "@@ -52,7 +52,6 @@\n     private static final long mannschafts_id = 1;\n     private static final OffsetDateTime created_At_Utc = OffsetDateTime.now();\n     private static final long version = 1234;\n-    private static final long wettkampf_kampfrichter_Id = 8;\n     private static final long wettkampfAusrichter = 8;\n \n \n@@ -89,7 +88,6 @@ public static WettkampfBE getWettkampfBE() {\n         expectedBE.setWettkampfOrtsinfo(wettkampf_Ortsinfo);\n         expectedBE.setWettkampfTypId(wettkampf_Wettkampftyp_Id);\n         expectedBE.setWettkampfTag(wettkampf_Tag);\n-        expectedBE.setKampfrichterId(wettkampf_kampfrichter_Id);\n         expectedBE.setWettkampfAusrichter(wettkampfAusrichter);\n \n         return expectedBE;\n@@ -112,7 +110,6 @@ public static WettkampfDO getWettkampfDO() {\n                 created_At_Utc,\n                 user_Id,\n                 version,\n-                wettkampf_kampfrichter_Id,\n                 wettkampfAusrichter\n         );\n     }\n@@ -132,7 +129,6 @@ private static WettkampfDTO getWettkampfDTO() {\n                 wettkampf_Disziplin_Id,\n                 wettkampf_Wettkampftyp_Id,\n                 version,\n-                wettkampf_kampfrichter_Id,\n                 wettkampfAusrichter\n \n         );"
  },
  {
    "sha": "0148050ea8488b0c27edbfd73cb5e36ad256b6a1",
    "filename": "bogenliga/bogenliga-business-logic/pom.xml",
    "status": "modified",
    "additions": 17,
    "deletions": 1,
    "changes": 18,
    "blob_url": "https://github.com/exxcellent/swt2-bsa-backend/blob/c84ad5e2c1f31529f8b7bec86efb449798ac73fa/bogenliga/bogenliga-business-logic/pom.xml",
    "raw_url": "https://github.com/exxcellent/swt2-bsa-backend/raw/c84ad5e2c1f31529f8b7bec86efb449798ac73fa/bogenliga/bogenliga-business-logic/pom.xml",
    "contents_url": "https://api.github.com/repos/exxcellent/swt2-bsa-backend/contents/bogenliga/bogenliga-business-logic/pom.xml?ref=c84ad5e2c1f31529f8b7bec86efb449798ac73fa",
    "patch": "@@ -111,7 +111,11 @@\n                     <artifactId>cobertura-maven-plugin</artifactId>\n                     <version>2.7</version>\n                 </plugin>\n-\n+                <plugin>\n+                    <groupId>org.jacoco</groupId>\n+                    <artifactId>jacoco-maven-plugin</artifactId>\n+                    <version>0.8.6</version>\n+                </plugin>\n                 <!-- compile & test -->\n                 <plugin>\n                     <groupId>org.apache.maven.plugins</groupId>\n@@ -187,6 +191,18 @@\n                     </dependency>\n                 </dependencies>\n             </plugin>\n+            <plugin>\n+                <groupId>org.jacoco</groupId>\n+                <artifactId>jacoco-maven-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <id>prepare-agent</id>\n+                        <goals>\n+                            <goal>prepare-agent</goal>\n+                        </goals>\n+                    </execution>\n+                </executions>\n+            </plugin>\n         </plugins>\n     </build>\n "
  },
  {
    "sha": "0cac147163dd0aa8ff502e7cb76c613e281fa130",
    "filename": "bogenliga/bogenliga-business-logic/src/main/java/de/bogenliga/application/business/kampfrichter/api/KampfrichterComponent.java",
    "status": "modified",
    "additions": 0,
    "deletions": 3,
    "changes": 3,
    "blob_url": "https://github.com/exxcellent/swt2-bsa-backend/blob/c84ad5e2c1f31529f8b7bec86efb449798ac73fa/bogenliga/bogenliga-business-logic/src/main/java/de/bogenliga/application/business/kampfrichter/api/KampfrichterComponent.java",
    "raw_url": "https://github.com/exxcellent/swt2-bsa-backend/raw/c84ad5e2c1f31529f8b7bec86efb449798ac73fa/bogenliga/bogenliga-business-logic/src/main/java/de/bogenliga/application/business/kampfrichter/api/KampfrichterComponent.java",
    "contents_url": "https://api.github.com/repos/exxcellent/swt2-bsa-backend/contents/bogenliga/bogenliga-business-logic/src/main/java/de/bogenliga/application/business/kampfrichter/api/KampfrichterComponent.java?ref=c84ad5e2c1f31529f8b7bec86efb449798ac73fa",
    "patch": "@@ -54,7 +54,4 @@\n      * @param kampfrichterDO kampfrichter to delete\n      */\n     void delete(KampfrichterDO kampfrichterDO, long currentKampfrichterUserId);\n-\n-    // TODO: See if this works\n-    void testDelete(KampfrichterDO kampfrichterDO);\n }\n\\ No newline at end of file"
  },
  {
    "sha": "ca00ea0303e84c935a79faa8e266ef747f06ca26",
    "filename": "bogenliga/bogenliga-business-logic/src/main/java/de/bogenliga/application/business/kampfrichter/impl/business/KampfrichterComponentImpl.java",
    "status": "modified",
    "additions": 0,
    "deletions": 12,
    "changes": 12,
    "blob_url": "https://github.com/exxcellent/swt2-bsa-backend/blob/c84ad5e2c1f31529f8b7bec86efb449798ac73fa/bogenliga/bogenliga-business-logic/src/main/java/de/bogenliga/application/business/kampfrichter/impl/business/KampfrichterComponentImpl.java",
    "raw_url": "https://github.com/exxcellent/swt2-bsa-backend/raw/c84ad5e2c1f31529f8b7bec86efb449798ac73fa/bogenliga/bogenliga-business-logic/src/main/java/de/bogenliga/application/business/kampfrichter/impl/business/KampfrichterComponentImpl.java",
    "contents_url": "https://api.github.com/repos/exxcellent/swt2-bsa-backend/contents/bogenliga/bogenliga-business-logic/src/main/java/de/bogenliga/application/business/kampfrichter/impl/business/KampfrichterComponentImpl.java?ref=c84ad5e2c1f31529f8b7bec86efb449798ac73fa",
    "patch": "@@ -99,18 +99,6 @@ public void delete(final KampfrichterDO kampfrichterDO, final long currentKampfr\n \n     }\n \n-    // TODO: See if this works\n-    @Override\n-    public void testDelete(final KampfrichterDO kampfrichterDO) {\n-        Preconditions.checkNotNull(kampfrichterDO, PRECONDITION_MSG_KAMPFRICHTER);\n-        Preconditions.checkArgument(kampfrichterDO.getUserId() >= 0, PRECONDITION_MSG_KAMPFRICHTER_ID);\n-//        Preconditions.checkArgument(currentKampfrichterUserId >= 0, PRECONDITION_MSG_CURRENT_KAMPFRICHTER);\n-\n-        final KampfrichterBE kampfrichterBE = KampfrichterMapper.toKampfrichterBE.apply(kampfrichterDO);\n-\n-        kampfrichterDAO.testDelete(kampfrichterBE);\n-\n-    }\n \n     private void checkKampfrichterDO(final KampfrichterDO kampfrichterDO, final long currentKampfrichterUserId) {\n         Preconditions.checkNotNull(kampfrichterDO, PRECONDITION_MSG_KAMPFRICHTER);"
  },
  {
    "sha": "a40f320cbeb5413c62b860d817c4f670ab003101",
    "filename": "bogenliga/bogenliga-business-logic/src/main/java/de/bogenliga/application/business/kampfrichter/impl/dao/KampfrichterDAO.java",
    "status": "modified",
    "additions": 2,
    "deletions": 54,
    "changes": 56,
    "blob_url": "https://github.com/exxcellent/swt2-bsa-backend/blob/c84ad5e2c1f31529f8b7bec86efb449798ac73fa/bogenliga/bogenliga-business-logic/src/main/java/de/bogenliga/application/business/kampfrichter/impl/dao/KampfrichterDAO.java",
    "raw_url": "https://github.com/exxcellent/swt2-bsa-backend/raw/c84ad5e2c1f31529f8b7bec86efb449798ac73fa/bogenliga/bogenliga-business-logic/src/main/java/de/bogenliga/application/business/kampfrichter/impl/dao/KampfrichterDAO.java",
    "contents_url": "https://api.github.com/repos/exxcellent/swt2-bsa-backend/contents/bogenliga/bogenliga-business-logic/src/main/java/de/bogenliga/application/business/kampfrichter/impl/dao/KampfrichterDAO.java?ref=c84ad5e2c1f31529f8b7bec86efb449798ac73fa",
    "patch": "@@ -150,58 +150,6 @@ public KampfrichterBE update(final KampfrichterBE kampfrichterBE, final long cur\n     public void delete(final KampfrichterBE kampfrichterBE, final long currentKampfrichterUserId) {\n         basicDao.setModificationAttributes(kampfrichterBE, currentKampfrichterUserId);\n \n-        basicDao.deleteEntity(KAMPFRICHTER, kampfrichterBE, KAMPFRICHTER_BE_ID);\n+        basicDao.deleteEntity(KAMPFRICHTER, kampfrichterBE, KAMPFRICHTER_BE_ID, KAMPFRICHTER_BE_COMPETITION_ID);\n     }\n-\n-\n-    // TODO: See if this works\n-    public void testDelete(final KampfrichterBE kampfrichterBE) {\n-        basicDao.setModificationAttributes(kampfrichterBE, kampfrichterBE.getKampfrichterUserId());\n-\n-        String sqlString = String.format(\"kampfrichter_wettkampf_id = %s AND %s;\",\n-                kampfrichterBE.getKampfrichterWettkampfId().toString(), KAMPFRICHTER_BE_ID);\n-\n-        basicDao.deleteEntity(KAMPFRICHTER, kampfrichterBE, sqlString);\n-    }\n-\n-\n-    // TODO: Delete all this if not needed\n-    public void myDelete(final KampfrichterBE kampfrichterBE) {\n-        String string = String.format(\n-                \"DELETE FROM kampfrichter WHERE kampfrichter_benutzer_id = %s AND kampfrichter_wettkampf_id = %s;\",\n-                kampfrichterBE.getKampfrichterUserId().toString(),\n-                kampfrichterBE.getKampfrichterWettkampfId().toString());\n-//        String.format(\"The user with the username %s already exists.\", user.getUsername())\n-    }\n-\n-\n-//    public static SQL.SQLWithParameter deleteSQL(final Object updateObj, final String tableName,\n-//                                                 final String[] fieldSelector,\n-//                                                 final Map<String, String> columnToFieldMapping) {\n-//        final SQL.SQLWithParameter sqlWithParameter = new SQL().new SQLWithParameter();\n-//        final StringBuilder sql = new StringBuilder();\n-//        final List<Object> para;\n-//\n-//        sql.append(\"DELETE FROM \");\n-//\n-//        try {\n-//            final String tName = updateObj.getClass().getSimpleName();\n-//\n-//            if (tableName != null) {\n-//                sql.append(tableName);\n-//            } else {\n-//                sql.append(tName);\n-//            }\n-//\n-//            final Field[] fields = updateObj.getClass().getDeclaredFields();\n-//\n-//            para = appendFieldsToDeleteStatement(updateObj, fieldSelector, fields);\n-//        } catch (final SecurityException | IllegalArgumentException | NoSuchMethodException | IllegalAccessException\n-//                | InvocationTargetException e) {\n-//            throw new TechnicalException(ErrorCode.DATABASE_ERROR, e);\n-//        }\n-//\n-//        sqlWithParameter.setParameter(para.toArray());\n-//        return appendWhereStatements(sql, fieldSelector, columnToFieldMapping, sqlWithParameter);\n-//    }\n-}\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "d1a10229107fcbe4269c6156a305a1291e730379",
    "filename": "bogenliga/bogenliga-business-logic/src/main/java/de/bogenliga/application/business/veranstaltung/impl/business/VeranstaltungComponentImpl.java",
    "status": "modified",
    "additions": 56,
    "deletions": 49,
    "changes": 105,
    "blob_url": "https://github.com/exxcellent/swt2-bsa-backend/blob/c84ad5e2c1f31529f8b7bec86efb449798ac73fa/bogenliga/bogenliga-business-logic/src/main/java/de/bogenliga/application/business/veranstaltung/impl/business/VeranstaltungComponentImpl.java",
    "raw_url": "https://github.com/exxcellent/swt2-bsa-backend/raw/c84ad5e2c1f31529f8b7bec86efb449798ac73fa/bogenliga/bogenliga-business-logic/src/main/java/de/bogenliga/application/business/veranstaltung/impl/business/VeranstaltungComponentImpl.java",
    "contents_url": "https://api.github.com/repos/exxcellent/swt2-bsa-backend/contents/bogenliga/bogenliga-business-logic/src/main/java/de/bogenliga/application/business/veranstaltung/impl/business/VeranstaltungComponentImpl.java?ref=c84ad5e2c1f31529f8b7bec86efb449798ac73fa",
    "patch": "@@ -3,21 +3,22 @@\n import java.util.ArrayList;\n import java.util.List;\n \n+import de.bogenliga.application.business.liga.api.types.LigaDO;\n import de.bogenliga.application.business.sportjahr.SportjahrDO;\n-import de.bogenliga.application.business.wettkampf.impl.dao.WettkampfDAO;\n+import de.bogenliga.application.business.user.api.types.UserDO;\n+import de.bogenliga.application.business.wettkampf.api.types.WettkampfDO;\n+import de.bogenliga.application.business.wettkampftyp.api.types.WettkampfTypDO;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n-import de.bogenliga.application.business.liga.impl.dao.LigaDAO;\n-import de.bogenliga.application.business.liga.impl.entity.LigaBE;\n-import de.bogenliga.application.business.user.impl.dao.UserDAO;\n-import de.bogenliga.application.business.user.impl.entity.UserBE;\n import de.bogenliga.application.business.veranstaltung.api.VeranstaltungComponent;\n import de.bogenliga.application.business.veranstaltung.api.types.VeranstaltungDO;\n import de.bogenliga.application.business.veranstaltung.impl.dao.VeranstaltungDAO;\n import de.bogenliga.application.business.veranstaltung.impl.entity.VeranstaltungBE;\n import de.bogenliga.application.business.veranstaltung.impl.mapper.VeranstaltungMapper;\n-import de.bogenliga.application.business.wettkampftyp.impl.dao.WettkampfTypDAO;\n-import de.bogenliga.application.business.wettkampftyp.impl.entity.WettkampfTypBE;\n+import de.bogenliga.application.business.wettkampf.api.WettkampfComponent;\n+import de.bogenliga.application.business.liga.api.LigaComponent;\n+import de.bogenliga.application.business.user.api.UserComponent;\n+import de.bogenliga.application.business.wettkampftyp.api.WettkampfTypComponent;\n import de.bogenliga.application.common.errorhandling.ErrorCode;\n import de.bogenliga.application.common.errorhandling.exception.BusinessException;\n import de.bogenliga.application.common.validation.Preconditions;\n@@ -39,50 +40,52 @@\n     private static final String PRECONDITION_MSG_VERANSTALTUNG_SPORTJAHR = \"veranstaltungsportjahr must be not null\";\n     private static final String PRECONDITION_MSG_VERANSTALTUNG_NAME = \"veranstaltungname must be not null\";\n     private static final String PRECONDITION_MSG_CURRENT_DSBMITGLIED = \"Current dsbmitglied id must not be negative\";\n-    private static final String PRECONDITION_MSG_VERANSTALTUNG_LIGALEITER_EMAIL = \"ligaleiter email must be not null\";\n-    private static final String PRECONDITION_MSG_VERANSTALTUNG_WETTKAMPFTYP_NAME = \"veranstaltungtypname must be not null\";\n-    private static final String PRECONDITION_MSG_VERANSTALTUNG_LIGA_NAME = \"veranstaltungliganame must be not null\";\n     private static final String PRECONDITION_MSG_VERANSTALTUNG_LIGA_ALREADY_HAS_VERANSTALTUNG = \"liga already has a veranstaltung assigned for this year\";\n     private final VeranstaltungDAO veranstaltungDAO;\n-    private final LigaDAO ligaDAO;\n-    private final WettkampfTypDAO wettkampftypDAO;\n-    private final UserDAO userDAO;\n-    private final WettkampfDAO wettkampfDAO;\n+    private final WettkampfComponent wettkampfComponent;\n+    private final LigaComponent ligaComponent;\n+    private final WettkampfTypComponent wettkampfTypComponent;\n+    private final UserComponent userComponent;\n \n \n     /**\n      * Constructor for VeranstaltungComponentImpl - Autowired by springboot\n      *\n-     * @param veranstaltungDAO\n+     * @param veranstaltungDAO Data Access Object für Entität Veranstaltung\n      */\n \n     @Autowired\n-    public VeranstaltungComponentImpl(final VeranstaltungDAO veranstaltungDAO, final LigaDAO ligaDAO,\n-                                      final WettkampfTypDAO wettkampftypDAO, final UserDAO userDAO,\n-                                      final WettkampfDAO wettkampfDAO) {\n+    public VeranstaltungComponentImpl(final VeranstaltungDAO veranstaltungDAO,\n+                                      final WettkampfComponent wettkampfComponent,\n+                                      final LigaComponent ligaComponent,\n+                                      final WettkampfTypComponent wettkampfTypComponent,\n+                                      final UserComponent userComponent) {\n+\n+\n+        this.wettkampfComponent = wettkampfComponent;\n+        this.ligaComponent = ligaComponent;\n+        this.wettkampfTypComponent = wettkampfTypComponent;\n+        this.userComponent = userComponent;\n+\n         this.veranstaltungDAO = veranstaltungDAO;\n-        this.ligaDAO = ligaDAO;\n-        this.wettkampftypDAO = wettkampftypDAO;\n-        this.userDAO = userDAO;\n-        this.wettkampfDAO = wettkampfDAO;\n     }\n \n \n     /**\n      * findAll-Method gives all Veranstaltungen from the dataBase\n      *\n-     * @return\n+     * @return liefert die Liste aller Veranstaltungen\n      */\n     @Override\n     public List<VeranstaltungDO> findAll() {\n         final ArrayList<VeranstaltungDO> returnList = new ArrayList<>();\n         final List<VeranstaltungBE> veranstaltungBEList = veranstaltungDAO.findAll();\n-        final List<String> cacheList = new ArrayList<String>();\n+        final List<String> cacheList = new ArrayList<>();\n \n \n         for (int i = 0; i < veranstaltungBEList.size(); i++) {\n \n-            returnList.add(i, notNull(veranstaltungBEList.get(i)));\n+            returnList.add(i, completeNames(veranstaltungBEList.get(i)));\n \n         }\n         /*\n@@ -106,7 +109,7 @@ public VeranstaltungDO findById(final long id) {\n                     String.format(\"No result found for ID '%s'\", id));\n         }\n \n-        return notNull(result);\n+        return completeNames(result);\n     }\n \n \n@@ -118,7 +121,7 @@ public VeranstaltungDO findById(final long id) {\n \n         for (int i = 0; i < veranstaltungBEList.size(); i++) {\n \n-            returnList.add(i, notNull(veranstaltungBEList.get(i)));\n+            returnList.add(i, completeNames(veranstaltungBEList.get(i)));\n \n         }\n \n@@ -132,30 +135,32 @@ public VeranstaltungDO update(final VeranstaltungDO veranstaltungDO, final long\n         Preconditions.checkArgument(veranstaltungDO.getVeranstaltungID() >= 0, PRECONDITION_MSG_VERANSTALTUNG_ID);\n \n         final VeranstaltungBE veranstaltungBE = VeranstaltungMapper.toVeranstaltungBE.apply(veranstaltungDO);\n-        System.out.println(\"\\n\\n\");\n-        System.out.println(veranstaltungBE.toString());\n+//        System.out.println(\"\\n\\n\");\n+//        System.out.println(veranstaltungBE.toString());\n         final VeranstaltungBE persistedVeranstaltungBE = veranstaltungDAO.update(veranstaltungBE, currentDsbMitgliedId);\n \n-        return notNull(persistedVeranstaltungBE);\n+        return completeNames(persistedVeranstaltungBE);\n     }\n \n \n     @Override\n     public VeranstaltungDO create(final VeranstaltungDO veranstaltungDO, final long currentDsbMitgliedId) {\n         checkVeranstaltungDO(veranstaltungDO, currentDsbMitgliedId);\n-        Preconditions.checkArgument(\n-                validLiga(veranstaltungDO.getVeranstaltungLigaID(), veranstaltungDO.getVeranstaltungSportJahr()),\n-                PRECONDITION_MSG_VERANSTALTUNG_LIGA_ALREADY_HAS_VERANSTALTUNG);\n+//        Preconditions.checkArgument(\n+//               validLiga(veranstaltungDO.getVeranstaltungLigaID(), veranstaltungDO.getVeranstaltungSportJahr()),\n+//               PRECONDITION_MSG_VERANSTALTUNG_LIGA_ALREADY_HAS_VERANSTALTUNG);\n \n         final VeranstaltungBE veranstaltungBE = VeranstaltungMapper.toVeranstaltungBE.apply(veranstaltungDO);\n-        System.out.println(\"\\n\\n\");\n-        System.out.println(veranstaltungBE.toString());\n         final VeranstaltungBE persistedVeranstaltungBE = veranstaltungDAO.create(veranstaltungBE, currentDsbMitgliedId);\n \n         //create Wettkampftag 0\n-        this.wettkampfDAO.createWettkampftag0(persistedVeranstaltungBE.getVeranstaltung_id(), currentDsbMitgliedId);\n+        //TODO die Bestiummung der User-ID im Service funktioniert nicht korrekt - daher kann diese nicht\n+        // als ID für den Ligaleiter genutzt werden - wir benötigen für die Fremdschlüsselbeziehung aber existierende\n+        // User-id - daher wird hier die Ligaleiter-Id als User-id übergeben\n+        // fehler: ind er DB wird ein Eintrag unter diesem User angelegt, obwohl das nicht der aktuelle User ist.\n+        final WettkampfDO wettkampfTag0 = wettkampfComponent.createWT0(persistedVeranstaltungBE.getVeranstaltung_id(), persistedVeranstaltungBE.getVeranstaltung_ligaleiter_id());\n \n-        return notNull(persistedVeranstaltungBE);\n+        return completeNames(persistedVeranstaltungBE);\n     }\n \n \n@@ -174,11 +179,11 @@ public void delete(final VeranstaltungDO veranstaltungDO, final long currentDsbM\n \n     @Override\n     public List<VeranstaltungDO> findBySportjahr(long sportjahr) {\n-        final ArrayList<VeranstaltungDO> returnList = new ArrayList<VeranstaltungDO>();\n+        final ArrayList<VeranstaltungDO> returnList = new ArrayList<>();\n         final List<VeranstaltungBE> veranstaltungBEList = veranstaltungDAO.findBySportjahr(sportjahr);\n         for (int i = 0; i < veranstaltungBEList.size(); i++) {\n \n-            returnList.add(i, notNull(veranstaltungBEList.get(i)));\n+            returnList.add(i, completeNames(veranstaltungBEList.get(i)));\n \n         }\n         return returnList;\n@@ -194,11 +199,11 @@ public void delete(final VeranstaltungDO veranstaltungDO, final long currentDsbM\n \n     @Override\n     public List<VeranstaltungDO> findByLigaID(long ligaID) {\n-        final ArrayList<VeranstaltungDO> returnList = new ArrayList<VeranstaltungDO>();\n+        final ArrayList<VeranstaltungDO> returnList = new ArrayList<>();\n         final List<VeranstaltungBE> veranstaltungBEList = veranstaltungDAO.findByLigaID(ligaID);\n         for (int i = 0; i < veranstaltungBEList.size(); i++) {\n \n-            returnList.add(i, notNull(veranstaltungBEList.get(i)));\n+            returnList.add(i, completeNames(veranstaltungBEList.get(i)));\n \n         }\n         return returnList;\n@@ -243,23 +248,25 @@ private boolean validLiga(final long liga_id, final long sportjahr) {\n         return true;\n     }\n \n+    // we will add all information required in VeranstaltungDO which are not stored in the entity\n+    // especially names in addition to IDs\n+    private VeranstaltungDO completeNames(VeranstaltungBE veranstaltungBE) {\n \n-    private VeranstaltungDO notNull(VeranstaltungBE veranstaltungBE) {\n-        LigaBE tempLigaBE = new LigaBE();\n-        WettkampfTypBE tempWettkampfTypBE = new WettkampfTypBE();\n-        UserBE tempUserBE = new UserBE();\n+        LigaDO tempLigaDO = new LigaDO();\n+        WettkampfTypDO tempWettkampfTypDO = new WettkampfTypDO(0L);\n+        UserDO tempUserDO = new UserDO();\n \n         if (veranstaltungBE.getVeranstaltung_liga_id() != null) {\n-            tempLigaBE = ligaDAO.findById(veranstaltungBE.getVeranstaltung_liga_id());\n+              tempLigaDO = ligaComponent.findById(veranstaltungBE.getVeranstaltung_liga_id());\n         }\n         if (veranstaltungBE.getVeranstaltung_wettkampftyp_id() != null) {\n-            tempWettkampfTypBE = wettkampftypDAO.findById(veranstaltungBE.getVeranstaltung_wettkampftyp_id());\n+             tempWettkampfTypDO = wettkampfTypComponent.findById(veranstaltungBE.getVeranstaltung_wettkampftyp_id());\n         }\n         if (veranstaltungBE.getVeranstaltung_ligaleiter_id() != null) {\n-            tempUserBE = userDAO.findById(veranstaltungBE.getVeranstaltung_ligaleiter_id());\n+             tempUserDO = userComponent.findById(veranstaltungBE.getVeranstaltung_ligaleiter_id());\n         }\n \n-        return VeranstaltungMapper.toVeranstaltungDO(veranstaltungBE, tempUserBE, tempWettkampfTypBE, tempLigaBE);\n+        return VeranstaltungMapper.toVeranstaltungDO(veranstaltungBE, tempUserDO, tempWettkampfTypDO, tempLigaDO);\n     }\n }\n "
  },
  {
    "sha": "3ae245c754c797bb8b5e3a600328c31d87dabcf7",
    "filename": "bogenliga/bogenliga-business-logic/src/main/java/de/bogenliga/application/business/veranstaltung/impl/mapper/VeranstaltungMapper.java",
    "status": "modified",
    "additions": 7,
    "deletions": 4,
    "changes": 11,
    "blob_url": "https://github.com/exxcellent/swt2-bsa-backend/blob/c84ad5e2c1f31529f8b7bec86efb449798ac73fa/bogenliga/bogenliga-business-logic/src/main/java/de/bogenliga/application/business/veranstaltung/impl/mapper/VeranstaltungMapper.java",
    "raw_url": "https://github.com/exxcellent/swt2-bsa-backend/raw/c84ad5e2c1f31529f8b7bec86efb449798ac73fa/bogenliga/bogenliga-business-logic/src/main/java/de/bogenliga/application/business/veranstaltung/impl/mapper/VeranstaltungMapper.java",
    "contents_url": "https://api.github.com/repos/exxcellent/swt2-bsa-backend/contents/bogenliga/bogenliga-business-logic/src/main/java/de/bogenliga/application/business/veranstaltung/impl/mapper/VeranstaltungMapper.java?ref=c84ad5e2c1f31529f8b7bec86efb449798ac73fa",
    "patch": "@@ -1,6 +1,9 @@\n package de.bogenliga.application.business.veranstaltung.impl.mapper;\n \n+import de.bogenliga.application.business.liga.api.types.LigaDO;\n import de.bogenliga.application.business.liga.impl.entity.LigaBE;\n+import de.bogenliga.application.business.user.api.types.UserDO;\n+import de.bogenliga.application.business.wettkampftyp.api.types.WettkampfTypDO;\n import de.bogenliga.application.business.wettkampftyp.impl.entity.WettkampfTypBE;\n import de.bogenliga.application.common.component.mapping.ValueObjectMapper;\n import java.sql.Timestamp;\n@@ -22,7 +25,7 @@\n      * Converts a {@link VeranstaltungBE} to a {@link VeranstaltungDO}\n      *\n      */\n-    public static final VeranstaltungDO toVeranstaltungDO(VeranstaltungBE veranstaltungBE, UserBE userBE, WettkampfTypBE wettkamptypBE, LigaBE ligaBE){\n+    public static final VeranstaltungDO toVeranstaltungDO(VeranstaltungBE veranstaltungBE, UserDO userDO, WettkampfTypDO wettkamptypDO, LigaDO ligaDO){\n \n         OffsetDateTime createdAtUtc = DateProvider.convertTimestamp(veranstaltungBE.getCreatedAtUtc());\n         OffsetDateTime lastModifiedAtUtc = DateProvider.convertTimestamp(veranstaltungBE.getLastModifiedAtUtc());\n@@ -35,9 +38,9 @@ public static final VeranstaltungDO toVeranstaltungDO(VeranstaltungBE veranstalt\n                 veranstaltungBE.getVeranstaltung_meldedeadline(),\n                 veranstaltungBE.getVeranstaltung_ligaleiter_id(),\n                 veranstaltungBE.getVeranstaltung_liga_id(),\n-                userBE.getUserEmail(),\n-                wettkamptypBE.getwettkampftypname(),\n-                ligaBE.getLigaName()\n+                userDO.getEmail(),\n+                wettkamptypDO.getName(),\n+                ligaDO.getName()\n         );\n         veranstaltungDO.setCreatedAtUtc(createdAtUtc);\n         veranstaltungDO.setLastModifiedAtUtc(lastModifiedAtUtc);"
  }
]
