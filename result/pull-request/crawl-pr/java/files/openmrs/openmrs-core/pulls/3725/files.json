[
  {
    "sha": "8de2c51311d746ba9402e619434cf00415939a84",
    "filename": "api/src/main/java/org/openmrs/PatientProgram.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/openmrs/openmrs-core/blob/3c6faa1d12e2f4322aa083a0fc984e2c0af4a439/api/src/main/java/org/openmrs/PatientProgram.java",
    "raw_url": "https://github.com/openmrs/openmrs-core/raw/3c6faa1d12e2f4322aa083a0fc984e2c0af4a439/api/src/main/java/org/openmrs/PatientProgram.java",
    "contents_url": "https://api.github.com/repos/openmrs/openmrs-core/contents/api/src/main/java/org/openmrs/PatientProgram.java?ref=3c6faa1d12e2f4322aa083a0fc984e2c0af4a439",
    "patch": "@@ -51,7 +51,7 @@\n \t\n \tprivate Set<PatientState> states = new HashSet<>();\n          \n-        private Set<PatientProgramAttribute> attributes = new LinkedHashSet();\n+\tprivate Set<PatientProgramAttribute> attributes = new LinkedHashSet<>();\n \t\n \t// ******************\n \t// Constructors\n@@ -475,7 +475,7 @@ public void setLocation(Location location) {\n         @Override\n         public void addAttribute(PatientProgramAttribute attribute) {\n             if (this.getAttributes() == null) {\n-                this.setAttributes(new LinkedHashSet());\n+                this.setAttributes(new LinkedHashSet<>());\n             }\n \n             this.getAttributes().add(attribute);"
  },
  {
    "sha": "6435660f0434c2a3d37b8acb96cb5e14e2def1fc",
    "filename": "api/src/main/java/org/openmrs/api/context/ServiceContext.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/openmrs/openmrs-core/blob/3c6faa1d12e2f4322aa083a0fc984e2c0af4a439/api/src/main/java/org/openmrs/api/context/ServiceContext.java",
    "raw_url": "https://github.com/openmrs/openmrs-core/raw/3c6faa1d12e2f4322aa083a0fc984e2c0af4a439/api/src/main/java/org/openmrs/api/context/ServiceContext.java",
    "contents_url": "https://api.github.com/repos/openmrs/openmrs-core/contents/api/src/main/java/org/openmrs/api/context/ServiceContext.java?ref=3c6faa1d12e2f4322aa083a0fc984e2c0af4a439",
    "patch": "@@ -901,7 +901,7 @@ public boolean isRefreshingContext() {\n \t@SuppressWarnings(\"unchecked\")\n \tprivate <T> Map<String, T> getRegisteredComponents(ApplicationContext context, Class<T> type) {\n \t\tMap<String, T> components = new HashMap<>();\n-\t\tMap registeredComponents = context.getBeansOfType(type);\n+\t\tMap<String, T> registeredComponents = context.getBeansOfType(type);\n \t\tif (log.isTraceEnabled()) {\n \t\t\tlog.trace(\"getRegisteredComponents(\" + context + \", \" + type + \") = \" + registeredComponents);\n \t\t}"
  },
  {
    "sha": "9d7b1a6882272a50c20c7d0a833a4c342ac8351f",
    "filename": "api/src/main/java/org/openmrs/api/db/ProgramWorkflowDAO.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/openmrs/openmrs-core/blob/3c6faa1d12e2f4322aa083a0fc984e2c0af4a439/api/src/main/java/org/openmrs/api/db/ProgramWorkflowDAO.java",
    "raw_url": "https://github.com/openmrs/openmrs-core/raw/3c6faa1d12e2f4322aa083a0fc984e2c0af4a439/api/src/main/java/org/openmrs/api/db/ProgramWorkflowDAO.java",
    "contents_url": "https://api.github.com/repos/openmrs/openmrs-core/contents/api/src/main/java/org/openmrs/api/db/ProgramWorkflowDAO.java?ref=3c6faa1d12e2f4322aa083a0fc984e2c0af4a439",
    "patch": "@@ -280,7 +280,7 @@\n \t * @return - A List of ProgramWorkflowStates\n \t */\n \tpublic List<ProgramWorkflowState> getProgramWorkflowStatesByConcept(Concept concept);\n-        public List getAllProgramAttributeTypes();\n+        public List<ProgramAttributeType> getAllProgramAttributeTypes();\n \n         public ProgramAttributeType getProgramAttributeType(Integer var1);\n "
  },
  {
    "sha": "5a72fa2ca593db7c98866bfbe121245d63dfc853",
    "filename": "api/src/main/java/org/openmrs/api/db/hibernate/HibernateProgramWorkflowDAO.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/openmrs/openmrs-core/blob/3c6faa1d12e2f4322aa083a0fc984e2c0af4a439/api/src/main/java/org/openmrs/api/db/hibernate/HibernateProgramWorkflowDAO.java",
    "raw_url": "https://github.com/openmrs/openmrs-core/raw/3c6faa1d12e2f4322aa083a0fc984e2c0af4a439/api/src/main/java/org/openmrs/api/db/hibernate/HibernateProgramWorkflowDAO.java",
    "contents_url": "https://api.github.com/repos/openmrs/openmrs-core/contents/api/src/main/java/org/openmrs/api/db/hibernate/HibernateProgramWorkflowDAO.java?ref=3c6faa1d12e2f4322aa083a0fc984e2c0af4a439",
    "patch": "@@ -455,7 +455,7 @@ public void purgeProgramAttributeType(ProgramAttributeType type) {\n                 return patientProgramAttributes;\n             }\n             String commaSeperatedPatientIds = StringUtils.join(patientIds, \",\");\n-            List list = sessionFactory.getCurrentSession().createSQLQuery(\n+            List<Object> list = sessionFactory.getCurrentSession().createSQLQuery(\n                     \"SELECT p.patient_id as person_id, \" +\n                             \" concat('{',group_concat(DISTINCT (coalesce(concat('\\\"',ppt.name,'\\\":\\\"', COALESCE (cn.name, ppa.value_reference),'\\\"'))) SEPARATOR ','),'}') AS patientProgramAttributeValue  \" +\n                             \" from patient p \" +"
  },
  {
    "sha": "d0637cf2d34d2e6835019234ebf51c298ba6812e",
    "filename": "api/src/main/java/org/openmrs/layout/LayoutTemplate.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/openmrs/openmrs-core/blob/3c6faa1d12e2f4322aa083a0fc984e2c0af4a439/api/src/main/java/org/openmrs/layout/LayoutTemplate.java",
    "raw_url": "https://github.com/openmrs/openmrs-core/raw/3c6faa1d12e2f4322aa083a0fc984e2c0af4a439/api/src/main/java/org/openmrs/layout/LayoutTemplate.java",
    "contents_url": "https://api.github.com/repos/openmrs/openmrs-core/contents/api/src/main/java/org/openmrs/layout/LayoutTemplate.java?ref=3c6faa1d12e2f4322aa083a0fc984e2c0af4a439",
    "patch": "@@ -363,7 +363,7 @@ public void setSizeMappings(Map<String, String> sizeMappings) {\n \tpublic List<String> nonUniqueStringsGoLast(List<String> strListArg) {\n \t\tList<String> dup = new ArrayList<>();\n \t\t// copy the list so we don't get concurrentmodification exceptions\n-\t\tList<String> strList = new ArrayList(strListArg);\n+\t\tList<String> strList = new ArrayList<>(strListArg);\n \t\tfor (String s : strList) {\n \t\t\tfor (String sInner : strList) {\n \t\t\t\tif (sInner.contains(s) && s.length() < sInner.length() && !dup.contains(s)) {"
  },
  {
    "sha": "3a706e05b5c4fbf232805940afeeabdb2652ac6e",
    "filename": "api/src/main/java/org/openmrs/util/UpgradeUtil.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/openmrs/openmrs-core/blob/3c6faa1d12e2f4322aa083a0fc984e2c0af4a439/api/src/main/java/org/openmrs/util/UpgradeUtil.java",
    "raw_url": "https://github.com/openmrs/openmrs-core/raw/3c6faa1d12e2f4322aa083a0fc984e2c0af4a439/api/src/main/java/org/openmrs/util/UpgradeUtil.java",
    "contents_url": "https://api.github.com/repos/openmrs/openmrs-core/contents/api/src/main/java/org/openmrs/util/UpgradeUtil.java?ref=3c6faa1d12e2f4322aa083a0fc984e2c0af4a439",
    "patch": "@@ -48,7 +48,7 @@ public static Integer getConceptIdForUnits(String units) {\n \t\ttry (FileInputStream fis = new FileInputStream(filePath)) {\n \n \t\t\tprops.load(fis);\n-\t\t\tfor (Map.Entry prop : props.entrySet()) {\n+\t\t\tfor (Map.Entry<Object, Object> prop : props.entrySet()) {\n \t\t\t\tif (prop.getKey().equals(units)) {\n \t\t\t\t\tconceptId = prop.getValue().toString();\n \t\t\t\t\treturn Integer.valueOf(conceptId);"
  },
  {
    "sha": "2ead71c86a49c9d245d415c6db4254184fc5d786",
    "filename": "api/src/main/java/org/openmrs/util/databasechange/DuplicateEncounterRoleNameChangeSet.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/openmrs/openmrs-core/blob/3c6faa1d12e2f4322aa083a0fc984e2c0af4a439/api/src/main/java/org/openmrs/util/databasechange/DuplicateEncounterRoleNameChangeSet.java",
    "raw_url": "https://github.com/openmrs/openmrs-core/raw/3c6faa1d12e2f4322aa083a0fc984e2c0af4a439/api/src/main/java/org/openmrs/util/databasechange/DuplicateEncounterRoleNameChangeSet.java",
    "contents_url": "https://api.github.com/repos/openmrs/openmrs-core/contents/api/src/main/java/org/openmrs/util/databasechange/DuplicateEncounterRoleNameChangeSet.java?ref=3c6faa1d12e2f4322aa083a0fc984e2c0af4a439",
    "patch": "@@ -110,7 +110,7 @@ public void execute(Database database) throws CustomChangeException {\n \t\t\tfor (Object o : duplicates.entrySet()) {\n \t\t\t\tMap.Entry pairs = (Map.Entry) o;\n \n-\t\t\t\tHashSet values = (HashSet) pairs.getValue();\n+\t\t\t\tHashSet<Integer> values = (HashSet<Integer>) pairs.getValue();\n \t\t\t\tList<Integer> ids = new ArrayList<Integer>(values);\n \n \t\t\t\tint duplicateNameId = 1;"
  },
  {
    "sha": "00a6e19c6847b383dd694ea98dd1c6e0cf38f251",
    "filename": "api/src/main/java/org/openmrs/util/databasechange/DuplicateEncounterTypeNameChangeSet.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/openmrs/openmrs-core/blob/3c6faa1d12e2f4322aa083a0fc984e2c0af4a439/api/src/main/java/org/openmrs/util/databasechange/DuplicateEncounterTypeNameChangeSet.java",
    "raw_url": "https://github.com/openmrs/openmrs-core/raw/3c6faa1d12e2f4322aa083a0fc984e2c0af4a439/api/src/main/java/org/openmrs/util/databasechange/DuplicateEncounterTypeNameChangeSet.java",
    "contents_url": "https://api.github.com/repos/openmrs/openmrs-core/contents/api/src/main/java/org/openmrs/util/databasechange/DuplicateEncounterTypeNameChangeSet.java?ref=3c6faa1d12e2f4322aa083a0fc984e2c0af4a439",
    "patch": "@@ -108,7 +108,7 @@ public void execute(Database database) throws CustomChangeException {\n \t\t\tfor (Object o : duplicates.entrySet()) {\n \t\t\t\tMap.Entry pairs = (Map.Entry) o;\n \n-\t\t\t\tHashSet values = (HashSet) pairs.getValue();\n+\t\t\t\tHashSet<Integer> values = (HashSet<Integer>) pairs.getValue();\n \t\t\t\tList<Integer> ids = new ArrayList<Integer>(values);\n \n \t\t\t\tint duplicateNameId = 1;"
  },
  {
    "sha": "c10ed23ac7f0af8ca8dea314abcca1c65194fb90",
    "filename": "api/src/main/java/org/openmrs/util/databasechange/DuplicateLocationAttributeTypeNameChangeSet.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/openmrs/openmrs-core/blob/3c6faa1d12e2f4322aa083a0fc984e2c0af4a439/api/src/main/java/org/openmrs/util/databasechange/DuplicateLocationAttributeTypeNameChangeSet.java",
    "raw_url": "https://github.com/openmrs/openmrs-core/raw/3c6faa1d12e2f4322aa083a0fc984e2c0af4a439/api/src/main/java/org/openmrs/util/databasechange/DuplicateLocationAttributeTypeNameChangeSet.java",
    "contents_url": "https://api.github.com/repos/openmrs/openmrs-core/contents/api/src/main/java/org/openmrs/util/databasechange/DuplicateLocationAttributeTypeNameChangeSet.java?ref=3c6faa1d12e2f4322aa083a0fc984e2c0af4a439",
    "patch": "@@ -104,7 +104,7 @@ public void execute(Database database) throws CustomChangeException {\n \n \t\t\tfor (Object o : duplicates.entrySet()) {\n \t\t\t\tMap.Entry pairs = (Map.Entry) o;\n-\t\t\t\tHashSet values = (HashSet) pairs.getValue();\n+\t\t\t\tHashSet<Integer> values = (HashSet<Integer>) pairs.getValue();\n \t\t\t\tList<Integer> duplicateNames = new ArrayList<Integer>(values);\n \t\t\t\tint duplicateNameId = 1;\n \t\t\t\tfor (int i = 1; i < duplicateNames.size(); i++) {"
  },
  {
    "sha": "90157cf09061a78ef007850e7fa6b640bb2a728b",
    "filename": "api/src/test/java/liquibase/ext/change/core/InsertWithUuidDataChangeDatabaseIT.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/openmrs/openmrs-core/blob/3c6faa1d12e2f4322aa083a0fc984e2c0af4a439/api/src/test/java/liquibase/ext/change/core/InsertWithUuidDataChangeDatabaseIT.java",
    "raw_url": "https://github.com/openmrs/openmrs-core/raw/3c6faa1d12e2f4322aa083a0fc984e2c0af4a439/api/src/test/java/liquibase/ext/change/core/InsertWithUuidDataChangeDatabaseIT.java",
    "contents_url": "https://api.github.com/repos/openmrs/openmrs-core/contents/api/src/test/java/liquibase/ext/change/core/InsertWithUuidDataChangeDatabaseIT.java?ref=3c6faa1d12e2f4322aa083a0fc984e2c0af4a439",
    "patch": "@@ -50,8 +50,8 @@ public void shouldInsertUuids() throws Exception {\n \t\t}\n \t}\n \t\n-\tprotected Map getNamesWithUuids() throws SQLException {\n-\t\tMap<String, String> result = new HashMap();\n+\tprotected Map<String, String> getNamesWithUuids() throws SQLException {\n+\t\tMap<String, String> result = new HashMap<>();\n \t\tConnection connection = getConnection();\n \t\tStatement statement = null;\n \t\ttry {"
  },
  {
    "sha": "0ad2aae885246eeab9fc2f41e91a8e9fc0ce63dd",
    "filename": "api/src/test/java/org/openmrs/logic/result/ResultTest.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/openmrs/openmrs-core/blob/3c6faa1d12e2f4322aa083a0fc984e2c0af4a439/api/src/test/java/org/openmrs/logic/result/ResultTest.java",
    "raw_url": "https://github.com/openmrs/openmrs-core/raw/3c6faa1d12e2f4322aa083a0fc984e2c0af4a439/api/src/test/java/org/openmrs/logic/result/ResultTest.java",
    "contents_url": "https://api.github.com/repos/openmrs/openmrs-core/contents/api/src/test/java/org/openmrs/logic/result/ResultTest.java?ref=3c6faa1d12e2f4322aa083a0fc984e2c0af4a439",
    "patch": "@@ -40,12 +40,12 @@ public void toObject_shouldReturnResultObjectForSingleResults() {\n \t\n \t@Test\n \tpublic void Result_shouldNotFailWithNullList() {\n-\t\tnew Result((List) null);\n+\t\tnew Result((List<Result>) null);\n \t}\n \t\n \t@Test\n \tpublic void Result_shouldNotFailWithEmptyList() {\n-\t\tnew Result(new ArrayList());\n+\t\tnew Result(new ArrayList<Result>());\n \t}\n \t\n \t@Test"
  },
  {
    "sha": "1e901ef1de676af580a8860e4ef283357d395625",
    "filename": "api/src/test/java/org/openmrs/serialization/SimpleXStreamSerializerTest.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/openmrs/openmrs-core/blob/3c6faa1d12e2f4322aa083a0fc984e2c0af4a439/api/src/test/java/org/openmrs/serialization/SimpleXStreamSerializerTest.java",
    "raw_url": "https://github.com/openmrs/openmrs-core/raw/3c6faa1d12e2f4322aa083a0fc984e2c0af4a439/api/src/test/java/org/openmrs/serialization/SimpleXStreamSerializerTest.java",
    "contents_url": "https://api.github.com/repos/openmrs/openmrs-core/contents/api/src/test/java/org/openmrs/serialization/SimpleXStreamSerializerTest.java?ref=3c6faa1d12e2f4322aa083a0fc984e2c0af4a439",
    "patch": "@@ -89,7 +89,7 @@ public void deserialize_shouldDeserializeStringToClassInstance() throws Serializ\n \t\tassertTrue(newList.get(0).equals(\"fooBar\"));\n \t\tassertTrue(newList.get(1).equals(\"bar\"));\n \n-\t\tMap newMap = foo.getAttributeMap();\n+\t\tMap<Integer, String> newMap = foo.getAttributeMap();\n \t\tassertEquals(3, newMap.size());\n \t\tassertTrue(newMap.get(10).equals(\"foo\"));\n \t\tassertTrue(newMap.get(20).equals(\"fooBar\"));"
  },
  {
    "sha": "f77d2f8a1ec1f7708a1a4e716c259bf18dc2b26b",
    "filename": "liquibase/src/test/java/org/openmrs/liquibase/CoreDataTunerTest.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/openmrs/openmrs-core/blob/3c6faa1d12e2f4322aa083a0fc984e2c0af4a439/liquibase/src/test/java/org/openmrs/liquibase/CoreDataTunerTest.java",
    "raw_url": "https://github.com/openmrs/openmrs-core/raw/3c6faa1d12e2f4322aa083a0fc984e2c0af4a439/liquibase/src/test/java/org/openmrs/liquibase/CoreDataTunerTest.java",
    "contents_url": "https://api.github.com/repos/openmrs/openmrs-core/contents/liquibase/src/test/java/org/openmrs/liquibase/CoreDataTunerTest.java?ref=3c6faa1d12e2f4322aa083a0fc984e2c0af4a439",
    "patch": "@@ -197,7 +197,7 @@ private void assertAttributeValue(Document document, String xPathAsString, Strin\n \t\tList<String> secondWithOutFirst = new ArrayList<>(second);\n \t\tsecondWithOutFirst.removeAll(first);\n \t\t\n-\t\tList<String> result = new ArrayList();\n+\t\tList<String> result = new ArrayList<>();\n \t\tresult.addAll(first);\n \t\tresult.addAll(secondWithOutFirst);\n \t\treturn result;"
  }
]
