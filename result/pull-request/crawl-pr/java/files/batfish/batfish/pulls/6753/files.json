[
  {
    "sha": "466d867bd7229f5a867922b1adad55817534708a",
    "filename": "projects/batfish-common-protocol/src/main/java/org/batfish/datamodel/route/nh/NextHopInterface.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/batfish/batfish/blob/ee3ffa824b5b2cefca64c145e5f30696585a6ead/projects/batfish-common-protocol/src/main/java/org/batfish/datamodel/route/nh/NextHopInterface.java",
    "raw_url": "https://github.com/batfish/batfish/raw/ee3ffa824b5b2cefca64c145e5f30696585a6ead/projects/batfish-common-protocol/src/main/java/org/batfish/datamodel/route/nh/NextHopInterface.java",
    "contents_url": "https://api.github.com/repos/batfish/batfish/contents/projects/batfish-common-protocol/src/main/java/org/batfish/datamodel/route/nh/NextHopInterface.java?ref=ee3ffa824b5b2cefca64c145e5f30696585a6ead",
    "patch": "@@ -61,7 +61,7 @@ public static NextHopInterface of(String interfaceName) {\n    *     Interface#NULL_INTERFACE_NAME} or the IP is invalid, e.g., {@link Ip#AUTO}\n    */\n   @Nonnull\n-  public static NextHopInterface of(String interfaceName, Ip ip) {\n+  public static NextHopInterface of(String interfaceName, @Nullable Ip ip) {\n     return CACHE.getUnchecked(new NextHopInterface(interfaceName, ip));\n   }\n "
  },
  {
    "sha": "4daf2e6ccf1d56696a68cce2602fb780fafc19c5",
    "filename": "projects/batfish/src/main/antlr4/org/batfish/grammar/fortios/FortiosLexer.g4",
    "status": "modified",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/batfish/batfish/blob/ee3ffa824b5b2cefca64c145e5f30696585a6ead/projects/batfish/src/main/antlr4/org/batfish/grammar/fortios/FortiosLexer.g4",
    "raw_url": "https://github.com/batfish/batfish/raw/ee3ffa824b5b2cefca64c145e5f30696585a6ead/projects/batfish/src/main/antlr4/org/batfish/grammar/fortios/FortiosLexer.g4",
    "contents_url": "https://api.github.com/repos/batfish/batfish/contents/projects/batfish/src/main/antlr4/org/batfish/grammar/fortios/FortiosLexer.g4?ref=ee3ffa824b5b2cefca64c145e5f30696585a6ead",
    "patch": "@@ -41,8 +41,11 @@ COUNTRY: 'country';\n CUSTOM: 'custom';\n DENY: 'deny';\n DESCRIPTION: 'description' -> pushMode(M_Str);\n+DEVICE: 'device' -> pushMode(M_Str);\n DISABLE: 'disable';\n+DISTANCE: 'distance';\n DOWN: 'down';\n+DST: 'dst';\n DSTADDR: 'dstaddr' -> pushMode(M_Str);\n DSTINTF: 'dstintf' -> pushMode(M_Str);\n EDIT: 'edit' -> pushMode(M_Str);\n@@ -56,6 +59,7 @@ FIREWALL: 'firewall';\n FORTIGUARD_WF: 'fortiguard-wf';\n FQDN: 'fqdn';\n FTP: 'ftp';\n+GATEWAY: 'gateway';\n GEOGRAPHY: 'geography';\n GLOBAL: 'global';\n HOSTNAME: 'hostname' -> pushMode(M_Str);\n@@ -88,8 +92,10 @@ PROTOCOL_NUMBER: 'protocol-number';\n REDUNDANT: 'redundant';\n RENAME: 'rename' -> pushMode(M_SingleStr);\n REPLACEMSG: 'replacemsg';\n+ROUTER: 'router';\n SCTP_PORTRANGE: 'sctp-portrange';\n SDN: 'sdn';\n+SDWAN: 'sdwan';\n SELECT: 'select';\n SERVICE:\n   'service'\n@@ -107,6 +113,7 @@ SRCADDR: 'srcaddr' -> pushMode(M_Str);\n SRCINTF: 'srcintf' -> pushMode(M_Str);\n SSLVPN: 'sslvpn';\n START_IP: 'start-ip';\n+STATIC: 'static';\n STATUS: 'status';\n SUBNET: 'subnet';\n SUB_TYPE: 'sub-type';"
  },
  {
    "sha": "a4ab950c4bb5b5a278b3a82ce7350e500d0963dc",
    "filename": "projects/batfish/src/main/antlr4/org/batfish/grammar/fortios/FortiosParser.g4",
    "status": "modified",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/batfish/batfish/blob/ee3ffa824b5b2cefca64c145e5f30696585a6ead/projects/batfish/src/main/antlr4/org/batfish/grammar/fortios/FortiosParser.g4",
    "raw_url": "https://github.com/batfish/batfish/raw/ee3ffa824b5b2cefca64c145e5f30696585a6ead/projects/batfish/src/main/antlr4/org/batfish/grammar/fortios/FortiosParser.g4",
    "contents_url": "https://api.github.com/repos/batfish/batfish/contents/projects/batfish/src/main/antlr4/org/batfish/grammar/fortios/FortiosParser.g4?ref=ee3ffa824b5b2cefca64c145e5f30696585a6ead",
    "patch": "@@ -6,7 +6,9 @@ import\n   Fortios_firewall,\n   Fortios_interface,\n   Fortios_policy,\n+  Fortios_router,\n   Fortios_service,\n+  Fortios_static,\n   Fortios_system,\n   Fortios_zone;\n \n@@ -24,5 +26,6 @@ s_config\n     CONFIG (\n         c_system\n         | c_firewall\n+        | c_router\n     ) END NEWLINE\n ;"
  },
  {
    "sha": "6628ff8ebc4b6ef69cd141826acc9cff104632f8",
    "filename": "projects/batfish/src/main/antlr4/org/batfish/grammar/fortios/Fortios_common.g4",
    "status": "modified",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/batfish/batfish/blob/ee3ffa824b5b2cefca64c145e5f30696585a6ead/projects/batfish/src/main/antlr4/org/batfish/grammar/fortios/Fortios_common.g4",
    "raw_url": "https://github.com/batfish/batfish/raw/ee3ffa824b5b2cefca64c145e5f30696585a6ead/projects/batfish/src/main/antlr4/org/batfish/grammar/fortios/Fortios_common.g4",
    "contents_url": "https://api.github.com/repos/batfish/batfish/contents/projects/batfish/src/main/antlr4/org/batfish/grammar/fortios/Fortios_common.g4?ref=ee3ffa824b5b2cefca64c145e5f30696585a6ead",
    "patch": "@@ -11,6 +11,9 @@ single_quoted_string: SINGLE_QUOTE text = quoted_text? SINGLE_QUOTE;\n // 1-15 characters for interface, but 1-35 for zone\n interface_or_zone_name: str;\n \n+// Up to 15 characters\n+interface_name: str;\n+\n interface_names: interface_name+;\n \n quoted_text: QUOTED_TEXT+;"
  },
  {
    "sha": "16cb785712f8396f30045ca48b7dbb20d4dcd0e5",
    "filename": "projects/batfish/src/main/antlr4/org/batfish/grammar/fortios/Fortios_interface.g4",
    "status": "modified",
    "additions": 0,
    "deletions": 3,
    "changes": 3,
    "blob_url": "https://github.com/batfish/batfish/blob/ee3ffa824b5b2cefca64c145e5f30696585a6ead/projects/batfish/src/main/antlr4/org/batfish/grammar/fortios/Fortios_interface.g4",
    "raw_url": "https://github.com/batfish/batfish/raw/ee3ffa824b5b2cefca64c145e5f30696585a6ead/projects/batfish/src/main/antlr4/org/batfish/grammar/fortios/Fortios_interface.g4",
    "contents_url": "https://api.github.com/repos/batfish/batfish/contents/projects/batfish/src/main/antlr4/org/batfish/grammar/fortios/Fortios_interface.g4?ref=ee3ffa824b5b2cefca64c145e5f30696585a6ead",
    "patch": "@@ -62,6 +62,3 @@ interface_type:\n \n // Up to 25 characters\n interface_alias: str;\n-\n-// Up to 15 characters\n-interface_name: str;"
  },
  {
    "sha": "ccbdaba94cbcbd149c959be3a65111a1ffd27853",
    "filename": "projects/batfish/src/main/antlr4/org/batfish/grammar/fortios/Fortios_router.g4",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/batfish/batfish/blob/ee3ffa824b5b2cefca64c145e5f30696585a6ead/projects/batfish/src/main/antlr4/org/batfish/grammar/fortios/Fortios_router.g4",
    "raw_url": "https://github.com/batfish/batfish/raw/ee3ffa824b5b2cefca64c145e5f30696585a6ead/projects/batfish/src/main/antlr4/org/batfish/grammar/fortios/Fortios_router.g4",
    "contents_url": "https://api.github.com/repos/batfish/batfish/contents/projects/batfish/src/main/antlr4/org/batfish/grammar/fortios/Fortios_router.g4?ref=ee3ffa824b5b2cefca64c145e5f30696585a6ead",
    "patch": "@@ -0,0 +1,7 @@\n+parser grammar Fortios_router;\n+\n+options {\n+  tokenVocab = FortiosLexer;\n+}\n+\n+c_router: ROUTER cr_static;"
  },
  {
    "sha": "66c6c0d22c02476ea96aa009c33399d6c42b70b5",
    "filename": "projects/batfish/src/main/antlr4/org/batfish/grammar/fortios/Fortios_static.g4",
    "status": "added",
    "additions": 38,
    "deletions": 0,
    "changes": 38,
    "blob_url": "https://github.com/batfish/batfish/blob/ee3ffa824b5b2cefca64c145e5f30696585a6ead/projects/batfish/src/main/antlr4/org/batfish/grammar/fortios/Fortios_static.g4",
    "raw_url": "https://github.com/batfish/batfish/raw/ee3ffa824b5b2cefca64c145e5f30696585a6ead/projects/batfish/src/main/antlr4/org/batfish/grammar/fortios/Fortios_static.g4",
    "contents_url": "https://api.github.com/repos/batfish/batfish/contents/projects/batfish/src/main/antlr4/org/batfish/grammar/fortios/Fortios_static.g4?ref=ee3ffa824b5b2cefca64c145e5f30696585a6ead",
    "patch": "@@ -0,0 +1,38 @@\n+parser grammar Fortios_static;\n+\n+options {\n+  tokenVocab = FortiosLexer;\n+}\n+\n+cr_static: STATIC newline crs_edit*;\n+\n+crs_edit: EDIT route_num newline crse* NEXT newline;\n+\n+crse: SET crs_set_singletons;\n+\n+crs_set_singletons:\n+    crs_set_device\n+    | crs_set_distance\n+    | crs_set_dst\n+    | crs_set_gateway\n+    | crs_set_sdwan\n+    | crs_set_status\n+;\n+\n+crs_set_device: DEVICE iface = interface_name newline;\n+\n+crs_set_distance: DISTANCE route_distance newline;\n+\n+crs_set_dst: DST dst = ip_address_with_mask_or_prefix newline;\n+\n+crs_set_gateway: GATEWAY gateway = ip_address newline;\n+\n+crs_set_sdwan: SDWAN enabled = enable_or_disable newline;\n+\n+crs_set_status: STATUS enabled = enable_or_disable newline;\n+\n+// 0-4294967295 inclusive\n+route_num: str;\n+\n+// 1-255\n+route_distance: uint8;"
  },
  {
    "sha": "5df260e4275de3fcc0358a1d0fde33ade6130ec6",
    "filename": "projects/batfish/src/main/java/org/batfish/grammar/fortios/FortiosConfigurationBuilder.java",
    "status": "modified",
    "additions": 90,
    "deletions": 0,
    "changes": 90,
    "blob_url": "https://github.com/batfish/batfish/blob/ee3ffa824b5b2cefca64c145e5f30696585a6ead/projects/batfish/src/main/java/org/batfish/grammar/fortios/FortiosConfigurationBuilder.java",
    "raw_url": "https://github.com/batfish/batfish/raw/ee3ffa824b5b2cefca64c145e5f30696585a6ead/projects/batfish/src/main/java/org/batfish/grammar/fortios/FortiosConfigurationBuilder.java",
    "contents_url": "https://api.github.com/repos/batfish/batfish/contents/projects/batfish/src/main/java/org/batfish/grammar/fortios/FortiosConfigurationBuilder.java?ref=ee3ffa824b5b2cefca64c145e5f30696585a6ead",
    "patch": "@@ -75,6 +75,13 @@\n import org.batfish.grammar.fortios.FortiosParser.Cfsc_set_sctp_portrangeContext;\n import org.batfish.grammar.fortios.FortiosParser.Cfsc_set_tcp_portrangeContext;\n import org.batfish.grammar.fortios.FortiosParser.Cfsc_set_udp_portrangeContext;\n+import org.batfish.grammar.fortios.FortiosParser.Crs_editContext;\n+import org.batfish.grammar.fortios.FortiosParser.Crs_set_deviceContext;\n+import org.batfish.grammar.fortios.FortiosParser.Crs_set_distanceContext;\n+import org.batfish.grammar.fortios.FortiosParser.Crs_set_dstContext;\n+import org.batfish.grammar.fortios.FortiosParser.Crs_set_gatewayContext;\n+import org.batfish.grammar.fortios.FortiosParser.Crs_set_sdwanContext;\n+import org.batfish.grammar.fortios.FortiosParser.Crs_set_statusContext;\n import org.batfish.grammar.fortios.FortiosParser.Cs_replacemsgContext;\n import org.batfish.grammar.fortios.FortiosParser.Csg_hostnameContext;\n import org.batfish.grammar.fortios.FortiosParser.Csi_editContext;\n@@ -119,6 +126,7 @@\n import org.batfish.grammar.fortios.FortiosParser.Port_rangeContext;\n import org.batfish.grammar.fortios.FortiosParser.Replacemsg_major_typeContext;\n import org.batfish.grammar.fortios.FortiosParser.Replacemsg_minor_typeContext;\n+import org.batfish.grammar.fortios.FortiosParser.Route_distanceContext;\n import org.batfish.grammar.fortios.FortiosParser.Service_nameContext;\n import org.batfish.grammar.fortios.FortiosParser.Service_namesContext;\n import org.batfish.grammar.fortios.FortiosParser.Service_port_rangeContext;\n@@ -146,6 +154,7 @@\n import org.batfish.representation.fortios.Replacemsg;\n import org.batfish.representation.fortios.Service;\n import org.batfish.representation.fortios.Service.Protocol;\n+import org.batfish.representation.fortios.StaticRoute;\n import org.batfish.representation.fortios.Zone;\n import org.batfish.representation.fortios.Zone.IntrazoneAction;\n \n@@ -500,6 +509,63 @@ public void exitCsi_set_vrf(Csi_set_vrfContext ctx) {\n     toInteger(ctx, ctx.value).ifPresent(v -> _currentInterface.setVrf(v));\n   }\n \n+  @Override\n+  public void enterCrs_edit(FortiosParser.Crs_editContext ctx) {\n+    Optional<Long> routeNum = toLong(ctx, ctx.route_num());\n+    StaticRoute existing =\n+        routeNum.map(Object::toString).map(_c.getStaticRoutes()::get).orElse(null);\n+    if (existing != null) {\n+      // Make a clone to edit\n+      _currentStaticRoute = SerializationUtils.clone(existing);\n+    } else {\n+      _currentStaticRoute = new StaticRoute(toString(ctx.route_num().str()));\n+    }\n+    _currentStaticRouteNumValid = routeNum.isPresent();\n+  }\n+\n+  @Override\n+  public void exitCrs_edit(Crs_editContext ctx) {\n+    String invalidReason = staticRouteValid(_currentStaticRoute, _currentStaticRouteNumValid);\n+    if (invalidReason == null) {\n+      // TODO structure definition\n+      _c.getStaticRoutes().put(_currentStaticRoute.getSeqNum(), _currentStaticRoute);\n+    } else {\n+      warn(ctx, String.format(\"Static route edit block ignored: %s\", invalidReason));\n+    }\n+    _currentStaticRoute = null;\n+  }\n+\n+  @Override\n+  public void exitCrs_set_device(Crs_set_deviceContext ctx) {\n+    toString(ctx, ctx.iface).ifPresent(_currentStaticRoute::setDevice);\n+  }\n+\n+  @Override\n+  public void exitCrs_set_distance(Crs_set_distanceContext ctx) {\n+    toInteger(ctx, ctx.route_distance()).ifPresent(_currentStaticRoute::setDistance);\n+  }\n+\n+  @Override\n+  public void exitCrs_set_dst(Crs_set_dstContext ctx) {\n+    _currentStaticRoute.setDst(toPrefix(ctx.dst));\n+  }\n+\n+  @Override\n+  public void exitCrs_set_gateway(Crs_set_gatewayContext ctx) {\n+    _currentStaticRoute.setGateway(toIp(ctx.gateway));\n+  }\n+\n+  @Override\n+  public void exitCrs_set_sdwan(Crs_set_sdwanContext ctx) {\n+    _currentStaticRoute.setSdwanEnabled(toBoolean(ctx.enabled));\n+  }\n+\n+  @Override\n+  public void exitCrs_set_status(Crs_set_statusContext ctx) {\n+    _currentStaticRoute.setStatus(\n+        toBoolean(ctx.enabled) ? StaticRoute.Status.ENABLE : StaticRoute.Status.DISABLE);\n+  }\n+\n   @Override\n   public void enterCfp_edit(Cfp_editContext ctx) {\n     Optional<Long> number = toLong(ctx, ctx.policy_number());\n@@ -1381,6 +1447,11 @@ private boolean toBoolean(Enable_or_disableContext ctx) {\n     return toLongInSpace(messageCtx, ctx.str(), POLICY_NUMBER_SPACE, \"policy number\");\n   }\n \n+  private Optional<Long> toLong(ParserRuleContext ctx, FortiosParser.Route_numContext routeNum) {\n+    return toLongInSpace(\n+        ctx, routeNum.str(), STATIC_ROUTE_NUM_SPACE, \"static route sequence number\");\n+  }\n+\n   private @Nonnull Optional<Long> toLongInSpace(\n       ParserRuleContext messageCtx, StrContext ctx, LongSpace space, String name) {\n     return toLongInSpace(messageCtx, toString(ctx), space, name);\n@@ -1467,6 +1538,11 @@ public void visitErrorNode(ErrorNode errorNode) {\n     return toIntegerInSpace(ctx, mtu.uint16(), MTU_SPACE, \"mtu\");\n   }\n \n+  private Optional<Integer> toInteger(ParserRuleContext ctx, Route_distanceContext routeDistance) {\n+    return toIntegerInSpace(\n+        ctx, routeDistance.uint8(), ADMIN_DISTANCE_SPACE, \"route administrative distance\");\n+  }\n+\n   private Optional<Integer> toInteger(ParserRuleContext ctx, VrfContext vrf) {\n     return toIntegerInSpace(ctx, vrf.uint8(), VRF_SPACE, \"vrf\");\n   }\n@@ -1601,6 +1677,15 @@ private static int toInteger(Uint8Context ctx) {\n     }\n   }\n \n+  private static @Nullable String staticRouteValid(StaticRoute staticRoute, boolean seqNumValid) {\n+    if (!seqNumValid) {\n+      return \"sequence number is invalid\";\n+    } else if (staticRoute.getDevice() == null) {\n+      return \"device must be set\";\n+    }\n+    return null;\n+  }\n+\n   /**\n    * Class representing a set of interfaces as well as a set of zones. For use with firewall\n    * policies srcintf and dstintf references.\n@@ -1639,6 +1724,9 @@ private static int toInteger(Uint8Context ctx) {\n       IntegerSpace.of(Range.closed(0, 254));\n   private static final IntegerSpace MTU_SPACE = IntegerSpace.of(Range.closed(68, 65535));\n   private static final LongSpace POLICY_NUMBER_SPACE = LongSpace.of(Range.closed(0L, 4294967294L));\n+  private static final IntegerSpace ADMIN_DISTANCE_SPACE = IntegerSpace.of(Range.closed(1, 255));\n+  private static final LongSpace STATIC_ROUTE_NUM_SPACE =\n+      LongSpace.of(Range.closed(0L, 4294967295L));\n   private static final IntegerSpace VRF_SPACE = IntegerSpace.of(Range.closed(0, 31));\n \n   private Address _currentAddress;\n@@ -1667,6 +1755,8 @@ private static int toInteger(Uint8Context ctx) {\n    */\n   private boolean _currentServiceValid;\n \n+  private StaticRoute _currentStaticRoute;\n+  private boolean _currentStaticRouteNumValid;\n   private Zone _currentZone;\n   /** Whether the current zone has an invalid name. */\n   private boolean _currentZoneNameValid;"
  },
  {
    "sha": "32222469a4edcb29ed759d2713c63e1bfd41d9ac",
    "filename": "projects/batfish/src/main/java/org/batfish/representation/fortios/FortiosConfiguration.java",
    "status": "modified",
    "additions": 17,
    "deletions": 0,
    "changes": 17,
    "blob_url": "https://github.com/batfish/batfish/blob/ee3ffa824b5b2cefca64c145e5f30696585a6ead/projects/batfish/src/main/java/org/batfish/representation/fortios/FortiosConfiguration.java",
    "raw_url": "https://github.com/batfish/batfish/raw/ee3ffa824b5b2cefca64c145e5f30696585a6ead/projects/batfish/src/main/java/org/batfish/representation/fortios/FortiosConfiguration.java",
    "contents_url": "https://api.github.com/repos/batfish/batfish/contents/projects/batfish/src/main/java/org/batfish/representation/fortios/FortiosConfiguration.java?ref=ee3ffa824b5b2cefca64c145e5f30696585a6ead",
    "patch": "@@ -5,6 +5,7 @@\n import static org.batfish.representation.fortios.FortiosPolicyConversions.generateCrossZoneFilters;\n import static org.batfish.representation.fortios.FortiosPolicyConversions.generateOutgoingFilters;\n import static org.batfish.representation.fortios.FortiosPolicyConversions.getZonesAndUnzonedInterfaces;\n+import static org.batfish.representation.fortios.FortiosRouteConversions.convertStaticRoutes;\n import static org.batfish.representation.fortios.FortiosTraceElementCreators.matchServiceTraceElement;\n \n import com.google.common.annotations.VisibleForTesting;\n@@ -16,6 +17,7 @@\n import java.util.Map;\n import java.util.Optional;\n import java.util.Set;\n+import java.util.SortedSet;\n import javax.annotation.Nonnull;\n import javax.annotation.Nullable;\n import org.batfish.common.VendorConversionException;\n@@ -41,6 +43,7 @@ public FortiosConfiguration() {\n     _renameableObjects = new HashMap<>();\n     _replacemsgs = new HashMap<>();\n     _services = new HashMap<>();\n+    _staticRoutes = new HashMap<>();\n     _zones = new HashMap<>();\n   }\n \n@@ -90,6 +93,11 @@ public void setVendor(ConfigurationFormat format) {}\n     return _services;\n   }\n \n+  /** route seq num -> static route */\n+  public @Nonnull Map<String, StaticRoute> getStaticRoutes() {\n+    return _staticRoutes;\n+  }\n+\n   /** name -> zone */\n   public @Nonnull Map<String, Zone> getZones() {\n     return _zones;\n@@ -103,6 +111,7 @@ public void setVendor(ConfigurationFormat format) {}\n   private final @Nonnull Map<BatfishUUID, FortiosRenameableObject> _renameableObjects;\n   private final @Nonnull Map<String, Map<String, Replacemsg>> _replacemsgs;\n   private final @Nonnull Map<String, Service> _services;\n+  private final @Nonnull Map<String, StaticRoute> _staticRoutes;\n   private final @Nonnull Map<String, Zone> _zones;\n \n   private @Nonnull Configuration toVendorIndependentConfiguration() {\n@@ -132,6 +141,14 @@ public void setVendor(ConfigurationFormat format) {}\n     // Convert interfaces. Must happen after converting policies\n     _interfaces.values().forEach(iface -> convertInterface(iface, c));\n \n+    // TODO Are FortiOS static routes really global? Can't set their VRFs. Perhaps they should\n+    //  only exist in their device's VRF.\n+    // Convert static routes and add them to every VRF. Must happen after all VRFs are created\n+    // (interfaces must be converted).\n+    SortedSet<org.batfish.datamodel.StaticRoute> viStaticRoutes =\n+        convertStaticRoutes(_staticRoutes.values());\n+    c.getVrfs().values().forEach(vrf -> vrf.setStaticRoutes(viStaticRoutes));\n+\n     // Count structure references\n     markConcreteStructure(FortiosStructureType.ADDRESS);\n     markConcreteStructure(FortiosStructureType.SERVICE_CUSTOM);"
  },
  {
    "sha": "ae9c040142cb4929277a003bd17b6b84f80ebaf2",
    "filename": "projects/batfish/src/main/java/org/batfish/representation/fortios/FortiosRouteConversions.java",
    "status": "added",
    "additions": 38,
    "deletions": 0,
    "changes": 38,
    "blob_url": "https://github.com/batfish/batfish/blob/ee3ffa824b5b2cefca64c145e5f30696585a6ead/projects/batfish/src/main/java/org/batfish/representation/fortios/FortiosRouteConversions.java",
    "raw_url": "https://github.com/batfish/batfish/raw/ee3ffa824b5b2cefca64c145e5f30696585a6ead/projects/batfish/src/main/java/org/batfish/representation/fortios/FortiosRouteConversions.java",
    "contents_url": "https://api.github.com/repos/batfish/batfish/contents/projects/batfish/src/main/java/org/batfish/representation/fortios/FortiosRouteConversions.java?ref=ee3ffa824b5b2cefca64c145e5f30696585a6ead",
    "patch": "@@ -0,0 +1,38 @@\n+package org.batfish.representation.fortios;\n+\n+import static com.google.common.base.Preconditions.checkArgument;\n+\n+import com.google.common.collect.ImmutableSortedSet;\n+import java.util.Collection;\n+import java.util.Comparator;\n+import java.util.Optional;\n+import java.util.SortedSet;\n+import javax.annotation.Nonnull;\n+import org.batfish.datamodel.route.nh.NextHopInterface;\n+\n+public class FortiosRouteConversions {\n+\n+  public static @Nonnull SortedSet<org.batfish.datamodel.StaticRoute> convertStaticRoutes(\n+      Collection<StaticRoute> vsRoutes) {\n+    return vsRoutes.stream()\n+        .map(FortiosRouteConversions::convertStaticRoute)\n+        .filter(Optional::isPresent)\n+        .map(Optional::get)\n+        .collect(ImmutableSortedSet.toImmutableSortedSet(Comparator.naturalOrder()));\n+  }\n+\n+  private static Optional<org.batfish.datamodel.StaticRoute> convertStaticRoute(StaticRoute route) {\n+    if (!route.getStatusEffective()) {\n+      return Optional.empty();\n+    }\n+    // TODO Should SD-WAN routes be converted? If so how should that affect the VI route?\n+    checkArgument(route.getDevice() != null, \"Route device must be set during extraction\");\n+    return Optional.of(\n+        org.batfish.datamodel.StaticRoute.builder()\n+            .setNetwork(route.getDstEffective())\n+            // Gateway IP may be null, but that's ok\n+            .setNextHop(NextHopInterface.of(route.getDevice(), route.getGateway()))\n+            .setAdmin(route.getDistanceEffective())\n+            .build());\n+  }\n+}"
  },
  {
    "sha": "a539e51336cbd5c075c8241c7808a692020dd7b3",
    "filename": "projects/batfish/src/main/java/org/batfish/representation/fortios/StaticRoute.java",
    "status": "added",
    "additions": 105,
    "deletions": 0,
    "changes": 105,
    "blob_url": "https://github.com/batfish/batfish/blob/ee3ffa824b5b2cefca64c145e5f30696585a6ead/projects/batfish/src/main/java/org/batfish/representation/fortios/StaticRoute.java",
    "raw_url": "https://github.com/batfish/batfish/raw/ee3ffa824b5b2cefca64c145e5f30696585a6ead/projects/batfish/src/main/java/org/batfish/representation/fortios/StaticRoute.java",
    "contents_url": "https://api.github.com/repos/batfish/batfish/contents/projects/batfish/src/main/java/org/batfish/representation/fortios/StaticRoute.java?ref=ee3ffa824b5b2cefca64c145e5f30696585a6ead",
    "patch": "@@ -0,0 +1,105 @@\n+package org.batfish.representation.fortios;\n+\n+import static com.google.common.base.MoreObjects.firstNonNull;\n+\n+import java.io.Serializable;\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+import org.batfish.datamodel.Ip;\n+import org.batfish.datamodel.Prefix;\n+\n+public class StaticRoute implements Serializable {\n+  public enum Status {\n+    ENABLE,\n+    DISABLE\n+  }\n+\n+  private @Nullable String _device;\n+  private @Nullable Integer _distance;\n+  private @Nullable Prefix _dst;\n+  private @Nullable Ip _gateway;\n+  private @Nullable Boolean _sdwanEnabled;\n+  private final @Nonnull String _seqNum;\n+  private @Nullable Status _status;\n+\n+  public static final int DEFAULT_DISTANCE = 10; // for non-SD-WAN routes only\n+  public static final int DEFAULT_DISTANCE_SDWAN = 1;\n+  public static final Prefix DEFAULT_DST = Prefix.ZERO;\n+  public static final boolean DEFAULT_SDWAN_ENABLED = false;\n+  public static final Status DEFAULT_STATUS = Status.ENABLE;\n+\n+  public StaticRoute(String seqNum) {\n+    _seqNum = seqNum;\n+  }\n+\n+  public @Nullable String getDevice() {\n+    return _device;\n+  }\n+\n+  public @Nullable Integer getDistance() {\n+    return _distance;\n+  }\n+\n+  /** Effective administrative distance, even if not explicitly configured. */\n+  public int getDistanceEffective() {\n+    return firstNonNull(\n+        _distance, getSdwanEnabledEffective() ? DEFAULT_DISTANCE_SDWAN : DEFAULT_DISTANCE);\n+  }\n+\n+  public @Nullable Prefix getDst() {\n+    return _dst;\n+  }\n+\n+  public @Nonnull Prefix getDstEffective() {\n+    return firstNonNull(_dst, DEFAULT_DST);\n+  }\n+\n+  public @Nullable Ip getGateway() {\n+    return _gateway;\n+  }\n+\n+  public Boolean getSdwanEnabled() {\n+    return _sdwanEnabled;\n+  }\n+\n+  public boolean getSdwanEnabledEffective() {\n+    return firstNonNull(_sdwanEnabled, DEFAULT_SDWAN_ENABLED);\n+  }\n+\n+  public @Nonnull String getSeqNum() {\n+    return _seqNum;\n+  }\n+\n+  public @Nullable Status getStatus() {\n+    return _status;\n+  }\n+\n+  /** Effective status: {@code true} if route is enabled. */\n+  public boolean getStatusEffective() {\n+    return firstNonNull(_status, DEFAULT_STATUS) == Status.ENABLE;\n+  }\n+\n+  public void setDevice(String device) {\n+    _device = device;\n+  }\n+\n+  public void setDistance(Integer distance) {\n+    _distance = distance;\n+  }\n+\n+  public void setDst(Prefix dst) {\n+    _dst = dst;\n+  }\n+\n+  public void setGateway(Ip gateway) {\n+    _gateway = gateway;\n+  }\n+\n+  public void setSdwanEnabled(Boolean sdwanEnabled) {\n+    _sdwanEnabled = sdwanEnabled;\n+  }\n+\n+  public void setStatus(Status status) {\n+    _status = status;\n+  }\n+}"
  },
  {
    "sha": "5015d9f5f31627f874e6ab30dcf9101cf8403ad6",
    "filename": "projects/batfish/src/test/java/org/batfish/grammar/fortios/FortiosGrammarTest.java",
    "status": "modified",
    "additions": 104,
    "deletions": 0,
    "changes": 104,
    "blob_url": "https://github.com/batfish/batfish/blob/ee3ffa824b5b2cefca64c145e5f30696585a6ead/projects/batfish/src/test/java/org/batfish/grammar/fortios/FortiosGrammarTest.java",
    "raw_url": "https://github.com/batfish/batfish/raw/ee3ffa824b5b2cefca64c145e5f30696585a6ead/projects/batfish/src/test/java/org/batfish/grammar/fortios/FortiosGrammarTest.java",
    "contents_url": "https://api.github.com/repos/batfish/batfish/contents/projects/batfish/src/test/java/org/batfish/grammar/fortios/FortiosGrammarTest.java?ref=ee3ffa824b5b2cefca64c145e5f30696585a6ead",
    "patch": "@@ -45,6 +45,7 @@\n import java.util.Arrays;\n import java.util.List;\n import java.util.Map;\n+import java.util.Set;\n import java.util.stream.Stream;\n import javax.annotation.Nonnull;\n import net.sf.javabdd.BDD;\n@@ -79,6 +80,7 @@\n import org.batfish.datamodel.SubRange;\n import org.batfish.datamodel.UniverseIpSpace;\n import org.batfish.datamodel.answers.ConvertConfigurationAnswerElement;\n+import org.batfish.datamodel.route.nh.NextHopInterface;\n import org.batfish.main.Batfish;\n import org.batfish.main.BatfishTestUtils;\n import org.batfish.representation.fortios.Address;\n@@ -92,6 +94,7 @@\n import org.batfish.representation.fortios.Policy.Action;\n import org.batfish.representation.fortios.Service;\n import org.batfish.representation.fortios.Service.Protocol;\n+import org.batfish.representation.fortios.StaticRoute;\n import org.batfish.representation.fortios.Zone;\n import org.batfish.representation.fortios.Zone.IntrazoneAction;\n import org.hamcrest.Matcher;\n@@ -1257,6 +1260,107 @@ public void testFirewallPolicyWarnings() throws IOException {\n             contains(WarningMatchers.hasText(\"Ignoring policy 3: Action IPSEC is not supported\"))));\n   }\n \n+  @Test\n+  public void testStaticRouteExtraction() {\n+    String hostname = \"static_routes\";\n+    FortiosConfiguration vc = parseVendorConfig(hostname);\n+\n+    assertThat(vc.getStaticRoutes(), hasKeys(\"0\", \"1\", \"2\", \"4294967295\"));\n+\n+    // All values explicitly configured\n+    StaticRoute r0 = vc.getStaticRoutes().get(\"0\");\n+    assertThat(r0.getDevice(), equalTo(\"port1\"));\n+    assertThat(r0.getDistance(), equalTo(20));\n+    assertThat(r0.getDst(), equalTo(Prefix.parse(\"1.1.1.0/24\")));\n+    assertThat(r0.getGateway(), equalTo(Ip.parse(\"2.2.2.2\")));\n+    assertThat(r0.getSdwanEnabled(), equalTo(false));\n+    assertThat(r0.getStatus(), equalTo(StaticRoute.Status.ENABLE));\n+\n+    // All values default except device (which is required to be set)\n+    StaticRoute r1 = vc.getStaticRoutes().get(\"1\");\n+    assertThat(r1.getDevice(), equalTo(\"port1\"));\n+    assertNull(r1.getDistance());\n+    assertThat(r1.getDistanceEffective(), equalTo(StaticRoute.DEFAULT_DISTANCE));\n+    assertNull(r1.getDst());\n+    assertThat(r1.getDstEffective(), equalTo(StaticRoute.DEFAULT_DST));\n+    assertNull(r1.getGateway());\n+    assertNull(r1.getSdwanEnabled());\n+    assertFalse(r1.getSdwanEnabledEffective());\n+    assertNull(r1.getStatus());\n+    assertTrue(r1.getStatusEffective());\n+\n+    // SD-WAN enabled; default distance should reflect that\n+    StaticRoute r2 = vc.getStaticRoutes().get(\"2\");\n+    assertThat(r2.getSdwanEnabled(), equalTo(true));\n+    assertThat(r2.getDistanceEffective(), equalTo(StaticRoute.DEFAULT_DISTANCE_SDWAN));\n+\n+    // Disabled (also max seq num)\n+    StaticRoute r4294967295 = vc.getStaticRoutes().get(\"4294967295\");\n+    assertThat(r4294967295.getStatus(), equalTo(StaticRoute.Status.DISABLE));\n+  }\n+\n+  @Test\n+  public void testStaticRouteConversion() throws IOException {\n+    String hostname = \"static_routes\";\n+    Configuration c = parseConfig(hostname);\n+\n+    Set<org.batfish.datamodel.StaticRoute> staticRoutes =\n+        c.getVrfs().get(computeVrfName(\"root\", Interface.DEFAULT_VRF)).getStaticRoutes();\n+\n+    org.batfish.datamodel.StaticRoute expected0 =\n+        org.batfish.datamodel.StaticRoute.builder()\n+            .setAdmin(20)\n+            .setNetwork(Prefix.parse(\"1.1.1.0/24\"))\n+            .setNextHop(NextHopInterface.of(\"port1\", Ip.parse(\"2.2.2.2\")))\n+            .build();\n+    org.batfish.datamodel.StaticRoute expected1 =\n+        org.batfish.datamodel.StaticRoute.builder()\n+            .setAdmin(StaticRoute.DEFAULT_DISTANCE)\n+            .setNetwork(Prefix.ZERO)\n+            .setNextHop(NextHopInterface.of(\"port1\"))\n+            .build();\n+    org.batfish.datamodel.StaticRoute expected2 =\n+        org.batfish.datamodel.StaticRoute.builder()\n+            .setAdmin(StaticRoute.DEFAULT_DISTANCE_SDWAN)\n+            .setNetwork(Prefix.parse(\"2.2.2.0/24\"))\n+            .setNextHop(NextHopInterface.of(\"port1\"))\n+            .build();\n+\n+    // Route 4294967295 doesn't get converted because it's disabled\n+    assertThat(staticRoutes, containsInAnyOrder(expected0, expected1, expected2));\n+  }\n+\n+  @Test\n+  public void testStaticRouteWarnings() throws IOException {\n+    String hostname = \"static_route_warnings\";\n+    Batfish batfish = getBatfishForConfigurationNames(hostname);\n+    Warnings parseWarnings =\n+        getOnlyElement(\n+            batfish\n+                .loadParseVendorConfigurationAnswerElement(batfish.getSnapshot())\n+                .getWarnings()\n+                .values());\n+    assertThat(\n+        parseWarnings,\n+        hasParseWarnings(\n+            containsInAnyOrder(\n+                hasComment(\n+                    \"Expected static route sequence number in range 0-4294967295, but got\"\n+                        + \" '4294967296'\"),\n+                hasComment(\n+                    \"Expected static route sequence number in range 0-4294967295, but got\"\n+                        + \" 'not_a_number'\"),\n+                allOf(\n+                    hasComment(\"Static route edit block ignored: sequence number is invalid\"),\n+                    hasText(containsString(\"edit 4294967296\"))),\n+                allOf(\n+                    hasComment(\"Static route edit block ignored: sequence number is invalid\"),\n+                    hasText(containsString(\"edit not_a_number\"))),\n+                allOf(\n+                    hasComment(\"Static route edit block ignored: device must be set\"),\n+                    hasText(containsString(\"edit 1\"))))));\n+  }\n+\n   @Test\n   public void testSystemRecovery() throws IOException {\n     String hostname = \"fortios_system_recovery\";"
  },
  {
    "sha": "7499a191686ff36d76ba748193ce74987af25a1f",
    "filename": "projects/batfish/src/test/resources/org/batfish/grammar/fortios/testconfigs/static_route_warnings",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/batfish/batfish/blob/ee3ffa824b5b2cefca64c145e5f30696585a6ead/projects/batfish/src/test/resources/org/batfish/grammar/fortios/testconfigs/static_route_warnings",
    "raw_url": "https://github.com/batfish/batfish/raw/ee3ffa824b5b2cefca64c145e5f30696585a6ead/projects/batfish/src/test/resources/org/batfish/grammar/fortios/testconfigs/static_route_warnings",
    "contents_url": "https://api.github.com/repos/batfish/batfish/contents/projects/batfish/src/test/resources/org/batfish/grammar/fortios/testconfigs/static_route_warnings?ref=ee3ffa824b5b2cefca64c145e5f30696585a6ead",
    "patch": "@@ -0,0 +1,13 @@\n+config system global\n+    set hostname \"static_route_warnings\"\n+end\n+config router static\n+    # Sequence number too high\n+    edit 4294967296\n+    next\n+    edit not_a_number\n+    next\n+    # No device set\n+    edit 1\n+    next\n+end"
  },
  {
    "sha": "e21c7acfcbb3f3318dcb0dab3871d5adddaa80a6",
    "filename": "projects/batfish/src/test/resources/org/batfish/grammar/fortios/testconfigs/static_routes",
    "status": "added",
    "additions": 31,
    "deletions": 0,
    "changes": 31,
    "blob_url": "https://github.com/batfish/batfish/blob/ee3ffa824b5b2cefca64c145e5f30696585a6ead/projects/batfish/src/test/resources/org/batfish/grammar/fortios/testconfigs/static_routes",
    "raw_url": "https://github.com/batfish/batfish/raw/ee3ffa824b5b2cefca64c145e5f30696585a6ead/projects/batfish/src/test/resources/org/batfish/grammar/fortios/testconfigs/static_routes",
    "contents_url": "https://api.github.com/repos/batfish/batfish/contents/projects/batfish/src/test/resources/org/batfish/grammar/fortios/testconfigs/static_routes?ref=ee3ffa824b5b2cefca64c145e5f30696585a6ead",
    "patch": "@@ -0,0 +1,31 @@\n+config system global\n+    set hostname \"static_routes\"\n+end\n+config system interface\n+    edit \"port1\"\n+        set vdom \"root\"\n+    next\n+end\n+config router static\n+    edit 0\n+        set device port1\n+        set distance 20\n+        set dst 1.1.1.1 255.255.255.0\n+        set gateway 2.2.2.2\n+        set sdwan disable\n+        set status enable\n+    next\n+    edit 1\n+        set device port1\n+    next\n+    edit 2\n+        set sdwan enable\n+        set device port1\n+        # Include a dst to easily distinguish the VI route\n+        set dst 2.2.2.2 255.255.255.0\n+    next\n+    edit 4294967295\n+        set status disable\n+        set device port1\n+    next\n+end"
  }
]
