[
  {
    "sha": "414f557229a38a46ab08afd66c2853db55c9b430",
    "filename": ".gitignore",
    "status": "modified",
    "additions": 21,
    "deletions": 2,
    "changes": 23,
    "blob_url": "https://github.com/ValentineU1402/calculatortSwing/blob/09d59cdf0e6cdcc6f1a831b15b7d18ca17e07abe/.gitignore",
    "raw_url": "https://github.com/ValentineU1402/calculatortSwing/raw/09d59cdf0e6cdcc6f1a831b15b7d18ca17e07abe/.gitignore",
    "contents_url": "https://api.github.com/repos/ValentineU1402/calculatortSwing/contents/.gitignore?ref=09d59cdf0e6cdcc6f1a831b15b7d18ca17e07abe",
    "patch": "@@ -1,2 +1,21 @@\n-/.project\n-/.classpath\n+# Package Files #\n+*.jar\n+*.war\n+*.ear\n+\n+# Eclipse\n+.classpath\n+.project\n+.settings/\n+\n+# Intellij\n+.idea/\n+*.iml\n+*.iws\n+\n+# Compiled Files\n+*.class\n+bin/\n+build/\n+/bin1/\n+java/build/**\n\\ No newline at end of file"
  },
  {
    "sha": "9fef2a3c98f3b21858ba910fb69d0b0a97ec58df",
    "filename": "bin/com/ushych/luxoft/Main.class",
    "status": "removed",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/ValentineU1402/calculatortSwing/blob/f78f74a768f9cc841bf075b8e7fce5ca63a2f4e3/bin/com/ushych/luxoft/Main.class",
    "raw_url": "https://github.com/ValentineU1402/calculatortSwing/raw/f78f74a768f9cc841bf075b8e7fce5ca63a2f4e3/bin/com/ushych/luxoft/Main.class",
    "contents_url": "https://api.github.com/repos/ValentineU1402/calculatortSwing/contents/bin/com/ushych/luxoft/Main.class?ref=f78f74a768f9cc841bf075b8e7fce5ca63a2f4e3"
  },
  {
    "sha": "b1ff5da7dc59c795e8c78df29d066f4f8e69aa53",
    "filename": "src/com/ushych/luxoft/Main.java",
    "status": "removed",
    "additions": 0,
    "deletions": 22,
    "changes": 22,
    "blob_url": "https://github.com/ValentineU1402/calculatortSwing/blob/f78f74a768f9cc841bf075b8e7fce5ca63a2f4e3/src/com/ushych/luxoft/Main.java",
    "raw_url": "https://github.com/ValentineU1402/calculatortSwing/raw/f78f74a768f9cc841bf075b8e7fce5ca63a2f4e3/src/com/ushych/luxoft/Main.java",
    "contents_url": "https://api.github.com/repos/ValentineU1402/calculatortSwing/contents/src/com/ushych/luxoft/Main.java?ref=f78f74a768f9cc841bf075b8e7fce5ca63a2f4e3",
    "patch": "@@ -1,22 +0,0 @@\n-package com.ushych.luxoft;\n-\n-import javax.swing.JButton;\n-import javax.swing.JFrame;\n-import javax.swing.JPanel;\n-\n-public class Main extends JFrame {\n-\n-    public static void main(String[] args) {\n-        JFrame frame = new JFrame(\"Swing calculator\");\n-        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n-        frame.setSize(400, 500);\n-        JPanel calculator = new JPanel();\n-        JPanel history = new JPanel();\n-        frame.getContentPane().add(calculator);\n-        frame.getContentPane().add(history);\n-        JButton button1 = new JButton(\"Press\");\n-        frame.getContentPane().add(button1);\n-        frame.setVisible(true);\n-    }\n-\n-}"
  },
  {
    "sha": "53ea5fbdb0bffbcdc0e52d5b472fe8fc9a689d84",
    "filename": "src/com/ushych/luxoft/View.java",
    "status": "added",
    "additions": 188,
    "deletions": 0,
    "changes": 188,
    "blob_url": "https://github.com/ValentineU1402/calculatortSwing/blob/09d59cdf0e6cdcc6f1a831b15b7d18ca17e07abe/src/com/ushych/luxoft/View.java",
    "raw_url": "https://github.com/ValentineU1402/calculatortSwing/raw/09d59cdf0e6cdcc6f1a831b15b7d18ca17e07abe/src/com/ushych/luxoft/View.java",
    "contents_url": "https://api.github.com/repos/ValentineU1402/calculatortSwing/contents/src/com/ushych/luxoft/View.java?ref=09d59cdf0e6cdcc6f1a831b15b7d18ca17e07abe",
    "patch": "@@ -0,0 +1,188 @@\n+package com.ushych.luxoft;\n+\n+import java.awt.BorderLayout;\n+import java.awt.FlowLayout;\n+import java.awt.GridLayout;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.event.ItemEvent;\n+import java.awt.event.ItemListener;\n+\n+import com.ushych.luxoft.controllers.CalculateController;\n+\n+import javax.swing.JButton;\n+import javax.swing.JCheckBox;\n+import javax.swing.JComboBox;\n+import javax.swing.JFrame;\n+import javax.swing.JLabel;\n+import javax.swing.JPanel;\n+import javax.swing.JScrollPane;\n+import javax.swing.JTabbedPane;\n+import javax.swing.JTextArea;\n+import javax.swing.JTextField;\n+import javax.swing.SwingConstants;\n+import javax.swing.event.ChangeEvent;\n+import javax.swing.event.ChangeListener;\n+import javax.swing.event.DocumentEvent;\n+import javax.swing.event.DocumentListener;\n+import javax.swing.text.AbstractDocument;\n+import javax.swing.text.AttributeSet;\n+import javax.swing.text.BadLocationException;\n+import javax.swing.text.DocumentFilter;\n+\n+public class View extends JFrame {\n+\n+    private static CalculateController controller = new CalculateController();\n+\n+    private static JTextField firstField = new JTextField();\n+    private static JComboBox<String> comboBox = new JComboBox();\n+    private static JTextField secondField = new JTextField();\n+    private static JCheckBox checkBox = new JCheckBox(\"Calculate on the fly\");\n+    private static JButton calculateButton = new JButton(\"Calculate\");\n+    private static JLabel resultLabel = new JLabel(\"Result:\");\n+    private static JTextField resultField = new JTextField();\n+\n+    public static void main(String[] args) {\n+        JFrame frame = new JFrame(\"Swing calculator\");\n+        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+        frame.setLocationRelativeTo(null);\n+        frame.setSize(300, 400);\n+\n+        JTabbedPane tablePane = createTableWithPanes();\n+\n+        frame.getContentPane().add(tablePane, BorderLayout.CENTER);\n+        frame.setVisible(true);\n+    }\n+\n+    private static JTabbedPane createTableWithPanes() {\n+        JTabbedPane tablePane = new JTabbedPane();\n+        tablePane.addTab(\"Calculator\", createCalculatorPanel());\n+        tablePane.addTab(\"History\", createHistoryPanel());\n+        tablePane.addChangeListener(new ChangeListener() {\n+            @Override\n+            public void stateChanged(ChangeEvent e) {\n+                JTextArea historyField = new JTextArea(controller.getCalculateHistory());\n+                historyField.setEditable(false);\n+                JScrollPane scrollPane = new JScrollPane(historyField);\n+                JPanel component = (JPanel) tablePane.getComponentAt(1);\n+                component.removeAll();\n+                component.add(scrollPane);\n+            }\n+        });\n+        tablePane.setSelectedIndex(0);\n+        return tablePane;\n+    }\n+\n+    private static JPanel createCalculatorPanel() {\n+        JPanel panel = new JPanel();\n+        panel.setLayout(new BorderLayout());\n+        JPanel panelExpression = new JPanel();\n+        panelExpression.setLayout(new GridLayout(0, 3));\n+        JPanel panelAction = new JPanel();\n+        panelAction.setLayout(new FlowLayout());\n+        JPanel panelResult = new JPanel();\n+        panelResult.setLayout(new GridLayout(0, 2));\n+\n+        firstField = createFilteredField();\n+        comboBox = createOperationField();\n+        secondField = createFilteredField();\n+\n+        panelExpression.add(firstField);\n+        panelExpression.add(comboBox);\n+        panelExpression.add(secondField);\n+\n+        panelAction.add(checkBox);\n+        panelAction.add(calculateButton);\n+\n+        panelResult.add(resultLabel);\n+        panelResult.add(resultField);\n+\n+        resultField.setEditable(false);\n+        resultField.setHorizontalAlignment(SwingConstants.RIGHT);\n+        calculateButton.addActionListener(new ActionListener() {\n+            @Override\n+            public void actionPerformed(ActionEvent e) {\n+                String result = controller.calculate(firstField.getText(), comboBox.getSelectedItem().toString(),\n+                        secondField.getText());\n+                resultField.setText(result);\n+            }\n+        });\n+\n+        DocumentListener documentListener = createDocumentListener();\n+\n+        checkBox.addItemListener(new ItemListener() {\n+            @Override\n+            public void itemStateChanged(ItemEvent e) {\n+                if (checkBox.isSelected()) {\n+                    addDocumentListener(documentListener);\n+                } else {\n+                    removeDocumentListener(documentListener);\n+                }\n+            }\n+        });\n+\n+        panel.add(panelExpression, BorderLayout.NORTH);\n+        panel.add(panelAction, BorderLayout.CENTER);\n+        panel.add(panelResult, BorderLayout.SOUTH);\n+        return panel;\n+    }\n+\n+    private static JTextField createFilteredField() {\n+        JTextField field = new JTextField();\n+        ((AbstractDocument) field.getDocument()).setDocumentFilter(new DocumentFilter() {\n+            @Override\n+            public void replace(DocumentFilter.FilterBypass fb, int offset, int length, String text, AttributeSet attr)\n+                    throws BadLocationException {\n+                fb.insertString(offset, text.replaceAll(\".*[^\\\\d*(.)\\\\d*]\", \"\"), attr);\n+            }\n+        });\n+        return field;\n+\n+    }\n+\n+    private static JComboBox<String> createOperationField() {\n+        String[] opertions = { \"+\", \"-\", \"*\", \"/\" };\n+        JComboBox<String> comboBox = new JComboBox<>(opertions);\n+        return comboBox;\n+    }\n+\n+    private static JPanel createHistoryPanel() {\n+        JPanel panel = new JPanel();\n+        panel.setLayout(new BorderLayout());\n+        return panel;\n+    }\n+\n+    private static void addDocumentListener(DocumentListener documentListener) {\n+        ((AbstractDocument) firstField.getDocument()).addDocumentListener(documentListener);\n+        ((AbstractDocument) secondField.getDocument()).addDocumentListener(documentListener);\n+        calculateButton.setEnabled(false);\n+    }\n+\n+    private static void removeDocumentListener(DocumentListener documentListener) {\n+        ((AbstractDocument) firstField.getDocument()).removeDocumentListener(documentListener);\n+        ((AbstractDocument) secondField.getDocument()).removeDocumentListener(documentListener);\n+        calculateButton.setEnabled(true);\n+    }\n+\n+    private static DocumentListener createDocumentListener() {\n+        return new DocumentListener() {\n+            @Override\n+            public void removeUpdate(DocumentEvent e) {\n+                changedUpdate(e);\n+            }\n+\n+            @Override\n+            public void insertUpdate(DocumentEvent e) {\n+                changedUpdate(e);\n+            }\n+\n+            @Override\n+            public void changedUpdate(DocumentEvent e) {\n+                String result = controller.calculate(firstField.getText(), comboBox.getSelectedItem().toString(),\n+                        secondField.getText());\n+                resultField.setText(result);\n+            }\n+        };\n+    }\n+\n+}"
  },
  {
    "sha": "df60c613cfbebce05bfd670fe8fe8e200ff17398",
    "filename": "src/com/ushych/luxoft/controllers/CalculateController.java",
    "status": "added",
    "additions": 78,
    "deletions": 0,
    "changes": 78,
    "blob_url": "https://github.com/ValentineU1402/calculatortSwing/blob/09d59cdf0e6cdcc6f1a831b15b7d18ca17e07abe/src/com/ushych/luxoft/controllers/CalculateController.java",
    "raw_url": "https://github.com/ValentineU1402/calculatortSwing/raw/09d59cdf0e6cdcc6f1a831b15b7d18ca17e07abe/src/com/ushych/luxoft/controllers/CalculateController.java",
    "contents_url": "https://api.github.com/repos/ValentineU1402/calculatortSwing/contents/src/com/ushych/luxoft/controllers/CalculateController.java?ref=09d59cdf0e6cdcc6f1a831b15b7d18ca17e07abe",
    "patch": "@@ -0,0 +1,78 @@\n+package com.ushych.luxoft.controllers;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import com.ushych.luxoft.services.OperationService;\n+\n+public class CalculateController {\n+\n+    private List<String> calculateHistory;\n+    private OperationService service;\n+\n+    public CalculateController() {\n+        this.calculateHistory = new ArrayList<>();\n+        this.service = new OperationService();\n+    }\n+\n+    public String calculate(String firstInt, String operation, String secondInt) {\n+        var result = \"\";\n+        if (checkInput(firstInt, operation, secondInt)) {\n+            switch (operation) {\n+            case (\"+\"):\n+                result = String.valueOf(service.plus(parseFloat(firstInt), parseFloat(secondInt)));\n+                break;\n+            case (\"-\"):\n+                result = String.valueOf(service.minus(parseFloat(firstInt), parseFloat(secondInt)));\n+                break;\n+            case (\"*\"):\n+                result = String.valueOf(service.multiply(parseFloat(firstInt), parseFloat(secondInt)));\n+                break;\n+            case (\"/\"):\n+                if (Float.parseFloat(secondInt) == 0.0) {\n+                    result = \"divide by zero\";\n+                    break;\n+                }\n+                if (checkInput(firstInt, operation, secondInt)) {\n+                    result = String.valueOf(service.divide(parseFloat(firstInt), parseFloat(secondInt)));\n+                } else {\n+\n+                }\n+                break;\n+            default:\n+                break;\n+            }\n+        } else {\n+            result = \"Incorect input\";\n+        }\n+        addCalculateHistory((firstInt + operation + secondInt) + \" = \" + result);\n+        return result;\n+    }\n+\n+    private float parseFloat(String number) {\n+        var result = Float.parseFloat(number);\n+        return result;\n+    }\n+\n+    private void addCalculateHistory(String expresion) {\n+        calculateHistory.add(expresion);\n+    }\n+\n+    private boolean checkInput(String first, String operation, String second) {\n+        var result = false;\n+        if ((!first.isBlank() && !first.isEmpty()) && (!second.isBlank() && !second.isEmpty())) {\n+            result = true;\n+        }\n+        if (!(first.length() > 0 || second.length() > 0) && (first.charAt(0) == '0' || second.charAt(0) == '0')) {\n+            result = false;\n+        }\n+        return result;\n+    }\n+\n+    public String getCalculateHistory() {\n+        return calculateHistory.stream().map(expression -> String.valueOf(expression))\n+                .collect(Collectors.joining(\"\\n\"));\n+    }\n+\n+}"
  },
  {
    "sha": "bcb51fee00c8dcd008812c1f3219f0bb197fec53",
    "filename": "src/com/ushych/luxoft/services/OperationService.java",
    "status": "added",
    "additions": 24,
    "deletions": 0,
    "changes": 24,
    "blob_url": "https://github.com/ValentineU1402/calculatortSwing/blob/09d59cdf0e6cdcc6f1a831b15b7d18ca17e07abe/src/com/ushych/luxoft/services/OperationService.java",
    "raw_url": "https://github.com/ValentineU1402/calculatortSwing/raw/09d59cdf0e6cdcc6f1a831b15b7d18ca17e07abe/src/com/ushych/luxoft/services/OperationService.java",
    "contents_url": "https://api.github.com/repos/ValentineU1402/calculatortSwing/contents/src/com/ushych/luxoft/services/OperationService.java?ref=09d59cdf0e6cdcc6f1a831b15b7d18ca17e07abe",
    "patch": "@@ -0,0 +1,24 @@\n+package com.ushych.luxoft.services;\n+\n+public class OperationService {\n+\n+    public float plus(float firstNumber, float secondNumber) {\n+        var result = firstNumber + secondNumber;\n+        return result;\n+    }\n+\n+    public float minus(float firstNumber, float secondNumber) {\n+        var result = firstNumber - secondNumber;\n+        return result;\n+    }\n+\n+    public float multiply(float firstNumber, float secondNumber) {\n+        var result = firstNumber * secondNumber;\n+        return result;\n+    }\n+\n+    public float divide(float firstNumber, float secondNumber) {\n+        var result = firstNumber / secondNumber;\n+        return result;\n+    }\n+}"
  }
]
