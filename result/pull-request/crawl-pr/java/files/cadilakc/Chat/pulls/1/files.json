[
  {
    "sha": "47513840ab1e25388699d09dc09bb087999da516",
    "filename": "Client/src/main/java/ru/fda/chat/Controller.java",
    "status": "modified",
    "additions": 34,
    "deletions": 30,
    "changes": 64,
    "blob_url": "https://github.com/cadilakc/Chat/blob/505c8b905f4ef6b002ff0c7881a8276345353a50/Client/src/main/java/ru/fda/chat/Controller.java",
    "raw_url": "https://github.com/cadilakc/Chat/raw/505c8b905f4ef6b002ff0c7881a8276345353a50/Client/src/main/java/ru/fda/chat/Controller.java",
    "contents_url": "https://api.github.com/repos/cadilakc/Chat/contents/Client/src/main/java/ru/fda/chat/Controller.java?ref=505c8b905f4ef6b002ff0c7881a8276345353a50",
    "patch": "@@ -39,28 +39,47 @@ public void setUsername(String username) {\n         }\n     }\n \n+    public void login() {\n+        if (socket == null || socket.isClosed()) {\n+            connect();\n+        }\n+        if (usernameField.getText().isEmpty()) {\n+            Alert alert = new Alert(Alert.AlertType.ERROR, \"Имя пользователя не может быть пустым!\", ButtonType.OK);\n+            alert.showAndWait();\n+            return;\n+        }\n+        try {\n+            out.writeUTF(\"/login \" + usernameField.getText());\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+    }\n+\n     public void connect() {\n         try {\n             socket = new Socket(\"localhost\", 8189);\n             in = new DataInputStream(socket.getInputStream());\n             out = new DataOutputStream(socket.getOutputStream());\n             Thread t = new Thread(() -> {\n                 try {\n+\n                     while (true) {\n-                        String message = in.readUTF();\n-                        if (message.startsWith(\"/login_ok \")) {\n-                            setUsername(message.split(\"\\\\s\")[1]);\n+                        String msg = in.readUTF();\n+                        if (msg.startsWith(\"/login_ok \")) {\n+                            setUsername(msg.split(\"\\\\s\")[1]);\n                             break;\n                         }\n-                        if (message.startsWith(\"/login_failed \")) {\n-                            String cause = message.split(\"\\\\s\", 2)[1];\n+                        if (msg.startsWith(\"/login_failed \")) {\n+                            String cause = msg.split(\"\\\\s\", 2)[1];\n                             textChat.appendText(cause + \"\\n\");\n                         }\n                     }\n+\n                     while (true) {\n-                        String message = in.readUTF();\n-                        textChat.appendText(message + \"\\n\");\n+                        String msg = in.readUTF();\n+                        textChat.appendText(msg + \"\\n\");\n                     }\n+\n                 } catch (IOException e) {\n                     e.printStackTrace();\n                 } finally {\n@@ -69,23 +88,19 @@ public void connect() {\n             });\n             t.start();\n         } catch (IOException e) {\n-            throw new RuntimeException(\"Unable to connect to server [ localhost:8189 ]\");\n+            Alert alert = new Alert(Alert.AlertType.ERROR, \"Невозможно подключиться\", ButtonType.OK);\n+            alert.showAndWait();\n         }\n     }\n \n-    public void login() {\n-        if (socket == null || socket.isClosed()) {\n-            connect();\n-        }\n-        if (usernameField.getText().isEmpty()) {\n-            Alert alert = new Alert(Alert.AlertType.ERROR, \"Имя пользователя не может быть пустым!\", ButtonType.OK);\n-            alert.showAndWait();\n-            return;\n-        }\n+    public void clickSend() {\n         try {\n-            out.writeUTF(\"/login \" + usernameField.getText());\n+            out.writeUTF(message.getText());\n+            message.clear();\n+            message.requestFocus();\n         } catch (IOException e) {\n-            e.printStackTrace();\n+            Alert alert = new Alert(Alert.AlertType.ERROR, \"Невозможно отправить сообщение\", ButtonType.OK);\n+            alert.showAndWait();\n         }\n     }\n \n@@ -99,15 +114,4 @@ public void disconnect() {\n             e.printStackTrace();\n         }\n     }\n-\n-    public void clickSend() {\n-        try {\n-            out.writeUTF(message.getText());\n-            message.clear();\n-            message.requestFocus();\n-        } catch (IOException e) {\n-            Alert alert = new Alert(Alert.AlertType.ERROR, \"Невозможно отправить сообщение\", ButtonType.OK);\n-            alert.showAndWait();\n-        }\n-    }\n }"
  },
  {
    "sha": "2e7bd857bcb2cb8a1fb9a358634333a1c30b9f6b",
    "filename": "Server/src/main/java/ru/fda/chat/ClientHandler.java",
    "status": "modified",
    "additions": 13,
    "deletions": 3,
    "changes": 16,
    "blob_url": "https://github.com/cadilakc/Chat/blob/505c8b905f4ef6b002ff0c7881a8276345353a50/Server/src/main/java/ru/fda/chat/ClientHandler.java",
    "raw_url": "https://github.com/cadilakc/Chat/raw/505c8b905f4ef6b002ff0c7881a8276345353a50/Server/src/main/java/ru/fda/chat/ClientHandler.java",
    "contents_url": "https://api.github.com/repos/cadilakc/Chat/contents/Server/src/main/java/ru/fda/chat/ClientHandler.java?ref=505c8b905f4ef6b002ff0c7881a8276345353a50",
    "patch": "@@ -28,18 +28,28 @@ public ClientHandler(Server server, Socket socket) throws Exception {\n                     if (msg.startsWith(\"/login \")) {\n                         String usernameFromLogin = msg.split(\"\\\\s\")[1];\n                         if (server.isUserOnline(usernameFromLogin)) {\n-                            sendMessage(\"/login_failed Current nickname is already used \" + username);\n+                            sendMessage(\"/login_failed Current nickname is already used\");\n                             continue;\n                         }\n                         username = usernameFromLogin;\n                         sendMessage(\"/login_ok \" + username);\n-                        server.broadcastMessage(username + \": \" + msg);\n+                        server.subscribe(this);\n                         break;\n                     }\n                 }\n                 while (true) {\n                     String msg = in.readUTF();\n-                    server.broadcastMessage(msg);\n+\n+                    if (msg.equals(\"/exit\")) {\n+                        break;\n+                    }\n+\n+                    if (msg.equals(\"/who_am_i\")) {\n+                        this.sendMessage(\"Ваш текущий никнейм: \" + username);\n+                        continue;\n+                    }\n+\n+                    server.broadcastMessage(username + \": \" + msg);\n                 }\n             } catch (IOException e) {\n                 e.printStackTrace();"
  }
]
