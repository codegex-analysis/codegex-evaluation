[
  {
    "sha": "5243e93a5f063947adde4ad5974da981c463d65a",
    "filename": ".gitignore",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/pandeymadhuri/location-management-api/blob/01abebc087635d06968339d5b965fe9249778b74/.gitignore",
    "raw_url": "https://github.com/pandeymadhuri/location-management-api/raw/01abebc087635d06968339d5b965fe9249778b74/.gitignore",
    "contents_url": "https://api.github.com/repos/pandeymadhuri/location-management-api/contents/.gitignore?ref=01abebc087635d06968339d5b965fe9249778b74",
    "patch": "@@ -12,6 +12,8 @@ target/\n .settings\n .springBeans\n .sts4-cache\n+test.trace.db\n+test.mv.db\n \n ### IntelliJ IDEA ###\n .idea"
  },
  {
    "sha": "8a95b1841e5c317054901bed420c615c73752d13",
    "filename": "Imp Links",
    "status": "added",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/pandeymadhuri/location-management-api/blob/01abebc087635d06968339d5b965fe9249778b74/Imp%20Links",
    "raw_url": "https://github.com/pandeymadhuri/location-management-api/raw/01abebc087635d06968339d5b965fe9249778b74/Imp%20Links",
    "contents_url": "https://api.github.com/repos/pandeymadhuri/location-management-api/contents/Imp%20Links?ref=01abebc087635d06968339d5b965fe9249778b74",
    "patch": "@@ -0,0 +1,2 @@\n+https://howtodoinjava.com/spring-boot2/spring-rest-request-validation/ ->Field Validations in SpringBoot\r\n+https://www.javainuse.com/spring/boot_swagger \n\\ No newline at end of file"
  },
  {
    "sha": "b19256379b73dfc917d6d2139adc83c4a7fc3e13",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 42,
    "deletions": 2,
    "changes": 44,
    "blob_url": "https://github.com/pandeymadhuri/location-management-api/blob/01abebc087635d06968339d5b965fe9249778b74/pom.xml",
    "raw_url": "https://github.com/pandeymadhuri/location-management-api/raw/01abebc087635d06968339d5b965fe9249778b74/pom.xml",
    "contents_url": "https://api.github.com/repos/pandeymadhuri/location-management-api/contents/pom.xml?ref=01abebc087635d06968339d5b965fe9249778b74",
    "patch": "@@ -5,8 +5,8 @@\n \t<parent>\n \t\t<groupId>org.springframework.boot</groupId>\n \t\t<artifactId>spring-boot-starter-parent</artifactId>\n-\t\t<version>2.4.1</version>\n-\t\t<relativePath/> <!-- lookup parent from repository -->\n+\t\t<version>2.1.5.RELEASE</version>\n+\t\t<relativePath /> <!-- lookup parent from repository -->\n \t</parent>\n \t<groupId>com.mycompany</groupId>\n \t<artifactId>location-management-api</artifactId>\n@@ -16,6 +16,8 @@\n \n \t<properties>\n \t\t<java.version>1.8</java.version>\n+\t\t<junit-jupiter.version>5.3.2</junit-jupiter.version>\n+\t\t<mockito.version>2.24.0</mockito.version>\n \t</properties>\n \n \t<dependencies>\n@@ -24,6 +26,23 @@\n \t\t\t<artifactId>spring-boot-starter-web</artifactId>\n \t\t</dependency>\n \n+\t\t<dependency>\n+\t\t\t<groupId>org.springframework.boot</groupId>\n+\t\t\t<artifactId>spring-boot-starter-data-jpa</artifactId>\n+\t\t</dependency>\n+\n+\t\t<dependency>\n+\t\t\t<groupId>io.springfox</groupId>\n+\t\t\t<artifactId>springfox-swagger2</artifactId>\n+\t\t\t<version>2.4.0</version>\n+\t\t</dependency>\n+\n+\t\t<dependency>\n+\t\t\t<groupId>io.springfox</groupId>\n+\t\t\t<artifactId>springfox-swagger-ui</artifactId>\n+\t\t\t<version>2.4.0</version>\n+\t\t</dependency>\n+\n \t\t<dependency>\n \t\t\t<groupId>org.springframework.boot</groupId>\n \t\t\t<artifactId>spring-boot-devtools</artifactId>\n@@ -34,6 +53,19 @@\n \t\t\t<groupId>org.springframework.boot</groupId>\n \t\t\t<artifactId>spring-boot-starter-test</artifactId>\n \t\t\t<scope>test</scope>\n+\t\t\t<!-- <exclusions> <exclusion> <groupId>junit</groupId> <artifactId>junit</artifactId> \n+\t\t\t\t</exclusion> </exclusions> -->\n+\t\t</dependency><!-- <dependency> <groupId>org.junit.jupiter</groupId> <artifactId>junit-jupiter-engine</artifactId> \n+\t\t\t<version>${junit-jupiter.version}</version> <scope>test</scope> </dependency> -->\n+\t\t<dependency>\n+\t\t\t<groupId>com.h2database</groupId>\n+\t\t\t<artifactId>h2</artifactId>\n+\t\t\t<scope>runtime</scope>\n+\t\t</dependency>\n+\n+\t\t<dependency>\n+\t\t\t<groupId>org.springframework.boot</groupId>\n+\t\t\t<artifactId>spring-boot-starter-validation</artifactId>\n \t\t</dependency>\n \t</dependencies>\n \n@@ -43,6 +75,14 @@\n \t\t\t\t<groupId>org.springframework.boot</groupId>\n \t\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\n \t\t\t</plugin>\n+\t\t\t<!-- <plugin>\n+\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n+\t\t\t\t<artifactId>maven-surefire-plugin</artifactId>\n+\t\t\t\t<version>3.0.0-M5</version>\n+\t\t\t\t<configuration>\n+\t\t\t\t\t<skipTests>true</skipTests>\n+\t\t\t\t</configuration>\n+\t\t\t</plugin> -->\n \t\t</plugins>\n \t</build>\n "
  },
  {
    "sha": "60d33b783898050f095ab8b57aa266f1277676bb",
    "filename": "src/main/java/com/mycompany/locationmanagementapi/controller/AddressController.java",
    "status": "added",
    "additions": 49,
    "deletions": 0,
    "changes": 49,
    "blob_url": "https://github.com/pandeymadhuri/location-management-api/blob/01abebc087635d06968339d5b965fe9249778b74/src/main/java/com/mycompany/locationmanagementapi/controller/AddressController.java",
    "raw_url": "https://github.com/pandeymadhuri/location-management-api/raw/01abebc087635d06968339d5b965fe9249778b74/src/main/java/com/mycompany/locationmanagementapi/controller/AddressController.java",
    "contents_url": "https://api.github.com/repos/pandeymadhuri/location-management-api/contents/src/main/java/com/mycompany/locationmanagementapi/controller/AddressController.java?ref=01abebc087635d06968339d5b965fe9249778b74",
    "patch": "@@ -0,0 +1,49 @@\n+package com.mycompany.locationmanagementapi.controller;\n+\n+import java.util.List;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.web.bind.annotation.DeleteMapping;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.PathVariable;\n+import org.springframework.web.bind.annotation.PostMapping;\n+import org.springframework.web.bind.annotation.PutMapping;\n+import org.springframework.web.bind.annotation.RequestBody;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+import com.mycompany.locationmanagementapi.entity.AddressEntity;\n+import com.mycompany.locationmanagementapi.exception.BusinessException;\n+import com.mycompany.locationmanagementapi.service.AddressService;\n+import com.mycompany.locationmanagementapi.service.AddressServiceImpl;\n+\n+@RestController\n+public class AddressController {\n+\t@Autowired\n+\tprivate AddressServiceImpl addressServiceImpl;\n+\t\n+\t@GetMapping(\"/addresses/{id}\")\n+\tpublic ResponseEntity<AddressEntity> getAddress(@PathVariable Long id) throws BusinessException{\n+\t\tAddressEntity addressEntity = addressServiceImpl.getAddress(id);\n+\t\treturn new ResponseEntity<AddressEntity>(addressEntity, HttpStatus.OK);\n+\t}\n+\t \n+\t@GetMapping(\"/addresses\")\n+\tpublic ResponseEntity<List<AddressEntity>> getAllAddress(){\n+\t\tList<AddressEntity> addrList = addressServiceImpl.getAllAddresses();\n+\t\treturn new ResponseEntity<List<AddressEntity>>(addrList,HttpStatus.OK);\n+\t}\n+\t\n+\t@PostMapping(\"/addresses\")\n+\tpublic ResponseEntity<AddressEntity> saveAddress(@RequestBody AddressEntity addr){\n+\t\tAddressEntity addrEntity = addressServiceImpl.save(addr);\n+\t\treturn new ResponseEntity(HttpStatus.OK);\n+\t}\n+\t\n+\t@PutMapping(\"/addresses\")\n+\tpublic void updateAddress(){}\n+\t\n+\t@DeleteMapping(\"addresses\")\n+\tpublic void deleteAddress(){}\n+}"
  },
  {
    "sha": "54be4bc7f0bbb443f846f1d2e43fa178c70ce586",
    "filename": "src/main/java/com/mycompany/locationmanagementapi/controller/HelloAnotherDev.java",
    "status": "added",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/pandeymadhuri/location-management-api/blob/01abebc087635d06968339d5b965fe9249778b74/src/main/java/com/mycompany/locationmanagementapi/controller/HelloAnotherDev.java",
    "raw_url": "https://github.com/pandeymadhuri/location-management-api/raw/01abebc087635d06968339d5b965fe9249778b74/src/main/java/com/mycompany/locationmanagementapi/controller/HelloAnotherDev.java",
    "contents_url": "https://api.github.com/repos/pandeymadhuri/location-management-api/contents/src/main/java/com/mycompany/locationmanagementapi/controller/HelloAnotherDev.java?ref=01abebc087635d06968339d5b965fe9249778b74",
    "patch": "@@ -0,0 +1,10 @@\n+package com.mycompany.locationmanagementapi.controller;\r\n+\r\n+public class HelloAnotherDev {\r\n+\r\n+\tpublic static void main(String[] args) {\r\n+\t\t// TODO Auto-generated method stub\r\n+\r\n+\t}\r\n+\r\n+}\r"
  },
  {
    "sha": "f1d3abf2e86d7e9d0da8045a7ecbab3129c9b831",
    "filename": "src/main/java/com/mycompany/locationmanagementapi/controller/LocationManagementController.java",
    "status": "added",
    "additions": 104,
    "deletions": 0,
    "changes": 104,
    "blob_url": "https://github.com/pandeymadhuri/location-management-api/blob/01abebc087635d06968339d5b965fe9249778b74/src/main/java/com/mycompany/locationmanagementapi/controller/LocationManagementController.java",
    "raw_url": "https://github.com/pandeymadhuri/location-management-api/raw/01abebc087635d06968339d5b965fe9249778b74/src/main/java/com/mycompany/locationmanagementapi/controller/LocationManagementController.java",
    "contents_url": "https://api.github.com/repos/pandeymadhuri/location-management-api/contents/src/main/java/com/mycompany/locationmanagementapi/controller/LocationManagementController.java?ref=01abebc087635d06968339d5b965fe9249778b74",
    "patch": "@@ -0,0 +1,104 @@\n+package com.mycompany.locationmanagementapi.controller;\r\n+\r\n+import java.util.List;\r\n+import java.util.Optional;\r\n+\r\n+import javax.validation.Valid;\r\n+\r\n+import org.slf4j.Logger;\r\n+import org.slf4j.LoggerFactory;\r\n+import org.springframework.beans.factory.annotation.Autowired;\r\n+import org.springframework.beans.factory.annotation.Value;\r\n+import org.springframework.http.HttpStatus;\r\n+import org.springframework.http.ResponseEntity;\r\n+import org.springframework.web.bind.annotation.DeleteMapping;\r\n+import org.springframework.web.bind.annotation.GetMapping;\r\n+import org.springframework.web.bind.annotation.PathVariable;\r\n+import org.springframework.web.bind.annotation.PostMapping;\r\n+import org.springframework.web.bind.annotation.PutMapping;\r\n+import org.springframework.web.bind.annotation.RequestBody;\r\n+import org.springframework.web.bind.annotation.RequestMapping;\r\n+import org.springframework.web.bind.annotation.ResponseBody;\r\n+import org.springframework.web.bind.annotation.RestController;\r\n+import org.springframework.web.util.UriComponents;\r\n+import org.springframework.web.util.UriComponentsBuilder;\r\n+\r\n+import com.mycompany.locationmanagementapi.dto.LocationDTO;\r\n+import com.mycompany.locationmanagementapi.entity.Location;\r\n+import com.mycompany.locationmanagementapi.exception.BusinessException;\r\n+import com.mycompany.locationmanagementapi.service.LocationManagementService;\r\n+\r\n+@RestController\r\n+@RequestMapping(\"/lma/v1\")\r\n+public class LocationManagementController {\r\n+\t\r\n+\tprivate static final Logger LOGGER = LoggerFactory.getLogger(LocationManagementController.class);\r\n+\t\r\n+\t@Autowired\r\n+\tprivate LocationManagementService locationManagementService;\r\n+\t\r\n+\t@GetMapping(\"/locations\")\r\n+\tpublic ResponseEntity<List<Location>> getAllLoctions(){\r\n+\n+\n+\t\tSystem.out.print(\"change made by Ranjan\");\r\n+\n+\t\tSystem.out.println(\"Changes made by Madhuri locally in fetaure branch 2\");\r\n+\n+\n+\t\tSystem.out.println(\"Changes made by Madhuri locally in fetaure branch 2\");\r\n+\n+\t\tSystem.out.println(\"change by another dev\");\n+\t\tSystem.out.println(\"adding new printline in getAllLocations in git\");\r\n+\t\tList<Location> locations = null;\r\n+\t\tlocations = locationManagementService.getAllLoctions();\r\n+\t\tif(locations != null & locations.isEmpty()){\r\n+\t\t\treturn new ResponseEntity<List<Location>>(HttpStatus.NOT_FOUND);\r\n+\t\t}else{\r\n+\t\t\treturn new ResponseEntity<List<Location>>(locations , HttpStatus.OK);\r\n+\t\t}\r\n+\t\t\r\n+   \t}\r\n+\t\r\n+\t@GetMapping(\"/locations/{id}\")\r\n+\tpublic ResponseEntity<Location> getLocationDetal(@PathVariable(\"id\") Long id ){\r\n+\t\tOptional<Location> locationOpt = null;\r\n+\t\t//new changes\r\n+\t\t//old change gone\r\n+\r\n+\t\t//new code added\r\n+\t\tint b = 3;\r\n+\t\tSystem.out.println(b);\r\n+\r\n+\t\t//System.out.println(c);\r\n+\t\t//new code added\r\n+\t\t\t\t//int b = 3;\r\n+\t\t\t\tSystem.out.println(b);\r\n+\r\n+\t\t\tlocationOpt = locationManagementService.getLocationDetail(id);\r\n+\t\t\tif(!locationOpt.isPresent()){\r\n+\t\t\treturn new ResponseEntity<>(HttpStatus.NOT_FOUND);\r\n+\t\t\t}else{\r\n+\t\t\t\treturn new ResponseEntity<Location>(locationOpt.get(),HttpStatus.OK);\r\n+\t\t\t}\r\n+\t}\r\n+\t\r\n+\t@PostMapping(\"/locations\")\r\n+\tpublic @ResponseBody ResponseEntity<Location> createLocation(@Valid @RequestBody LocationDTO locationDTO ){\r\n+\t\tLocation loc = null;  \r\n+\t\tloc = locationManagementService.createLocation(locationDTO);\r\n+\t\treturn new ResponseEntity<Location>(loc, HttpStatus.OK);\r\n+\t}\r\n+\t\r\n+\t@PutMapping(\"/locations\")\r\n+\tpublic ResponseEntity<Location> updateLocation(@Valid @RequestBody Location location)throws BusinessException{\r\n+\t\tLocation updatedLocation = locationManagementService.updateLocation(location);\r\n+\t\treturn new ResponseEntity<Location>(updatedLocation,HttpStatus.OK);\t\t\t\r\n+\t}\r\n+\t\r\n+\t@DeleteMapping(\"/locations/{id}\")\r\n+\tpublic ResponseEntity<Location> deleteLocation(@PathVariable Long id)throws BusinessException{\r\n+\t\tLocation location = locationManagementService.deleteLocation(id);\r\n+\t\treturn new ResponseEntity<Location>(location,HttpStatus.NO_CONTENT);\r\n+\t}\r\n+}\r"
  },
  {
    "sha": "95993352548a6f6a066a8d8ea63911656a554f9d",
    "filename": "src/main/java/com/mycompany/locationmanagementapi/controller/RanjanDev.java",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/pandeymadhuri/location-management-api/blob/01abebc087635d06968339d5b965fe9249778b74/src/main/java/com/mycompany/locationmanagementapi/controller/RanjanDev.java",
    "raw_url": "https://github.com/pandeymadhuri/location-management-api/raw/01abebc087635d06968339d5b965fe9249778b74/src/main/java/com/mycompany/locationmanagementapi/controller/RanjanDev.java",
    "contents_url": "https://api.github.com/repos/pandeymadhuri/location-management-api/contents/src/main/java/com/mycompany/locationmanagementapi/controller/RanjanDev.java?ref=01abebc087635d06968339d5b965fe9249778b74",
    "patch": "@@ -0,0 +1,5 @@\n+package com.mycompany.locationmanagementapi.controller;\r\n+\r\n+public class RanjanDev {\r\n+\r\n+}\r"
  },
  {
    "sha": "e21db5d615e934dd5b1095b3ca6716b7f00c6dea",
    "filename": "src/main/java/com/mycompany/locationmanagementapi/dto/AddressDTO.java",
    "status": "added",
    "additions": 35,
    "deletions": 0,
    "changes": 35,
    "blob_url": "https://github.com/pandeymadhuri/location-management-api/blob/01abebc087635d06968339d5b965fe9249778b74/src/main/java/com/mycompany/locationmanagementapi/dto/AddressDTO.java",
    "raw_url": "https://github.com/pandeymadhuri/location-management-api/raw/01abebc087635d06968339d5b965fe9249778b74/src/main/java/com/mycompany/locationmanagementapi/dto/AddressDTO.java",
    "contents_url": "https://api.github.com/repos/pandeymadhuri/location-management-api/contents/src/main/java/com/mycompany/locationmanagementapi/dto/AddressDTO.java?ref=01abebc087635d06968339d5b965fe9249778b74",
    "patch": "@@ -0,0 +1,35 @@\n+package com.mycompany.locationmanagementapi.dto;\n+\n+public class AddressDTO {\n+\n+\tprivate long plot_no;\n+\tprivate String street;\n+\tprivate String locality;\n+\tprivate String state;\n+\t\n+\tpublic long getPlot_no() {\n+\t\treturn plot_no;\n+\t}\n+\tpublic void setPlot_no(long plot_no) {\n+\t\tthis.plot_no = plot_no;\n+\t}\n+\tpublic String getStreet() {\n+\t\treturn street;\n+\t}\n+\tpublic void setStreet(String street) {\n+\t\tthis.street = street;\n+\t}\n+\tpublic String getLocality() {\n+\t\treturn locality;\n+\t}\n+\tpublic void setLocality(String locality) {\n+\t\tthis.locality = locality;\n+\t}\n+\tpublic String getState() {\n+\t\treturn state;\n+\t}\n+\tpublic void setState(String state) {\n+\t\tthis.state = state;\n+\t}\n+\t\t\n+}"
  },
  {
    "sha": "f090ddf65ff1a3b9f5d91b8899e8b58ac3a80962",
    "filename": "src/main/java/com/mycompany/locationmanagementapi/dto/LatLonApiRespWrapperDTO.java",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/pandeymadhuri/location-management-api/blob/01abebc087635d06968339d5b965fe9249778b74/src/main/java/com/mycompany/locationmanagementapi/dto/LatLonApiRespWrapperDTO.java",
    "raw_url": "https://github.com/pandeymadhuri/location-management-api/raw/01abebc087635d06968339d5b965fe9249778b74/src/main/java/com/mycompany/locationmanagementapi/dto/LatLonApiRespWrapperDTO.java",
    "contents_url": "https://api.github.com/repos/pandeymadhuri/location-management-api/contents/src/main/java/com/mycompany/locationmanagementapi/dto/LatLonApiRespWrapperDTO.java?ref=01abebc087635d06968339d5b965fe9249778b74",
    "patch": "@@ -0,0 +1,16 @@\n+package com.mycompany.locationmanagementapi.dto;\n+\n+import java.util.List;\n+\n+public class LatLonApiRespWrapperDTO {\n+\n+\tprivate List<LatLonApiResponseDTO> data;\n+\n+\tpublic List<LatLonApiResponseDTO> getData() {\n+\t\treturn data;\n+\t}\n+\n+\tpublic void setData(List<LatLonApiResponseDTO> data) {\n+\t\tthis.data = data;\n+\t}\n+}"
  },
  {
    "sha": "291b6847636ac8e7a2c17cdbb74c47a19db7421f",
    "filename": "src/main/java/com/mycompany/locationmanagementapi/dto/LatLonApiResponseDTO.java",
    "status": "added",
    "additions": 25,
    "deletions": 0,
    "changes": 25,
    "blob_url": "https://github.com/pandeymadhuri/location-management-api/blob/01abebc087635d06968339d5b965fe9249778b74/src/main/java/com/mycompany/locationmanagementapi/dto/LatLonApiResponseDTO.java",
    "raw_url": "https://github.com/pandeymadhuri/location-management-api/raw/01abebc087635d06968339d5b965fe9249778b74/src/main/java/com/mycompany/locationmanagementapi/dto/LatLonApiResponseDTO.java",
    "contents_url": "https://api.github.com/repos/pandeymadhuri/location-management-api/contents/src/main/java/com/mycompany/locationmanagementapi/dto/LatLonApiResponseDTO.java?ref=01abebc087635d06968339d5b965fe9249778b74",
    "patch": "@@ -0,0 +1,25 @@\n+package com.mycompany.locationmanagementapi.dto;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+\n+@JsonIgnoreProperties(ignoreUnknown = true)\n+public class LatLonApiResponseDTO {\n+\n+\tprivate Double latitude;\n+\tprivate Double longitude;\n+\t\n+\tpublic Double getLatitude() {\n+\t\treturn latitude;\n+\t}\n+\tpublic void setLatitude(Double latitude) {\n+\t\tthis.latitude = latitude;\n+\t}\n+\tpublic Double getLongitude() {\n+\t\treturn longitude;\n+\t}\n+\tpublic void setLongitude(Double longitude) {\n+\t\tthis.longitude = longitude;\n+\t}\n+\t\n+\t\n+}"
  },
  {
    "sha": "6216494650a6b8a0da37e86283ca11e4d508c6ae",
    "filename": "src/main/java/com/mycompany/locationmanagementapi/dto/LocationDTO.java",
    "status": "added",
    "additions": 53,
    "deletions": 0,
    "changes": 53,
    "blob_url": "https://github.com/pandeymadhuri/location-management-api/blob/01abebc087635d06968339d5b965fe9249778b74/src/main/java/com/mycompany/locationmanagementapi/dto/LocationDTO.java",
    "raw_url": "https://github.com/pandeymadhuri/location-management-api/raw/01abebc087635d06968339d5b965fe9249778b74/src/main/java/com/mycompany/locationmanagementapi/dto/LocationDTO.java",
    "contents_url": "https://api.github.com/repos/pandeymadhuri/location-management-api/contents/src/main/java/com/mycompany/locationmanagementapi/dto/LocationDTO.java?ref=01abebc087635d06968339d5b965fe9249778b74",
    "patch": "@@ -0,0 +1,53 @@\n+package com.mycompany.locationmanagementapi.dto;\n+\n+import java.util.List;\n+\n+import javax.validation.constraints.NotBlank;\n+import javax.validation.constraints.NotNull;\n+\n+public class LocationDTO {\n+\n+\t@NotBlank(message = \"Type is mandatory\")\n+\tprivate String type;\n+\t\n+\tprivate List<Long> serviceIds;\n+\t\n+\t@NotNull(message = \"Address is mandatory\")\n+\tprivate Long addressId;\n+\t\n+\t@NotNull(message = \"User is mandatory\")\n+\tprivate Long userId;\n+\t\n+\tpublic Long getUserId() {\n+\t\treturn userId;\n+\t}\n+\n+\tpublic void setUserId(Long userId) {\n+\t\tthis.userId = userId;\n+\t}\n+\n+\tpublic Long getAddressId() {\n+\t\treturn addressId;\n+\t}\n+\n+\tpublic void setAddressId(Long addressId) {\n+\t\tthis.addressId = addressId;\n+\t}\n+\n+\tpublic String getType() {\n+\t\treturn type;\n+\t}\n+\n+\tpublic void setType(String type) {\n+\t\tthis.type = type;\n+\t}\n+\n+\tpublic List<Long> getServiceIds() {\n+\t\treturn serviceIds;\n+\t}\n+\n+\tpublic void setServiceIds(List<Long> serviceIds) {\n+\t\tthis.serviceIds = serviceIds;\n+\t}\n+\n+}"
  },
  {
    "sha": "5ea2552497c1fc1c1d2b46d9f09327076caa757f",
    "filename": "src/main/java/com/mycompany/locationmanagementapi/entity/AddressEntity.java",
    "status": "added",
    "additions": 52,
    "deletions": 0,
    "changes": 52,
    "blob_url": "https://github.com/pandeymadhuri/location-management-api/blob/01abebc087635d06968339d5b965fe9249778b74/src/main/java/com/mycompany/locationmanagementapi/entity/AddressEntity.java",
    "raw_url": "https://github.com/pandeymadhuri/location-management-api/raw/01abebc087635d06968339d5b965fe9249778b74/src/main/java/com/mycompany/locationmanagementapi/entity/AddressEntity.java",
    "contents_url": "https://api.github.com/repos/pandeymadhuri/location-management-api/contents/src/main/java/com/mycompany/locationmanagementapi/entity/AddressEntity.java?ref=01abebc087635d06968339d5b965fe9249778b74",
    "patch": "@@ -0,0 +1,52 @@\n+package com.mycompany.locationmanagementapi.entity;\n+\n+import javax.persistence.Entity;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.GenerationType;\n+import javax.persistence.Id;\n+\n+@Entity\n+public class AddressEntity {\n+\n+\t@Id\n+\t@GeneratedValue(strategy = GenerationType.AUTO)\n+\tprivate long id;\n+\tprivate long plot_no;\n+\tprivate String street;\n+\tprivate String locality;\n+\tprivate String state;\n+\t\n+\tpublic AddressEntity(){}\n+\t\n+\tpublic long getId() {\n+\t\treturn id;\n+\t}\n+\tpublic void setId(long id) {\n+\t\tthis.id = id;\n+\t}\n+\tpublic long getPlot_no() {\n+\t\treturn plot_no;\n+\t}\n+\tpublic void setPlot_no(long plot_no) {\n+\t\tthis.plot_no = plot_no;\n+\t}\n+\tpublic String getStreet() {\n+\t\treturn street;\n+\t}\n+\tpublic void setStreet(String street) {\n+\t\tthis.street = street;\n+\t}\n+\tpublic String getLocality() {\n+\t\treturn locality;\n+\t}\n+\tpublic void setLocality(String locality) {\n+\t\tthis.locality = locality;\n+\t}\n+\tpublic String getState() {\n+\t\treturn state;\n+\t}\n+\tpublic void setState(String state) {\n+\t\tthis.state = state;\n+\t}\n+\t\n+}"
  },
  {
    "sha": "ee4451a7a8f58c37c8d8fa236996a14a16582c60",
    "filename": "src/main/java/com/mycompany/locationmanagementapi/entity/Location.java",
    "status": "added",
    "additions": 103,
    "deletions": 0,
    "changes": 103,
    "blob_url": "https://github.com/pandeymadhuri/location-management-api/blob/01abebc087635d06968339d5b965fe9249778b74/src/main/java/com/mycompany/locationmanagementapi/entity/Location.java",
    "raw_url": "https://github.com/pandeymadhuri/location-management-api/raw/01abebc087635d06968339d5b965fe9249778b74/src/main/java/com/mycompany/locationmanagementapi/entity/Location.java",
    "contents_url": "https://api.github.com/repos/pandeymadhuri/location-management-api/contents/src/main/java/com/mycompany/locationmanagementapi/entity/Location.java?ref=01abebc087635d06968339d5b965fe9249778b74",
    "patch": "@@ -0,0 +1,103 @@\n+package com.mycompany.locationmanagementapi.entity;\n+\n+import java.util.Set;\n+import javax.persistence.Entity;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.GenerationType;\n+import javax.persistence.Id;\n+import javax.persistence.JoinColumn;\n+import javax.persistence.JoinTable;\n+import javax.persistence.ManyToMany;\n+import javax.persistence.ManyToOne;\n+import javax.persistence.OneToOne;\n+\n+@Entity\n+public class Location {\n+\n+\t@Id\n+\t@GeneratedValue(strategy = GenerationType.AUTO)\t\t\n+\tprivate long id;\n+\tprivate String type;\n+\tprivate String lat;\n+\tprivate String lon;\n+\n+\t@ManyToMany\n+\t@JoinTable(name = \"location_service\", joinColumns = @JoinColumn(name = \"location_iid\") , \n+\tinverseJoinColumns = @JoinColumn(name = \"service_iid\"))\n+\tprivate Set<ServiceEntity> service;\n+\t\n+\t@ManyToOne\n+\tprivate UserEntity userEntity;\n+\t\n+\tpublic UserEntity getUserEntity() {\n+\t\treturn userEntity;\n+\t}\n+\n+\tpublic void setUserEntity(UserEntity userEntity) {\n+\t\tthis.userEntity = userEntity;\n+\t}\n+\n+\t@OneToOne\n+\tprivate AddressEntity addressEntity;\n+\t\n+\tpublic AddressEntity getAddressEntity() {\n+\t\treturn addressEntity;\n+\t}\n+\n+\tpublic void setAddressEntity(AddressEntity addressEntity) {\n+\t\tthis.addressEntity = addressEntity;\n+\t}\n+\n+\tpublic Set<ServiceEntity> getService() {\n+\t\treturn service;\n+\t}\n+\n+\tpublic void setService(Set<ServiceEntity> service) {\n+\t\tthis.service = service;\n+\t}\n+\n+\tpublic Location() {\n+\t\tsuper();\n+\t}\n+\n+\t/*public Location(long id, String type, String lat, String lon) {\n+\t\tsuper();\n+\t\tthis.id = id;\n+\t\tthis.type = type;\n+\t\tthis.lat = lat;\n+\t\tthis.lon = lon;\n+\t}*/\n+\n+\tpublic long getId() {\n+\t\treturn id;\n+\t}\n+\n+\tpublic void setId(long id) {\n+\t\tthis.id = id;\n+\t}\n+\n+\tpublic String getType() {\n+\t\treturn type;\n+\t}\n+\n+\tpublic void setType(String type) {\n+\t\tthis.type = type;\n+\t}\n+\n+\tpublic String getLat() {\n+\t\treturn lat;\n+\t}\n+\n+\tpublic void setLat(String lat) {\n+\t\tthis.lat = lat;\n+\t}\n+\n+\tpublic String getLon() {\n+\t\treturn lon;\n+\t}\n+\n+\tpublic void setLon(String lon) {\n+\t\tthis.lon = lon;\n+\t}\n+\n+}"
  },
  {
    "sha": "3413629140bfb0a7ff8cec12cf30c1b4ca1fe916",
    "filename": "src/main/java/com/mycompany/locationmanagementapi/entity/ServiceEntity.java",
    "status": "added",
    "additions": 51,
    "deletions": 0,
    "changes": 51,
    "blob_url": "https://github.com/pandeymadhuri/location-management-api/blob/01abebc087635d06968339d5b965fe9249778b74/src/main/java/com/mycompany/locationmanagementapi/entity/ServiceEntity.java",
    "raw_url": "https://github.com/pandeymadhuri/location-management-api/raw/01abebc087635d06968339d5b965fe9249778b74/src/main/java/com/mycompany/locationmanagementapi/entity/ServiceEntity.java",
    "contents_url": "https://api.github.com/repos/pandeymadhuri/location-management-api/contents/src/main/java/com/mycompany/locationmanagementapi/entity/ServiceEntity.java?ref=01abebc087635d06968339d5b965fe9249778b74",
    "patch": "@@ -0,0 +1,51 @@\n+package com.mycompany.locationmanagementapi.entity;\n+\n+import java.util.Set;\n+\n+import javax.persistence.Entity;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.GenerationType;\n+import javax.persistence.Id;\n+import javax.persistence.ManyToMany;\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+\n+@JsonIgnoreProperties(ignoreUnknown = true)\n+@Entity\n+public class ServiceEntity {\n+\n+\t@Id\n+\t@GeneratedValue(strategy = GenerationType.AUTO)\n+\tprivate long id;\n+\tprivate String description;\n+\tprivate String serviceType;\n+\t\n+\t@ManyToMany(mappedBy=\"service\")\n+\tprivate Set<Location> location;\n+\t\n+\tpublic Set<Location> getLocation() {\n+\t\treturn location;\n+\t}\n+\tpublic void setLocation(Set<Location> location) {\n+\t\tthis.location = location;\n+\t}\n+\tpublic long getId() {\n+\t\treturn id;\n+\t}\n+\tpublic void setId(long id) {\n+\t\tthis.id = id;\n+\t}\n+\tpublic String getDescription() {\n+\t\treturn description;\n+\t}\n+\tpublic void setDescription(String description) {\n+\t\tthis.description = description;\n+\t}\n+\tpublic String getServiceType() {\n+\t\treturn serviceType;\n+\t}\n+\tpublic void setServiceType(String serviceType) {\n+\t\tthis.serviceType = serviceType;\n+\t}\n+\t\n+\t\n+}"
  },
  {
    "sha": "94ebcaca7cb579155a964a792ba8ad36c8ec568e",
    "filename": "src/main/java/com/mycompany/locationmanagementapi/entity/UserEntity.java",
    "status": "added",
    "additions": 55,
    "deletions": 0,
    "changes": 55,
    "blob_url": "https://github.com/pandeymadhuri/location-management-api/blob/01abebc087635d06968339d5b965fe9249778b74/src/main/java/com/mycompany/locationmanagementapi/entity/UserEntity.java",
    "raw_url": "https://github.com/pandeymadhuri/location-management-api/raw/01abebc087635d06968339d5b965fe9249778b74/src/main/java/com/mycompany/locationmanagementapi/entity/UserEntity.java",
    "contents_url": "https://api.github.com/repos/pandeymadhuri/location-management-api/contents/src/main/java/com/mycompany/locationmanagementapi/entity/UserEntity.java?ref=01abebc087635d06968339d5b965fe9249778b74",
    "patch": "@@ -0,0 +1,55 @@\n+package com.mycompany.locationmanagementapi.entity;\n+\n+import java.util.Set;\n+\n+import javax.persistence.Entity;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.GenerationType;\n+import javax.persistence.Id;\n+import javax.persistence.OneToMany;\n+\n+@Entity\n+public class UserEntity {\n+\t\n+\t@Id\n+\t@GeneratedValue(strategy = GenerationType.AUTO)\t\n+\tprivate Long id;\n+\tprivate String name;\n+\tprivate String password;\n+\tprivate String email;\n+\t\n+\t@OneToMany(mappedBy = \"userEntity\")\n+\tprivate Set<Location> location;\n+\t\n+\tpublic Set<Location> getLocation() {\n+\t\treturn location;\n+\t}\n+\tpublic void setLocation(Set<Location> location) {\n+\t\tthis.location = location;\n+\t}\n+\tpublic Long getId() {\n+\t\treturn id;\n+\t}\n+\tpublic void setId(Long id) {\n+\t\tthis.id = id;\n+\t}\n+\tpublic String getName() {\n+\t\treturn name;\n+\t}\n+\tpublic void setName(String name) {\n+\t\tthis.name = name;\n+\t}\n+\tpublic String getPassword() {\n+\t\treturn password;\n+\t}\n+\tpublic void setPassword(String password) {\n+\t\tthis.password = password;\n+\t}\n+\tpublic String getEmail() {\n+\t\treturn email;\n+\t}\n+\tpublic void setEmail(String email) {\n+\t\tthis.email = email;\n+\t}\n+\t\n+}"
  },
  {
    "sha": "76f5f5e2892f2ceb56f98139b7b7800b008b6e7a",
    "filename": "src/main/java/com/mycompany/locationmanagementapi/exception/BusinessException.java",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/pandeymadhuri/location-management-api/blob/01abebc087635d06968339d5b965fe9249778b74/src/main/java/com/mycompany/locationmanagementapi/exception/BusinessException.java",
    "raw_url": "https://github.com/pandeymadhuri/location-management-api/raw/01abebc087635d06968339d5b965fe9249778b74/src/main/java/com/mycompany/locationmanagementapi/exception/BusinessException.java",
    "contents_url": "https://api.github.com/repos/pandeymadhuri/location-management-api/contents/src/main/java/com/mycompany/locationmanagementapi/exception/BusinessException.java?ref=01abebc087635d06968339d5b965fe9249778b74",
    "patch": "@@ -0,0 +1,16 @@\n+package com.mycompany.locationmanagementapi.exception;\n+\n+public class BusinessException extends Exception{\n+\n+\tprivate ErrorModel errModel;\n+\n+\tpublic ErrorModel getErrModel() {\n+\t\treturn errModel;\n+\t}\n+\n+\tpublic BusinessException(ErrorModel errModel) {\n+\t\tsuper();\n+\t\tthis.errModel = errModel;\n+\t}\n+\t\n+}"
  },
  {
    "sha": "eadbb6837d7e266921853cd2ea150fe67cc8e768",
    "filename": "src/main/java/com/mycompany/locationmanagementapi/exception/ErrorModel.java",
    "status": "added",
    "additions": 30,
    "deletions": 0,
    "changes": 30,
    "blob_url": "https://github.com/pandeymadhuri/location-management-api/blob/01abebc087635d06968339d5b965fe9249778b74/src/main/java/com/mycompany/locationmanagementapi/exception/ErrorModel.java",
    "raw_url": "https://github.com/pandeymadhuri/location-management-api/raw/01abebc087635d06968339d5b965fe9249778b74/src/main/java/com/mycompany/locationmanagementapi/exception/ErrorModel.java",
    "contents_url": "https://api.github.com/repos/pandeymadhuri/location-management-api/contents/src/main/java/com/mycompany/locationmanagementapi/exception/ErrorModel.java?ref=01abebc087635d06968339d5b965fe9249778b74",
    "patch": "@@ -0,0 +1,30 @@\n+package com.mycompany.locationmanagementapi.exception;\n+\n+public class ErrorModel {\n+\t\n+\tprivate int errorCode;\n+\tprivate String errorMsg;\n+\t\n+\tpublic ErrorModel(int errorCode, String errorMsg) {\n+\t\tsuper();\n+\t\tthis.errorCode = errorCode;\n+\t\tthis.errorMsg = errorMsg;\n+\t}\n+\n+\tpublic int getErrorCode() {\n+\t\treturn errorCode;\n+\t}\n+\n+\tpublic void setErrorCode(int errorCode) {\n+\t\tthis.errorCode = errorCode;\n+\t}\n+\n+\tpublic String getErrorMsg() {\n+\t\treturn errorMsg;\n+\t}\n+\n+\tpublic void setErrorMsg(String errorMsg) {\n+\t\tthis.errorMsg = errorMsg;\n+\t}\n+\t\n+}"
  },
  {
    "sha": "4e57f65045e02051fcd2640eccba01c54f6d1341",
    "filename": "src/main/java/com/mycompany/locationmanagementapi/exception/ErrorResponse.java",
    "status": "added",
    "additions": 31,
    "deletions": 0,
    "changes": 31,
    "blob_url": "https://github.com/pandeymadhuri/location-management-api/blob/01abebc087635d06968339d5b965fe9249778b74/src/main/java/com/mycompany/locationmanagementapi/exception/ErrorResponse.java",
    "raw_url": "https://github.com/pandeymadhuri/location-management-api/raw/01abebc087635d06968339d5b965fe9249778b74/src/main/java/com/mycompany/locationmanagementapi/exception/ErrorResponse.java",
    "contents_url": "https://api.github.com/repos/pandeymadhuri/location-management-api/contents/src/main/java/com/mycompany/locationmanagementapi/exception/ErrorResponse.java?ref=01abebc087635d06968339d5b965fe9249778b74",
    "patch": "@@ -0,0 +1,31 @@\n+package com.mycompany.locationmanagementapi.exception;\n+\n+import java.util.List;\n+\n+public class ErrorResponse {\n+\t\n+\tprivate String message;\n+\tprivate List<String> details;\n+\t\n+\tpublic ErrorResponse(String message, List<String> details){\n+\t\tsuper();\n+\t\tthis.message  = message;\n+\t\tthis.details = details;\n+\t}\n+\t\n+\tpublic String getMessage() {\n+\t\treturn message;\n+\t}\n+\tpublic void setMessage(String message) {\n+\t\tthis.message = message;\n+\t}\n+\tpublic List<String> getDetails() {\n+\t\treturn details;\n+\t}\n+\tpublic void setDetails(List<String> details) {\n+\t\tthis.details = details;\n+\t}\n+\t\n+\t\n+\n+}"
  },
  {
    "sha": "c18dea22bed0765d550e30005dd25b445cb8dfc8",
    "filename": "src/main/java/com/mycompany/locationmanagementapi/exception/ExceptionHandlerAdvice.java",
    "status": "added",
    "additions": 52,
    "deletions": 0,
    "changes": 52,
    "blob_url": "https://github.com/pandeymadhuri/location-management-api/blob/01abebc087635d06968339d5b965fe9249778b74/src/main/java/com/mycompany/locationmanagementapi/exception/ExceptionHandlerAdvice.java",
    "raw_url": "https://github.com/pandeymadhuri/location-management-api/raw/01abebc087635d06968339d5b965fe9249778b74/src/main/java/com/mycompany/locationmanagementapi/exception/ExceptionHandlerAdvice.java",
    "contents_url": "https://api.github.com/repos/pandeymadhuri/location-management-api/contents/src/main/java/com/mycompany/locationmanagementapi/exception/ExceptionHandlerAdvice.java?ref=01abebc087635d06968339d5b965fe9249778b74",
    "patch": "@@ -0,0 +1,52 @@\n+package com.mycompany.locationmanagementapi.exception;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.validation.ObjectError;\n+import org.springframework.web.bind.MethodArgumentNotValidException;\n+import org.springframework.web.bind.annotation.ControllerAdvice;\n+import org.springframework.web.bind.annotation.ExceptionHandler;\n+import org.springframework.web.context.request.WebRequest;\n+import org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandler;\n+\n+import com.mycompany.locationmanagementapi.controller.LocationManagementController;\n+\n+@ControllerAdvice\n+public class ExceptionHandlerAdvice extends ResponseEntityExceptionHandler{\n+\t\n+\tprivate static final Logger LOGGER = LoggerFactory.getLogger(ExceptionHandlerAdvice.class);\n+\t\n+\t@ExceptionHandler(BusinessException.class)\n+\tpublic ResponseEntity<ErrorModel> handleBusinessException(BusinessException be){\n+\t\tLOGGER.error(\"Business exception occured with errorcode \"+ be.getErrModel().getErrorCode()\n+\t\t\t\t+\" and error Message \"+be.getErrModel().getErrorMsg());\n+\t\tResponseEntity re = null;\n+\t\tif(be.getErrModel().getErrorCode() == 404){\n+\t\t\tre = new ResponseEntity<ErrorModel>(be.getErrModel(),HttpStatus.NOT_FOUND);\n+\t\t}\n+\t\treturn re;\n+\t}\n+\t\n+\t@ExceptionHandler(Exception.class)\n+\tpublic ResponseEntity<ErrorModel> handleException(Exception ex){\n+\t\tErrorModel err = new ErrorModel(HttpStatus.BAD_REQUEST.value(), \"The request could not be handled by the server\");\n+\t\treturn new ResponseEntity<ErrorModel>(err,HttpStatus.BAD_REQUEST);\n+\t}\n+\t\n+\t@Override\n+\tprotected ResponseEntity<Object> handleMethodArgumentNotValid(MethodArgumentNotValidException ex, HttpHeaders headers, HttpStatus status, WebRequest request) {\n+\t\tList<String> details = new ArrayList<>();\n+        for(ObjectError error : ex.getBindingResult().getAllErrors()) {\n+            details.add(error.getDefaultMessage());\n+        }\n+        \n+        ErrorResponse err = new ErrorResponse(\"Validation Failed\",details);\n+        return new ResponseEntity<Object>(err, HttpStatus.BAD_REQUEST);\n+\t}\n+}"
  },
  {
    "sha": "39c6f62aee1ff7d8eefc3faa7d9050ac50b6440c",
    "filename": "src/main/java/com/mycompany/locationmanagementapi/repository/AddressRepository.java",
    "status": "added",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/pandeymadhuri/location-management-api/blob/01abebc087635d06968339d5b965fe9249778b74/src/main/java/com/mycompany/locationmanagementapi/repository/AddressRepository.java",
    "raw_url": "https://github.com/pandeymadhuri/location-management-api/raw/01abebc087635d06968339d5b965fe9249778b74/src/main/java/com/mycompany/locationmanagementapi/repository/AddressRepository.java",
    "contents_url": "https://api.github.com/repos/pandeymadhuri/location-management-api/contents/src/main/java/com/mycompany/locationmanagementapi/repository/AddressRepository.java?ref=01abebc087635d06968339d5b965fe9249778b74",
    "patch": "@@ -0,0 +1,9 @@\n+package com.mycompany.locationmanagementapi.repository;\n+\n+import org.springframework.data.repository.CrudRepository;\n+\n+import com.mycompany.locationmanagementapi.entity.AddressEntity;\n+\n+public interface AddressRepository extends CrudRepository<AddressEntity, Long>{\n+\n+}"
  },
  {
    "sha": "102984ee6c0062a822397a951bb8cb3b678a1cd3",
    "filename": "src/main/java/com/mycompany/locationmanagementapi/repository/LocationRepository.java",
    "status": "added",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/pandeymadhuri/location-management-api/blob/01abebc087635d06968339d5b965fe9249778b74/src/main/java/com/mycompany/locationmanagementapi/repository/LocationRepository.java",
    "raw_url": "https://github.com/pandeymadhuri/location-management-api/raw/01abebc087635d06968339d5b965fe9249778b74/src/main/java/com/mycompany/locationmanagementapi/repository/LocationRepository.java",
    "contents_url": "https://api.github.com/repos/pandeymadhuri/location-management-api/contents/src/main/java/com/mycompany/locationmanagementapi/repository/LocationRepository.java?ref=01abebc087635d06968339d5b965fe9249778b74",
    "patch": "@@ -0,0 +1,9 @@\n+package com.mycompany.locationmanagementapi.repository;\n+\n+import org.springframework.data.jpa.repository.JpaRepository;\n+\n+import com.mycompany.locationmanagementapi.entity.Location;\n+\n+public interface LocationRepository extends JpaRepository<Location ,Long>{\n+\n+}"
  },
  {
    "sha": "dcfa85028881f5cd4077b2d6e9330552bdb8abfa",
    "filename": "src/main/java/com/mycompany/locationmanagementapi/repository/ServiceRepository.java",
    "status": "added",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/pandeymadhuri/location-management-api/blob/01abebc087635d06968339d5b965fe9249778b74/src/main/java/com/mycompany/locationmanagementapi/repository/ServiceRepository.java",
    "raw_url": "https://github.com/pandeymadhuri/location-management-api/raw/01abebc087635d06968339d5b965fe9249778b74/src/main/java/com/mycompany/locationmanagementapi/repository/ServiceRepository.java",
    "contents_url": "https://api.github.com/repos/pandeymadhuri/location-management-api/contents/src/main/java/com/mycompany/locationmanagementapi/repository/ServiceRepository.java?ref=01abebc087635d06968339d5b965fe9249778b74",
    "patch": "@@ -0,0 +1,10 @@\n+package com.mycompany.locationmanagementapi.repository;\n+\n+import org.springframework.data.jpa.repository.JpaRepository;\n+\n+import com.mycompany.locationmanagementapi.entity.Location;\n+import com.mycompany.locationmanagementapi.entity.ServiceEntity;\n+\n+public interface ServiceRepository extends JpaRepository<ServiceEntity ,Long>{\n+\n+}"
  },
  {
    "sha": "7ce6886eaab7df03731ef761a600c615f9b9efef",
    "filename": "src/main/java/com/mycompany/locationmanagementapi/repository/UserEntityRepository.java",
    "status": "added",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/pandeymadhuri/location-management-api/blob/01abebc087635d06968339d5b965fe9249778b74/src/main/java/com/mycompany/locationmanagementapi/repository/UserEntityRepository.java",
    "raw_url": "https://github.com/pandeymadhuri/location-management-api/raw/01abebc087635d06968339d5b965fe9249778b74/src/main/java/com/mycompany/locationmanagementapi/repository/UserEntityRepository.java",
    "contents_url": "https://api.github.com/repos/pandeymadhuri/location-management-api/contents/src/main/java/com/mycompany/locationmanagementapi/repository/UserEntityRepository.java?ref=01abebc087635d06968339d5b965fe9249778b74",
    "patch": "@@ -0,0 +1,9 @@\n+package com.mycompany.locationmanagementapi.repository;\n+\n+import org.springframework.data.repository.CrudRepository;\n+\n+import com.mycompany.locationmanagementapi.entity.UserEntity;\n+\n+public interface UserEntityRepository extends CrudRepository<UserEntity, Long>{\n+\n+}"
  },
  {
    "sha": "50657932aaefd599e61aa3e63d43ef1f80cbb79e",
    "filename": "src/main/java/com/mycompany/locationmanagementapi/service/AddressService.java",
    "status": "added",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/pandeymadhuri/location-management-api/blob/01abebc087635d06968339d5b965fe9249778b74/src/main/java/com/mycompany/locationmanagementapi/service/AddressService.java",
    "raw_url": "https://github.com/pandeymadhuri/location-management-api/raw/01abebc087635d06968339d5b965fe9249778b74/src/main/java/com/mycompany/locationmanagementapi/service/AddressService.java",
    "contents_url": "https://api.github.com/repos/pandeymadhuri/location-management-api/contents/src/main/java/com/mycompany/locationmanagementapi/service/AddressService.java?ref=01abebc087635d06968339d5b965fe9249778b74",
    "patch": "@@ -0,0 +1,8 @@\n+package com.mycompany.locationmanagementapi.service;\n+\n+import com.mycompany.locationmanagementapi.entity.AddressEntity;\n+import com.mycompany.locationmanagementapi.exception.BusinessException;\n+\n+public interface AddressService {\n+\tpublic AddressEntity getAddress(Long id) throws BusinessException;\n+}"
  },
  {
    "sha": "e8906f8ab1b11a4db9a89da0cd296d54d385a2ba",
    "filename": "src/main/java/com/mycompany/locationmanagementapi/service/AddressServiceImpl.java",
    "status": "added",
    "additions": 42,
    "deletions": 0,
    "changes": 42,
    "blob_url": "https://github.com/pandeymadhuri/location-management-api/blob/01abebc087635d06968339d5b965fe9249778b74/src/main/java/com/mycompany/locationmanagementapi/service/AddressServiceImpl.java",
    "raw_url": "https://github.com/pandeymadhuri/location-management-api/raw/01abebc087635d06968339d5b965fe9249778b74/src/main/java/com/mycompany/locationmanagementapi/service/AddressServiceImpl.java",
    "contents_url": "https://api.github.com/repos/pandeymadhuri/location-management-api/contents/src/main/java/com/mycompany/locationmanagementapi/service/AddressServiceImpl.java?ref=01abebc087635d06968339d5b965fe9249778b74",
    "patch": "@@ -0,0 +1,42 @@\n+package com.mycompany.locationmanagementapi.service;\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+import org.apache.tomcat.jni.Address;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.stereotype.Service;\n+import org.springframework.web.bind.annotation.RequestBody;\n+\n+import com.mycompany.locationmanagementapi.entity.AddressEntity;\n+import com.mycompany.locationmanagementapi.exception.BusinessException;\n+import com.mycompany.locationmanagementapi.exception.ErrorModel;\n+import com.mycompany.locationmanagementapi.repository.AddressRepository;\n+\n+@Service\n+public class AddressServiceImpl implements  AddressService  {\n+\t\n+\t@Autowired\n+\tprivate AddressRepository addressRepository;\n+\n+\t@Override\n+\tpublic AddressEntity getAddress(Long id) throws BusinessException{\n+\t\t// TODO Auto-generated method stub\n+\t\tOptional<AddressEntity> addr =  addressRepository.findById(id);\n+\t\tif (addr.isPresent()){\n+\t\t\treturn addr.get();\n+\t\t}else{\n+\t\t\n+\t\t\tErrorModel err = new ErrorModel(HttpStatus.NOT_FOUND.value(),\"Address with address id \"+addr.get().getId());\n+\t\t\tthrow new BusinessException(err);\n+\t\t}\n+\t}\n+\tpublic List<AddressEntity> getAllAddresses(){\n+\t\treturn (List<AddressEntity>) addressRepository.findAll();\n+\t}\n+\t\n+\tpublic AddressEntity save(AddressEntity addr) {\n+\t\treturn addressRepository.save(addr);\n+\t}\n+}"
  },
  {
    "sha": "40d11012f5655bd77a3bdf9b8b09f395789e06e7",
    "filename": "src/main/java/com/mycompany/locationmanagementapi/service/LocationManagementService.java",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/pandeymadhuri/location-management-api/blob/01abebc087635d06968339d5b965fe9249778b74/src/main/java/com/mycompany/locationmanagementapi/service/LocationManagementService.java",
    "raw_url": "https://github.com/pandeymadhuri/location-management-api/raw/01abebc087635d06968339d5b965fe9249778b74/src/main/java/com/mycompany/locationmanagementapi/service/LocationManagementService.java",
    "contents_url": "https://api.github.com/repos/pandeymadhuri/location-management-api/contents/src/main/java/com/mycompany/locationmanagementapi/service/LocationManagementService.java?ref=01abebc087635d06968339d5b965fe9249778b74",
    "patch": "@@ -0,0 +1,19 @@\n+package com.mycompany.locationmanagementapi.service;\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+import org.springframework.http.ResponseEntity;\n+\n+import com.mycompany.locationmanagementapi.dto.LocationDTO;\n+import com.mycompany.locationmanagementapi.entity.Location;\n+import com.mycompany.locationmanagementapi.exception.BusinessException;\n+\n+public interface LocationManagementService {\n+\n+\tpublic List<Location> getAllLoctions();\n+\tpublic Optional<Location> getLocationDetail(Long id);\n+\tpublic Location createLocation(LocationDTO locationDTO);\n+\tpublic Location updateLocation(Location location)throws BusinessException;\n+\tpublic Location deleteLocation(Long id)throws BusinessException;\n+}"
  },
  {
    "sha": "590b6e9f189036dbf98f0da51cad21a1d23efe66",
    "filename": "src/main/java/com/mycompany/locationmanagementapi/service/LocationManagementServiceImpl.java",
    "status": "added",
    "additions": 155,
    "deletions": 0,
    "changes": 155,
    "blob_url": "https://github.com/pandeymadhuri/location-management-api/blob/01abebc087635d06968339d5b965fe9249778b74/src/main/java/com/mycompany/locationmanagementapi/service/LocationManagementServiceImpl.java",
    "raw_url": "https://github.com/pandeymadhuri/location-management-api/raw/01abebc087635d06968339d5b965fe9249778b74/src/main/java/com/mycompany/locationmanagementapi/service/LocationManagementServiceImpl.java",
    "contents_url": "https://api.github.com/repos/pandeymadhuri/location-management-api/contents/src/main/java/com/mycompany/locationmanagementapi/service/LocationManagementServiceImpl.java?ref=01abebc087635d06968339d5b965fe9249778b74",
    "patch": "@@ -0,0 +1,155 @@\n+package com.mycompany.locationmanagementapi.service;\n+\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Optional;\n+import java.util.Set;\n+\n+import javax.transaction.Transactional;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.stereotype.Service;\n+import org.springframework.web.client.RestTemplate;\n+\n+import com.mycompany.locationmanagementapi.dto.LatLonApiRespWrapperDTO;\n+import com.mycompany.locationmanagementapi.dto.LocationDTO;\n+import com.mycompany.locationmanagementapi.entity.AddressEntity;\n+import com.mycompany.locationmanagementapi.entity.Location;\n+import com.mycompany.locationmanagementapi.entity.ServiceEntity;\n+import com.mycompany.locationmanagementapi.entity.UserEntity;\n+import com.mycompany.locationmanagementapi.exception.BusinessException;\n+import com.mycompany.locationmanagementapi.exception.ErrorModel;\n+import com.mycompany.locationmanagementapi.repository.AddressRepository;\n+import com.mycompany.locationmanagementapi.repository.LocationRepository;\n+import com.mycompany.locationmanagementapi.repository.ServiceRepository;\n+import com.mycompany.locationmanagementapi.repository.UserEntityRepository;\n+\n+@Service\n+public class LocationManagementServiceImpl implements LocationManagementService{\n+\t\n+\tprivate static final Logger logger = LoggerFactory.getLogger(LocationManagementServiceImpl.class);\n+\n+\t@Value(\"${apiBaseUrl}\")\n+\tprivate String apiBaseUrl;\n+\t\n+\t@Value(\"${apiKey}\")\n+\tprivate String apiKey;\n+\t\n+\t@Autowired\n+\tprivate AddressRepository addressRepository;\n+\t\n+\t@Autowired\n+\tprivate UserEntityRepository userEntityRepository;\n+\t\n+\t@Autowired\n+\tprivate LocationRepository locationRepository;\n+\t\n+\t@Autowired\n+\tprivate ServiceRepository serviceRepository;\n+\t\n+\t@Override\n+\tpublic List<Location> getAllLoctions() {\n+\t\treturn locationRepository.findAll();\n+\t}\n+\n+\t@Override\n+\tpublic Optional<Location> getLocationDetail(Long id) {\n+ \t\treturn locationRepository.findById(id);\n+\t}\n+\n+\t@Override\n+\tpublic Location createLocation(LocationDTO locationDTO) {\n+\t\t\n+\t\t\n+\t\tList<Long> serviceIds = locationDTO.getServiceIds();\n+\t\tSet<ServiceEntity> serviceEntities = new HashSet<>();\n+\t\t\n+\t\tfor(Long sId:serviceIds){\n+\t\t\tOptional<ServiceEntity> service = serviceRepository.findById(sId);\n+\t\t\tif(service.isPresent()){\n+\t\t\t\tserviceEntities.add(service.get());\n+\t\t\t}\n+\t\t}\n+\t\t\n+\t\tLocation location = new Location();\n+\t\tlocation.setType(locationDTO.getType());\n+\t\tlocation.setService(serviceEntities);\n+\t\t\n+\t\tOptional<UserEntity> userEntityOpt = userEntityRepository.findById(locationDTO.getUserId());\n+\t\tif(userEntityOpt.isPresent()){\n+\t\t\tlocation.setUserEntity(userEntityOpt.get());\n+\t\t}\n+\t\tLong addressId = locationDTO.getAddressId();\n+\t\t\n+\t\tOptional<AddressEntity> addrEntityOpt = addressRepository.findById(addressId);\n+\t\tif(addrEntityOpt.isPresent()){\n+\t\t\t//call to Api to fetch address latitude longitude\n+\t\t\tRestTemplate restTemplate = new RestTemplate();\n+\t\t\tStringBuilder sb = new StringBuilder();\n+\t\t\tsb.append(apiBaseUrl);\n+\t\t\tsb.append(\"/v1/forward?access_key=\");\n+\t\t\tsb.append(apiKey);\n+\t\t\tsb.append(\"&query=\");\n+\t\t\t\n+\t\t\tsb.append(addrEntityOpt.get().getLocality());\n+\t\t\t//sb.append('\"');\n+\t\t\t//sb.append(\" \");\n+\t\t\t//sb.append(addrEntityOpt.get().getState());\n+\t\t\t\n+\t\t\t//String uri = \"http://api.positionstack.com/v1/forward?access_key=a9d8787055b9f16bfad814b6e4330f51&query=\"+addrEntityOpt.get().getLocality()+\" \"+addrEntityOpt.get().getState();\n+ \t\t\tLatLonApiRespWrapperDTO latLonApiRespWrapperDTO = null;\n+\t\t\ttry{\n+\t\t\t\t latLonApiRespWrapperDTO = restTemplate.getForObject(sb.toString(), LatLonApiRespWrapperDTO.class);\n+\t\t\t\t if(latLonApiRespWrapperDTO !=null){\n+\t\t\t\t\t location.setLat(latLonApiRespWrapperDTO.getData().get(0).getLatitude().toString());\n+\t\t\t\t\t location.setLon(latLonApiRespWrapperDTO.getData().get(0).getLongitude().toString());\n+\t\t\t\t }\n+\t\t\t}catch(Exception ex){\n+\t\t\t\tlogger.error(\"Error occured while fetching the Latitude nd Longitude Details with error \"+ex.getMessage());\n+\t\t\t}\n+\t\t\tlocation.setAddressEntity(addrEntityOpt.get());\n+\t\t}\n+\t\treturn locationRepository.save(location);\n+\t}\n+\t\n+\t@Transactional\n+\t@Override\n+\tpublic Location updateLocation(Location location) throws BusinessException {\n+\t\tOptional<Location> locationInDbOpt = locationRepository.findById(location.getId());\n+\t\tLocation location1 = null;\n+\t\t\tif(locationInDbOpt.isPresent()){\n+\t\t\t\tif(location.getLat() != null){\n+\t\t\t\t\tlocationInDbOpt.get().setLat(location.getLat());\n+\t\t\t\t}\n+\t\t\t\tif(location.getLon() != null){\n+\t\t\t\t\tlocationInDbOpt.get().setLon(location.getLon());\n+\t\t\t\t}\n+\t\t\t\tif(location.getType() != null){\n+\t\t\t\t\tlocationInDbOpt.get().setType(location.getType());\n+\t\t\t\t}\n+\t\t\t\tlocation1 = locationRepository.save(locationInDbOpt.get());\n+\t\t\t}else {\n+\t\t\t\tErrorModel err = new ErrorModel(HttpStatus.NOT_FOUND.value(), \"Element with id \"+location.getId()+\" not found\");\n+\t\t\t\tthrow new BusinessException(err);\n+\t\t\t}\n+\t\t\treturn location1;\n+\t}\n+\t\n+\t@Transactional\n+\t@Override\n+\tpublic Location deleteLocation(Long id) throws BusinessException {\n+\t\tOptional<Location> locationOpt = null;\n+\t\tlocationOpt = locationRepository.findById(id);\n+\t\tif(locationOpt.isPresent()){\n+\t\t\tlocationRepository.deleteById(id);\n+\t\t}else{\n+\t\t\tErrorModel err = new ErrorModel(HttpStatus.NOT_FOUND.value(), \"Location with id \"+id+\" not found\");\n+\t\t\tthrow new BusinessException(err);\n+\t\t}\n+\t\treturn locationOpt.get();\n+\t}\n+}"
  },
  {
    "sha": "860a20a6cb127dc62c4c48176da30a7d6e344586",
    "filename": "src/main/resources/application.properties",
    "status": "modified",
    "additions": 26,
    "deletions": 0,
    "changes": 26,
    "blob_url": "https://github.com/pandeymadhuri/location-management-api/blob/01abebc087635d06968339d5b965fe9249778b74/src/main/resources/application.properties",
    "raw_url": "https://github.com/pandeymadhuri/location-management-api/raw/01abebc087635d06968339d5b965fe9249778b74/src/main/resources/application.properties",
    "contents_url": "https://api.github.com/repos/pandeymadhuri/location-management-api/contents/src/main/resources/application.properties?ref=01abebc087635d06968339d5b965fe9249778b74",
    "patch": "@@ -1 +1,27 @@\n+#  \n+spring.datasource.url=jdbc:h2:file:./test\n+spring.datasource.driverClassName=org.h2.Driver\n+spring.datasource.username=sa\n+spring.datasource.password=\n+spring.jpa.database-platform=org.hibernate.dialect.H2Dialect\n \n+apiBaseUrl=http://api.positionstack.com\n+apiKey=a9d8787055b9f16bfad814b6e4330f51\n+\n+# Enabling H2 Console\n+spring.h2.console.enabled=true\n+\n+# Custom H2 Console URL\n+#logging.level.org.springframework.web: DEBUG\n+#logging.level.root=DEBUG\n+#spring.h2.console.path=/h2\n+\n+spring.jpa.hibernate.ddl-auto=update\n+ \n+#Turn Statistics on and log SQL stmts\n+\n+spring.jpa.show-sql=true\n+spring.jpa.properties.hibernate.format_sql=true\n+spring.jpa.properties.hibernate.generate_statistics=false\n+#logging.level.org.hibernate.type=trace\n+#logging.level.org.hibernate.stat=debug\n\\ No newline at end of file"
  },
  {
    "sha": "f46a4d92e24e461cec3c520ecd7ffe7b020feb4e",
    "filename": "src/test/java/com/mycompany/locationmanagementapi/LocationManagementApiApplicationTests.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/pandeymadhuri/location-management-api/blob/01abebc087635d06968339d5b965fe9249778b74/src/test/java/com/mycompany/locationmanagementapi/LocationManagementApiApplicationTests.java",
    "raw_url": "https://github.com/pandeymadhuri/location-management-api/raw/01abebc087635d06968339d5b965fe9249778b74/src/test/java/com/mycompany/locationmanagementapi/LocationManagementApiApplicationTests.java",
    "contents_url": "https://api.github.com/repos/pandeymadhuri/location-management-api/contents/src/test/java/com/mycompany/locationmanagementapi/LocationManagementApiApplicationTests.java?ref=01abebc087635d06968339d5b965fe9249778b74",
    "patch": "@@ -1,10 +1,10 @@\n package com.mycompany.locationmanagementapi;\n \n-import org.junit.jupiter.api.Test;\n+import org.junit.Test;\n import org.springframework.boot.test.context.SpringBootTest;\n \n @SpringBootTest\n-class LocationManagementApiApplicationTests {\n+public class LocationManagementApiApplicationTests {\n \n \t@Test\n \tvoid contextLoads() {"
  },
  {
    "sha": "07b2bbaab01fd489d585e4c4628fe97f7f438aaa",
    "filename": "src/test/java/com/mycompany/locationmanagementapi/LocationManagementControllerTest.java",
    "status": "added",
    "additions": 46,
    "deletions": 0,
    "changes": 46,
    "blob_url": "https://github.com/pandeymadhuri/location-management-api/blob/01abebc087635d06968339d5b965fe9249778b74/src/test/java/com/mycompany/locationmanagementapi/LocationManagementControllerTest.java",
    "raw_url": "https://github.com/pandeymadhuri/location-management-api/raw/01abebc087635d06968339d5b965fe9249778b74/src/test/java/com/mycompany/locationmanagementapi/LocationManagementControllerTest.java",
    "contents_url": "https://api.github.com/repos/pandeymadhuri/location-management-api/contents/src/test/java/com/mycompany/locationmanagementapi/LocationManagementControllerTest.java?ref=01abebc087635d06968339d5b965fe9249778b74",
    "patch": "@@ -0,0 +1,46 @@\n+package com.mycompany.locationmanagementapi;\n+\n+import static org.mockito.Mockito.when;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.InjectMocks;\n+import org.springframework.boot.test.mock.mockito.MockBean;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n+import com.mycompany.locationmanagementapi.controller.LocationManagementController;\n+import com.mycompany.locationmanagementapi.entity.Location;\n+import com.mycompany.locationmanagementapi.service.LocationManagementService;\n+\n+@RunWith(SpringJUnit4ClassRunner.class)\n+public class LocationManagementControllerTest {\n+\n+\t@InjectMocks\n+\tprivate LocationManagementController  locationManagementController= \n+\tnew LocationManagementController();\n+\t\n+\t@MockBean\n+\tprivate LocationManagementService locationManagementService;\n+\n+\tResponseEntity<List<Location>> loc;\n+\tList<Location> locations;\n+\t\n+\t@Before\n+\tpublic void setUp(){\n+\tlocations = new ArrayList<Location>();\n+\tlocations.add(new Location (1L,\"atm\",\"20123.56\",\"61.567\"));\n+\tlocations.add(new Location (2L,\"atm\",\"20123.56\",\"61.567\"));\n+\tlocations.add(new Location (3L,\"atm\",\"20123.56\",\"61.567\"));\n+\t}\n+\t\n+\t@Test\n+\tpublic void test_getAllLocations(){\n+\t\twhen(locationManagementService.getAllLoctions()).thenReturn(locations);\n+\t\tloc = locationManagementController.getAllLoctions();\n+\t\t//assertEquals\n+\t}\n+}"
  }
]
