[
  {
    "sha": "413dcaf94bf91950d9d8b4983638cb4a6f8e57c2",
    "filename": ".github/workflows/windows-app-test.yml",
    "status": "added",
    "additions": 39,
    "deletions": 0,
    "changes": 39,
    "blob_url": "https://github.com/react-native-art/art/blob/e661fdd83f2d93a8a82414a5e77a631c596c7bf3/.github/workflows/windows-app-test.yml",
    "raw_url": "https://github.com/react-native-art/art/raw/e661fdd83f2d93a8a82414a5e77a631c596c7bf3/.github/workflows/windows-app-test.yml",
    "contents_url": "https://api.github.com/repos/react-native-art/art/contents/.github/workflows/windows-app-test.yml?ref=e661fdd83f2d93a8a82414a5e77a631c596c7bf3",
    "patch": "@@ -0,0 +1,39 @@\n+name: Windows CI\n+on: [push, pull_request]\n+\n+jobs:\n+  run-windows-tests:\n+    name: Build & run tests\n+    runs-on: windows-2019\n+\n+    steps:\n+    - uses: actions/checkout@v2\n+      name: Checkout Code\n+\n+    - name: Setup Node.js\n+      uses: actions/setup-node@v1\n+      with:\n+        node-version: '12.18.3'\n+\n+    - name: Setup MSBuild\n+      uses: microsoft/setup-msbuild@v1\n+      with:\n+        vs-version: 16.8\n+\n+    - name: Install example modules\n+      run: |\n+        cd example\n+        yarn --pure-lockfile\n+    - name: Build release\n+      run: |\n+        cd example\n+        npx react-native run-windows --release --no-packager --no-launch --logging\n+    - name: Start Appium server\n+      shell: powershell\n+      run: |\n+        cd example\n+        Start-Process PowerShell -ArgumentList \"yarn appium\"\n+    - name: Run tests\n+      run: |\n+        cd example\n+        yarn test:windows"
  },
  {
    "sha": "2598d2dfd5bcaccc75c305f10d78f3df3020ae13",
    "filename": "README.md",
    "status": "modified",
    "additions": 17,
    "deletions": 0,
    "changes": 17,
    "blob_url": "https://github.com/react-native-art/art/blob/e661fdd83f2d93a8a82414a5e77a631c596c7bf3/README.md",
    "raw_url": "https://github.com/react-native-art/art/raw/e661fdd83f2d93a8a82414a5e77a631c596c7bf3/README.md",
    "contents_url": "https://api.github.com/repos/react-native-art/art/contents/README.md?ref=e661fdd83f2d93a8a82414a5e77a631c596c7bf3",
    "patch": "@@ -36,6 +36,8 @@ For `react-native < 0.60` you need to link ReactNative ART:\n react-native link @react-native-community/art\n ```\n \n+On Windows, you can either use autolinking on react-native-windows 0.63 and later or manually link the module on earlier releases.\n+\n ### Manual linking\n \n <details>\n@@ -95,6 +97,21 @@ protected List<ReactPackage> getPackages() {\n \n </details>\n \n+<details>\n+<summary>Manually linking the library for Windows</summary>\n+\n+#### Manual installation on RNW >= 0.62\n+1. `npm install @react-native-community/art --save`\n+2. Open your solution in Visual Studio 2019 (eg. `windows\\yourapp.sln`)\n+3. Right-click Solution icon in Solution Explorer > Add > Existing Project...\n+4. Add `node_modules\\@react-native-community\\art\\windows\\ART\\ART.vcxproj`\n+5. Right-click main application project > Add > Reference...\n+6. Select `ART` in Solution Projects\n+7. In app `pch.h` add `#include \"winrt/ART.h\"`\n+8. In `App.cpp` add `PackageProviders().Append(winrt::ART::ReactPackageProvider());` before `InitializeComponent();`\n+\n+</details>\n+\n # Migrating from the core `react-native` module\n \n To migrate to this module you need to follow all the installation instructions above and change your imports from:"
  },
  {
    "sha": "934256cb29d4a3616c740861c6af35ff6a165917",
    "filename": "example/.buckconfig",
    "status": "added",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/react-native-art/art/blob/e661fdd83f2d93a8a82414a5e77a631c596c7bf3/example/.buckconfig",
    "raw_url": "https://github.com/react-native-art/art/raw/e661fdd83f2d93a8a82414a5e77a631c596c7bf3/example/.buckconfig",
    "contents_url": "https://api.github.com/repos/react-native-art/art/contents/example/.buckconfig?ref=e661fdd83f2d93a8a82414a5e77a631c596c7bf3",
    "patch": "@@ -0,0 +1,6 @@\n+\n+[android]\n+  target = Google Inc.:Google APIs:23\n+\n+[maven_repositories]\n+  central = https://repo1.maven.org/maven2"
  },
  {
    "sha": "40c6dcd05f3100109c83d8e5946ae1e99b25162b",
    "filename": "example/.eslintrc.js",
    "status": "added",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/react-native-art/art/blob/e661fdd83f2d93a8a82414a5e77a631c596c7bf3/example/.eslintrc.js",
    "raw_url": "https://github.com/react-native-art/art/raw/e661fdd83f2d93a8a82414a5e77a631c596c7bf3/example/.eslintrc.js",
    "contents_url": "https://api.github.com/repos/react-native-art/art/contents/example/.eslintrc.js?ref=e661fdd83f2d93a8a82414a5e77a631c596c7bf3",
    "patch": "@@ -0,0 +1,4 @@\n+module.exports = {\n+  root: true,\n+  extends: '@react-native-community',\n+};"
  },
  {
    "sha": "b274ad1d6762f408e4f5d7fc590a1542e1654be7",
    "filename": "example/.flowconfig",
    "status": "added",
    "additions": 73,
    "deletions": 0,
    "changes": 73,
    "blob_url": "https://github.com/react-native-art/art/blob/e661fdd83f2d93a8a82414a5e77a631c596c7bf3/example/.flowconfig",
    "raw_url": "https://github.com/react-native-art/art/raw/e661fdd83f2d93a8a82414a5e77a631c596c7bf3/example/.flowconfig",
    "contents_url": "https://api.github.com/repos/react-native-art/art/contents/example/.flowconfig?ref=e661fdd83f2d93a8a82414a5e77a631c596c7bf3",
    "patch": "@@ -0,0 +1,73 @@\n+[ignore]\n+; We fork some components by platform\n+.*/*[.]android.js\n+\n+; Ignore \"BUCK\" generated dirs\n+<PROJECT_ROOT>/\\.buckd/\n+\n+; Ignore polyfills\n+node_modules/react-native/Libraries/polyfills/.*\n+\n+; These should not be required directly\n+; require from fbjs/lib instead: require('fbjs/lib/warning')\n+node_modules/warning/.*\n+\n+; Flow doesn't support platforms\n+.*/Libraries/Utilities/LoadingView.js\n+\n+[untyped]\n+.*/node_modules/@react-native-community/cli/.*/.*\n+\n+[include]\n+\n+[libs]\n+node_modules/react-native/interface.js\n+node_modules/react-native/flow/\n+\n+[options]\n+emoji=true\n+\n+esproposal.optional_chaining=enable\n+esproposal.nullish_coalescing=enable\n+\n+module.file_ext=.js\n+module.file_ext=.json\n+module.file_ext=.ios.js\n+\n+munge_underscores=true\n+\n+module.name_mapper='^react-native/\\(.*\\)$' -> '<PROJECT_ROOT>/node_modules/react-native/\\1'\n+module.name_mapper='^@?[./a-zA-Z0-9$_-]+\\.\\(bmp\\|gif\\|jpg\\|jpeg\\|png\\|psd\\|svg\\|webp\\|m4v\\|mov\\|mp4\\|mpeg\\|mpg\\|webm\\|aac\\|aiff\\|caf\\|m4a\\|mp3\\|wav\\|html\\|pdf\\)$' -> '<PROJECT_ROOT>/node_modules/react-native/Libraries/Image/RelativeImageStub'\n+\n+suppress_type=$FlowIssue\n+suppress_type=$FlowFixMe\n+suppress_type=$FlowFixMeProps\n+suppress_type=$FlowFixMeState\n+\n+suppress_comment=\\\\(.\\\\|\\n\\\\)*\\\\$FlowFixMe\\\\($\\\\|[^(]\\\\|(\\\\(<VERSION>\\\\)? *\\\\(site=[a-z,_]*react_native\\\\(_ios\\\\)?_\\\\(oss\\\\|fb\\\\)[a-z,_]*\\\\)?)\\\\)\n+suppress_comment=\\\\(.\\\\|\\n\\\\)*\\\\$FlowIssue\\\\((\\\\(<VERSION>\\\\)? *\\\\(site=[a-z,_]*react_native\\\\(_ios\\\\)?_\\\\(oss\\\\|fb\\\\)[a-z,_]*\\\\)?)\\\\)?:? #[0-9]+\n+suppress_comment=\\\\(.\\\\|\\n\\\\)*\\\\$FlowExpectedError\n+\n+[lints]\n+sketchy-null-number=warn\n+sketchy-null-mixed=warn\n+sketchy-number=warn\n+untyped-type-import=warn\n+nonstrict-import=warn\n+deprecated-type=warn\n+unsafe-getters-setters=warn\n+unnecessary-invariant=warn\n+signature-verification-failure=warn\n+deprecated-utility=error\n+\n+[strict]\n+deprecated-type\n+nonstrict-import\n+sketchy-null\n+unclear-type\n+unsafe-getters-setters\n+untyped-import\n+untyped-type-import\n+\n+[version]\n+^0.122.0"
  },
  {
    "sha": "d42ff18354df611a7cd2c52f852e9afc579bb194",
    "filename": "example/.gitattributes",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/react-native-art/art/blob/e661fdd83f2d93a8a82414a5e77a631c596c7bf3/example/.gitattributes",
    "raw_url": "https://github.com/react-native-art/art/raw/e661fdd83f2d93a8a82414a5e77a631c596c7bf3/example/.gitattributes",
    "contents_url": "https://api.github.com/repos/react-native-art/art/contents/example/.gitattributes?ref=e661fdd83f2d93a8a82414a5e77a631c596c7bf3",
    "patch": "@@ -0,0 +1 @@\n+*.pbxproj -text"
  },
  {
    "sha": "a524403ea0efaafd67977be636f44e1aa450aef1",
    "filename": "example/.gitignore",
    "status": "added",
    "additions": 65,
    "deletions": 0,
    "changes": 65,
    "blob_url": "https://github.com/react-native-art/art/blob/e661fdd83f2d93a8a82414a5e77a631c596c7bf3/example/.gitignore",
    "raw_url": "https://github.com/react-native-art/art/raw/e661fdd83f2d93a8a82414a5e77a631c596c7bf3/example/.gitignore",
    "contents_url": "https://api.github.com/repos/react-native-art/art/contents/example/.gitignore?ref=e661fdd83f2d93a8a82414a5e77a631c596c7bf3",
    "patch": "@@ -0,0 +1,65 @@\n+# OSX\n+#\n+.DS_Store\n+\n+# Xcode\n+#\n+build/\n+*.pbxuser\n+!default.pbxuser\n+*.mode1v3\n+!default.mode1v3\n+*.mode2v3\n+!default.mode2v3\n+*.perspectivev3\n+!default.perspectivev3\n+xcuserdata\n+*.xccheckout\n+*.moved-aside\n+DerivedData\n+*.hmap\n+*.ipa\n+*.xcuserstate\n+\n+# Android/IntelliJ\n+#\n+build/\n+.idea\n+.gradle\n+local.properties\n+*.iml\n+\n+# node.js\n+#\n+node_modules/\n+npm-debug.log\n+yarn-error.log\n+\n+# BUCK\n+buck-out/\n+\\.buckd/\n+*.keystore\n+!debug.keystore\n+\n+# fastlane\n+#\n+# It is recommended to not store the screenshots in the git repo. Instead, use fastlane to re-generate the\n+# screenshots whenever they are needed.\n+# For more information about the recommended setup visit:\n+# https://docs.fastlane.tools/best-practices/source-control/\n+\n+*/fastlane/report.xml\n+*/fastlane/Preview.html\n+*/fastlane/screenshots\n+\n+# Bundle artifact\n+*.jsbundle\n+\n+# CocoaPods\n+/ios/Pods/\n+\n+# MSBuild Binary and Structured Log\n+*.binlog\n+\n+# Debug log\n+debug.log"
  },
  {
    "sha": "5c4de1a4f6592df28e158eb0e6e9b8cca74377e1",
    "filename": "example/.prettierrc.js",
    "status": "added",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/react-native-art/art/blob/e661fdd83f2d93a8a82414a5e77a631c596c7bf3/example/.prettierrc.js",
    "raw_url": "https://github.com/react-native-art/art/raw/e661fdd83f2d93a8a82414a5e77a631c596c7bf3/example/.prettierrc.js",
    "contents_url": "https://api.github.com/repos/react-native-art/art/contents/example/.prettierrc.js?ref=e661fdd83f2d93a8a82414a5e77a631c596c7bf3",
    "patch": "@@ -0,0 +1,6 @@\n+module.exports = {\n+  bracketSpacing: false,\n+  jsxBracketSameLine: true,\n+  singleQuote: true,\n+  trailingComma: 'all',\n+};"
  },
  {
    "sha": "9e26dfeeb6e641a33dae4961196235bdb965b21b",
    "filename": "example/.watchmanconfig",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/react-native-art/art/blob/e661fdd83f2d93a8a82414a5e77a631c596c7bf3/example/.watchmanconfig",
    "raw_url": "https://github.com/react-native-art/art/raw/e661fdd83f2d93a8a82414a5e77a631c596c7bf3/example/.watchmanconfig",
    "contents_url": "https://api.github.com/repos/react-native-art/art/contents/example/.watchmanconfig?ref=e661fdd83f2d93a8a82414a5e77a631c596c7bf3",
    "patch": "@@ -0,0 +1 @@\n+{}\n\\ No newline at end of file"
  },
  {
    "sha": "178476699b605584dc503e85537c47dac8b7b611",
    "filename": "example/__tests__/App-test.js",
    "status": "added",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/react-native-art/art/blob/e661fdd83f2d93a8a82414a5e77a631c596c7bf3/example/__tests__/App-test.js",
    "raw_url": "https://github.com/react-native-art/art/raw/e661fdd83f2d93a8a82414a5e77a631c596c7bf3/example/__tests__/App-test.js",
    "contents_url": "https://api.github.com/repos/react-native-art/art/contents/example/__tests__/App-test.js?ref=e661fdd83f2d93a8a82414a5e77a631c596c7bf3",
    "patch": "@@ -0,0 +1,14 @@\n+/**\n+ * @format\n+ */\n+\n+import 'react-native';\n+import React from 'react';\n+import App from '../App';\n+\n+// Note: test renderer must be required after react-native.\n+import renderer from 'react-test-renderer';\n+\n+it('renders correctly', () => {\n+  renderer.create(<App />);\n+});"
  },
  {
    "sha": "09df1f0adb02bdbe483647c4ed46c23b7b6a6825",
    "filename": "example/__windows_tests__/app-starts-test.js",
    "status": "added",
    "additions": 23,
    "deletions": 0,
    "changes": 23,
    "blob_url": "https://github.com/react-native-art/art/blob/e661fdd83f2d93a8a82414a5e77a631c596c7bf3/example/__windows_tests__/app-starts-test.js",
    "raw_url": "https://github.com/react-native-art/art/raw/e661fdd83f2d93a8a82414a5e77a631c596c7bf3/example/__windows_tests__/app-starts-test.js",
    "contents_url": "https://api.github.com/repos/react-native-art/art/contents/example/__windows_tests__/app-starts-test.js?ref=e661fdd83f2d93a8a82414a5e77a631c596c7bf3",
    "patch": "@@ -0,0 +1,23 @@\n+import { driver, By2 } from 'selenium-appium';\n+import { until } from 'selenium-webdriver';\n+\n+const setup = require('../jest-windows/driver.setup');\n+jest.setTimeout(60000);\n+\n+beforeAll(() => {\n+  return driver.startWithCapabilities(setup.capabilites);\n+});\n+\n+afterAll(() => {\n+  return driver.quit();\n+});\n+\n+describe('App Starts', () => {\n+\n+  test('starts correctly', async () => {\n+    await driver.sleep(2000); // Expect 2s to be enough for the app to load.\n+    await driver.takeScreenshot();\n+  });\n+\n+});\n+"
  },
  {
    "sha": "a4cb8a5b06d2c7aa939295ed89c9e36bcd6a391c",
    "filename": "example/android/app/_BUCK",
    "status": "added",
    "additions": 55,
    "deletions": 0,
    "changes": 55,
    "blob_url": "https://github.com/react-native-art/art/blob/e661fdd83f2d93a8a82414a5e77a631c596c7bf3/example/android/app/_BUCK",
    "raw_url": "https://github.com/react-native-art/art/raw/e661fdd83f2d93a8a82414a5e77a631c596c7bf3/example/android/app/_BUCK",
    "contents_url": "https://api.github.com/repos/react-native-art/art/contents/example/android/app/_BUCK?ref=e661fdd83f2d93a8a82414a5e77a631c596c7bf3",
    "patch": "@@ -0,0 +1,55 @@\n+# To learn about Buck see [Docs](https://buckbuild.com/).\n+# To run your application with Buck:\n+# - install Buck\n+# - `npm start` - to start the packager\n+# - `cd android`\n+# - `keytool -genkey -v -keystore keystores/debug.keystore -storepass android -alias androiddebugkey -keypass android -dname \"CN=Android Debug,O=Android,C=US\"`\n+# - `./gradlew :app:copyDownloadableDepsToLibs` - make all Gradle compile dependencies available to Buck\n+# - `buck install -r android/app` - compile, install and run application\n+#\n+\n+load(\":build_defs.bzl\", \"create_aar_targets\", \"create_jar_targets\")\n+\n+lib_deps = []\n+\n+create_aar_targets(glob([\"libs/*.aar\"]))\n+\n+create_jar_targets(glob([\"libs/*.jar\"]))\n+\n+android_library(\n+    name = \"all-libs\",\n+    exported_deps = lib_deps,\n+)\n+\n+android_library(\n+    name = \"app-code\",\n+    srcs = glob([\n+        \"src/main/java/**/*.java\",\n+    ]),\n+    deps = [\n+        \":all-libs\",\n+        \":build_config\",\n+        \":res\",\n+    ],\n+)\n+\n+android_build_config(\n+    name = \"build_config\",\n+    package = \"com.example\",\n+)\n+\n+android_resource(\n+    name = \"res\",\n+    package = \"com.example\",\n+    res = \"src/main/res\",\n+)\n+\n+android_binary(\n+    name = \"app\",\n+    keystore = \"//android/keystores:debug\",\n+    manifest = \"src/main/AndroidManifest.xml\",\n+    package_type = \"debug\",\n+    deps = [\n+        \":app-code\",\n+    ],\n+)"
  },
  {
    "sha": "4005f7d38fd2fcf616ff74a69af101d8aaba569c",
    "filename": "example/android/app/build.gradle",
    "status": "modified",
    "additions": 74,
    "deletions": 7,
    "changes": 81,
    "blob_url": "https://github.com/react-native-art/art/blob/e661fdd83f2d93a8a82414a5e77a631c596c7bf3/example/android/app/build.gradle",
    "raw_url": "https://github.com/react-native-art/art/raw/e661fdd83f2d93a8a82414a5e77a631c596c7bf3/example/android/app/build.gradle",
    "contents_url": "https://api.github.com/repos/react-native-art/art/contents/example/android/app/build.gradle?ref=e661fdd83f2d93a8a82414a5e77a631c596c7bf3",
    "patch": "@@ -15,9 +15,14 @@ import com.android.build.OutputFile\n  *   // the name of the generated asset file containing your JS bundle\n  *   bundleAssetName: \"index.android.bundle\",\n  *\n- *   // the entry file for bundle generation\n+ *   // the entry file for bundle generation. If none specified and\n+ *   // \"index.android.js\" exists, it will be used. Otherwise \"index.js\" is\n+ *   // default. Can be overridden with ENTRY_FILE environment variable.\n  *   entryFile: \"index.android.js\",\n  *\n+ *   // https://reactnative.dev/docs/performance#enable-the-ram-format\n+ *   bundleCommand: \"ram-bundle\",\n+ *\n  *   // whether to bundle JS and assets in debug mode\n  *   bundleInDebug: false,\n  *\n@@ -73,10 +78,10 @@ import com.android.build.OutputFile\n  */\n \n project.ext.react = [\n-    entryFile: \"index.js\"\n+    enableHermes: false,  // clean and rebuild if changing\n ]\n \n-apply from: \"../../../node_modules/react-native/react.gradle\"\n+apply from: \"../../node_modules/react-native/react.gradle\"\n \n /**\n  * Set this to true to create two separate APKs instead of one:\n@@ -93,6 +98,28 @@ def enableSeparateBuildPerCPUArchitecture = false\n  */\n def enableProguardInReleaseBuilds = false\n \n+/**\n+ * The preferred build flavor of JavaScriptCore.\n+ *\n+ * For example, to use the international variant, you can use:\n+ * `def jscFlavor = 'org.webkit:android-jsc-intl:+'`\n+ *\n+ * The international variant includes ICU i18n library and necessary data\n+ * allowing to use e.g. `Date.toLocaleString` and `String.localeCompare` that\n+ * give correct results when using with locales other than en-US.  Note that\n+ * this variant is about 6MiB larger per architecture than default.\n+ */\n+def jscFlavor = 'org.webkit:android-jsc:+'\n+\n+/**\n+ * Whether to enable the Hermes VM.\n+ *\n+ * This should be set on project.ext.react and mirrored here.  If it is not set\n+ * on project.ext.react, JavaScript will not be compiled to Hermes Bytecode\n+ * and the benefits of using Hermes will therefore be sharply reduced.\n+ */\n+def enableHermes = project.ext.react.get(\"enableHermes\", false);\n+\n android {\n     compileSdkVersion rootProject.ext.compileSdkVersion\n \n@@ -116,32 +143,70 @@ android {\n             include \"armeabi-v7a\", \"x86\", \"arm64-v8a\", \"x86_64\"\n         }\n     }\n+    signingConfigs {\n+        debug {\n+            storeFile file('debug.keystore')\n+            storePassword 'android'\n+            keyAlias 'androiddebugkey'\n+            keyPassword 'android'\n+        }\n+    }\n     buildTypes {\n+        debug {\n+            signingConfig signingConfigs.debug\n+        }\n         release {\n+            // Caution! In production, you need to generate your own keystore file.\n+            // see https://reactnative.dev/docs/signed-apk-android.\n+            signingConfig signingConfigs.debug\n             minifyEnabled enableProguardInReleaseBuilds\n             proguardFiles getDefaultProguardFile(\"proguard-android.txt\"), \"proguard-rules.pro\"\n         }\n     }\n+\n     // applicationVariants are e.g. debug, release\n     applicationVariants.all { variant ->\n         variant.outputs.each { output ->\n             // For each separate APK per architecture, set a unique version code as described here:\n-            // http://tools.android.com/tech-docs/new-build-system/user-guide/apk-splits\n-            def versionCodes = [\"armeabi-v7a\":1, \"x86\":2, \"arm64-v8a\": 3, \"x86_64\": 4]\n+            // https://developer.android.com/studio/build/configure-apk-splits.html\n+            def versionCodes = [\"armeabi-v7a\": 1, \"x86\": 2, \"arm64-v8a\": 3, \"x86_64\": 4]\n             def abi = output.getFilter(OutputFile.ABI)\n             if (abi != null) {  // null for the universal-debug, universal-release variants\n                 output.versionCodeOverride =\n                         versionCodes.get(abi) * 1048576 + defaultConfig.versionCode\n             }\n+\n         }\n     }\n }\n \n dependencies {\n     implementation fileTree(dir: \"libs\", include: [\"*.jar\"])\n-    implementation \"com.android.support:appcompat-v7:${rootProject.ext.supportLibVersion}\"\n+    //noinspection GradleDynamicVersion\n     implementation \"com.facebook.react:react-native:+\"  // From node_modules\n-    implementation project(':react-native-art')\n+\n+    implementation \"androidx.swiperefreshlayout:swiperefreshlayout:1.0.0\"\n+\n+    debugImplementation(\"com.facebook.flipper:flipper:${FLIPPER_VERSION}\") {\n+      exclude group:'com.facebook.fbjni'\n+    }\n+\n+    debugImplementation(\"com.facebook.flipper:flipper-network-plugin:${FLIPPER_VERSION}\") {\n+        exclude group:'com.facebook.flipper'\n+        exclude group:'com.squareup.okhttp3', module:'okhttp'\n+    }\n+\n+    debugImplementation(\"com.facebook.flipper:flipper-fresco-plugin:${FLIPPER_VERSION}\") {\n+        exclude group:'com.facebook.flipper'\n+    }\n+\n+    if (enableHermes) {\n+        def hermesPath = \"../../node_modules/hermes-engine/android/\";\n+        debugImplementation files(hermesPath + \"hermes-debug.aar\")\n+        releaseImplementation files(hermesPath + \"hermes-release.aar\")\n+    } else {\n+        implementation jscFlavor\n+    }\n }\n \n // Run this once to be able to run the application with BUCK\n@@ -150,3 +215,5 @@ task copyDownloadableDepsToLibs(type: Copy) {\n     from configurations.compile\n     into 'libs'\n }\n+\n+apply from: file(\"../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle\"); applyNativeModulesAppBuildGradle(project)"
  },
  {
    "sha": "fff270f8d1d48432e85353a715d7ebad229b6d94",
    "filename": "example/android/app/build_defs.bzl",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/react-native-art/art/blob/e661fdd83f2d93a8a82414a5e77a631c596c7bf3/example/android/app/build_defs.bzl",
    "raw_url": "https://github.com/react-native-art/art/raw/e661fdd83f2d93a8a82414a5e77a631c596c7bf3/example/android/app/build_defs.bzl",
    "contents_url": "https://api.github.com/repos/react-native-art/art/contents/example/android/app/build_defs.bzl?ref=e661fdd83f2d93a8a82414a5e77a631c596c7bf3",
    "patch": "@@ -0,0 +1,19 @@\n+\"\"\"Helper definitions to glob .aar and .jar targets\"\"\"\n+\n+def create_aar_targets(aarfiles):\n+    for aarfile in aarfiles:\n+        name = \"aars__\" + aarfile[aarfile.rindex(\"/\") + 1:aarfile.rindex(\".aar\")]\n+        lib_deps.append(\":\" + name)\n+        android_prebuilt_aar(\n+            name = name,\n+            aar = aarfile,\n+        )\n+\n+def create_jar_targets(jarfiles):\n+    for jarfile in jarfiles:\n+        name = \"jars__\" + jarfile[jarfile.rindex(\"/\") + 1:jarfile.rindex(\".jar\")]\n+        lib_deps.append(\":\" + name)\n+        prebuilt_jar(\n+            name = name,\n+            binary_jar = jarfile,\n+        )"
  },
  {
    "sha": "364e105ed39fbfd62001429a68140672b06ec0de",
    "filename": "example/android/app/debug.keystore",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/react-native-art/art/blob/e661fdd83f2d93a8a82414a5e77a631c596c7bf3/example/android/app/debug.keystore",
    "raw_url": "https://github.com/react-native-art/art/raw/e661fdd83f2d93a8a82414a5e77a631c596c7bf3/example/android/app/debug.keystore",
    "contents_url": "https://api.github.com/repos/react-native-art/art/contents/example/android/app/debug.keystore?ref=e661fdd83f2d93a8a82414a5e77a631c596c7bf3"
  },
  {
    "sha": "11b025724a3f7a4a3685bbcd27da16440749f5e8",
    "filename": "example/android/app/proguard-rules.pro",
    "status": "modified",
    "additions": 0,
    "deletions": 7,
    "changes": 7,
    "blob_url": "https://github.com/react-native-art/art/blob/e661fdd83f2d93a8a82414a5e77a631c596c7bf3/example/android/app/proguard-rules.pro",
    "raw_url": "https://github.com/react-native-art/art/raw/e661fdd83f2d93a8a82414a5e77a631c596c7bf3/example/android/app/proguard-rules.pro",
    "contents_url": "https://api.github.com/repos/react-native-art/art/contents/example/android/app/proguard-rules.pro?ref=e661fdd83f2d93a8a82414a5e77a631c596c7bf3",
    "patch": "@@ -8,10 +8,3 @@\n #   http://developer.android.com/guide/developing/tools/proguard.html\n \n # Add any project specific keep options here:\n-\n-# If your project uses WebView with JS, uncomment the following\n-# and specify the fully qualified class name to the JavaScript interface\n-# class:\n-#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n-#   public *;\n-#}"
  },
  {
    "sha": "a1b70b8aa21a0ab4db8cfe547748c674b976de86",
    "filename": "example/android/app/src/debug/java/com/example/ReactNativeFlipper.java",
    "status": "added",
    "additions": 72,
    "deletions": 0,
    "changes": 72,
    "blob_url": "https://github.com/react-native-art/art/blob/e661fdd83f2d93a8a82414a5e77a631c596c7bf3/example/android/app/src/debug/java/com/example/ReactNativeFlipper.java",
    "raw_url": "https://github.com/react-native-art/art/raw/e661fdd83f2d93a8a82414a5e77a631c596c7bf3/example/android/app/src/debug/java/com/example/ReactNativeFlipper.java",
    "contents_url": "https://api.github.com/repos/react-native-art/art/contents/example/android/app/src/debug/java/com/example/ReactNativeFlipper.java?ref=e661fdd83f2d93a8a82414a5e77a631c596c7bf3",
    "patch": "@@ -0,0 +1,72 @@\n+/**\n+ * Copyright (c) Facebook, Inc. and its affiliates.\n+ *\n+ * <p>This source code is licensed under the MIT license found in the LICENSE file in the root\n+ * directory of this source tree.\n+ */\n+package com.example;\n+\n+import android.content.Context;\n+import com.facebook.flipper.android.AndroidFlipperClient;\n+import com.facebook.flipper.android.utils.FlipperUtils;\n+import com.facebook.flipper.core.FlipperClient;\n+import com.facebook.flipper.plugins.crashreporter.CrashReporterPlugin;\n+import com.facebook.flipper.plugins.databases.DatabasesFlipperPlugin;\n+import com.facebook.flipper.plugins.fresco.FrescoFlipperPlugin;\n+import com.facebook.flipper.plugins.inspector.DescriptorMapping;\n+import com.facebook.flipper.plugins.inspector.InspectorFlipperPlugin;\n+import com.facebook.flipper.plugins.network.FlipperOkhttpInterceptor;\n+import com.facebook.flipper.plugins.network.NetworkFlipperPlugin;\n+import com.facebook.flipper.plugins.react.ReactFlipperPlugin;\n+import com.facebook.flipper.plugins.sharedpreferences.SharedPreferencesFlipperPlugin;\n+import com.facebook.react.ReactInstanceManager;\n+import com.facebook.react.bridge.ReactContext;\n+import com.facebook.react.modules.network.NetworkingModule;\n+import okhttp3.OkHttpClient;\n+\n+public class ReactNativeFlipper {\n+  public static void initializeFlipper(Context context, ReactInstanceManager reactInstanceManager) {\n+    if (FlipperUtils.shouldEnableFlipper(context)) {\n+      final FlipperClient client = AndroidFlipperClient.getInstance(context);\n+\n+      client.addPlugin(new InspectorFlipperPlugin(context, DescriptorMapping.withDefaults()));\n+      client.addPlugin(new ReactFlipperPlugin());\n+      client.addPlugin(new DatabasesFlipperPlugin(context));\n+      client.addPlugin(new SharedPreferencesFlipperPlugin(context));\n+      client.addPlugin(CrashReporterPlugin.getInstance());\n+\n+      NetworkFlipperPlugin networkFlipperPlugin = new NetworkFlipperPlugin();\n+      NetworkingModule.setCustomClientBuilder(\n+          new NetworkingModule.CustomClientBuilder() {\n+            @Override\n+            public void apply(OkHttpClient.Builder builder) {\n+              builder.addNetworkInterceptor(new FlipperOkhttpInterceptor(networkFlipperPlugin));\n+            }\n+          });\n+      client.addPlugin(networkFlipperPlugin);\n+      client.start();\n+\n+      // Fresco Plugin needs to ensure that ImagePipelineFactory is initialized\n+      // Hence we run if after all native modules have been initialized\n+      ReactContext reactContext = reactInstanceManager.getCurrentReactContext();\n+      if (reactContext == null) {\n+        reactInstanceManager.addReactInstanceEventListener(\n+            new ReactInstanceManager.ReactInstanceEventListener() {\n+              @Override\n+              public void onReactContextInitialized(ReactContext reactContext) {\n+                reactInstanceManager.removeReactInstanceEventListener(this);\n+                reactContext.runOnNativeModulesQueueThread(\n+                    new Runnable() {\n+                      @Override\n+                      public void run() {\n+                        client.addPlugin(new FrescoFlipperPlugin());\n+                      }\n+                    });\n+              }\n+            });\n+      } else {\n+        client.addPlugin(new FrescoFlipperPlugin());\n+      }\n+    }\n+  }\n+}"
  },
  {
    "sha": "6e27a2a3108ea4ca5a2fc0b7bc12d6a87eb278d4",
    "filename": "example/android/app/src/main/AndroidManifest.xml",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/react-native-art/art/blob/e661fdd83f2d93a8a82414a5e77a631c596c7bf3/example/android/app/src/main/AndroidManifest.xml",
    "raw_url": "https://github.com/react-native-art/art/raw/e661fdd83f2d93a8a82414a5e77a631c596c7bf3/example/android/app/src/main/AndroidManifest.xml",
    "contents_url": "https://api.github.com/repos/react-native-art/art/contents/example/android/app/src/main/AndroidManifest.xml?ref=e661fdd83f2d93a8a82414a5e77a631c596c7bf3",
    "patch": "@@ -13,7 +13,8 @@\n       <activity\n         android:name=\".MainActivity\"\n         android:label=\"@string/app_name\"\n-        android:configChanges=\"keyboard|keyboardHidden|orientation|screenSize\"\n+        android:configChanges=\"keyboard|keyboardHidden|orientation|screenSize|uiMode\"\n+        android:launchMode=\"singleTask\"\n         android:windowSoftInputMode=\"adjustResize\">\n         <intent-filter>\n             <action android:name=\"android.intent.action.MAIN\" />"
  },
  {
    "sha": "8aa8cb2ee5f234880731cf2f9526f1adc25259b1",
    "filename": "example/android/app/src/main/java/com/example/MainActivity.java",
    "status": "modified",
    "additions": 8,
    "deletions": 8,
    "changes": 16,
    "blob_url": "https://github.com/react-native-art/art/blob/e661fdd83f2d93a8a82414a5e77a631c596c7bf3/example/android/app/src/main/java/com/example/MainActivity.java",
    "raw_url": "https://github.com/react-native-art/art/raw/e661fdd83f2d93a8a82414a5e77a631c596c7bf3/example/android/app/src/main/java/com/example/MainActivity.java",
    "contents_url": "https://api.github.com/repos/react-native-art/art/contents/example/android/app/src/main/java/com/example/MainActivity.java?ref=e661fdd83f2d93a8a82414a5e77a631c596c7bf3",
    "patch": "@@ -4,12 +4,12 @@\n \n public class MainActivity extends ReactActivity {\n \n-    /**\n-     * Returns the name of the main component registered from JavaScript.\n-     * This is used to schedule rendering of the component.\n-     */\n-    @Override\n-    protected String getMainComponentName() {\n-        return \"example\";\n-    }\n+  /**\n+   * Returns the name of the main component registered from JavaScript. This is used to schedule\n+   * rendering of the component.\n+   */\n+  @Override\n+  protected String getMainComponentName() {\n+    return \"example\";\n+  }\n }"
  },
  {
    "sha": "fd8ec883d5ff01375634df836cb13e48a34a87f1",
    "filename": "example/android/app/src/main/java/com/example/MainApplication.java",
    "status": "modified",
    "additions": 55,
    "deletions": 23,
    "changes": 78,
    "blob_url": "https://github.com/react-native-art/art/blob/e661fdd83f2d93a8a82414a5e77a631c596c7bf3/example/android/app/src/main/java/com/example/MainApplication.java",
    "raw_url": "https://github.com/react-native-art/art/raw/e661fdd83f2d93a8a82414a5e77a631c596c7bf3/example/android/app/src/main/java/com/example/MainApplication.java",
    "contents_url": "https://api.github.com/repos/react-native-art/art/contents/example/android/app/src/main/java/com/example/MainApplication.java?ref=e661fdd83f2d93a8a82414a5e77a631c596c7bf3",
    "patch": "@@ -1,39 +1,39 @@\n package com.example;\n \n import android.app.Application;\n-\n-import com.reactnativecommunity.art.ARTPackage;\n-\n+import android.content.Context;\n+import com.facebook.react.PackageList;\n import com.facebook.react.ReactApplication;\n+import com.facebook.react.ReactInstanceManager;\n import com.facebook.react.ReactNativeHost;\n import com.facebook.react.ReactPackage;\n-import com.facebook.react.shell.MainReactPackage;\n import com.facebook.soloader.SoLoader;\n-\n-import java.util.Arrays;\n+import java.lang.reflect.InvocationTargetException;\n import java.util.List;\n \n public class MainApplication extends Application implements ReactApplication {\n \n-  private final ReactNativeHost mReactNativeHost = new ReactNativeHost(this) {\n-    @Override\n-    public boolean getUseDeveloperSupport() {\n-      return BuildConfig.DEBUG;\n-    }\n+  private final ReactNativeHost mReactNativeHost =\n+      new ReactNativeHost(this) {\n+        @Override\n+        public boolean getUseDeveloperSupport() {\n+          return BuildConfig.DEBUG;\n+        }\n \n-    @Override\n-    protected List<ReactPackage> getPackages() {\n-      return Arrays.<ReactPackage>asList(\n-          new MainReactPackage(),\n-          new ARTPackage()\n-      );\n-    }\n+        @Override\n+        protected List<ReactPackage> getPackages() {\n+          @SuppressWarnings(\"UnnecessaryLocalVariable\")\n+          List<ReactPackage> packages = new PackageList(this).getPackages();\n+          // Packages that cannot be autolinked yet can be added manually here, for example:\n+          // packages.add(new MyReactNativePackage());\n+          return packages;\n+        }\n \n-    @Override\n-    protected String getJSMainModuleName() {\n-      return \"example/index\";\n-    }\n-  };\n+        @Override\n+        protected String getJSMainModuleName() {\n+          return \"index\";\n+        }\n+      };\n \n   @Override\n   public ReactNativeHost getReactNativeHost() {\n@@ -44,5 +44,37 @@ public ReactNativeHost getReactNativeHost() {\n   public void onCreate() {\n     super.onCreate();\n     SoLoader.init(this, /* native exopackage */ false);\n+    initializeFlipper(this, getReactNativeHost().getReactInstanceManager());\n+  }\n+\n+  /**\n+   * Loads Flipper in React Native templates. Call this in the onCreate method with something like\n+   * initializeFlipper(this, getReactNativeHost().getReactInstanceManager());\n+   *\n+   * @param context\n+   * @param reactInstanceManager\n+   */\n+  private static void initializeFlipper(\n+      Context context, ReactInstanceManager reactInstanceManager) {\n+    if (BuildConfig.DEBUG) {\n+      try {\n+        /*\n+         We use reflection here to pick up the class that initializes Flipper,\n+        since Flipper library is not available in release mode\n+        */\n+        Class<?> aClass = Class.forName(\"com.example.ReactNativeFlipper\");\n+        aClass\n+            .getMethod(\"initializeFlipper\", Context.class, ReactInstanceManager.class)\n+            .invoke(null, context, reactInstanceManager);\n+      } catch (ClassNotFoundException e) {\n+        e.printStackTrace();\n+      } catch (NoSuchMethodException e) {\n+        e.printStackTrace();\n+      } catch (IllegalAccessException e) {\n+        e.printStackTrace();\n+      } catch (InvocationTargetException e) {\n+        e.printStackTrace();\n+      }\n+    }\n   }\n }"
  },
  {
    "sha": "62fe59fa485459dfbb29dc76080e8073c1765013",
    "filename": "example/android/app/src/main/res/values/styles.xml",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/react-native-art/art/blob/e661fdd83f2d93a8a82414a5e77a631c596c7bf3/example/android/app/src/main/res/values/styles.xml",
    "raw_url": "https://github.com/react-native-art/art/raw/e661fdd83f2d93a8a82414a5e77a631c596c7bf3/example/android/app/src/main/res/values/styles.xml",
    "contents_url": "https://api.github.com/repos/react-native-art/art/contents/example/android/app/src/main/res/values/styles.xml?ref=e661fdd83f2d93a8a82414a5e77a631c596c7bf3",
    "patch": "@@ -3,6 +3,7 @@\n     <!-- Base application theme. -->\n     <style name=\"AppTheme\" parent=\"Theme.AppCompat.Light.NoActionBar\">\n         <!-- Customize your theme here. -->\n+        <item name=\"android:textColor\">#000000</item>\n     </style>\n \n </resources>"
  },
  {
    "sha": "ed5a5684245790e7e6c7417d83b789eefc322015",
    "filename": "example/android/build.gradle",
    "status": "modified",
    "additions": 13,
    "deletions": 9,
    "changes": 22,
    "blob_url": "https://github.com/react-native-art/art/blob/e661fdd83f2d93a8a82414a5e77a631c596c7bf3/example/android/build.gradle",
    "raw_url": "https://github.com/react-native-art/art/raw/e661fdd83f2d93a8a82414a5e77a631c596c7bf3/example/android/build.gradle",
    "contents_url": "https://api.github.com/repos/react-native-art/art/contents/example/android/build.gradle?ref=e661fdd83f2d93a8a82414a5e77a631c596c7bf3",
    "patch": "@@ -2,19 +2,17 @@\n \n buildscript {\n     ext {\n-        buildToolsVersion = \"28.0.3\"\n+        buildToolsVersion = \"29.0.2\"\n         minSdkVersion = 16\n-        compileSdkVersion = 28\n-        targetSdkVersion = 28\n-        supportLibVersion = \"28.0.0\"\n+        compileSdkVersion = 29\n+        targetSdkVersion = 29\n     }\n     repositories {\n         google()\n         jcenter()\n     }\n     dependencies {\n-        classpath(\"com.android.tools.build:gradle:3.4.0\")\n-\n+        classpath(\"com.android.tools.build:gradle:3.5.3\")\n         // NOTE: Do not place your application dependencies here; they belong\n         // in the individual module build.gradle files\n     }\n@@ -23,11 +21,17 @@ buildscript {\n allprojects {\n     repositories {\n         mavenLocal()\n-        google()\n-        jcenter()\n         maven {\n             // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm\n-            url \"$rootDir/../../node_modules/react-native/android\"\n+            url(\"$rootDir/../node_modules/react-native/android\")\n+        }\n+        maven {\n+            // Android JSC is installed from npm\n+            url(\"$rootDir/../node_modules/jsc-android/dist\")\n         }\n+\n+        google()\n+        jcenter()\n+        maven { url 'https://www.jitpack.io' }\n     }\n }"
  },
  {
    "sha": "04ca0ef29e7d104e62c742cc9bf948bc37424bb5",
    "filename": "example/android/gradle.properties",
    "status": "modified",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/react-native-art/art/blob/e661fdd83f2d93a8a82414a5e77a631c596c7bf3/example/android/gradle.properties",
    "raw_url": "https://github.com/react-native-art/art/raw/e661fdd83f2d93a8a82414a5e77a631c596c7bf3/example/android/gradle.properties",
    "contents_url": "https://api.github.com/repos/react-native-art/art/contents/example/android/gradle.properties?ref=e661fdd83f2d93a8a82414a5e77a631c596c7bf3",
    "patch": "@@ -16,3 +16,13 @@\n # This option should only be used with decoupled projects. More details, visit\n # http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\n # org.gradle.parallel=true\n+\n+# AndroidX package structure to make it clearer which packages are bundled with the\n+# Android operating system, and which are packaged with your app's APK\n+# https://developer.android.com/topic/libraries/support-library/androidx-rn\n+android.useAndroidX=true\n+# Automatically convert third-party libraries to use AndroidX\n+android.enableJetifier=true\n+\n+# Version of flipper SDK to use with React Native\n+FLIPPER_VERSION=0.37.0"
  },
  {
    "sha": "f3d88b1c2faf2fc91d853cd5d4242b5547257070",
    "filename": "example/android/gradle/wrapper/gradle-wrapper.jar",
    "status": "modified",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/react-native-art/art/blob/e661fdd83f2d93a8a82414a5e77a631c596c7bf3/example/android/gradle/wrapper/gradle-wrapper.jar",
    "raw_url": "https://github.com/react-native-art/art/raw/e661fdd83f2d93a8a82414a5e77a631c596c7bf3/example/android/gradle/wrapper/gradle-wrapper.jar",
    "contents_url": "https://api.github.com/repos/react-native-art/art/contents/example/android/gradle/wrapper/gradle-wrapper.jar?ref=e661fdd83f2d93a8a82414a5e77a631c596c7bf3"
  },
  {
    "sha": "84226702066b81b87877ca16900d4d07ff1db410",
    "filename": "example/android/gradle/wrapper/gradle-wrapper.properties",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/react-native-art/art/blob/e661fdd83f2d93a8a82414a5e77a631c596c7bf3/example/android/gradle/wrapper/gradle-wrapper.properties",
    "raw_url": "https://github.com/react-native-art/art/raw/e661fdd83f2d93a8a82414a5e77a631c596c7bf3/example/android/gradle/wrapper/gradle-wrapper.properties",
    "contents_url": "https://api.github.com/repos/react-native-art/art/contents/example/android/gradle/wrapper/gradle-wrapper.properties?ref=e661fdd83f2d93a8a82414a5e77a631c596c7bf3",
    "patch": "@@ -1,5 +1,5 @@\n distributionBase=GRADLE_USER_HOME\n distributionPath=wrapper/dists\n-distributionUrl=https\\://services.gradle.org/distributions/gradle-5.4.1-all.zip\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-6.2-all.zip\n zipStoreBase=GRADLE_USER_HOME\n zipStorePath=wrapper/dists"
  },
  {
    "sha": "2fe81a7d95e4f9ad2c9b2a046707d36ceb3980b3",
    "filename": "example/android/gradlew",
    "status": "modified",
    "additions": 15,
    "deletions": 20,
    "changes": 35,
    "blob_url": "https://github.com/react-native-art/art/blob/e661fdd83f2d93a8a82414a5e77a631c596c7bf3/example/android/gradlew",
    "raw_url": "https://github.com/react-native-art/art/raw/e661fdd83f2d93a8a82414a5e77a631c596c7bf3/example/android/gradlew",
    "contents_url": "https://api.github.com/repos/react-native-art/art/contents/example/android/gradlew?ref=e661fdd83f2d93a8a82414a5e77a631c596c7bf3",
    "patch": "@@ -7,7 +7,7 @@\n # you may not use this file except in compliance with the License.\n # You may obtain a copy of the License at\n #\n-#      http://www.apache.org/licenses/LICENSE-2.0\n+#      https://www.apache.org/licenses/LICENSE-2.0\n #\n # Unless required by applicable law or agreed to in writing, software\n # distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -125,8 +125,8 @@ if $darwin; then\n     GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\n fi\n \n-# For Cygwin, switch paths to Windows format before running java\n-if $cygwin ; then\n+# For Cygwin or MSYS, switch paths to Windows format before running java\n+if [ \"$cygwin\" = \"true\" -o \"$msys\" = \"true\" ] ; then\n     APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n     CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n     JAVACMD=`cygpath --unix \"$JAVACMD\"`\n@@ -154,19 +154,19 @@ if $cygwin ; then\n         else\n             eval `echo args$i`=\"\\\"$arg\\\"\"\n         fi\n-        i=$((i+1))\n+        i=`expr $i + 1`\n     done\n     case $i in\n-        (0) set -- ;;\n-        (1) set -- \"$args0\" ;;\n-        (2) set -- \"$args0\" \"$args1\" ;;\n-        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n-        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n-        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n-        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n-        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n-        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n-        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n+        0) set -- ;;\n+        1) set -- \"$args0\" ;;\n+        2) set -- \"$args0\" \"$args1\" ;;\n+        3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n+        4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n+        5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n+        6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n+        7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n+        8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n+        9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n     esac\n fi\n \n@@ -175,14 +175,9 @@ save () {\n     for i do printf %s\\\\n \"$i\" | sed \"s/'/'\\\\\\\\''/g;1s/^/'/;\\$s/\\$/' \\\\\\\\/\" ; done\n     echo \" \"\n }\n-APP_ARGS=$(save \"$@\")\n+APP_ARGS=`save \"$@\"`\n \n # Collect all arguments for the java command, following the shell quoting and substitution rules\n eval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS \"\\\"-Dorg.gradle.appname=$APP_BASE_NAME\\\"\" -classpath \"\\\"$CLASSPATH\\\"\" org.gradle.wrapper.GradleWrapperMain \"$APP_ARGS\"\n \n-# by default we should be in the correct project dir, but when run from Finder on Mac, the cwd is wrong\n-if [ \"$(uname)\" = \"Darwin\" ] && [ \"$HOME\" = \"$PWD\" ]; then\n-  cd \"$(dirname \"$0\")\"\n-fi\n-\n exec \"$JAVACMD\" \"$@\""
  },
  {
    "sha": "62bd9b9ccefea2b65ae41e5d9a545e2021b90a1d",
    "filename": "example/android/gradlew.bat",
    "status": "modified",
    "additions": 103,
    "deletions": 100,
    "changes": 203,
    "blob_url": "https://github.com/react-native-art/art/blob/e661fdd83f2d93a8a82414a5e77a631c596c7bf3/example/android/gradlew.bat",
    "raw_url": "https://github.com/react-native-art/art/raw/e661fdd83f2d93a8a82414a5e77a631c596c7bf3/example/android/gradlew.bat",
    "contents_url": "https://api.github.com/repos/react-native-art/art/contents/example/android/gradlew.bat?ref=e661fdd83f2d93a8a82414a5e77a631c596c7bf3",
    "patch": "@@ -1,100 +1,103 @@\n-@rem\r\n-@rem Copyright 2015 the original author or authors.\r\n-@rem\r\n-@rem Licensed under the Apache License, Version 2.0 (the \"License\");\r\n-@rem you may not use this file except in compliance with the License.\r\n-@rem You may obtain a copy of the License at\r\n-@rem\r\n-@rem      http://www.apache.org/licenses/LICENSE-2.0\r\n-@rem\r\n-@rem Unless required by applicable law or agreed to in writing, software\r\n-@rem distributed under the License is distributed on an \"AS IS\" BASIS,\r\n-@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n-@rem See the License for the specific language governing permissions and\r\n-@rem limitations under the License.\r\n-@rem\r\n-\r\n-@if \"%DEBUG%\" == \"\" @echo off\r\n-@rem ##########################################################################\r\n-@rem\r\n-@rem  Gradle startup script for Windows\r\n-@rem\r\n-@rem ##########################################################################\r\n-\r\n-@rem Set local scope for the variables with windows NT shell\r\n-if \"%OS%\"==\"Windows_NT\" setlocal\r\n-\r\n-set DIRNAME=%~dp0\r\n-if \"%DIRNAME%\" == \"\" set DIRNAME=.\r\n-set APP_BASE_NAME=%~n0\r\n-set APP_HOME=%DIRNAME%\r\n-\r\n-@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\n-set DEFAULT_JVM_OPTS=\"-Xmx64m\" \"-Xms64m\"\r\n-\r\n-@rem Find java.exe\r\n-if defined JAVA_HOME goto findJavaFromJavaHome\r\n-\r\n-set JAVA_EXE=java.exe\r\n-%JAVA_EXE% -version >NUL 2>&1\r\n-if \"%ERRORLEVEL%\" == \"0\" goto init\r\n-\r\n-echo.\r\n-echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\n-echo.\r\n-echo Please set the JAVA_HOME variable in your environment to match the\r\n-echo location of your Java installation.\r\n-\r\n-goto fail\r\n-\r\n-:findJavaFromJavaHome\r\n-set JAVA_HOME=%JAVA_HOME:\"=%\r\n-set JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n-\r\n-if exist \"%JAVA_EXE%\" goto init\r\n-\r\n-echo.\r\n-echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\n-echo.\r\n-echo Please set the JAVA_HOME variable in your environment to match the\r\n-echo location of your Java installation.\r\n-\r\n-goto fail\r\n-\r\n-:init\r\n-@rem Get command-line arguments, handling Windows variants\r\n-\r\n-if not \"%OS%\" == \"Windows_NT\" goto win9xME_args\r\n-\r\n-:win9xME_args\r\n-@rem Slurp the command line arguments.\r\n-set CMD_LINE_ARGS=\r\n-set _SKIP=2\r\n-\r\n-:win9xME_args_slurp\r\n-if \"x%~1\" == \"x\" goto execute\r\n-\r\n-set CMD_LINE_ARGS=%*\r\n-\r\n-:execute\r\n-@rem Setup the command line\r\n-\r\n-set CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n-\r\n-@rem Execute Gradle\r\n-\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\r\n-\r\n-:end\r\n-@rem End local scope for the variables with windows NT shell\r\n-if \"%ERRORLEVEL%\"==\"0\" goto mainEnd\r\n-\r\n-:fail\r\n-rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\n-rem the _cmd.exe /c_ return code!\r\n-if  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\r\n-exit /b 1\r\n-\r\n-:mainEnd\r\n-if \"%OS%\"==\"Windows_NT\" endlocal\r\n-\r\n-:omega\r\n+@rem\n+@rem Copyright 2015 the original author or authors.\n+@rem\n+@rem Licensed under the Apache License, Version 2.0 (the \"License\");\n+@rem you may not use this file except in compliance with the License.\n+@rem You may obtain a copy of the License at\n+@rem\n+@rem      https://www.apache.org/licenses/LICENSE-2.0\n+@rem\n+@rem Unless required by applicable law or agreed to in writing, software\n+@rem distributed under the License is distributed on an \"AS IS\" BASIS,\n+@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+@rem See the License for the specific language governing permissions and\n+@rem limitations under the License.\n+@rem\n+\n+@if \"%DEBUG%\" == \"\" @echo off\n+@rem ##########################################################################\n+@rem\n+@rem  Gradle startup script for Windows\n+@rem\n+@rem ##########################################################################\n+\n+@rem Set local scope for the variables with windows NT shell\n+if \"%OS%\"==\"Windows_NT\" setlocal\n+\n+set DIRNAME=%~dp0\n+if \"%DIRNAME%\" == \"\" set DIRNAME=.\n+set APP_BASE_NAME=%~n0\n+set APP_HOME=%DIRNAME%\n+\n+@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.\n+for %%i in (\"%APP_HOME%\") do set APP_HOME=%%~fi\n+\n+@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\n+set DEFAULT_JVM_OPTS=\"-Xmx64m\" \"-Xms64m\"\n+\n+@rem Find java.exe\n+if defined JAVA_HOME goto findJavaFromJavaHome\n+\n+set JAVA_EXE=java.exe\n+%JAVA_EXE% -version >NUL 2>&1\n+if \"%ERRORLEVEL%\" == \"0\" goto init\n+\n+echo.\n+echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n+echo.\n+echo Please set the JAVA_HOME variable in your environment to match the\n+echo location of your Java installation.\n+\n+goto fail\n+\n+:findJavaFromJavaHome\n+set JAVA_HOME=%JAVA_HOME:\"=%\n+set JAVA_EXE=%JAVA_HOME%/bin/java.exe\n+\n+if exist \"%JAVA_EXE%\" goto init\n+\n+echo.\n+echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\n+echo.\n+echo Please set the JAVA_HOME variable in your environment to match the\n+echo location of your Java installation.\n+\n+goto fail\n+\n+:init\n+@rem Get command-line arguments, handling Windows variants\n+\n+if not \"%OS%\" == \"Windows_NT\" goto win9xME_args\n+\n+:win9xME_args\n+@rem Slurp the command line arguments.\n+set CMD_LINE_ARGS=\n+set _SKIP=2\n+\n+:win9xME_args_slurp\n+if \"x%~1\" == \"x\" goto execute\n+\n+set CMD_LINE_ARGS=%*\n+\n+:execute\n+@rem Setup the command line\n+\n+set CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n+\n+@rem Execute Gradle\n+\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\n+\n+:end\n+@rem End local scope for the variables with windows NT shell\n+if \"%ERRORLEVEL%\"==\"0\" goto mainEnd\n+\n+:fail\n+rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\n+rem the _cmd.exe /c_ return code!\n+if  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\n+exit /b 1\n+\n+:mainEnd\n+if \"%OS%\"==\"Windows_NT\" endlocal\n+\n+:omega"
  },
  {
    "sha": "121bfb49f0dfda7b85011c9d1442c9b9f940c9bb",
    "filename": "example/android/keystores/debug.keystore.properties",
    "status": "removed",
    "additions": 0,
    "deletions": 4,
    "changes": 4,
    "blob_url": "https://github.com/react-native-art/art/blob/749985519538c7f8165d0128f07ebc214b06341d/example/android/keystores/debug.keystore.properties",
    "raw_url": "https://github.com/react-native-art/art/raw/749985519538c7f8165d0128f07ebc214b06341d/example/android/keystores/debug.keystore.properties",
    "contents_url": "https://api.github.com/repos/react-native-art/art/contents/example/android/keystores/debug.keystore.properties?ref=749985519538c7f8165d0128f07ebc214b06341d",
    "patch": "@@ -1,4 +0,0 @@\n-key.store=debug.keystore\n-key.alias=androiddebugkey\n-key.store.password=android\n-key.alias.password=android"
  },
  {
    "sha": "263c9e8ca0ec1ec9e9e84ea55323436a0054f00a",
    "filename": "example/android/settings.gradle",
    "status": "modified",
    "additions": 1,
    "deletions": 3,
    "changes": 4,
    "blob_url": "https://github.com/react-native-art/art/blob/e661fdd83f2d93a8a82414a5e77a631c596c7bf3/example/android/settings.gradle",
    "raw_url": "https://github.com/react-native-art/art/raw/e661fdd83f2d93a8a82414a5e77a631c596c7bf3/example/android/settings.gradle",
    "contents_url": "https://api.github.com/repos/react-native-art/art/contents/example/android/settings.gradle?ref=e661fdd83f2d93a8a82414a5e77a631c596c7bf3",
    "patch": "@@ -1,5 +1,3 @@\n rootProject.name = 'example'\n-\n+apply from: file(\"../node_modules/@react-native-community/cli-platform-android/native_modules.gradle\"); applyNativeModulesSettingsGradle(settings)\n include ':app'\n-include ':react-native-art'\n-project(':react-native-art').projectDir = new File(rootProject.projectDir, '../../android')"
  },
  {
    "sha": "f842b77fcfb8b74016365099d8c5fe54cf3269e2",
    "filename": "example/babel.config.js",
    "status": "added",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/react-native-art/art/blob/e661fdd83f2d93a8a82414a5e77a631c596c7bf3/example/babel.config.js",
    "raw_url": "https://github.com/react-native-art/art/raw/e661fdd83f2d93a8a82414a5e77a631c596c7bf3/example/babel.config.js",
    "contents_url": "https://api.github.com/repos/react-native-art/art/contents/example/babel.config.js?ref=e661fdd83f2d93a8a82414a5e77a631c596c7bf3",
    "patch": "@@ -0,0 +1,3 @@\n+module.exports = {\n+  presets: ['module:metro-react-native-babel-preset'],\n+};"
  }
]
