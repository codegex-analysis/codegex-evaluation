[
  {
    "sha": "07ea85cc78ba6fb52363c9b5ae61d4ccf1fe29bc",
    "filename": "src/test/java/edu/ifrs/vvs/BubbleSortTest.java",
    "status": "added",
    "additions": 62,
    "deletions": 0,
    "changes": 62,
    "blob_url": "https://github.com/rodrigoprestesmachado/bubblesort/blob/eeff609b2feeba9ff174b6744099f665396f6e0c/src/test/java/edu/ifrs/vvs/BubbleSortTest.java",
    "raw_url": "https://github.com/rodrigoprestesmachado/bubblesort/raw/eeff609b2feeba9ff174b6744099f665396f6e0c/src/test/java/edu/ifrs/vvs/BubbleSortTest.java",
    "contents_url": "https://api.github.com/repos/rodrigoprestesmachado/bubblesort/contents/src/test/java/edu/ifrs/vvs/BubbleSortTest.java?ref=eeff609b2feeba9ff174b6744099f665396f6e0c",
    "patch": "@@ -0,0 +1,62 @@\n+/**\n+ * @License\n+ * Copyright 2020 Bubble Sort Application\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package edu.ifrs.vvs;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import static org.junit.jupiter.api.Assertions.assertArrayEquals;\n+\n+/**\n+ * Unit test for bubble sort.\n+ */\n+class BubbleSortTest {\n+    private BubbleSort bs = new BubbleSort();\n+    /**\n+     * BubbleSort Test.\n+     */\n+\n+    @Test\n+    @SuppressWarnings(\"checkstyle:magicnumber\")\n+    void arraySimpleSort() {\n+        int[] arrayTest = new int[] {1, 2, 0, 23};\n+        int[] arrayExpected = new int[] {0, 1, 2, 23};\n+\n+        bs.sort(arrayTest);\n+        assertArrayEquals(arrayTest, arrayExpected);\n+    }\n+\n+    @Test\n+    @SuppressWarnings(\"checkstyle:magicnumber\")\n+    void arrayWithNegativesSort() {\n+        int[] arrayTest = new int[] {-1, 2, 0, 23, 1, -2};\n+        int[] arrayExpected = new int[] {-2, -1, 0, 1, 2, 23};\n+\n+        bs.sort(arrayTest);\n+        assertArrayEquals(arrayTest, arrayExpected);\n+    }\n+\n+    @Test\n+    @SuppressWarnings(\"checkstyle:magicnumber\")\n+    void arrayEmptySort() {\n+        int[] arrayTest = new int[5];\n+        int[] arrayExpected = new int[5];\n+\n+        bs.sort(arrayTest);\n+        assertArrayEquals(arrayTest, arrayExpected);\n+    }\n+}"
  }
]
