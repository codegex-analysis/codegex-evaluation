[
  {
    "sha": "e8483615812e38b507efde6d4f2eec4c1a663e6b",
    "filename": "src/test/java/edu/ifrs/vvs/BubbleSortTest.java",
    "status": "added",
    "additions": 67,
    "deletions": 0,
    "changes": 67,
    "blob_url": "https://github.com/rodrigoprestesmachado/bubblesort/blob/f44bad006149f5dbfe393e38e402246c0e8c2e51/src/test/java/edu/ifrs/vvs/BubbleSortTest.java",
    "raw_url": "https://github.com/rodrigoprestesmachado/bubblesort/raw/f44bad006149f5dbfe393e38e402246c0e8c2e51/src/test/java/edu/ifrs/vvs/BubbleSortTest.java",
    "contents_url": "https://api.github.com/repos/rodrigoprestesmachado/bubblesort/contents/src/test/java/edu/ifrs/vvs/BubbleSortTest.java?ref=f44bad006149f5dbfe393e38e402246c0e8c2e51",
    "patch": "@@ -0,0 +1,67 @@\n+/**\n+ * @License\n+ * Copyright 2020 Bubble Sort Application\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package edu.ifrs.vvs;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import static org.junit.jupiter.api.Assertions.assertArrayEquals;\n+\n+class BubbleSortTest {\n+\n+    BubbleSort bubble = new BubbleSort();\n+\n+    @Test\n+    void deveConseguirOrdenarNumerosPositivos() {\n+        int[] arrayEsperado = {1, 2 ,3 , 4};\n+        int[] array = {3, 1, 2, 4};\n+\n+        bubble.sort(array);\n+\n+        assertArrayEquals(arrayEsperado, array);\n+    }\n+\n+    @Test\n+    void deveConseguirOrdenarNumerosNegativos() {\n+        int[] arrayEsperado = {-4, -3, -2, -1};\n+        int[] array = {-3, -1, -2, -4};\n+\n+        bubble.sort(array);\n+\n+        assertArrayEquals(arrayEsperado, array);\n+    }\n+\n+    @Test\n+    void deveConseguirOrdenarNumerosPositivosENegativos() {\n+        int[] arrayEsperado = {-4, -3, -2, -1, 2, 5, 7, 11};\n+        int[] array = {-3, -1, -2, 7, 5, 11, 2, -4};\n+\n+        bubble.sort(array);\n+\n+        assertArrayEquals(arrayEsperado, array);\n+    }\n+\n+    @Test\n+    void deveConseguirOrdenarNumerosPositivosENegativosComZero() {\n+        int[] arrayEsperado = {-4, -3, -2, -1, 0, 2, 5, 7, 11};\n+        int[] array = {-3, -1, 0, -2, 7, 5, 11, 2, -4};\n+\n+        bubble.sort(array);\n+\n+        assertArrayEquals(arrayEsperado, array);\n+    }\n+}"
  }
]
