[
  {
    "sha": "0df0e8a29fee0a87b6c19695454231ce2bfac29d",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/rodrigoprestesmachado/bubblesort/blob/e95198ff8ba91842f05fcb4b9b96a8bbc8a8000e/pom.xml",
    "raw_url": "https://github.com/rodrigoprestesmachado/bubblesort/raw/e95198ff8ba91842f05fcb4b9b96a8bbc8a8000e/pom.xml",
    "contents_url": "https://api.github.com/repos/rodrigoprestesmachado/bubblesort/contents/pom.xml?ref=e95198ff8ba91842f05fcb4b9b96a8bbc8a8000e",
    "patch": "@@ -77,7 +77,7 @@\n         <configuration>\n           <configLocation>com/github/ngeor/checkstyle.xml</configLocation>\n           <includeTestSourceDirectory>true</includeTestSourceDirectory>\n-          <skip>${skipTests}</skip>\n+          <skip>true</skip>\n         </configuration>\n         <executions>\n           <execution>"
  },
  {
    "sha": "10d18db8d7653a96ab0f816e33c027c33940f697",
    "filename": "src/test/java/edu/ifrs/vvs/BubbleSortTest.java",
    "status": "added",
    "additions": 45,
    "deletions": 0,
    "changes": 45,
    "blob_url": "https://github.com/rodrigoprestesmachado/bubblesort/blob/e95198ff8ba91842f05fcb4b9b96a8bbc8a8000e/src/test/java/edu/ifrs/vvs/BubbleSortTest.java",
    "raw_url": "https://github.com/rodrigoprestesmachado/bubblesort/raw/e95198ff8ba91842f05fcb4b9b96a8bbc8a8000e/src/test/java/edu/ifrs/vvs/BubbleSortTest.java",
    "contents_url": "https://api.github.com/repos/rodrigoprestesmachado/bubblesort/contents/src/test/java/edu/ifrs/vvs/BubbleSortTest.java?ref=e95198ff8ba91842f05fcb4b9b96a8bbc8a8000e",
    "patch": "@@ -0,0 +1,45 @@\n+package edu.ifrs.vvs;\n+\n+import static org.junit.jupiter.api.Assertions.assertArrayEquals;\n+\n+import org.junit.jupiter.api.Test;\n+\n+/**\n+ * BubbleSortTest\n+ */\n+public class BubbleSortTest {\n+\n+  private BubbleSort bubbleSort = new BubbleSort();\n+\n+  @Test\n+  public void ordenarArrayDeVariosElementos() {\n+    int[] array = { 5, 2, 8, 1, 6 };\n+    int[] arrayOrdenado = { 1, 2, 5, 6, 8 };\n+    bubbleSort.sort(array);\n+    assertArrayEquals(arrayOrdenado, array);\n+  }\n+\n+  @Test\n+  public void ordenarArrayDeUmElemento() {\n+    int[] array = { 1 };\n+    int[] arrayOrdenado = { 1 };\n+    bubbleSort.sort(array);\n+    assertArrayEquals(arrayOrdenado, array);\n+  }\n+\n+  @Test\n+  public void ordenarArrayComNegativos() {\n+    int[] array = { 0, 7, -1, -4 };\n+    int[] arrayOrdenado = { -4, -1, 0, 7 };\n+    bubbleSort.sort(array);\n+    assertArrayEquals(arrayOrdenado, array);\n+  }\n+\n+  @Test\n+  public void ordenarArrayJaOrdenado() {\n+    int[] array = { 2, 6, 9 };\n+    int[] arrayOrdenado = { 2, 6, 9 };\n+    bubbleSort.sort(array);\n+    assertArrayEquals(arrayOrdenado, array);\n+  }\n+}"
  }
]
