[
  {
    "sha": "6576bb68bd8393d3e39e4705e0f45202190cc19d",
    "filename": "src/main/java/inf112/isolasjonsteamet/roborally/actions/CheckPoint.java",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/inf112-v21/IsolasjonsTeamet/blob/e988c5fd6643cd00cf4c3c1eb67e82651483d7d9/src/main/java/inf112/isolasjonsteamet/roborally/actions/CheckPoint.java",
    "raw_url": "https://github.com/inf112-v21/IsolasjonsTeamet/raw/e988c5fd6643cd00cf4c3c1eb67e82651483d7d9/src/main/java/inf112/isolasjonsteamet/roborally/actions/CheckPoint.java",
    "contents_url": "https://api.github.com/repos/inf112-v21/IsolasjonsTeamet/contents/src/main/java/inf112/isolasjonsteamet/roborally/actions/CheckPoint.java?ref=e988c5fd6643cd00cf4c3c1eb67e82651483d7d9",
    "patch": "@@ -4,7 +4,8 @@\n import inf112.isolasjonsteamet.roborally.players.Player;\n \n /**\n- * Checkpoint is an action that let's us keep track of when a player has reached a checkpoint.\n+ * Perfom an Action on the board. Checkpoint is an action that let's us keep track of when a player has reached a\n+ * checkpoint.\n  */\n public class CheckPoint implements Action {\n "
  },
  {
    "sha": "a65e2f2997605788a0ff171cda23cc20ec4dd686",
    "filename": "src/main/java/inf112/isolasjonsteamet/roborally/actions/Damage.java",
    "status": "modified",
    "additions": 4,
    "deletions": 1,
    "changes": 5,
    "blob_url": "https://github.com/inf112-v21/IsolasjonsTeamet/blob/e988c5fd6643cd00cf4c3c1eb67e82651483d7d9/src/main/java/inf112/isolasjonsteamet/roborally/actions/Damage.java",
    "raw_url": "https://github.com/inf112-v21/IsolasjonsTeamet/raw/e988c5fd6643cd00cf4c3c1eb67e82651483d7d9/src/main/java/inf112/isolasjonsteamet/roborally/actions/Damage.java",
    "contents_url": "https://api.github.com/repos/inf112-v21/IsolasjonsTeamet/contents/src/main/java/inf112/isolasjonsteamet/roborally/actions/Damage.java?ref=e988c5fd6643cd00cf4c3c1eb67e82651483d7d9",
    "patch": "@@ -8,8 +8,11 @@\n  */\n public class Damage implements Action {\n \n+\t/**\n+\t * {@inheritDoc}\n+\t */\n \t@Override\n \tpublic void perform(Board board, Player player) {\n-\n+\t\tplayer.damageRobot();\n \t}\n }"
  },
  {
    "sha": "f5f7efbba49a089c99c5dfefd43cf933528bc041",
    "filename": "src/main/java/inf112/isolasjonsteamet/roborally/actions/KillRobot.java",
    "status": "modified",
    "additions": 4,
    "deletions": 1,
    "changes": 5,
    "blob_url": "https://github.com/inf112-v21/IsolasjonsTeamet/blob/e988c5fd6643cd00cf4c3c1eb67e82651483d7d9/src/main/java/inf112/isolasjonsteamet/roborally/actions/KillRobot.java",
    "raw_url": "https://github.com/inf112-v21/IsolasjonsTeamet/raw/e988c5fd6643cd00cf4c3c1eb67e82651483d7d9/src/main/java/inf112/isolasjonsteamet/roborally/actions/KillRobot.java",
    "contents_url": "https://api.github.com/repos/inf112-v21/IsolasjonsTeamet/contents/src/main/java/inf112/isolasjonsteamet/roborally/actions/KillRobot.java?ref=e988c5fd6643cd00cf4c3c1eb67e82651483d7d9",
    "patch": "@@ -8,8 +8,11 @@\n  */\n public class KillRobot implements Action {\n \n+\t/**\n+\t * {@inheritDoc}\n+\t */\n \t@Override\n \tpublic void perform(Board board, Player player) {\n-\n+\t\tplayer.killRobot();\n \t}\n }"
  },
  {
    "sha": "a12b678057bb5797385b4dc6ac58b00459489d5d",
    "filename": "src/main/java/inf112/isolasjonsteamet/roborally/actions/MoveForward.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/inf112-v21/IsolasjonsTeamet/blob/e988c5fd6643cd00cf4c3c1eb67e82651483d7d9/src/main/java/inf112/isolasjonsteamet/roborally/actions/MoveForward.java",
    "raw_url": "https://github.com/inf112-v21/IsolasjonsTeamet/raw/e988c5fd6643cd00cf4c3c1eb67e82651483d7d9/src/main/java/inf112/isolasjonsteamet/roborally/actions/MoveForward.java",
    "contents_url": "https://api.github.com/repos/inf112-v21/IsolasjonsTeamet/contents/src/main/java/inf112/isolasjonsteamet/roborally/actions/MoveForward.java?ref=e988c5fd6643cd00cf4c3c1eb67e82651483d7d9",
    "patch": "@@ -13,7 +13,7 @@\n \tpublic MoveForward(int numMoves) {\n \t\tthis.numMoves = numMoves;\n \t}\n-  \n+\n \t@Override\n \tpublic void perform(Board board, Player player) {\n \t\tnew Move(player.getDir(), numMoves).perform(board, player);"
  },
  {
    "sha": "05556cc505e07febd1fb2800cc8c2707af8faaad",
    "filename": "src/main/java/inf112/isolasjonsteamet/roborally/actions/RepairPlayer.java",
    "status": "modified",
    "additions": 5,
    "deletions": 2,
    "changes": 7,
    "blob_url": "https://github.com/inf112-v21/IsolasjonsTeamet/blob/e988c5fd6643cd00cf4c3c1eb67e82651483d7d9/src/main/java/inf112/isolasjonsteamet/roborally/actions/RepairPlayer.java",
    "raw_url": "https://github.com/inf112-v21/IsolasjonsTeamet/raw/e988c5fd6643cd00cf4c3c1eb67e82651483d7d9/src/main/java/inf112/isolasjonsteamet/roborally/actions/RepairPlayer.java",
    "contents_url": "https://api.github.com/repos/inf112-v21/IsolasjonsTeamet/contents/src/main/java/inf112/isolasjonsteamet/roborally/actions/RepairPlayer.java?ref=e988c5fd6643cd00cf4c3c1eb67e82651483d7d9",
    "patch": "@@ -4,12 +4,15 @@\n import inf112.isolasjonsteamet.roborally.players.Player;\n \n /**\n- * Repair player is an action that repairs a player x much according to cards they recieve.\n+ * Repair player is an action that repairs a player x much according to cards they receive.\n  */\n public class RepairPlayer implements Action {\n \n+\t/**\n+\t * {@inheritDoc}\n+\t */\n \t@Override\n \tpublic void perform(Board board, Player player) {\n-\n+\t\tplayer.repairRobot();\n \t}\n }"
  },
  {
    "sha": "d38dca1413d7b00b94a2b466b12c5094bdffbab5",
    "filename": "src/main/java/inf112/isolasjonsteamet/roborally/app/Main.java",
    "status": "modified",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/inf112-v21/IsolasjonsTeamet/blob/e988c5fd6643cd00cf4c3c1eb67e82651483d7d9/src/main/java/inf112/isolasjonsteamet/roborally/app/Main.java",
    "raw_url": "https://github.com/inf112-v21/IsolasjonsTeamet/raw/e988c5fd6643cd00cf4c3c1eb67e82651483d7d9/src/main/java/inf112/isolasjonsteamet/roborally/app/Main.java",
    "contents_url": "https://api.github.com/repos/inf112-v21/IsolasjonsTeamet/contents/src/main/java/inf112/isolasjonsteamet/roborally/app/Main.java?ref=e988c5fd6643cd00cf4c3c1eb67e82651483d7d9",
    "patch": "@@ -15,7 +15,6 @@\n \tpublic static void main(String[] args) {\n \t\tLwjgl3ApplicationConfiguration cfg = new Lwjgl3ApplicationConfiguration();\n \t\tcfg.setTitle(\"RoboRally\");\n-\t\tcfg.setWindowedMode(700, 700);\n \n \t\t//Creates a new instance of HelloWorld, our game\n \t\tnew Lwjgl3Application(new RoboRallyScreenController(), cfg);"
  },
  {
    "sha": "538cbfbed20af85773962e7339aef633a78b9006",
    "filename": "src/main/java/inf112/isolasjonsteamet/roborally/board/Board.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/inf112-v21/IsolasjonsTeamet/blob/e988c5fd6643cd00cf4c3c1eb67e82651483d7d9/src/main/java/inf112/isolasjonsteamet/roborally/board/Board.java",
    "raw_url": "https://github.com/inf112-v21/IsolasjonsTeamet/raw/e988c5fd6643cd00cf4c3c1eb67e82651483d7d9/src/main/java/inf112/isolasjonsteamet/roborally/board/Board.java",
    "contents_url": "https://api.github.com/repos/inf112-v21/IsolasjonsTeamet/contents/src/main/java/inf112/isolasjonsteamet/roborally/board/Board.java?ref=e988c5fd6643cd00cf4c3c1eb67e82651483d7d9",
    "patch": "@@ -42,4 +42,4 @@\n \t * @return height\n \t */\n \tint getHeight();\n-}\n\\ No newline at end of file\n+}"
  },
  {
    "sha": "70b6740112e28c7768420d49679f6b2224bf170b",
    "filename": "src/main/java/inf112/isolasjonsteamet/roborally/players/Player.java",
    "status": "modified",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/inf112-v21/IsolasjonsTeamet/blob/e988c5fd6643cd00cf4c3c1eb67e82651483d7d9/src/main/java/inf112/isolasjonsteamet/roborally/players/Player.java",
    "raw_url": "https://github.com/inf112-v21/IsolasjonsTeamet/raw/e988c5fd6643cd00cf4c3c1eb67e82651483d7d9/src/main/java/inf112/isolasjonsteamet/roborally/players/Player.java",
    "contents_url": "https://api.github.com/repos/inf112-v21/IsolasjonsTeamet/contents/src/main/java/inf112/isolasjonsteamet/roborally/players/Player.java?ref=e988c5fd6643cd00cf4c3c1eb67e82651483d7d9",
    "patch": "@@ -34,4 +34,19 @@\n \t * Sets direction of the player.\n \t */\n \tvoid setDir(Orientation dir);\n+\n+\t/**\n+\t * Damage a players robot with 1 damage token.\n+\t */\n+\tvoid damageRobot();\n+\n+\t/**\n+\t * Repair a players robot with 1 damage token.\n+\t */\n+\tvoid repairRobot();\n+\n+\t/**\n+\t * Decrements life from player and rests damage token for robot.\n+\t */\n+\tvoid killRobot();\n }"
  },
  {
    "sha": "dec231f0a119699ead5da1d7913cdfcb3e897e81",
    "filename": "src/main/java/inf112/isolasjonsteamet/roborally/players/PlayerImpl.java",
    "status": "modified",
    "additions": 32,
    "deletions": 0,
    "changes": 32,
    "blob_url": "https://github.com/inf112-v21/IsolasjonsTeamet/blob/e988c5fd6643cd00cf4c3c1eb67e82651483d7d9/src/main/java/inf112/isolasjonsteamet/roborally/players/PlayerImpl.java",
    "raw_url": "https://github.com/inf112-v21/IsolasjonsTeamet/raw/e988c5fd6643cd00cf4c3c1eb67e82651483d7d9/src/main/java/inf112/isolasjonsteamet/roborally/players/PlayerImpl.java",
    "contents_url": "https://api.github.com/repos/inf112-v21/IsolasjonsTeamet/contents/src/main/java/inf112/isolasjonsteamet/roborally/players/PlayerImpl.java?ref=e988c5fd6643cd00cf4c3c1eb67e82651483d7d9",
    "patch": "@@ -13,6 +13,7 @@\n \tprivate final String playerName;\n \tprivate Orientation direction;\n \tprivate int life;\n+\tprivate int damageToken;\n \tprivate Coordinate pos;\n \n \t/**\n@@ -23,6 +24,7 @@ public PlayerImpl(String playerName, Coordinate pos, Orientation orientation) {\n \t\tthis.life = 5;\n \t\tthis.direction = orientation;\n \t\tthis.pos = pos;\n+\t\tthis.damageToken = 0;\n \t}\n \n \t/**\n@@ -75,4 +77,34 @@ public Orientation getDir() {\n \tpublic void setDir(Orientation dir) {\n \t\tthis.direction = dir;\n \t}\n+\n+\t@Override\n+\tpublic void damageRobot() {\n+\t\tif (++this.damageToken >= 10) {\n+\t\t\tkillRobot();\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic void repairRobot() {\n+\t\tif (damageToken == 0) {\n+\t\t\tthrow new IllegalStateException(\"Can not get negative damage tokens\");\n+\t\t} else {\n+\t\t\tthis.damageToken -= 1;\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic void killRobot() {\n+\t\tlife -= 1;\n+\t\tdamageToken = 0;\n+\t}\n+\n+\tpublic int getLife() {\n+\t\treturn life;\n+\t}\n+\n+\tpublic int getDamageTokens() {\n+\t\treturn damageToken;\n+\t}\n }"
  },
  {
    "sha": "53089f355becb5a52f60a822f73b4dd65d01f66b",
    "filename": "src/test/java/inf112/isolasjonsteamet/roborally/PlayerSpec.java",
    "status": "modified",
    "additions": 46,
    "deletions": 8,
    "changes": 54,
    "blob_url": "https://github.com/inf112-v21/IsolasjonsTeamet/blob/e988c5fd6643cd00cf4c3c1eb67e82651483d7d9/src/test/java/inf112/isolasjonsteamet/roborally/PlayerSpec.java",
    "raw_url": "https://github.com/inf112-v21/IsolasjonsTeamet/raw/e988c5fd6643cd00cf4c3c1eb67e82651483d7d9/src/test/java/inf112/isolasjonsteamet/roborally/PlayerSpec.java",
    "contents_url": "https://api.github.com/repos/inf112-v21/IsolasjonsTeamet/contents/src/test/java/inf112/isolasjonsteamet/roborally/PlayerSpec.java?ref=e988c5fd6643cd00cf4c3c1eb67e82651483d7d9",
    "patch": "@@ -1,6 +1,7 @@\n package inf112.isolasjonsteamet.roborally;\n \n import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n \n import com.google.common.collect.ImmutableList;\n import com.google.common.collect.ImmutableMap;\n@@ -32,8 +33,7 @@\n \n \t/**\n \t * Creates a new simple player for testing.\n-\t * @param coordinate\n-\t * @param orientation\n+\t *\n \t * @return PlayerImpl\n \t */\n \tprivate PlayerImpl createSimplePlayer(Coordinate coordinate, Orientation orientation) {\n@@ -46,8 +46,7 @@ private PlayerImpl createSimplePlayer() {\n \n \t/**\n \t * Method for making a new player active.\n-\t * @param coordinate\n-\t * @param orientation\n+\t *\n \t * @return player\n \t */\n \tprivate PlayerImpl createSimpleActivePlayer(Coordinate coordinate, Orientation orientation) {\n@@ -64,7 +63,6 @@ private PlayerImpl createSimpleActivePlayer() {\n \n \t/**\n \t * Method for creating a new simple board we will be running our tests on.\n-\t * @param player\n \t */\n \tprivate void createSimpleBoard(Player player) {\n \t\tvar charMap =\n@@ -84,8 +82,6 @@ private void createSimpleBoard(Player player) {\n \n \t/**\n \t * Assert current playerpos with wanted pos.\n-\t * @param player\n-\t * @param coord\n \t */\n \tprivate void assertPlayerPos(Player player, Coordinate coord) {\n \t\tassertEquals(coord, player.getPos());\n@@ -94,7 +90,6 @@ private void assertPlayerPos(Player player, Coordinate coord) {\n \n \t/**\n \t * Runs an action on our testboard.\n-\t * @param action\n \t */\n \tprivate void runAction(Action action) {\n \t\taction.perform(board, activePlayer);\n@@ -144,6 +139,49 @@ public void leapOutOfBounds() {\n \t\tassertPlayerPos(player, new Coordinate(0, 0));\n \t}\n \n+\t/**\n+\t * Test method for checking that robots can take damage\n+\t */\n+\t@Test\n+\tpublic void testDamageRobot() {\n+\t\tvar player = createSimplePlayer();\n+\t\tplayer.damageRobot();\n+\t\tassertEquals(1, player.getDamageTokens());\n+\t}\n+\n+\t/**\n+\t * Test method to check that an robot not can get negative damage tokens\n+\t */\n+\t@Test\n+\tpublic void testNotNegativeDamageToken() {\n+\t\tvar player = createSimplePlayer();\n+\t\tassertThrows(IllegalStateException.class, () -> player.repairRobot());\n+\t}\n+\n+\t/**\n+\t * Test method to check than an robot can get repaired\n+\t */\n+\t@Test\n+\tpublic void testRepairRobot() {\n+\t\tvar player = createSimplePlayer();\n+\t\tplayer.damageRobot();\n+\t\tplayer.repairRobot();\n+\t\tassertEquals(0, player.getDamageTokens());\n+\t}\n+\n+\t/**\n+\t * Test method to check if Robots gets killed when it reaches 10 damage tokens and damage tokens\n+\t */\n+\t@Test\n+\tpublic void testKillRobot() {\n+\t\tvar player = createSimplePlayer();\n+\t\tfor (int i = 0; i < 10; i++) {\n+\t\t\tplayer.damageRobot();\n+\t\t}\n+\t\tassertEquals(0, player.getDamageTokens());\n+\t\tassertEquals(4, player.getLife());\n+\t}\n+\n \t/**\n \t * Test method to check if a player facing EAST, turning around will make the player face WEST\n \t */"
  }
]
