[
  {
    "sha": "f93273d8131a2421cdb7e8dddaca62018d67ef00",
    "filename": "WORKSPACE",
    "status": "modified",
    "additions": 11,
    "deletions": 11,
    "changes": 22,
    "blob_url": "https://github.com/melG81/bazel/blob/a9dd4b27c81dd7858ecf57077098913d8a20ec4f/WORKSPACE",
    "raw_url": "https://github.com/melG81/bazel/raw/a9dd4b27c81dd7858ecf57077098913d8a20ec4f/WORKSPACE",
    "contents_url": "https://api.github.com/repos/melG81/bazel/contents/WORKSPACE?ref=a9dd4b27c81dd7858ecf57077098913d8a20ec4f",
    "patch": "@@ -129,16 +129,16 @@ distdir_tar(\n     name = \"additional_distfiles\",\n     # Keep in sync with the archives fetched as part of building bazel.\n     archives = [\n-        \"android_tools_pkg-0.19.0rc3.tar.gz\",\n+        \"android_tools_pkg-0.21.0.tar.gz\",\n     ],\n     dirname = \"derived/distdir\",\n     dist_deps = {dep: attrs for dep, attrs in DIST_DEPS.items() if \"additional_distfiles\" in attrs[\"used_in\"]},\n     sha256 = {\n-        \"android_tools_pkg-0.19.0rc3.tar.gz\": \"ea5c0589a01e2a9f43c20e5c145d3530e3b3bdbe7322789bc5da38d0ca49b837\",\n+        \"android_tools_pkg-0.21.0.tar.gz\": \"a4a17c811de5ca0df81b93ccc34e4b8494da9176bda4c85512083c2172494190\",\n     },\n     urls = {\n-        \"android_tools_pkg-0.19.0rc3.tar.gz\": [\n-            \"https://mirror.bazel.build/bazel_android_tools/android_tools_pkg-0.19.0rc3.tar.gz\",\n+        \"android_tools_pkg-0.21.0.tar.gz\": [\n+            \"https://mirror.bazel.build/bazel_android_tools/android_tools_pkg-0.21.0.tar.gz\",\n         ],\n     },\n )\n@@ -353,7 +353,7 @@ java_library(\n       \"@//third_party:junit4\",\n       \"@//third_party/protobuf:protobuf_java\",\n     ],\n-    visibility = [\"@//third_party:__pkg__\"],\n+    visibility = [\"//visibility:public\"],\n )\n \"\"\",\n     urls = [\n@@ -392,7 +392,7 @@ distdir_tar(\n         \"zulu11.37.17-ca-jdk11.0.6-macosx_x64.tar.gz\",\n         \"zulu11.45.27-ca-jdk11.0.10-macosx_aarch64.tar.gz\",\n         \"zulu11.37.17-ca-jdk11.0.6-win_x64.zip\",\n-        \"android_tools_pkg-0.19.0rc3.tar.gz\",\n+        \"android_tools_pkg-0.21.0.tar.gz\",\n     ],\n     dirname = \"test_WORKSPACE/distdir\",\n     dist_deps = {dep: attrs for dep, attrs in DIST_DEPS.items() if \"test_WORKSPACE_files\" in attrs[\"used_in\"]},\n@@ -402,16 +402,16 @@ distdir_tar(\n         \"zulu11.37.17-ca-jdk11.0.6-macosx_x64.tar.gz\": \"e1fe56769f32e2aaac95e0a8f86b5a323da5af3a3b4bba73f3086391a6cc056f\",\n         \"zulu11.45.27-ca-jdk11.0.10-macosx_aarch64.tar.gz\": \"3dcc636e64ae58b922269c2dc9f20f6f967bee90e3f6847d643c4a566f1e8d8a\",\n         \"zulu11.37.17-ca-jdk11.0.6-win_x64.zip\": \"a9695617b8374bfa171f166951214965b1d1d08f43218db9a2a780b71c665c18\",\n-        \"android_tools_pkg-0.19.0rc3.tar.gz\": \"ea5c0589a01e2a9f43c20e5c145d3530e3b3bdbe7322789bc5da38d0ca49b837\",\n+        \"android_tools_pkg-0.21.0.tar.gz\": \"a4a17c811de5ca0df81b93ccc34e4b8494da9176bda4c85512083c2172494190\",\n     },\n     urls = {\n         \"zulu11.37.17-ca-jdk11.0.6-linux_x64.tar.gz\": [\"https://mirror.bazel.build/openjdk/azul-zulu11.37.17-ca-jdk11.0.6/zulu11.37.17-ca-jdk11.0.6-linux_x64.tar.gz\"],\n         \"zulu11.37.48-ca-jdk11.0.6-linux_aarch64.tar.gz\": [\"https://mirror.bazel.build/openjdk/azul-zulu11.37.48-ca-jdk11.0.6/zulu11.37.48-ca-jdk11.0.6-linux_aarch64.tar.gz\"],\n         \"zulu11.37.17-ca-jdk11.0.6-macosx_x64.tar.gz\": [\"https://mirror.bazel.build/openjdk/azul-zulu11.37.17-ca-jdk11.0.6/zulu11.37.17-ca-jdk11.0.6-macosx_x64.tar.gz\"],\n         \"zulu11.45.27-ca-jdk11.0.10-macosx_aarch64.tar.gz\": [\"https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu11.45.27-ca-jdk11.0.10-macosx_aarch64.tar.gz\"],\n         \"zulu11.37.17-ca-jdk11.0.6-win_x64.zip\": [\"https://mirror.bazel.build/openjdk/azul-zulu11.37.17-ca-jdk11.0.6/zulu11.37.17-ca-jdk11.0.6-win_x64.zip\"],\n-        \"android_tools_pkg-0.19.0rc3.tar.gz\": [\n-            \"https://mirror.bazel.build/bazel_android_tools/android_tools_pkg-0.19.0rc3.tar.gz\",\n+        \"android_tools_pkg-0.21.0.tar.gz\": [\n+            \"https://mirror.bazel.build/bazel_android_tools/android_tools_pkg-0.21.0.tar.gz\",\n         ],\n     },\n )\n@@ -474,8 +474,8 @@ http_archive(\n     name = \"android_tools_for_testing\",\n     patch_cmds = EXPORT_WORKSPACE_IN_BUILD_FILE,\n     patch_cmds_win = EXPORT_WORKSPACE_IN_BUILD_FILE_WIN,\n-    sha256 = \"ea5c0589a01e2a9f43c20e5c145d3530e3b3bdbe7322789bc5da38d0ca49b837\",  # DO_NOT_REMOVE_THIS_ANDROID_TOOLS_UPDATE_MARKER\n-    url = \"https://mirror.bazel.build/bazel_android_tools/android_tools_pkg-0.19.0rc3.tar.gz\",\n+    sha256 = \"a4a17c811de5ca0df81b93ccc34e4b8494da9176bda4c85512083c2172494190\",  # DO_NOT_REMOVE_THIS_ANDROID_TOOLS_UPDATE_MARKER\n+    url = \"https://mirror.bazel.build/bazel_android_tools/android_tools_pkg-0.21.0.tar.gz\",\n )\n \n # Used in src/main/java/com/google/devtools/build/lib/bazel/rules/coverage.WORKSPACE."
  },
  {
    "sha": "ca66c42e8899c58ebce2f0bf5638e65de8201d4b",
    "filename": "scripts/bash_completion_test.sh",
    "status": "modified",
    "additions": 34,
    "deletions": 5,
    "changes": 39,
    "blob_url": "https://github.com/melG81/bazel/blob/a9dd4b27c81dd7858ecf57077098913d8a20ec4f/scripts/bash_completion_test.sh",
    "raw_url": "https://github.com/melG81/bazel/raw/a9dd4b27c81dd7858ecf57077098913d8a20ec4f/scripts/bash_completion_test.sh",
    "contents_url": "https://api.github.com/repos/melG81/bazel/contents/scripts/bash_completion_test.sh?ref=a9dd4b27c81dd7858ecf57077098913d8a20ec4f",
    "patch": "@@ -171,7 +171,7 @@ assert_expansion_function() {\n   local ws=${PWD}\n   local function=\"$1\" displacement=\"$2\" type=\"$3\" expected=\"$4\" current=\"$5\"\n   disable_errexit\n-  local actual_result=$(eval \"_bazel__${function} \\\"${ws}\\\" \\\"${displacement}\\\" \\\"${current}\\\" \\\"${type}\\\"\")\n+  local actual_result=$(eval \"_bazel__${function} \\\"${ws}\\\" \\\"${displacement}\\\" \\\"${current}\\\" \\\"${type}\\\"\" | sort)\n   enable_errexit\n   assert_equals \"$(echo -ne \"${expected}\")\" \"${actual_result}\"\n }\n@@ -196,7 +196,7 @@ test_expand_rules_in_package() {\n \n     # label should match test and non-test rules\n     assert_expansion_function \"expand_rules_in_package\" \"\" label \\\n-    'token_bucket_test \\ntoken_bucket_binary ' \\\n+    'token_bucket_binary \\ntoken_bucket_test ' \\\n     'video/streamer2:token_bucket_'\n     assert_expansion_function \"expand_rules_in_package\" \"\" label \\\n     'stuff ' 'video/streamer2/stuff:s'\n@@ -234,7 +234,7 @@ test_expand_rules_in_package() {\n     # with BAZEL_COMPLETION_ALLOW_TESTS_FOR_RUN set.\n     BAZEL_COMPLETION_ALLOW_TESTS_FOR_RUN=true \\\n     assert_expansion_function \"expand_rules_in_package\" \"\" label-bin \\\n-    'token_bucket_test \\ntoken_bucket_binary ' 'video/streamer2:to'\n+    'token_bucket_binary \\ntoken_bucket_test ' 'video/streamer2:to'\n \n     # Test the label-bin expands for test rules, with\n     # BAZEL_COMPLETION_ALLOW_TESTS_FOR_RUN set.\n@@ -303,7 +303,7 @@ test_expand_package_name() {\n \n     # label-package\n     assert_expansion_function \"expand_package_name\" \"\" \"label-package\" \\\n-    \"//video/streamer2/stuff/\\n//video/streamer2/stuff \" \\\n+    \"//video/streamer2/stuff \\n//video/streamer2/stuff/\" \\\n     \"//video/streamer2/stu\"\n     assert_expansion_function \"expand_package_name\" \"\" \"label-package\" \\\n     \"//video/notapackage/\" \\\n@@ -357,7 +357,7 @@ test_complete_pattern() {\n       \"//video/streamer2/stu\"\n \n   assert_expansion_function \"complete_pattern\" \"\" label-package \\\n-      \"//video/streamer2/stuff/\\n//video/streamer2/stuff \" \\\n+      \"//video/streamer2/stuff \\n//video/streamer2/stuff/\" \\\n       \"//video/streamer2/stu\"\n \n   assert_expansion_function \"complete_pattern\" \"\" command \\\n@@ -392,6 +392,19 @@ test_complete_pattern() {\n       '' 'video/streamer2:ta'\n   assert_expansion_function \"complete_pattern\" \"video/\" label \\\n       'with_special+_,=-.@~chars ' 'streamer2:with_s'\n+\n+  # Path expansion\n+  if [[ -z $PACKAGE_PATH_PREFIX ]]; then\n+      assert_expansion_function \"complete_pattern\" \"\" path \\\n+          \"video/streamer2/BUILD \\nvideo/streamer2/names/\\nvideo/streamer2/stuff/\\nvideo/streamer2/testing/\" \\\n+          \"video/streamer2/\"\n+  else\n+      # When $PACKAGE_PATH_PREFIX is set, the \"stuff\" directory will not be in\n+      # the same directory as the others, so we have to omit it.\n+      assert_expansion_function \"complete_pattern\" \"\" path \\\n+          \"video/streamer2/BUILD \\nvideo/streamer2/names/\\nvideo/streamer2/testing/\" \\\n+          \"video/streamer2/\"\n+  fi\n }\n \n #### TESTS #############################################################\n@@ -707,6 +720,22 @@ test_target_expansion_in_package() {\n                      'build :s'\n }\n \n+test_filename_expansion_after_double_dash() {\n+    make_packages\n+    assert_expansion 'run :target -- vid' \\\n+                     'run :target -- video/'\n+    assert_expansion 'run :target -- video/st' \\\n+                     'run :target -- video/streamer2/'\n+    assert_expansion 'run :target -- video/streamer2/B' \\\n+                     'run :target -- video/streamer2/BUILD '\n+    assert_expansion 'run :target -- video/streamer2/n' \\\n+                     'run :target -- video/streamer2/names/'\n+\n+    # Autocomplete arguments as well.\n+    assert_expansion 'run :target -- --arg=video/streamer2/n' \\\n+                     'run :target -- --arg=video/streamer2/names/'\n+}\n+\n test_help() {\n     # \"Test that bazel help expands subcommand names\"\n     assert_expansion 'help qu' \\"
  },
  {
    "sha": "ed870c2cd15d31fb14791b6f37520f57bb56f6cc",
    "filename": "scripts/bazel-complete-template.bash",
    "status": "modified",
    "additions": 54,
    "deletions": 35,
    "changes": 89,
    "blob_url": "https://github.com/melG81/bazel/blob/a9dd4b27c81dd7858ecf57077098913d8a20ec4f/scripts/bazel-complete-template.bash",
    "raw_url": "https://github.com/melG81/bazel/raw/a9dd4b27c81dd7858ecf57077098913d8a20ec4f/scripts/bazel-complete-template.bash",
    "contents_url": "https://api.github.com/repos/melG81/bazel/contents/scripts/bazel-complete-template.bash?ref=a9dd4b27c81dd7858ecf57077098913d8a20ec4f",
    "patch": "@@ -350,7 +350,13 @@ _bazel__complete_pattern() {\n     compgen -S \" \" -W \"${commands}\" -- \"$current\"\n         ;;\n       path)\n-        compgen -f -- \"$current\"\n+        for file in $(compgen -f -- \"$current\"); do\n+          if [[ -d \"$file\" ]]; then\n+            echo \"$file/\"\n+          else\n+            echo \"$file \"\n+          fi\n+        done\n         ;;\n       *)\n         compgen -S \" \" -W \"$type\" -- \"$current\"\n@@ -571,6 +577,15 @@ _bazel__expand_config() {\n   compgen -S \" \" -W \"$all_configs\" -- \"$cur\"\n }\n \n+_bazel__is_after_doubledash() {\n+  for word in \"${COMP_WORDS[@]:1:COMP_CWORD-1}\"; do\n+    if [[ \"$word\" == \"--\" ]]; then\n+      return 0\n+    fi\n+  done\n+  return 1\n+}\n+\n _bazel__complete_stdout() {\n   local cur=$(_bazel__get_cword) word command displacement workspace\n \n@@ -580,41 +595,45 @@ _bazel__complete_stdout() {\n   workspace=\"$(_bazel__get_workspace_path)\"\n   displacement=\"$(_bazel__get_displacement ${workspace})\"\n \n-  case \"$command\" in\n-    \"\") # Expand startup-options or commands\n-      local commands=$(echo \"${BAZEL_COMMAND_LIST}\" \\\n-        | tr \" \" \"\\n\" | \"grep\" -v \"^${BAZEL_IGNORED_COMMAND_REGEX}$\")\n-      _bazel__expand_options  \"$workspace\" \"$displacement\" \"$cur\" \\\n-          \"${commands}\\\n-          ${BAZEL_STARTUP_OPTIONS}\"\n-      ;;\n+  if _bazel__is_after_doubledash && [[ \"$command\" == \"run\" ]]; then\n+    _bazel__complete_pattern \"$workspace\" \"$displacement\" \"${cur#*=}\" \"path\"\n+  else\n+    case \"$command\" in\n+      \"\") # Expand startup-options or commands\n+        local commands=$(echo \"${BAZEL_COMMAND_LIST}\" \\\n+          | tr \" \" \"\\n\" | \"grep\" -v \"^${BAZEL_IGNORED_COMMAND_REGEX}$\")\n+        _bazel__expand_options  \"$workspace\" \"$displacement\" \"$cur\" \\\n+            \"${commands}\\\n+            ${BAZEL_STARTUP_OPTIONS}\"\n+        ;;\n \n-    *)\n-      case \"$cur\" in\n-        --config=*) # Expand options:\n-          _bazel__expand_config  \"$workspace\" \"$command\" \"${cur#\"--config=\"}\"\n-          ;;\n-        -*) # Expand options:\n-          _bazel__expand_options  \"$workspace\" \"$displacement\" \"$cur\" \\\n-              \"$(_bazel__options_for $command)\"\n-          ;;\n-        *)  # Expand target pattern\n-      expansion_pattern=\"$(_bazel__expansion_for $command)\"\n-          NON_QUOTE_REGEX=\"^[\\\"']\"\n-          if [[ $command = query && $cur =~ $NON_QUOTE_REGEX ]]; then\n-            : # Ideally we would expand query expressions---it's not\n-              # that hard, conceptually---but readline is just too\n-              # damn complex when it comes to quotation.  Instead,\n-              # for query, we just expand target patterns, unless\n-              # the first char is a quote.\n-          elif [ -n \"$expansion_pattern\" ]; then\n-            _bazel__complete_pattern \\\n-        \"$workspace\" \"$displacement\" \"$cur\" \"$expansion_pattern\"\n-          fi\n-          ;;\n-      esac\n-      ;;\n-  esac\n+      *)\n+        case \"$cur\" in\n+          --config=*) # Expand options:\n+            _bazel__expand_config  \"$workspace\" \"$command\" \"${cur#\"--config=\"}\"\n+            ;;\n+          -*) # Expand options:\n+            _bazel__expand_options  \"$workspace\" \"$displacement\" \"$cur\" \\\n+                \"$(_bazel__options_for $command)\"\n+            ;;\n+          *)  # Expand target pattern\n+        expansion_pattern=\"$(_bazel__expansion_for $command)\"\n+            NON_QUOTE_REGEX=\"^[\\\"']\"\n+            if [[ $command = query && $cur =~ $NON_QUOTE_REGEX ]]; then\n+              : # Ideally we would expand query expressions---it's not\n+                # that hard, conceptually---but readline is just too\n+                # damn complex when it comes to quotation.  Instead,\n+                # for query, we just expand target patterns, unless\n+                # the first char is a quote.\n+            elif [ -n \"$expansion_pattern\" ]; then\n+              _bazel__complete_pattern \\\n+          \"$workspace\" \"$displacement\" \"$cur\" \"$expansion_pattern\"\n+            fi\n+            ;;\n+        esac\n+        ;;\n+    esac\n+  fi\n }\n \n _bazel__to_compreply() {"
  },
  {
    "sha": "e439d19eb5ee0685bcf27561a2c0dcb1d702fbfb",
    "filename": "site/_includes/documentation-sidebar/master/sidebar.html",
    "status": "modified",
    "additions": 3,
    "deletions": 2,
    "changes": 5,
    "blob_url": "https://github.com/melG81/bazel/blob/a9dd4b27c81dd7858ecf57077098913d8a20ec4f/site/_includes/documentation-sidebar/master/sidebar.html",
    "raw_url": "https://github.com/melG81/bazel/raw/a9dd4b27c81dd7858ecf57077098913d8a20ec4f/site/_includes/documentation-sidebar/master/sidebar.html",
    "contents_url": "https://api.github.com/repos/melG81/bazel/contents/site/_includes/documentation-sidebar/master/sidebar.html?ref=a9dd4b27c81dd7858ecf57077098913d8a20ec4f",
    "patch": "@@ -11,9 +11,9 @@ <h3>Guides</h3>\n <h3>Query for Dependencies</h3>\n   <ul class=\"sidebar-nav\">\n     <li><a href=\"/versions/{{ current_version }}/query-how-to.html\">Query Quickstart</a></li>\n-    <li><a href=\"/versions/{{ current_version }}/cquery.html\">Query Build Options</a></li>\n-    <li><a href=\"/versions/{{ current_version }}/aquery.html\">Query Action Graph</a></li>\n     <li><a href=\"/versions/{{ current_version }}/query.html\">Query Reference</a></li>\n+    <li><a href=\"/versions/{{ current_version }}/cquery.html\">Query Configured Targets Reference</a></li>\n+    <li><a href=\"/versions/{{ current_version }}/aquery.html\">Query Action Graph Reference</a></li>\n   </ul>\n \n <h3>Remote execution</h3>\n@@ -77,6 +77,7 @@ <h3>Reference</h3>\n      <ul class=\"collapse sidebar-nav sidebar-submenu\" id=\"bep-menu\">\n          <li><a href=\"/versions/{{ current_version }}/build-event-protocol.html\">Overview</a></li>\n          <li><a href=\"/versions/{{ current_version }}/bep-examples.html\">BEP examples</a></li>\n+         <li><a href=\"/versions/{{ current_version }}/bep-glossary.html\">BEP glossary</a></li>\n      </ul>\n  </li>\n  <li><a href=\"/versions/{{ current_version }}/output_directories.html\">Output Directory Layout</a></li>"
  },
  {
    "sha": "5130b91eff839c7d07b1c9c3c250c9c08e502158",
    "filename": "site/docs/bep-examples.md",
    "status": "modified",
    "additions": 151,
    "deletions": 0,
    "changes": 151,
    "blob_url": "https://github.com/melG81/bazel/blob/a9dd4b27c81dd7858ecf57077098913d8a20ec4f/site/docs/bep-examples.md",
    "raw_url": "https://github.com/melG81/bazel/raw/a9dd4b27c81dd7858ecf57077098913d8a20ec4f/site/docs/bep-examples.md",
    "contents_url": "https://api.github.com/repos/melG81/bazel/contents/site/docs/bep-examples.md?ref=a9dd4b27c81dd7858ecf57077098913d8a20ec4f",
    "patch": "@@ -95,3 +95,154 @@ built.\n   }\n }\n ```\n+\n+## Aspect Results in BEP\n+\n+Ordinary builds evaluate actions associated with `(target, configuration)`\n+pairs. When building with [aspects](skylark/aspects.html) enabled, Bazel\n+additionally evaluates targets associated with `(target, configuration,\n+aspect)` triples, for each target affected by a given enabled aspect.\n+\n+Evaluation results for aspects are available in BEP despite the absence of\n+aspect-specific event types. For each `(target, configuration)` pair with an\n+applicable aspect, Bazel publishes an additional `TargetConfigured` and\n+`TargetComplete` event bearing the result from applying the aspect to the\n+target. For example, if `//:foo_lib` is built with\n+`--aspects=aspects/myaspect.bzl%custom_aspect`, this event would also appear in\n+the BEP:\n+\n+```json\n+{\n+  \"id\": {\n+    \"targetCompleted\": {\n+      \"label\": \"//:foo_lib\",\n+      \"configuration\": {\n+        \"id\": \"544e39a7f0abdb3efdd29d675a48bc6a\"\n+      },\n+      \"aspect\": \"aspects/myaspect.bzl%custom_aspect\"\n+    }\n+  },\n+  \"completed\": {\n+    \"success\": true,\n+    \"outputGroup\": [{\n+      \"name\": \"default\",\n+      \"fileSets\": [{\n+        \"id\": \"1\"\n+      }]\n+    }]\n+  }\n+}\n+```\n+\n+Note that the only difference between the IDs is the presence of the `aspect`\n+field. A tool that does not check the `aspect` ID field and accumulates output\n+files by target may conflate target outputs with aspect outputs.\n+\n+## Consuming `NamedSetOfFiles`\n+\n+Determining the artifacts produced by a given target (or aspect) is a common\n+BEP use-case that can be done efficiently with some preparation. This section\n+discusses the recursive, shared structure offered by the `NamedSetOfFiles`\n+event, which matches the structure of a Starlark [Depset](skylark/depsets.html).\n+Consumers must take care to avoid quadratic algorithms when processing\n+`NamedSetOfFiles` events because large builds can contain tens of thousands of\n+such events, requiring hundreds of millions operations in a traversal with\n+quadratic complexity.\n+\n+A `NamedSetOfFiles` event always appears in the BEP stream *before* a\n+`TargetComplete` or `NamedSetOfFiles` event that references it. This is the\n+inverse of the \"parent-child\" event relationship, where all but the first event\n+appears after at least one event announcing it. A `NamedSetOfFiles` event is\n+announced by a `Progress` event with no semantics.\n+\n+Given these ordering and sharing constraints, a typical consumer must buffer all\n+`NamedSetOfFiles` events until the BEP stream is exhausted. The following JSON\n+event stream and Python code demonstrate how to populate a map from\n+target/aspect to built artifacts in the \"default\" output group, and how to\n+process the outputs for a subset of built targets/aspects:\n+\n+<p>\n+  <button class=\"btn btn-primary\" type=\"button\" data-toggle=\"collapse\"\n+      data-target=\"#collapseNamedSetJson\" aria-expanded=\"false\"\n+      aria-controls=\"collapseNamedSetJson\">\n+    Show/Hide BEP JSON\n+  </button>\n+</p>\n+\n+```json\n+{\n+  \"id\": { \"namedSet\": { \"id\": \"3\" } },\n+  \"namedSetOfFiles\": {\n+    \"files\": [ { \"name\": \"examples/py/beplib.py\", \"uri\": \"file:///tmp/bazel/examples/py/beplib.py\" } ]\n+  }\n+}\n+{\n+  \"id\": { \"namedSet\": { \"id\": \"2\" } },\n+  \"namedSetOfFiles\": { \"fileSets\": [ { \"id\": \"3\" } ] }\n+}\n+{\n+  \"id\": { \"namedSet\": { \"id\": \"1\" } },\n+  \"namedSetOfFiles\": {\n+    \"files\": [ { \"name\": \"examples/py/util.py\", \"uri\": \"file:///tmp/bazel/examples/py/util.py\" } ],\n+    \"fileSets\": [ { \"id\": \"3\" } ]\n+  }\n+}\n+{\n+  \"id\": { \"namedSet\": { \"id\": \"0\" } },\n+  \"namedSetOfFiles\": {\n+    \"files\": [\n+      { \"name\": \"examples/py/bep.py\", \"uri\": \"file:///tmp/bazel/examples/py/bep.py\" },\n+      {\n+        \"name\": \"examples/py/bep\",\n+        \"uri\": \"file:///tmp/.cache/bazel/_bazel_foo/a61fd0fbee3f9d6c1e30d54b68655d35/execroot/io_bazel/bazel-out/k8-fastbuild/bin/examples/py/bep\",\n+        \"pathPrefix\": [\"bazel-out\", \"k8-fastbuild\", \"bin\"]\n+      }\n+    ],\n+    \"fileSets\": [ { \"id\": \"1\" }, { \"id\": \"2\" } ]\n+  }\n+}\n+{\n+  \"id\": {\n+    \"targetCompleted\": {\n+      \"label\": \"//examples/py:bep\",\n+      \"configuration\": {\n+        \"id\": \"a5d130b0966b4a9ca2d32725aa5baf40e215bcfc4d5cdcdc60f5cc5b4918903b\"\n+      }\n+    }\n+  },\n+  \"completed\": {\n+    \"success\": true,\n+    \"outputGroup\": [ { \"name\": \"default\", \"fileSets\": [ { \"id\": \"0\" } ] } ]\n+  }\n+}\n+```\n+{: .collapse #collapseNamedSetJson}\n+\n+```python\n+named_sets = {}  # type: dict[str, NamedSetOfFiles]\n+outputs = {}     # type: dict[str, dict[str, set[str]]]\n+\n+for event in stream:\n+  kind = event.id.WhichOneof(\"id\")\n+  if kind == \"named_set\":\n+    named_sets[event.id.named_set.id] = event.named_set_of_files\n+  elif kind == \"target_completed\":\n+    tc = event.id.target_completed\n+    target_id = (tc.label, tc.configuration.id, tc.aspect)\n+    outputs[target_id] = {}\n+    for group in event.completed.output_group:\n+      outputs[target_id][group.name] = {fs.id for fs in group.file_sets}\n+\n+for result_id in relevant_subset(outputs.keys()):\n+  visit = outputs[result_id].get(\"default\", [])\n+  seen_sets = set(visit)\n+  while visit:\n+    set_name = visit.pop()\n+    s = named_sets[set_name]\n+    for f in s.files:\n+      process_file(result_id, f)\n+    for fs in s.file_sets:\n+      if fs.id not in seen_sets:\n+        visit.add(fs.id)\n+        seen_sets.add(fs.id)\n+```"
  },
  {
    "sha": "5709ecd568c94162d71b384a6d237ec3a37f0496",
    "filename": "site/docs/bep-glossary.md",
    "status": "added",
    "additions": 472,
    "deletions": 0,
    "changes": 472,
    "blob_url": "https://github.com/melG81/bazel/blob/a9dd4b27c81dd7858ecf57077098913d8a20ec4f/site/docs/bep-glossary.md",
    "raw_url": "https://github.com/melG81/bazel/raw/a9dd4b27c81dd7858ecf57077098913d8a20ec4f/site/docs/bep-glossary.md",
    "contents_url": "https://api.github.com/repos/melG81/bazel/contents/site/docs/bep-glossary.md?ref=a9dd4b27c81dd7858ecf57077098913d8a20ec4f",
    "patch": "@@ -0,0 +1,472 @@\n+---\n+layout: documentation\n+title: Build Event Protocol Glossary\n+---\n+\n+# Build Event Protocol Glossary\n+\n+Each BEP event type has its own semantics, minimally documented in\n+[build\\_event\\_stream.proto](https://github.com/bazelbuild/bazel/blob/master/src/main/java/com/google/devtools/build/lib/buildeventstream/proto/build_event_stream.proto).\n+The following glossary provides additional reference documentation for each\n+event type.\n+\n+## Aborted\n+\n+Unlike other events, `Aborted` does not have a corresponding ID type, because\n+the `Aborted` event *replaces* events of other types. This event indicates that\n+the build terminated early and the event ID it appears under was not produced\n+normally. `Aborted` contains an enum and human-friendly description to explain\n+why the build did not complete.\n+\n+For example, if a build is evaluating a target when the user interrupts Bazel,\n+BEP contains an event like the following:\n+\n+<p>\n+  <button class=\"btn btn-primary\" type=\"button\" data-toggle=\"collapse\"\n+      data-target=\"#collapseAbortedJson\" aria-expanded=\"false\"\n+      aria-controls=\"collapseAbortedJson\">\n+    Show/Hide BEP JSON\n+  </button>\n+</p>\n+\n+```json\n+{\n+  \"id\": {\n+    \"targetCompleted\": {\n+      \"label\": \"//:foo\",\n+      \"configuration\": {\n+        \"id\": \"544e39a7f0abdb3efdd29d675a48bc6a\"\n+      }\n+    }\n+  },\n+  \"aborted\": {\n+    \"reason\": \"USER_INTERRUPTED\"\n+  }\n+}\n+```\n+{: .collapse #collapseAbortedJson}\n+\n+## ActionExecuted\n+\n+Provides details about the execution of a specific\n+[Action](skylark/lib/actions.html) in a build. By default, this event is\n+included in the BEP only for failed actions, to support identifying the root cause\n+of build failures. Users may set the `--build_event_publish_all_actions` flag\n+to include all `ActionExecuted` events.\n+\n+## BuildFinished\n+\n+A single `BuildFinished` event is sent after the command is complete and\n+includes the exit code for the command. This event provides authoritative\n+success/failure information.\n+\n+## BuildMetadata\n+\n+Contains the parsed contents of the `--build_metadata` flag. This event exists\n+to support Bazel integration with other tooling by plumbing external data (e.g.\n+identifiers).\n+\n+## BuildMetrics\n+\n+A single `BuildMetrics` event is sent at the end of every command and includes\n+counters/gauges useful for quantifying the build tool's behavior during the\n+command. These metrics indicate work actually done and does not count cached\n+work that is reused.\n+\n+Note that `memory_metrics` may not be populated if there was no Java garbage\n+collection during the command's execution. Users may set the\n+`--bep_publish_used_heap_size_post_build` option which forces the garbage\n+collector to run at the end of the command to populate `memory_metrics`.\n+\n+<p>\n+  <button class=\"btn btn-primary\" type=\"button\" data-toggle=\"collapse\"\n+      data-target=\"#collapseBuildMetricsJson\" aria-expanded=\"false\"\n+      aria-controls=\"collapseBuildMetricsJson\">\n+    Show/Hide BEP JSON\n+  </button>\n+</p>\n+\n+```json\n+{\n+  \"id\": {\n+    \"buildMetrics\": {}\n+  },\n+  \"buildMetrics\": {\n+    \"actionSummary\": {\n+      \"actionsExecuted\": \"1\"\n+    },\n+    \"memoryMetrics\": {},\n+    \"targetMetrics\": {\n+      \"targetsLoaded\": \"9\",\n+      \"targetsConfigured\": \"19\"\n+    },\n+    \"packageMetrics\": {\n+      \"packagesLoaded\": \"5\"\n+    },\n+    \"timingMetrics\": {\n+      \"cpuTimeInMs\": \"1590\",\n+      \"wallTimeInMs\": \"359\"\n+    }\n+  }\n+}\n+```\n+{: .collapse #collapseBuildMetricsJson}\n+\n+## BuildStarted\n+\n+The first event in a BEP stream, `BuildStarted` includes metadata describing the\n+command before any meaningful work begins.\n+\n+## BuildToolLogs\n+\n+A single `BuildToolLogs` event is sent at the end of a command, including URIs\n+of files generated by the build tool that may aid in understanding or debugging\n+build tool behavior. Some information may be included inline.\n+\n+<p>\n+  <button class=\"btn btn-primary\" type=\"button\" data-toggle=\"collapse\"\n+      data-target=\"#collapseBuildToolLogsJson\" aria-expanded=\"false\"\n+      aria-controls=\"collapseBuildToolLogsJson\">\n+    Show/Hide BEP JSON\n+  </button>\n+</p>\n+\n+```json\n+{\n+  \"id\": {\n+    \"buildToolLogs\": {}\n+  },\n+  \"lastMessage\": true,\n+  \"buildToolLogs\": {\n+    \"log\": [\n+      {\n+        \"name\": \"elapsed time\",\n+        \"contents\": \"MC4xMjEwMDA=\"\n+      },\n+      {\n+        \"name\": \"process stats\",\n+        \"contents\": \"MSBwcm9jZXNzOiAxIGludGVybmFsLg==\"\n+      },\n+      {\n+        \"name\": \"command.profile.gz\",\n+        \"uri\": \"file:///tmp/.cache/bazel/_bazel_foo/cde87985ad0bfef34eacae575224b8d1/command.profile.gz\"\n+      }\n+    ]\n+  }\n+}\n+```\n+{: .collapse #collapseBuildToolLogsJson}\n+\n+## CommandLine\n+\n+The BEP contains multiple `CommandLine` events containing representations of all\n+command-line arguments (including options and uninterpreted arguments).\n+Each `CommandLine` event has a label in its `StructuredCommandLineId` that\n+indicates which representation it conveys; three such events appear in the BEP:\n+\n+* `\"original\"`: Reconstructed commandline as Bazel received it from the Bazel\n+  client, without startup options sourced from .rc files.\n+* `\"canonical\"`: The effective commandline with .rc files expanded and\n+  invocation policy applied.\n+* `\"tool\"`: Populated from the `--experimental_tool_command_line` option. This\n+  is useful to convey the command-line of a tool wrapping Bazel through the BEP.\n+  This could be a base64-encoded `CommandLine` binary protocol buffer messsage\n+  which is used directly, or a string which is parsed but not interpreted (as\n+  the tool's options may differ from Bazel's).\n+\n+## Configuration\n+\n+A `Configuration` event is sent for every [`configuration`](skylark/config.html)\n+used in the top-level targets in a build. At least one configuration event is\n+always be present. The `id` is reused by the `TargetConfigured` and\n+`TargetComplete` event IDs and is necessary to disambiguate those events in\n+multi-configuration builds.\n+\n+<p>\n+  <button class=\"btn btn-primary\" type=\"button\" data-toggle=\"collapse\"\n+      data-target=\"#collapseConfigurationJson\" aria-expanded=\"false\"\n+      aria-controls=\"collapseConfigurationJson\">\n+    Show/Hide BEP JSON\n+  </button>\n+</p>\n+\n+```json\n+{\n+  \"id\": {\n+    \"configuration\": {\n+      \"id\": \"a5d130b0966b4a9ca2d32725aa5baf40e215bcfc4d5cdcdc60f5cc5b4918903b\"\n+    }\n+  },\n+  \"configuration\": {\n+    \"mnemonic\": \"k8-fastbuild\",\n+    \"platformName\": \"k8\",\n+    \"cpu\": \"k8\",\n+    \"makeVariable\": {\n+      \"COMPILATION_MODE\": \"fastbuild\",\n+      \"TARGET_CPU\": \"k8\",\n+      \"GENDIR\": \"bazel-out/k8-fastbuild/bin\",\n+      \"BINDIR\": \"bazel-out/k8-fastbuild/bin\"\n+    }\n+  }\n+}\n+```\n+{: .collapse #collapseConfigurationJson}\n+\n+## ConvenienceSymlinksIdentified\n+\n+**Experimental.** If the `--experimental_convenience_symlinks_bep_event`\n+option is set, a single `ConvenienceSymlinksIdentified` event is produced by\n+`build` commands to indicate how symlinks in the workspace should be managed.\n+This enables building tools that invoke Bazel remotely then arrange the local\n+workspace as if Bazel had been run locally.\n+\n+<p>\n+  <button class=\"btn btn-primary\" type=\"button\" data-toggle=\"collapse\"\n+      data-target=\"#collapseConvenienceSymlinksIdentifiedJson\"\n+      aria-expanded=\"false\"\n+      aria-controls=\"collapseConvenienceSymlinksIdentifiedJson\">\n+    Show/Hide BEP JSON\n+  </button>\n+</p>\n+\n+```json\n+{\n+  \"id\": {\n+    \"convenienceSymlinksIdentified\":{}\n+  },\n+  \"convenienceSymlinksIdentified\": {\n+    \"convenienceSymlinks\": [\n+      {\n+        \"path\": \"bazel-bin\",\n+        \"action\": \"CREATE\",\n+        \"target\": \"execroot/google3/bazel-out/k8-fastbuild/bin\"\n+      },\n+      {\n+        \"path\": \"bazel-genfiles\",\n+        \"action\": \"CREATE\",\n+        \"target\": \"execroot/google3/bazel-out/k8-fastbuild/genfiles\"\n+      },\n+      {\n+        \"path\": \"bazel-out\",\n+        \"action\": \"CREATE\",\n+        \"target\": \"execroot/google3/bazel-out\"\n+      }\n+    ]\n+  }\n+}\n+```\n+{: .collapse #collapseConvenienceSymlinksIdentifiedJson}\n+\n+## Fetch\n+\n+Indicates that a Fetch operation occurred as a part of the command execution.\n+Unlike other events, if a cached fetch result is re-used, this event does not\n+appear in the BEP stream.\n+\n+## NamedSetOfFiles\n+\n+`NamedSetOfFiles` events report a structure matching a\n+[`depset`](skylark/depsets.html) of files produced during command evaluation.\n+Transitively included depsets are identified by `NamedSetOfFilesId`.\n+\n+For more information on interpreting a stream's `NamedSetOfFiles` events, see the\n+[BEP examples page](bep-examples.html#consuming-namedsetoffiles).\n+\n+## OptionsParsed\n+\n+A single `OptionsParsed` event lists all options applied to the command,\n+separating startup options from command options. It also includes the\n+[InvocationPolicy](command-line-reference.html#flag--invocation_policy), if any.\n+\n+<p>\n+  <button class=\"btn btn-primary\" type=\"button\" data-toggle=\"collapse\"\n+      data-target=\"#collapseOptionsParsedJson\" aria-expanded=\"false\"\n+      aria-controls=\"collapseOptionsParsedJson\">\n+    Show/Hide BEP JSON\n+  </button>\n+</p>\n+\n+```json\n+{\n+  \"id\": {\n+    \"optionsParsed\": {}\n+  },\n+  \"optionsParsed\": {\n+    \"startupOptions\": [\n+      \"--max_idle_secs=10800\",\n+      \"--noshutdown_on_low_sys_mem\",\n+      \"--connect_timeout_secs=30\",\n+      \"--output_user_root=/tmp/.cache/bazel/_bazel_foo\",\n+      \"--output_base=/tmp/.cache/bazel/_bazel_foo/a61fd0fbee3f9d6c1e30d54b68655d35\",\n+      \"--deep_execroot\",\n+      \"--expand_configs_in_place\",\n+      \"--idle_server_tasks\",\n+      \"--write_command_log\",\n+      \"--nowatchfs\",\n+      \"--nofatal_event_bus_exceptions\",\n+      \"--nowindows_enable_symlinks\",\n+      \"--noclient_debug\",\n+      \"--noincompatible_enable_execution_transition\"\n+    ],\n+    \"cmdLine\": [\n+      \"--enable_platform_specific_config\",\n+      \"--build_event_json_file=/tmp/bep.json\"\n+    ],\n+    \"explicitCmdLine\": [\n+      \"--build_event_json_file=/tmp/bep.json\"\n+    ],\n+    \"invocationPolicy\": {}\n+  }\n+}\n+```\n+{: .collapse #collapseOptionsParsedJson}\n+\n+## PatternExpanded\n+\n+`PatternExpanded` events indicate the set of all targets that match the patterns\n+supplied on the commandline. For successful commands, a single event is present\n+with all patterns in the `PatternExpandedId` and all targets in the\n+`PatternExpanded` event. For each pattern that fails to resolve, BEP contains\n+an additional [`Aborted`](#aborted) event with a `PatternExpandedId` identifying\n+the pattern.\n+\n+## Progress\n+\n+Progress events contain the standard output and standard error produced by Bazel\n+during command execution. These events are also auto-generated as needed to\n+announce events that have not been announced by a logical \"parent\" event (in\n+particular, [NamedSetOfFiles](#namedsetoffiles).)\n+\n+## TargetComplete\n+\n+For each `(target, configuration, aspect)` combination that completes the\n+execution phase, a `TargetComplete` event is included in BEP. The event contains\n+the target's success/failure and the target's requested output groups.\n+\n+<p>\n+  <button class=\"btn btn-primary\" type=\"button\" data-toggle=\"collapse\"\n+      data-target=\"#collapseTargetCompleteJson\" aria-expanded=\"false\"\n+      aria-controls=\"collapseTargetCompleteJson\">\n+    Show/Hide BEP JSON\n+  </button>\n+</p>\n+\n+```json\n+{\n+  \"id\": {\n+    \"targetCompleted\": {\n+      \"label\": \"//examples/py:bep\",\n+      \"configuration\": {\n+        \"id\": \"a5d130b0966b4a9ca2d32725aa5baf40e215bcfc4d5cdcdc60f5cc5b4918903b\"\n+      }\n+    }\n+  },\n+  \"completed\": {\n+    \"success\": true,\n+    \"outputGroup\": [\n+      {\n+        \"name\": \"default\",\n+        \"fileSets\": [\n+          {\n+            \"id\": \"0\"\n+          }\n+        ]\n+      }\n+    ]\n+  }\n+}\n+```\n+{: .collapse #collapseTargetCompleteJson}\n+\n+## TargetConfigured\n+\n+For each Target that completes the analysis phase, a `TargetConfigured` event is\n+included in BEP. This is the authoritative source for a target's \"rule kind\"\n+attribute. The configuration(s) applied to the target appear in the announced\n+*children* of the event.\n+\n+For example, building with the `--experimental_multi_cpu` options may produce\n+the following `TargetConfigured` event for a single target with two\n+configurations:\n+\n+<p>\n+  <button class=\"btn btn-primary\" type=\"button\" data-toggle=\"collapse\"\n+      data-target=\"#collapseTargetConfiguredJson\" aria-expanded=\"false\"\n+      aria-controls=\"collapseTargetConfiguredJson\">\n+    Show/Hide BEP JSON\n+  </button>\n+</p>\n+\n+```json\n+{\n+  \"id\": {\n+    \"targetConfigured\": {\n+      \"label\": \"//starlark_configurations/multi_arch_binary:foo\"\n+    }\n+  },\n+  \"children\": [\n+    {\n+      \"targetCompleted\": {\n+        \"label\": \"//starlark_configurations/multi_arch_binary:foo\",\n+        \"configuration\": {\n+          \"id\": \"c62b30c8ab7b9fc51a05848af9276529842a11a7655c71327ade26d7c894c818\"\n+        }\n+      }\n+    },\n+    {\n+      \"targetCompleted\": {\n+        \"label\": \"//starlark_configurations/multi_arch_binary:foo\",\n+        \"configuration\": {\n+          \"id\": \"eae0379b65abce68d54e0924c0ebcbf3d3df26c6e84ef7b2be51e8dc5b513c99\"\n+        }\n+      }\n+    }\n+  ],\n+  \"configured\": {\n+    \"targetKind\": \"foo_binary rule\"\n+  }\n+}\n+```\n+{: .collapse #collapseTargetConfiguredJson}\n+\n+## TargetSummary\n+\n+For each `(target, configuration)` pair that is executed, a `TargetSummary`\n+event is included with an aggregate success result encompassing the configured\n+target's execution and all aspects applied to that configured target.\n+\n+## TestResult\n+\n+If testing is requested, a `TestResult` event is sent for each test attempt,\n+shard, and run per test. This allows BEP consumers to identify precisely which\n+test actions failed their tests and identify the test outputs (e.g. logs,\n+test.xml files) for each test action.\n+\n+## TestSummary\n+\n+If testing is requested, a `TestSummary` event is sent for each test `(target,\n+configuration)`, containing information necessary to interpret the test's\n+results. The number of attempts, shards and runs per test are included to enable\n+BEP consumers to differentiate artifacts across these dimensions.  The attempts\n+and runs per test are considered while producing the aggregate `TestStatus` to\n+differentiate `FLAKY` tests from `FAILED` tests.\n+\n+## UnstructuredCommandLine\n+\n+Unlike [CommandLine](#commandline), this event carries the unparsed commandline\n+flags in string form as encountered by the build tool after expanding all\n+[`.bazelrc`](guide.html#bazelrc-the-bazel-configuration-file) files and\n+considering the `--config` flag.\n+\n+The `UnstructuredCommandLine` event may be relied upon to precisely reproduce a\n+given command execution.\n+\n+## WorkspaceConfig\n+\n+A single `WorkspaceConfig` event contains configuration information regarding the\n+workspace, such as the execution root.\n+\n+## WorkspaceStatus\n+\n+A single `WorkspaceStatus` event contains the result of the [workspace status\n+command](user-manual.html#workspace_status)."
  },
  {
    "sha": "07b5fb2094f58f97de5013c8e0e6730f168954f3",
    "filename": "site/docs/configurable-attributes.md",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/melG81/bazel/blob/a9dd4b27c81dd7858ecf57077098913d8a20ec4f/site/docs/configurable-attributes.md",
    "raw_url": "https://github.com/melG81/bazel/raw/a9dd4b27c81dd7858ecf57077098913d8a20ec4f/site/docs/configurable-attributes.md",
    "contents_url": "https://api.github.com/repos/melG81/bazel/contents/site/docs/configurable-attributes.md?ref=a9dd4b27c81dd7858ecf57077098913d8a20ec4f",
    "patch": "@@ -640,7 +640,7 @@ flags aren't evaluated until later in the build (in the\n [analysis phase](https://docs.bazel.build/versions/master/glossary.html#analysis-phase)).\n So it can't determine which `select()` branches are chosen.\n \n-Bazel [`cquery`](cquery.html) opeates after Bazel's analysis phase, so it has\n+Bazel [`cquery`](cquery.html) operates after Bazel's analysis phase, so it has\n all this information and can accurately resolve `select()`s.\n \n Consider:"
  },
  {
    "sha": "61c3f8b9afad1806116824e1ba00673f66926671",
    "filename": "site/docs/install-ubuntu.md",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/melG81/bazel/blob/a9dd4b27c81dd7858ecf57077098913d8a20ec4f/site/docs/install-ubuntu.md",
    "raw_url": "https://github.com/melG81/bazel/raw/a9dd4b27c81dd7858ecf57077098913d8a20ec4f/site/docs/install-ubuntu.md",
    "contents_url": "https://api.github.com/repos/melG81/bazel/contents/site/docs/install-ubuntu.md?ref=a9dd4b27c81dd7858ecf57077098913d8a20ec4f",
    "patch": "@@ -41,7 +41,7 @@ Bazel comes with two completion scripts. After installing Bazel, you can:\n **Note:** This is a one-time setup step.\n \n ```bash\n-sudo apt install curl gnupg\n+sudo apt install apt-transport-https curl gnupg\n curl -fsSL https://bazel.build/bazel-release.pub.gpg | gpg --dearmor > bazel.gpg\n sudo mv bazel.gpg /etc/apt/trusted.gpg.d/\n echo \"deb [arch=amd64] https://storage.googleapis.com/bazel-apt stable jdk1.8\" | sudo tee /etc/apt/sources.list.d/bazel.list"
  },
  {
    "sha": "3608a24ea6e95027482951d0fe3032940a77d62e",
    "filename": "site/docs/skylark/config.md",
    "status": "modified",
    "additions": 9,
    "deletions": 7,
    "changes": 16,
    "blob_url": "https://github.com/melG81/bazel/blob/a9dd4b27c81dd7858ecf57077098913d8a20ec4f/site/docs/skylark/config.md",
    "raw_url": "https://github.com/melG81/bazel/raw/a9dd4b27c81dd7858ecf57077098913d8a20ec4f/site/docs/skylark/config.md",
    "contents_url": "https://api.github.com/repos/melG81/bazel/contents/site/docs/skylark/config.md?ref=a9dd4b27c81dd7858ecf57077098913d8a20ec4f",
    "patch": "@@ -665,13 +665,7 @@ Access to the value of a single branch of a 1:2+\n Many native flags today, like `--cpu` and `--crosstool_top` are related to\n toolchain resolution. In the future, explicit transitions on these types of\n flags will likely be replaced by transitioning on the\n-[target platform](../platforms.html)\n-\n-## Also see\n-\n- * [Starlark Build Configuration](https://docs.google.com/document/d/1vc8v-kXjvgZOdQdnxPTaV0rrLxtP2XwnD2tAZlYJOqw/edit?usp=sharing)\n- * [Bazel Configurability Roadmap](https://bazel.build/roadmaps/configuration.html)\n- * Full [set](https://github.com/bazelbuild/examples/tree/master/rules/starlark_configurations) of end to end examples\n+[target platform](../platforms.html).\n \n ## Memory and performance considerations\n \n@@ -724,3 +718,11 @@ This makes the build graph exponentially larger than the target graph, with\n corresponding memory and performance consequences.\n \n TODO: Add strategies for measurement and mitigation of these issues.\n+\n+## Further reading\n+\n+For more details on modifying build configurations, see:\n+\n+ * [Starlark Build Configuration](https://docs.google.com/document/d/1vc8v-kXjvgZOdQdnxPTaV0rrLxtP2XwnD2tAZlYJOqw/edit?usp=sharing)\n+ * [Bazel Configurability Roadmap](https://bazel.build/roadmaps/configuration.html)\n+ * Full [set](https://github.com/bazelbuild/examples/tree/master/rules/starlark_configurations) of end to end examples"
  },
  {
    "sha": "4557b6bff77eeb644b336b007079273d52ec0ef1",
    "filename": "src/main/java/com/google/devtools/build/docgen/templates/attributes/common/target_compatible_with.html",
    "status": "modified",
    "additions": 10,
    "deletions": 3,
    "changes": 13,
    "blob_url": "https://github.com/melG81/bazel/blob/a9dd4b27c81dd7858ecf57077098913d8a20ec4f/src/main/java/com/google/devtools/build/docgen/templates/attributes/common/target_compatible_with.html",
    "raw_url": "https://github.com/melG81/bazel/raw/a9dd4b27c81dd7858ecf57077098913d8a20ec4f/src/main/java/com/google/devtools/build/docgen/templates/attributes/common/target_compatible_with.html",
    "contents_url": "https://api.github.com/repos/melG81/bazel/contents/src/main/java/com/google/devtools/build/docgen/templates/attributes/common/target_compatible_with.html?ref=a9dd4b27c81dd7858ecf57077098913d8a20ec4f",
    "patch": "@@ -10,9 +10,9 @@\n rule type. If the target platform does not satisfy all listed constraints then\n the target is considered <em>incompatible</em>. Incompatible targets are\n skipped for building and testing when the target pattern is expanded\n-(e.g. `//...`, `:all`). When explicitly specified on the command line,\n-incompatible targets cause Bazel to print an error and cause a build or test\n-failure.\n+(e.g. <code>//...</code>, <code>:all</code>). When explicitly specified on the\n+command line, incompatible targets cause Bazel to print an error and cause a\n+build or test failure.\n </p>\n \n <p>\n@@ -25,6 +25,13 @@\n with all platforms.\n <p>\n \n+<p>\n+All rules other than [Workspace Rules](workspace.html) support this attribute.\n+For some rules this attribute has no effect. For example, specifying\n+<code>target_compatible_with</code> for a\n+<code><a href=\"c-cpp.html#cc_toolchain\">cc_toolchain</a></code> is not useful.\n+<p>\n+\n <p>\n See the\n <a href=\"../platforms.html#skipping-incompatible-targets\">Platforms</a>"
  },
  {
    "sha": "4ad6a725403be0952a981c830ca7d34280d3315d",
    "filename": "src/main/java/com/google/devtools/build/lib/BUILD",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/melG81/bazel/blob/a9dd4b27c81dd7858ecf57077098913d8a20ec4f/src/main/java/com/google/devtools/build/lib/BUILD",
    "raw_url": "https://github.com/melG81/bazel/raw/a9dd4b27c81dd7858ecf57077098913d8a20ec4f/src/main/java/com/google/devtools/build/lib/BUILD",
    "contents_url": "https://api.github.com/repos/melG81/bazel/contents/src/main/java/com/google/devtools/build/lib/BUILD?ref=a9dd4b27c81dd7858ecf57077098913d8a20ec4f",
    "patch": "@@ -54,6 +54,7 @@ filegroup(\n         \"//src/main/java/com/google/devtools/build/lib/dynamic:srcs\",\n         \"//src/main/java/com/google/devtools/build/lib/events:srcs\",\n         \"//src/main/java/com/google/devtools/build/lib/exec:srcs\",\n+        \"//src/main/java/com/google/devtools/build/lib/io:srcs\",\n         \"//src/main/java/com/google/devtools/build/lib/graph:srcs\",\n         \"//src/main/java/com/google/devtools/build/lib/jni:srcs\",\n         \"//src/main/java/com/google/devtools/build/lib/metrics:srcs\","
  },
  {
    "sha": "0509e3bf34fbbb34abe48a342abbfc3c923b0f3e",
    "filename": "src/main/java/com/google/devtools/build/lib/actions/AbstractAction.java",
    "status": "modified",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/melG81/bazel/blob/a9dd4b27c81dd7858ecf57077098913d8a20ec4f/src/main/java/com/google/devtools/build/lib/actions/AbstractAction.java",
    "raw_url": "https://github.com/melG81/bazel/raw/a9dd4b27c81dd7858ecf57077098913d8a20ec4f/src/main/java/com/google/devtools/build/lib/actions/AbstractAction.java",
    "contents_url": "https://api.github.com/repos/melG81/bazel/contents/src/main/java/com/google/devtools/build/lib/actions/AbstractAction.java?ref=a9dd4b27c81dd7858ecf57077098913d8a20ec4f",
    "patch": "@@ -18,6 +18,7 @@\n import com.google.common.collect.ImmutableMap;\n import com.google.common.collect.ImmutableSet;\n import com.google.common.collect.Iterables;\n+import com.google.common.collect.Maps;\n import com.google.devtools.build.lib.actions.extra.ExtraActionInfo;\n import com.google.devtools.build.lib.analysis.platform.PlatformInfo;\n import com.google.devtools.build.lib.cmdline.Label;\n@@ -238,6 +239,14 @@ public final ActionEnvironment getEnvironment() {\n     return env;\n   }\n \n+  @Override\n+  public ImmutableMap<String, String> getEffectiveEnvironment(Map<String, String> clientEnv)\n+      throws CommandLineExpansionException {\n+    Map<String, String> effectiveEnvironment = Maps.newLinkedHashMapWithExpectedSize(env.size());\n+    env.resolve(effectiveEnvironment, clientEnv);\n+    return ImmutableMap.copyOf(effectiveEnvironment);\n+  }\n+\n   @Override\n   public Iterable<String> getClientEnvironmentVariables() {\n     return env.getInheritedEnv();"
  },
  {
    "sha": "4dfe37b8491a2116f3f201df63e1cf39f58df5fc",
    "filename": "src/main/java/com/google/devtools/build/lib/actions/Action.java",
    "status": "modified",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/melG81/bazel/blob/a9dd4b27c81dd7858ecf57077098913d8a20ec4f/src/main/java/com/google/devtools/build/lib/actions/Action.java",
    "raw_url": "https://github.com/melG81/bazel/raw/a9dd4b27c81dd7858ecf57077098913d8a20ec4f/src/main/java/com/google/devtools/build/lib/actions/Action.java",
    "contents_url": "https://api.github.com/repos/melG81/bazel/contents/src/main/java/com/google/devtools/build/lib/actions/Action.java?ref=a9dd4b27c81dd7858ecf57077098913d8a20ec4f",
    "patch": "@@ -14,12 +14,14 @@\n \n package com.google.devtools.build.lib.actions;\n \n+import com.google.common.collect.ImmutableMap;\n import com.google.devtools.build.lib.actions.extra.ExtraActionInfo;\n import com.google.devtools.build.lib.collect.nestedset.NestedSet;\n import com.google.devtools.build.lib.concurrent.ThreadSafety.ConditionallyThreadCompatible;\n import com.google.devtools.build.lib.vfs.BulkDeleter;\n import com.google.devtools.build.lib.vfs.Path;\n import java.io.IOException;\n+import java.util.Map;\n import javax.annotation.Nullable;\n \n /**\n@@ -231,4 +233,17 @@ default ActionContinuationOrResult beginExecution(ActionExecutionContext actionE\n    */\n   ExtraActionInfo.Builder getExtraActionInfo(ActionKeyContext actionKeyContext)\n       throws CommandLineExpansionException, InterruptedException;\n+\n+  /**\n+   * Called by {@link com.google.devtools.build.lib.analysis.actions.StarlarkAction} in {@link\n+   * #beginExecution} to use its shadowed action, if any, complete list of environment variables in\n+   * the Starlark action Spawn.\n+   *\n+   * <p>As this method is called from the StarlarkAction, make sure it is ok to call it from a\n+   * different thread than the one this action is executed on. By definition, the method should not\n+   * mutate any of the called action data but if necessary, its implementation must synchronize any\n+   * accesses to mutable data.\n+   */\n+  public ImmutableMap<String, String> getEffectiveEnvironment(Map<String, String> clientEnv)\n+      throws CommandLineExpansionException;\n }"
  },
  {
    "sha": "4420627562f09e6c796fdc50765f1c8710231ba3",
    "filename": "src/main/java/com/google/devtools/build/lib/actions/ActionCacheChecker.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/melG81/bazel/blob/a9dd4b27c81dd7858ecf57077098913d8a20ec4f/src/main/java/com/google/devtools/build/lib/actions/ActionCacheChecker.java",
    "raw_url": "https://github.com/melG81/bazel/raw/a9dd4b27c81dd7858ecf57077098913d8a20ec4f/src/main/java/com/google/devtools/build/lib/actions/ActionCacheChecker.java",
    "contents_url": "https://api.github.com/repos/melG81/bazel/contents/src/main/java/com/google/devtools/build/lib/actions/ActionCacheChecker.java?ref=a9dd4b27c81dd7858ecf57077098913d8a20ec4f",
    "patch": "@@ -439,7 +439,7 @@ public void updateActionCache(\n \n   @Nullable\n   public List<Artifact> getCachedInputs(Action action, PackageRootResolver resolver)\n-      throws InterruptedException {\n+      throws PackageRootResolver.PackageRootException, InterruptedException {\n     ActionCache.Entry entry = getCacheEntry(action);\n     if (entry == null || entry.isCorrupted()) {\n       return ImmutableList.of();"
  },
  {
    "sha": "d5196b24c93296cfb46d8b438acd6e8b24bf4441",
    "filename": "src/main/java/com/google/devtools/build/lib/actions/ArtifactFactory.java",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/melG81/bazel/blob/a9dd4b27c81dd7858ecf57077098913d8a20ec4f/src/main/java/com/google/devtools/build/lib/actions/ArtifactFactory.java",
    "raw_url": "https://github.com/melG81/bazel/raw/a9dd4b27c81dd7858ecf57077098913d8a20ec4f/src/main/java/com/google/devtools/build/lib/actions/ArtifactFactory.java",
    "contents_url": "https://api.github.com/repos/melG81/bazel/contents/src/main/java/com/google/devtools/build/lib/actions/ArtifactFactory.java?ref=a9dd4b27c81dd7858ecf57077098913d8a20ec4f",
    "patch": "@@ -450,7 +450,8 @@ public Artifact resolveSourceArtifact(PathFragment execPath,\n \n   @Override\n   public Map<PathFragment, Artifact> resolveSourceArtifacts(\n-      Iterable<PathFragment> execPaths, PackageRootResolver resolver) throws InterruptedException {\n+      Iterable<PathFragment> execPaths, PackageRootResolver resolver)\n+      throws PackageRootResolver.PackageRootException, InterruptedException {\n     Map<PathFragment, Artifact> result = new HashMap<>();\n     ArrayList<PathFragment> unresolvedPaths = new ArrayList<>();\n "
  },
  {
    "sha": "08a7e6750244b6545fc19e3aac740f6fbfd20a23",
    "filename": "src/main/java/com/google/devtools/build/lib/actions/ArtifactPathResolver.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/melG81/bazel/blob/a9dd4b27c81dd7858ecf57077098913d8a20ec4f/src/main/java/com/google/devtools/build/lib/actions/ArtifactPathResolver.java",
    "raw_url": "https://github.com/melG81/bazel/raw/a9dd4b27c81dd7858ecf57077098913d8a20ec4f/src/main/java/com/google/devtools/build/lib/actions/ArtifactPathResolver.java",
    "contents_url": "https://api.github.com/repos/melG81/bazel/contents/src/main/java/com/google/devtools/build/lib/actions/ArtifactPathResolver.java?ref=a9dd4b27c81dd7858ecf57077098913d8a20ec4f",
    "patch": "@@ -105,7 +105,7 @@ private TransformResolver(Path execRoot) {\n     @Override\n     public Path toPath(ActionInput input) {\n       if (input instanceof Artifact) {\n-        return fileSystem.getPath(((Artifact) input).getPath().getPathString());\n+        return fileSystem.getPath(((Artifact) input).getPath().asFragment());\n       }\n       return execRoot.getRelative(input.getExecPath());\n     }"
  },
  {
    "sha": "4c35aab7210e1bc432e151c6552ad1a378cc994a",
    "filename": "src/main/java/com/google/devtools/build/lib/actions/ArtifactResolver.java",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/melG81/bazel/blob/a9dd4b27c81dd7858ecf57077098913d8a20ec4f/src/main/java/com/google/devtools/build/lib/actions/ArtifactResolver.java",
    "raw_url": "https://github.com/melG81/bazel/raw/a9dd4b27c81dd7858ecf57077098913d8a20ec4f/src/main/java/com/google/devtools/build/lib/actions/ArtifactResolver.java",
    "contents_url": "https://api.github.com/repos/melG81/bazel/contents/src/main/java/com/google/devtools/build/lib/actions/ArtifactResolver.java?ref=a9dd4b27c81dd7858ecf57077098913d8a20ec4f",
    "patch": "@@ -78,7 +78,8 @@\n    */\n   @Nullable\n   Map<PathFragment, Artifact> resolveSourceArtifacts(\n-      Iterable<PathFragment> execPaths, PackageRootResolver resolver) throws InterruptedException;\n+      Iterable<PathFragment> execPaths, PackageRootResolver resolver)\n+      throws PackageRootResolver.PackageRootException, InterruptedException;\n \n   Path getPathFromSourceExecPath(Path execRoot, PathFragment execPath);\n "
  },
  {
    "sha": "9e9551d7ac17a403820548c293932d3c38a202c0",
    "filename": "src/main/java/com/google/devtools/build/lib/actions/BUILD",
    "status": "modified",
    "additions": 6,
    "deletions": 2,
    "changes": 8,
    "blob_url": "https://github.com/melG81/bazel/blob/a9dd4b27c81dd7858ecf57077098913d8a20ec4f/src/main/java/com/google/devtools/build/lib/actions/BUILD",
    "raw_url": "https://github.com/melG81/bazel/raw/a9dd4b27c81dd7858ecf57077098913d8a20ec4f/src/main/java/com/google/devtools/build/lib/actions/BUILD",
    "contents_url": "https://api.github.com/repos/melG81/bazel/contents/src/main/java/com/google/devtools/build/lib/actions/BUILD?ref=a9dd4b27c81dd7858ecf57077098913d8a20ec4f",
    "patch": "@@ -46,7 +46,6 @@ java_library(\n             \"FileStateValue.java\",\n             \"FileValue.java\",\n             \"FilesetOutputSymlink.java\",\n-            \"InconsistentFilesystemException.java\",\n             \"LocalHostCapacity.java\",\n             \"LocalHostResourceManagerLinux.java\",\n             \"LocalHostResourceManagerDarwin.java\",\n@@ -240,13 +239,13 @@ java_library(\n         \"FileStateType.java\",\n         \"FileStateValue.java\",\n         \"FileValue.java\",\n-        \"InconsistentFilesystemException.java\",\n         \"cache/MetadataDigestUtils.java\",\n     ],\n     deps = [\n         \":artifacts\",\n         \":has_digest\",\n         \"//src/main/java/com/google/devtools/build/lib/concurrent\",\n+        \"//src/main/java/com/google/devtools/build/lib/io:inconsistent_filesystem_exception\",\n         \"//src/main/java/com/google/devtools/build/lib/skyframe/serialization/autocodec\",\n         \"//src/main/java/com/google/devtools/build/lib/util\",\n         \"//src/main/java/com/google/devtools/build/lib/util:var_int\",\n@@ -298,9 +297,14 @@ java_library(\n         \"PackageRoots.java\",\n     ],\n     deps = [\n+        \"//src/main/java/com/google/devtools/build/lib/bugreport\",\n         \"//src/main/java/com/google/devtools/build/lib/cmdline:cmdline-primitives\",\n+        \"//src/main/java/com/google/devtools/build/lib/io:inconsistent_filesystem_exception\",\n+        \"//src/main/java/com/google/devtools/build/lib/packages\",\n+        \"//src/main/java/com/google/devtools/build/lib/util:detailed_exit_code\",\n         \"//src/main/java/com/google/devtools/build/lib/vfs\",\n         \"//src/main/java/com/google/devtools/build/lib/vfs:pathfragment\",\n+        \"//src/main/protobuf:failure_details_java_proto\",\n         \"//third_party:guava\",\n         \"//third_party:jsr305\",\n     ],"
  },
  {
    "sha": "fb7072eeb453244cb32e30af0fe728eb9beb7df5",
    "filename": "src/main/java/com/google/devtools/build/lib/actions/BuildFailedException.java",
    "status": "modified",
    "additions": 0,
    "deletions": 12,
    "changes": 12,
    "blob_url": "https://github.com/melG81/bazel/blob/a9dd4b27c81dd7858ecf57077098913d8a20ec4f/src/main/java/com/google/devtools/build/lib/actions/BuildFailedException.java",
    "raw_url": "https://github.com/melG81/bazel/raw/a9dd4b27c81dd7858ecf57077098913d8a20ec4f/src/main/java/com/google/devtools/build/lib/actions/BuildFailedException.java",
    "contents_url": "https://api.github.com/repos/melG81/bazel/contents/src/main/java/com/google/devtools/build/lib/actions/BuildFailedException.java?ref=a9dd4b27c81dd7858ecf57077098913d8a20ec4f",
    "patch": "@@ -16,10 +16,6 @@\n \n import static com.google.common.base.Preconditions.checkNotNull;\n \n-import com.google.devtools.build.lib.causes.Cause;\n-import com.google.devtools.build.lib.collect.nestedset.NestedSet;\n-import com.google.devtools.build.lib.collect.nestedset.NestedSetBuilder;\n-import com.google.devtools.build.lib.collect.nestedset.Order;\n import com.google.devtools.build.lib.concurrent.ThreadSafety.ThreadSafe;\n import com.google.devtools.build.lib.skyframe.DetailedException;\n import com.google.devtools.build.lib.util.DetailedExitCode;\n@@ -41,28 +37,24 @@\n @ThreadSafe\n public class BuildFailedException extends Exception implements DetailedException {\n   private final boolean catastrophic;\n-  private final NestedSet<Cause> rootCauses;\n   private final boolean errorAlreadyShown;\n   private final DetailedExitCode detailedExitCode;\n \n   public BuildFailedException(String message, DetailedExitCode detailedExitCode) {\n     this(\n         message,\n         /*catastrophic=*/ false,\n-        NestedSetBuilder.emptySet(Order.STABLE_ORDER),\n         /*errorAlreadyShown=*/ false,\n         detailedExitCode);\n   }\n \n   public BuildFailedException(\n       String message,\n       boolean catastrophic,\n-      NestedSet<Cause> rootCauses,\n       boolean errorAlreadyShown,\n       DetailedExitCode detailedExitCode) {\n     super(message);\n     this.catastrophic = catastrophic;\n-    this.rootCauses = rootCauses;\n     this.errorAlreadyShown = errorAlreadyShown;\n     this.detailedExitCode = checkNotNull(detailedExitCode);\n   }\n@@ -71,10 +63,6 @@ public boolean isCatastrophic() {\n     return catastrophic;\n   }\n \n-  public NestedSet<Cause> getRootCauses() {\n-    return rootCauses;\n-  }\n-\n   public boolean isErrorAlreadyShown() {\n     return errorAlreadyShown || getMessage() == null;\n   }"
  },
  {
    "sha": "cca134db6b4f9d8a370cff39e41175be588c3f17",
    "filename": "src/main/java/com/google/devtools/build/lib/actions/CompletionContext.java",
    "status": "modified",
    "additions": 23,
    "deletions": 1,
    "changes": 24,
    "blob_url": "https://github.com/melG81/bazel/blob/a9dd4b27c81dd7858ecf57077098913d8a20ec4f/src/main/java/com/google/devtools/build/lib/actions/CompletionContext.java",
    "raw_url": "https://github.com/melG81/bazel/raw/a9dd4b27c81dd7858ecf57077098913d8a20ec4f/src/main/java/com/google/devtools/build/lib/actions/CompletionContext.java",
    "contents_url": "https://api.github.com/repos/melG81/bazel/contents/src/main/java/com/google/devtools/build/lib/actions/CompletionContext.java?ref=a9dd4b27c81dd7858ecf57077098913d8a20ec4f",
    "patch": "@@ -36,12 +36,19 @@\n public class CompletionContext {\n   public static final CompletionContext FAILED_COMPLETION_CTX =\n       new CompletionContext(\n-          null, ImmutableMap.of(), ImmutableMap.of(), ArtifactPathResolver.IDENTITY, false, false);\n+          null,\n+          ImmutableMap.of(),\n+          ImmutableMap.of(),\n+          ArtifactPathResolver.IDENTITY,\n+          new ActionInputMap(0),\n+          false,\n+          false);\n \n   private final Path execRoot;\n   private final ArtifactPathResolver pathResolver;\n   private final Map<Artifact, ImmutableCollection<Artifact>> expandedArtifacts;\n   private final Map<Artifact, ImmutableList<FilesetOutputSymlink>> expandedFilesets;\n+  private final ActionInputMap inputMap;\n   private final boolean expandFilesets;\n   private final boolean fullyResolveFilesetLinks;\n \n@@ -50,12 +57,14 @@ private CompletionContext(\n       Map<Artifact, ImmutableCollection<Artifact>> expandedArtifacts,\n       Map<Artifact, ImmutableList<FilesetOutputSymlink>> expandedFilesets,\n       ArtifactPathResolver pathResolver,\n+      ActionInputMap inputMap,\n       boolean expandFilesets,\n       boolean fullyResolveFilesetLinks) {\n     this.execRoot = execRoot;\n     this.expandedArtifacts = expandedArtifacts;\n     this.expandedFilesets = expandedFilesets;\n     this.pathResolver = pathResolver;\n+    this.inputMap = inputMap;\n     this.expandFilesets = expandFilesets;\n     this.fullyResolveFilesetLinks = fullyResolveFilesetLinks;\n   }\n@@ -80,6 +89,7 @@ public static CompletionContext create(\n         expandedArtifacts,\n         expandedFilesets,\n         pathResolver,\n+        inputMap,\n         expandFilesets,\n         fullyResolveFilesetSymlinks);\n   }\n@@ -88,6 +98,18 @@ public ArtifactPathResolver pathResolver() {\n     return pathResolver;\n   }\n \n+  /** Returns true if the given artifact is guaranteed to be a file (and not a directory). */\n+  public boolean isOutputFile(Artifact artifact) {\n+    FileArtifactValue metadata = inputMap.getMetadata(artifact);\n+    if (metadata == null) {\n+      return false;\n+    }\n+    FileStateType type = metadata.getType();\n+    return type == FileStateType.REGULAR_FILE\n+        || type == FileStateType.SPECIAL_FILE\n+        || type == FileStateType.NONEXISTENT;\n+  }\n+\n   public void visitArtifacts(Iterable<Artifact> artifacts, ArtifactReceiver receiver) {\n     for (Artifact artifact : artifacts) {\n       if (artifact.isMiddlemanArtifact()) {"
  },
  {
    "sha": "867437d2df2e5656a1f283b487831b2c0c98f189",
    "filename": "src/main/java/com/google/devtools/build/lib/actions/FileStateValue.java",
    "status": "modified",
    "additions": 11,
    "deletions": 7,
    "changes": 18,
    "blob_url": "https://github.com/melG81/bazel/blob/a9dd4b27c81dd7858ecf57077098913d8a20ec4f/src/main/java/com/google/devtools/build/lib/actions/FileStateValue.java",
    "raw_url": "https://github.com/melG81/bazel/raw/a9dd4b27c81dd7858ecf57077098913d8a20ec4f/src/main/java/com/google/devtools/build/lib/actions/FileStateValue.java",
    "contents_url": "https://api.github.com/repos/melG81/bazel/contents/src/main/java/com/google/devtools/build/lib/actions/FileStateValue.java?ref=a9dd4b27c81dd7858ecf57077098913d8a20ec4f",
    "patch": "@@ -21,6 +21,7 @@\n import com.google.common.collect.Interner;\n import com.google.devtools.build.lib.concurrent.BlazeInterners;\n import com.google.devtools.build.lib.concurrent.ThreadSafety.ThreadSafe;\n+import com.google.devtools.build.lib.io.InconsistentFilesystemException;\n import com.google.devtools.build.lib.skyframe.serialization.autocodec.AutoCodec;\n import com.google.devtools.build.lib.util.BigIntegerFingerprint;\n import com.google.devtools.build.lib.util.io.TimestampGranularityMonitor;\n@@ -52,12 +53,14 @@\n  *   <li>For a directory, the existence is noted.\n  *   <li>For a file, the existence is noted, along with metadata about the file (e.g. file digest).\n  *       See {@link RegularFileStateValue}.\n- *       <ul>\n- *         <p>This class is an implementation detail of {@link FileValue} and should not be used by\n- *         {@link com.google.devtools.build.skyframe.SkyFunction}s other than {@link FileFunction}.\n- *         Instead, {@link FileValue} should be used by {@link\n- *         com.google.devtools.build.skyframe.SkyFunction} consumers that care about files.\n- *         <p>All subclasses must implement {@link #equals} and {@link #hashCode} properly.\n+ * </ul>\n+ *\n+ * <p>This class is an implementation detail of {@link FileValue} and should not be used by {@link\n+ * com.google.devtools.build.skyframe.SkyFunction}s other than {@link FileFunction}. Instead, {@link\n+ * FileValue} should be used by {@link com.google.devtools.build.skyframe.SkyFunction} consumers\n+ * that care about files.\n+ *\n+ * <p>All subclasses must implement {@link #equals} and {@link #hashCode} properly.\n  */\n public abstract class FileStateValue implements HasDigest, SkyValue {\n   public static final SkyFunctionName FILE_STATE = SkyFunctionName.createNonHermetic(\"FILE_STATE\");\n@@ -142,9 +145,10 @@ public static Key key(RootedPath rootedPath) {\n     return Key.create(rootedPath);\n   }\n \n+  /** Key type for FileStateValue. */\n   @AutoCodec.VisibleForSerialization\n   @AutoCodec\n-  static class Key extends AbstractSkyKey<RootedPath> {\n+  public static class Key extends AbstractSkyKey<RootedPath> {\n     private static final Interner<Key> interner = BlazeInterners.newWeakInterner();\n \n     private Key(RootedPath arg) {"
  },
  {
    "sha": "9b1f7d5b01ecb9ca638379e10f25ee80ab3cd3e3",
    "filename": "src/main/java/com/google/devtools/build/lib/actions/FileValue.java",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/melG81/bazel/blob/a9dd4b27c81dd7858ecf57077098913d8a20ec4f/src/main/java/com/google/devtools/build/lib/actions/FileValue.java",
    "raw_url": "https://github.com/melG81/bazel/raw/a9dd4b27c81dd7858ecf57077098913d8a20ec4f/src/main/java/com/google/devtools/build/lib/actions/FileValue.java",
    "contents_url": "https://api.github.com/repos/melG81/bazel/contents/src/main/java/com/google/devtools/build/lib/actions/FileValue.java?ref=a9dd4b27c81dd7858ecf57077098913d8a20ec4f",
    "patch": "@@ -150,9 +150,10 @@ public static Key key(RootedPath rootedPath) {\n     return Key.create(rootedPath);\n   }\n \n+  /** Key type for FileValue. */\n   @AutoCodec.VisibleForSerialization\n   @AutoCodec\n-  static class Key extends AbstractSkyKey<RootedPath> {\n+  public static class Key extends AbstractSkyKey<RootedPath> {\n     private static final Interner<Key> interner = BlazeInterners.newWeakInterner();\n \n     private Key(RootedPath arg) {"
  },
  {
    "sha": "66ffc85c8bf28e682728125088e38ea194e9322e",
    "filename": "src/main/java/com/google/devtools/build/lib/actions/FilesetManifest.java",
    "status": "modified",
    "additions": 42,
    "deletions": 26,
    "changes": 68,
    "blob_url": "https://github.com/melG81/bazel/blob/a9dd4b27c81dd7858ecf57077098913d8a20ec4f/src/main/java/com/google/devtools/build/lib/actions/FilesetManifest.java",
    "raw_url": "https://github.com/melG81/bazel/raw/a9dd4b27c81dd7858ecf57077098913d8a20ec4f/src/main/java/com/google/devtools/build/lib/actions/FilesetManifest.java",
    "contents_url": "https://api.github.com/repos/melG81/bazel/contents/src/main/java/com/google/devtools/build/lib/actions/FilesetManifest.java?ref=a9dd4b27c81dd7858ecf57077098913d8a20ec4f",
    "patch": "@@ -16,6 +16,7 @@\n import com.google.common.base.Preconditions;\n import com.google.common.base.Strings;\n import com.google.common.flogger.GoogleLogger;\n+import com.google.devtools.build.lib.bugreport.BugReport;\n import com.google.devtools.build.lib.vfs.DigestHashFunction;\n import com.google.devtools.build.lib.vfs.FileSystemUtils;\n import com.google.devtools.build.lib.vfs.Path;\n@@ -93,7 +94,9 @@ private static void addRelativeSymlinkEntry(\n       throws IOException {\n     switch (relSymlinkBehavior) {\n       case ERROR:\n-        throw new IOException(\"runfiles target is not absolute: \" + artifact);\n+        IOException ioException = new IOException(\"runfiles target is not absolute: \" + artifact);\n+        BugReport.sendBugReport(ioException);\n+        throw ioException;\n       case RESOLVE:\n       case RESOLVE_FULLY:\n         if (!relativeLinks.containsKey(fullLocation)) { // Keep consistent behavior: no overwriting.\n@@ -109,32 +112,45 @@ private static void addRelativeSymlinkEntry(\n   private static void fullyResolveRelativeSymlinks(\n       Map<PathFragment, String> entries, Map<PathFragment, String> relativeLinks, boolean absolute)\n       throws IOException {\n-    // Construct an in-memory Filesystem containing all the non-relative-symlink entries in the\n-    // Fileset. Treat these as regular files in the filesystem whose contents are the \"real\" symlink\n-    // pointing out of the Fileset. For relative symlinks, we encode these as symlinks in the\n-    // in-memory Filesystem. This allows us to then crawl the filesystem for files. Any readable\n-    // file is a valid part of the FilesetManifest. Dangling internal links or symlink cycles will\n-    // be discovered by the in-memory filesystem.\n-    // (Choice of digest function is irrelevant).\n-    InMemoryFileSystem fs = new InMemoryFileSystem(DigestHashFunction.SHA256);\n-    Path root = fs.getPath(\"/\");\n-    for (Map.Entry<PathFragment, String> e : entries.entrySet()) {\n-      PathFragment location = e.getKey();\n-      Path locationPath = root.getRelative(location);\n-      locationPath.getParentDirectory().createDirectoryAndParents();\n-      FileSystemUtils.writeContentAsLatin1(locationPath, Strings.nullToEmpty(e.getValue()));\n-    }\n-    for (Map.Entry<PathFragment, String> e : relativeLinks.entrySet()) {\n-      PathFragment location = e.getKey();\n-      Path locationPath = fs.getPath(\"/\").getRelative(location);\n-      PathFragment value = PathFragment.create(Preconditions.checkNotNull(e.getValue(), e));\n-      Preconditions.checkState(!value.isAbsolute(), e);\n-\n-      locationPath.getParentDirectory().createDirectoryAndParents();\n-      locationPath.createSymbolicLink(value);\n-    }\n+    try {\n+      // Construct an in-memory Filesystem containing all the non-relative-symlink entries in the\n+      // Fileset. Treat these as regular files in the filesystem whose contents are the \"real\"\n+      // symlink\n+      // pointing out of the Fileset. For relative symlinks, we encode these as symlinks in the\n+      // in-memory Filesystem. This allows us to then crawl the filesystem for files. Any readable\n+      // file is a valid part of the FilesetManifest. Dangling internal links or symlink cycles will\n+      // be discovered by the in-memory filesystem.\n+      // (Choice of digest function is irrelevant).\n+      InMemoryFileSystem fs = new InMemoryFileSystem(DigestHashFunction.SHA256);\n+      Path root = fs.getPath(\"/\");\n+      for (Map.Entry<PathFragment, String> e : entries.entrySet()) {\n+        PathFragment location = e.getKey();\n+        Path locationPath = root.getRelative(location);\n+        locationPath.getParentDirectory().createDirectoryAndParents();\n+        FileSystemUtils.writeContentAsLatin1(locationPath, Strings.nullToEmpty(e.getValue()));\n+      }\n+      for (Map.Entry<PathFragment, String> e : relativeLinks.entrySet()) {\n+        PathFragment location = e.getKey();\n+        Path locationPath = fs.getPath(\"/\").getRelative(location);\n+        PathFragment value = PathFragment.create(Preconditions.checkNotNull(e.getValue(), e));\n+        Preconditions.checkState(!value.isAbsolute(), e);\n+\n+        locationPath.getParentDirectory().createDirectoryAndParents();\n+        locationPath.createSymbolicLink(value);\n+      }\n \n-    addSymlinks(root, entries, absolute);\n+      addSymlinks(root, entries, absolute);\n+    } catch (IOException e) {\n+      // TODO(janakr): make this crash hard if there are no bug reports.\n+      BugReport.sendBugReport(\n+          new IllegalStateException(\n+              \"Unexpected IOException from InMemoryFileSystem operations for \"\n+                  + entries\n+                  + \" with \"\n+                  + relativeLinks,\n+              e));\n+      throw e;\n+    }\n   }\n \n   private static void addSymlinks(Path root, Map<PathFragment, String> entries, boolean absolute)"
  },
  {
    "sha": "8792ca62d56fdd6f98f7e919c4db6578b73350f0",
    "filename": "src/main/java/com/google/devtools/build/lib/actions/InputFileErrorException.java",
    "status": "added",
    "additions": 27,
    "deletions": 0,
    "changes": 27,
    "blob_url": "https://github.com/melG81/bazel/blob/a9dd4b27c81dd7858ecf57077098913d8a20ec4f/src/main/java/com/google/devtools/build/lib/actions/InputFileErrorException.java",
    "raw_url": "https://github.com/melG81/bazel/raw/a9dd4b27c81dd7858ecf57077098913d8a20ec4f/src/main/java/com/google/devtools/build/lib/actions/InputFileErrorException.java",
    "contents_url": "https://api.github.com/repos/melG81/bazel/contents/src/main/java/com/google/devtools/build/lib/actions/InputFileErrorException.java?ref=a9dd4b27c81dd7858ecf57077098913d8a20ec4f",
    "patch": "@@ -0,0 +1,27 @@\n+// Copyright 2021 The Bazel Authors. All rights reserved.\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//    http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+package com.google.devtools.build.lib.actions;\n+\n+import com.google.devtools.build.lib.util.DetailedExitCode;\n+import java.io.IOException;\n+\n+/**\n+ * Signals that a source file requested by a top-level target (not via an action) was missing or\n+ * that access threw an {@link IOException}.\n+ */\n+public class InputFileErrorException extends BuildFailedException {\n+  public InputFileErrorException(String message, DetailedExitCode detailedExitCode) {\n+    super(message, /*catastrophic=*/ false, /*errorAlreadyShown=*/ true, detailedExitCode);\n+  }\n+}"
  },
  {
    "sha": "2cb57b82304445fc365618cf5ff261697aa20e0a",
    "filename": "src/main/java/com/google/devtools/build/lib/actions/MissingInputFileException.java",
    "status": "modified",
    "additions": 10,
    "deletions": 2,
    "changes": 12,
    "blob_url": "https://github.com/melG81/bazel/blob/a9dd4b27c81dd7858ecf57077098913d8a20ec4f/src/main/java/com/google/devtools/build/lib/actions/MissingInputFileException.java",
    "raw_url": "https://github.com/melG81/bazel/raw/a9dd4b27c81dd7858ecf57077098913d8a20ec4f/src/main/java/com/google/devtools/build/lib/actions/MissingInputFileException.java",
    "contents_url": "https://api.github.com/repos/melG81/bazel/contents/src/main/java/com/google/devtools/build/lib/actions/MissingInputFileException.java?ref=a9dd4b27c81dd7858ecf57077098913d8a20ec4f",
    "patch": "@@ -15,6 +15,7 @@\n package com.google.devtools.build.lib.actions;\n \n import com.google.devtools.build.lib.server.FailureDetails.FailureDetail;\n+import com.google.devtools.build.lib.skyframe.DetailedException;\n import com.google.devtools.build.lib.util.DetailedExitCode;\n import net.starlark.java.syntax.Location;\n \n@@ -25,14 +26,21 @@\n  * <p>If a missing input file is an input to an action, an {@link ActionExecutionException} is\n  * thrown instead.\n  */\n-public class MissingInputFileException extends BuildFailedException {\n+public class MissingInputFileException extends Exception implements DetailedException {\n+  private final DetailedExitCode detailedExitCode;\n   private final Location location;\n \n   public MissingInputFileException(FailureDetail failureDetail, Location location) {\n-    super(failureDetail.getMessage(), DetailedExitCode.of(failureDetail));\n+    super(failureDetail.getMessage());\n+    this.detailedExitCode = DetailedExitCode.of(failureDetail);\n     this.location = location;\n   }\n \n+  @Override\n+  public DetailedExitCode getDetailedExitCode() {\n+    return detailedExitCode;\n+  }\n+\n   /**\n    * Return a location where this input file is referenced. If there are multiple such locations,\n    * one is chosen arbitrarily. If there are none, return null."
  },
  {
    "sha": "7c522478417943abd85bea2204c26f666e0a3704",
    "filename": "src/main/java/com/google/devtools/build/lib/actions/PackageRootResolver.java",
    "status": "modified",
    "additions": 66,
    "deletions": 2,
    "changes": 68,
    "blob_url": "https://github.com/melG81/bazel/blob/a9dd4b27c81dd7858ecf57077098913d8a20ec4f/src/main/java/com/google/devtools/build/lib/actions/PackageRootResolver.java",
    "raw_url": "https://github.com/melG81/bazel/raw/a9dd4b27c81dd7858ecf57077098913d8a20ec4f/src/main/java/com/google/devtools/build/lib/actions/PackageRootResolver.java",
    "contents_url": "https://api.github.com/repos/melG81/bazel/contents/src/main/java/com/google/devtools/build/lib/actions/PackageRootResolver.java?ref=a9dd4b27c81dd7858ecf57077098913d8a20ec4f",
    "patch": "@@ -14,13 +14,19 @@\n \n package com.google.devtools.build.lib.actions;\n \n+import com.google.devtools.build.lib.bugreport.BugReport;\n+import com.google.devtools.build.lib.io.InconsistentFilesystemException;\n+import com.google.devtools.build.lib.packages.BuildFileNotFoundException;\n+import com.google.devtools.build.lib.server.FailureDetails;\n+import com.google.devtools.build.lib.util.DetailedExitCode;\n import com.google.devtools.build.lib.vfs.PathFragment;\n import com.google.devtools.build.lib.vfs.Root;\n import java.util.Map;\n import javax.annotation.Nullable;\n \n /**\n- * Represents logic that evaluates the root of the package containing path.\n+ * Represents logic that evaluates the root of the package containing an exec path, for constructing\n+ * {@link Artifact} objects out of the action cache.\n  */\n public interface PackageRootResolver {\n \n@@ -34,5 +40,63 @@\n    */\n   @Nullable\n   Map<PathFragment, Root> findPackageRootsForFiles(Iterable<PathFragment> execPaths)\n-      throws InterruptedException;\n+      throws PackageRootException, InterruptedException;\n+\n+  /**\n+   * Exception encapsulating a failure to find a package root in {@link\n+   * com.google.devtools.build.lib.skyframe.PackageLookupFunction} (via {@link\n+   * com.google.devtools.build.lib.skyframe.ContainingPackageLookupFunction}). Contains a {@link\n+   * FailureDetails.IncludeScanning} error for use in a {@link DetailedExitCode}.\n+   */\n+  class PackageRootException extends Exception {\n+    private final FailureDetails.IncludeScanning error;\n+\n+    private PackageRootException(\n+        PathFragment execPath, FailureDetails.IncludeScanning error, Exception e) {\n+      super(\n+          \"Unable to resolve \" + execPath.getPathString() + \" as an artifact: \" + e.getMessage(),\n+          e);\n+      this.error = error;\n+    }\n+\n+    public static PackageRootException create(PathFragment execPath, BuildFileNotFoundException e) {\n+      FailureDetails.FailureDetail failureDetail = e.getDetailedExitCode().getFailureDetail();\n+      FailureDetails.IncludeScanning.Code code =\n+          e.hasExplicitDetailedExitCode()\n+              ? DetailedExitCode.getExitCode(failureDetail).isInfrastructureFailure()\n+                  ? FailureDetails.IncludeScanning.Code.SYSTEM_PACKAGE_LOAD_FAILURE\n+                  : FailureDetails.IncludeScanning.Code.USER_PACKAGE_LOAD_FAILURE\n+              : FailureDetails.IncludeScanning.Code.UNDIFFERENTIATED_PACKAGE_LOAD_FAILURE;\n+      FailureDetails.PackageLoading.Code packageLoadingCode =\n+          failureDetail.getPackageLoading().getCode();\n+      if (packageLoadingCode == FailureDetails.PackageLoading.Code.PACKAGE_LOADING_UNKNOWN) {\n+        BugReport.sendBugReport(\n+            new IllegalStateException(\n+                \"Exception for \" + execPath + \" had no PackageLoading.Code: \" + failureDetail, e));\n+      }\n+      return new PackageRootException(\n+          execPath,\n+          FailureDetails.IncludeScanning.newBuilder()\n+              .setCode(code)\n+              .setPackageLoadingCode(packageLoadingCode)\n+              .build(),\n+          e);\n+    }\n+\n+    public static PackageRootException create(\n+        PathFragment execPath, InconsistentFilesystemException e) {\n+      return new PackageRootException(\n+          execPath,\n+          FailureDetails.IncludeScanning.newBuilder()\n+              .setCode(FailureDetails.IncludeScanning.Code.SYSTEM_PACKAGE_LOAD_FAILURE)\n+              .setPackageLoadingCode(\n+                  FailureDetails.PackageLoading.Code.PERSISTENT_INCONSISTENT_FILESYSTEM_ERROR)\n+              .build(),\n+          e);\n+    }\n+\n+    public FailureDetails.IncludeScanning getError() {\n+      return error;\n+    }\n+  }\n }"
  },
  {
    "sha": "872956f521dc1e680f6e0160b595b6040fa8d8c2",
    "filename": "src/main/java/com/google/devtools/build/lib/analysis/AnalysisUtils.java",
    "status": "modified",
    "additions": 11,
    "deletions": 3,
    "changes": 14,
    "blob_url": "https://github.com/melG81/bazel/blob/a9dd4b27c81dd7858ecf57077098913d8a20ec4f/src/main/java/com/google/devtools/build/lib/analysis/AnalysisUtils.java",
    "raw_url": "https://github.com/melG81/bazel/raw/a9dd4b27c81dd7858ecf57077098913d8a20ec4f/src/main/java/com/google/devtools/build/lib/analysis/AnalysisUtils.java",
    "contents_url": "https://api.github.com/repos/melG81/bazel/contents/src/main/java/com/google/devtools/build/lib/analysis/AnalysisUtils.java?ref=a9dd4b27c81dd7858ecf57077098913d8a20ec4f",
    "patch": "@@ -34,6 +34,7 @@\n import com.google.devtools.build.lib.packages.Info;\n import com.google.devtools.build.lib.packages.Target;\n import com.google.devtools.build.lib.packages.TriState;\n+import com.google.devtools.build.lib.packages.Type;\n import com.google.devtools.build.lib.vfs.PathFragment;\n import java.util.Collection;\n import java.util.LinkedHashSet;\n@@ -56,11 +57,18 @@ private AnalysisUtils() {\n    * -1.\n    */\n   public static boolean isStampingEnabled(RuleContext ruleContext, BuildConfiguration config) {\n-    if (config.isToolConfiguration()\n-        || !ruleContext.attributes().has(\"stamp\", BuildType.TRISTATE)) {\n+    if (config.isToolConfiguration()) {\n+      return false;\n+    }\n+    TriState stamp;\n+    if (ruleContext.attributes().has(\"stamp\", BuildType.TRISTATE)) {\n+      stamp = ruleContext.attributes().get(\"stamp\", BuildType.TRISTATE);\n+    } else if (ruleContext.attributes().has(\"stamp\", Type.INTEGER)) {\n+      int value = ruleContext.attributes().get(\"stamp\", Type.INTEGER).toIntUnchecked();\n+      stamp = TriState.fromInt(value);\n+    } else {\n       return false;\n     }\n-    TriState stamp = ruleContext.attributes().get(\"stamp\", BuildType.TRISTATE);\n     return stamp == TriState.YES || (stamp == TriState.AUTO && config.stampBinaries());\n   }\n "
  },
  {
    "sha": "f9c7e4c0cede0a070df71ca433d0b57120fd3cb2",
    "filename": "src/main/java/com/google/devtools/build/lib/analysis/BaseRuleClasses.java",
    "status": "modified",
    "additions": 7,
    "deletions": 5,
    "changes": 12,
    "blob_url": "https://github.com/melG81/bazel/blob/a9dd4b27c81dd7858ecf57077098913d8a20ec4f/src/main/java/com/google/devtools/build/lib/analysis/BaseRuleClasses.java",
    "raw_url": "https://github.com/melG81/bazel/raw/a9dd4b27c81dd7858ecf57077098913d8a20ec4f/src/main/java/com/google/devtools/build/lib/analysis/BaseRuleClasses.java",
    "contents_url": "https://api.github.com/repos/melG81/bazel/contents/src/main/java/com/google/devtools/build/lib/analysis/BaseRuleClasses.java?ref=a9dd4b27c81dd7858ecf57077098913d8a20ec4f",
    "patch": "@@ -381,6 +381,13 @@ public RuleClass build(RuleClass.Builder builder, RuleDefinitionEnvironment env)\n           .add(\n               attr(\"distribs\", DISTRIBUTIONS)\n                   .nonconfigurable(\"Used in core loading phase logic with no access to configs\"))\n+          // Any rule that has provides its own meaning for the \"target_compatible_with\" attribute\n+          // has to be excluded in `RuleContextConstraintSemantics.incompatibleConfiguredTarget()`.\n+          .add(\n+              attr(RuleClass.TARGET_RESTRICTED_TO_ATTR, LABEL_LIST)\n+                  .mandatoryProviders(ConstraintValueInfo.PROVIDER.id())\n+                  // This should be configurable to allow for complex types of restrictions.\n+                  .allowedFileTypes(FileTypeSet.NO_FILE))\n           .build();\n     }\n \n@@ -441,11 +448,6 @@ public RuleClass build(RuleClass.Builder builder, RuleDefinitionEnvironment env)\n                   .allowedFileTypes()\n                   .nonconfigurable(\"Used in toolchain resolution\")\n                   .value(ImmutableList.of()))\n-          .add(\n-              attr(RuleClass.TARGET_RESTRICTED_TO_ATTR, LABEL_LIST)\n-                  .mandatoryProviders(ConstraintValueInfo.PROVIDER.id())\n-                  // This should be configurable to allow for complex types of restrictions.\n-                  .allowedFileTypes(FileTypeSet.NO_FILE))\n           .build();\n     }\n "
  },
  {
    "sha": "daef0b098f6b11dff7c077496a9addfed92a12e2",
    "filename": "src/main/java/com/google/devtools/build/lib/analysis/BlazeDirectories.java",
    "status": "modified",
    "additions": 1,
    "deletions": 4,
    "changes": 5,
    "blob_url": "https://github.com/melG81/bazel/blob/a9dd4b27c81dd7858ecf57077098913d8a20ec4f/src/main/java/com/google/devtools/build/lib/analysis/BlazeDirectories.java",
    "raw_url": "https://github.com/melG81/bazel/raw/a9dd4b27c81dd7858ecf57077098913d8a20ec4f/src/main/java/com/google/devtools/build/lib/analysis/BlazeDirectories.java",
    "contents_url": "https://api.github.com/repos/melG81/bazel/contents/src/main/java/com/google/devtools/build/lib/analysis/BlazeDirectories.java?ref=a9dd4b27c81dd7858ecf57077098913d8a20ec4f",
    "patch": "@@ -102,10 +102,7 @@ public ServerDirectories getServerDirectories() {\n     return serverDirectories;\n   }\n \n-  /**\n-   * Returns the base of the output tree, which hosts all build and scratch output for a user and\n-   * workspace.\n-   */\n+  /** Returns the installation base directory. */\n   public Path getInstallBase() {\n     return serverDirectories.getInstallBase();\n   }"
  },
  {
    "sha": "7ad88504594367cd729021d30dc4179d36f21ba2",
    "filename": "src/main/java/com/google/devtools/build/lib/analysis/ConfiguredRuleClassProvider.java",
    "status": "modified",
    "additions": 102,
    "deletions": 28,
    "changes": 130,
    "blob_url": "https://github.com/melG81/bazel/blob/a9dd4b27c81dd7858ecf57077098913d8a20ec4f/src/main/java/com/google/devtools/build/lib/analysis/ConfiguredRuleClassProvider.java",
    "raw_url": "https://github.com/melG81/bazel/raw/a9dd4b27c81dd7858ecf57077098913d8a20ec4f/src/main/java/com/google/devtools/build/lib/analysis/ConfiguredRuleClassProvider.java",
    "contents_url": "https://api.github.com/repos/melG81/bazel/contents/src/main/java/com/google/devtools/build/lib/analysis/ConfiguredRuleClassProvider.java?ref=a9dd4b27c81dd7858ecf57077098913d8a20ec4f",
    "patch": "@@ -17,6 +17,7 @@\n import static com.google.common.base.Preconditions.checkNotNull;\n import static com.google.devtools.build.lib.packages.RuleClass.Builder.RuleClassType.ABSTRACT;\n import static com.google.devtools.build.lib.packages.RuleClass.Builder.RuleClassType.TEST;\n+import static java.nio.charset.StandardCharsets.UTF_8;\n \n import com.google.common.annotations.VisibleForTesting;\n import com.google.common.base.Preconditions;\n@@ -55,6 +56,8 @@\n import com.google.devtools.build.lib.starlarkbuildapi.core.Bootstrap;\n import com.google.devtools.build.lib.vfs.DigestHashFunction;\n import com.google.devtools.build.lib.vfs.Path;\n+import com.google.devtools.build.lib.vfs.PathFragment;\n+import com.google.devtools.build.lib.vfs.Root;\n import com.google.devtools.build.lib.vfs.inmemoryfs.InMemoryFileSystem;\n import com.google.devtools.common.options.Option;\n import com.google.devtools.common.options.OptionDefinition;\n@@ -101,6 +104,31 @@\n     ImmutableList<RuleSet> requires();\n   }\n \n+  /** An InMemoryFileSystem for bundled builtins .bzl files. */\n+  public static class BundledFileSystem extends InMemoryFileSystem {\n+\n+    private static final byte[] EMPTY_DIGEST = new byte[0];\n+\n+    public BundledFileSystem() {\n+      super(DigestHashFunction.SHA256);\n+    }\n+\n+    // Bundled files are guaranteed to not change throughout the lifetime of the Bazel server, so it\n+    // is permissible to use a fake digest. This helps avoid peculiarities in the interaction of\n+    // InMemoryFileSystem and Skyframe. See cl/354809138 for further discussion, including of\n+    // possible (but unlikely) future caveats of this approach.\n+\n+    @Override\n+    protected synchronized byte[] getFastDigest(PathFragment path) throws IOException {\n+      return EMPTY_DIGEST;\n+    }\n+\n+    @Override\n+    protected synchronized byte[] getDigest(PathFragment path) throws IOException {\n+      return EMPTY_DIGEST;\n+    }\n+  }\n+\n   /** Builder for {@link ConfiguredRuleClassProvider}. */\n   public static class Builder implements RuleDefinitionEnvironment {\n     private final StringBuilder defaultWorkspaceFilePrefix = new StringBuilder();\n@@ -109,7 +137,8 @@\n     private String runfilesPrefix;\n     private String toolsRepository;\n     @Nullable private String builtinsBzlZipResource;\n-    private String builtinsBzlPackagePathInSource;\n+    private boolean useDummyBuiltinsBzlInsteadOfResource = false;\n+    @Nullable private String builtinsBzlPackagePathInSource;\n     private final List<Class<? extends Fragment>> configurationFragmentClasses = new ArrayList<>();\n     private final List<BuildInfoFactory> buildInfoFactories = new ArrayList<>();\n     private final Set<Class<? extends FragmentOptions>> configurationOptions =\n@@ -185,15 +214,37 @@ public Builder setToolsRepository(String toolsRepository) {\n      *\n      * <p>This value is required for production uses. For uses in tests, this may be left null, but\n      * the resulting rule class provider will not work with {@code\n-     * --experimental_builtins_bzl_path=%bundled%}.\n+     * --experimental_builtins_bzl_path=%bundled%}. Alternatively, tests may call {@link\n+     * #useDummyBuiltinsBzl} if they do not rely on any native rules that may be migratable to\n+     * Starlark.\n      */\n     public Builder setBuiltinsBzlZipResource(String name) {\n       this.builtinsBzlZipResource = name;\n+      this.useDummyBuiltinsBzlInsteadOfResource = false;\n+      return this;\n+    }\n+\n+    /**\n+     * Instructs the rule class provider to use a set of dummy builtins definitions that inject no\n+     * symbols.\n+     *\n+     * <p>This is only suitable for use in tests, and only when the test does not depend (even\n+     * implicitly) on native rules. For example, pure tests of package loading behavior may call\n+     * this method, but not tests that use AnalysisMock. Otherwise the test may break when a native\n+     * rule is migrated to Starlark via builtins injection.\n+     */\n+    public Builder useDummyBuiltinsBzl() {\n+      this.builtinsBzlZipResource = null;\n+      this.useDummyBuiltinsBzlInsteadOfResource = true;\n       return this;\n     }\n \n-    // This is required if the rule class provider will be used with\n-    // \"--experimental_builtins_bzl_path=%workspace%\", but can be skipped in unit tests.\n+    /**\n+     * Sets the relative location of the builtins_bzl directory within a Bazel source tree.\n+     *\n+     * <p>This is required if the rule class provider will be used with {@code\n+     * --experimental_builtins_bzl_path=%workspace%}, but can be skipped in unit tests.\n+     */\n     public Builder setBuiltinsBzlPackagePathInSource(String path) {\n       this.builtinsBzlPackagePathInSource = path;\n       return this;\n@@ -439,34 +490,27 @@ private RuleClass commitRuleDefinition(Class<? extends RuleDefinition> definitio\n     }\n \n     /**\n-     * Unpacks the builtins zip file into an InMemoryFileSystem. The zip file is located as a Java\n-     * resource file.\n-     *\n-     * <p>The files underneath the zip's {@code builtins_bzl/} directory are moved to a top-level\n-     * {@code /virtual_builtins_bzl} directory. The Path to that directory is returned.\n+     * Locates the builtins zip file as a Java resource, and unpacks it into the given directory.\n+     * Note that the builtins_bzl/ entry itself in the zip is not copied, just its children.\n      */\n-    private static Path unpackBuiltinsBzlZipResource(String builtinsResourceName) {\n+    private static void unpackBuiltinsBzlZipResource(String builtinsResourceName, Path targetRoot) {\n       ClassLoader loader = ConfiguredRuleClassProvider.class.getClassLoader();\n       try (InputStream builtinsZip = loader.getResourceAsStream(builtinsResourceName)) {\n         Preconditions.checkArgument(\n             builtinsZip != null, \"No resource with name %s\", builtinsResourceName);\n \n-        InMemoryFileSystem fs = new InMemoryFileSystem(DigestHashFunction.SHA256);\n-        Path root = fs.getPath(\"/virtual_builtins_bzl\");\n-\n         try (ZipInputStream zip = new ZipInputStream(builtinsZip)) {\n           for (ZipEntry entry = zip.getNextEntry(); entry != null; entry = zip.getNextEntry()) {\n             String entryName = entry.getName();\n             Preconditions.checkArgument(entryName.startsWith(\"builtins_bzl/\"));\n-            Path dest = root.getRelative(entryName.substring(\"builtins_bzl/\".length()));\n+            Path dest = targetRoot.getRelative(entryName.substring(\"builtins_bzl/\".length()));\n \n             dest.getParentDirectory().createDirectoryAndParents();\n             try (OutputStream os = dest.getOutputStream()) {\n               ByteStreams.copy(zip, os);\n             }\n           }\n         }\n-        return root;\n       } catch (IOException ex) {\n         throw new IllegalArgumentException(\n             \"Error while unpacking builtins_bzl zip resource file\", ex);\n@@ -479,16 +523,40 @@ public ConfiguredRuleClassProvider build() {\n         commitRuleDefinition(ruleDefinition.getLabel());\n       }\n \n-      Path builtinsBzlRoot =\n-          builtinsBzlZipResource != null\n-              ? unpackBuiltinsBzlZipResource(builtinsBzlZipResource)\n-              : null;\n+      // Determine the bundled builtins root, if it exists.\n+      Root builtinsRoot;\n+      if (builtinsBzlZipResource == null && !useDummyBuiltinsBzlInsteadOfResource) {\n+        // Use of --experimental_builtins_bzl_path=%bundled% is disallowed.\n+        builtinsRoot = null;\n+      } else {\n+        BundledFileSystem fs = new BundledFileSystem();\n+        Path builtinsPath = fs.getPath(\"/virtual_builtins_bzl\");\n+        if (builtinsBzlZipResource != null) {\n+          // Production case.\n+          unpackBuiltinsBzlZipResource(builtinsBzlZipResource, builtinsPath);\n+        } else {\n+          // Dummy case, use empty bundled builtins content.\n+          try {\n+            builtinsPath.createDirectoryAndParents();\n+            try (OutputStream os = builtinsPath.getRelative(\"exports.bzl\").getOutputStream()) {\n+              String emptyExports =\n+                  (\"exported_rules = {}\\n\" //\n+                      + \"exported_toplevels = {}\\n\"\n+                      + \"exported_to_java = {}\\n\");\n+              os.write(emptyExports.getBytes(UTF_8));\n+            }\n+          } catch (IOException ex) {\n+            throw new IllegalStateException(\"Failed to write dummy builtins root\", ex);\n+          }\n+        }\n+        builtinsRoot = Root.fromPath(builtinsPath);\n+      }\n \n       return new ConfiguredRuleClassProvider(\n           preludeLabel,\n           runfilesPrefix,\n           toolsRepository,\n-          builtinsBzlRoot,\n+          builtinsRoot,\n           builtinsBzlPackagePathInSource,\n           ImmutableMap.copyOf(ruleClassMap),\n           ImmutableMap.copyOf(ruleDefinitionMap),\n@@ -546,10 +614,15 @@ public String getToolsRepository() {\n    * <p>May be null in tests, in which case --experimental_builtins_bzl_path must point to a\n    * builtins root.\n    */\n-  @Nullable private final Path builtinsBzlRoot;\n+  @Nullable private final Root bundledBuiltinsRoot;\n \n-  /** The relative location of the builtins_bzl directory within a Bazel source tree. */\n-  private final String builtinsBzlPackagePathInSource;\n+  /**\n+   * The relative location of the builtins_bzl directory within a Bazel source tree.\n+   *\n+   * <p>May be null in tests, in which case --experimental_builtins_bzl_path may not be\n+   * \"%workspace%\".\n+   */\n+  @Nullable private final String builtinsBzlPackagePathInSource;\n \n   /** Maps rule class name to the metaclass instance for that rule. */\n   private final ImmutableMap<String, RuleClass> ruleClassMap;\n@@ -614,8 +687,8 @@ private ConfiguredRuleClassProvider(\n       Label preludeLabel,\n       String runfilesPrefix,\n       String toolsRepository,\n-      @Nullable Path builtinsBzlRoot,\n-      String builtinsBzlPackagePathInSource,\n+      @Nullable Root bundledBuiltinsRoot,\n+      @Nullable String builtinsBzlPackagePathInSource,\n       ImmutableMap<String, RuleClass> ruleClassMap,\n       ImmutableMap<String, RuleDefinition> ruleDefinitionMap,\n       ImmutableMap<String, NativeAspectClass> nativeAspectClassMap,\n@@ -640,7 +713,7 @@ private ConfiguredRuleClassProvider(\n     this.preludeLabel = preludeLabel;\n     this.runfilesPrefix = runfilesPrefix;\n     this.toolsRepository = toolsRepository;\n-    this.builtinsBzlRoot = builtinsBzlRoot;\n+    this.bundledBuiltinsRoot = bundledBuiltinsRoot;\n     this.builtinsBzlPackagePathInSource = builtinsBzlPackagePathInSource;\n     this.ruleClassMap = ruleClassMap;\n     this.ruleDefinitionMap = ruleDefinitionMap;\n@@ -720,11 +793,12 @@ public String getToolsRepository() {\n \n   @Override\n   @Nullable\n-  public Path getBuiltinsBzlRoot() {\n-    return builtinsBzlRoot;\n+  public Root getBundledBuiltinsRoot() {\n+    return bundledBuiltinsRoot;\n   }\n \n   @Override\n+  @Nullable\n   public String getBuiltinsBzlPackagePathInSource() {\n     return builtinsBzlPackagePathInSource;\n   }"
  }
]
