[
  {
    "sha": "2face10dc681bb4908df39f086f1da736b46f809",
    "filename": "src/main/java/de/tum/in/www1/artemis/service/connectors/jenkins/JenkinsUserManagementService.java",
    "status": "modified",
    "additions": 35,
    "deletions": 3,
    "changes": 38,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/40332da5ca8ccf86162f6887a034a6da42e9bcb3/src/main/java/de/tum/in/www1/artemis/service/connectors/jenkins/JenkinsUserManagementService.java",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/40332da5ca8ccf86162f6887a034a6da42e9bcb3/src/main/java/de/tum/in/www1/artemis/service/connectors/jenkins/JenkinsUserManagementService.java",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/main/java/de/tum/in/www1/artemis/service/connectors/jenkins/JenkinsUserManagementService.java?ref=40332da5ca8ccf86162f6887a034a6da42e9bcb3",
    "patch": "@@ -2,10 +2,12 @@\n \n import java.io.IOException;\n import java.net.URL;\n+import java.util.Optional;\n import java.util.Set;\n import java.util.stream.Collectors;\n import java.util.stream.Stream;\n \n+import org.hibernate.Hibernate;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Qualifier;\n@@ -41,6 +43,9 @@\n     @Value(\"${artemis.continuous-integration.url}\")\n     private URL jenkinsServerUrl;\n \n+    @Value(\"${artemis.continuous-integration.user}\")\n+    private String jenkinsAdminUsername;\n+\n     private final RestTemplate restTemplate;\n \n     private final JenkinsJobPermissionsService jenkinsJobPermissionsService;\n@@ -68,6 +73,10 @@ public JenkinsUserManagementService(@Qualifier(\"jenkinsRestTemplate\") RestTempla\n      */\n     @Override\n     public void createUser(User user) throws ContinuousIntegrationException {\n+        if (user.getLogin().equals(jenkinsAdminUsername)) {\n+            log.debug(\"Jenkins createUser: Skipping jenkinsAdminUser: {}.\", jenkinsAdminUsername);\n+            return;\n+        }\n         // Only create a user if it doesn't already exist.\n         if (getUser(user.getLogin()) != null) {\n             throw new JenkinsException(\"Cannot create user: \" + user.getLogin() + \" because the login already exists\");\n@@ -84,7 +93,7 @@ public void createUser(User user) throws ContinuousIntegrationException {\n             restTemplate.exchange(uri, HttpMethod.POST, getCreateUserFormHttpEntity(user), Void.class);\n \n             // Adds the user to groups of existing programming exercises\n-            addUserToGroups(user.getLogin(), user.getGroups());\n+            addUserToGroups(user.getLogin(), getUserWithGroups(user).getGroups());\n         }\n         catch (RestClientException e) {\n             throw new JenkinsException(\"Cannot create user: \" + user.getLogin(), e);\n@@ -114,6 +123,11 @@ public void createUser(User user) throws ContinuousIntegrationException {\n     @Override\n     public void deleteUser(User user) throws ContinuousIntegrationException {\n         var userLogin = user.getLogin();\n+        if (userLogin.equals(jenkinsAdminUsername)) {\n+            log.debug(\"Jenkins deleteUser: Skipping jenkinsAdminUser: {}.\", jenkinsAdminUsername);\n+            return;\n+        }\n+\n         // Only delete a user if it exists.\n         var jenkinsUser = getUser(userLogin);\n         if (jenkinsUser == null) {\n@@ -123,7 +137,7 @@ public void deleteUser(User user) throws ContinuousIntegrationException {\n         try {\n             var uri = UriComponentsBuilder.fromHttpUrl(jenkinsServerUrl.toString()).pathSegment(\"user\", userLogin, \"doDelete\").build().toUri();\n             restTemplate.exchange(uri, HttpMethod.POST, null, Void.class);\n-            removeUserFromGroups(userLogin, user.getGroups());\n+            removeUserFromGroups(userLogin, getUserWithGroups(user).getGroups());\n         }\n         catch (RestClientException e) {\n             throw new JenkinsException(\"Cannot delete user: \" + userLogin, e);\n@@ -140,6 +154,11 @@ public void deleteUser(User user) throws ContinuousIntegrationException {\n      */\n     @Override\n     public void updateUser(User user) throws ContinuousIntegrationException {\n+        if (user.getLogin().equals(jenkinsAdminUsername)) {\n+            log.debug(\"Jenkins updateUser: Skipping jenkinsAdminUser: {}.\", jenkinsAdminUsername);\n+            return;\n+        }\n+\n         // Only update a user if it exists.\n         var jenkinsUser = getUser(user.getLogin());\n         if (jenkinsUser == null) {\n@@ -171,7 +190,7 @@ public void updateUserLogin(String oldLogin, User user) throws ContinuousIntegra\n         // the new one.\n         var oldUser = new User();\n         oldUser.setLogin(oldLogin);\n-        oldUser.setGroups(user.getGroups());\n+        oldUser.setGroups(getUserWithGroups(user).getGroups());\n         deleteUser(oldUser);\n \n         createUser(user);\n@@ -363,4 +382,17 @@ private boolean isUserLoginLegal(User user) {\n         String regex = \"^[a-zA-Z0-9_-]*$\";\n         return user.getLogin().matches(regex);\n     }\n+\n+    private User getUserWithGroups(User user) throws JenkinsException {\n+        if (Hibernate.isInitialized(user.getGroups())) {\n+            return user;\n+        }\n+        log.debug(\"Groups of user were not initialized. Fetching groups from repository.\");\n+        Optional<User> userWithGroups = userRepository.findOneWithGroupsByLogin(user.getLogin());\n+        if (userWithGroups.isEmpty()) {\n+            throw new JenkinsException(\"Cannot find user in repository: \" + user.getLogin());\n+        }\n+\n+        return userWithGroups.get();\n+    }\n }"
  },
  {
    "sha": "a089ce909e5823977ada39dd0cd0296359cbd823",
    "filename": "src/main/java/de/tum/in/www1/artemis/service/user/UserService.java",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/40332da5ca8ccf86162f6887a034a6da42e9bcb3/src/main/java/de/tum/in/www1/artemis/service/user/UserService.java",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/40332da5ca8ccf86162f6887a034a6da42e9bcb3/src/main/java/de/tum/in/www1/artemis/service/user/UserService.java",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/main/java/de/tum/in/www1/artemis/service/user/UserService.java?ref=40332da5ca8ccf86162f6887a034a6da42e9bcb3",
    "patch": "@@ -246,6 +246,7 @@ public User registerUser(UserDTO userDTO, String password) {\n         saveUser(newUser);\n         // we need to save first so that the user can be found in the database in the subsequent method\n         optionalVcsUserManagementService.ifPresent(vcsUserManagementService -> vcsUserManagementService.createVcsUser(newUser));\n+        optionalCIUserManagementService.ifPresent(ciUserManagementService -> ciUserManagementService.createUser(newUser));\n         log.debug(\"Created Information for User: {}\", newUser);\n         return newUser;\n     }"
  }
]
