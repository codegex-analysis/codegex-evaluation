[
  {
    "sha": "3460de4567a3b18b4cd4766bb320578acd7b8920",
    "filename": "src/main/java/de/tum/in/www1/artemis/domain/Submission.java",
    "status": "modified",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/891cf824a960987a16c48ae4be5c99111e0aa5b7/src/main/java/de/tum/in/www1/artemis/domain/Submission.java",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/891cf824a960987a16c48ae4be5c99111e0aa5b7/src/main/java/de/tum/in/www1/artemis/domain/Submission.java",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/main/java/de/tum/in/www1/artemis/domain/Submission.java?ref=891cf824a960987a16c48ae4be5c99111e0aa5b7",
    "patch": "@@ -182,6 +182,18 @@ public void removeNullResults() {\n         return results.stream().filter(result -> result != null && !result.isAutomatic()).collect(Collectors.toList());\n     }\n \n+    /**\n+     * Get the manual result by id of the submission\n+     * @param resultId id of result\n+     *\n+     * @return a {@link Result} or null\n+     */\n+    @Nullable\n+    @JsonIgnore\n+    public Result getManualResultsById(long resultId) {\n+        return getManualResults().stream().filter(result1 -> result1.getId().equals(resultId)).findFirst().get();\n+    }\n+\n     /**\n      * Get the first result of the submission\n      *"
  },
  {
    "sha": "c4508ea16f1a5adbabb232519b7d38340dc8edc2",
    "filename": "src/main/java/de/tum/in/www1/artemis/repository/FileUploadSubmissionRepository.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/891cf824a960987a16c48ae4be5c99111e0aa5b7/src/main/java/de/tum/in/www1/artemis/repository/FileUploadSubmissionRepository.java",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/891cf824a960987a16c48ae4be5c99111e0aa5b7/src/main/java/de/tum/in/www1/artemis/repository/FileUploadSubmissionRepository.java",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/main/java/de/tum/in/www1/artemis/repository/FileUploadSubmissionRepository.java?ref=891cf824a960987a16c48ae4be5c99111e0aa5b7",
    "patch": "@@ -23,7 +23,7 @@\n      * @return the submission with its feedback and assessor\n      */\n     @Query(\"select distinct submission from FileUploadSubmission submission left join fetch submission.results r left join fetch r.feedbacks left join fetch r.assessor where submission.id = :#{#submissionId}\")\n-    Optional<FileUploadSubmission> findByIdWithEagerResultAndFeedback(@Param(\"submissionId\") Long submissionId);\n+    Optional<FileUploadSubmission> findByIdWithEagerResultAndAssessorAndFeedback(@Param(\"submissionId\") Long submissionId);\n \n     /**\n      * @param submissionId the submission id we are interested in"
  },
  {
    "sha": "b66fee690bd04c512d9636c34af85faf40d1791f",
    "filename": "src/main/java/de/tum/in/www1/artemis/repository/ModelingSubmissionRepository.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/891cf824a960987a16c48ae4be5c99111e0aa5b7/src/main/java/de/tum/in/www1/artemis/repository/ModelingSubmissionRepository.java",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/891cf824a960987a16c48ae4be5c99111e0aa5b7/src/main/java/de/tum/in/www1/artemis/repository/ModelingSubmissionRepository.java",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/main/java/de/tum/in/www1/artemis/repository/ModelingSubmissionRepository.java?ref=891cf824a960987a16c48ae4be5c99111e0aa5b7",
    "patch": "@@ -25,7 +25,7 @@\n     Optional<ModelingSubmission> findByIdWithEagerResult(@Param(\"submissionId\") Long submissionId);\n \n     @Query(\"select distinct submission from ModelingSubmission submission left join fetch submission.results r left join fetch r.feedbacks left join fetch r.assessor where submission.id = :#{#submissionId}\")\n-    Optional<ModelingSubmission> findByIdWithEagerResultAndFeedback(@Param(\"submissionId\") Long submissionId);\n+    Optional<ModelingSubmission> findByIdWithEagerResultAndAssessorAndFeedback(@Param(\"submissionId\") Long submissionId);\n \n     /**\n      * Load the modeling submission with the given id together with its result, the feedback list of the result, the assessor of the result, its participation and all results of"
  },
  {
    "sha": "01f7624aac003f701cc863587e58a93f9b0c08cb",
    "filename": "src/main/java/de/tum/in/www1/artemis/repository/StudentParticipationRepository.java",
    "status": "modified",
    "additions": 21,
    "deletions": 2,
    "changes": 23,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/891cf824a960987a16c48ae4be5c99111e0aa5b7/src/main/java/de/tum/in/www1/artemis/repository/StudentParticipationRepository.java",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/891cf824a960987a16c48ae4be5c99111e0aa5b7/src/main/java/de/tum/in/www1/artemis/repository/StudentParticipationRepository.java",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/main/java/de/tum/in/www1/artemis/repository/StudentParticipationRepository.java?ref=891cf824a960987a16c48ae4be5c99111e0aa5b7",
    "patch": "@@ -258,6 +258,18 @@ and not exists (select prs from participation.results prs\n     List<StudentParticipation> findByStudentIdAndIndividualExercisesWithEagerSubmissionsResultIgnoreTestRuns(@Param(\"studentId\") Long studentId,\n             @Param(\"exercises\") List<Exercise> exercises);\n \n+    @Query(\"\"\"\n+            SELECT DISTINCT p FROM StudentParticipation p\n+            LEFT JOIN FETCH p.submissions s\n+            LEFT JOIN FETCH s.results r\n+            LEFT JOIN FETCH r.assessor\n+            WHERE p.testRun = FALSE\n+            AND p.student.id = :#{#studentId}\n+            AND p.exercise in :#{#exercises}\n+            \"\"\")\n+    List<StudentParticipation> findByStudentIdAndIndividualExercisesWithEagerSubmissionsResultAndAssessorIgnoreTestRuns(@Param(\"studentId\") Long studentId,\n+            @Param(\"exercises\") List<Exercise> exercises);\n+\n     @Query(\"select distinct p from StudentParticipation p left join fetch p.submissions s left join fetch s.results r where p.testRun = true and p.student.id = :#{#studentId} and p.exercise in :#{#exercises}\")\n     List<StudentParticipation> findTestRunParticipationsByStudentIdAndIndividualExercisesWithEagerSubmissionsResult(@Param(\"studentId\") Long studentId,\n             @Param(\"exercises\") List<Exercise> exercises);\n@@ -420,14 +432,21 @@ default StudentParticipation findByIdWithSubmissionsElseThrow(long participation\n      * Distinguishes between student exams and test runs and only loads the respective participations\n      *\n      * @param studentExam studentExam with exercises loaded\n+     * @param withAssessor (only for non test runs) if assessor should be loaded with the result\n+     *\n      * @return student's participations with submissions and results\n      */\n-    default List<StudentParticipation> findByStudentExamWithEagerSubmissionsResult(StudentExam studentExam) {\n+    default List<StudentParticipation> findByStudentExamWithEagerSubmissionsResult(StudentExam studentExam, boolean withAssessor) {\n         if (studentExam.isTestRun()) {\n             return findTestRunParticipationsByStudentIdAndIndividualExercisesWithEagerSubmissionsResult(studentExam.getUser().getId(), studentExam.getExercises());\n         }\n         else {\n-            return findByStudentIdAndIndividualExercisesWithEagerSubmissionsResultIgnoreTestRuns(studentExam.getUser().getId(), studentExam.getExercises());\n+            if (withAssessor) {\n+                return findByStudentIdAndIndividualExercisesWithEagerSubmissionsResultAndAssessorIgnoreTestRuns(studentExam.getUser().getId(), studentExam.getExercises());\n+            }\n+            else {\n+                return findByStudentIdAndIndividualExercisesWithEagerSubmissionsResultIgnoreTestRuns(studentExam.getUser().getId(), studentExam.getExercises());\n+            }\n         }\n     }\n "
  },
  {
    "sha": "f0927eb28027616948e3a1045dacdd6c5e5163ed",
    "filename": "src/main/java/de/tum/in/www1/artemis/service/FileUploadSubmissionService.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/891cf824a960987a16c48ae4be5c99111e0aa5b7/src/main/java/de/tum/in/www1/artemis/service/FileUploadSubmissionService.java",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/891cf824a960987a16c48ae4be5c99111e0aa5b7/src/main/java/de/tum/in/www1/artemis/service/FileUploadSubmissionService.java",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/main/java/de/tum/in/www1/artemis/service/FileUploadSubmissionService.java?ref=891cf824a960987a16c48ae4be5c99111e0aa5b7",
    "patch": "@@ -236,8 +236,8 @@ public FileUploadSubmission lockAndGetFileUploadSubmissionWithoutResult(FileUplo\n      * @param submissionId the id of the submission that should be loaded from the database\n      * @return the file upload submission with the given id\n      */\n-    public FileUploadSubmission findOneWithEagerResultAndFeedback(Long submissionId) {\n-        return fileUploadSubmissionRepository.findByIdWithEagerResultAndFeedback(submissionId)\n+    public FileUploadSubmission findOneWithEagerResultAndAssessorAndFeedback(Long submissionId) {\n+        return fileUploadSubmissionRepository.findByIdWithEagerResultAndAssessorAndFeedback(submissionId)\n                 .orElseThrow(() -> new EntityNotFoundException(\"File Upload submission with id \\\"\" + submissionId + \"\\\" does not exist\"));\n     }\n "
  },
  {
    "sha": "2871342e27377d68154177426a161f2c997624c9",
    "filename": "src/main/java/de/tum/in/www1/artemis/service/ModelingSubmissionService.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/891cf824a960987a16c48ae4be5c99111e0aa5b7/src/main/java/de/tum/in/www1/artemis/service/ModelingSubmissionService.java",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/891cf824a960987a16c48ae4be5c99111e0aa5b7/src/main/java/de/tum/in/www1/artemis/service/ModelingSubmissionService.java",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/main/java/de/tum/in/www1/artemis/service/ModelingSubmissionService.java?ref=891cf824a960987a16c48ae4be5c99111e0aa5b7",
    "patch": "@@ -280,7 +280,7 @@ public ModelingSubmission findOne(Long submissionId) {\n      * @return the modeling submission with the given id\n      */\n     public ModelingSubmission findOneWithEagerResultAndFeedback(Long submissionId) {\n-        return modelingSubmissionRepository.findByIdWithEagerResultAndFeedback(submissionId)\n+        return modelingSubmissionRepository.findByIdWithEagerResultAndAssessorAndFeedback(submissionId)\n                 .orElseThrow(() -> new EntityNotFoundException(\"Modeling submission with id \\\"\" + submissionId + \"\\\" does not exist\"));\n     }\n "
  },
  {
    "sha": "01af1f28a377789164e594f0834c753b4afe56aa",
    "filename": "src/main/java/de/tum/in/www1/artemis/service/TextAssessmentService.java",
    "status": "modified",
    "additions": 2,
    "deletions": 3,
    "changes": 5,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/891cf824a960987a16c48ae4be5c99111e0aa5b7/src/main/java/de/tum/in/www1/artemis/service/TextAssessmentService.java",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/891cf824a960987a16c48ae4be5c99111e0aa5b7/src/main/java/de/tum/in/www1/artemis/service/TextAssessmentService.java",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/main/java/de/tum/in/www1/artemis/service/TextAssessmentService.java?ref=891cf824a960987a16c48ae4be5c99111e0aa5b7",
    "patch": "@@ -48,12 +48,11 @@ public TextAssessmentService(UserRepository userRepository, ComplaintResponseSer\n      *   4. Compute Fallback Text Blocks if needed\n      *\n      * @param textSubmission Text Submission to be assessed\n-     * @param correctionRound correction round for which we prepare the submission\n+     * @param result for which we prepare the submission\n      */\n-    public void prepareSubmissionForAssessment(TextSubmission textSubmission, int correctionRound) {\n+    public void prepareSubmissionForAssessment(TextSubmission textSubmission, Result result) {\n         final Participation participation = textSubmission.getParticipation();\n         final TextExercise exercise = (TextExercise) participation.getExercise();\n-        Result result = textSubmission.getResultForCorrectionRound(correctionRound);\n \n         final boolean computeFeedbackSuggestions = automaticTextFeedbackService.isPresent() && exercise.isAutomaticAssessmentEnabled();\n "
  },
  {
    "sha": "a25c6966397215903d004507a0aeefce3118e67b",
    "filename": "src/main/java/de/tum/in/www1/artemis/service/exam/ExamRegistrationService.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/891cf824a960987a16c48ae4be5c99111e0aa5b7/src/main/java/de/tum/in/www1/artemis/service/exam/ExamRegistrationService.java",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/891cf824a960987a16c48ae4be5c99111e0aa5b7/src/main/java/de/tum/in/www1/artemis/service/exam/ExamRegistrationService.java",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/main/java/de/tum/in/www1/artemis/service/exam/ExamRegistrationService.java?ref=891cf824a960987a16c48ae4be5c99111e0aa5b7",
    "patch": "@@ -219,7 +219,7 @@ private void removeStudentExam(StudentExam studentExam, boolean deleteParticipat\n \n         // Optionally delete participations and submissions\n         if (deleteParticipationsAndSubmission) {\n-            List<StudentParticipation> participations = studentParticipationRepository.findByStudentExamWithEagerSubmissionsResult(studentExam);\n+            List<StudentParticipation> participations = studentParticipationRepository.findByStudentExamWithEagerSubmissionsResult(studentExam, false);\n             for (var participation : participations) {\n                 participationService.delete(participation.getId(), true, true);\n             }"
  },
  {
    "sha": "fe96af0c9c84b5de71ce5f5ac2965f0cf3c61434",
    "filename": "src/main/java/de/tum/in/www1/artemis/service/exam/StudentExamService.java",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/891cf824a960987a16c48ae4be5c99111e0aa5b7/src/main/java/de/tum/in/www1/artemis/service/exam/StudentExamService.java",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/891cf824a960987a16c48ae4be5c99111e0aa5b7/src/main/java/de/tum/in/www1/artemis/service/exam/StudentExamService.java",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/main/java/de/tum/in/www1/artemis/service/exam/StudentExamService.java?ref=891cf824a960987a16c48ae4be5c99111e0aa5b7",
    "patch": "@@ -25,7 +25,6 @@\n import de.tum.in.www1.artemis.domain.participation.StudentParticipation;\n import de.tum.in.www1.artemis.domain.quiz.*;\n import de.tum.in.www1.artemis.repository.*;\n-import de.tum.in.www1.artemis.repository.UserRepository;\n import de.tum.in.www1.artemis.security.SecurityUtils;\n import de.tum.in.www1.artemis.service.ParticipationService;\n import de.tum.in.www1.artemis.service.SubmissionService;\n@@ -165,7 +164,7 @@ private void submitStudentExam(StudentExam studentExam) {\n     }\n \n     private void saveSubmissions(StudentExam studentExam, User currentUser) {\n-        List<StudentParticipation> existingParticipations = studentParticipationRepository.findByStudentExamWithEagerSubmissionsResult(studentExam);\n+        List<StudentParticipation> existingParticipations = studentParticipationRepository.findByStudentExamWithEagerSubmissionsResult(studentExam, false);\n \n         for (Exercise exercise : studentExam.getExercises()) {\n             // we do not apply the following checks for programming exercises or file upload exercises"
  },
  {
    "sha": "8383780dbe5f7e68aa5d75414d1d4a40ad3cac7b",
    "filename": "src/main/java/de/tum/in/www1/artemis/web/rest/FileUploadAssessmentResource.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/891cf824a960987a16c48ae4be5c99111e0aa5b7/src/main/java/de/tum/in/www1/artemis/web/rest/FileUploadAssessmentResource.java",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/891cf824a960987a16c48ae4be5c99111e0aa5b7/src/main/java/de/tum/in/www1/artemis/web/rest/FileUploadAssessmentResource.java",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/main/java/de/tum/in/www1/artemis/web/rest/FileUploadAssessmentResource.java?ref=891cf824a960987a16c48ae4be5c99111e0aa5b7",
    "patch": "@@ -85,7 +85,7 @@ public FileUploadAssessmentResource(AuthorizationCheckService authCheckService,\n     public ResponseEntity<Result> updateFileUploadAssessmentAfterComplaint(@PathVariable Long submissionId, @RequestBody AssessmentUpdate assessmentUpdate) {\n         log.debug(\"REST request to update the assessment of submission {} after complaint.\", submissionId);\n         User user = userRepository.getUserWithGroupsAndAuthorities();\n-        FileUploadSubmission fileUploadSubmission = fileUploadSubmissionService.findOneWithEagerResultAndFeedback(submissionId);\n+        FileUploadSubmission fileUploadSubmission = fileUploadSubmissionService.findOneWithEagerResultAndAssessorAndFeedback(submissionId);\n         StudentParticipation studentParticipation = (StudentParticipation) fileUploadSubmission.getParticipation();\n         long exerciseId = studentParticipation.getExercise().getId();\n         FileUploadExercise fileUploadExercise = fileUploadExerciseService.findOne(exerciseId);"
  },
  {
    "sha": "21a0ac89094af830b0c7c707efd981347b92e88b",
    "filename": "src/main/java/de/tum/in/www1/artemis/web/rest/FileUploadSubmissionResource.java",
    "status": "modified",
    "additions": 22,
    "deletions": 5,
    "changes": 27,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/891cf824a960987a16c48ae4be5c99111e0aa5b7/src/main/java/de/tum/in/www1/artemis/web/rest/FileUploadSubmissionResource.java",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/891cf824a960987a16c48ae4be5c99111e0aa5b7/src/main/java/de/tum/in/www1/artemis/web/rest/FileUploadSubmissionResource.java",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/main/java/de/tum/in/www1/artemis/web/rest/FileUploadSubmissionResource.java?ref=891cf824a960987a16c48ae4be5c99111e0aa5b7",
    "patch": "@@ -147,29 +147,46 @@ public FileUploadSubmissionResource(SubmissionRepository submissionRepository, R\n      *\n      * @param submissionId the id of the fileUploadSubmission to retrieve\n      * @param correctionRound the correctionRound of the result we want to receive\n+     * @param resultId the resultId for which we want do get the submission\n      * @return the ResponseEntity with status 200 (OK) and with body the fileUploadSubmission, or with status 404 (Not Found)\n      */\n     @GetMapping(\"/file-upload-submissions/{submissionId}\")\n     @PreAuthorize(\"hasAnyRole('TA','INSTRUCTOR','ADMIN')\")\n     public ResponseEntity<FileUploadSubmission> getFileUploadSubmission(@PathVariable Long submissionId,\n-            @RequestParam(value = \"correction-round\", defaultValue = \"0\") int correctionRound) {\n+            @RequestParam(value = \"correction-round\", defaultValue = \"0\") int correctionRound, @RequestParam(value = \"resultId\", defaultValue = \"0\") long resultId) {\n         log.debug(\"REST request to get FileUploadSubmission with id: {}\", submissionId);\n         var fileUploadSubmission = fileUploadSubmissionService.findOne(submissionId);\n         var studentParticipation = (StudentParticipation) fileUploadSubmission.getParticipation();\n         var fileUploadExercise = (FileUploadExercise) studentParticipation.getExercise();\n         var gradingCriteria = gradingCriterionService.findByExerciseIdWithEagerGradingCriteria(fileUploadExercise.getId());\n-        fileUploadExercise.setGradingCriteria(gradingCriteria);\n+\n         User user = userRepository.getUserWithGroupsAndAuthorities();\n-        if (!authCheckService.isAtLeastTeachingAssistantForExercise(fileUploadExercise, user)) {\n+        if (!authCheckService.isAtLeastTeachingAssistantForExercise(fileUploadExercise, user)\n+                || (resultId > 0 && !authCheckService.isAtLeastInstructorForExercise(fileUploadExercise, user))) {\n             return forbidden();\n         }\n-        fileUploadSubmission = fileUploadSubmissionService.lockAndGetFileUploadSubmission(submissionId, fileUploadExercise, correctionRound);\n+\n+        fileUploadExercise.setGradingCriteria(gradingCriteria);\n+\n+        if (resultId > 0) {\n+            fileUploadSubmission = fileUploadSubmissionService.findOneWithEagerResultAndAssessorAndFeedback(submissionId);\n+            Result result = fileUploadSubmission.getManualResultsById(resultId);\n+            if (result == null) {\n+                return ResponseEntity.badRequest()\n+                        .headers(HeaderUtil.createFailureAlert(applicationName, true, \"FileUploadSubmission\", \"ResultNotFound\", \"No Result was found for the given ID.\"))\n+                        .body(null);\n+            }\n+        }\n+        else {\n+            fileUploadSubmission = fileUploadSubmissionService.lockAndGetFileUploadSubmission(submissionId, fileUploadExercise, correctionRound);\n+        }\n+\n         // Make sure the exercise is connected to the participation in the json response\n         studentParticipation.setExercise(fileUploadExercise);\n         fileUploadSubmission.getParticipation().getExercise().setGradingCriteria(gradingCriteria);\n         this.fileUploadSubmissionService.hideDetails(fileUploadSubmission, user);\n \n-        if (correctionRound == 0 && fileUploadSubmission.getResults().size() == 2) {\n+        if (correctionRound == 0 && resultId == 0 && fileUploadSubmission.getResults().size() == 2) {\n             var resultList = new ArrayList<Result>();\n             resultList.add(fileUploadSubmission.getFirstResult());\n             fileUploadSubmission.setResults(resultList);"
  },
  {
    "sha": "daedbff0a189fbc02c702bf32c7f5426835481aa",
    "filename": "src/main/java/de/tum/in/www1/artemis/web/rest/ModelingSubmissionResource.java",
    "status": "modified",
    "additions": 17,
    "deletions": 3,
    "changes": 20,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/891cf824a960987a16c48ae4be5c99111e0aa5b7/src/main/java/de/tum/in/www1/artemis/web/rest/ModelingSubmissionResource.java",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/891cf824a960987a16c48ae4be5c99111e0aa5b7/src/main/java/de/tum/in/www1/artemis/web/rest/ModelingSubmissionResource.java",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/main/java/de/tum/in/www1/artemis/web/rest/ModelingSubmissionResource.java?ref=891cf824a960987a16c48ae4be5c99111e0aa5b7",
    "patch": "@@ -176,13 +176,14 @@ public ModelingSubmissionResource(SubmissionRepository submissionRepository, Res\n      *\n      * @param submissionId the id of the modelingSubmission to retrieve\n      * @param correctionRound correction round for which we prepare the submission\n+     * @param resultId the resultId for which we want do get the submission\n      * @return the ResponseEntity with status 200 (OK) and with body the modelingSubmission for the given id, or with status 404 (Not Found) if the modelingSubmission could not be\n      *         found\n      */\n     @GetMapping(\"/modeling-submissions/{submissionId}\")\n     @PreAuthorize(\"hasAnyRole('TA', 'INSTRUCTOR', 'ADMIN')\")\n     public ResponseEntity<ModelingSubmission> getModelingSubmission(@PathVariable Long submissionId,\n-            @RequestParam(value = \"correction-round\", defaultValue = \"0\") int correctionRound) {\n+            @RequestParam(value = \"correction-round\", defaultValue = \"0\") int correctionRound, @RequestParam(value = \"resultId\", defaultValue = \"0\") long resultId) {\n         log.debug(\"REST request to get ModelingSubmission with id: {}\", submissionId);\n         // TODO CZ: include exerciseId in path to get exercise for auth check more easily?\n         var modelingSubmission = modelingSubmissionService.findOne(submissionId);\n@@ -191,10 +192,23 @@ public ModelingSubmissionResource(SubmissionRepository submissionRepository, Res\n         var gradingCriteria = gradingCriterionService.findByExerciseIdWithEagerGradingCriteria(modelingExercise.getId());\n         modelingExercise.setGradingCriteria(gradingCriteria);\n         final User user = userRepository.getUserWithGroupsAndAuthorities();\n-        if (!authCheckService.isAtLeastTeachingAssistantForExercise(modelingExercise, user)) {\n+        if (!authCheckService.isAtLeastTeachingAssistantForExercise(modelingExercise, user)\n+                || (resultId > 0 && !authCheckService.isAtLeastInstructorForExercise(modelingExercise, user))) {\n             return forbidden();\n         }\n-        modelingSubmission = modelingSubmissionService.lockAndGetModelingSubmission(submissionId, modelingExercise, correctionRound);\n+\n+        if (resultId > 0) {\n+            modelingSubmission = modelingSubmissionService.findOneWithEagerResultAndFeedback(submissionId);\n+            // check if result exists\n+            Result result = modelingSubmission.getManualResultsById(resultId);\n+            if (result == null) {\n+                return ResponseEntity.badRequest()\n+                        .headers(HeaderUtil.createFailureAlert(applicationName, true, \"ModelingSubmission\", \"ResultNotFound\", \"No Result was found for the given ID.\")).body(null);\n+            }\n+        }\n+        else {\n+            modelingSubmission = modelingSubmissionService.lockAndGetModelingSubmission(submissionId, modelingExercise, correctionRound);\n+        }\n         // Make sure the exercise is connected to the participation in the json response\n         studentParticipation.setExercise(modelingExercise);\n         modelingSubmission.getParticipation().getExercise().setGradingCriteria(gradingCriteria);"
  },
  {
    "sha": "ab7b3449f4c1f1b430121c6f48811f99c4b90a68",
    "filename": "src/main/java/de/tum/in/www1/artemis/web/rest/StudentExamResource.java",
    "status": "modified",
    "additions": 7,
    "deletions": 4,
    "changes": 11,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/891cf824a960987a16c48ae4be5c99111e0aa5b7/src/main/java/de/tum/in/www1/artemis/web/rest/StudentExamResource.java",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/891cf824a960987a16c48ae4be5c99111e0aa5b7/src/main/java/de/tum/in/www1/artemis/web/rest/StudentExamResource.java",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/main/java/de/tum/in/www1/artemis/web/rest/StudentExamResource.java?ref=891cf824a960987a16c48ae4be5c99111e0aa5b7",
    "patch": "@@ -29,7 +29,7 @@\n import de.tum.in.www1.artemis.domain.quiz.QuizExercise;\n import de.tum.in.www1.artemis.domain.quiz.QuizSubmission;\n import de.tum.in.www1.artemis.repository.*;\n-import de.tum.in.www1.artemis.service.*;\n+import de.tum.in.www1.artemis.service.AuthorizationCheckService;\n import de.tum.in.www1.artemis.service.exam.*;\n import de.tum.in.www1.artemis.service.util.HttpRequestUtils;\n import de.tum.in.www1.artemis.web.rest.errors.EntityNotFoundException;\n@@ -109,7 +109,7 @@ public StudentExamResource(ExamAccessService examAccessService, StudentExamServi\n \n         // fetch participations, submissions and results for these exercises, note: exams only contain individual exercises for now\n         // fetching all participations at once is more effective\n-        List<StudentParticipation> participations = studentParticipationRepository.findByStudentExamWithEagerSubmissionsResult(studentExam);\n+        List<StudentParticipation> participations = studentParticipationRepository.findByStudentExamWithEagerSubmissionsResult(studentExam, true);\n \n         // connect the exercises and student participations correctly and make sure all relevant associations are available\n         for (Exercise exercise : studentExam.getExercises()) {\n@@ -514,7 +514,7 @@ private void prepareStudentExamForConduction(HttpServletRequest request, User cu\n     private void fetchParticipationsSubmissionsAndResultsForStudentExam(StudentExam studentExam, User currentUser) {\n         // fetch participations, submissions and results for these exercises, note: exams only contain individual exercises for now\n         // fetching all participations at once is more effective\n-        List<StudentParticipation> participations = studentParticipationRepository.findByStudentExamWithEagerSubmissionsResult(studentExam);\n+        List<StudentParticipation> participations = studentParticipationRepository.findByStudentExamWithEagerSubmissionsResult(studentExam, false);\n \n         boolean isAtLeastInstructor = authorizationCheckService.isAtLeastInstructorInCourse(studentExam.getExam().getCourse(), currentUser);\n \n@@ -538,7 +538,10 @@ private void fetchParticipationsSubmissionsAndResultsForStudentExam(StudentExam\n     private void filterParticipation(StudentExam studentExam, Exercise exercise, List<StudentParticipation> participations, boolean isAtLeastInstructor) {\n         // remove the unnecessary inner course attribute\n         exercise.setCourse(null);\n-        exercise.setExerciseGroup(null);\n+\n+        if (!isAtLeastInstructor) {\n+            exercise.setExerciseGroup(null);\n+        }\n \n         if (exercise instanceof ProgrammingExercise) {\n             ((ProgrammingExercise) exercise).setTestRepositoryUrl(null);"
  },
  {
    "sha": "370c40e9172346728ffea5b700dc7b1aa4671e0b",
    "filename": "src/main/java/de/tum/in/www1/artemis/web/rest/TextAssessmentResource.java",
    "status": "modified",
    "additions": 40,
    "deletions": 11,
    "changes": 51,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/891cf824a960987a16c48ae4be5c99111e0aa5b7/src/main/java/de/tum/in/www1/artemis/web/rest/TextAssessmentResource.java",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/891cf824a960987a16c48ae4be5c99111e0aa5b7/src/main/java/de/tum/in/www1/artemis/web/rest/TextAssessmentResource.java",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/main/java/de/tum/in/www1/artemis/web/rest/TextAssessmentResource.java?ref=891cf824a960987a16c48ae4be5c99111e0aa5b7",
    "patch": "@@ -3,6 +3,7 @@\n import static de.tum.in.www1.artemis.web.rest.util.ResponseUtil.forbidden;\n import static java.util.stream.Collectors.toSet;\n \n+import java.util.Collections;\n import java.util.List;\n import java.util.Optional;\n import java.util.Set;\n@@ -252,12 +253,14 @@ public TextAssessmentResource(AuthorizationCheckService authCheckService, TextAs\n      *\n      * @param submissionId the id of the submission we want\n      * @param correctionRound correction round for which we want the submission\n+     * @param resultId if result already exists, we want to get the submission for this specific result\n      * @return a Participation of the tutor in the submission\n      */\n     @GetMapping(\"/submission/{submissionId}\")\n     @PreAuthorize(\"hasAnyRole('TA', 'INSTRUCTOR', 'ADMIN')\")\n     public ResponseEntity<Participation> retrieveParticipationForSubmission(@PathVariable Long submissionId,\n-            @RequestParam(value = \"correction-round\", defaultValue = \"0\") int correctionRound) {\n+            @RequestParam(value = \"correction-round\", defaultValue = \"0\") int correctionRound, @RequestParam(value = \"resultId\", defaultValue = \"0\") long resultId) {\n+\n         log.debug(\"REST request to get data for tutors text assessment submission: {}\", submissionId);\n \n         final Optional<TextSubmission> optionalTextSubmission = textSubmissionRepository.findByIdWithEagerParticipationExerciseResultAssessor(submissionId);\n@@ -270,20 +273,41 @@ public TextAssessmentResource(AuthorizationCheckService authCheckService, TextAs\n         final TextSubmission textSubmission = optionalTextSubmission.get();\n         final Participation participation = textSubmission.getParticipation();\n         final TextExercise exercise = (TextExercise) participation.getExercise();\n-        Result result = textSubmission.getResultForCorrectionRound(correctionRound);\n-\n         final User user = userRepository.getUserWithGroupsAndAuthorities();\n         checkAuthorization(exercise, user);\n         final boolean isAtLeastInstructorForExercise = authCheckService.isAtLeastInstructorForExercise(exercise, user);\n \n-        if (result != null && !isAtLeastInstructorForExercise && result.getAssessor() != null && !result.getAssessor().getLogin().equals(user.getLogin())\n-                && result.getCompletionDate() == null) {\n-            // If we already have a result, we need to check if it is locked.\n-            throw new BadRequestAlertException(\"This submission is being assessed by another tutor\", ENTITY_NAME, \"alreadyAssessed\");\n+        if (!authCheckService.isAtLeastTeachingAssistantForExercise(exercise, user) || (resultId > 0 && !isAtLeastInstructorForExercise)) {\n+            return forbidden();\n+        }\n+\n+        Result result;\n+        if (resultId > 0) {\n+            // in case resultId is set we get result by id\n+            result = textSubmission.getManualResultsById(resultId);\n+\n+            if (result == null) {\n+                return ResponseEntity.badRequest()\n+                        .headers(HeaderUtil.createFailureAlert(applicationName, true, \"TextSubmission\", \"ResultNotFound\", \"No Result was found for the given ID.\")).body(null);\n+            }\n+        }\n+        else {\n+            // in case no resultId is set we get result by correctionRound\n+            result = textSubmission.getResultForCorrectionRound(correctionRound);\n+\n+            if (result != null && !isAtLeastInstructorForExercise && result.getAssessor() != null && !result.getAssessor().getLogin().equals(user.getLogin())\n+                    && result.getCompletionDate() == null) {\n+                // If we already have a result, we need to check if it is locked.\n+                throw new BadRequestAlertException(\"This submission is being assessed by another tutor\", ENTITY_NAME, \"alreadyAssessed\");\n+            }\n+\n+            textSubmissionService.lockTextSubmissionToBeAssessed(textSubmission, correctionRound);\n+            // set it since it has changed\n+            result = textSubmission.getResultForCorrectionRound(correctionRound);\n         }\n \n-        textSubmissionService.lockTextSubmissionToBeAssessed(textSubmission, correctionRound);\n-        textAssessmentService.prepareSubmissionForAssessment(textSubmission, correctionRound);\n+        // prepare and load in all feedbacks\n+        textAssessmentService.prepareSubmissionForAssessment(textSubmission, result);\n \n         List<GradingCriterion> gradingCriteria = gradingCriterionService.findByExerciseIdWithEagerGradingCriteria(exercise.getId());\n         exercise.setGradingCriteria(gradingCriteria);\n@@ -295,9 +319,14 @@ public TextAssessmentResource(AuthorizationCheckService authCheckService, TextAs\n         textSubmission.getResults().forEach(r -> r.setSubmission(null));\n \n         // set result again as it was changed\n-        result = textSubmission.getResultForCorrectionRound(correctionRound);\n+        if (resultId > 0) {\n+            result = textSubmission.getManualResultsById(resultId);\n+            textSubmission.setResults(Collections.singletonList(result));\n+        }\n+        else {\n+            result = textSubmission.getResultForCorrectionRound(correctionRound);\n+        }\n \n-        // sets results for participation as legacy requires it, will change in follow up NR SE\n         participation.setResults(Set.copyOf(textSubmission.getResults()));\n \n         final ResponseEntity.BodyBuilder bodyBuilder = ResponseEntity.ok();"
  },
  {
    "sha": "385ec299797f43d9245bcd0ae48648782dcbe73f",
    "filename": "src/main/java/de/tum/in/www1/artemis/web/rest/TextSubmissionResource.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/891cf824a960987a16c48ae4be5c99111e0aa5b7/src/main/java/de/tum/in/www1/artemis/web/rest/TextSubmissionResource.java",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/891cf824a960987a16c48ae4be5c99111e0aa5b7/src/main/java/de/tum/in/www1/artemis/web/rest/TextSubmissionResource.java",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/main/java/de/tum/in/www1/artemis/web/rest/TextSubmissionResource.java?ref=891cf824a960987a16c48ae4be5c99111e0aa5b7",
    "patch": "@@ -272,7 +272,7 @@ else if (!authorizationCheckService.isAtLeastInstructorForExercise(exercise)) {\n         final TextSubmission textSubmission;\n         if (lockSubmission) {\n             textSubmission = textSubmissionService.findAndLockTextSubmissionToBeAssessed((TextExercise) exercise, exercise.isExamExercise(), correctionRound);\n-            textAssessmentService.prepareSubmissionForAssessment(textSubmission, correctionRound);\n+            textAssessmentService.prepareSubmissionForAssessment(textSubmission, textSubmission.getResultForCorrectionRound(correctionRound));\n         }\n         else {\n             Optional<TextSubmission> optionalTextSubmission;"
  },
  {
    "sha": "ef31dc984e4b9be3e4a4a63619350d65d9ce52f2",
    "filename": "src/main/webapp/app/entities/submission.model.ts",
    "status": "modified",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/891cf824a960987a16c48ae4be5c99111e0aa5b7/src/main/webapp/app/entities/submission.model.ts",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/891cf824a960987a16c48ae4be5c99111e0aa5b7/src/main/webapp/app/entities/submission.model.ts",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/main/webapp/app/entities/submission.model.ts?ref=891cf824a960987a16c48ae4be5c99111e0aa5b7",
    "patch": "@@ -76,6 +76,17 @@ export function getSubmissionResultByCorrectionRound(submission: Submission | un\n     return undefined;\n }\n \n+/**\n+ * Used to access a submissions result for a specific id\n+ *\n+ * @param submission\n+ * @param resultId\n+ * @returns the results or undefined if submission or the result for the requested id is undefined\n+ */\n+export function getSubmissionResultById(submission: Submission | undefined, resultId: number): Result | undefined {\n+    return submission?.results?.find((result) => result.id === resultId);\n+}\n+\n /**\n  * Used to set / override the latest result in the results list, and set / override the\n  * var latestResult"
  },
  {
    "sha": "c3a966bd8313344900cb14477dd95aca13fbd027",
    "filename": "src/main/webapp/app/exam/manage/exam-management.route.ts",
    "status": "modified",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/891cf824a960987a16c48ae4be5c99111e0aa5b7/src/main/webapp/app/exam/manage/exam-management.route.ts",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/891cf824a960987a16c48ae4be5c99111e0aa5b7/src/main/webapp/app/exam/manage/exam-management.route.ts",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/main/webapp/app/exam/manage/exam-management.route.ts?ref=891cf824a960987a16c48ae4be5c99111e0aa5b7",
    "patch": "@@ -620,6 +620,25 @@ export const examManagementRoute: Routes = [\n         },\n         canActivate: [UserRouteAccessService],\n     },\n+    {\n+        path: ':examId/exercise-groups/:exerciseGroupId/file-upload-exercises/:exerciseId/submissions/:submissionId/assessments/:resultId',\n+        component: FileUploadAssessmentComponent,\n+        data: {\n+            authorities: [Authority.ADMIN, Authority.INSTRUCTOR, Authority.TA],\n+            pageTitle: 'artemisApp.fileUploadExercise.home.title',\n+        },\n+        canActivate: [UserRouteAccessService],\n+    },\n+    {\n+        path: ':examId/exercise-groups/:exerciseGroupId/modeling-exercises/:exerciseId/submissions/:submissionId/assessments/:resultId',\n+        component: ModelingAssessmentEditorComponent,\n+        data: {\n+            authorities: [Authority.ADMIN, Authority.INSTRUCTOR],\n+            usePathForBreadcrumbs: true,\n+            pageTitle: 'artemisApp.apollonDiagram.detail.title',\n+        },\n+        canActivate: [UserRouteAccessService],\n+    },\n ];\n \n const EXAM_MANAGEMENT_ROUTES = [...examManagementRoute];"
  },
  {
    "sha": "be6d048c4ee154150e08fde0bc83c20b61b0fdd7",
    "filename": "src/main/webapp/app/exam/manage/student-exams/student-exam-detail.component.html",
    "status": "modified",
    "additions": 75,
    "deletions": 4,
    "changes": 79,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/891cf824a960987a16c48ae4be5c99111e0aa5b7/src/main/webapp/app/exam/manage/student-exams/student-exam-detail.component.html",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/891cf824a960987a16c48ae4be5c99111e0aa5b7/src/main/webapp/app/exam/manage/student-exams/student-exam-detail.component.html",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/main/webapp/app/exam/manage/student-exams/student-exam-detail.component.html?ref=891cf824a960987a16c48ae4be5c99111e0aa5b7",
    "patch": "@@ -133,6 +133,12 @@ <h5><span jhiTranslate=\"artemisApp.studentExamDetail.exercises\">Exercises</span>\n                         <th>\n                             <span jhiTranslate=\"artemisApp.studentExamDetail.reviewer\">Reviewer</span>\n                         </th>\n+                        <th>\n+                            <span>Has Complaint</span>\n+                        </th>\n+                        <th>\n+                            <span jhiTranslate=\"artemisApp.assessment.dashboard.columns.action\">Action</span>\n+                        </th>\n                     </tr>\n                 </thead>\n                 <tbody>\n@@ -147,8 +153,8 @@ <h5><span jhiTranslate=\"artemisApp.studentExamDetail.exercises\">Exercises</span>\n                             {{ exercise?.title }}\n                         </td>\n                         <td class=\"align-middle\">\n-                            <ng-container *ngIf=\"exercise?.studentParticipations && exercise?.studentParticipations.length > 0 && (exercise?.studentParticipations)![0].results\">\n-                                {{ rounding(((exercise?.studentParticipations)![0].results![0].score * exercise?.maxPoints) / 100) }}\n+                            <ng-container *ngIf=\"exercise?.studentParticipations?.length > 0 && exercise.studentParticipations![0].results?.length > 0\">\n+                                {{ rounding(((exercise?.studentParticipations)![0].results[0].score * exercise?.maxPoints) / 100) }}\n                             </ng-container>\n                         </td>\n                         <td class=\"align-middle\">\n@@ -162,15 +168,78 @@ <h5><span jhiTranslate=\"artemisApp.studentExamDetail.exercises\">Exercises</span>\n                                 *ngIf=\"\n                                     exercise?.studentParticipations &&\n                                         exercise?.studentParticipations.length > 0 &&\n-                                        (exercise?.studentParticipations)![0].results &&\n+                                        (exercise?.studentParticipations)![0].results?.length > 0 &&\n                                         (exercise?.studentParticipations)![0].results[0].assessor;\n                                     else noAssessor\n                                 \"\n                             >\n-                                {{ (exercise?.studentParticipations)![0].results[0].assessor.name }}\n+                                {{ (exercise?.studentParticipations)![0].results[0].assessor?.name }}\n                             </ng-container>\n                             <ng-template #noAssessor></ng-template>\n                         </td>\n+                        <td class=\"align-middle\">\n+                            <span\n+                                *ngIf=\"\n+                                    exercise?.studentParticipations?.length > 0 &&\n+                                    (exercise?.studentParticipations)![0].results?.length > 0 &&\n+                                    (exercise?.studentParticipations)![0].results[0].hasComplaint\n+                                \"\n+                                >Yes</span\n+                            >\n+                            <span\n+                                *ngIf=\"\n+                                    !(\n+                                        exercise?.studentParticipations?.length > 0 &&\n+                                        (exercise?.studentParticipations)![0].results?.length > 0 &&\n+                                        (exercise?.studentParticipations)![0].results[0].hasComplaint\n+                                    )\n+                                \"\n+                                >No</span\n+                            >\n+                        </td>\n+                        <td>\n+                            <div *ngIf=\"course?.isAtLeastInstructor && exercise?.studentParticipations && exercise.type != ExerciseType.QUIZ\">\n+                                <div *ngIf=\"(exercise?.studentParticipations)![0].results?.length > 0 && exercise.type != ExerciseType.PROGRAMMING\">\n+                                    <!-- in case of existing result-->\n+                                    <a\n+                                        [class.disabled]=\"busy\"\n+                                        [queryParams]=\"{ testRun: this.isTestRun }\"\n+                                        [routerLink]=\"\n+                                            getAssessmentLink(exercise, (exercise?.studentParticipations)![0].submissions[0], (exercise?.studentParticipations)![0].results[0].id)\n+                                        \"\n+                                        class=\"btn btn-primary btn-sm mb-1\"\n+                                    >\n+                                        <fa-icon [fixedWidth]=\"true\" [icon]=\"'folder-open'\"></fa-icon>\n+                                        <span jhiTranslate=\"artemisApp.studentExamDetail.openLatestAssessment\"></span>\n+                                    </a>\n+                                </div>\n+\n+                                <div\n+                                    *ngIf=\"\n+                                        (exercise?.studentParticipations)![0].submissions?.length > 0 &&\n+                                        !((exercise?.studentParticipations)![0].results?.length > 0) &&\n+                                        exercise.type != ExerciseType.PROGRAMMING\n+                                    \"\n+                                >\n+                                    <!-- in case of new result-->\n+                                    <a\n+                                        [class.disabled]=\"busy\"\n+                                        [queryParams]=\"{ testRun: this.isTestRun }\"\n+                                        [routerLink]=\"getAssessmentLink(exercise, (exercise?.studentParticipations)![0]?.submissions[0])\"\n+                                        class=\"btn btn-primary btn-sm mb-1\"\n+                                    >\n+                                        <fa-icon [fixedWidth]=\"true\" [icon]=\"'folder-open'\"></fa-icon>\n+                                        {{ 'artemisApp.assessment.dashboard.actions.assess' | artemisTranslate }}\n+                                    </a>\n+                                </div>\n+                                <div *ngIf=\"exercise.type === ExerciseType.PROGRAMMING\">\n+                                    <a [class.disabled]=\"busy\" [routerLink]=\"getAssessmentLink(exercise)\" class=\"btn btn-primary btn-sm mb-1\">\n+                                        <fa-icon [fixedWidth]=\"true\" [icon]=\"'folder-open'\"></fa-icon>\n+                                        {{ 'artemisApp.examManagement.assessmentDashboard' | artemisTranslate }}\n+                                    </a>\n+                                </div>\n+                            </div>\n+                        </td>\n                     </tr>\n                     <tr>\n                         <td></td>\n@@ -188,6 +257,8 @@ <h5><span jhiTranslate=\"artemisApp.studentExamDetail.exercises\">Exercises</span>\n                             <u> {{ bonusTotalPoints }} </u>\n                         </td>\n                         <td></td>\n+                        <td></td>\n+                        <td></td>\n                     </tr>\n                 </tbody>\n             </table>"
  },
  {
    "sha": "f0713e179819397a7dba05ddae15c228cd22d897",
    "filename": "src/main/webapp/app/exam/manage/student-exams/student-exam-detail.component.ts",
    "status": "modified",
    "additions": 34,
    "deletions": 1,
    "changes": 35,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/891cf824a960987a16c48ae4be5c99111e0aa5b7/src/main/webapp/app/exam/manage/student-exams/student-exam-detail.component.ts",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/891cf824a960987a16c48ae4be5c99111e0aa5b7/src/main/webapp/app/exam/manage/student-exams/student-exam-detail.component.ts",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/main/webapp/app/exam/manage/student-exams/student-exam-detail.component.ts?ref=891cf824a960987a16c48ae4be5c99111e0aa5b7",
    "patch": "@@ -12,6 +12,8 @@ import { JhiAlertService } from 'ng-jhipster';\n import { round } from 'app/shared/util/utils';\n import * as moment from 'moment';\n import { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n+import { getLatestSubmissionResult, setLatestSubmissionResult, Submission } from 'app/entities/submission.model';\n+import { getExerciseSubmissionsLink, getLinkToSubmissionAssessment } from 'app/utils/navigation.utils';\n \n @Component({\n     selector: 'jhi-student-exam-detail',\n@@ -30,6 +32,9 @@ export class StudentExamDetailComponent implements OnInit {\n     achievedTotalPoints = 0;\n     bonusTotalPoints = 0;\n     busy = false;\n+    openingAssessmentEditorForNewSubmission = false;\n+    readonly ExerciseType = ExerciseType;\n+    examId: number;\n \n     constructor(\n         private route: ActivatedRoute,\n@@ -53,6 +58,7 @@ export class StudentExamDetailComponent implements OnInit {\n      */\n     loadStudentExam() {\n         this.courseId = Number(this.route.snapshot.paramMap.get('courseId'));\n+        this.examId = Number(this.route.snapshot.paramMap.get('examId'));\n         this.route.data.subscribe(({ studentExam }) => this.setStudentExam(studentExam));\n \n         this.courseService.find(this.courseId).subscribe((courseResponse) => {\n@@ -118,8 +124,13 @@ export class StudentExamDetailComponent implements OnInit {\n                 exercise.studentParticipations?.length &&\n                 exercise.studentParticipations.length > 0 &&\n                 exercise.studentParticipations[0].results?.length &&\n-                exercise.studentParticipations[0].results.length > 0\n+                exercise.studentParticipations[0].results!.length > 0\n             ) {\n+                if (exercise!.studentParticipations[0].submissions && exercise!.studentParticipations[0].submissions!.length > 0) {\n+                    exercise!.studentParticipations[0].submissions![0].results! = exercise.studentParticipations[0].results;\n+                    setLatestSubmissionResult(exercise?.studentParticipations[0].submissions?.[0], getLatestSubmissionResult(exercise?.studentParticipations[0].submissions?.[0]));\n+                }\n+\n                 this.achievedTotalPoints += this.rounding((exercise.studentParticipations[0].results[0].score! * exercise.maxPoints!) / 100);\n             }\n         });\n@@ -209,4 +220,26 @@ export class StudentExamDetailComponent implements OnInit {\n             () => {},\n         );\n     }\n+\n+    /**\n+     * get the link for the assessment of a specific submission of the current exercise\n+     * @param exercise\n+     * @param submission\n+     * @param resultId\n+     */\n+    getAssessmentLink(exercise: Exercise, submission?: Submission, resultId?: number) {\n+        let route;\n+        if (!exercise || !exercise.type) {\n+            return;\n+        }\n+\n+        if (exercise.type === ExerciseType.PROGRAMMING) {\n+            route = getExerciseSubmissionsLink(exercise.type, this.courseId, exercise.id!, this.examId, exercise.exerciseGroup?.id!);\n+        } else if (submission) {\n+            this.openingAssessmentEditorForNewSubmission = true;\n+            route = getLinkToSubmissionAssessment(exercise.type, this.courseId, exercise.id!, submission.id!, this.examId, exercise.exerciseGroup?.id!, resultId);\n+            this.openingAssessmentEditorForNewSubmission = false;\n+        }\n+        return route;\n+    }\n }"
  },
  {
    "sha": "764d452c54dfcb77384665dda68b8fd693c95c09",
    "filename": "src/main/webapp/app/exercises/file-upload/assess/file-upload-assessment.component.ts",
    "status": "modified",
    "additions": 23,
    "deletions": 12,
    "changes": 35,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/891cf824a960987a16c48ae4be5c99111e0aa5b7/src/main/webapp/app/exercises/file-upload/assess/file-upload-assessment.component.ts",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/891cf824a960987a16c48ae4be5c99111e0aa5b7/src/main/webapp/app/exercises/file-upload/assess/file-upload-assessment.component.ts",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/main/webapp/app/exercises/file-upload/assess/file-upload-assessment.component.ts?ref=891cf824a960987a16c48ae4be5c99111e0aa5b7",
    "patch": "@@ -26,7 +26,7 @@ import { StructuredGradingCriterionService } from 'app/exercises/shared/structur\n import { assessmentNavigateBack } from 'app/exercises/shared/navigate-back.util';\n import { ExerciseType, getCourseFromExercise } from 'app/entities/exercise.model';\n import { Authority } from 'app/shared/constants/authority.constants';\n-import { getLatestSubmissionResult } from 'app/entities/submission.model';\n+import { getLatestSubmissionResult, getSubmissionResultById } from 'app/entities/submission.model';\n import { getExerciseDashboardLink, getLinkToSubmissionAssessment } from 'app/utils/navigation.utils';\n \n @Component({\n@@ -40,7 +40,7 @@ export class FileUploadAssessmentComponent implements OnInit, OnDestroy {\n     participation: StudentParticipation;\n     submission: FileUploadSubmission;\n     unassessedSubmission: FileUploadSubmission;\n-    result: Result;\n+    result?: Result;\n     unreferencedFeedback: Feedback[] = [];\n     exercise?: FileUploadExercise;\n     exerciseId: number;\n@@ -61,6 +61,7 @@ export class FileUploadAssessmentComponent implements OnInit, OnDestroy {\n     hasAssessmentDueDatePassed: boolean;\n     correctionRound = 0;\n     hasNewSubmissions = true;\n+    resultId: number;\n     examId = 0;\n     exerciseGroupId: number;\n     exerciseDashboardLink: string[];\n@@ -110,7 +111,10 @@ export class FileUploadAssessmentComponent implements OnInit, OnDestroy {\n \n         this.route.params.subscribe((params) => {\n             this.courseId = Number(params['courseId']);\n-            this.exerciseId = Number(params['exerciseId']);\n+            const exerciseId = Number(params['exerciseId']);\n+            this.resultId = Number(params['resultId']) ?? 0;\n+            this.exerciseId = exerciseId;\n+\n             const examId = params['examId'];\n             if (examId) {\n                 this.examId = Number(examId);\n@@ -162,7 +166,7 @@ export class FileUploadAssessmentComponent implements OnInit, OnDestroy {\n \n     private loadSubmission(submissionId: number): void {\n         this.fileUploadSubmissionService\n-            .get(submissionId, this.correctionRound)\n+            .get(submissionId, this.correctionRound, this.resultId)\n             .pipe(filter((res) => !!res))\n             .subscribe(\n                 (res) => {\n@@ -185,18 +189,25 @@ export class FileUploadAssessmentComponent implements OnInit, OnDestroy {\n         this.participation = this.submission.participation as StudentParticipation;\n         this.exercise = this.participation.exercise as FileUploadExercise;\n         this.hasAssessmentDueDatePassed = !!this.exercise.assessmentDueDate && moment(this.exercise.assessmentDueDate).isBefore(now());\n-        this.result = getLatestSubmissionResult(this.submission)!;\n-        if (this.result.hasComplaint) {\n+        if (this.resultId > 0) {\n+            this.correctionRound = this.submission.results?.findIndex((result) => result.id === this.resultId)!;\n+            this.result = getSubmissionResultById(this.submission, this.resultId);\n+        } else {\n+            this.result = getLatestSubmissionResult(this.submission);\n+        }\n+        if (this.result?.hasComplaint) {\n             this.getComplaint();\n         }\n-        this.submission.participation!.results = [this.result];\n-        this.result.participation = this.submission.participation;\n-        if (this.result.feedbacks) {\n+        if (this.result) {\n+            this.submission.participation!.results = [this.result];\n+            this.result!.participation = this.submission.participation;\n+        }\n+        if (this.result?.feedbacks) {\n             this.unreferencedFeedback = this.result.feedbacks;\n-        } else {\n-            this.result.feedbacks = [];\n+        } else if (this.result) {\n+            this.result!.feedbacks = [];\n         }\n-        if ((!this.result.assessor || this.result.assessor.id === this.userId) && !this.result.completionDate) {\n+        if ((!this.result?.assessor || this.result?.assessor.id === this.userId) && !this.result?.completionDate) {\n             this.jhiAlertService.clear();\n             this.jhiAlertService.info('artemisApp.fileUploadAssessment.messages.lock');\n         }"
  },
  {
    "sha": "669b3af6d1c03ca95056f2a1cdcb9477a366862d",
    "filename": "src/main/webapp/app/exercises/file-upload/assess/file-upload-assessment.route.ts",
    "status": "modified",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/891cf824a960987a16c48ae4be5c99111e0aa5b7/src/main/webapp/app/exercises/file-upload/assess/file-upload-assessment.route.ts",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/891cf824a960987a16c48ae4be5c99111e0aa5b7/src/main/webapp/app/exercises/file-upload/assess/file-upload-assessment.route.ts",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/main/webapp/app/exercises/file-upload/assess/file-upload-assessment.route.ts?ref=891cf824a960987a16c48ae4be5c99111e0aa5b7",
    "patch": "@@ -15,6 +15,15 @@ export const routes: Routes = [\n         },\n         canActivate: [UserRouteAccessService],\n     },\n+    {\n+        path: ':courseId/file-upload-exercises/:exerciseId/submissions/:submissionId/assessments/:resultId',\n+        component: FileUploadAssessmentComponent,\n+        data: {\n+            authorities: [Authority.ADMIN, Authority.INSTRUCTOR, Authority.TA],\n+            pageTitle: 'artemisApp.fileUploadExercise.home.title',\n+        },\n+        canActivate: [UserRouteAccessService],\n+    },\n     {\n         path: ':courseId/file-upload-exercises/:exerciseId/assessment',\n         component: FileUploadAssessmentDashboardComponent,"
  },
  {
    "sha": "967a0dbeaf07001781e04d9b867f5f7ffec598d6",
    "filename": "src/main/webapp/app/exercises/file-upload/participate/file-upload-submission.service.ts",
    "status": "modified",
    "additions": 7,
    "deletions": 2,
    "changes": 9,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/891cf824a960987a16c48ae4be5c99111e0aa5b7/src/main/webapp/app/exercises/file-upload/participate/file-upload-submission.service.ts",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/891cf824a960987a16c48ae4be5c99111e0aa5b7/src/main/webapp/app/exercises/file-upload/participate/file-upload-submission.service.ts",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/main/webapp/app/exercises/file-upload/participate/file-upload-submission.service.ts?ref=891cf824a960987a16c48ae4be5c99111e0aa5b7",
    "patch": "@@ -36,11 +36,16 @@ export class FileUploadSubmissionService {\n     /**\n      * Returns File Upload submission from the server\n      * @param fileUploadSubmissionId the id of the File Upload submission\n+     * @param correctionRound\n+     * @param resultId\n      */\n-    get(fileUploadSubmissionId: number, correctionRound = 0): Observable<HttpResponse<FileUploadSubmission>> {\n+    get(fileUploadSubmissionId: number, correctionRound = 0, resultId?: number): Observable<HttpResponse<FileUploadSubmission>> {\n         const url = `api/file-upload-submissions/${fileUploadSubmissionId}`;\n         let params = new HttpParams();\n-        if (correctionRound !== 0) {\n+        if (resultId && resultId > 0) {\n+            // in case resultId is set, we do not need the correction round\n+            params = params.set('resultId', resultId!.toString());\n+        } else {\n             params = params.set('correction-round', correctionRound.toString());\n         }\n         return this.http"
  },
  {
    "sha": "41c1228fb460ad8649b2eeac0f9b348e4ea06166",
    "filename": "src/main/webapp/app/exercises/modeling/assess/modeling-assessment-editor/modeling-assessment-editor.component.ts",
    "status": "modified",
    "additions": 10,
    "deletions": 3,
    "changes": 13,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/891cf824a960987a16c48ae4be5c99111e0aa5b7/src/main/webapp/app/exercises/modeling/assess/modeling-assessment-editor/modeling-assessment-editor.component.ts",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/891cf824a960987a16c48ae4be5c99111e0aa5b7/src/main/webapp/app/exercises/modeling/assess/modeling-assessment-editor/modeling-assessment-editor.component.ts",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/main/webapp/app/exercises/modeling/assess/modeling-assessment-editor/modeling-assessment-editor.component.ts?ref=891cf824a960987a16c48ae4be5c99111e0aa5b7",
    "patch": "@@ -25,7 +25,7 @@ import { ModelingAssessmentService } from 'app/exercises/modeling/assess/modelin\n import { assessmentNavigateBack } from 'app/exercises/shared/navigate-back.util';\n import { Authority } from 'app/shared/constants/authority.constants';\n import { StructuredGradingCriterionService } from 'app/exercises/shared/structured-grading-criterion/structured-grading-criterion.service';\n-import { getSubmissionResultByCorrectionRound } from 'app/entities/submission.model';\n+import { getSubmissionResultByCorrectionRound, getSubmissionResultById } from 'app/entities/submission.model';\n import { getExerciseDashboardLink, getLinkToSubmissionAssessment } from 'app/utils/navigation.utils';\n import { ExerciseType } from 'app/entities/exercise.model';\n \n@@ -63,6 +63,7 @@ export class ModelingAssessmentEditorComponent implements OnInit {\n     hasAutomaticFeedback = false;\n     hasAssessmentDueDatePassed: boolean;\n     correctionRound = 0;\n+    resultId: number;\n     loadingInitialSubmission = true;\n \n     private cancelConfirmationText: string;\n@@ -112,6 +113,7 @@ export class ModelingAssessmentEditorComponent implements OnInit {\n             this.exerciseDashboardLink = getExerciseDashboardLink(this.courseId, this.exerciseId, this.examId, this.isTestRun);\n \n             const submissionId = params.get('submissionId');\n+            this.resultId = Number(params.get('resultId')) ?? 0;\n             if (submissionId === 'new') {\n                 this.loadRandomSubmission(this.exerciseId);\n             } else {\n@@ -121,7 +123,7 @@ export class ModelingAssessmentEditorComponent implements OnInit {\n     }\n \n     private loadSubmission(submissionId: number): void {\n-        this.modelingSubmissionService.getSubmission(submissionId, this.correctionRound).subscribe(\n+        this.modelingSubmissionService.getSubmission(submissionId, this.correctionRound, this.resultId).subscribe(\n             (submission: ModelingSubmission) => {\n                 this.handleReceivedSubmission(submission);\n             },\n@@ -151,7 +153,12 @@ export class ModelingAssessmentEditorComponent implements OnInit {\n         this.submission = submission;\n         const studentParticipation = this.submission.participation as StudentParticipation;\n         this.modelingExercise = studentParticipation.exercise as ModelingExercise;\n-        this.result = getSubmissionResultByCorrectionRound(this.submission, this.correctionRound);\n+        if (this.resultId > 0) {\n+            this.result = getSubmissionResultById(submission, this.resultId);\n+            this.correctionRound = submission.results?.findIndex((result) => result.id === this.resultId)!;\n+        } else {\n+            this.result = getSubmissionResultByCorrectionRound(this.submission, this.correctionRound);\n+        }\n         this.hasAssessmentDueDatePassed = !!this.modelingExercise!.assessmentDueDate && moment(this.modelingExercise!.assessmentDueDate).isBefore(now());\n         if (this.result?.hasComplaint) {\n             this.getComplaint(this.result.id);"
  },
  {
    "sha": "8cbefe7eeea190a144c2b9a1e2854bd9c8991b97",
    "filename": "src/main/webapp/app/exercises/modeling/assess/modeling-assessment-editor/modeling-assessment-editor.route.ts",
    "status": "modified",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/891cf824a960987a16c48ae4be5c99111e0aa5b7/src/main/webapp/app/exercises/modeling/assess/modeling-assessment-editor/modeling-assessment-editor.route.ts",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/891cf824a960987a16c48ae4be5c99111e0aa5b7/src/main/webapp/app/exercises/modeling/assess/modeling-assessment-editor/modeling-assessment-editor.route.ts",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/main/webapp/app/exercises/modeling/assess/modeling-assessment-editor/modeling-assessment-editor.route.ts?ref=891cf824a960987a16c48ae4be5c99111e0aa5b7",
    "patch": "@@ -15,6 +15,17 @@ export const routes: Routes = [\n         },\n         canActivate: [UserRouteAccessService],\n     },\n+    {\n+        path: ':courseId/modeling-exercises/:exerciseId/submissions/:submissionId/assessments/:resultId',\n+        component: ModelingAssessmentEditorComponent,\n+        data: {\n+            authorities: [Authority.ADMIN, Authority.INSTRUCTOR],\n+            usePathForBreadcrumbs: true,\n+            pageTitle: 'artemisApp.apollonDiagram.detail.title',\n+        },\n+        canActivate: [UserRouteAccessService],\n+    },\n+\n     {\n         path: ':courseId/modeling-exercises/:exerciseId/assessment',\n         component: ModelingAssessmentDashboardComponent,"
  },
  {
    "sha": "ceee470753a51ef202e4b6607f2927a888405727",
    "filename": "src/main/webapp/app/exercises/modeling/participate/modeling-submission.service.ts",
    "status": "modified",
    "additions": 6,
    "deletions": 3,
    "changes": 9,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/891cf824a960987a16c48ae4be5c99111e0aa5b7/src/main/webapp/app/exercises/modeling/participate/modeling-submission.service.ts",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/891cf824a960987a16c48ae4be5c99111e0aa5b7/src/main/webapp/app/exercises/modeling/participate/modeling-submission.service.ts",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/main/webapp/app/exercises/modeling/participate/modeling-submission.service.ts?ref=891cf824a960987a16c48ae4be5c99111e0aa5b7",
    "patch": "@@ -90,15 +90,18 @@ export class ModelingSubmissionService {\n     /**\n      * Get a submission with given Id\n      * @param {number} submissionId - Id of the submission\n-     * @param {correctionRound}\n-\n+     * @param correctionRound\n+     * @param resultId\n      */\n-    getSubmission(submissionId: number, correctionRound = 0): Observable<ModelingSubmission> {\n+    getSubmission(submissionId: number, correctionRound = 0, resultId?: number): Observable<ModelingSubmission> {\n         const url = `api/modeling-submissions/${submissionId}`;\n         let params = new HttpParams();\n         if (correctionRound !== 0) {\n             params = params.set('correction-round', correctionRound.toString());\n         }\n+        if (resultId && resultId > 0) {\n+            params = params.set('resultId', resultId.toString());\n+        }\n         return this.http.get<ModelingSubmission>(url, { params });\n     }\n "
  },
  {
    "sha": "d2cbd44d39bdd966f00b5e23ac1b5ef9d01622a2",
    "filename": "src/main/webapp/app/exercises/text/assess/text-assessment.service.ts",
    "status": "modified",
    "additions": 36,
    "deletions": 12,
    "changes": 48,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/891cf824a960987a16c48ae4be5c99111e0aa5b7/src/main/webapp/app/exercises/text/assess/text-assessment.service.ts",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/891cf824a960987a16c48ae4be5c99111e0aa5b7/src/main/webapp/app/exercises/text/assess/text-assessment.service.ts",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/main/webapp/app/exercises/text/assess/text-assessment.service.ts?ref=891cf824a960987a16c48ae4be5c99111e0aa5b7",
    "patch": "@@ -13,7 +13,8 @@ import { TextBlockRef } from 'app/entities/text-block-ref.model';\n import { cloneDeep } from 'lodash';\n import { TextSubmission } from 'app/entities/text-submission.model';\n import { FeedbackConflict } from 'app/entities/feedback-conflict';\n-import { getLatestSubmissionResult, getSubmissionResultByCorrectionRound, setLatestSubmissionResult } from 'app/entities/submission.model';\n+import { getLatestSubmissionResult, getSubmissionResultByCorrectionRound, getSubmissionResultById, setLatestSubmissionResult, Submission } from 'app/entities/submission.model';\n+import { Participation } from 'app/entities/participation/participation.model';\n \n type EntityResponseType = HttpResponse<Result>;\n type TextAssessmentDTO = { feedbacks: Feedback[]; textBlocks: TextBlock[] };\n@@ -98,26 +99,31 @@ export class TextAssessmentService {\n     /**\n      * Get all feedback items for a submission.\n      * @param submissionId id of the submission for which the feedback items should be retrieved of type {number}\n+     * @param correctionRound\n+     * @param resultId instructors can results by id\n      */\n-    public getFeedbackDataForExerciseSubmission(submissionId: number, correctionRound = 0): Observable<StudentParticipation> {\n+    public getFeedbackDataForExerciseSubmission(submissionId: number, correctionRound = 0, resultId?: number): Observable<StudentParticipation> {\n         let params = new HttpParams();\n-        params = params.set('correction-round', correctionRound.toString());\n+        if (resultId && resultId > 0) {\n+            // in case resultId is set, we do not need the correction round\n+            params = params.set('resultId', resultId!.toString());\n+        } else {\n+            params = params.set('correction-round', correctionRound.toString());\n+        }\n         return this.http\n             .get<StudentParticipation>(`${this.resourceUrl}/submission/${submissionId}`, { observe: 'response', params })\n             .pipe(\n                 // Wire up Result and Submission\n                 tap((response) => {\n                     const participation = response.body!;\n                     const submission = participation.submissions![0];\n-                    setLatestSubmissionResult(submission, getLatestSubmissionResult(submission));\n-                    submission.participation = participation;\n-                    participation.results = submission.results!;\n-                    const result = getSubmissionResultByCorrectionRound(submission, correctionRound)!;\n-                    result.submission = submission;\n-                    result.participation = participation;\n-                    // Make sure Feedbacks Array is initialized\n-                    result.feedbacks = result.feedbacks || [];\n-                    TextAssessmentService.convertFeedbackConflictsFromServer(result.feedbacks);\n+                    let result;\n+                    if (resultId) {\n+                        result = getSubmissionResultById(submission, resultId);\n+                    } else {\n+                        result = getSubmissionResultByCorrectionRound(submission, correctionRound)!;\n+                    }\n+                    TextAssessmentService.reconnectResultsParticipation(participation, submission, result!);\n                     (submission as TextSubmission).atheneTextAssessmentTrackingToken = response.headers.get('x-athene-tracking-authorization') || undefined;\n                 }),\n                 map((response) => response.body!),\n@@ -267,4 +273,22 @@ export class TextAssessmentService {\n                 .subscribe();\n         }\n     }\n+\n+    /**\n+     * Connects the participation with the submission and result\n+     *\n+     *  @param participation\n+     *  @param submission\n+     *  @param result\n+     */\n+    private static reconnectResultsParticipation(participation: Participation, submission: Submission, result: Result) {\n+        setLatestSubmissionResult(submission, getLatestSubmissionResult(submission));\n+        submission.participation = participation;\n+        participation.results = submission.results!;\n+        result.submission = submission;\n+        result.participation = participation;\n+        // Make sure Feedbacks Array is initialized\n+        result.feedbacks = result.feedbacks || [];\n+        TextAssessmentService.convertFeedbackConflictsFromServer(result.feedbacks);\n+    }\n }"
  },
  {
    "sha": "74d17ae7d37216b43ecdaf0afd753c551f004b52",
    "filename": "src/main/webapp/app/exercises/text/assess/text-submission-assessment.component.ts",
    "status": "modified",
    "additions": 16,
    "deletions": 3,
    "changes": 19,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/891cf824a960987a16c48ae4be5c99111e0aa5b7/src/main/webapp/app/exercises/text/assess/text-submission-assessment.component.ts",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/891cf824a960987a16c48ae4be5c99111e0aa5b7/src/main/webapp/app/exercises/text/assess/text-submission-assessment.component.ts",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/main/webapp/app/exercises/text/assess/text-submission-assessment.component.ts?ref=891cf824a960987a16c48ae4be5c99111e0aa5b7",
    "patch": "@@ -20,7 +20,13 @@ import { TranslateService } from '@ngx-translate/core';\n import { NEW_ASSESSMENT_PATH } from 'app/exercises/text/assess/text-submission-assessment.route';\n import { StructuredGradingCriterionService } from 'app/exercises/shared/structured-grading-criterion/structured-grading-criterion.service';\n import { assessmentNavigateBack } from 'app/exercises/shared/navigate-back.util';\n-import { getLatestSubmissionResult, getSubmissionResultByCorrectionRound, setLatestSubmissionResult, setSubmissionResultByCorrectionRound } from 'app/entities/submission.model';\n+import {\n+    getLatestSubmissionResult,\n+    getSubmissionResultByCorrectionRound,\n+    getSubmissionResultById,\n+    setLatestSubmissionResult,\n+    setSubmissionResultByCorrectionRound,\n+} from 'app/entities/submission.model';\n import { TextAssessmentBaseComponent } from 'app/exercises/text/assess/text-assessment-base.component';\n import { getExerciseDashboardLink, getLinkToSubmissionAssessment } from 'app/utils/navigation.utils';\n import { ExerciseType } from 'app/entities/exercise.model';\n@@ -54,6 +60,7 @@ export class TextSubmissionAssessmentComponent extends TextAssessmentBaseCompone\n     noNewSubmissions: boolean;\n     hasAssessmentDueDatePassed: boolean;\n     correctionRound: number;\n+    resultId: number;\n     loadingInitialSubmission = true;\n \n     /*\n@@ -134,8 +141,8 @@ export class TextSubmissionAssessmentComponent extends TextAssessmentBaseCompone\n \n         this.activatedRoute.paramMap.subscribe((paramMap) => {\n             this.exerciseId = Number(paramMap.get('exerciseId'));\n+            this.resultId = Number(paramMap.get('resultId')) ?? 0;\n             this.courseId = Number(paramMap.get('courseId'));\n-\n             if (paramMap.has('examId')) {\n                 this.examId = Number(paramMap.get('examId'));\n                 this.exerciseGroupId = Number(paramMap.get('exerciseGroupId'));\n@@ -160,7 +167,13 @@ export class TextSubmissionAssessmentComponent extends TextAssessmentBaseCompone\n         this.submission = this.participation!.submissions![0] as TextSubmission;\n         this.exercise = this.participation?.exercise as TextExercise;\n         setLatestSubmissionResult(this.submission, getLatestSubmissionResult(this.submission));\n-        this.result = getSubmissionResultByCorrectionRound(this.submission, this.correctionRound);\n+\n+        if (this.resultId > 0) {\n+            this.result = getSubmissionResultById(this.submission, this.resultId);\n+            this.correctionRound = this.submission.results?.findIndex((result) => result.id === this.resultId)!;\n+        } else {\n+            this.result = getSubmissionResultByCorrectionRound(this.submission, this.correctionRound);\n+        }\n \n         this.hasAssessmentDueDatePassed = !!this.exercise!.assessmentDueDate && moment(this.exercise!.assessmentDueDate).isBefore(now());\n "
  },
  {
    "sha": "cdb02baa40feaedfb96def6957e66a554d0838d0",
    "filename": "src/main/webapp/app/exercises/text/assess/text-submission-assessment.route.ts",
    "status": "modified",
    "additions": 17,
    "deletions": 0,
    "changes": 17,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/891cf824a960987a16c48ae4be5c99111e0aa5b7/src/main/webapp/app/exercises/text/assess/text-submission-assessment.route.ts",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/891cf824a960987a16c48ae4be5c99111e0aa5b7/src/main/webapp/app/exercises/text/assess/text-submission-assessment.route.ts",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/main/webapp/app/exercises/text/assess/text-submission-assessment.route.ts?ref=891cf824a960987a16c48ae4be5c99111e0aa5b7",
    "patch": "@@ -44,6 +44,10 @@ export class StudentParticipationResolver implements Resolve<StudentParticipatio\n     resolve(route: ActivatedRouteSnapshot) {\n         const submissionId = Number(route.paramMap.get('submissionId'));\n         const correctionRound = Number(route.queryParamMap.get('correction-round'));\n+        const resultId = Number(route.paramMap.get('resultId'));\n+        if (resultId) {\n+            return this.textAssessmentService.getFeedbackDataForExerciseSubmission(submissionId, undefined, resultId).catch(() => Observable.of(undefined));\n+        }\n         if (submissionId) {\n             return this.textAssessmentService.getFeedbackDataForExerciseSubmission(submissionId, correctionRound).catch(() => Observable.of(undefined));\n         }\n@@ -106,6 +110,19 @@ export const textSubmissionAssessmentRoutes: Routes = [\n         runGuardsAndResolvers: 'paramsChange',\n         canActivate: [UserRouteAccessService],\n     },\n+    {\n+        path: 'submissions/:submissionId/assessments/:resultId',\n+        component: TextSubmissionAssessmentComponent,\n+        data: {\n+            authorities: [Authority.ADMIN, Authority.INSTRUCTOR],\n+            pageTitle: 'artemisApp.textAssessment.title',\n+        },\n+        resolve: {\n+            studentParticipation: StudentParticipationResolver,\n+        },\n+        runGuardsAndResolvers: 'paramsChange',\n+        canActivate: [UserRouteAccessService],\n+    },\n     {\n         path: 'submissions/:submissionId/text-feedback-conflict/:feedbackId',\n         component: TextFeedbackConflictsComponent,"
  },
  {
    "sha": "af0dac3f8e114c4abc17a957eceb7d49d3fc961b",
    "filename": "src/main/webapp/app/utils/navigation.utils.ts",
    "status": "modified",
    "additions": 7,
    "deletions": 1,
    "changes": 8,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/891cf824a960987a16c48ae4be5c99111e0aa5b7/src/main/webapp/app/utils/navigation.utils.ts",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/891cf824a960987a16c48ae4be5c99111e0aa5b7/src/main/webapp/app/utils/navigation.utils.ts",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/main/webapp/app/utils/navigation.utils.ts?ref=891cf824a960987a16c48ae4be5c99111e0aa5b7",
    "patch": "@@ -35,12 +35,13 @@ export const getLinkToSubmissionAssessment = (\n     submissionId: number | 'new',\n     examId: number,\n     exerciseGroupId: number,\n+    resultId?: number,\n ): string[] => {\n     // Special case: If we're dealing with programming exercises use 'code-editor' instead of 'submissions'\n     const submissionsURL = exerciseType === ExerciseType.PROGRAMMING ? 'code-editor' : 'submissions';\n \n     if (examId > 0) {\n-        return [\n+        const route = [\n             '/course-management',\n             courseId.toString(),\n             'exams',\n@@ -53,6 +54,11 @@ export const getLinkToSubmissionAssessment = (\n             submissionId.toString(),\n             'assessment',\n         ];\n+        if (resultId) {\n+            route[route.length - 1] += 's';\n+            route.push(resultId.toString());\n+        }\n+        return route;\n     } else {\n         return ['/course-management', courseId.toString(), exerciseType + '-exercises', exerciseId.toString(), submissionsURL, submissionId.toString(), 'assessment'];\n     }"
  },
  {
    "sha": "2366ca90ed66f047cb170dcb49e2cdc3a8b10d07",
    "filename": "src/main/webapp/i18n/de/exam.json",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/891cf824a960987a16c48ae4be5c99111e0aa5b7/src/main/webapp/i18n/de/exam.json",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/891cf824a960987a16c48ae4be5c99111e0aa5b7/src/main/webapp/i18n/de/exam.json",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/main/webapp/i18n/de/exam.json?ref=891cf824a960987a16c48ae4be5c99111e0aa5b7",
    "patch": "@@ -401,6 +401,7 @@\n             \"reviewer\": \"Reviewer\",\n             \"openSubmission\": \"Einreichung öffnen\",\n             \"openAssessment\": \" Bewertung öffnen\",\n+            \"openLatestAssessment\": \"Aktuellste Bewertung öffnen\",\n             \"cancelAssessment\": \" Bewertung abbrechen\",\n             \"workingTimeCouldNotBeSaved\": \"Die Bearbeitungszeit konnte nicht gespeichert werden.\",\n             \"saveWorkingTimeSuccessful\": \"Die Bearbeitungszeit wurde erfolgreich gespeichert.\","
  }
]
