[
  {
    "sha": "1a26d9ca23988b3aa35d689df9519c66024d5afc",
    "filename": "src/main/java/de/tum/in/www1/artemis/domain/Exercise.java",
    "status": "modified",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/50d4535f7b3d7051d65c186faa923a07eaa7e059/src/main/java/de/tum/in/www1/artemis/domain/Exercise.java",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/50d4535f7b3d7051d65c186faa923a07eaa7e059/src/main/java/de/tum/in/www1/artemis/domain/Exercise.java",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/main/java/de/tum/in/www1/artemis/domain/Exercise.java?ref=50d4535f7b3d7051d65c186faa923a07eaa7e059",
    "patch": "@@ -519,6 +519,15 @@ public void filterSensitiveInformation() {\n         setGradingCriteria(null);\n     }\n \n+    /**\n+     * Gets the type of the exercise as a string\n+     *\n+     * @return type of the exercise as a string\n+     */\n+    public String getStringRepresentationOfType() {\n+        return \"Exercise\";\n+    }\n+\n     /**\n      * Find a relevant participation for this exercise (relevancy depends on InitializationState)\n      *"
  },
  {
    "sha": "5df73aee4c838e2561e61f6af30b7b9f4e4d8fde",
    "filename": "src/main/java/de/tum/in/www1/artemis/domain/FileUploadExercise.java",
    "status": "modified",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/50d4535f7b3d7051d65c186faa923a07eaa7e059/src/main/java/de/tum/in/www1/artemis/domain/FileUploadExercise.java",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/50d4535f7b3d7051d65c186faa923a07eaa7e059/src/main/java/de/tum/in/www1/artemis/domain/FileUploadExercise.java",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/main/java/de/tum/in/www1/artemis/domain/FileUploadExercise.java?ref=50d4535f7b3d7051d65c186faa923a07eaa7e059",
    "patch": "@@ -42,4 +42,14 @@ public void setSampleSolution(String sampleSolution) {\n     public String toString() {\n         return \"FileUploadExercise{\" + \"id=\" + getId() + \"}\";\n     }\n+\n+    /**\n+     * Gets the type of the exercise as a string\n+     *\n+     * @return type of the exercise as a string\n+     */\n+    @Override\n+    public String getStringRepresentationOfType() {\n+        return \"File-Upload-Exercise\";\n+    }\n }"
  },
  {
    "sha": "98e2213eaa1d02a243fe47e02a25f4af69437881",
    "filename": "src/main/java/de/tum/in/www1/artemis/domain/ProgrammingExercise.java",
    "status": "modified",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/50d4535f7b3d7051d65c186faa923a07eaa7e059/src/main/java/de/tum/in/www1/artemis/domain/ProgrammingExercise.java",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/50d4535f7b3d7051d65c186faa923a07eaa7e059/src/main/java/de/tum/in/www1/artemis/domain/ProgrammingExercise.java",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/main/java/de/tum/in/www1/artemis/domain/ProgrammingExercise.java?ref=50d4535f7b3d7051d65c186faa923a07eaa7e059",
    "patch": "@@ -592,6 +592,7 @@ private boolean checkForRatedAndAssessedResult(Result result) {\n \n     /**\n      * This checks if the current result has a completion date and if the assessment is over\n+     *\n      * @param result The current result\n      * @return true if the result is manual and the assessment is over or it is an automatic result, false otherwise\n      */\n@@ -600,6 +601,16 @@ private boolean checkForAssessedResult(Result result) {\n         return result.getCompletionDate() != null && ((result.isManual() && isAssessmentOver) || result.getAssessmentType().equals(AssessmentType.AUTOMATIC));\n     }\n \n+    /**\n+     * Gets the type of the exercise as a string\n+     *\n+     * @return type of the exercise as a string\n+     */\n+    @Override\n+    public String getStringRepresentationOfType() {\n+        return \"Programming-Exercise\";\n+    }\n+\n     @Override\n     public String toString() {\n         return \"ProgrammingExercise{\" + \"id=\" + getId() + \", templateRepositoryUrl='\" + getTemplateRepositoryUrl() + \"'\" + \", solutionRepositoryUrl='\" + getSolutionRepositoryUrl()"
  },
  {
    "sha": "0eea8503b079ea813d45b5f0bd0c96c4d811616d",
    "filename": "src/main/java/de/tum/in/www1/artemis/domain/TextExercise.java",
    "status": "modified",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/50d4535f7b3d7051d65c186faa923a07eaa7e059/src/main/java/de/tum/in/www1/artemis/domain/TextExercise.java",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/50d4535f7b3d7051d65c186faa923a07eaa7e059/src/main/java/de/tum/in/www1/artemis/domain/TextExercise.java",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/main/java/de/tum/in/www1/artemis/domain/TextExercise.java?ref=50d4535f7b3d7051d65c186faa923a07eaa7e059",
    "patch": "@@ -50,4 +50,14 @@ public String toString() {\n         return \"TextExercise{\" + \"id=\" + getId() + \", sampleSolution='\" + getSampleSolution() + \"'\" + \"}\";\n     }\n \n+    /**\n+     * Gets the type of the exercise as a string\n+     *\n+     * @return type of the exercise as a string\n+     */\n+    @Override\n+    public String getStringRepresentationOfType() {\n+        return \"Text-Exercise\";\n+    }\n+\n }"
  },
  {
    "sha": "05b2fbb8ec2efe92588e7ab61ba122ca3e84083c",
    "filename": "src/main/java/de/tum/in/www1/artemis/domain/modeling/ModelingExercise.java",
    "status": "modified",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/50d4535f7b3d7051d65c186faa923a07eaa7e059/src/main/java/de/tum/in/www1/artemis/domain/modeling/ModelingExercise.java",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/50d4535f7b3d7051d65c186faa923a07eaa7e059/src/main/java/de/tum/in/www1/artemis/domain/modeling/ModelingExercise.java",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/main/java/de/tum/in/www1/artemis/domain/modeling/ModelingExercise.java?ref=50d4535f7b3d7051d65c186faa923a07eaa7e059",
    "patch": "@@ -67,4 +67,14 @@ public String toString() {\n                 + getSampleSolutionModel() + \"'\" + \", sampleSolutionExplanation='\" + getSampleSolutionExplanation() + \"'\" + \"}\";\n     }\n \n+    /**\n+     * Gets the type of the exercise as a string\n+     *\n+     * @return type of the exercise as a string\n+     */\n+    @Override\n+    public String getStringRepresentationOfType() {\n+        return \"Modeling-Exercise\";\n+    }\n+\n }"
  },
  {
    "sha": "611d28360baaf1826354cc44dde13c02e1e1bf55",
    "filename": "src/main/java/de/tum/in/www1/artemis/domain/quiz/QuizExercise.java",
    "status": "modified",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/50d4535f7b3d7051d65c186faa923a07eaa7e059/src/main/java/de/tum/in/www1/artemis/domain/quiz/QuizExercise.java",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/50d4535f7b3d7051d65c186faa923a07eaa7e059/src/main/java/de/tum/in/www1/artemis/domain/quiz/QuizExercise.java",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/main/java/de/tum/in/www1/artemis/domain/quiz/QuizExercise.java?ref=50d4535f7b3d7051d65c186faa923a07eaa7e059",
    "patch": "@@ -362,6 +362,16 @@ public QuizQuestion findQuestionById(Long questionId) {\n         return null;\n     }\n \n+    /**\n+     * Gets the type of the exercise as a string\n+     *\n+     * @return type of the exercise as a string\n+     */\n+    @Override\n+    public String getStringRepresentationOfType() {\n+        return \"Quiz-Exercise\";\n+    }\n+\n     @Override\n     public StudentParticipation findRelevantParticipation(List<StudentParticipation> participations) {\n         for (StudentParticipation participation : participations) {"
  },
  {
    "sha": "f6476384c226eb091a4b3845c80ec4c5ee398df8",
    "filename": "src/main/java/de/tum/in/www1/artemis/repository/ParticipantScoreRepository.java",
    "status": "modified",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/50d4535f7b3d7051d65c186faa923a07eaa7e059/src/main/java/de/tum/in/www1/artemis/repository/ParticipantScoreRepository.java",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/50d4535f7b3d7051d65c186faa923a07eaa7e059/src/main/java/de/tum/in/www1/artemis/repository/ParticipantScoreRepository.java",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/main/java/de/tum/in/www1/artemis/repository/ParticipantScoreRepository.java?ref=50d4535f7b3d7051d65c186faa923a07eaa7e059",
    "patch": "@@ -16,6 +16,7 @@\n import de.tum.in.www1.artemis.domain.Exercise;\n import de.tum.in.www1.artemis.domain.Result;\n import de.tum.in.www1.artemis.domain.scores.ParticipantScore;\n+import de.tum.in.www1.artemis.web.rest.dto.ExerciseScoresAggregatedInformation;\n \n @Repository\n public interface ParticipantScoreRepository extends JpaRepository<ParticipantScore, Long> {\n@@ -53,4 +54,14 @@ SELECT AVG(p.lastScore)\n             WHERE p.exercise IN :exercises\n             \"\"\")\n     Double findAvgScore(@Param(\"exercises\") Set<Exercise> exercises);\n+\n+    @Query(\"\"\"\n+                    SELECT new de.tum.in.www1.artemis.web.rest.dto.ExerciseScoresAggregatedInformation(p.exercise.id, AVG(p.lastRatedScore), MAX(p.lastRatedScore))\n+                    FROM ParticipantScore p\n+                    WHERE p.exercise IN :exercises\n+                    GROUP BY p.exercise\n+\n+            \"\"\")\n+    List<ExerciseScoresAggregatedInformation> getAggregatedExerciseScoresInformation(@Param(\"exercises\") Set<Exercise> exercises);\n+\n }"
  },
  {
    "sha": "714e259a8cfca0b963f557bc691a9e9d135d5d48",
    "filename": "src/main/java/de/tum/in/www1/artemis/repository/StudentScoreRepository.java",
    "status": "modified",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/50d4535f7b3d7051d65c186faa923a07eaa7e059/src/main/java/de/tum/in/www1/artemis/repository/StudentScoreRepository.java",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/50d4535f7b3d7051d65c186faa923a07eaa7e059/src/main/java/de/tum/in/www1/artemis/repository/StudentScoreRepository.java",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/main/java/de/tum/in/www1/artemis/repository/StudentScoreRepository.java?ref=50d4535f7b3d7051d65c186faa923a07eaa7e059",
    "patch": "@@ -53,4 +53,11 @@\n             \"\"\")\n     List<Object[]> getAchievedPointsOfStudents(@Param(\"exercises\") Set<Exercise> exercises);\n \n+    @Query(\"\"\"\n+                    SELECT s\n+                    FROM StudentScore s LEFT JOIN FETCH s.exercise\n+                    WHERE s.exercise IN :exercises AND s.user = :user\n+            \"\"\")\n+    List<StudentScore> findAllByExerciseAndUserWithEagerExercise(@Param(\"exercises\") Set<Exercise> exercises, @Param(\"user\") User user);\n+\n }"
  },
  {
    "sha": "8b2af60da2bce93adc1bd4b6d7a44e007164e64c",
    "filename": "src/main/java/de/tum/in/www1/artemis/repository/TeamScoreRepository.java",
    "status": "modified",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/50d4535f7b3d7051d65c186faa923a07eaa7e059/src/main/java/de/tum/in/www1/artemis/repository/TeamScoreRepository.java",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/50d4535f7b3d7051d65c186faa923a07eaa7e059/src/main/java/de/tum/in/www1/artemis/repository/TeamScoreRepository.java",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/main/java/de/tum/in/www1/artemis/repository/TeamScoreRepository.java?ref=50d4535f7b3d7051d65c186faa923a07eaa7e059",
    "patch": "@@ -54,4 +54,11 @@\n             \"\"\")\n     List<Object[]> getAchievedPointsOfTeams(@Param(\"exercises\") Set<Exercise> exercises);\n \n+    @Query(\"\"\"\n+                    SELECT t\n+                    FROM TeamScore t LEFT JOIN FETCH t.exercise\n+                    WHERE t.exercise IN :exercises AND :user MEMBER OF t.team.students\n+            \"\"\")\n+    List<TeamScore> findAllByExerciseAndUserWithEagerExercise(@Param(\"exercises\") Set<Exercise> exercises, @Param(\"user\") User user);\n+\n }"
  },
  {
    "sha": "d791d0cf57ccc9b3a2fda5290d5e67665aa8c287",
    "filename": "src/main/java/de/tum/in/www1/artemis/service/LearningAnalyticsService.java",
    "status": "added",
    "additions": 91,
    "deletions": 0,
    "changes": 91,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/50d4535f7b3d7051d65c186faa923a07eaa7e059/src/main/java/de/tum/in/www1/artemis/service/LearningAnalyticsService.java",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/50d4535f7b3d7051d65c186faa923a07eaa7e059/src/main/java/de/tum/in/www1/artemis/service/LearningAnalyticsService.java",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/main/java/de/tum/in/www1/artemis/service/LearningAnalyticsService.java?ref=50d4535f7b3d7051d65c186faa923a07eaa7e059",
    "patch": "@@ -0,0 +1,91 @@\n+package de.tum.in.www1.artemis.service;\n+\n+import static de.tum.in.www1.artemis.service.util.RoundingUtil.roundToNDecimalPlaces;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+import org.springframework.stereotype.Service;\n+\n+import de.tum.in.www1.artemis.domain.Exercise;\n+import de.tum.in.www1.artemis.domain.User;\n+import de.tum.in.www1.artemis.domain.enumeration.ExerciseMode;\n+import de.tum.in.www1.artemis.domain.scores.ParticipantScore;\n+import de.tum.in.www1.artemis.domain.scores.StudentScore;\n+import de.tum.in.www1.artemis.domain.scores.TeamScore;\n+import de.tum.in.www1.artemis.repository.ParticipantScoreRepository;\n+import de.tum.in.www1.artemis.repository.StudentScoreRepository;\n+import de.tum.in.www1.artemis.repository.TeamScoreRepository;\n+import de.tum.in.www1.artemis.web.rest.dto.ExerciseScoresAggregatedInformation;\n+import de.tum.in.www1.artemis.web.rest.dto.ExerciseScoresDTO;\n+\n+@Service\n+public class LearningAnalyticsService {\n+\n+    private final StudentScoreRepository studentScoreRepository;\n+\n+    private final TeamScoreRepository teamScoreRepository;\n+\n+    private final ParticipantScoreRepository participantScoreRepository;\n+\n+    public LearningAnalyticsService(StudentScoreRepository studentScoreRepository, TeamScoreRepository teamScoreRepository, ParticipantScoreRepository participantScoreRepository) {\n+        this.studentScoreRepository = studentScoreRepository;\n+        this.teamScoreRepository = teamScoreRepository;\n+        this.participantScoreRepository = participantScoreRepository;\n+    }\n+\n+    /**\n+     * Get the score of a user, the best score and the average score in the exercises\n+     *\n+     * @param user      the user for whom to get the individual score\n+     * @param exercises the exercises for which to get the scores\n+     * @return list of the exercise scores\n+     */\n+    public List<ExerciseScoresDTO> getExerciseScores(Set<Exercise> exercises, User user) {\n+        if (user == null || exercises == null) {\n+            throw new IllegalArgumentException();\n+        }\n+\n+        Set<Exercise> individualExercises = exercises.stream().filter(exercise -> exercise.getMode().equals(ExerciseMode.INDIVIDUAL)).collect(Collectors.toSet());\n+        Set<Exercise> teamExercises = exercises.stream().filter(exercise -> exercise.getMode().equals(ExerciseMode.TEAM)).collect(Collectors.toSet());\n+        // Getting the average and max scores in the exercise\n+        Map<Long, ExerciseScoresAggregatedInformation> exerciseIdToAggregatedInformation = participantScoreRepository.getAggregatedExerciseScoresInformation(exercises).stream()\n+                .collect(Collectors.toMap(ExerciseScoresAggregatedInformation::getExerciseId, exerciseScoresAggregatedInformation -> exerciseScoresAggregatedInformation));\n+        Map<Long, StudentScore> individualExerciseIdToStudentScore = studentScoreRepository.findAllByExerciseAndUserWithEagerExercise(individualExercises, user).stream()\n+                .collect(Collectors.toMap(studentScore -> studentScore.getExercise().getId(), studentSore -> studentSore));\n+        Map<Long, TeamScore> teamExerciseIdToTeamScore = teamScoreRepository.findAllByExerciseAndUserWithEagerExercise(teamExercises, user).stream()\n+                .collect(Collectors.toMap(teamScore -> teamScore.getExercise().getId(), teamScore -> teamScore));\n+\n+        List<ExerciseScoresDTO> exerciseScoresDTOs = new ArrayList<>();\n+\n+        for (Exercise exercise : exercises) {\n+            ExerciseScoresDTO exerciseScoresDTO = new ExerciseScoresDTO();\n+            exerciseScoresDTO.exerciseId = exercise.getId();\n+            exerciseScoresDTO.exerciseTitle = exercise.getTitle();\n+            exerciseScoresDTO.releaseDate = exercise.getReleaseDate();\n+            exerciseScoresDTO.exerciseType = exercise.getStringRepresentationOfType();\n+\n+            ExerciseScoresAggregatedInformation aggregatedInformation = exerciseIdToAggregatedInformation.get(exercise.getId());\n+\n+            if (aggregatedInformation == null || aggregatedInformation.getAverageScoreAchieved() == null || aggregatedInformation.getMaxScoreAchieved() == null) {\n+                exerciseScoresDTO.averageScoreAchieved = 0D;\n+                exerciseScoresDTO.maxScoreAchieved = 0D;\n+            }\n+            else {\n+                exerciseScoresDTO.averageScoreAchieved = roundToNDecimalPlaces(aggregatedInformation.getAverageScoreAchieved(), 1);\n+                exerciseScoresDTO.maxScoreAchieved = roundToNDecimalPlaces(aggregatedInformation.getMaxScoreAchieved(), 0);\n+            }\n+\n+            ParticipantScore participantScore = exercise.getMode().equals(ExerciseMode.INDIVIDUAL) ? individualExerciseIdToStudentScore.get(exercise.getId())\n+                    : teamExerciseIdToTeamScore.get(exercise.getId());\n+            exerciseScoresDTO.scoreOfStudent = participantScore == null || participantScore.getLastRatedScore() == null ? 0D\n+                    : roundToNDecimalPlaces(participantScore.getLastScore(), 0);\n+\n+            exerciseScoresDTOs.add(exerciseScoresDTO);\n+        }\n+        return exerciseScoresDTOs;\n+    }\n+}"
  },
  {
    "sha": "face4742ade020a634ff0c791379e00605033402",
    "filename": "src/main/java/de/tum/in/www1/artemis/service/util/RoundingUtil.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/50d4535f7b3d7051d65c186faa923a07eaa7e059/src/main/java/de/tum/in/www1/artemis/service/util/RoundingUtil.java",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/50d4535f7b3d7051d65c186faa923a07eaa7e059/src/main/java/de/tum/in/www1/artemis/service/util/RoundingUtil.java",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/main/java/de/tum/in/www1/artemis/service/util/RoundingUtil.java?ref=50d4535f7b3d7051d65c186faa923a07eaa7e059",
    "patch": "@@ -33,7 +33,7 @@ public static float round(float number) {\n         return (float) roundToNDecimalPlaces(number, 1);\n     }\n \n-    private static double roundToNDecimalPlaces(double number, int numberOfDecimalPlaces) {\n+    public static double roundToNDecimalPlaces(double number, int numberOfDecimalPlaces) {\n         return new BigDecimal(String.valueOf(number)).setScale(numberOfDecimalPlaces, RoundingMode.HALF_UP).doubleValue();\n     }\n "
  },
  {
    "sha": "f57aa80d0fbf683b8821653fb29e6091bc765250",
    "filename": "src/main/java/de/tum/in/www1/artemis/web/rest/LearningAnalyticsResource.java",
    "status": "added",
    "additions": 82,
    "deletions": 0,
    "changes": 82,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/50d4535f7b3d7051d65c186faa923a07eaa7e059/src/main/java/de/tum/in/www1/artemis/web/rest/LearningAnalyticsResource.java",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/50d4535f7b3d7051d65c186faa923a07eaa7e059/src/main/java/de/tum/in/www1/artemis/web/rest/LearningAnalyticsResource.java",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/main/java/de/tum/in/www1/artemis/web/rest/LearningAnalyticsResource.java?ref=50d4535f7b3d7051d65c186faa923a07eaa7e059",
    "patch": "@@ -0,0 +1,82 @@\n+package de.tum.in.www1.artemis.web.rest;\n+\n+import static de.tum.in.www1.artemis.web.rest.util.ResponseUtil.forbidden;\n+import static de.tum.in.www1.artemis.web.rest.util.ResponseUtil.notFound;\n+\n+import java.util.List;\n+import java.util.Optional;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.security.access.prepost.PreAuthorize;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.PathVariable;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+import de.tum.in.www1.artemis.domain.Course;\n+import de.tum.in.www1.artemis.domain.Exercise;\n+import de.tum.in.www1.artemis.domain.User;\n+import de.tum.in.www1.artemis.repository.CourseRepository;\n+import de.tum.in.www1.artemis.repository.UserRepository;\n+import de.tum.in.www1.artemis.service.AuthorizationCheckService;\n+import de.tum.in.www1.artemis.service.LearningAnalyticsService;\n+import de.tum.in.www1.artemis.web.rest.dto.ExerciseScoresDTO;\n+\n+@RestController\n+@RequestMapping(\"/api\")\n+public class LearningAnalyticsResource {\n+\n+    private final Logger log = LoggerFactory.getLogger(LearningAnalyticsResource.class);\n+\n+    private final LearningAnalyticsService learningAnalyticsService;\n+\n+    private final CourseRepository courseRepository;\n+\n+    private final UserRepository userRepository;\n+\n+    private final AuthorizationCheckService authorizationCheckService;\n+\n+    public LearningAnalyticsResource(LearningAnalyticsService learningAnalyticsService, CourseRepository courseRepository, UserRepository userRepository,\n+            AuthorizationCheckService authorizationCheckService) {\n+        this.learningAnalyticsService = learningAnalyticsService;\n+        this.courseRepository = courseRepository;\n+        this.authorizationCheckService = authorizationCheckService;\n+        this.userRepository = userRepository;\n+    }\n+\n+    /**\n+     * GET /courses/:courseId/analytics/exercise-scores\n+     * <p>\n+     * This call returns the the information used for the exercise-scores-chart. It will get get the score of\n+     * the requesting user,the average score and the best score in course exercises\n+     * <p>\n+     * Only released course exercises with assessment due date over are considered!\n+     * <p>\n+     *\n+     * @return the ResponseEntity with status 200 (OK) and with the exercise scores in the body\n+     */\n+    @GetMapping(\"/courses/{courseId}/analytics/exercise-scores\")\n+    @PreAuthorize(\"hasAnyRole('USER', 'TA', 'INSTRUCTOR', 'ADMIN')\")\n+    public ResponseEntity<List<ExerciseScoresDTO>> getCourseExerciseScores(@PathVariable Long courseId) {\n+        log.debug(\"REST request to get exercise scores for course with id: {}\", courseId);\n+        Optional<Course> courseOptional = Optional.ofNullable(courseRepository.findWithEagerExercisesById(courseId));\n+        if (courseOptional.isEmpty()) {\n+            return notFound();\n+        }\n+        Course course = courseOptional.get();\n+        User user = userRepository.getUserWithGroupsAndAuthorities();\n+        if (!authorizationCheckService.isAtLeastStudentInCourse(course, user)) {\n+            return forbidden();\n+        }\n+        // we only consider exercises in which the student had a chance to earn a score (released and due date over)\n+        Set<Exercise> exercisesToConsider = course.getExercises().stream().filter(Exercise::isVisibleToStudents).filter(Exercise::isAssessmentDueDateOver)\n+                .collect(Collectors.toSet());\n+        List<ExerciseScoresDTO> exerciseScoresDTOList = learningAnalyticsService.getExerciseScores(exercisesToConsider, user);\n+        return ResponseEntity.ok(exerciseScoresDTOList);\n+    }\n+\n+}"
  },
  {
    "sha": "5d0aac5b9f9f42bc89efa7b7ad78c2aa5bb25394",
    "filename": "src/main/java/de/tum/in/www1/artemis/web/rest/dto/ExerciseScoresAggregatedInformation.java",
    "status": "added",
    "additions": 28,
    "deletions": 0,
    "changes": 28,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/50d4535f7b3d7051d65c186faa923a07eaa7e059/src/main/java/de/tum/in/www1/artemis/web/rest/dto/ExerciseScoresAggregatedInformation.java",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/50d4535f7b3d7051d65c186faa923a07eaa7e059/src/main/java/de/tum/in/www1/artemis/web/rest/dto/ExerciseScoresAggregatedInformation.java",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/main/java/de/tum/in/www1/artemis/web/rest/dto/ExerciseScoresAggregatedInformation.java?ref=50d4535f7b3d7051d65c186faa923a07eaa7e059",
    "patch": "@@ -0,0 +1,28 @@\n+package de.tum.in.www1.artemis.web.rest.dto;\n+\n+public class ExerciseScoresAggregatedInformation {\n+\n+    public Long exerciseId;\n+\n+    public Double averageScoreAchieved;\n+\n+    public Double maxScoreAchieved;\n+\n+    public ExerciseScoresAggregatedInformation(Long exerciseId, Double averageScoreAchieved, Double maxScoreAchieved) {\n+        this.exerciseId = exerciseId;\n+        this.averageScoreAchieved = averageScoreAchieved;\n+        this.maxScoreAchieved = maxScoreAchieved;\n+    }\n+\n+    public Long getExerciseId() {\n+        return exerciseId;\n+    }\n+\n+    public Double getAverageScoreAchieved() {\n+        return averageScoreAchieved;\n+    }\n+\n+    public Double getMaxScoreAchieved() {\n+        return maxScoreAchieved;\n+    }\n+}"
  },
  {
    "sha": "a2c3de30b715b198b338d99c456a446341d02600",
    "filename": "src/main/java/de/tum/in/www1/artemis/web/rest/dto/ExerciseScoresDTO.java",
    "status": "added",
    "additions": 27,
    "deletions": 0,
    "changes": 27,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/50d4535f7b3d7051d65c186faa923a07eaa7e059/src/main/java/de/tum/in/www1/artemis/web/rest/dto/ExerciseScoresDTO.java",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/50d4535f7b3d7051d65c186faa923a07eaa7e059/src/main/java/de/tum/in/www1/artemis/web/rest/dto/ExerciseScoresDTO.java",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/main/java/de/tum/in/www1/artemis/web/rest/dto/ExerciseScoresDTO.java?ref=50d4535f7b3d7051d65c186faa923a07eaa7e059",
    "patch": "@@ -0,0 +1,27 @@\n+package de.tum.in.www1.artemis.web.rest.dto;\n+\n+import java.time.ZonedDateTime;\n+\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+\n+/**\n+ * This DTO contains the information used for the exercise-scores-chart\n+ */\n+@JsonInclude(JsonInclude.Include.NON_EMPTY)\n+public class ExerciseScoresDTO {\n+\n+    public Long exerciseId;\n+\n+    public String exerciseTitle;\n+\n+    public String exerciseType;\n+\n+    public ZonedDateTime releaseDate;\n+\n+    public Double scoreOfStudent;\n+\n+    public Double averageScoreAchieved;\n+\n+    public Double maxScoreAchieved;\n+\n+}"
  },
  {
    "sha": "7210005a8a88a36a6585d67e03cc9655c4a10a58",
    "filename": "src/main/webapp/app/course/learning-goals/learning-goal-course-detail-modal/learning-goal-course-detail-modal.component.html",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/50d4535f7b3d7051d65c186faa923a07eaa7e059/src/main/webapp/app/course/learning-goals/learning-goal-course-detail-modal/learning-goal-course-detail-modal.component.html",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/50d4535f7b3d7051d65c186faa923a07eaa7e059/src/main/webapp/app/course/learning-goals/learning-goal-course-detail-modal/learning-goal-course-detail-modal.component.html",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/main/webapp/app/course/learning-goals/learning-goal-course-detail-modal/learning-goal-course-detail-modal.component.html?ref=50d4535f7b3d7051d65c186faa923a07eaa7e059",
    "patch": "@@ -59,7 +59,7 @@ <h5>{{ 'artemisApp.learningGoal.learningGoalCard.connectedLectureUnits' | transl\n                             {{\n                                 getLectureUnitCourseProgress(lectureUnit.id) === undefined\n                                     ? '-'\n-                                    : getLectureUnitCourseProgress(lectureUnit.id).averageScoreAchievedByStudentInLectureUnit + ' %'\n+                                    : round(getLectureUnitCourseProgress(lectureUnit.id).averageScoreAchievedByStudentInLectureUnit) + ' %'\n                             }}\n                         </td>\n                         <td>\n@@ -73,7 +73,7 @@ <h5>{{ 'artemisApp.learningGoal.learningGoalCard.connectedLectureUnits' | transl\n                             {{ getLectureUnitCourseProgress(lectureUnit.id) === undefined ? '-' : getLectureUnitCourseProgress(lectureUnit.id).noOfParticipants }}\n                         </td>\n                         <td>\n-                            {{ getLectureUnitCourseProgress(lectureUnit.id) === undefined ? '-' : getLectureUnitCourseProgress(lectureUnit.id).participationRate + ' %' }}\n+                            {{ getLectureUnitCourseProgress(lectureUnit.id) === undefined ? '-' : round(getLectureUnitCourseProgress(lectureUnit.id).participationRate) + ' %' }}\n                         </td>\n                     </tr>\n                 </tbody>"
  },
  {
    "sha": "14172f7226a1fefcb1a298b37af16fe816d64029",
    "filename": "src/main/webapp/app/course/learning-goals/learning-goal-course-detail-modal/learning-goal-course-detail-modal.component.ts",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/50d4535f7b3d7051d65c186faa923a07eaa7e059/src/main/webapp/app/course/learning-goals/learning-goal-course-detail-modal/learning-goal-course-detail-modal.component.ts",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/50d4535f7b3d7051d65c186faa923a07eaa7e059/src/main/webapp/app/course/learning-goals/learning-goal-course-detail-modal/learning-goal-course-detail-modal.component.ts",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/main/webapp/app/course/learning-goals/learning-goal-course-detail-modal/learning-goal-course-detail-modal.component.ts?ref=50d4535f7b3d7051d65c186faa923a07eaa7e059",
    "patch": "@@ -4,12 +4,14 @@ import { LearningGoal } from 'app/entities/learningGoal.model';\n import { LectureUnitService } from 'app/lecture/lecture-unit/lecture-unit-management/lectureUnit.service';\n import { SortService } from 'app/shared/service/sort.service';\n import { CourseLearningGoalProgress } from 'app/course/learning-goals/learning-goal-course-progress.dtos.model';\n+import { round } from 'app/shared/util/utils';\n \n @Component({\n     selector: 'jhi-learning-goal-course-detail-modal',\n     templateUrl: './learning-goal-course-detail-modal.component.html',\n })\n export class LearningGoalCourseDetailModalComponent implements OnInit {\n+    readonly round = round;\n     @Input()\n     learningGoal: LearningGoal;\n     @Input()"
  },
  {
    "sha": "035fd0f15cc6e7d2f35587e5b1ed360a144f2fe9",
    "filename": "src/main/webapp/app/overview/course-statistics/course-statistics.component.html",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/50d4535f7b3d7051d65c186faa923a07eaa7e059/src/main/webapp/app/overview/course-statistics/course-statistics.component.html",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/50d4535f7b3d7051d65c186faa923a07eaa7e059/src/main/webapp/app/overview/course-statistics/course-statistics.component.html",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/main/webapp/app/overview/course-statistics/course-statistics.component.html?ref=50d4535f7b3d7051d65c186faa923a07eaa7e059",
    "patch": "@@ -95,6 +95,8 @@ <h4 *ngIf=\"exerciseGroup.presentationScoreEnabled && course.presentationScore !=\n     </div>\n     <hr />\n     <jhi-course-learning-goals [courseId]=\"courseId\"></jhi-course-learning-goals>\n+    <hr />\n+    <jhi-exercise-scores-chart></jhi-exercise-scores-chart>\n     <ng-template #noStatistics>\n         <div class=\"row\">\n             <div class=\"col mt-3\">"
  },
  {
    "sha": "def7fd4fabfa568b87c21228416368e2fbff214a",
    "filename": "src/main/webapp/app/overview/courses.module.ts",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/50d4535f7b3d7051d65c186faa923a07eaa7e059/src/main/webapp/app/overview/courses.module.ts",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/50d4535f7b3d7051d65c186faa923a07eaa7e059/src/main/webapp/app/overview/courses.module.ts",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/main/webapp/app/overview/courses.module.ts?ref=50d4535f7b3d7051d65c186faa923a07eaa7e059",
    "patch": "@@ -30,9 +30,11 @@ import { ArtemisLearningGoalsModule } from 'app/course/learning-goals/learning-g\n import { ArtemisExerciseButtonsModule } from 'app/overview/exercise-details/exercise-buttons.module';\n import { ArtemisCourseExerciseRowModule } from 'app/overview/course-exercises/course-exercise-row.module';\n import { CourseExerciseDetailsModule } from 'app/overview/exercise-details/course-exercise-details.module';\n+import { ArtemisLearningAnalyticsModule } from 'app/overview/learning-analytics/learning-analytics.module';\n \n @NgModule({\n     imports: [\n+        ArtemisLearningAnalyticsModule,\n         ArtemisExerciseButtonsModule,\n         ArtemisCourseExerciseRowModule,\n         ArtemisSharedModule,"
  },
  {
    "sha": "c81f00cbe54534fe42c984e84af75bb2c2c6aabd",
    "filename": "src/main/webapp/app/overview/learning-analytics/exercise-scores-chart/exercise-scores-chart.component.html",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/50d4535f7b3d7051d65c186faa923a07eaa7e059/src/main/webapp/app/overview/learning-analytics/exercise-scores-chart/exercise-scores-chart.component.html",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/50d4535f7b3d7051d65c186faa923a07eaa7e059/src/main/webapp/app/overview/learning-analytics/exercise-scores-chart/exercise-scores-chart.component.html",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/main/webapp/app/overview/learning-analytics/exercise-scores-chart/exercise-scores-chart.component.html?ref=50d4535f7b3d7051d65c186faa923a07eaa7e059",
    "patch": "@@ -0,0 +1,16 @@\n+<h3 class=\"text-center\">{{ 'artemisApp.exercise-scores-chart.title' | translate }}</h3>\n+<div class=\"chart-wrapper mx-auto\">\n+    <div class=\"mx-auto chart\" #chartDiv>\n+        <canvas\n+            baseChart\n+            [datasets]=\"lineChartData\"\n+            [labels]=\"lineChartLabels\"\n+            [options]=\"lineChartOptions\"\n+            [colors]=\"lineChartColors\"\n+            [legend]=\"lineChartLegend\"\n+            [chartType]=\"lineChartType\"\n+            [plugins]=\"lineChartPlugins\"\n+        >\n+        </canvas>\n+    </div>\n+</div>"
  },
  {
    "sha": "5bda77fa4f36e30714e22f7dffbca271bfea3c34",
    "filename": "src/main/webapp/app/overview/learning-analytics/exercise-scores-chart/exercise-scores-chart.component.scss",
    "status": "added",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/50d4535f7b3d7051d65c186faa923a07eaa7e059/src/main/webapp/app/overview/learning-analytics/exercise-scores-chart/exercise-scores-chart.component.scss",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/50d4535f7b3d7051d65c186faa923a07eaa7e059/src/main/webapp/app/overview/learning-analytics/exercise-scores-chart/exercise-scores-chart.component.scss",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/main/webapp/app/overview/learning-analytics/exercise-scores-chart/exercise-scores-chart.component.scss?ref=50d4535f7b3d7051d65c186faa923a07eaa7e059",
    "patch": "@@ -0,0 +1,8 @@\n+.chart-wrapper {\n+    width: 1200px;\n+    overflow-x: auto;\n+}\n+\n+.chart {\n+    height: 350px;\n+}"
  },
  {
    "sha": "7aa214ea7cb75101be58fa1807078736451d7487",
    "filename": "src/main/webapp/app/overview/learning-analytics/exercise-scores-chart/exercise-scores-chart.component.ts",
    "status": "added",
    "additions": 243,
    "deletions": 0,
    "changes": 243,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/50d4535f7b3d7051d65c186faa923a07eaa7e059/src/main/webapp/app/overview/learning-analytics/exercise-scores-chart/exercise-scores-chart.component.ts",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/50d4535f7b3d7051d65c186faa923a07eaa7e059/src/main/webapp/app/overview/learning-analytics/exercise-scores-chart/exercise-scores-chart.component.ts",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/main/webapp/app/overview/learning-analytics/exercise-scores-chart/exercise-scores-chart.component.ts?ref=50d4535f7b3d7051d65c186faa923a07eaa7e059",
    "patch": "@@ -0,0 +1,243 @@\n+import { AfterViewInit, Component, ElementRef, Input, OnDestroy, ViewChild } from '@angular/core';\n+import * as Chart from 'chart.js';\n+import { ChartDataSets, ChartOptions, ChartPoint, ChartType } from 'chart.js';\n+import { BaseChartDirective, Color, Label } from 'ng2-charts';\n+import { ExerciseScoresDTO, LearningAnalyticsService } from 'app/overview/learning-analytics/learning-analytics.service';\n+import { JhiAlertService } from 'ng-jhipster';\n+import { onError } from 'app/shared/util/global.utils';\n+import { finalize } from 'rxjs/operators';\n+import { HttpErrorResponse } from '@angular/common/http';\n+import { ActivatedRoute, Router } from '@angular/router';\n+import * as _ from 'lodash';\n+import { TranslateService } from '@ngx-translate/core';\n+\n+@Component({\n+    selector: 'jhi-exercise-scores-chart',\n+    templateUrl: './exercise-scores-chart.component.html',\n+    styleUrls: ['./exercise-scores-chart.component.scss'],\n+})\n+export class ExerciseScoresChartComponent implements AfterViewInit, OnDestroy {\n+    @Input()\n+    courseId: number;\n+    isLoading = false;\n+    public exerciseScores: ExerciseScoresDTO[] = [];\n+\n+    @ViewChild(BaseChartDirective)\n+    chartDirective: BaseChartDirective;\n+    chartInstance: Chart;\n+    @ViewChild('chartDiv')\n+    chartDiv: ElementRef;\n+    public lineChartData: ChartDataSets[] = [\n+        {\n+            fill: false,\n+            data: [],\n+            label: this.translateService.instant('artemisApp.exercise-scores-chart.yourScoreLabel'),\n+            pointStyle: 'circle',\n+            borderWidth: 3,\n+            lineTension: 0,\n+            spanGaps: true,\n+        },\n+        {\n+            fill: false,\n+            data: [],\n+            label: this.translateService.instant('artemisApp.exercise-scores-chart.averageScoreLabel'),\n+            pointStyle: 'rect',\n+            borderWidth: 3,\n+            lineTension: 0,\n+            spanGaps: true,\n+            borderDash: [1, 1],\n+        },\n+        {\n+            fill: false,\n+            data: [],\n+            label: this.translateService.instant('artemisApp.exercise-scores-chart.maximumScoreLabel'),\n+            pointStyle: 'triangle',\n+            borderWidth: 3,\n+            lineTension: 0,\n+            spanGaps: true,\n+            borderDash: [15, 3, 3, 3],\n+        },\n+    ];\n+    public lineChartLabels: Label[] = this.exerciseScores.map((exerciseScoreDTO) => exerciseScoreDTO.exerciseTitle!);\n+    public lineChartOptions: ChartOptions = {\n+        onHover: (event: any, chartElement) => {\n+            event.target.style.cursor = chartElement[0] ? 'pointer' : 'default';\n+        },\n+        onClick: (evt) => {\n+            const point: any = this.chartInstance.getElementAtEvent(evt)[0];\n+\n+            if (point) {\n+                const value: any = this.chartInstance.data.datasets![point._datasetIndex]!.data![point._index];\n+                if (value.exerciseId) {\n+                    this.navigateToExercise(value.exerciseId);\n+                }\n+            }\n+        },\n+        tooltips: {\n+            callbacks: {\n+                label(tooltipItem, data) {\n+                    let label = data.datasets![tooltipItem.datasetIndex!].label || '';\n+\n+                    if (label) {\n+                        label += ': ';\n+                    }\n+                    label += Math.round((tooltipItem.yLabel as number) * 100) / 100;\n+                    label += ' %';\n+                    return label;\n+                },\n+                footer(tooltipItem, data) {\n+                    const dataset = data.datasets![tooltipItem[0].datasetIndex!].data![tooltipItem[0].index!];\n+                    const exerciseType = (dataset as any).exerciseType;\n+                    return [`Exercise Type: ${exerciseType}`];\n+                },\n+            },\n+        },\n+        responsive: true,\n+        maintainAspectRatio: false,\n+        title: {\n+            display: false,\n+        },\n+        legend: {\n+            position: 'left',\n+        },\n+        scales: {\n+            yAxes: [\n+                {\n+                    scaleLabel: {\n+                        display: true,\n+                        labelString: this.translateService.instant('artemisApp.exercise-scores-chart.yAxis'),\n+                        fontSize: 12,\n+                    },\n+                    ticks: {\n+                        suggestedMax: 100,\n+                        suggestedMin: 0,\n+                        beginAtZero: true,\n+                        precision: 0,\n+                        fontSize: 12,\n+                    },\n+                },\n+            ],\n+            xAxes: [\n+                {\n+                    scaleLabel: {\n+                        display: true,\n+                        labelString: this.translateService.instant('artemisApp.exercise-scores-chart.xAxis'),\n+                        fontSize: 12,\n+                    },\n+                    ticks: {\n+                        autoSkip: false,\n+                        fontSize: 12,\n+                        callback(exerciseTitle: string) {\n+                            if (exerciseTitle.length > 20) {\n+                                // shorten exercise title if too long (will be displayed in full in tooltip)\n+                                return exerciseTitle.substr(0, 20) + '...';\n+                            } else {\n+                                return exerciseTitle;\n+                            }\n+                        },\n+                    },\n+                },\n+            ],\n+        },\n+    };\n+    public lineChartColors: Color[] = [\n+        {\n+            borderColor: 'skyBlue',\n+            backgroundColor: 'skyBlue',\n+            hoverBackgroundColor: 'black',\n+            hoverBorderColor: 'black',\n+        },\n+        {\n+            borderColor: 'salmon',\n+            backgroundColor: 'salmon',\n+            hoverBackgroundColor: 'black',\n+            hoverBorderColor: 'black',\n+        },\n+        {\n+            borderColor: 'limeGreen',\n+            backgroundColor: 'limeGreen',\n+            hoverBackgroundColor: 'black',\n+            hoverBorderColor: 'black',\n+        },\n+    ];\n+    public lineChartLegend = true;\n+    public lineChartType: ChartType = 'line';\n+    public lineChartPlugins = [];\n+\n+    constructor(\n+        private router: Router,\n+        private activatedRoute: ActivatedRoute,\n+        private alertService: JhiAlertService,\n+        private learningAnalyticsService: LearningAnalyticsService,\n+        private translateService: TranslateService,\n+    ) {}\n+\n+    ngOnDestroy() {\n+        this.chartInstance.destroy();\n+    }\n+\n+    ngAfterViewInit() {\n+        this.chartInstance = this.chartDirective.chart;\n+        this.activatedRoute.parent!.params.subscribe((params) => {\n+            this.courseId = +params['courseId'];\n+            if (this.courseId) {\n+                this.loadDataAndInitializeChart();\n+            }\n+        });\n+    }\n+\n+    private loadDataAndInitializeChart() {\n+        this.isLoading = true;\n+        this.learningAnalyticsService\n+            .getCourseExerciseScores(this.courseId)\n+            .pipe(\n+                finalize(() => {\n+                    this.isLoading = false;\n+                }),\n+            )\n+            .subscribe(\n+                (exerciseScoresResponse) => {\n+                    this.exerciseScores = exerciseScoresResponse.body!;\n+                    this.initializeChart();\n+                },\n+                (errorResponse: HttpErrorResponse) => onError(this.alertService, errorResponse),\n+            );\n+    }\n+\n+    private initializeChart() {\n+        const chartWidth = 80 * this.exerciseScores.length;\n+        this.chartDiv.nativeElement.setAttribute('style', `width: ${chartWidth}px;`);\n+        this.chartInstance.resize();\n+        const sortedExerciseScores = _.sortBy(this.exerciseScores, (exerciseScore) => exerciseScore.releaseDate);\n+        this.addData(this.chartInstance, sortedExerciseScores);\n+    }\n+\n+    private addData(chart: Chart, exerciseScoresDTOs: ExerciseScoresDTO[]) {\n+        for (const exerciseScoreDTO of exerciseScoresDTOs) {\n+            chart.data.labels!.push(exerciseScoreDTO.exerciseTitle!);\n+            (chart.data.datasets![0].data as ChartPoint[])!.push({\n+                y: exerciseScoreDTO.scoreOfStudent,\n+                exerciseId: exerciseScoreDTO.exerciseId,\n+                exerciseTitle: exerciseScoreDTO.exerciseTitle,\n+                exerciseType: exerciseScoreDTO.exerciseType,\n+            } as Chart.ChartPoint);\n+            (chart.data.datasets![1].data as ChartPoint[])!.push({\n+                y: exerciseScoreDTO.averageScoreAchieved,\n+                exerciseId: exerciseScoreDTO.exerciseId,\n+                exerciseTitle: exerciseScoreDTO.exerciseTitle,\n+                exerciseType: exerciseScoreDTO.exerciseType,\n+            } as Chart.ChartPoint);\n+            (chart.data.datasets![2].data as ChartPoint[])!.push({\n+                y: exerciseScoreDTO.maxScoreAchieved,\n+                exerciseId: exerciseScoreDTO.exerciseId,\n+                exerciseTitle: exerciseScoreDTO.exerciseTitle,\n+                exerciseType: exerciseScoreDTO.exerciseType,\n+            } as Chart.ChartPoint);\n+        }\n+        this.chartInstance.update();\n+    }\n+\n+    navigateToExercise(exerciseId: number) {\n+        this.router.navigate(['courses', this.courseId, 'exercises', exerciseId]);\n+    }\n+}"
  },
  {
    "sha": "3eda6b999691b8eaf8c935cb147fedc7e1ee3625",
    "filename": "src/main/webapp/app/overview/learning-analytics/learning-analytics.module.ts",
    "status": "added",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/50d4535f7b3d7051d65c186faa923a07eaa7e059/src/main/webapp/app/overview/learning-analytics/learning-analytics.module.ts",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/50d4535f7b3d7051d65c186faa923a07eaa7e059/src/main/webapp/app/overview/learning-analytics/learning-analytics.module.ts",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/main/webapp/app/overview/learning-analytics/learning-analytics.module.ts?ref=50d4535f7b3d7051d65c186faa923a07eaa7e059",
    "patch": "@@ -0,0 +1,12 @@\n+import { CommonModule } from '@angular/common';\n+import { NgModule } from '@angular/core';\n+import { TranslateModule } from '@ngx-translate/core';\n+import { ExerciseScoresChartComponent } from 'app/overview/learning-analytics/exercise-scores-chart/exercise-scores-chart.component';\n+import { ChartsModule } from 'ng2-charts';\n+\n+@NgModule({\n+    imports: [ChartsModule, TranslateModule, CommonModule],\n+    declarations: [ExerciseScoresChartComponent],\n+    exports: [ExerciseScoresChartComponent],\n+})\n+export class ArtemisLearningAnalyticsModule {}"
  },
  {
    "sha": "1576ca126e3163659b0059639bbb23b21367e0ad",
    "filename": "src/main/webapp/app/overview/learning-analytics/learning-analytics.service.ts",
    "status": "added",
    "additions": 40,
    "deletions": 0,
    "changes": 40,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/50d4535f7b3d7051d65c186faa923a07eaa7e059/src/main/webapp/app/overview/learning-analytics/learning-analytics.service.ts",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/50d4535f7b3d7051d65c186faa923a07eaa7e059/src/main/webapp/app/overview/learning-analytics/learning-analytics.service.ts",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/main/webapp/app/overview/learning-analytics/learning-analytics.service.ts?ref=50d4535f7b3d7051d65c186faa923a07eaa7e059",
    "patch": "@@ -0,0 +1,40 @@\n+import { Injectable } from '@angular/core';\n+import { SERVER_API_URL } from 'app/app.constants';\n+import { HttpClient, HttpResponse } from '@angular/common/http';\n+import { Observable } from 'rxjs';\n+import * as moment from 'moment';\n+import { Moment } from 'moment';\n+\n+/**\n+ *  The server will always send all the properties and they are never null\n+ *\n+ */\n+export class ExerciseScoresDTO {\n+    public exerciseId?: number;\n+    public exerciseTitle?: string;\n+    public exerciseType?: string;\n+    public releaseDate?: Moment;\n+    public scoreOfStudent?: number;\n+    public averageScoreAchieved?: number;\n+    public maxScoreAchieved?: number;\n+}\n+\n+@Injectable({ providedIn: 'root' })\n+export class LearningAnalyticsService {\n+    public resourceUrl = SERVER_API_URL + 'api';\n+\n+    constructor(private http: HttpClient) {}\n+\n+    getCourseExerciseScores(courseId: number): Observable<HttpResponse<ExerciseScoresDTO[]>> {\n+        return this.http\n+            .get<ExerciseScoresDTO[]>(`${this.resourceUrl}/courses/${courseId}/analytics/exercise-scores`, { observe: 'response' })\n+            .map((response: HttpResponse<ExerciseScoresDTO[]>) => {\n+                if (response.body) {\n+                    for (const exerciseScoreDTO of response.body) {\n+                        exerciseScoreDTO.releaseDate = exerciseScoreDTO.releaseDate ? moment(exerciseScoreDTO.releaseDate) : undefined;\n+                    }\n+                }\n+                return response;\n+            });\n+    }\n+}"
  },
  {
    "sha": "bd510f766d8e734d710b2020e6c154e95bcccbfb",
    "filename": "src/main/webapp/i18n/de/learningAnalytics.json",
    "status": "added",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/50d4535f7b3d7051d65c186faa923a07eaa7e059/src/main/webapp/i18n/de/learningAnalytics.json",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/50d4535f7b3d7051d65c186faa923a07eaa7e059/src/main/webapp/i18n/de/learningAnalytics.json",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/main/webapp/i18n/de/learningAnalytics.json?ref=50d4535f7b3d7051d65c186faa923a07eaa7e059",
    "patch": "@@ -0,0 +1,12 @@\n+{\n+    \"artemisApp\": {\n+        \"exercise-scores-chart\": {\n+            \"title\": \"Leistung in Aufgaben\",\n+            \"yourScoreLabel\": \"Dein Ergebnis\",\n+            \"averageScoreLabel\": \"Durchschnittliches Ergebnis\",\n+            \"maximumScoreLabel\": \"Bestes Ergebnis\",\n+            \"yAxis\": \"Ergebnis (%)\",\n+            \"xAxis\": \"Aufgaben\"\n+        }\n+    }\n+}"
  },
  {
    "sha": "7f4c43c4107ecbb4b69a28eab76e68bd907cd813",
    "filename": "src/main/webapp/i18n/en/learningAnalytics.json",
    "status": "added",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/50d4535f7b3d7051d65c186faa923a07eaa7e059/src/main/webapp/i18n/en/learningAnalytics.json",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/50d4535f7b3d7051d65c186faa923a07eaa7e059/src/main/webapp/i18n/en/learningAnalytics.json",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/main/webapp/i18n/en/learningAnalytics.json?ref=50d4535f7b3d7051d65c186faa923a07eaa7e059",
    "patch": "@@ -0,0 +1,12 @@\n+{\n+    \"artemisApp\": {\n+        \"exercise-scores-chart\": {\n+            \"title\": \"Performance in Exercises\",\n+            \"yourScoreLabel\": \"Your score\",\n+            \"averageScoreLabel\": \"Average score\",\n+            \"maximumScoreLabel\": \"Best score\",\n+            \"yAxis\": \"Score (%)\",\n+            \"xAxis\": \"Exercises\"\n+        }\n+    }\n+}"
  },
  {
    "sha": "4df4939887e93e67e841b08778c6a3bdab318873",
    "filename": "src/test/java/de/tum/in/www1/artemis/LearningAnalyticsIntegrationTest.java",
    "status": "added",
    "additions": 131,
    "deletions": 0,
    "changes": 131,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/50d4535f7b3d7051d65c186faa923a07eaa7e059/src/test/java/de/tum/in/www1/artemis/LearningAnalyticsIntegrationTest.java",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/50d4535f7b3d7051d65c186faa923a07eaa7e059/src/test/java/de/tum/in/www1/artemis/LearningAnalyticsIntegrationTest.java",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/test/java/de/tum/in/www1/artemis/LearningAnalyticsIntegrationTest.java?ref=50d4535f7b3d7051d65c186faa923a07eaa7e059",
    "patch": "@@ -0,0 +1,131 @@\n+package de.tum.in.www1.artemis;\n+\n+import static org.assertj.core.api.AssertionsForClassTypes.assertThat;\n+\n+import java.time.ZonedDateTime;\n+import java.util.List;\n+import java.util.Set;\n+\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.security.test.context.support.WithMockUser;\n+\n+import de.tum.in.www1.artemis.domain.*;\n+import de.tum.in.www1.artemis.repository.*;\n+import de.tum.in.www1.artemis.service.ParticipationService;\n+import de.tum.in.www1.artemis.web.rest.dto.ExerciseScoresDTO;\n+\n+public class LearningAnalyticsIntegrationTest extends AbstractSpringIntegrationBambooBitbucketJiraTest {\n+\n+    Long idOfCourse;\n+\n+    Long idOfTeam1;\n+\n+    Long idOfTeam2;\n+\n+    Long idOfStudent1;\n+\n+    Long idOfStudent2;\n+\n+    Long idOfStudent3;\n+\n+    Long idOfIndividualTextExercise;\n+\n+    Long idOfIndividualTextExerciseWithoutParticipants;\n+\n+    Long idOfTeamTextExercise;\n+\n+    @Autowired\n+    SubmissionRepository submissionRepository;\n+\n+    @Autowired\n+    ResultRepository resultRepository;\n+\n+    @Autowired\n+    ExerciseRepository exerciseRepository;\n+\n+    @Autowired\n+    CourseRepository courseRepository;\n+\n+    @Autowired\n+    UserRepository userRepository;\n+\n+    @Autowired\n+    ParticipationService participationService;\n+\n+    @Autowired\n+    TeamRepository teamRepository;\n+\n+    @AfterEach\n+    public void resetDatabase() {\n+        database.resetDatabase();\n+    }\n+\n+    @BeforeEach\n+    public void setupTestScenario() {\n+        ZonedDateTime pastTimestamp = ZonedDateTime.now().minusDays(5);\n+        // creating the users student1-student5, tutor1-tutor10 and instructors1-instructor10\n+        this.database.addUsers(5, 10, 10);\n+        // creating course\n+        Course course = this.database.createCourse();\n+        idOfCourse = course.getId();\n+        TextExercise textExercise = database.createIndividualTextExercise(course, pastTimestamp, pastTimestamp, pastTimestamp);\n+        idOfIndividualTextExercise = textExercise.getId();\n+        TextExercise exerciseWithoutParticipants = database.createIndividualTextExercise(course, pastTimestamp, pastTimestamp, pastTimestamp);\n+        idOfIndividualTextExerciseWithoutParticipants = exerciseWithoutParticipants.getId();\n+\n+        Exercise teamExercise = database.createTeamTextExercise(course, pastTimestamp, pastTimestamp, pastTimestamp);\n+        idOfTeamTextExercise = teamExercise.getId();\n+        User student1 = userRepository.findOneByLogin(\"student1\").get();\n+        idOfStudent1 = student1.getId();\n+        User tutor1 = userRepository.findOneByLogin(\"tutor1\").get();\n+        idOfTeam1 = database.createTeam(Set.of(student1), tutor1, teamExercise, \"team1\").getId();\n+        User student2 = userRepository.findOneByLogin(\"student2\").get();\n+        idOfStudent2 = student2.getId();\n+        User student3 = userRepository.findOneByLogin(\"student3\").get();\n+        idOfStudent3 = student3.getId();\n+        User tutor2 = userRepository.findOneByLogin(\"tutor2\").get();\n+        idOfTeam2 = database.createTeam(Set.of(student2, student3), tutor2, teamExercise, \"team2\").getId();\n+\n+        // Creating result for student1\n+        database.createParticipationSubmissionAndResult(idOfIndividualTextExercise, student1, 10.0, 10.0, 50, true);\n+        // Creating result for team1\n+        Team team1 = teamRepository.findById(idOfTeam1).get();\n+        database.createParticipationSubmissionAndResult(idOfTeamTextExercise, team1, 10.0, 10.0, 50, true);\n+        // Creating result for student2\n+        database.createParticipationSubmissionAndResult(idOfIndividualTextExercise, student2, 10.0, 10.0, 40, true);\n+        // Creating result for student3\n+        database.createParticipationSubmissionAndResult(idOfIndividualTextExercise, student3, 10.0, 10.0, 30, true);\n+        // Creating result for team2\n+        Team team2 = teamRepository.findById(idOfTeam2).get();\n+        database.createParticipationSubmissionAndResult(idOfTeamTextExercise, team2, 10.0, 10.0, 90, true);\n+    }\n+\n+    @Test\n+    @WithMockUser(username = \"student1\", roles = \"USER\")\n+    public void getCourseExerciseScores_asStudent_shouldReturnCorrectIndividualAverageAndMaxScores() throws Exception {\n+        List<ExerciseScoresDTO> exerciseScores = request.getList(\"/api/courses/\" + idOfCourse + \"/analytics/exercise-scores\", HttpStatus.OK, ExerciseScoresDTO.class);\n+        assertThat(exerciseScores.size()).isEqualTo(3);\n+        ExerciseScoresDTO individualTextExercise = exerciseScores.stream().filter(exerciseScoresDTO -> exerciseScoresDTO.exerciseId.equals(idOfIndividualTextExercise)).findFirst()\n+                .get();\n+        ExerciseScoresDTO teamTextExercise = exerciseScores.stream().filter(exerciseScoresDTO -> exerciseScoresDTO.exerciseId.equals(idOfTeamTextExercise)).findFirst().get();\n+        ExerciseScoresDTO individualTextExerciseWithoutParticipants = exerciseScores.stream()\n+                .filter(exerciseScoresDTO -> exerciseScoresDTO.exerciseId.equals(idOfIndividualTextExerciseWithoutParticipants)).findFirst().get();\n+\n+        assertThat(individualTextExercise.scoreOfStudent).isEqualTo(50.0);\n+        assertThat(individualTextExercise.averageScoreAchieved).isEqualTo(40.0);\n+        assertThat(individualTextExercise.maxScoreAchieved).isEqualTo(50);\n+\n+        assertThat(teamTextExercise.scoreOfStudent).isEqualTo(50.0);\n+        assertThat(teamTextExercise.averageScoreAchieved).isEqualTo(70.0);\n+        assertThat(teamTextExercise.maxScoreAchieved).isEqualTo(90.0);\n+\n+        assertThat(individualTextExerciseWithoutParticipants.scoreOfStudent).isEqualTo(0.0);\n+        assertThat(individualTextExerciseWithoutParticipants.averageScoreAchieved).isEqualTo(0.0);\n+        assertThat(individualTextExerciseWithoutParticipants.maxScoreAchieved).isEqualTo(0.0);\n+    }\n+\n+}"
  },
  {
    "sha": "0c2d4e0e865d020ee165558c6dcfcca459587b6b",
    "filename": "src/test/java/de/tum/in/www1/artemis/ParticipantScoreIntegrationTest.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/50d4535f7b3d7051d65c186faa923a07eaa7e059/src/test/java/de/tum/in/www1/artemis/ParticipantScoreIntegrationTest.java",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/50d4535f7b3d7051d65c186faa923a07eaa7e059/src/test/java/de/tum/in/www1/artemis/ParticipantScoreIntegrationTest.java",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/test/java/de/tum/in/www1/artemis/ParticipantScoreIntegrationTest.java?ref=50d4535f7b3d7051d65c186faa923a07eaa7e059",
    "patch": "@@ -82,7 +82,7 @@ public void setupTestScenario() {\n         User student1 = userRepository.findOneByLogin(\"student1\").get();\n         idOfStudent1 = student1.getId();\n         User tutor1 = userRepository.findOneByLogin(\"tutor1\").get();\n-        idOfTeam1 = database.createTeam(Set.of(student1), tutor1, teamExercise).getId();\n+        idOfTeam1 = database.createTeam(Set.of(student1), tutor1, teamExercise, \"team1\").getId();\n \n         // Creating result for student1\n         database.createParticipationSubmissionAndResult(idOfIndividualTextExercise, student1, 10.0, 10.0, 50, true);"
  },
  {
    "sha": "7a0e4a9087a8ddfca5a9c73243da2e030e129919",
    "filename": "src/test/java/de/tum/in/www1/artemis/entitylistener/ResultListenerIntegrationTest.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/50d4535f7b3d7051d65c186faa923a07eaa7e059/src/test/java/de/tum/in/www1/artemis/entitylistener/ResultListenerIntegrationTest.java",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/50d4535f7b3d7051d65c186faa923a07eaa7e059/src/test/java/de/tum/in/www1/artemis/entitylistener/ResultListenerIntegrationTest.java",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/test/java/de/tum/in/www1/artemis/entitylistener/ResultListenerIntegrationTest.java?ref=50d4535f7b3d7051d65c186faa923a07eaa7e059",
    "patch": "@@ -96,7 +96,7 @@ public void setupTestScenario() {\n         Exercise teamExercise = database.createTeamTextExercise(course, pastTimestamp, pastTimestamp, pastTimestamp);\n         idOfTeamTextExercise = teamExercise.getId();\n         User tutor1 = userRepository.findOneByLogin(\"tutor1\").get();\n-        idOfTeam1 = database.createTeam(Set.of(student1), tutor1, teamExercise).getId();\n+        idOfTeam1 = database.createTeam(Set.of(student1), tutor1, teamExercise, \"team1\").getId();\n     }\n \n     @ParameterizedTest"
  },
  {
    "sha": "4e3075cafb2255d8b04da93cad6f4dcd923de089",
    "filename": "src/test/java/de/tum/in/www1/artemis/util/DatabaseUtilService.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/50d4535f7b3d7051d65c186faa923a07eaa7e059/src/test/java/de/tum/in/www1/artemis/util/DatabaseUtilService.java",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/50d4535f7b3d7051d65c186faa923a07eaa7e059/src/test/java/de/tum/in/www1/artemis/util/DatabaseUtilService.java",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/test/java/de/tum/in/www1/artemis/util/DatabaseUtilService.java?ref=50d4535f7b3d7051d65c186faa923a07eaa7e059",
    "patch": "@@ -359,14 +359,14 @@ public TextExercise createIndividualTextExercise(Course course, ZonedDateTime pa\n         return exerciseRepo.save(textExercise);\n     }\n \n-    public Team createTeam(Set<User> students, User owner, Exercise exercise) {\n+    public Team createTeam(Set<User> students, User owner, Exercise exercise, String teamName) {\n         Team team = new Team();\n         for (User student : students) {\n             team.addStudents(student);\n         }\n         team.setOwner(owner);\n-        team.setShortName(\"team1\");\n-        team.setName(\"team1\");\n+        team.setShortName(teamName);\n+        team.setName(teamName);\n         team.setExercise(exercise);\n         return teamRepo.saveAndFlush(team);\n     }"
  },
  {
    "sha": "d1fee71dd8b5f20929c2b9bdd82212dc25efd122",
    "filename": "src/test/javascript/spec/component/overview/learning-analytics/exercise-scores-chart.component.spec.ts",
    "status": "added",
    "additions": 57,
    "deletions": 0,
    "changes": 57,
    "blob_url": "https://github.com/ls1intum/Artemis/blob/50d4535f7b3d7051d65c186faa923a07eaa7e059/src/test/javascript/spec/component/overview/learning-analytics/exercise-scores-chart.component.spec.ts",
    "raw_url": "https://github.com/ls1intum/Artemis/raw/50d4535f7b3d7051d65c186faa923a07eaa7e059/src/test/javascript/spec/component/overview/learning-analytics/exercise-scores-chart.component.spec.ts",
    "contents_url": "https://api.github.com/repos/ls1intum/Artemis/contents/src/test/javascript/spec/component/overview/learning-analytics/exercise-scores-chart.component.spec.ts?ref=50d4535f7b3d7051d65c186faa923a07eaa7e059",
    "patch": "@@ -0,0 +1,57 @@\n+import * as chai from 'chai';\n+import * as sinonChai from 'sinon-chai';\n+import * as sinon from 'sinon';\n+import { ComponentFixture, TestBed } from '@angular/core/testing';\n+import { ExerciseScoresChartComponent } from 'app/overview/learning-analytics/exercise-scores-chart/exercise-scores-chart.component';\n+import { ChartsModule } from 'ng2-charts';\n+import { RouterTestingModule } from '@angular/router/testing';\n+import { MockPipe, MockProvider } from 'ng-mocks';\n+import { TranslatePipe, TranslateService } from '@ngx-translate/core';\n+import { JhiAlertService } from 'ng-jhipster';\n+import { LearningAnalyticsService } from 'app/overview/learning-analytics/learning-analytics.service';\n+import { ActivatedRoute } from '@angular/router';\n+import { of } from 'rxjs';\n+\n+chai.use(sinonChai);\n+const expect = chai.expect;\n+\n+describe('ExerciseScoresChartComponent', () => {\n+    let fixture: ComponentFixture<ExerciseScoresChartComponent>;\n+    let component: ExerciseScoresChartComponent;\n+    beforeEach(() => {\n+        TestBed.configureTestingModule({\n+            imports: [ChartsModule, RouterTestingModule.withRoutes([])],\n+            declarations: [ExerciseScoresChartComponent, MockPipe(TranslatePipe)],\n+            providers: [\n+                MockProvider(JhiAlertService),\n+                MockProvider(TranslateService),\n+                MockProvider(LearningAnalyticsService),\n+                {\n+                    provide: ActivatedRoute,\n+                    useValue: {\n+                        parent: {\n+                            params: of({\n+                                courseId: 1,\n+                            }),\n+                        },\n+                    },\n+                },\n+            ],\n+            schemas: [],\n+        })\n+            .compileComponents()\n+            .then(() => {\n+                fixture = TestBed.createComponent(ExerciseScoresChartComponent);\n+                component = fixture.componentInstance;\n+            });\n+    });\n+\n+    afterEach(function () {\n+        sinon.restore();\n+    });\n+\n+    it('should initialize', () => {\n+        fixture.detectChanges();\n+        expect(component).to.be.ok;\n+    });\n+});"
  }
]
