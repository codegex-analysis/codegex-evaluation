[
  {
    "sha": "1b0976f8590d33fe61ed30d2ebba5ab5597bd33a",
    "filename": "JavaFXUserInterface/src/main/java/controllers/AssetInfoController.java",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/rdsaliba/notorious-eng/blob/9470fe33c6de56e2c54ed66f8df35b48baab189a/JavaFXUserInterface/src/main/java/controllers/AssetInfoController.java",
    "raw_url": "https://github.com/rdsaliba/notorious-eng/raw/9470fe33c6de56e2c54ed66f8df35b48baab189a/JavaFXUserInterface/src/main/java/controllers/AssetInfoController.java",
    "contents_url": "https://api.github.com/repos/rdsaliba/notorious-eng/contents/JavaFXUserInterface/src/main/java/controllers/AssetInfoController.java?ref=9470fe33c6de56e2c54ed66f8df35b48baab189a",
    "patch": "@@ -138,7 +138,7 @@ public void initData(Asset asset) {\n         manufacturerOutput.setText(asset.getManufacturer());\n         locationOutput.setText(asset.getLocation());\n         siteOutput.setText(asset.getSite());\n-        modelOutput.setText(modelDAO.getModelNameFromAssetTypeID(asset.getAssetTypeID()));\n+        modelOutput.setText(modelDAO.getModelNameAssociatedWithAssetType(asset.getAssetTypeID()));\n         categoryOutput.setText(asset.getCategory());\n \n         rulOutput.setText(new DecimalFormat(\"#.##\").format(AssessmentController.getLatestEstimate(asset.getId())));\n@@ -286,7 +286,6 @@ public void generateRawDataTable() {\n         rawDataListPane.getChildren().addAll(tableview);\n     }\n \n-\n     /**\n      * this function fills the row of the raw table view given the table object and\n      * what from what cycle do we want to get the information"
  },
  {
    "sha": "6ebc7c12e6b4c4ac8ebef7d97c39746935c19fc7",
    "filename": "JavaFXUserInterface/src/main/java/controllers/AssetTypeInfoController.java",
    "status": "modified",
    "additions": 3,
    "deletions": 8,
    "changes": 11,
    "blob_url": "https://github.com/rdsaliba/notorious-eng/blob/9470fe33c6de56e2c54ed66f8df35b48baab189a/JavaFXUserInterface/src/main/java/controllers/AssetTypeInfoController.java",
    "raw_url": "https://github.com/rdsaliba/notorious-eng/raw/9470fe33c6de56e2c54ed66f8df35b48baab189a/JavaFXUserInterface/src/main/java/controllers/AssetTypeInfoController.java",
    "contents_url": "https://api.github.com/repos/rdsaliba/notorious-eng/contents/JavaFXUserInterface/src/main/java/controllers/AssetTypeInfoController.java?ref=9470fe33c6de56e2c54ed66f8df35b48baab189a",
    "patch": "@@ -127,8 +127,8 @@ public void initData(AssetTypeList assetType) {\n         this.originalAssetType = new AssetTypeList(assetType);\n         assetTypeName.setText(assetType.getAssetType().getName());\n         assetTypeDesc.setText(assetType.getAssetType().getDescription());\n-        associatedModelID = modelDAO.getModelIDFromAssetTypeID(assetType.getId());\n-        associatedModelLabel.setText(modelDAO.getModelNameFromAssetTypeID(assetType.getId()));\n+        associatedModelID = modelDAO.getModelIDAssociatedWithAssetType(assetType.getId());\n+        associatedModelLabel.setText(modelDAO.getModelNameAssociatedWithAssetType(assetType.getId()));\n         try {\n             thresholdOK.setText(TextConstants.ThresholdValueFormat.format(Double.parseDouble(assetType.getValueOk())));\n             thresholdAdvisory.setText(TextConstants.ThresholdValueFormat.format(Double.parseDouble(assetType.getValueAdvisory())));\n@@ -219,11 +219,6 @@ private void attachAssetTypeTextFieldsEvents() {\n      * @author Talal, Jeremie\n      */\n     private void initializeModelTab() {\n-        try {\n-            modelObservableList = FXCollections.observableArrayList(modelDAO.getAllModelsForEvaluation(Integer.parseInt(assetType.getId())));\n-        } catch (Exception e) {\n-            logger.error(\"Exception in getting all the models list\", e);\n-        }\n         modelSaveBtn.setDisable(true);\n         evaluateAllModelsBtn.setDisable(true);\n         evaluateButtons = new ArrayList<>();\n@@ -234,7 +229,7 @@ private void initializeModelTab() {\n         try {\n             modelObservableList = FXCollections.observableArrayList(modelDAO.getAllModelsForEvaluation(Integer.parseInt(assetType.getId())));\n         } catch (Exception e) {\n-            logger.error(\"Exception for modelObservableList, e\");\n+            logger.error(\"Exception in getting all the models list\", e);\n         }\n         modelsThumbPane.getChildren().clear();\n         generateThumbnails();"
  },
  {
    "sha": "66b7dc6e3602be8e6870c27244f197955dad4471",
    "filename": "JavaFXUserInterface/src/main/java/controllers/AssetsController.java",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/rdsaliba/notorious-eng/blob/9470fe33c6de56e2c54ed66f8df35b48baab189a/JavaFXUserInterface/src/main/java/controllers/AssetsController.java",
    "raw_url": "https://github.com/rdsaliba/notorious-eng/raw/9470fe33c6de56e2c54ed66f8df35b48baab189a/JavaFXUserInterface/src/main/java/controllers/AssetsController.java",
    "contents_url": "https://api.github.com/repos/rdsaliba/notorious-eng/contents/JavaFXUserInterface/src/main/java/controllers/AssetsController.java?ref=9470fe33c6de56e2c54ed66f8df35b48baab189a",
    "patch": "@@ -288,7 +288,6 @@ public void generateThumbnails() {\n         assetsThumbPane.getChildren().addAll(boxes);\n     }\n \n-\n     /**\n      * Creates a table element to list all the assets.\n      *\n@@ -313,7 +312,7 @@ public void generateList() {\n \n         TableColumn<Asset, String> modelCol = new TableColumn<>(MODEL_COL);\n         modelCol.setCellValueFactory(cellData -> new SimpleStringProperty(\n-                modelDAO.getModelNameFromAssetTypeID(cellData.getValue().getAssetTypeID())));\n+                modelDAO.getModelNameAssociatedWithAssetType(cellData.getValue().getAssetTypeID())));\n \n         TableColumn<Asset, Number> modelRULCol = new TableColumn<>(RUL_COL);\n         modelRULCol.setCellValueFactory(cellData -> new SimpleDoubleProperty("
  },
  {
    "sha": "b4afb8400c55960125293a1183da7f088c1d6026",
    "filename": "JavaFXUserInterface/src/main/java/external/ModelDAO.java",
    "status": "modified",
    "additions": 5,
    "deletions": 5,
    "changes": 10,
    "blob_url": "https://github.com/rdsaliba/notorious-eng/blob/9470fe33c6de56e2c54ed66f8df35b48baab189a/JavaFXUserInterface/src/main/java/external/ModelDAO.java",
    "raw_url": "https://github.com/rdsaliba/notorious-eng/raw/9470fe33c6de56e2c54ed66f8df35b48baab189a/JavaFXUserInterface/src/main/java/external/ModelDAO.java",
    "contents_url": "https://api.github.com/repos/rdsaliba/notorious-eng/contents/JavaFXUserInterface/src/main/java/external/ModelDAO.java?ref=9470fe33c6de56e2c54ed66f8df35b48baab189a",
    "patch": "@@ -15,19 +15,19 @@\n \n public interface ModelDAO {\n \n-    String getModelNameFromAssetTypeID(String assetTypeId);\n+    String getModelNameAssociatedWithAssetType(String assetTypeId);\n+\n+    int getModelIDAssociatedWithAssetType(String assetTypeID);\n \n     List<Model> getAllModelsForEvaluation(int assetTypeID);\n \n     void updateModelAssociatedWithAssetType(int modelID, String assetTypeID);\n \n     void setModelToTrain(String assetTypeID);\n \n-    String getGetModelEvaluation(int modelID, String assetTypeID);\n-\n-    int getModelIDFromAssetTypeID(String assetTypeID);\n-\n     ModelStrategy getModelStrategy(int modelID, int assetTypeID) throws SQLException;\n \n     void updateModelStrategy(ModelStrategy modelStrategy, int modelID, int assetTypeID);\n+\n+    double getLatestRMSE(int modelID, int assetTypeID);\n }\n\\ No newline at end of file"
  },
  {
    "sha": "fdc3124bda361cda3ba0debef42eaefad468a145",
    "filename": "JavaFXUserInterface/src/main/java/external/ModelDAOImpl.java",
    "status": "modified",
    "additions": 13,
    "deletions": 36,
    "changes": 49,
    "blob_url": "https://github.com/rdsaliba/notorious-eng/blob/9470fe33c6de56e2c54ed66f8df35b48baab189a/JavaFXUserInterface/src/main/java/external/ModelDAOImpl.java",
    "raw_url": "https://github.com/rdsaliba/notorious-eng/raw/9470fe33c6de56e2c54ed66f8df35b48baab189a/JavaFXUserInterface/src/main/java/external/ModelDAOImpl.java",
    "contents_url": "https://api.github.com/repos/rdsaliba/notorious-eng/contents/JavaFXUserInterface/src/main/java/external/ModelDAOImpl.java?ref=9470fe33c6de56e2c54ed66f8df35b48baab189a",
    "patch": "@@ -23,26 +23,27 @@\n import java.util.List;\n \n public class ModelDAOImpl extends DAO implements ModelDAO {\n-    private static final String GET_MODEL_FROM_ASSET_TYPE_ID = \"SELECT * from trained_model, model WHERE trained_model.model_id = model.model_id AND trained_model.asset_type_id = ? AND model.archived = 0\";\n+    private static final String GET_MODEL_ASSOCIATED_WITH_ASSET_TYPE = \"SELECT * from trained_model tm, model m WHERE tm.asset_type_id = ? AND tm.status_id = ? AND tm.model_id = m.model_id AND m.archived = 0\";\n     private static final String GET_ALL_MODELS_FOR_EVALUATION = \"SELECT trained_model.*, model.name, model.description from trained_model, model where trained_model.model_id=model.model_id AND asset_type_id=? AND status_id=? AND model.archived = 0\";\n     private static final String GET_LATEST_RMSE = \"SELECT rmse FROM trained_model tm, model m WHERE tm.model_id=? AND tm.asset_type_id=? AND tm.status_id=? AND tm.model_id = m.model_id AND m.archived=0\";\n     private static final String GET_MODEL_STRATEGY = \"SELECT serialized_model FROM trained_model tm, model m WHERE tm.model_id=? AND tm.asset_type_id=? AND tm.status_id=? AND tm.model_id=m.model_id AND m.archived = 0\";\n     private static final String UPDATE_MODEL_STRATEGY = \"UPDATE trained_model tm, model m SET tm.serialized_model=?, tm.retrain=true WHERE tm.model_id = ? AND tm.asset_type_id = ? AND tm.status_id = ? AND tm.model_id=m.model_id AND m.archived = 0\";\n-    private static final String UPDATE_MODEL_FOR_ASSET_TYPE = \"UPDATE trained_model tm, model m SET tm.model_id = ? WHERE tm.asset_type_id = ? AND status_id = ? AND tm.model_id=m.model_id AND m.archived = 0\";\n+    private static final String UPDATE_MODEL_FOR_ASSET_TYPE = \"UPDATE trained_model tm, model m SET tm.model_id = ? WHERE tm.asset_type_id = ? AND tm.status_id = ? AND tm.model_id=m.model_id AND m.archived = 0\";\n     private static final String UPDATE_RETRAIN = \"UPDATE trained_model tm, model m SET retrain = true WHERE tm.asset_type_id = ? AND tm.status_id = ? AND tm.model_id=m.model_id AND m.archived = 0\";\n \n     /**\n-     * Given a asset type id, this function will return the string corresponding\n+     * Given an asset type id, this function will return the string corresponding\n      * to the name of the model in the database associated with the asset type\n      *\n-     * @param assetTypeID represents a asset type id\n+     * @param assetTypeID represents an asset type id\n      * @author Paul\n      */\n     @Override\n-    public String getModelNameFromAssetTypeID(String assetTypeID) {\n+    public String getModelNameAssociatedWithAssetType(String assetTypeID) {\n         String name = null;\n-        try (PreparedStatement ps = getConnection().prepareStatement(GET_MODEL_FROM_ASSET_TYPE_ID)) {\n+        try (PreparedStatement ps = getConnection().prepareStatement(GET_MODEL_ASSOCIATED_WITH_ASSET_TYPE)) {\n             ps.setString(1, assetTypeID);\n+            ps.setInt(2, Constants.STATUS_LIVE);\n             try (ResultSet rs = ps.executeQuery()) {\n                 if (rs.next())\n                     name = rs.getString(\"name\");\n@@ -54,17 +55,18 @@ public String getModelNameFromAssetTypeID(String assetTypeID) {\n     }\n \n     /**\n-     * Given a asset type id, this function will return the int corresponding\n+     * Given an asset type id, this function will return the int corresponding\n      * to the ID of the model in the database associated with the asset type\n      *\n      * @param assetTypeID is the Asset type Id of the asset\n      * @author Talal, Jeremie\n      **/\n     @Override\n-    public int getModelIDFromAssetTypeID(String assetTypeID) {\n+    public int getModelIDAssociatedWithAssetType(String assetTypeID) {\n         int modelID = 0;\n-        try (PreparedStatement ps = getConnection().prepareStatement(GET_MODEL_FROM_ASSET_TYPE_ID)) {\n+        try (PreparedStatement ps = getConnection().prepareStatement(GET_MODEL_ASSOCIATED_WITH_ASSET_TYPE)) {\n             ps.setString(1, assetTypeID);\n+            ps.setInt(2, Constants.STATUS_LIVE);\n             try (ResultSet rs = ps.executeQuery()) {\n                 if (rs.next())\n                     modelID = rs.getInt(\"model_id\");\n@@ -141,32 +143,6 @@ public void setModelToTrain(String assetTypeID) {\n         }\n     }\n \n-    /**\n-     * This function sets the model associated with the specified asset type to be retrained. It changes\n-     * the retrain attribute to true.\n-     *\n-     * @param assetTypeID is the asset type ID of the specified asset type\n-     * @return The value of the RMSE under a String format\n-     * @author Jeremie\n-     */\n-    @Override\n-    public String getGetModelEvaluation(int modelID, String assetTypeID) {\n-        String rmseValue = null;\n-        try (PreparedStatement ps = getConnection().prepareStatement(GET_LATEST_RMSE)) {\n-            ps.setInt(1, modelID);\n-            ps.setString(2, assetTypeID);\n-            ps.setInt(3, Constants.STATUS_EVALUATION);\n-            try (ResultSet rs = ps.executeQuery()) {\n-                if (rs.next())\n-                    rmseValue = rs.getString(\"rmse\");\n-            }\n-        } catch (SQLException e) {\n-            logger.error(\"Exception in getGetModelEvaluation()\");\n-        }\n-        if (rmseValue == null) return \"n/a\";\n-        else return rmseValue;\n-    }\n-\n     /**\n      * This function returns the model strategy for a specific model of an asset type\n      *\n@@ -231,8 +207,9 @@ public void updateModelStrategy(ModelStrategy modelStrategy, int modelID, int as\n      * @param assetTypeID is the asset type's ID\n      * @author talal\n      */\n+    @Override\n     public double getLatestRMSE(int modelID, int assetTypeID) {\n-        double estimate = -100000;\n+        double estimate = -1000000;\n         try (PreparedStatement ps = getConnection().prepareStatement(GET_LATEST_RMSE)) {\n             ps.setInt(1, modelID);\n             ps.setInt(2, assetTypeID);"
  },
  {
    "sha": "bf269fd568653197b80d0dcf67a102709621665f",
    "filename": "JavaFXUserInterface/src/test/java/UnitTests/external/ModelDAOTest.java",
    "status": "modified",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/rdsaliba/notorious-eng/blob/9470fe33c6de56e2c54ed66f8df35b48baab189a/JavaFXUserInterface/src/test/java/UnitTests/external/ModelDAOTest.java",
    "raw_url": "https://github.com/rdsaliba/notorious-eng/raw/9470fe33c6de56e2c54ed66f8df35b48baab189a/JavaFXUserInterface/src/test/java/UnitTests/external/ModelDAOTest.java",
    "contents_url": "https://api.github.com/repos/rdsaliba/notorious-eng/contents/JavaFXUserInterface/src/test/java/UnitTests/external/ModelDAOTest.java?ref=9470fe33c6de56e2c54ed66f8df35b48baab189a",
    "patch": "@@ -39,15 +39,15 @@ public void getAllModelsTest() {\n \n     @Test\n     public void getModelFromAssetTypeTest() {\n-        int modelID = modelDAO.getModelIDFromAssetTypeID(\"4\");\n-        String modelName = modelDAO.getModelNameFromAssetTypeID(\"4\");\n+        int modelID = modelDAO.getModelIDAssociatedWithAssetType(\"4\");\n+        String modelName = modelDAO.getModelNameAssociatedWithAssetType(\"4\");\n         assertEquals(1, modelID);\n         assertEquals(\"Linear\", modelName);\n     }\n \n     @Test\n     public void getModelEvaluationTest() {\n-        String RMSE = modelDAO.getGetModelEvaluation(8, \"4\");\n-        assertNull(RMSE);\n+        double RMSE = modelDAO.getLatestRMSE(8, 4);\n+        assertEquals(-1000000,RMSE,0.5);\n     }\n }\n\\ No newline at end of file"
  }
]
