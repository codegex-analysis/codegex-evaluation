[
  {
    "sha": "ff2d798301898371c67774bc356cc4d3c4e8e700",
    "filename": "buildSrc/src/integTest/groovy/org/elasticsearch/gradle/RestResourcesPluginFuncTest.groovy",
    "status": "modified",
    "additions": 7,
    "deletions": 9,
    "changes": 16,
    "blob_url": "https://github.com/elastic/elasticsearch/blob/d461d3c31c166a91ee9ea77107ec71ae8efd6bf8/buildSrc/src/integTest/groovy/org/elasticsearch/gradle/RestResourcesPluginFuncTest.groovy",
    "raw_url": "https://github.com/elastic/elasticsearch/raw/d461d3c31c166a91ee9ea77107ec71ae8efd6bf8/buildSrc/src/integTest/groovy/org/elasticsearch/gradle/RestResourcesPluginFuncTest.groovy",
    "contents_url": "https://api.github.com/repos/elastic/elasticsearch/contents/buildSrc/src/integTest/groovy/org/elasticsearch/gradle/RestResourcesPluginFuncTest.groovy?ref=d461d3c31c166a91ee9ea77107ec71ae8efd6bf8",
    "patch": "@@ -52,7 +52,7 @@ class RestResourcesPluginFuncTest extends AbstractRestResourcesFuncTest {\n         file(\"/build/restResources/yamlSpecs/rest-api-spec/api/\" + api).exists()\n     }\n \n-    def \"restResources copies all core API (but not x-pack) by default for projects with copied tests\"() {\n+    def \"restResources copies all API by default for projects with copied tests\"() {\n         given:\n         internalBuild()\n         buildFile << \"\"\"\n@@ -71,7 +71,7 @@ class RestResourcesPluginFuncTest extends AbstractRestResourcesFuncTest {\n         String apiXpack = \"xpack.json\"\n         String coreTest = \"foo/10_basic.yml\"\n         String xpackTest = \"bar/10_basic.yml\"\n-        setupRestResources([apiCore1, apiCore2], [coreTest], [apiXpack], [xpackTest])\n+        setupRestResources([apiCore1, apiCore2, apiXpack], [coreTest], [xpackTest])\n         // intentionally not adding tests to project, they will be copied over via the plugin\n         // this tests that the test copy happens before the api copy since the api copy will only trigger if there are tests in the project\n \n@@ -83,7 +83,7 @@ class RestResourcesPluginFuncTest extends AbstractRestResourcesFuncTest {\n         result.task(':copyYamlTestsTask').outcome == TaskOutcome.SUCCESS\n         file(\"/build/restResources/yamlSpecs/rest-api-spec/api/\" + apiCore1).exists()\n         file(\"/build/restResources/yamlSpecs/rest-api-spec/api/\" + apiCore2).exists()\n-        file(\"/build/restResources/yamlSpecs/rest-api-spec/api/\" + apiXpack).exists() == false //x-pack specs must be explicitly configured\n+        file(\"/build/restResources/yamlSpecs/rest-api-spec/api/\" + apiXpack).exists()\n         file(\"/build/restResources/yamlTests/rest-api-spec/test/\" + coreTest).exists()\n         file(\"/build/restResources/yamlTests/rest-api-spec/test/\" + xpackTest).exists()\n     }\n@@ -97,16 +97,15 @@ class RestResourcesPluginFuncTest extends AbstractRestResourcesFuncTest {\n \n             restResources {\n                 restApi {\n-                    includeCore 'foo'\n-                    includeXpack 'xpackfoo'\n+                    include 'foo', 'xpackfoo'\n                 }\n             }\n         \"\"\"\n         String apiFoo = \"foo.json\"\n         String apiXpackFoo = \"xpackfoo.json\"\n         String apiBar = \"bar.json\"\n         String apiXpackBar = \"xpackbar.json\"\n-        setupRestResources([apiFoo, apiBar], [], [apiXpackFoo, apiXpackBar])\n+        setupRestResources([apiFoo, apiBar, apiXpackFoo, apiXpackBar])\n         addRestTestsToProject([\"10_basic.yml\"])\n \n         when:\n@@ -130,8 +129,7 @@ class RestResourcesPluginFuncTest extends AbstractRestResourcesFuncTest {\n \n             restResources {\n                 restApi {\n-                    includeCore '*'\n-                    includeXpack '*'\n+                    include '*'\n                 }\n                 restTests {\n                     includeCore 'foo'\n@@ -144,7 +142,7 @@ class RestResourcesPluginFuncTest extends AbstractRestResourcesFuncTest {\n         String apiXpack = \"xpack.json\"\n         String coreTest = \"foo/10_basic.yml\"\n         String xpackTest = \"bar/10_basic.yml\"\n-        setupRestResources([apiCore1, apiCore2], [coreTest], [apiXpack], [xpackTest])\n+        setupRestResources([apiCore1, apiCore2, apiXpack], [coreTest], [xpackTest])\n         // intentionally not adding tests to project, they will be copied over via the plugin\n         // this tests that the test copy happens before the api copy since the api copy will only trigger if there are tests in the project\n "
  },
  {
    "sha": "5372368fbd62923aedda3bd2b0926bb433aa5c26",
    "filename": "buildSrc/src/integTest/groovy/org/elasticsearch/gradle/fixtures/AbstractRestResourcesFuncTest.groovy",
    "status": "modified",
    "additions": 5,
    "deletions": 10,
    "changes": 15,
    "blob_url": "https://github.com/elastic/elasticsearch/blob/d461d3c31c166a91ee9ea77107ec71ae8efd6bf8/buildSrc/src/integTest/groovy/org/elasticsearch/gradle/fixtures/AbstractRestResourcesFuncTest.groovy",
    "raw_url": "https://github.com/elastic/elasticsearch/raw/d461d3c31c166a91ee9ea77107ec71ae8efd6bf8/buildSrc/src/integTest/groovy/org/elasticsearch/gradle/fixtures/AbstractRestResourcesFuncTest.groovy",
    "contents_url": "https://api.github.com/repos/elastic/elasticsearch/contents/buildSrc/src/integTest/groovy/org/elasticsearch/gradle/fixtures/AbstractRestResourcesFuncTest.groovy?ref=d461d3c31c166a91ee9ea77107ec71ae8efd6bf8",
    "patch": "@@ -11,37 +11,32 @@ package org.elasticsearch.gradle.fixtures;\n \n abstract class AbstractRestResourcesFuncTest extends AbstractGradleFuncTest {\n \n-    void setupRestResources(List<String> apis, List<String> tests = [], List<String> xpackApis = [], List<String> xpackTests = []) {\n+    void setupRestResources(List<String> apis, List<String> tests = [], List<String> xpackTests = []) {\n         addSubProject(\":test:framework\") << \"apply plugin: 'elasticsearch.java'\"\n         addSubProject(\":distribution:archives:integ-test-zip\") << \"configurations { extracted }\"\n         addSubProject(\":rest-api-spec\") << \"\"\"\n         configurations { restSpecs\\nrestTests }\n         artifacts {\n           restSpecs(new File(projectDir, \"src/main/resources/rest-api-spec/api\"))\n-          restTests(new File(projectDir, \"src/main/resources/rest-api-spec/test\"))\n+          restTests(new File(projectDir, \"src/yamlRestTest/resources/rest-api-spec/test\"))\n         }\n         \"\"\"\n         addSubProject(\":x-pack:plugin\") << \"\"\"\n         configurations { restXpackSpecs\\nrestXpackTests }\n         artifacts {\n-          //The api and tests need to stay at src/test/... since some external tooling depends on that exact file path.\n-          restXpackSpecs(new File(projectDir, \"src/test/resources/rest-api-spec/api\"))\n-          restXpackTests(new File(projectDir, \"src/test/resources/rest-api-spec/test\"))\n+          restXpackTests(new File(projectDir, \"src/yamlRestTest/resources/rest-api-spec/test\"))\n         }\n         \"\"\"\n \n-        xpackApis.each { api ->\n-            file(\"x-pack/plugin/src/test/resources/rest-api-spec/api/\" + api) << \"\"\n-        }\n         xpackTests.each { test ->\n-            file(\"x-pack/plugin/src/test/resources/rest-api-spec/test/\" + test) << \"\"\n+            file(\"x-pack/plugin/src/yamlRestTest/resources/rest-api-spec/test/\" + test) << \"\"\n         }\n \n         apis.each { api ->\n             file(\"rest-api-spec/src/main/resources/rest-api-spec/api/\" + api) << \"\"\n         }\n         tests.each { test ->\n-            file(\"rest-api-spec/src/main/resources/rest-api-spec/test/\" + test) << \"\"\n+            file(\"rest-api-spec/src/yamlRestTest/resources/rest-api-spec/test/\" + test) << \"\"\n         }\n     }\n "
  },
  {
    "sha": "9c89cf0f86985d54529ac9c044dafc66ddb28fcb",
    "filename": "buildSrc/src/main/java/org/elasticsearch/gradle/internal/rest/compat/YamlRestCompatTestPlugin.java",
    "status": "modified",
    "additions": 3,
    "deletions": 10,
    "changes": 13,
    "blob_url": "https://github.com/elastic/elasticsearch/blob/d461d3c31c166a91ee9ea77107ec71ae8efd6bf8/buildSrc/src/main/java/org/elasticsearch/gradle/internal/rest/compat/YamlRestCompatTestPlugin.java",
    "raw_url": "https://github.com/elastic/elasticsearch/raw/d461d3c31c166a91ee9ea77107ec71ae8efd6bf8/buildSrc/src/main/java/org/elasticsearch/gradle/internal/rest/compat/YamlRestCompatTestPlugin.java",
    "contents_url": "https://api.github.com/repos/elastic/elasticsearch/contents/buildSrc/src/main/java/org/elasticsearch/gradle/internal/rest/compat/YamlRestCompatTestPlugin.java?ref=d461d3c31c166a91ee9ea77107ec71ae8efd6bf8",
    "patch": "@@ -87,11 +87,9 @@ public void apply(Project project) {\n         Provider<CopyRestApiTask> copyCompatYamlSpecTask = project.getTasks()\n             .register(\"copyRestCompatApiTask\", CopyRestApiTask.class, task -> {\n                 task.dependsOn(bwcMinorConfig);\n-                task.setCoreConfig(bwcMinorConfig);\n-                task.setXpackConfig(bwcMinorConfig);\n+                task.setConfig(bwcMinorConfig);\n                 task.setAdditionalConfig(bwcMinorConfig);\n-                task.getIncludeCore().set(extension.getRestApi().getIncludeCore());\n-                task.getIncludeXpack().set(extension.getRestApi().getIncludeXpack());\n+                task.getInclude().set(extension.getRestApi().getInclude());\n                 task.getOutputResourceDir().set(project.getLayout().getBuildDirectory().dir(compatSpecsDir.toString()));\n                 task.setSourceResourceDir(\n                     yamlCompatTestSourceSet.getResources()\n@@ -102,16 +100,11 @@ public void apply(Project project) {\n                         .orElse(null)\n                 );\n                 task.setSkipHasRestTestCheck(true);\n-                task.setCoreConfigToFileTree(\n+                task.setConfigToFileTree(\n                     config -> project.fileTree(\n                         config.getSingleFile().toPath().resolve(RELATIVE_REST_API_RESOURCES).resolve(RELATIVE_API_PATH)\n                     )\n                 );\n-                task.setXpackConfigToFileTree(\n-                    config -> project.fileTree(\n-                        config.getSingleFile().toPath().resolve(RELATIVE_REST_XPACK_RESOURCES).resolve(RELATIVE_API_PATH)\n-                    )\n-                );\n                 task.setAdditionalConfigToFileTree(\n                     config -> project.fileTree(\n                         getCompatProjectPath(project, config.getSingleFile().toPath()).resolve(RELATIVE_REST_PROJECT_RESOURCES)"
  },
  {
    "sha": "72f5ec61d71ac8c3db7fa9611ae56de2a6c9c856",
    "filename": "buildSrc/src/main/java/org/elasticsearch/gradle/test/rest/CopyRestApiTask.java",
    "status": "modified",
    "additions": 26,
    "deletions": 69,
    "changes": 95,
    "blob_url": "https://github.com/elastic/elasticsearch/blob/d461d3c31c166a91ee9ea77107ec71ae8efd6bf8/buildSrc/src/main/java/org/elasticsearch/gradle/test/rest/CopyRestApiTask.java",
    "raw_url": "https://github.com/elastic/elasticsearch/raw/d461d3c31c166a91ee9ea77107ec71ae8efd6bf8/buildSrc/src/main/java/org/elasticsearch/gradle/test/rest/CopyRestApiTask.java",
    "contents_url": "https://api.github.com/repos/elastic/elasticsearch/contents/buildSrc/src/main/java/org/elasticsearch/gradle/test/rest/CopyRestApiTask.java?ref=d461d3c31c166a91ee9ea77107ec71ae8efd6bf8",
    "patch": "@@ -47,22 +47,18 @@\n public class CopyRestApiTask extends DefaultTask {\n     private static final String REST_API_PREFIX = \"rest-api-spec/api\";\n     private static final String REST_TEST_PREFIX = \"rest-api-spec/test\";\n-    private final ListProperty<String> includeCore;\n-    private final ListProperty<String> includeXpack;\n+    private final ListProperty<String> include;\n     private final DirectoryProperty outputResourceDir;\n     private final DirectoryProperty additionalYamlTestsDir;\n \n     private File sourceResourceDir;\n     private boolean skipHasRestTestCheck;\n-    private FileCollection coreConfig;\n-    private FileCollection xpackConfig;\n+    private FileCollection config;\n     private FileCollection additionalConfig;\n-    private Function<FileCollection, FileTree> coreConfigToFileTree = FileCollection::getAsFileTree;\n-    private Function<FileCollection, FileTree> xpackConfigToFileTree = FileCollection::getAsFileTree;\n+    private Function<FileCollection, FileTree> configToFileTree = FileCollection::getAsFileTree;\n     private Function<FileCollection, FileTree> additionalConfigToFileTree = FileCollection::getAsFileTree;\n \n-    private final PatternFilterable corePatternSet;\n-    private final PatternFilterable xpackPatternSet;\n+    private final PatternFilterable patternSet;\n     private final ProjectLayout projectLayout;\n     private final FileSystemOperations fileSystemOperations;\n     private final ArchiveOperations archiveOperations;\n@@ -75,25 +71,18 @@ public CopyRestApiTask(\n         ArchiveOperations archiveOperations,\n         ObjectFactory objectFactory\n     ) {\n-        this.includeCore = objectFactory.listProperty(String.class);\n-        this.includeXpack = objectFactory.listProperty(String.class);\n+        this.include = objectFactory.listProperty(String.class);\n         this.outputResourceDir = objectFactory.directoryProperty();\n         this.additionalYamlTestsDir = objectFactory.directoryProperty();\n-        this.corePatternSet = patternSetFactory.create();\n-        this.xpackPatternSet = patternSetFactory.create();\n+        this.patternSet = patternSetFactory.create();\n         this.projectLayout = projectLayout;\n         this.fileSystemOperations = fileSystemOperations;\n         this.archiveOperations = archiveOperations;\n     }\n \n     @Input\n-    public ListProperty<String> getIncludeCore() {\n-        return includeCore;\n-    }\n-\n-    @Input\n-    public ListProperty<String> getIncludeXpack() {\n-        return includeXpack;\n+    public ListProperty<String> getInclude() {\n+        return include;\n     }\n \n     @Input\n@@ -105,29 +94,22 @@ public boolean isSkipHasRestTestCheck() {\n     @InputFiles\n     public FileTree getInputDir() {\n         FileTree coreFileTree = null;\n-        FileTree xpackFileTree = null;\n-        if (includeXpack.get().isEmpty() == false) {\n-            xpackPatternSet.setIncludes(includeXpack.get().stream().map(prefix -> prefix + \"*/**\").collect(Collectors.toList()));\n-            xpackFileTree = xpackConfigToFileTree.apply(xpackConfig).matching(xpackPatternSet);\n-        }\n         boolean projectHasYamlRestTests = skipHasRestTestCheck || projectHasYamlRestTests();\n-        if (includeCore.get().isEmpty() == false || projectHasYamlRestTests) {\n+        if (include.get().isEmpty() == false || projectHasYamlRestTests) {\n             if (BuildParams.isInternal()) {\n-                corePatternSet.setIncludes(includeCore.get().stream().map(prefix -> prefix + \"*/**\").collect(Collectors.toList()));\n-                coreFileTree = coreConfigToFileTree.apply(coreConfig).matching(corePatternSet); // directory on disk\n+                patternSet.setIncludes(include.get().stream().map(prefix -> prefix + \"*/**\").collect(Collectors.toList()));\n+                coreFileTree = configToFileTree.apply(config).matching(patternSet); // directory on disk\n             } else {\n-                coreFileTree = coreConfig.getAsFileTree(); // jar file\n+                coreFileTree = config.getAsFileTree(); // jar file\n             }\n         }\n \n         FileCollection fileCollection = additionalConfig == null\n-            ? projectLayout.files(coreFileTree, xpackFileTree)\n-            : projectLayout.files(coreFileTree, xpackFileTree, additionalConfigToFileTree.apply(additionalConfig));\n+            ? coreFileTree\n+            : projectLayout.files(coreFileTree, additionalConfigToFileTree.apply(additionalConfig));\n \n         // if project has rest tests or the includes are explicitly configured execute the task, else NO-SOURCE due to the null input\n-        return projectHasYamlRestTests || includeCore.get().isEmpty() == false || includeXpack.get().isEmpty() == false\n-            ? fileCollection.getAsFileTree()\n-            : null;\n+        return projectHasYamlRestTests || include.get().isEmpty() == false ? fileCollection.getAsFileTree() : null;\n     }\n \n     @OutputDirectory\n@@ -152,9 +134,9 @@ void copy() {\n         if (BuildParams.isInternal()) {\n             getLogger().debug(\"Rest specs for project [{}] will be copied to the test resources.\", projectPath);\n             fileSystemOperations.copy(c -> {\n-                c.from(coreConfigToFileTree.apply(coreConfig));\n+                c.from(configToFileTree.apply(config));\n                 c.into(restSpecOutputDir);\n-                c.include(corePatternSet.getIncludes());\n+                c.include(patternSet.getIncludes());\n             });\n         } else {\n             getLogger().debug(\n@@ -163,26 +145,15 @@ void copy() {\n                 VersionProperties.getElasticsearch()\n             );\n             fileSystemOperations.copy(c -> {\n-                c.from(archiveOperations.zipTree(coreConfig.getSingleFile())); // jar file\n+                c.from(archiveOperations.zipTree(config.getSingleFile())); // jar file\n                 c.into(outputResourceDir);\n-                if (includeCore.get().isEmpty()) {\n+                if (include.get().isEmpty()) {\n                     c.include(REST_API_PREFIX + \"/**\");\n                 } else {\n-                    c.include(\n-                        includeCore.get().stream().map(prefix -> REST_API_PREFIX + \"/\" + prefix + \"*/**\").collect(Collectors.toList())\n-                    );\n+                    c.include(include.get().stream().map(prefix -> REST_API_PREFIX + \"/\" + prefix + \"*/**\").collect(Collectors.toList()));\n                 }\n             });\n         }\n-        // only copy x-pack specs if explicitly instructed\n-        if (includeXpack.get().isEmpty() == false) {\n-            getLogger().debug(\"X-pack rest specs for project [{}] will be copied to the test resources.\", projectPath);\n-            fileSystemOperations.copy(c -> {\n-                c.from(xpackConfigToFileTree.apply(xpackConfig));\n-                c.into(restSpecOutputDir);\n-                c.include(xpackPatternSet.getIncludes());\n-            });\n-        }\n \n         // copy any additional config\n         if (additionalConfig != null) {\n@@ -222,38 +193,24 @@ public void setSkipHasRestTestCheck(boolean skipHasRestTestCheck) {\n         this.skipHasRestTestCheck = skipHasRestTestCheck;\n     }\n \n-    public void setCoreConfig(FileCollection coreConfig) {\n-        this.coreConfig = coreConfig;\n-    }\n-\n-    public void setXpackConfig(FileCollection xpackConfig) {\n-        this.xpackConfig = xpackConfig;\n+    public void setConfig(FileCollection config) {\n+        this.config = config;\n     }\n \n     public void setAdditionalConfig(FileCollection additionalConfig) {\n         this.additionalConfig = additionalConfig;\n     }\n \n-    public void setCoreConfigToFileTree(Function<FileCollection, FileTree> coreConfigToFileTree) {\n-        this.coreConfigToFileTree = coreConfigToFileTree;\n-    }\n-\n-    public void setXpackConfigToFileTree(Function<FileCollection, FileTree> xpackConfigToFileTree) {\n-        this.xpackConfigToFileTree = xpackConfigToFileTree;\n+    public void setConfigToFileTree(Function<FileCollection, FileTree> configToFileTree) {\n+        this.configToFileTree = configToFileTree;\n     }\n \n     public void setAdditionalConfigToFileTree(Function<FileCollection, FileTree> additionalConfigToFileTree) {\n         this.additionalConfigToFileTree = additionalConfigToFileTree;\n     }\n \n     @Internal\n-    public FileCollection getCoreConfig() {\n-        return coreConfig;\n+    public FileCollection getConfig() {\n+        return config;\n     }\n-\n-    @Internal\n-    public FileCollection getXpackConfig() {\n-        return xpackConfig;\n-    }\n-\n }"
  },
  {
    "sha": "04c6fcb34bcd62beef802c4a0f9ac085ba0d8496",
    "filename": "buildSrc/src/main/java/org/elasticsearch/gradle/test/rest/RestResourcesExtension.java",
    "status": "modified",
    "additions": 27,
    "deletions": 9,
    "changes": 36,
    "blob_url": "https://github.com/elastic/elasticsearch/blob/d461d3c31c166a91ee9ea77107ec71ae8efd6bf8/buildSrc/src/main/java/org/elasticsearch/gradle/test/rest/RestResourcesExtension.java",
    "raw_url": "https://github.com/elastic/elasticsearch/raw/d461d3c31c166a91ee9ea77107ec71ae8efd6bf8/buildSrc/src/main/java/org/elasticsearch/gradle/test/rest/RestResourcesExtension.java",
    "contents_url": "https://api.github.com/repos/elastic/elasticsearch/contents/buildSrc/src/main/java/org/elasticsearch/gradle/test/rest/RestResourcesExtension.java?ref=d461d3c31c166a91ee9ea77107ec71ae8efd6bf8",
    "patch": "@@ -19,37 +19,58 @@\n  */\n public class RestResourcesExtension {\n \n-    final RestResourcesSpec restApi;\n-    final RestResourcesSpec restTests;\n+    private final RestResourcesSpec restApi;\n+    private final XpackRestResourcesSpec restTests;\n \n     @Inject\n     public RestResourcesExtension(ObjectFactory objects) {\n         restApi = new RestResourcesSpec(objects);\n-        restTests = new RestResourcesSpec(objects);\n+        restTests = new XpackRestResourcesSpec(objects);\n     }\n \n     void restApi(Action<? super RestResourcesSpec> spec) {\n         spec.execute(restApi);\n     }\n \n-    void restTests(Action<? super RestResourcesSpec> spec) {\n+    void restTests(Action<? super XpackRestResourcesSpec> spec) {\n+        if (BuildParams.isInternal() == false) {\n+            // TODO: Separate this out into an \"internal\" plugin so we don't even expose this API to external folks\n+            throw new UnsupportedOperationException(\"Including tests is not supported from external builds.\");\n+        }\n         spec.execute(restTests);\n     }\n \n     public RestResourcesSpec getRestApi() {\n         return restApi;\n     }\n \n-    public RestResourcesSpec getRestTests() {\n+    public XpackRestResourcesSpec getRestTests() {\n         return restTests;\n     }\n \n     public static class RestResourcesSpec {\n \n+        private final ListProperty<String> include;\n+\n+        RestResourcesSpec(ObjectFactory objects) {\n+            include = objects.listProperty(String.class);\n+        }\n+\n+        public void include(String... include) {\n+            this.include.addAll(include);\n+        }\n+\n+        public ListProperty<String> getInclude() {\n+            return include;\n+        }\n+    }\n+\n+    public static class XpackRestResourcesSpec {\n+\n         private final ListProperty<String> includeCore;\n         private final ListProperty<String> includeXpack;\n \n-        RestResourcesSpec(ObjectFactory objects) {\n+        XpackRestResourcesSpec(ObjectFactory objects) {\n             includeCore = objects.listProperty(String.class);\n             includeXpack = objects.listProperty(String.class);\n         }\n@@ -59,9 +80,6 @@ public void includeCore(String... include) {\n         }\n \n         public void includeXpack(String... include) {\n-            if (BuildParams.isInternal() == false) {\n-                throw new IllegalStateException(\"Can not include x-pack rest resources from an external build.\");\n-            }\n             this.includeXpack.addAll(include);\n         }\n "
  },
  {
    "sha": "b6642e4f65bfed00c9712fdbc6ce511a23e1e1f9",
    "filename": "buildSrc/src/main/java/org/elasticsearch/gradle/test/rest/RestResourcesPlugin.java",
    "status": "modified",
    "additions": 6,
    "deletions": 19,
    "changes": 25,
    "blob_url": "https://github.com/elastic/elasticsearch/blob/d461d3c31c166a91ee9ea77107ec71ae8efd6bf8/buildSrc/src/main/java/org/elasticsearch/gradle/test/rest/RestResourcesPlugin.java",
    "raw_url": "https://github.com/elastic/elasticsearch/raw/d461d3c31c166a91ee9ea77107ec71ae8efd6bf8/buildSrc/src/main/java/org/elasticsearch/gradle/test/rest/RestResourcesPlugin.java",
    "contents_url": "https://api.github.com/repos/elastic/elasticsearch/contents/buildSrc/src/main/java/org/elasticsearch/gradle/test/rest/RestResourcesPlugin.java?ref=d461d3c31c166a91ee9ea77107ec71ae8efd6bf8",
    "patch": "@@ -111,46 +111,34 @@ public void apply(Project project) {\n         Provider<CopyRestTestsTask> copyRestYamlTestTask = project.getTasks()\n             .register(COPY_YAML_TESTS_TASK, CopyRestTestsTask.class, task -> {\n                 if (BuildParams.isInternal()) {\n-                    task.dependsOn(xpackTestConfig);\n+                    task.dependsOn(testConfig, xpackTestConfig);\n+                    task.setCoreConfig(testConfig);\n                     task.setXpackConfig(xpackTestConfig);\n                 }\n-                task.getIncludeCore().set(extension.restTests.getIncludeCore());\n-                task.getIncludeXpack().set(extension.restTests.getIncludeXpack());\n-                task.setCoreConfig(testConfig);\n+                task.getIncludeCore().set(extension.getRestTests().getIncludeCore());\n+                task.getIncludeXpack().set(extension.getRestTests().getIncludeXpack());\n                 task.getOutputResourceDir().set(project.getLayout().getBuildDirectory().dir(\"restResources/yamlTests\"));\n-                task.dependsOn(testConfig);\n             });\n \n         // api\n         Configuration specConfig = project.getConfigurations().create(\"restSpec\"); // name chosen for passivity\n-        Configuration xpackSpecConfig = project.getConfigurations().create(\"restXpackSpec\");\n         if (BuildParams.isInternal()) {\n             Dependency restSpecDependency = project.getDependencies()\n                 .project(Map.of(\"path\", \":rest-api-spec\", \"configuration\", \"restSpecs\"));\n             project.getDependencies().add(specConfig.getName(), restSpecDependency);\n-\n-            Dependency restXpackSpecDependency = project.getDependencies()\n-                .project(Map.of(\"path\", \":x-pack:plugin\", \"configuration\", \"restXpackSpecs\"));\n-            project.getDependencies().add(xpackSpecConfig.getName(), restXpackSpecDependency);\n         } else {\n             Dependency dependency = project.getDependencies()\n                 .create(\"org.elasticsearch:rest-api-spec:\" + VersionProperties.getElasticsearch());\n             project.getDependencies().add(specConfig.getName(), dependency);\n         }\n \n         project.getConfigurations().create(\"restSpecs\");\n-        project.getConfigurations().create(\"restXpackSpecs\");\n \n         Provider<CopyRestApiTask> copyRestYamlApiTask = project.getTasks()\n             .register(COPY_REST_API_SPECS_TASK, CopyRestApiTask.class, task -> {\n-                if (BuildParams.isInternal()) {\n-                    task.dependsOn(xpackSpecConfig);\n-                    task.setXpackConfig(xpackSpecConfig);\n-                }\n                 task.dependsOn(copyRestYamlTestTask);\n-                task.getIncludeCore().set(extension.restApi.getIncludeCore());\n-                task.getIncludeXpack().set(extension.restApi.getIncludeXpack());\n-                task.setCoreConfig(specConfig);\n+                task.getInclude().set(extension.getRestApi().getInclude());\n+                task.setConfig(specConfig);\n                 task.getOutputResourceDir().set(project.getLayout().getBuildDirectory().dir(\"restResources/yamlSpecs\"));\n                 task.getAdditionalYamlTestsDir().set(copyRestYamlTestTask.flatMap(CopyRestTestsTask::getOutputResourceDir));\n                 task.setSourceResourceDir(\n@@ -161,7 +149,6 @@ public void apply(Project project) {\n                         .findFirst()\n                         .orElse(null)\n                 );\n-                task.dependsOn(xpackSpecConfig);\n             });\n \n         defaultSourceSet.getOutput().dir(copyRestYamlApiTask.map(CopyRestApiTask::getOutputResourceDir));"
  },
  {
    "sha": "0795e9b65b1ab5271502e3218d110c48e383266b",
    "filename": "buildSrc/src/main/java/org/elasticsearch/gradle/test/rest/YamlRestTestPlugin.java",
    "status": "modified",
    "additions": 0,
    "deletions": 4,
    "changes": 4,
    "blob_url": "https://github.com/elastic/elasticsearch/blob/d461d3c31c166a91ee9ea77107ec71ae8efd6bf8/buildSrc/src/main/java/org/elasticsearch/gradle/test/rest/YamlRestTestPlugin.java",
    "raw_url": "https://github.com/elastic/elasticsearch/raw/d461d3c31c166a91ee9ea77107ec71ae8efd6bf8/buildSrc/src/main/java/org/elasticsearch/gradle/test/rest/YamlRestTestPlugin.java",
    "contents_url": "https://api.github.com/repos/elastic/elasticsearch/contents/buildSrc/src/main/java/org/elasticsearch/gradle/test/rest/YamlRestTestPlugin.java?ref=d461d3c31c166a91ee9ea77107ec71ae8efd6bf8",
    "patch": "@@ -64,10 +64,6 @@ public void apply(Project project) {\n             );\n         });\n \n-        project.getTasks()\n-            .named(yamlTestSourceSet.getProcessResourcesTaskName())\n-            .configure(t -> t.dependsOn(project.getTasks().withType(CopyRestApiTask.class)));\n-\n         // Register rest resources with source set\n         yamlTestSourceSet.getOutput()\n             .dir("
  },
  {
    "sha": "9ad288b2a231700dc9861a9ae1df26d4788b3653",
    "filename": "client/rest-high-level/build.gradle",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/elastic/elasticsearch/blob/d461d3c31c166a91ee9ea77107ec71ae8efd6bf8/client/rest-high-level/build.gradle",
    "raw_url": "https://github.com/elastic/elasticsearch/raw/d461d3c31c166a91ee9ea77107ec71ae8efd6bf8/client/rest-high-level/build.gradle",
    "contents_url": "https://api.github.com/repos/elastic/elasticsearch/contents/client/rest-high-level/build.gradle?ref=d461d3c31c166a91ee9ea77107ec71ae8efd6bf8",
    "patch": "@@ -24,7 +24,7 @@ ext.projectLicenses = ['Elastic License 2.0': ext.elasticLicenseUrl]\n restResources {\n   //we need to copy the yaml spec so we can check naming (see RestHighlevelClientTests#testApiNamingConventions)\n   restApi {\n-    includeCore '*'\n+    include '*'\n   }\n }\n "
  },
  {
    "sha": "7112e86f81ac2943fc76350a594a747293c0b54b",
    "filename": "client/rest-high-level/src/test/java/org/elasticsearch/client/RestHighLevelClientTests.java",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/elastic/elasticsearch/blob/d461d3c31c166a91ee9ea77107ec71ae8efd6bf8/client/rest-high-level/src/test/java/org/elasticsearch/client/RestHighLevelClientTests.java",
    "raw_url": "https://github.com/elastic/elasticsearch/raw/d461d3c31c166a91ee9ea77107ec71ae8efd6bf8/client/rest-high-level/src/test/java/org/elasticsearch/client/RestHighLevelClientTests.java",
    "contents_url": "https://api.github.com/repos/elastic/elasticsearch/contents/client/rest-high-level/src/test/java/org/elasticsearch/client/RestHighLevelClientTests.java?ref=d461d3c31c166a91ee9ea77107ec71ae8efd6bf8",
    "patch": "@@ -807,6 +807,7 @@ public void testProvidedNamedXContents() {\n         assertThat(names, hasItems(ClassificationConfig.NAME.getPreferredName(), RegressionConfig.NAME.getPreferredName()));\n     }\n \n+    @AwaitsFix(bugUrl = \"https://github.com/elastic/elasticsearch/issues/70041\")\n     public void testApiNamingConventions() throws Exception {\n         //this list should be empty once the high-level client is feature complete\n         String[] notYetSupportedApi = new String[]{"
  },
  {
    "sha": "6a673fdf95258dd7a3823a23cec8359e0ee70339",
    "filename": "docs/build.gradle",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/elastic/elasticsearch/blob/d461d3c31c166a91ee9ea77107ec71ae8efd6bf8/docs/build.gradle",
    "raw_url": "https://github.com/elastic/elasticsearch/raw/d461d3c31c166a91ee9ea77107ec71ae8efd6bf8/docs/build.gradle",
    "contents_url": "https://api.github.com/repos/elastic/elasticsearch/contents/docs/build.gradle?ref=d461d3c31c166a91ee9ea77107ec71ae8efd6bf8",
    "patch": "@@ -35,7 +35,7 @@ tasks.named(\"buildRestTests\").configure {\n \n restResources {\n   restApi {\n-    includeCore '*'\n+    include '*'\n   }\n }\n "
  },
  {
    "sha": "237dd24ec7bd291478a5b63f16bd802d5249d593",
    "filename": "modules/aggs-matrix-stats/build.gradle",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/elastic/elasticsearch/blob/d461d3c31c166a91ee9ea77107ec71ae8efd6bf8/modules/aggs-matrix-stats/build.gradle",
    "raw_url": "https://github.com/elastic/elasticsearch/raw/d461d3c31c166a91ee9ea77107ec71ae8efd6bf8/modules/aggs-matrix-stats/build.gradle",
    "contents_url": "https://api.github.com/repos/elastic/elasticsearch/contents/modules/aggs-matrix-stats/build.gradle?ref=d461d3c31c166a91ee9ea77107ec71ae8efd6bf8",
    "patch": "@@ -14,6 +14,6 @@ esplugin {\n \n restResources {\n   restApi {\n-    includeCore '_common', 'indices', 'cluster', 'index', 'search', 'nodes'\n+    include '_common', 'indices', 'cluster', 'index', 'search', 'nodes'\n   }\n }"
  },
  {
    "sha": "29d06492554b1a89ef4185bab23f4dd074578c5f",
    "filename": "modules/analysis-common/build.gradle",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/elastic/elasticsearch/blob/d461d3c31c166a91ee9ea77107ec71ae8efd6bf8/modules/analysis-common/build.gradle",
    "raw_url": "https://github.com/elastic/elasticsearch/raw/d461d3c31c166a91ee9ea77107ec71ae8efd6bf8/modules/analysis-common/build.gradle",
    "contents_url": "https://api.github.com/repos/elastic/elasticsearch/contents/modules/analysis-common/build.gradle?ref=d461d3c31c166a91ee9ea77107ec71ae8efd6bf8",
    "patch": "@@ -16,7 +16,7 @@ esplugin {\n \n restResources {\n   restApi {\n-    includeCore '_common', 'indices', 'index', 'cluster', 'search', 'nodes', 'bulk', 'termvectors', 'explain', 'count'\n+    include '_common', 'indices', 'index', 'cluster', 'search', 'nodes', 'bulk', 'termvectors', 'explain', 'count'\n   }\n }\n "
  },
  {
    "sha": "83bd606b87239db25c82aacbbedff5540074d11e",
    "filename": "modules/geo/build.gradle",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/elastic/elasticsearch/blob/d461d3c31c166a91ee9ea77107ec71ae8efd6bf8/modules/geo/build.gradle",
    "raw_url": "https://github.com/elastic/elasticsearch/raw/d461d3c31c166a91ee9ea77107ec71ae8efd6bf8/modules/geo/build.gradle",
    "contents_url": "https://api.github.com/repos/elastic/elasticsearch/contents/modules/geo/build.gradle?ref=d461d3c31c166a91ee9ea77107ec71ae8efd6bf8",
    "patch": "@@ -16,7 +16,7 @@ esplugin {\n \n restResources {\n   restApi {\n-    includeCore '_common', 'indices', 'index', 'search'\n+    include '_common', 'indices', 'index', 'search'\n   }\n }\n artifacts {"
  },
  {
    "sha": "7ed689ff847fd29ada2adcf7578ae6c980cb3593",
    "filename": "modules/ingest-common/build.gradle",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/elastic/elasticsearch/blob/d461d3c31c166a91ee9ea77107ec71ae8efd6bf8/modules/ingest-common/build.gradle",
    "raw_url": "https://github.com/elastic/elasticsearch/raw/d461d3c31c166a91ee9ea77107ec71ae8efd6bf8/modules/ingest-common/build.gradle",
    "contents_url": "https://api.github.com/repos/elastic/elasticsearch/contents/modules/ingest-common/build.gradle?ref=d461d3c31c166a91ee9ea77107ec71ae8efd6bf8",
    "patch": "@@ -22,7 +22,7 @@ dependencies {\n \n restResources {\n   restApi {\n-    includeCore '_common', 'ingest', 'cluster', 'indices', 'index', 'bulk', 'nodes', 'get', 'update', 'cat', 'mget'\n+    include '_common', 'ingest', 'cluster', 'indices', 'index', 'bulk', 'nodes', 'get', 'update', 'cat', 'mget'\n   }\n }\n "
  },
  {
    "sha": "54ec1bb15d61324a687f821c41a54f71a0e17207",
    "filename": "modules/ingest-geoip/build.gradle",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/elastic/elasticsearch/blob/d461d3c31c166a91ee9ea77107ec71ae8efd6bf8/modules/ingest-geoip/build.gradle",
    "raw_url": "https://github.com/elastic/elasticsearch/raw/d461d3c31c166a91ee9ea77107ec71ae8efd6bf8/modules/ingest-geoip/build.gradle",
    "contents_url": "https://api.github.com/repos/elastic/elasticsearch/contents/modules/ingest-geoip/build.gradle?ref=d461d3c31c166a91ee9ea77107ec71ae8efd6bf8",
    "patch": "@@ -29,7 +29,7 @@ dependencies {\n \n restResources {\n   restApi {\n-    includeCore '_common', 'indices', 'index', 'cluster', 'nodes', 'get', 'ingest'\n+    include '_common', 'indices', 'index', 'cluster', 'nodes', 'get', 'ingest'\n   }\n }\n "
  },
  {
    "sha": "76cdcde873a2c9c0d0c6fa10412c6ec96f32c818",
    "filename": "modules/ingest-user-agent/build.gradle",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/elastic/elasticsearch/blob/d461d3c31c166a91ee9ea77107ec71ae8efd6bf8/modules/ingest-user-agent/build.gradle",
    "raw_url": "https://github.com/elastic/elasticsearch/raw/d461d3c31c166a91ee9ea77107ec71ae8efd6bf8/modules/ingest-user-agent/build.gradle",
    "contents_url": "https://api.github.com/repos/elastic/elasticsearch/contents/modules/ingest-user-agent/build.gradle?ref=d461d3c31c166a91ee9ea77107ec71ae8efd6bf8",
    "patch": "@@ -14,7 +14,7 @@ esplugin {\n \n restResources {\n   restApi {\n-    includeCore '_common', 'indices', 'index', 'cluster', 'nodes', 'get', 'ingest'\n+    include '_common', 'indices', 'index', 'cluster', 'nodes', 'get', 'ingest'\n   }\n }\n "
  },
  {
    "sha": "8952364c4df59b18169434c8b63a6035a1092b68",
    "filename": "modules/lang-expression/build.gradle",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/elastic/elasticsearch/blob/d461d3c31c166a91ee9ea77107ec71ae8efd6bf8/modules/lang-expression/build.gradle",
    "raw_url": "https://github.com/elastic/elasticsearch/raw/d461d3c31c166a91ee9ea77107ec71ae8efd6bf8/modules/lang-expression/build.gradle",
    "contents_url": "https://api.github.com/repos/elastic/elasticsearch/contents/modules/lang-expression/build.gradle?ref=d461d3c31c166a91ee9ea77107ec71ae8efd6bf8",
    "patch": "@@ -22,7 +22,7 @@ dependencies {\n }\n restResources {\n   restApi {\n-    includeCore '_common', 'indices', 'index', 'cluster', 'nodes', 'search'\n+    include '_common', 'indices', 'index', 'cluster', 'nodes', 'search'\n   }\n }\n "
  },
  {
    "sha": "f02ba43833f206aabb3fc9253f8ed487ff9434bb",
    "filename": "modules/lang-mustache/build.gradle",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/elastic/elasticsearch/blob/d461d3c31c166a91ee9ea77107ec71ae8efd6bf8/modules/lang-mustache/build.gradle",
    "raw_url": "https://github.com/elastic/elasticsearch/raw/d461d3c31c166a91ee9ea77107ec71ae8efd6bf8/modules/lang-mustache/build.gradle",
    "contents_url": "https://api.github.com/repos/elastic/elasticsearch/contents/modules/lang-mustache/build.gradle?ref=d461d3c31c166a91ee9ea77107ec71ae8efd6bf8",
    "patch": "@@ -20,7 +20,7 @@ dependencies {\n \n restResources {\n   restApi {\n-    includeCore '_common', 'cluster', 'nodes', 'indices', 'index', 'bulk',\n+    include '_common', 'cluster', 'nodes', 'indices', 'index', 'bulk',\n       'put_script', 'render_search_template', 'search_template', 'msearch_template', 'lang_mustache'\n   }\n }"
  },
  {
    "sha": "c1957e9d2bc301085d849fa4303d3a09af22d059",
    "filename": "modules/lang-painless/build.gradle",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/elastic/elasticsearch/blob/d461d3c31c166a91ee9ea77107ec71ae8efd6bf8/modules/lang-painless/build.gradle",
    "raw_url": "https://github.com/elastic/elasticsearch/raw/d461d3c31c166a91ee9ea77107ec71ae8efd6bf8/modules/lang-painless/build.gradle",
    "contents_url": "https://api.github.com/repos/elastic/elasticsearch/contents/modules/lang-painless/build.gradle?ref=d461d3c31c166a91ee9ea77107ec71ae8efd6bf8",
    "patch": "@@ -38,7 +38,7 @@ tasks.named(\"dependencyLicenses\").configure {\n \n restResources {\n   restApi {\n-    includeCore '_common', 'cluster', 'nodes', 'indices', 'index', 'search', 'get', 'bulk', 'update',\n+    include '_common', 'cluster', 'nodes', 'indices', 'index', 'search', 'get', 'bulk', 'update',\n                 'scripts_painless_execute', 'put_script', 'delete_script'\n   }\n }"
  },
  {
    "sha": "4677205226975d33e1d5e202dcc6ad409a9d2992",
    "filename": "modules/mapper-extras/build.gradle",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/elastic/elasticsearch/blob/d461d3c31c166a91ee9ea77107ec71ae8efd6bf8/modules/mapper-extras/build.gradle",
    "raw_url": "https://github.com/elastic/elasticsearch/raw/d461d3c31c166a91ee9ea77107ec71ae8efd6bf8/modules/mapper-extras/build.gradle",
    "contents_url": "https://api.github.com/repos/elastic/elasticsearch/contents/modules/mapper-extras/build.gradle?ref=d461d3c31c166a91ee9ea77107ec71ae8efd6bf8",
    "patch": "@@ -15,6 +15,6 @@ esplugin {\n \n restResources {\n   restApi {\n-    includeCore '_common', 'cluster', 'nodes', 'indices', 'index', 'search', 'get'\n+    include '_common', 'cluster', 'nodes', 'indices', 'index', 'search', 'get'\n   }\n }"
  },
  {
    "sha": "4f310b62ec2a532152e2f8e13543f2b2db127b19",
    "filename": "modules/parent-join/build.gradle",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/elastic/elasticsearch/blob/d461d3c31c166a91ee9ea77107ec71ae8efd6bf8/modules/parent-join/build.gradle",
    "raw_url": "https://github.com/elastic/elasticsearch/raw/d461d3c31c166a91ee9ea77107ec71ae8efd6bf8/modules/parent-join/build.gradle",
    "contents_url": "https://api.github.com/repos/elastic/elasticsearch/contents/modules/parent-join/build.gradle?ref=d461d3c31c166a91ee9ea77107ec71ae8efd6bf8",
    "patch": "@@ -15,6 +15,6 @@ esplugin {\n \n restResources {\n   restApi {\n-    includeCore '_common', 'bulk', 'cluster', 'nodes', 'indices', 'index', 'search'\n+    include '_common', 'bulk', 'cluster', 'nodes', 'indices', 'index', 'search'\n   }\n }"
  },
  {
    "sha": "eec59a2fc0ff993abcb3b1af5c8247d4b1aab3be",
    "filename": "modules/percolator/build.gradle",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/elastic/elasticsearch/blob/d461d3c31c166a91ee9ea77107ec71ae8efd6bf8/modules/percolator/build.gradle",
    "raw_url": "https://github.com/elastic/elasticsearch/raw/d461d3c31c166a91ee9ea77107ec71ae8efd6bf8/modules/percolator/build.gradle",
    "contents_url": "https://api.github.com/repos/elastic/elasticsearch/contents/modules/percolator/build.gradle?ref=d461d3c31c166a91ee9ea77107ec71ae8efd6bf8",
    "patch": "@@ -20,6 +20,6 @@ dependencies {\n \n restResources {\n   restApi {\n-    includeCore '_common', 'indices', 'index', 'search', 'msearch'\n+    include '_common', 'indices', 'index', 'search', 'msearch'\n   }\n }"
  },
  {
    "sha": "6c76c9a50f432fee0612ea6bbcc4abd08ea9c60b",
    "filename": "modules/rank-eval/build.gradle",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/elastic/elasticsearch/blob/d461d3c31c166a91ee9ea77107ec71ae8efd6bf8/modules/rank-eval/build.gradle",
    "raw_url": "https://github.com/elastic/elasticsearch/raw/d461d3c31c166a91ee9ea77107ec71ae8efd6bf8/modules/rank-eval/build.gradle",
    "contents_url": "https://api.github.com/repos/elastic/elasticsearch/contents/modules/rank-eval/build.gradle?ref=d461d3c31c166a91ee9ea77107ec71ae8efd6bf8",
    "patch": "@@ -15,7 +15,7 @@ esplugin {\n \n restResources {\n   restApi {\n-    includeCore '_common', 'indices', 'index', 'rank_eval'\n+    include '_common', 'indices', 'index', 'rank_eval'\n   }\n }\n "
  },
  {
    "sha": "589695c20f6a18e28001a8d476e2dedf46e469ee",
    "filename": "modules/reindex/build.gradle",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/elastic/elasticsearch/blob/d461d3c31c166a91ee9ea77107ec71ae8efd6bf8/modules/reindex/build.gradle",
    "raw_url": "https://github.com/elastic/elasticsearch/raw/d461d3c31c166a91ee9ea77107ec71ae8efd6bf8/modules/reindex/build.gradle",
    "contents_url": "https://api.github.com/repos/elastic/elasticsearch/contents/modules/reindex/build.gradle?ref=d461d3c31c166a91ee9ea77107ec71ae8efd6bf8",
    "patch": "@@ -52,7 +52,7 @@ dependencies {\n \n restResources {\n   restApi {\n-    includeCore '_common', 'cluster', 'nodes', 'indices', 'index', 'get', 'search', 'mget', 'count',\n+    include '_common', 'cluster', 'nodes', 'indices', 'index', 'get', 'search', 'mget', 'count',\n                 'update_by_query', 'delete_by_query', 'reindex_rethrottle', 'tasks', 'reindex', 'put_script'\n   }\n }"
  },
  {
    "sha": "0926527d6cd5f1f6b2f596d30550eb25d8913a3f",
    "filename": "modules/repository-url/build.gradle",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/elastic/elasticsearch/blob/d461d3c31c166a91ee9ea77107ec71ae8efd6bf8/modules/repository-url/build.gradle",
    "raw_url": "https://github.com/elastic/elasticsearch/raw/d461d3c31c166a91ee9ea77107ec71ae8efd6bf8/modules/repository-url/build.gradle",
    "contents_url": "https://api.github.com/repos/elastic/elasticsearch/contents/modules/repository-url/build.gradle?ref=d461d3c31c166a91ee9ea77107ec71ae8efd6bf8",
    "patch": "@@ -21,7 +21,7 @@ esplugin {\n \n restResources {\n   restApi {\n-    includeCore '_common', 'cluster', 'nodes', 'indices', 'index', 'bulk', 'count', 'snapshot'\n+    include '_common', 'cluster', 'nodes', 'indices', 'index', 'bulk', 'count', 'snapshot'\n   }\n }\n "
  },
  {
    "sha": "09b7efca123a5071d73ae52ffab823b5129e26bb",
    "filename": "modules/transport-netty4/build.gradle",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/elastic/elasticsearch/blob/d461d3c31c166a91ee9ea77107ec71ae8efd6bf8/modules/transport-netty4/build.gradle",
    "raw_url": "https://github.com/elastic/elasticsearch/raw/d461d3c31c166a91ee9ea77107ec71ae8efd6bf8/modules/transport-netty4/build.gradle",
    "contents_url": "https://api.github.com/repos/elastic/elasticsearch/contents/modules/transport-netty4/build.gradle?ref=d461d3c31c166a91ee9ea77107ec71ae8efd6bf8",
    "patch": "@@ -40,7 +40,7 @@ dependencies {\n \n restResources {\n   restApi {\n-    includeCore '_common', 'cluster', 'nodes'\n+    include '_common', 'cluster', 'nodes'\n   }\n }\n "
  },
  {
    "sha": "21ef273c41c8a39a0cf6c8d9c5c746481c45c9f6",
    "filename": "plugins/analysis-icu/build.gradle",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/elastic/elasticsearch/blob/d461d3c31c166a91ee9ea77107ec71ae8efd6bf8/plugins/analysis-icu/build.gradle",
    "raw_url": "https://github.com/elastic/elasticsearch/raw/d461d3c31c166a91ee9ea77107ec71ae8efd6bf8/plugins/analysis-icu/build.gradle",
    "contents_url": "https://api.github.com/repos/elastic/elasticsearch/contents/plugins/analysis-icu/build.gradle?ref=d461d3c31c166a91ee9ea77107ec71ae8efd6bf8",
    "patch": "@@ -28,7 +28,7 @@ dependencies {\n \n restResources {\n   restApi {\n-    includeCore '_common', 'indices', 'index', 'search'\n+    include '_common', 'indices', 'index', 'search'\n   }\n }\n "
  },
  {
    "sha": "5eadd0bc7517891ae57c73e4c7f2d4b1bef1c43c",
    "filename": "plugins/analysis-kuromoji/build.gradle",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/elastic/elasticsearch/blob/d461d3c31c166a91ee9ea77107ec71ae8efd6bf8/plugins/analysis-kuromoji/build.gradle",
    "raw_url": "https://github.com/elastic/elasticsearch/raw/d461d3c31c166a91ee9ea77107ec71ae8efd6bf8/plugins/analysis-kuromoji/build.gradle",
    "contents_url": "https://api.github.com/repos/elastic/elasticsearch/contents/plugins/analysis-kuromoji/build.gradle?ref=d461d3c31c166a91ee9ea77107ec71ae8efd6bf8",
    "patch": "@@ -18,7 +18,7 @@ dependencies {\n \n restResources {\n   restApi {\n-    includeCore '_common', 'indices', 'index', 'search'\n+    include '_common', 'indices', 'index', 'search'\n   }\n }\n tasks.named(\"dependencyLicenses\").configure {"
  },
  {
    "sha": "bad564323f22b2d6f02b10968860f78d19e3f318",
    "filename": "plugins/analysis-nori/build.gradle",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/elastic/elasticsearch/blob/d461d3c31c166a91ee9ea77107ec71ae8efd6bf8/plugins/analysis-nori/build.gradle",
    "raw_url": "https://github.com/elastic/elasticsearch/raw/d461d3c31c166a91ee9ea77107ec71ae8efd6bf8/plugins/analysis-nori/build.gradle",
    "contents_url": "https://api.github.com/repos/elastic/elasticsearch/contents/plugins/analysis-nori/build.gradle?ref=d461d3c31c166a91ee9ea77107ec71ae8efd6bf8",
    "patch": "@@ -18,7 +18,7 @@ dependencies {\n \n restResources {\n   restApi {\n-    includeCore '_common', 'indices', 'index', 'search'\n+    include '_common', 'indices', 'index', 'search'\n   }\n }\n "
  },
  {
    "sha": "c89c39540dab3fb310263a0cb84d1f3527445a3f",
    "filename": "plugins/analysis-phonetic/build.gradle",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/elastic/elasticsearch/blob/d461d3c31c166a91ee9ea77107ec71ae8efd6bf8/plugins/analysis-phonetic/build.gradle",
    "raw_url": "https://github.com/elastic/elasticsearch/raw/d461d3c31c166a91ee9ea77107ec71ae8efd6bf8/plugins/analysis-phonetic/build.gradle",
    "contents_url": "https://api.github.com/repos/elastic/elasticsearch/contents/plugins/analysis-phonetic/build.gradle?ref=d461d3c31c166a91ee9ea77107ec71ae8efd6bf8",
    "patch": "@@ -19,7 +19,7 @@ dependencies {\n \n restResources {\n   restApi {\n-    includeCore '_common', 'indices', 'index', 'search'\n+    include '_common', 'indices', 'index', 'search'\n   }\n }\n "
  }
]
