[
  {
    "sha": "61dcea498834f717bd534f92c4ceff5c122d29f7",
    "filename": "x-pack/plugin/mapper-aggregate-metric/src/main/java/org/elasticsearch/xpack/aggregatemetric/mapper/AggregateDoubleMetricFieldMapper.java",
    "status": "modified",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/elastic/elasticsearch/blob/773c3080b24d7f1b4a97be432379ef24c6f0c727/x-pack/plugin/mapper-aggregate-metric/src/main/java/org/elasticsearch/xpack/aggregatemetric/mapper/AggregateDoubleMetricFieldMapper.java",
    "raw_url": "https://github.com/elastic/elasticsearch/raw/773c3080b24d7f1b4a97be432379ef24c6f0c727/x-pack/plugin/mapper-aggregate-metric/src/main/java/org/elasticsearch/xpack/aggregatemetric/mapper/AggregateDoubleMetricFieldMapper.java",
    "contents_url": "https://api.github.com/repos/elastic/elasticsearch/contents/x-pack/plugin/mapper-aggregate-metric/src/main/java/org/elasticsearch/xpack/aggregatemetric/mapper/AggregateDoubleMetricFieldMapper.java?ref=773c3080b24d7f1b4a97be432379ef24c6f0c727",
    "patch": "@@ -270,6 +270,10 @@ public void addMetricField(Metric m, NumberFieldMapper.NumberFieldType subfield)\n             metricFields.put(m, subfield);\n         }\n \n+        public Collection<NumberFieldMapper.NumberFieldType> getMetricFields() {\n+            return metricFields.values();\n+        }\n+\n         public void setDefaultMetric(Metric defaultMetric) {\n             this.defaultMetric = defaultMetric;\n         }"
  },
  {
    "sha": "bc8529a5729695bbb2918e76f749309b41330a26",
    "filename": "x-pack/plugin/rollup/src/main/java/org/elasticsearch/xpack/rollup/v2/FieldValueFetcher.java",
    "status": "modified",
    "additions": 16,
    "deletions": 2,
    "changes": 18,
    "blob_url": "https://github.com/elastic/elasticsearch/blob/773c3080b24d7f1b4a97be432379ef24c6f0c727/x-pack/plugin/rollup/src/main/java/org/elasticsearch/xpack/rollup/v2/FieldValueFetcher.java",
    "raw_url": "https://github.com/elastic/elasticsearch/raw/773c3080b24d7f1b4a97be432379ef24c6f0c727/x-pack/plugin/rollup/src/main/java/org/elasticsearch/xpack/rollup/v2/FieldValueFetcher.java",
    "contents_url": "https://api.github.com/repos/elastic/elasticsearch/contents/x-pack/plugin/rollup/src/main/java/org/elasticsearch/xpack/rollup/v2/FieldValueFetcher.java?ref=773c3080b24d7f1b4a97be432379ef24c6f0c727",
    "patch": "@@ -11,9 +11,12 @@\n import org.apache.lucene.util.BytesRef;\n import org.elasticsearch.index.fielddata.FormattedDocValues;\n import org.elasticsearch.index.fielddata.IndexFieldData;\n+import org.elasticsearch.index.mapper.DocCountFieldMapper;\n import org.elasticsearch.index.mapper.MappedFieldType;\n+import org.elasticsearch.index.mapper.NumberFieldMapper;\n import org.elasticsearch.index.query.SearchExecutionContext;\n import org.elasticsearch.search.DocValueFormat;\n+import org.elasticsearch.xpack.aggregatemetric.mapper.AggregateDoubleMetricFieldMapper;\n \n import java.io.IOException;\n import java.math.BigInteger;\n@@ -48,6 +51,7 @@ protected FieldValueFetcher(String name,\n \n     FormattedDocValues getLeaf(LeafReaderContext context) {\n         final FormattedDocValues delegate = fieldData.load(context).getFormattedValues(DocValueFormat.RAW);\n+\n         return new FormattedDocValues() {\n             @Override\n             public boolean advanceExact(int docId) throws IOException {\n@@ -86,9 +90,19 @@ Object format(Object value) {\n             MappedFieldType fieldType = context.getFieldType(field);\n             if (fieldType == null) {\n                 throw new IllegalArgumentException(\"Unknown field: [\" + field + \"]\");\n+            } else if (fieldType instanceof AggregateDoubleMetricFieldMapper.AggregateDoubleMetricFieldType) {\n+                AggregateDoubleMetricFieldMapper.AggregateDoubleMetricFieldType aggMetricFieldType =\n+                    (AggregateDoubleMetricFieldMapper.AggregateDoubleMetricFieldType) fieldType;\n+                for (NumberFieldMapper.NumberFieldType metricSubField : aggMetricFieldType.getMetricFields()) {\n+                    IndexFieldData<?> fieldData = context.getForField(metricSubField);\n+                    fetchers.add(new FieldValueFetcher(field, fieldType, fieldData, getValidator(field)));\n+                }\n+            } else if (fieldType instanceof DocCountFieldMapper.DocCountFieldType) {\n+            }\n+            else {\n+                IndexFieldData<?> fieldData = context.getForField(fieldType);\n+                fetchers.add(new FieldValueFetcher(field, fieldType, fieldData, getValidator(field)));\n             }\n-            IndexFieldData<?> fieldData = context.getForField(fieldType);\n-            fetchers.add(new FieldValueFetcher(field, fieldType, fieldData, getValidator(field)));\n         }\n         return Collections.unmodifiableList(fetchers);\n     }"
  },
  {
    "sha": "85356ed4e7e5a84b1cea7cd0e427333b43ac9374",
    "filename": "x-pack/plugin/rollup/src/main/java/org/elasticsearch/xpack/rollup/v2/RollupShardIndexer.java",
    "status": "modified",
    "additions": 15,
    "deletions": 1,
    "changes": 16,
    "blob_url": "https://github.com/elastic/elasticsearch/blob/773c3080b24d7f1b4a97be432379ef24c6f0c727/x-pack/plugin/rollup/src/main/java/org/elasticsearch/xpack/rollup/v2/RollupShardIndexer.java",
    "raw_url": "https://github.com/elastic/elasticsearch/raw/773c3080b24d7f1b4a97be432379ef24c6f0c727/x-pack/plugin/rollup/src/main/java/org/elasticsearch/xpack/rollup/v2/RollupShardIndexer.java",
    "contents_url": "https://api.github.com/repos/elastic/elasticsearch/contents/x-pack/plugin/rollup/src/main/java/org/elasticsearch/xpack/rollup/v2/RollupShardIndexer.java?ref=773c3080b24d7f1b4a97be432379ef24c6f0c727",
    "patch": "@@ -50,6 +50,7 @@\n import org.elasticsearch.index.shard.IndexShard;\n import org.elasticsearch.index.shard.ShardId;\n import org.elasticsearch.search.DocValueFormat;\n+import org.elasticsearch.search.aggregations.bucket.DocCountProvider;\n import org.elasticsearch.search.aggregations.bucket.histogram.DateHistogramAggregationBuilder;\n import org.elasticsearch.search.aggregations.bucket.histogram.DateHistogramInterval;\n import org.elasticsearch.xpack.core.rollup.RollupActionConfig;\n@@ -96,6 +97,7 @@\n \n     private final List<FieldValueFetcher> groupFieldFetchers;\n     private final List<FieldValueFetcher> metricsFieldFetchers;\n+    private final DocCountProvider docCountProvider;\n \n     private final CompressingOfflineSorter sorter;\n \n@@ -173,6 +175,8 @@ public void deleteFile(String name) throws IOException {\n                 this.metricsFieldFetchers = Collections.emptyList();\n             }\n \n+            this.docCountProvider = new DocCountProvider();\n+\n             this.sorter = new CompressingOfflineSorter(dir, \"rollup-\", keyComparator(), ramBufferSizeMB);\n             toClose = null;\n         } finally {\n@@ -311,6 +315,10 @@ private Long computeBucket(long lastRounding) throws IOException {\n                             producer.reset();\n                         }\n                     }\n+\n+                    // read doc count\n+                    docCount += in.readVInt();\n+\n                     for (FieldMetricsProducer field : fieldsMetrics) {\n                         int size = in.readVInt();\n                         for (int i = 0; i < size; i++) {\n@@ -320,7 +328,7 @@ private Long computeBucket(long lastRounding) throws IOException {\n                             }\n                         }\n                     }\n-                    ++ docCount;\n+\n                     lastKey = key;\n                 }\n                 next = it.next();\n@@ -434,6 +442,7 @@ private BucketCollector(long timestamp,\n         public LeafCollector getLeafCollector(LeafReaderContext context) {\n             final List<FormattedDocValues> groupFieldLeaves = leafFetchers(context, groupFieldFetchers);\n             final List<FormattedDocValues> metricsFieldLeaves = leafFetchers(context, metricsFieldFetchers);\n+\n             return new LeafCollector() {\n                 @Override\n                 public void setScorer(Scorable scorer) {\n@@ -472,11 +481,16 @@ public void collect(int docID) throws IOException {\n                         }\n                         valueBytes = out.bytes().toBytesRef();\n                     }\n+\n+                    docCountProvider.setLeafReaderContext(context);\n+                    final int docCount = docCountProvider.getDocCount(docID);\n+\n                     for (List<Object> groupFields : cartesianProduct(combinationKeys)) {\n                         try (BytesStreamOutput out = new BytesStreamOutput()) {\n                             BytesRef keyBytes = encodeKey(timestamp, groupFields);\n                             out.writeInt(keyBytes.length);\n                             out.writeBytes(keyBytes.bytes, keyBytes.offset, keyBytes.length);\n+                            out.writeVInt(docCount);\n                             out.writeBytes(valueBytes.bytes, valueBytes.offset, valueBytes.length);\n                             externalSorter.add(out.bytes().toBytesRef());\n                         }"
  },
  {
    "sha": "5731d323d63271a07392a18a8bf84ea23188303b",
    "filename": "x-pack/plugin/rollup/src/test/java/org/elasticsearch/xpack/rollup/v2/RollupActionSingleNodeTests.java",
    "status": "modified",
    "additions": 23,
    "deletions": 2,
    "changes": 25,
    "blob_url": "https://github.com/elastic/elasticsearch/blob/773c3080b24d7f1b4a97be432379ef24c6f0c727/x-pack/plugin/rollup/src/test/java/org/elasticsearch/xpack/rollup/v2/RollupActionSingleNodeTests.java",
    "raw_url": "https://github.com/elastic/elasticsearch/raw/773c3080b24d7f1b4a97be432379ef24c6f0c727/x-pack/plugin/rollup/src/test/java/org/elasticsearch/xpack/rollup/v2/RollupActionSingleNodeTests.java",
    "contents_url": "https://api.github.com/repos/elastic/elasticsearch/contents/x-pack/plugin/rollup/src/test/java/org/elasticsearch/xpack/rollup/v2/RollupActionSingleNodeTests.java?ref=773c3080b24d7f1b4a97be432379ef24c6f0c727",
    "patch": "@@ -6,7 +6,6 @@\n  */\n package org.elasticsearch.xpack.rollup.v2;\n \n-import org.apache.lucene.util.LuceneTestCase;\n import org.elasticsearch.ElasticsearchException;\n import org.elasticsearch.ResourceAlreadyExistsException;\n import org.elasticsearch.action.ActionListener;\n@@ -83,7 +82,6 @@\n import static org.hamcrest.Matchers.containsString;\n import static org.hamcrest.Matchers.equalTo;\n \n-@LuceneTestCase.AwaitsFix(bugUrl=\"https://github.com/elastic/elasticsearch/issues/69799\")\n public class RollupActionSingleNodeTests extends ESSingleNodeTestCase {\n \n     private static final DateFormatter DATE_FORMATTER = DateFormatter.forPattern(\"yyyy-MM-dd'T'HH:mm:ss.SSSXXX\");\n@@ -331,6 +329,29 @@ public void testRollupDatastream() throws Exception {\n         assertRollupIndex(config, oldIndexName, rollupIndexName + \"-2\");\n     }\n \n+    public void testRollupOfRollup() throws Exception {\n+        String rollupOfRollupIndex = \"rollup2-\" + rollupIndex;\n+        RollupActionDateHistogramGroupConfig monthlyDateHistogramGroupConfig =\n+            new RollupActionDateHistogramGroupConfig.FixedInterval(\"date_1\", new DateHistogramInterval(\"30d\"), \"UTC\");\n+        RollupActionDateHistogramGroupConfig dailyDateHistogramGroupConfig =\n+            new RollupActionDateHistogramGroupConfig.FixedInterval(\"date_1\", new DateHistogramInterval(\"1d\"), \"UTC\");\n+        SourceSupplier sourceSupplier = () -> XContentFactory.jsonBuilder().startObject()\n+            .field(\"date_1\", randomDateForInterval(dailyDateHistogramGroupConfig.getInterval()))\n+            .field(\"numeric_1\", randomInt())\n+            .endObject();\n+        RollupActionConfig monthlyConfig = new RollupActionConfig(\n+            new RollupActionGroupConfig(monthlyDateHistogramGroupConfig, null, null),\n+            Collections.singletonList(new MetricConfig(\"numeric_1\", Collections.singletonList(\"max\"))));\n+        RollupActionConfig dailyConfig = new RollupActionConfig(\n+            new RollupActionGroupConfig(monthlyDateHistogramGroupConfig, null, null),\n+            Collections.singletonList(new MetricConfig(\"numeric_1\", Collections.singletonList(\"max\"))));\n+        bulkIndex(sourceSupplier);\n+        rollup(index, rollupIndex, dailyConfig);\n+        assertRollupIndex(dailyConfig, index, rollupIndex);\n+        rollup(rollupIndex, rollupOfRollupIndex, dailyConfig);\n+        assertRollupIndex(monthlyConfig, index, rollupOfRollupIndex);\n+    }\n+\n     private RollupActionDateHistogramGroupConfig randomRollupActionDateHistogramGroupConfig(String field) {\n         RollupActionDateHistogramGroupConfig randomConfig = ConfigTestHelpers.randomRollupActionDateHistogramGroupConfig(random());\n         if (randomConfig instanceof RollupActionDateHistogramGroupConfig.FixedInterval) {"
  }
]
