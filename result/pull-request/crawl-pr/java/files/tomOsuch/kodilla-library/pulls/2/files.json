[
  {
    "sha": "7fc9e86f11d44af3d30677d0f4f0d1fc16d9a62f",
    "filename": "src/main/java/com/kodilla/library/controller/BookController.java",
    "status": "added",
    "additions": 52,
    "deletions": 0,
    "changes": 52,
    "blob_url": "https://github.com/tomOsuch/kodilla-library/blob/40f65fbca268086b04ad82e94dec2b6a857a22b1/src/main/java/com/kodilla/library/controller/BookController.java",
    "raw_url": "https://github.com/tomOsuch/kodilla-library/raw/40f65fbca268086b04ad82e94dec2b6a857a22b1/src/main/java/com/kodilla/library/controller/BookController.java",
    "contents_url": "https://api.github.com/repos/tomOsuch/kodilla-library/contents/src/main/java/com/kodilla/library/controller/BookController.java?ref=40f65fbca268086b04ad82e94dec2b6a857a22b1",
    "patch": "@@ -0,0 +1,52 @@\n+package com.kodilla.library.controller;\n+\n+import com.kodilla.library.domain.Book;\n+import com.kodilla.library.dto.BookDto;\n+import com.kodilla.library.exception.BookNotFoundException;\n+import com.kodilla.library.mapper.BookMapper;\n+import com.kodilla.library.services.BookDbService;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.MediaType;\n+import org.springframework.web.bind.annotation.*;\n+\n+import java.util.List;\n+\n+@RestController\n+@RequestMapping(\"/v1/book\")\n+public class BookController {\n+\n+    private final BookDbService bookService;\n+    private final BookMapper bookMapper;\n+\n+    @Autowired\n+    public BookController(BookDbService bookService, BookMapper bookMapper) {\n+        this.bookService = bookService;\n+        this.bookMapper = bookMapper;\n+    }\n+\n+    @GetMapping(\"/getBooks\")\n+    public List<BookDto> getAllBook() {\n+        List<Book> books = bookService.getAllBook();\n+        return bookMapper.mapToBookDtoList(books);\n+    }\n+\n+    @GetMapping(\"/getBook/{id}\")\n+    public BookDto getBook(@PathVariable Long id) {\n+        return bookMapper.mapToBookDto(bookService.getBook(id));\n+    }\n+\n+    @PostMapping(value = \"/createBook\", consumes = MediaType.APPLICATION_JSON_VALUE)\n+    public void createBook(@RequestBody BookDto bookDto) {\n+        Book book = bookMapper.mapToBook(bookDto);\n+        bookService.saveBook(book);\n+    }\n+\n+    @DeleteMapping(\"/deleteBook/{id}\")\n+    public void deleteBook(@PathVariable Long id) {\n+        try {\n+            bookService.deleteBook(id);\n+        } catch (BookNotFoundException e) {\n+            throw new BookNotFoundException(\"Book with pointed ID does not exist\");\n+        }\n+    }\n+}"
  },
  {
    "sha": "aed794c12b7cd20ce1c9bdb639e2854cad46130e",
    "filename": "src/main/java/com/kodilla/library/controller/BookCopyController.java",
    "status": "added",
    "additions": 44,
    "deletions": 0,
    "changes": 44,
    "blob_url": "https://github.com/tomOsuch/kodilla-library/blob/40f65fbca268086b04ad82e94dec2b6a857a22b1/src/main/java/com/kodilla/library/controller/BookCopyController.java",
    "raw_url": "https://github.com/tomOsuch/kodilla-library/raw/40f65fbca268086b04ad82e94dec2b6a857a22b1/src/main/java/com/kodilla/library/controller/BookCopyController.java",
    "contents_url": "https://api.github.com/repos/tomOsuch/kodilla-library/contents/src/main/java/com/kodilla/library/controller/BookCopyController.java?ref=40f65fbca268086b04ad82e94dec2b6a857a22b1",
    "patch": "@@ -0,0 +1,44 @@\n+package com.kodilla.library.controller;\n+\n+import com.kodilla.library.dto.BookCopyDto;\n+import com.kodilla.library.exception.BookNotFoundException;\n+import com.kodilla.library.mapper.BookCopyMapper;\n+import com.kodilla.library.services.BookCopyDbService;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.web.bind.annotation.*;\n+\n+import java.util.List;\n+\n+@RestController\n+@RequestMapping(\"/v1/bookCopy\")\n+public class BookCopyController {\n+\n+    private final BookCopyDbService bookCopyDbService;\n+    private final BookCopyMapper bookCopyMapper;\n+\n+    @Autowired\n+    public BookCopyController(BookCopyDbService bookCopyDbService, BookCopyMapper bookCopyMapper) {\n+        this.bookCopyDbService = bookCopyDbService;\n+        this.bookCopyMapper = bookCopyMapper;\n+    }\n+\n+    @PostMapping(\"/createBookCopy\")\n+    public void createBookCopy(@RequestParam Long id) {\n+        bookCopyDbService.saveBookCopy(id);\n+    }\n+\n+    @GetMapping(\"/getAllBookCopy\")\n+    public List<BookCopyDto> getAllBookCopy() {\n+        return bookCopyMapper.mapToBookCopyDtoList(bookCopyDbService.getAllBook());\n+    }\n+\n+    @GetMapping(\"/getBookCopy/{id}\")\n+    public BookCopyDto getBookCopy(@PathVariable Long id) {\n+        return bookCopyMapper.mapToBookCopyDto(bookCopyDbService.getBookCopy(id));\n+    }\n+\n+    @DeleteMapping(\"/deleteBookCopy/{id}\")\n+    public void deleteBookCopy(@PathVariable Long id) throws BookNotFoundException {\n+        bookCopyDbService.deleteBookCopy(id);\n+    }\n+}"
  },
  {
    "sha": "267fd79d8ab52d227617fa90d71a73874852e273",
    "filename": "src/main/java/com/kodilla/library/controller/BorrowingController.java",
    "status": "added",
    "additions": 36,
    "deletions": 0,
    "changes": 36,
    "blob_url": "https://github.com/tomOsuch/kodilla-library/blob/40f65fbca268086b04ad82e94dec2b6a857a22b1/src/main/java/com/kodilla/library/controller/BorrowingController.java",
    "raw_url": "https://github.com/tomOsuch/kodilla-library/raw/40f65fbca268086b04ad82e94dec2b6a857a22b1/src/main/java/com/kodilla/library/controller/BorrowingController.java",
    "contents_url": "https://api.github.com/repos/tomOsuch/kodilla-library/contents/src/main/java/com/kodilla/library/controller/BorrowingController.java?ref=40f65fbca268086b04ad82e94dec2b6a857a22b1",
    "patch": "@@ -0,0 +1,36 @@\n+package com.kodilla.library.controller;\n+\n+import com.kodilla.library.dto.BorrowingDto;\n+import com.kodilla.library.mapper.BorrowingMapper;\n+import com.kodilla.library.services.BorrowingDbService;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.PathVariable;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+import java.util.List;\n+\n+@RestController\n+@RequestMapping(\"/v1/borrowing\")\n+public class BorrowingController {\n+\n+    private final BorrowingDbService borrowingDbService;\n+    private final BorrowingMapper borrowingMapper;\n+\n+    @Autowired\n+    public BorrowingController(BorrowingDbService borrowingDbService, BorrowingMapper borrowingMapper) {\n+        this.borrowingDbService = borrowingDbService;\n+        this.borrowingMapper = borrowingMapper;\n+    }\n+\n+    @GetMapping(\"/getBorrowing/{id}\")\n+    public BorrowingDto getBorrowing(@PathVariable Long id) {\n+        return borrowingMapper.mapToBorrowingDto(borrowingDbService.getBorrowing(id));\n+    }\n+\n+    @GetMapping(\"/getBorrowings\")\n+    public List<BorrowingDto> getAllBorrowing() {\n+        return borrowingMapper.mapToBorrowingDtoList(borrowingDbService.getAllBorrowing());\n+    }\n+}"
  },
  {
    "sha": "5f682f387c716fe5c154b7768d9494ea663bdbcd",
    "filename": "src/main/java/com/kodilla/library/controller/ReaderController.java",
    "status": "added",
    "additions": 61,
    "deletions": 0,
    "changes": 61,
    "blob_url": "https://github.com/tomOsuch/kodilla-library/blob/40f65fbca268086b04ad82e94dec2b6a857a22b1/src/main/java/com/kodilla/library/controller/ReaderController.java",
    "raw_url": "https://github.com/tomOsuch/kodilla-library/raw/40f65fbca268086b04ad82e94dec2b6a857a22b1/src/main/java/com/kodilla/library/controller/ReaderController.java",
    "contents_url": "https://api.github.com/repos/tomOsuch/kodilla-library/contents/src/main/java/com/kodilla/library/controller/ReaderController.java?ref=40f65fbca268086b04ad82e94dec2b6a857a22b1",
    "patch": "@@ -0,0 +1,61 @@\n+package com.kodilla.library.controller;\n+\n+import com.kodilla.library.domain.Reader;\n+import com.kodilla.library.dto.ReaderDto;\n+import com.kodilla.library.exception.ReaderNotFoundException;\n+import com.kodilla.library.mapper.ReaderMapper;\n+import com.kodilla.library.services.ReaderDbService;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.dao.EmptyResultDataAccessException;\n+import org.springframework.http.MediaType;\n+import org.springframework.web.bind.annotation.*;\n+\n+import java.util.List;\n+\n+@RestController\n+@RequestMapping(\"/v1/reader\")\n+public class ReaderController {\n+\n+    private final ReaderDbService readerService;\n+    private final ReaderMapper readerMapper;\n+\n+    @Autowired\n+    public ReaderController(ReaderDbService readerService, ReaderMapper readerMapper) {\n+        this.readerService = readerService;\n+        this.readerMapper = readerMapper;\n+    }\n+\n+    @GetMapping(\"/getReaders\")\n+    public List<ReaderDto> getAllReaders() {\n+        List<Reader> readers = readerService.getAllReaders();\n+        return readerMapper.mapToReaderDtoList(readers);\n+    }\n+\n+    @GetMapping(\"/getReader/{id}\")\n+    public ReaderDto getReader(@PathVariable Long id) {\n+        return readerMapper.mapToReaderDto(readerService.getReader(id));\n+    }\n+\n+    @PostMapping(value = \"/createReader\", consumes = MediaType.APPLICATION_JSON_VALUE)\n+    public void createReader(@RequestBody ReaderDto readerDto) {\n+        Reader reader = readerMapper.mapToReader(readerDto);\n+        readerService.saveReader(reader);\n+    }\n+\n+    @PutMapping(\"/updateReader\")\n+    public ReaderDto updateReader(@RequestBody ReaderDto readerDto) {\n+        Reader reader = readerMapper.mapToReader(readerDto);\n+        Reader saveReader = readerService.saveReader(reader);\n+        return readerMapper.mapToReaderDto(saveReader);\n+    }\n+\n+    @DeleteMapping(\"/deleteReader/{id}\")\n+    public void deleteReader(@PathVariable Long id) {\n+        try {\n+            readerService.deleteReader(id);\n+        } catch (EmptyResultDataAccessException e) {\n+            throw new ReaderNotFoundException(\"Reader with pointed ID does not exist\");\n+        }\n+    }\n+\n+}"
  },
  {
    "sha": "f9c86a43a0fe59c6372e5829afe39ebfb00d6ae6",
    "filename": "src/main/java/com/kodilla/library/exception/BookCopyNotFoundException.java",
    "status": "added",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/tomOsuch/kodilla-library/blob/40f65fbca268086b04ad82e94dec2b6a857a22b1/src/main/java/com/kodilla/library/exception/BookCopyNotFoundException.java",
    "raw_url": "https://github.com/tomOsuch/kodilla-library/raw/40f65fbca268086b04ad82e94dec2b6a857a22b1/src/main/java/com/kodilla/library/exception/BookCopyNotFoundException.java",
    "contents_url": "https://api.github.com/repos/tomOsuch/kodilla-library/contents/src/main/java/com/kodilla/library/exception/BookCopyNotFoundException.java?ref=40f65fbca268086b04ad82e94dec2b6a857a22b1",
    "patch": "@@ -0,0 +1,12 @@\n+package com.kodilla.library.exception;\n+\n+import org.springframework.http.HttpStatus;\n+import org.springframework.web.bind.annotation.ResponseStatus;\n+\n+@ResponseStatus(value = HttpStatus.NOT_FOUND)\n+public class BookCopyNotFoundException extends RuntimeException {\n+\n+    public BookCopyNotFoundException(String message) {\n+        super(message);\n+    }\n+}"
  },
  {
    "sha": "1c4a792faf3b70398d42a87e636a7051be2cdc6e",
    "filename": "src/main/java/com/kodilla/library/exception/BookNotFoundException.java",
    "status": "added",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/tomOsuch/kodilla-library/blob/40f65fbca268086b04ad82e94dec2b6a857a22b1/src/main/java/com/kodilla/library/exception/BookNotFoundException.java",
    "raw_url": "https://github.com/tomOsuch/kodilla-library/raw/40f65fbca268086b04ad82e94dec2b6a857a22b1/src/main/java/com/kodilla/library/exception/BookNotFoundException.java",
    "contents_url": "https://api.github.com/repos/tomOsuch/kodilla-library/contents/src/main/java/com/kodilla/library/exception/BookNotFoundException.java?ref=40f65fbca268086b04ad82e94dec2b6a857a22b1",
    "patch": "@@ -0,0 +1,12 @@\n+package com.kodilla.library.exception;\n+\n+import org.springframework.http.HttpStatus;\n+import org.springframework.web.bind.annotation.ResponseStatus;\n+\n+@ResponseStatus(value = HttpStatus.NOT_FOUND)\n+public class BookNotFoundException extends RuntimeException {\n+\n+    public BookNotFoundException(String message) {\n+        super(message);\n+    }\n+}"
  },
  {
    "sha": "30de7f5a131344a5181696e0d6526c225e0be009",
    "filename": "src/main/java/com/kodilla/library/exception/BorrowingNotFoundException.java",
    "status": "added",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/tomOsuch/kodilla-library/blob/40f65fbca268086b04ad82e94dec2b6a857a22b1/src/main/java/com/kodilla/library/exception/BorrowingNotFoundException.java",
    "raw_url": "https://github.com/tomOsuch/kodilla-library/raw/40f65fbca268086b04ad82e94dec2b6a857a22b1/src/main/java/com/kodilla/library/exception/BorrowingNotFoundException.java",
    "contents_url": "https://api.github.com/repos/tomOsuch/kodilla-library/contents/src/main/java/com/kodilla/library/exception/BorrowingNotFoundException.java?ref=40f65fbca268086b04ad82e94dec2b6a857a22b1",
    "patch": "@@ -0,0 +1,12 @@\n+package com.kodilla.library.exception;\n+\n+import org.springframework.http.HttpStatus;\n+import org.springframework.web.bind.annotation.ResponseStatus;\n+\n+@ResponseStatus(value = HttpStatus.NOT_FOUND)\n+public class BorrowingNotFoundException extends RuntimeException {\n+\n+    public BorrowingNotFoundException(String message) {\n+        super(message);\n+    }\n+}"
  },
  {
    "sha": "4e22d48e39c4f962525f22de68d78db1516e52b9",
    "filename": "src/main/java/com/kodilla/library/exception/ReaderNotFoundException.java",
    "status": "added",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/tomOsuch/kodilla-library/blob/40f65fbca268086b04ad82e94dec2b6a857a22b1/src/main/java/com/kodilla/library/exception/ReaderNotFoundException.java",
    "raw_url": "https://github.com/tomOsuch/kodilla-library/raw/40f65fbca268086b04ad82e94dec2b6a857a22b1/src/main/java/com/kodilla/library/exception/ReaderNotFoundException.java",
    "contents_url": "https://api.github.com/repos/tomOsuch/kodilla-library/contents/src/main/java/com/kodilla/library/exception/ReaderNotFoundException.java?ref=40f65fbca268086b04ad82e94dec2b6a857a22b1",
    "patch": "@@ -0,0 +1,12 @@\n+package com.kodilla.library.exception;\n+\n+import org.springframework.http.HttpStatus;\n+import org.springframework.web.bind.annotation.ResponseStatus;\n+\n+@ResponseStatus(value = HttpStatus.NOT_FOUND)\n+public class ReaderNotFoundException extends RuntimeException {\n+\n+    public ReaderNotFoundException(String message) {\n+        super(message);\n+    }\n+}"
  },
  {
    "sha": "7e77f36fa1b64db079d6a9ddb23042c4f6496ece",
    "filename": "src/main/java/com/kodilla/library/mapper/BookCopyMapper.java",
    "status": "added",
    "additions": 40,
    "deletions": 0,
    "changes": 40,
    "blob_url": "https://github.com/tomOsuch/kodilla-library/blob/40f65fbca268086b04ad82e94dec2b6a857a22b1/src/main/java/com/kodilla/library/mapper/BookCopyMapper.java",
    "raw_url": "https://github.com/tomOsuch/kodilla-library/raw/40f65fbca268086b04ad82e94dec2b6a857a22b1/src/main/java/com/kodilla/library/mapper/BookCopyMapper.java",
    "contents_url": "https://api.github.com/repos/tomOsuch/kodilla-library/contents/src/main/java/com/kodilla/library/mapper/BookCopyMapper.java?ref=40f65fbca268086b04ad82e94dec2b6a857a22b1",
    "patch": "@@ -0,0 +1,40 @@\n+package com.kodilla.library.mapper;\n+\n+import com.kodilla.library.domain.Book;\n+import com.kodilla.library.domain.BookCopy;\n+import com.kodilla.library.dto.BookCopyDto;\n+import com.kodilla.library.repository.BookRepository;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+@Component\n+public class BookCopyMapper {\n+\n+    @Autowired\n+    private BookRepository bookRepository;\n+\n+    public BookCopy mapToBookCopy(BookCopyDto bookCopyDto, Book book) {\n+        return new BookCopy(\n+                bookCopyDto.getId(),\n+                bookCopyDto.getStatus(),\n+                book\n+        );\n+    }\n+\n+    public BookCopyDto mapToBookCopyDto(BookCopy bookCopy) {\n+        return new BookCopyDto(\n+                bookCopy.getId(),\n+                bookCopy.getBook().getId(),\n+                bookCopy.getStatus()\n+        );\n+    }\n+\n+    public List<BookCopyDto> mapToBookCopyDtoList(List<BookCopy> bookCopyList) {\n+        return bookCopyList.stream()\n+                .map(this::mapToBookCopyDto)\n+                .collect(Collectors.toList());\n+    }\n+}"
  },
  {
    "sha": "4e9520b660cbd3c96a3787c1c04f2bdff91d3b0c",
    "filename": "src/main/java/com/kodilla/library/mapper/BookMapper.java",
    "status": "added",
    "additions": 36,
    "deletions": 0,
    "changes": 36,
    "blob_url": "https://github.com/tomOsuch/kodilla-library/blob/40f65fbca268086b04ad82e94dec2b6a857a22b1/src/main/java/com/kodilla/library/mapper/BookMapper.java",
    "raw_url": "https://github.com/tomOsuch/kodilla-library/raw/40f65fbca268086b04ad82e94dec2b6a857a22b1/src/main/java/com/kodilla/library/mapper/BookMapper.java",
    "contents_url": "https://api.github.com/repos/tomOsuch/kodilla-library/contents/src/main/java/com/kodilla/library/mapper/BookMapper.java?ref=40f65fbca268086b04ad82e94dec2b6a857a22b1",
    "patch": "@@ -0,0 +1,36 @@\n+package com.kodilla.library.mapper;\n+\n+import com.kodilla.library.domain.Book;\n+import com.kodilla.library.dto.BookDto;\n+import org.springframework.stereotype.Component;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+@Component\n+public class BookMapper {\n+\n+    public BookDto mapToBookDto(final Book book) {\n+        return new BookDto(\n+                book.getId(),\n+                book.getTitle(),\n+                book.getAuthor(),\n+                book.getDatePublication()\n+        );\n+    }\n+\n+    public Book mapToBook(final BookDto bookDto) {\n+        return new Book(\n+                bookDto.getId(),\n+                bookDto.getTitle(),\n+                bookDto.getAuthor(),\n+                bookDto.getDatePublication()\n+        );\n+    }\n+\n+    public List<BookDto> mapToBookDtoList(final List<Book> books) {\n+        return books.stream()\n+                .map(this::mapToBookDto)\n+                .collect(Collectors.toList());\n+    }\n+}"
  },
  {
    "sha": "53535c58c0b62000de5f7b3fd0e9f1b013d3439f",
    "filename": "src/main/java/com/kodilla/library/mapper/BorrowingMapper.java",
    "status": "added",
    "additions": 38,
    "deletions": 0,
    "changes": 38,
    "blob_url": "https://github.com/tomOsuch/kodilla-library/blob/40f65fbca268086b04ad82e94dec2b6a857a22b1/src/main/java/com/kodilla/library/mapper/BorrowingMapper.java",
    "raw_url": "https://github.com/tomOsuch/kodilla-library/raw/40f65fbca268086b04ad82e94dec2b6a857a22b1/src/main/java/com/kodilla/library/mapper/BorrowingMapper.java",
    "contents_url": "https://api.github.com/repos/tomOsuch/kodilla-library/contents/src/main/java/com/kodilla/library/mapper/BorrowingMapper.java?ref=40f65fbca268086b04ad82e94dec2b6a857a22b1",
    "patch": "@@ -0,0 +1,38 @@\n+package com.kodilla.library.mapper;\n+\n+import com.kodilla.library.domain.BookCopy;\n+import com.kodilla.library.domain.Borrowing;\n+import com.kodilla.library.domain.Reader;\n+import com.kodilla.library.dto.BorrowingDto;\n+import org.springframework.stereotype.Component;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+@Component\n+public class BorrowingMapper {\n+\n+    public Borrowing mapToBorrowing(BorrowingDto borrowingDto, BookCopy bookCopy, Reader reader) {\n+        return new Borrowing(\n+                borrowingDto.getId(),\n+                bookCopy,\n+                reader\n+        );\n+    }\n+\n+    public BorrowingDto mapToBorrowingDto(Borrowing borrowing) {\n+        return new BorrowingDto(\n+                borrowing.getId(),\n+                borrowing.getBookCopy().getId(),\n+                borrowing.getReader().getId(),\n+                borrowing.getBorrowDate(),\n+                borrowing.getReturnDate()\n+        );\n+    }\n+\n+    public List<BorrowingDto> mapToBorrowingDtoList(List<Borrowing> borrowings) {\n+        return borrowings.stream()\n+                .map(this::mapToBorrowingDto)\n+                .collect(Collectors.toList());\n+    }\n+}"
  },
  {
    "sha": "18ec9a108082d53831fea0d4537cf362badf6581",
    "filename": "src/main/java/com/kodilla/library/mapper/ReaderMapper.java",
    "status": "added",
    "additions": 35,
    "deletions": 0,
    "changes": 35,
    "blob_url": "https://github.com/tomOsuch/kodilla-library/blob/40f65fbca268086b04ad82e94dec2b6a857a22b1/src/main/java/com/kodilla/library/mapper/ReaderMapper.java",
    "raw_url": "https://github.com/tomOsuch/kodilla-library/raw/40f65fbca268086b04ad82e94dec2b6a857a22b1/src/main/java/com/kodilla/library/mapper/ReaderMapper.java",
    "contents_url": "https://api.github.com/repos/tomOsuch/kodilla-library/contents/src/main/java/com/kodilla/library/mapper/ReaderMapper.java?ref=40f65fbca268086b04ad82e94dec2b6a857a22b1",
    "patch": "@@ -0,0 +1,35 @@\n+package com.kodilla.library.mapper;\n+\n+import com.kodilla.library.domain.Reader;\n+import com.kodilla.library.dto.ReaderDto;\n+import org.springframework.stereotype.Component;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+@Component\n+public class ReaderMapper {\n+\n+    public ReaderDto mapToReaderDto(final Reader reader) {\n+        return new ReaderDto(\n+                reader.getId(),\n+                reader.getFirstName(),\n+                reader.getLastName(),\n+                reader.getCreatedDate()\n+        );\n+    }\n+\n+    public Reader mapToReader(final ReaderDto readerDto) {\n+        return new Reader(\n+                readerDto.getId(),\n+                readerDto.getFirstName(),\n+                readerDto.getLastName()\n+        );\n+    }\n+\n+    public List<ReaderDto> mapToReaderDtoList(final List<Reader> readers) {\n+        return readers.stream()\n+                .map(this::mapToReaderDto)\n+                .collect(Collectors.toList());\n+    }\n+}"
  },
  {
    "sha": "e58f93a7641aabad94f4ed08fed87f4aefddd098",
    "filename": "src/main/java/com/kodilla/library/repository/BookCopyRepository.java",
    "status": "added",
    "additions": 17,
    "deletions": 0,
    "changes": 17,
    "blob_url": "https://github.com/tomOsuch/kodilla-library/blob/40f65fbca268086b04ad82e94dec2b6a857a22b1/src/main/java/com/kodilla/library/repository/BookCopyRepository.java",
    "raw_url": "https://github.com/tomOsuch/kodilla-library/raw/40f65fbca268086b04ad82e94dec2b6a857a22b1/src/main/java/com/kodilla/library/repository/BookCopyRepository.java",
    "contents_url": "https://api.github.com/repos/tomOsuch/kodilla-library/contents/src/main/java/com/kodilla/library/repository/BookCopyRepository.java?ref=40f65fbca268086b04ad82e94dec2b6a857a22b1",
    "patch": "@@ -0,0 +1,17 @@\n+package com.kodilla.library.repository;\n+\n+import com.kodilla.library.domain.BookCopy;\n+import org.springframework.data.repository.CrudRepository;\n+import org.springframework.stereotype.Repository;\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+@Repository\n+public interface BookCopyRepository extends CrudRepository<BookCopy, Long> {\n+\n+    List<BookCopy> findAll();\n+    Optional<BookCopy> findById(Long id);\n+    BookCopy save(BookCopy bookCopy);\n+    void deleteById(Long id);\n+}"
  },
  {
    "sha": "1b44077984f0f94ed16db65b4590f7dceed539c8",
    "filename": "src/main/java/com/kodilla/library/repository/BookRepository.java",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/tomOsuch/kodilla-library/blob/40f65fbca268086b04ad82e94dec2b6a857a22b1/src/main/java/com/kodilla/library/repository/BookRepository.java",
    "raw_url": "https://github.com/tomOsuch/kodilla-library/raw/40f65fbca268086b04ad82e94dec2b6a857a22b1/src/main/java/com/kodilla/library/repository/BookRepository.java",
    "contents_url": "https://api.github.com/repos/tomOsuch/kodilla-library/contents/src/main/java/com/kodilla/library/repository/BookRepository.java?ref=40f65fbca268086b04ad82e94dec2b6a857a22b1",
    "patch": "@@ -0,0 +1,19 @@\n+package com.kodilla.library.repository;\n+\n+import com.kodilla.library.domain.Book;\n+import org.springframework.data.repository.CrudRepository;\n+import org.springframework.stereotype.Repository;\n+import org.springframework.transaction.annotation.Transactional;\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+@Transactional\n+@Repository\n+public interface BookRepository extends CrudRepository<Book, Long> {\n+\n+    List<Book> findAll();\n+    Optional<Book> findById(Long id);\n+    Book save(Book book);\n+    void deleteById(Long id);\n+}"
  },
  {
    "sha": "da460fcb98efb3d7112e392e3267a0745e9f3ad8",
    "filename": "src/main/java/com/kodilla/library/repository/BorrowingRepository.java",
    "status": "added",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/tomOsuch/kodilla-library/blob/40f65fbca268086b04ad82e94dec2b6a857a22b1/src/main/java/com/kodilla/library/repository/BorrowingRepository.java",
    "raw_url": "https://github.com/tomOsuch/kodilla-library/raw/40f65fbca268086b04ad82e94dec2b6a857a22b1/src/main/java/com/kodilla/library/repository/BorrowingRepository.java",
    "contents_url": "https://api.github.com/repos/tomOsuch/kodilla-library/contents/src/main/java/com/kodilla/library/repository/BorrowingRepository.java?ref=40f65fbca268086b04ad82e94dec2b6a857a22b1",
    "patch": "@@ -0,0 +1,20 @@\n+package com.kodilla.library.repository;\n+\n+import com.kodilla.library.domain.Borrowing;\n+import org.springframework.data.repository.CrudRepository;\n+import org.springframework.stereotype.Repository;\n+import org.springframework.transaction.annotation.Transactional;\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+@Transactional\n+@Repository\n+public interface BorrowingRepository extends CrudRepository<Borrowing, Long> {\n+\n+    List<Borrowing> findAll();\n+\n+    Optional<Borrowing> findById(Long id);\n+\n+    Borrowing save(Borrowing borrowing);\n+}"
  },
  {
    "sha": "71b5dda7b96e7ecbe0ccb5bb696bbf74ab5223ac",
    "filename": "src/main/java/com/kodilla/library/repository/ReaderRepository.java",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/tomOsuch/kodilla-library/blob/40f65fbca268086b04ad82e94dec2b6a857a22b1/src/main/java/com/kodilla/library/repository/ReaderRepository.java",
    "raw_url": "https://github.com/tomOsuch/kodilla-library/raw/40f65fbca268086b04ad82e94dec2b6a857a22b1/src/main/java/com/kodilla/library/repository/ReaderRepository.java",
    "contents_url": "https://api.github.com/repos/tomOsuch/kodilla-library/contents/src/main/java/com/kodilla/library/repository/ReaderRepository.java?ref=40f65fbca268086b04ad82e94dec2b6a857a22b1",
    "patch": "@@ -0,0 +1,19 @@\n+package com.kodilla.library.repository;\n+\n+import com.kodilla.library.domain.Reader;\n+import org.springframework.data.repository.CrudRepository;\n+import org.springframework.stereotype.Repository;\n+\n+import javax.transaction.Transactional;\n+import java.util.List;\n+import java.util.Optional;\n+\n+@Transactional\n+@Repository\n+public interface ReaderRepository extends CrudRepository<Reader, Long> {\n+\n+    List<Reader> findAll();\n+    Optional<Reader> findById(Long id);\n+    Reader save(Reader reader);\n+    void deleteById(Long id);\n+}"
  },
  {
    "sha": "ce1220d063b0f98715ed74c3f0f9c1908966882f",
    "filename": "src/main/java/com/kodilla/library/services/BookCopyDbService.java",
    "status": "added",
    "additions": 46,
    "deletions": 0,
    "changes": 46,
    "blob_url": "https://github.com/tomOsuch/kodilla-library/blob/40f65fbca268086b04ad82e94dec2b6a857a22b1/src/main/java/com/kodilla/library/services/BookCopyDbService.java",
    "raw_url": "https://github.com/tomOsuch/kodilla-library/raw/40f65fbca268086b04ad82e94dec2b6a857a22b1/src/main/java/com/kodilla/library/services/BookCopyDbService.java",
    "contents_url": "https://api.github.com/repos/tomOsuch/kodilla-library/contents/src/main/java/com/kodilla/library/services/BookCopyDbService.java?ref=40f65fbca268086b04ad82e94dec2b6a857a22b1",
    "patch": "@@ -0,0 +1,46 @@\n+package com.kodilla.library.services;\n+\n+import com.kodilla.library.domain.Book;\n+import com.kodilla.library.domain.BookCopy;\n+import com.kodilla.library.exception.BookCopyNotFoundException;\n+import com.kodilla.library.exception.BookNotFoundException;\n+import com.kodilla.library.repository.BookCopyRepository;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+\n+import java.util.List;\n+\n+@Service\n+public class BookCopyDbService {\n+\n+    private final BookCopyRepository bookCopyRepository;\n+    private final BookDbService bookService;\n+\n+    @Autowired\n+    public BookCopyDbService(BookCopyRepository bookCopyRepository, BookDbService bookService) {\n+        this.bookCopyRepository = bookCopyRepository;\n+        this.bookService = bookService;\n+    }\n+\n+    public List<BookCopy> getAllBook() {\n+        return bookCopyRepository.findAll();\n+    }\n+\n+    public BookCopy getBookCopy(Long id) {\n+        return bookCopyRepository.findById(id).orElseThrow(() -> new BookCopyNotFoundException(\"BookCopy with pointed ID does not exist\"));\n+    }\n+\n+    public void saveBookCopy(Long id) throws BookNotFoundException {\n+        Book book = bookService.getBook(id);\n+        BookCopy bookCopy = new BookCopy(book);\n+        book.getBookCopies().add(bookCopy);\n+        bookCopyRepository.save(bookCopy);\n+    }\n+\n+    public void deleteBookCopy(Long id) throws BookCopyNotFoundException, BookNotFoundException {\n+        BookCopy bookCopyToDelete = bookCopyRepository.findById(id).orElseThrow(() -> new BookCopyNotFoundException(\"BookCopy with pointed ID does not exist\"));\n+        Book book = bookService.getBook(bookCopyToDelete.getBook().getId());\n+        book.getBookCopies().remove(bookCopyToDelete);\n+        bookService.saveBook(book);\n+    }\n+}"
  },
  {
    "sha": "8c0d5862406c1847e6e256c1f68d5102fa0db0af",
    "filename": "src/main/java/com/kodilla/library/services/BookDbService.java",
    "status": "added",
    "additions": 50,
    "deletions": 0,
    "changes": 50,
    "blob_url": "https://github.com/tomOsuch/kodilla-library/blob/40f65fbca268086b04ad82e94dec2b6a857a22b1/src/main/java/com/kodilla/library/services/BookDbService.java",
    "raw_url": "https://github.com/tomOsuch/kodilla-library/raw/40f65fbca268086b04ad82e94dec2b6a857a22b1/src/main/java/com/kodilla/library/services/BookDbService.java",
    "contents_url": "https://api.github.com/repos/tomOsuch/kodilla-library/contents/src/main/java/com/kodilla/library/services/BookDbService.java?ref=40f65fbca268086b04ad82e94dec2b6a857a22b1",
    "patch": "@@ -0,0 +1,50 @@\n+package com.kodilla.library.services;\n+\n+import com.kodilla.library.domain.Book;\n+import com.kodilla.library.dto.BookDto;\n+import com.kodilla.library.exception.BookNotFoundException;\n+import com.kodilla.library.mapper.BookMapper;\n+import com.kodilla.library.repository.BookRepository;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+\n+import java.util.List;\n+\n+@Service\n+public class BookDbService {\n+\n+    private final BookRepository bookRepository;\n+    private final BookMapper bookMapper;\n+\n+    @Autowired\n+    public BookDbService(BookRepository bookRepository, BookMapper bookMapper) {\n+        this.bookRepository = bookRepository;\n+        this.bookMapper = bookMapper;\n+    }\n+\n+    public List<Book> getAllBook() {\n+        return bookRepository.findAll();\n+    }\n+\n+    public Book getBook(Long id) throws BookNotFoundException {\n+        return bookRepository.findById(id).orElseThrow(() -> new BookNotFoundException(\"Book with pointed ID does not exist\"));\n+    }\n+\n+    public Book saveBook(Book book) {\n+        return bookRepository.save(book);\n+    }\n+\n+    public Book updateBook(BookDto bookDto) throws BookNotFoundException {\n+        bookRepository.findById(bookDto.getId()).orElseThrow(() -> new BookNotFoundException(\"Book with pointed ID does not exist\"));\n+        return bookRepository.save(bookMapper.mapToBook(bookDto));\n+    }\n+\n+    public void deleteBook(Long id) {\n+        try {\n+            bookRepository.deleteById(id);\n+        } catch (BookNotFoundException e) {\n+            throw new BookNotFoundException(\"Book with pointed ID does not exist\");\n+        }\n+\n+    }\n+}"
  },
  {
    "sha": "fa9cae0f53f178bb9234a943c81b3af9ef638a31",
    "filename": "src/main/java/com/kodilla/library/services/BorrowingDbService.java",
    "status": "added",
    "additions": 37,
    "deletions": 0,
    "changes": 37,
    "blob_url": "https://github.com/tomOsuch/kodilla-library/blob/40f65fbca268086b04ad82e94dec2b6a857a22b1/src/main/java/com/kodilla/library/services/BorrowingDbService.java",
    "raw_url": "https://github.com/tomOsuch/kodilla-library/raw/40f65fbca268086b04ad82e94dec2b6a857a22b1/src/main/java/com/kodilla/library/services/BorrowingDbService.java",
    "contents_url": "https://api.github.com/repos/tomOsuch/kodilla-library/contents/src/main/java/com/kodilla/library/services/BorrowingDbService.java?ref=40f65fbca268086b04ad82e94dec2b6a857a22b1",
    "patch": "@@ -0,0 +1,37 @@\n+package com.kodilla.library.services;\n+\n+import com.kodilla.library.domain.Borrowing;\n+import com.kodilla.library.exception.BorrowingNotFoundException;\n+import com.kodilla.library.mapper.BorrowingMapper;\n+import com.kodilla.library.repository.BorrowingRepository;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+\n+import java.util.List;\n+\n+@Service\n+public class BorrowingDbService {\n+\n+    private  final BorrowingRepository borrowingRepository;\n+    private final BorrowingMapper borrowingMapper;\n+    private final BookCopyDbService bookCopyDbService;\n+    private final ReaderDbService readerDbService;\n+\n+    @Autowired\n+    public BorrowingDbService(BorrowingRepository borrowingRepository, BorrowingMapper borrowingMapper, BookCopyDbService bookCopyDbService, ReaderDbService readerDbService) {\n+        this.borrowingRepository = borrowingRepository;\n+        this.borrowingMapper = borrowingMapper;\n+        this.bookCopyDbService = bookCopyDbService;\n+        this.readerDbService = readerDbService;\n+    }\n+\n+    public Borrowing getBorrowing(Long id) throws BorrowingNotFoundException {\n+        return borrowingRepository.findById(id).orElseThrow(() -> new BorrowingNotFoundException(\"Borrowing with pointed ID does not exist\"));\n+    }\n+\n+    public List<Borrowing> getAllBorrowing() {\n+        return borrowingRepository.findAll();\n+    }\n+\n+    \n+}"
  },
  {
    "sha": "3fa20dc99376305c7d005941259fa86c1eaf5e6b",
    "filename": "src/main/java/com/kodilla/library/services/ReaderDbService.java",
    "status": "added",
    "additions": 50,
    "deletions": 0,
    "changes": 50,
    "blob_url": "https://github.com/tomOsuch/kodilla-library/blob/40f65fbca268086b04ad82e94dec2b6a857a22b1/src/main/java/com/kodilla/library/services/ReaderDbService.java",
    "raw_url": "https://github.com/tomOsuch/kodilla-library/raw/40f65fbca268086b04ad82e94dec2b6a857a22b1/src/main/java/com/kodilla/library/services/ReaderDbService.java",
    "contents_url": "https://api.github.com/repos/tomOsuch/kodilla-library/contents/src/main/java/com/kodilla/library/services/ReaderDbService.java?ref=40f65fbca268086b04ad82e94dec2b6a857a22b1",
    "patch": "@@ -0,0 +1,50 @@\n+package com.kodilla.library.services;\n+\n+import com.kodilla.library.domain.Reader;\n+import com.kodilla.library.dto.ReaderDto;\n+import com.kodilla.library.exception.ReaderNotFoundException;\n+import com.kodilla.library.mapper.ReaderMapper;\n+import com.kodilla.library.repository.ReaderRepository;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+\n+import java.util.List;\n+\n+@Service\n+public class ReaderDbService {\n+\n+    private final ReaderRepository readerRepository;\n+    private final ReaderMapper readerMapper;\n+\n+    @Autowired\n+    public ReaderDbService(ReaderRepository readerRepository, ReaderMapper readerMapper) {\n+        this.readerRepository = readerRepository;\n+        this.readerMapper = readerMapper;\n+    }\n+\n+    public List<Reader> getAllReaders() {\n+        return readerRepository.findAll();\n+    }\n+\n+    public Reader getReader(Long id) throws ReaderNotFoundException {\n+        return readerRepository.findById(id).orElseThrow(() -> new ReaderNotFoundException(\"Reader with pointed ID does not exist\"));\n+    }\n+\n+    public Reader saveReader(Reader reader) {\n+        return readerRepository.save(reader);\n+    }\n+\n+    public Reader updateReader(ReaderDto readerDto) throws ReaderNotFoundException {\n+        readerRepository.findById(readerDto.getId()).orElseThrow(() -> new ReaderNotFoundException(\"Reader with pointed ID does not exist\"));\n+        return readerRepository.save(readerMapper.mapToReader(readerDto));\n+    }\n+\n+    public void deleteReader(Long id) {\n+        try {\n+            readerRepository.deleteById(id);\n+        } catch (ReaderNotFoundException e) {\n+            throw new ReaderNotFoundException(\"Reader with pointed ID does not exist\");\n+        }\n+\n+    }\n+}"
  }
]
