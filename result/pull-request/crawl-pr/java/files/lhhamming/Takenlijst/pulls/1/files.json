[
  {
    "sha": "a2c9aefc82d8e6d9fb3729b16d5395428eebfe38",
    "filename": ".gitignore",
    "status": "added",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/lhhamming/Takenlijst/blob/7c8337a7eecaba01401fb1f2319161b30df0772d/.gitignore",
    "raw_url": "https://github.com/lhhamming/Takenlijst/raw/7c8337a7eecaba01401fb1f2319161b30df0772d/.gitignore",
    "contents_url": "https://api.github.com/repos/lhhamming/Takenlijst/contents/.gitignore?ref=7c8337a7eecaba01401fb1f2319161b30df0772d",
    "patch": "@@ -0,0 +1,3 @@\n+.idea\n+save.json\n+out"
  },
  {
    "sha": "da0c79d3bbfaa452f716dcf83566ccbd17511a96",
    "filename": ".idea/libraries/com_google_code_gson_gson_2_8_6.xml",
    "status": "added",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/lhhamming/Takenlijst/blob/7c8337a7eecaba01401fb1f2319161b30df0772d/.idea/libraries/com_google_code_gson_gson_2_8_6.xml",
    "raw_url": "https://github.com/lhhamming/Takenlijst/raw/7c8337a7eecaba01401fb1f2319161b30df0772d/.idea/libraries/com_google_code_gson_gson_2_8_6.xml",
    "contents_url": "https://api.github.com/repos/lhhamming/Takenlijst/contents/.idea/libraries/com_google_code_gson_gson_2_8_6.xml?ref=7c8337a7eecaba01401fb1f2319161b30df0772d",
    "patch": "@@ -0,0 +1,10 @@\n+<component name=\"libraryTable\">\n+  <library name=\"com.google.code.gson:gson:2.8.6\" type=\"repository\">\n+    <properties maven-id=\"com.google.code.gson:gson:2.8.6\" />\n+    <CLASSES>\n+      <root url=\"jar://$MAVEN_REPOSITORY$/com/google/code/gson/gson/2.8.6/gson-2.8.6.jar!/\" />\n+    </CLASSES>\n+    <JAVADOC />\n+    <SOURCES />\n+  </library>\n+</component>\n\\ No newline at end of file"
  },
  {
    "sha": "e96534fb27b68192f27f985d3879e173ec77adb8",
    "filename": ".idea/uiDesigner.xml",
    "status": "added",
    "additions": 124,
    "deletions": 0,
    "changes": 124,
    "blob_url": "https://github.com/lhhamming/Takenlijst/blob/7c8337a7eecaba01401fb1f2319161b30df0772d/.idea/uiDesigner.xml",
    "raw_url": "https://github.com/lhhamming/Takenlijst/raw/7c8337a7eecaba01401fb1f2319161b30df0772d/.idea/uiDesigner.xml",
    "contents_url": "https://api.github.com/repos/lhhamming/Takenlijst/contents/.idea/uiDesigner.xml?ref=7c8337a7eecaba01401fb1f2319161b30df0772d",
    "patch": "@@ -0,0 +1,124 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"Palette2\">\n+    <group name=\"Swing\">\n+      <item class=\"com.intellij.uiDesigner.HSpacer\" tooltip-text=\"Horizontal Spacer\" icon=\"/com/intellij/uiDesigner/icons/hspacer.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"1\" hsize-policy=\"6\" anchor=\"0\" fill=\"1\" />\n+      </item>\n+      <item class=\"com.intellij.uiDesigner.VSpacer\" tooltip-text=\"Vertical Spacer\" icon=\"/com/intellij/uiDesigner/icons/vspacer.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"6\" hsize-policy=\"1\" anchor=\"0\" fill=\"2\" />\n+      </item>\n+      <item class=\"javax.swing.JPanel\" icon=\"/com/intellij/uiDesigner/icons/panel.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"0\" fill=\"3\" />\n+      </item>\n+      <item class=\"javax.swing.JScrollPane\" icon=\"/com/intellij/uiDesigner/icons/scrollPane.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"true\">\n+        <default-constraints vsize-policy=\"7\" hsize-policy=\"7\" anchor=\"0\" fill=\"3\" />\n+      </item>\n+      <item class=\"javax.swing.JButton\" icon=\"/com/intellij/uiDesigner/icons/button.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"0\" fill=\"1\" />\n+        <initial-values>\n+          <property name=\"text\" value=\"Button\" />\n+        </initial-values>\n+      </item>\n+      <item class=\"javax.swing.JRadioButton\" icon=\"/com/intellij/uiDesigner/icons/radioButton.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"8\" fill=\"0\" />\n+        <initial-values>\n+          <property name=\"text\" value=\"RadioButton\" />\n+        </initial-values>\n+      </item>\n+      <item class=\"javax.swing.JCheckBox\" icon=\"/com/intellij/uiDesigner/icons/checkBox.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"8\" fill=\"0\" />\n+        <initial-values>\n+          <property name=\"text\" value=\"CheckBox\" />\n+        </initial-values>\n+      </item>\n+      <item class=\"javax.swing.JLabel\" icon=\"/com/intellij/uiDesigner/icons/label.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"8\" fill=\"0\" />\n+        <initial-values>\n+          <property name=\"text\" value=\"Label\" />\n+        </initial-values>\n+      </item>\n+      <item class=\"javax.swing.JTextField\" icon=\"/com/intellij/uiDesigner/icons/textField.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\">\n+          <preferred-size width=\"150\" height=\"-1\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JPasswordField\" icon=\"/com/intellij/uiDesigner/icons/passwordField.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\">\n+          <preferred-size width=\"150\" height=\"-1\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JFormattedTextField\" icon=\"/com/intellij/uiDesigner/icons/formattedTextField.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\">\n+          <preferred-size width=\"150\" height=\"-1\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JTextArea\" icon=\"/com/intellij/uiDesigner/icons/textArea.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n+        <default-constraints vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\">\n+          <preferred-size width=\"150\" height=\"50\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JTextPane\" icon=\"/com/intellij/uiDesigner/icons/textPane.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n+        <default-constraints vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\">\n+          <preferred-size width=\"150\" height=\"50\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JEditorPane\" icon=\"/com/intellij/uiDesigner/icons/editorPane.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n+        <default-constraints vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\">\n+          <preferred-size width=\"150\" height=\"50\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JComboBox\" icon=\"/com/intellij/uiDesigner/icons/comboBox.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"2\" anchor=\"8\" fill=\"1\" />\n+      </item>\n+      <item class=\"javax.swing.JTable\" icon=\"/com/intellij/uiDesigner/icons/table.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\">\n+          <preferred-size width=\"150\" height=\"50\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JList\" icon=\"/com/intellij/uiDesigner/icons/list.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"6\" hsize-policy=\"2\" anchor=\"0\" fill=\"3\">\n+          <preferred-size width=\"150\" height=\"50\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JTree\" icon=\"/com/intellij/uiDesigner/icons/tree.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\">\n+          <preferred-size width=\"150\" height=\"50\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JTabbedPane\" icon=\"/com/intellij/uiDesigner/icons/tabbedPane.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"0\" fill=\"3\">\n+          <preferred-size width=\"200\" height=\"200\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JSplitPane\" icon=\"/com/intellij/uiDesigner/icons/splitPane.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"0\" fill=\"3\">\n+          <preferred-size width=\"200\" height=\"200\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JSpinner\" icon=\"/com/intellij/uiDesigner/icons/spinner.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\" />\n+      </item>\n+      <item class=\"javax.swing.JSlider\" icon=\"/com/intellij/uiDesigner/icons/slider.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\" />\n+      </item>\n+      <item class=\"javax.swing.JSeparator\" icon=\"/com/intellij/uiDesigner/icons/separator.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\" />\n+      </item>\n+      <item class=\"javax.swing.JProgressBar\" icon=\"/com/intellij/uiDesigner/icons/progressbar.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"0\" fill=\"1\" />\n+      </item>\n+      <item class=\"javax.swing.JToolBar\" icon=\"/com/intellij/uiDesigner/icons/toolbar.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"0\" fill=\"1\">\n+          <preferred-size width=\"-1\" height=\"20\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JToolBar$Separator\" icon=\"/com/intellij/uiDesigner/icons/toolbarSeparator.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"0\" fill=\"1\" />\n+      </item>\n+      <item class=\"javax.swing.JScrollBar\" icon=\"/com/intellij/uiDesigner/icons/scrollbar.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"6\" hsize-policy=\"0\" anchor=\"0\" fill=\"2\" />\n+      </item>\n+    </group>\n+  </component>\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "0dcb6880e609687006706e1f1db50be3d10fc75a",
    "filename": "Takenlijst.iml",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/lhhamming/Takenlijst/blob/7c8337a7eecaba01401fb1f2319161b30df0772d/Takenlijst.iml",
    "raw_url": "https://github.com/lhhamming/Takenlijst/raw/7c8337a7eecaba01401fb1f2319161b30df0772d/Takenlijst.iml",
    "contents_url": "https://api.github.com/repos/lhhamming/Takenlijst/contents/Takenlijst.iml?ref=7c8337a7eecaba01401fb1f2319161b30df0772d",
    "patch": "@@ -7,6 +7,6 @@\n     </content>\n     <orderEntry type=\"inheritedJdk\" />\n     <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n+    <orderEntry type=\"library\" name=\"com.google.code.gson:gson:2.8.6\" level=\"project\" />\n   </component>\n-</module>\n-\n+</module>\n\\ No newline at end of file"
  },
  {
    "sha": "6ad74595de7d3efde36d6804f3c11d6dbca4ddea",
    "filename": "src/com/hamming/DateHelper.java",
    "status": "renamed",
    "additions": 12,
    "deletions": 18,
    "changes": 30,
    "blob_url": "https://github.com/lhhamming/Takenlijst/blob/7c8337a7eecaba01401fb1f2319161b30df0772d/src/com/hamming/DateHelper.java",
    "raw_url": "https://github.com/lhhamming/Takenlijst/raw/7c8337a7eecaba01401fb1f2319161b30df0772d/src/com/hamming/DateHelper.java",
    "contents_url": "https://api.github.com/repos/lhhamming/Takenlijst/contents/src/com/hamming/DateHelper.java?ref=7c8337a7eecaba01401fb1f2319161b30df0772d",
    "patch": "@@ -1,49 +1,43 @@\n package com.hamming;\n \n \n-public abstract class dateHelper {\n-    public static boolean dateCorrect(String date){\n+public abstract class DateHelper {\n+    public static boolean dateCorrect(String date) {\n         int check = 0;\n         String[] splitDate = date.split(\"-\");\n         //Date format: dd-mm-yyyy\n         for (int i = 0; i < splitDate.length; i++) {\n-            if( i < 2){\n+            if (i < 2) {\n                 //its checking the month and day\n                 try {\n                     Integer.parseInt(splitDate[i]);\n-                    if(splitDate[i].length() == 2){\n+                    if (splitDate[i].length() == 2) {\n                         //Continue the length is good.\n                         check++;\n-                    }\n-                    else {\n+                    } else {\n                         return false;\n                     }\n-                }catch (Exception e){\n+                } catch (Exception e) {\n                     //the filled in date isnt Integers\n                     return false;\n                 }\n-            }\n-            else{\n-                try{\n+            } else {\n+                try {\n                     //Its checking the year\n                     Integer.parseInt(splitDate[i]);\n-                    if(splitDate[i].length() == 4){\n+                    if (splitDate[i].length() == 4) {\n                         //The length of the year is correct\n                         check++;\n-                    }\n-                    else {\n+                    } else {\n                         return false;\n                     }\n-                }catch (Exception e){\n+                } catch (Exception e) {\n                     //The filled in date isnt Integers\n                     return false;\n                 }\n             }\n         }\n \n-        if(check == 3){\n-            return true;\n-        }\n-        return false;\n+        return check == 3;\n     }\n }",
    "previous_filename": "src/com/hamming/dateHelper.java"
  },
  {
    "sha": "5c0da73f4fa50badc96468a7ef73021bf8edf2b6",
    "filename": "src/com/hamming/Folder.java",
    "status": "modified",
    "additions": 67,
    "deletions": 47,
    "changes": 114,
    "blob_url": "https://github.com/lhhamming/Takenlijst/blob/7c8337a7eecaba01401fb1f2319161b30df0772d/src/com/hamming/Folder.java",
    "raw_url": "https://github.com/lhhamming/Takenlijst/raw/7c8337a7eecaba01401fb1f2319161b30df0772d/src/com/hamming/Folder.java",
    "contents_url": "https://api.github.com/repos/lhhamming/Takenlijst/contents/src/com/hamming/Folder.java?ref=7c8337a7eecaba01401fb1f2319161b30df0772d",
    "patch": "@@ -4,16 +4,14 @@\n import java.util.Scanner;\n \n public class Folder {\n-    private String name;\n+    ArrayList<Project> projects = new ArrayList<>();\n+    private final String name;\n \n-    public Folder(String name){\n+    public Folder(String name) {\n         this.name = name;\n     }\n \n-    ArrayList<Project> projects = new ArrayList<>();\n-\n-\n-    public void createProject(){\n+    public void createProject() {\n         System.out.println(\"What will be the name of the project?\");\n         Scanner sc = new Scanner(System.in);\n         String projectName = sc.nextLine();\n@@ -22,101 +20,123 @@ public void createProject(){\n         /*\n         System.out.println(\"Will the project be active or non-active?  \\n please type it like this: \\n Yes for active  or No for not active\");\n         */\n-        projects.add(new Project(projectName,true,projectNote));\n+        projects.add(new Project(projectName, true, projectNote));\n     }\n \n-    public void addTaskToPoject(){\n+    public void addTaskToProject() {\n         Scanner sc = new Scanner(System.in);\n-        if(projects.size() > 1){\n-            int index =0;\n+        if (projects.size() > 1) {\n+            int index = 0;\n             System.out.println(\"select a project to add an task to\");\n-            for(Project p : projects){\n+            for (Project p : projects) {\n                 index++;\n                 System.out.println(index + \". \" + p.toString());\n             }\n             int tempNumber = 0;\n-            do{\n-                if(!sc.hasNextInt()){\n+            do {\n+                if (!sc.hasNextInt()) {\n                     System.out.println(\"Enter a number\");\n                     sc.next();\n-                }else{\n+                } else {\n                     tempNumber = sc.nextInt();\n                 }\n \n-            }while(isOutofBounds(tempNumber));\n-            Project p = projects.get(tempNumber-1);\n+            } while (isOutOfBounds(tempNumber));\n+            Project p = projects.get(tempNumber - 1);\n             p.addTask();\n \n-        }else{\n-            if(projects.size() == 1){\n+        } else {\n+            if (projects.size() == 1) {\n                 Project p = projects.get(0);\n                 p.addTask();\n-            }else{\n+            } else {\n                 System.out.println(\"There doesnt seem to be an project. please create on first.\");\n             }\n \n         }\n     }\n \n     public void createTaskForProject() {\n-        if(this.projects.size() >= 0){\n-            int index = 0;\n+        int index = 0;\n+        if (projects.size() > 1) {\n             Scanner sc = new Scanner(System.in);\n \n-            for (Project p : projects){\n+            for (Project p : projects) {\n                 index++;\n-                System.out.println(index + \". \" + p.toString());\n+                System.out.println(index + \". \" + p.getTitle());\n             }\n             int test = 0;\n-            do{\n-                if(!sc.hasNextInt()){\n+            do {\n+                if (!sc.hasNextInt()) {\n                     System.out.println(\"Enter a number\");\n-                }else{\n+                } else {\n                     test = sc.nextInt();\n                 }\n \n-            }while(isOutofBounds(test));\n-            Project p = projects.get(test-1);\n-            p.addTask();\n+            } while (isOutOfBounds(test));\n+            index = test - 1;\n+        } else if (projects.size() == 0) {\n+            System.out.println(\"First create a project to add an task to\");\n+            return;\n         }\n-        System.out.println(\"First create a project to add an task to\");\n+        Project p = projects.get(index);\n+        p.addTask();\n     }\n \n-    private boolean isOutofBounds(int userInput) {\n-        if(userInput > projects.size() || userInput <= 0){\n+    private boolean isOutOfBounds(int userInput) {\n+        if (userInput > projects.size() || userInput <= 0) {\n             System.out.println(\"The selected number is bigger than the folder size\");\n             return true;\n         }\n         return false;\n     }\n \n-    public void printFolderTreeFull() {\n-        if(projects.size() != 0){\n+    public void printFolderTreeFull(StringBuilder sb, String prefix) {\n+        if (projects.size() != 0) {\n+            sb.append(\"\\n\");\n             //There is something in the projects list continue\n-            for (Project p : projects){\n-                System.out.println(\"\\t |- \" + p.printProject());\n-                if(p.hasTask()){\n-                    System.out.println(p.printTasks());\n+            for (int i = 0; i < projects.size(); i++) {\n+                if (i != projects.size() - 1) {\n+                    print(i, sb, prefix + \"├── \", prefix + \"│   \");\n+                } else {\n+                    print(i, sb, prefix + \"└── \", prefix + \"    \");\n                 }\n             }\n         }\n     }\n \n-    public boolean hasProject() {\n-        if(projects.size() > 0){\n-            //In the folder there is a project\n-            return true;\n-        }\n-        else{\n-            //the folder does not contain a project.\n-            return false;\n+    /**\n+     * @see #printFolderTreeFull(StringBuilder sb, String prefix)\n+     */\n+    private void print(int pos, StringBuilder sb, String prefix, String childrenPrefix) {\n+        Project project = projects.get(pos);\n+        project.printProject();\n+        sb.append(prefix);\n+        sb.append(project.printProject());\n+        sb.append(\"\\n\");\n+\n+        ArrayList<Task> tasks = project.getTasks();\n+        int amountTasks = tasks.size();\n+        for (int i = 0; i < amountTasks; i++) {\n+            Task task = tasks.get(i);\n+            sb\n+                    .append(childrenPrefix)\n+                    .append(i != amountTasks - 1 ? \"├── \" : \"└── \")\n+                    .append(task.printTask())\n+                    .append(\"\\n\");\n         }\n     }\n \n+    public boolean hasProject() {\n+        //In the folder there is a project\n+        //the folder does not contain a project.\n+        return projects.size() > 0;\n+    }\n+\n \n     @Override\n     public String toString() {\n-        return \"Titel: \" + this.name + \"\\n\";\n+        return \"Title: \" + this.name;\n \n     }\n "
  },
  {
    "sha": "f7444c2cf429ca9f1df01026f2e0f301a31e0161",
    "filename": "src/com/hamming/Main.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/lhhamming/Takenlijst/blob/7c8337a7eecaba01401fb1f2319161b30df0772d/src/com/hamming/Main.java",
    "raw_url": "https://github.com/lhhamming/Takenlijst/raw/7c8337a7eecaba01401fb1f2319161b30df0772d/src/com/hamming/Main.java",
    "contents_url": "https://api.github.com/repos/lhhamming/Takenlijst/contents/src/com/hamming/Main.java?ref=7c8337a7eecaba01401fb1f2319161b30df0772d",
    "patch": "@@ -3,7 +3,7 @@\n public class Main {\n \n     public static void main(String[] args) {\n-\tProjectmanagementsysteem p = new Projectmanagementsysteem();\n-\tp.start();\n+        ProjectManagementSysteem p = new ProjectManagementSysteem();\n+        p.start();\n     }\n }"
  },
  {
    "sha": "7c187ec4f08bce70e89bca1f1a8273fd2bc80d98",
    "filename": "src/com/hamming/Project.java",
    "status": "modified",
    "additions": 43,
    "deletions": 50,
    "changes": 93,
    "blob_url": "https://github.com/lhhamming/Takenlijst/blob/7c8337a7eecaba01401fb1f2319161b30df0772d/src/com/hamming/Project.java",
    "raw_url": "https://github.com/lhhamming/Takenlijst/raw/7c8337a7eecaba01401fb1f2319161b30df0772d/src/com/hamming/Project.java",
    "contents_url": "https://api.github.com/repos/lhhamming/Takenlijst/contents/src/com/hamming/Project.java?ref=7c8337a7eecaba01401fb1f2319161b30df0772d",
    "patch": "@@ -4,88 +4,81 @@\n import java.util.Scanner;\n \n public class Project {\n-    private String titel;\n-    private boolean active;\n-    private String note;\n-    ArrayList<Task> tasks = new ArrayList<>();\n+    private final ArrayList<Task> tasks = new ArrayList<>();\n+    private final String title;\n+    private final boolean active;\n+    private final String note;\n \n-    public Project(String titel, boolean active, String note){\n-        this.titel = titel;\n+    public Project(String title, boolean active, String note) {\n+        this.title = title;\n         this.active = active;\n         this.note = note;\n     }\n \n-\n     @Override\n     public String toString() {\n-        if(this.active){\n-            return \"Project title: \" + this.titel + \"\\n\" +\n-                    \"  Active: Yes\" + \"\\n\" +\n-                    \"  Project note: \" + this.note + \"\\n\";\n-        }else{\n-            return \"Project title: \" + this.titel + \"\\n\" +\n-                    \"Active: No\" + \"\\n\" +\n-                    \"Project note: \" + this.note + \"\\n\";\n-        }\n+        return \"Project title: \" + this.title + \"\\n\" +\n+                \"  Active: \" + (this.active ? \"Yes\" : \"No\") + \"\\n\" +\n+                \"  Project note: \" + this.note + \"\\n\";\n+    }\n+\n+    public String getTitle() {\n+        return title;\n     }\n \n     public void addTask() {\n-        System.out.println(\"What will the name of the task be?\");\n         Scanner sc = new Scanner(System.in);\n+        System.out.println(\"What will the name of the task be?\");\n+        System.out.print(\"> \");\n         String taskName = sc.nextLine();\n-        System.out.println(\"What will the Due date be?\");\n-        String dueDate = sc.nextLine();\n-        while(!dateHelper.dateCorrect(dueDate)){\n-            System.out.println(\"Due date isnt correct please type it in like this \\n dd-mm-yyyy / 21-12-2019\");\n+        System.out.println(\"What will the due date be?\");\n+        System.out.print(\"> \");\n+        String dueDate = sc.nextLine().trim();\n+        while (!DateHelper.dateCorrect(dueDate)) {\n+            System.out.println(\"Due date isn't correct please type it in like this \\n dd-mm-yyyy / 21-12-2019\");\n             dueDate = sc.nextLine();\n         }\n-        System.out.println(\"What will the Defer date be?\");\n-        String deferDate = sc.nextLine();\n-        if(deferDate.equals(\"\") || deferDate.equals(\" \")){\n-            //Do nothing\n-        }\n-        else{\n-            while(dateHelper.dateCorrect(deferDate)){\n-                System.out.println(\"Defer date isnt correct please type it in like this \\n dd-mm-yyyy / 21-12-2019\");\n+        System.out.println(\"What will the defer date be? (Leave empty to skip)\");\n+        System.out.print(\"> \");\n+        String deferDate = sc.nextLine().trim();\n+        if (!deferDate.equals(\"\")) {\n+            while (DateHelper.dateCorrect(deferDate)) {\n+                System.out.println(\"Defer date isn't correct please type it in like this \\n dd-mm-yyyy / 21-12-2019\");\n                 deferDate = sc.nextLine();\n             }\n+        } else {\n+            deferDate = dueDate;\n         }\n         System.out.println(\"What will the task note be?\");\n+        System.out.print(\"> \");\n         String taskNote = sc.nextLine();\n-        tasks.add(new Task(taskName,dueDate,deferDate,taskNote,true));\n+        tasks.add(new Task(taskName, dueDate, deferDate, taskNote, true));\n     }\n \n-    public String printProject(){\n-        if(this.active){\n-            return \"Title: \" + this.titel + \" | Active: Yes | Note: \" + this.note;\n-        }\n-        else{\n-            return \"Title: \" + this.titel + \" | Active: No | Note: \" + this.note;\n-        }\n+    public String printProject() {\n+        return String.format(\"Title: %s | Active: %s | Note: %s\", this.title, this.active ? \"Yes\" : \"No\", this.note);\n     }\n \n     public boolean hasTask() {\n-        if(tasks.size() != 0){\n-            //it has tasks\n-            return true;\n-        }\n-        else{\n-            //it does not have any tasks\n-            return false;\n-        }\n+        //it has tasks\n+        //it does not have any tasks\n+        return tasks.size() != 0;\n     }\n \n     public String printTasks() {\n         StringBuilder sb = new StringBuilder();\n         int Index = 0;\n-        for(Task t : tasks){\n+        for (Task t : tasks) {\n             Index++;\n-            if(Index != tasks.size()){\n-                sb.append(\"\\t \\t |--\" + t.printTask() + \"\\n\");\n-            }else{\n-                sb.append(\"\\t \\t |--\" + t.printTask());\n+            sb.append(\"\\t \\t |--\").append(t.printTask());\n+            if (Index != tasks.size()) {\n+                sb.append(\"\\n\");\n             }\n         }\n         return sb.toString();\n     }\n+\n+    public ArrayList<Task> getTasks() {\n+        return tasks;\n+    }\n }"
  },
  {
    "sha": "45dc709cab5fb9ae7538c07309c53e7af293d2cf",
    "filename": "src/com/hamming/ProjectManagementSysteem.java",
    "status": "added",
    "additions": 248,
    "deletions": 0,
    "changes": 248,
    "blob_url": "https://github.com/lhhamming/Takenlijst/blob/7c8337a7eecaba01401fb1f2319161b30df0772d/src/com/hamming/ProjectManagementSysteem.java",
    "raw_url": "https://github.com/lhhamming/Takenlijst/raw/7c8337a7eecaba01401fb1f2319161b30df0772d/src/com/hamming/ProjectManagementSysteem.java",
    "contents_url": "https://api.github.com/repos/lhhamming/Takenlijst/contents/src/com/hamming/ProjectManagementSysteem.java?ref=7c8337a7eecaba01401fb1f2319161b30df0772d",
    "patch": "@@ -0,0 +1,248 @@\n+package com.hamming;\n+\n+import com.google.gson.Gson;\n+\n+import java.io.File;\n+import java.io.FileWriter;\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Scanner;\n+\n+public class ProjectManagementSysteem {\n+    private final ArrayList<Folder> folders = new ArrayList<>();\n+    private final Gson gson = new Gson();\n+    private boolean run = true;\n+    private boolean folderExists = false;\n+\n+    public void start() {\n+        // Read from file\n+        File save = new File(\"save.json\");\n+        if (save.exists()) {\n+            try {\n+                byte[] bytes = Files.readAllBytes(save.toPath());\n+                folders.addAll(Arrays.asList(gson.fromJson(new String(bytes), Folder[].class)));\n+                if (folders.size() > 0) folderExists = true;\n+            } catch (IOException e) {\n+                System.err.println(\"Failed to read from save!\");\n+            }\n+        }\n+\n+        while (run) {\n+            System.out.println(\"Welcome to the Task management system.\");\n+            System.out.println(\"Please choose an option\");\n+            System.out.println(\"1. Create a Folder\");\n+            System.out.println(\"2. Create a project in a folder\");\n+            System.out.println(\"3. Create a Task in a project\");\n+            System.out.println(\"4. Print full Task tree\");\n+            System.out.println(\"0. Exit\");\n+            Scanner userInput = new Scanner(System.in);\n+            System.out.print(\"> \");\n+            while (!userInput.hasNextInt()) {\n+                System.out.println(\"Please type a number\");\n+                System.out.print(\"> \");\n+                userInput.next();\n+            }\n+            System.out.println();\n+            menuSelection(userInput.nextInt());\n+            System.out.println();\n+            if (run) {\n+                // Save to json\n+                String json = gson.toJson(folders);\n+                try {\n+                    FileWriter writer = new FileWriter(save);\n+                    writer.write(json);\n+                    writer.flush();\n+                    writer.close();\n+                } catch (IOException e) {\n+                    System.err.println(\"Failed to save!\");\n+                    e.printStackTrace();\n+                }\n+            }\n+        }\n+    }\n+\n+    private void menuSelection(int selection) {\n+        switch (selection) {\n+            case 1:\n+                createFolder();\n+                folderExists = true;\n+                break;\n+\n+            case 2:\n+                createProject();\n+                break;\n+\n+            case 3:\n+                addTaskToProject();\n+                break;\n+\n+            case 4://Prints out the entire project tree\n+                printFolderTreeFull();\n+                break;\n+\n+            case 0:\n+                run = false;\n+                System.out.println(\"Goodbye!\");\n+                break;\n+\n+            default:\n+                System.out.println(\"Please make a selection from the menu\");\n+                break;\n+        }\n+    }\n+\n+    private void printFolderTreeFull() {\n+        StringBuilder sb = new StringBuilder();\n+        sb.append(\"FOLDERS\\n\");\n+        if (folders.size() != 0) {\n+            //if there is something in the folder go on\n+            for (int i = 0; i < folders.size(); i++) {\n+                Folder folder = folders.get(i);\n+                if (i != folders.size() - 1) {\n+                    sb.append(\"├── \").append(folder.printName());\n+                    folder.printFolderTreeFull(sb, \"│   \");\n+                } else {\n+                    sb.append(\"└── \").append(folder.printName());\n+                    folder.printFolderTreeFull(sb, \"    \");\n+                }\n+            }\n+            System.out.println(sb.toString());\n+        }\n+    }\n+\n+    private void createFolder() {\n+        System.out.println(\"What will the folder name be?\");\n+        Scanner sc = new Scanner(System.in);\n+        System.out.print(\"> \");\n+        String folderName = sc.nextLine();\n+        folders.add(new Folder(folderName));\n+    }\n+\n+    private void createProject() {\n+        if (folderExists) {\n+            Folder f = getFolderFromUserInput();\n+            f.createProject();\n+        } else {\n+            //A folder doesnt exist\n+            Scanner sc = new Scanner(System.in);\n+            System.out.println(\"There don't seem to be any project folders please fill a name for this folder\");\n+            System.out.print(\"> \");\n+            String folderName = sc.nextLine();\n+            folders.add(new Folder(folderName));\n+            System.out.println(folders);\n+            Folder f = folders.get(0);\n+            f.createProject();\n+        }\n+    }\n+\n+    private void addTaskToProject() {\n+        if (folders.size() > 1) {\n+            if (hasFolderProjects()) {\n+                int Index = 0;\n+                for (Folder f : folders) {\n+                    Index++;\n+                    //There are projects in this folder show it to the user.\n+                    if (hasThisFolderProjects(f)) {\n+                        System.out.println(Index + \". \" + f.printName());\n+                    }\n+                }\n+                Folder f = getFolderFromUserInputMaxIndex(Index);\n+                f.createTaskForProject();\n+            } else {\n+                System.out.println(\"There aren't any folders with projects\");\n+            }\n+        } else {\n+            if (folders.size() > 0) {\n+                Folder f = folders.get(0);\n+                //Go to the first folder\n+                f.addTaskToProject();\n+            } else {\n+                //Check if a folder contains a project\n+                checkFolder();\n+            }\n+        }\n+    }\n+\n+    private boolean hasThisFolderProjects(Folder f) {\n+        return f.hasProject();\n+    }\n+\n+    private boolean hasFolderProjects() {\n+        for (Folder f : folders) {\n+            if (f.hasProject()) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    private Folder getFolderFromUserInput() {\n+        Scanner sc = new Scanner(System.in);\n+        int index = 0;\n+        System.out.println(\"Choose a folder to create a project in\");\n+        for (Folder f : folders) {\n+            index++;\n+            System.out.println(index + \". \" + f.printName());\n+        }\n+        //this variable is temporary. Because we need to initialize a int first before we can use it.\n+        int tempNumber = 0;\n+        do {\n+            System.out.print(\"> \");\n+            if (!sc.hasNextInt()) {\n+                System.out.println(\"Enter a number\");\n+                sc.next();\n+            } else {\n+                tempNumber = sc.nextInt();\n+            }\n+\n+        } while (isIntegerAndOutOfBounds(tempNumber));\n+\n+        return folders.get(tempNumber - 1);\n+    }\n+\n+    private Folder getFolderFromUserInputMaxIndex(int index) {\n+        Scanner sc = new Scanner(System.in);\n+        //this variable is temporary. Because we need to initialize a int first before we can use it.\n+        int tempNumber = 0;\n+        do {\n+            System.out.print(\"> \");\n+            if (!sc.hasNextInt()) {\n+                System.out.println(\"Enter a number\");\n+            } else {\n+                tempNumber = sc.nextInt();\n+            }\n+\n+        } while (isIntegerAndOutOfBoundsMaxIndex(tempNumber, index));\n+\n+        return folders.get(tempNumber - 1);\n+    }\n+\n+\n+    private void checkFolder() {\n+        for (Folder f : folders) {\n+            if (f.hasProject()) {\n+                //Do something\n+                System.out.println(\"It has a project?\");\n+            } else {\n+                System.out.println(\"There doesnt seem te be any projects in the folder. Please create one first\");\n+            }\n+        }\n+    }\n+\n+    private boolean isIntegerAndOutOfBounds(int userInput) {\n+        if (userInput > folders.size() || userInput <= 0) {\n+            System.out.println(\"The selected number is bigger than the folder size\");\n+            return true;\n+        }\n+        return false;\n+    }\n+\n+    private boolean isIntegerAndOutOfBoundsMaxIndex(int tempNumber, int maxIndex) {\n+        if (tempNumber > maxIndex || tempNumber <= 0) {\n+            System.out.println(\"The selected number is bigger than the folder size\");\n+            return true;\n+        } else return false;\n+    }\n+}"
  },
  {
    "sha": "eb7182aa602cf6d388084c52eb1d8dcd146a4647",
    "filename": "src/com/hamming/Projectmanagementsysteem.java",
    "status": "removed",
    "additions": 0,
    "deletions": 208,
    "changes": 208,
    "blob_url": "https://github.com/lhhamming/Takenlijst/blob/c86e1a0d209283039c0f8fccd6675afd911c1d13/src/com/hamming/Projectmanagementsysteem.java",
    "raw_url": "https://github.com/lhhamming/Takenlijst/raw/c86e1a0d209283039c0f8fccd6675afd911c1d13/src/com/hamming/Projectmanagementsysteem.java",
    "contents_url": "https://api.github.com/repos/lhhamming/Takenlijst/contents/src/com/hamming/Projectmanagementsysteem.java?ref=c86e1a0d209283039c0f8fccd6675afd911c1d13",
    "patch": "@@ -1,208 +0,0 @@\n-package com.hamming;\n-\n-import java.util.ArrayList;\n-import java.util.Scanner;\n-\n-public class Projectmanagementsysteem {\n-\n-    boolean run = true;\n-    boolean folderExisits = false;\n-\n-    ArrayList<Folder> folders = new ArrayList<>();\n-\n-    public void start() {\n-\n-        while(run){\n-            System.out.println(\"Welcome to the Task mangement system.\");\n-            System.out.println(\"Please choose an option\");\n-            System.out.println(\"1. Create a Folder\");\n-            System.out.println(\"2. Create a project in a folder\");\n-            System.out.println(\"3. Create a Task in a project\");\n-            System.out.println(\"4. Print full Task tree\");\n-            Scanner userInput = new Scanner(System.in);\n-            while (!userInput.hasNextInt()){\n-                System.out.println(\"Please type a number\");\n-                userInput.next();\n-            }\n-            menuSelection(userInput.nextInt());\n-        }\n-    }\n-\n-    private void menuSelection(int selection) {\n-        switch (selection){\n-            case 1:\n-                createFolder();\n-                folderExisits = true;\n-                break;\n-            case 2:\n-                createProject();\n-                break;\n-\n-            case 3:\n-                addTaskToProject();\n-                break;\n-\n-\n-            case 4://Prints out the entire project tree\n-                printFolderTreeFull();\n-                break;\n-\n-            default:\n-                System.out.println(\"Please make a selection from the menu\");\n-                break;\n-        }\n-    }\n-\n-    private void printFolderTreeFull() {\n-        if(folders.size() != 0){\n-            //if there is something in the folder go on\n-            for(Folder f : folders){\n-                System.out.println(\"- \" + f.printName());\n-                f.printFolderTreeFull();\n-            }\n-        }\n-    }\n-\n-    private void createFolder() {\n-        System.out.println(\"What will the folder name be?\");\n-        Scanner sc = new Scanner(System.in);\n-        String folderName = sc.nextLine();\n-        folders.add(new Folder(folderName));\n-    }\n-\n-    private void createProject() {\n-        Scanner sc = new Scanner(System.in);\n-        if(folderExisits){\n-            Folder f = getFolderFromUserInput();\n-            f.createProject();\n-        }\n-        else {\n-            //A folder doesnt exist\n-            System.out.println(\"There doesnt seem to be any project folders please fill a name for this folder\");\n-            String foldername = sc.next();\n-            folders.add(new Folder(foldername));\n-            System.out.println(folders);\n-            Folder f = folders.get(0);\n-            f.createProject();\n-        }\n-    }\n-\n-    private void addTaskToProject() {\n-        if(folders.size() > 1){\n-            if(hasFolderProjects()){\n-                int Index= 0;\n-                for (Folder f : folders){\n-                 Index++;\n-                 //There are projects in this folder show it to the user.\n-                    if(hasThisFolderProjects(f)){\n-                        System.out.println(Index + \". \" + f.toString() );\n-                    }\n-                }\n-                Folder f = getFolderFromUserInputMaxIndex(Index);\n-                f.createTaskForProject();\n-            }\n-            else{\n-                System.out.println(\"There arent any folders with an project\");\n-            }\n-\n-        }\n-        else{\n-            if(folders.size() > 0){\n-                Folder f = folders.get(0);\n-                //Ga naar de eerst folder\n-                f.addTaskToPoject();\n-            }\n-            else{\n-                //Check if a folder contains a project\n-                checkFolder();\n-            }\n-\n-        }\n-    }\n-\n-    private boolean hasThisFolderProjects(Folder f) {\n-        if(f.hasProject()){\n-            return true;\n-        }\n-        else return false;\n-    }\n-\n-    private boolean hasFolderProjects() {\n-        for (Folder f : folders){\n-            if(f.hasProject()){\n-                return true;\n-            }\n-        }\n-        return false;\n-    }\n-\n-    private Folder getFolderFromUserInput() {\n-        Scanner sc = new Scanner(System.in);\n-        int index = 0;\n-        System.out.println(\"Choose a folder to create a project on\");\n-        for(Folder f : folders){\n-            index++;\n-            System.out.println(index + \".\" + f.toString());\n-        }\n-        //this variable is temporary. Because we need to initialize a int first before we can use it.\n-        int tempNumber = 0;\n-        do{\n-            if(!sc.hasNextInt()){\n-                System.out.println(\"Enter a number\");\n-                sc.next();\n-            }else{\n-                tempNumber = sc.nextInt();\n-            }\n-\n-        }while(isIntegerAndOutOfBounds(tempNumber));\n-        Folder f = folders.get(tempNumber-1);\n-\n-        return f;\n-    }\n-\n-    private Folder getFolderFromUserInputMaxIndex(int index) {\n-        Scanner sc = new Scanner(System.in);\n-        //this variable is temporary. Because we need to initialize a int first before we can use it.\n-        int tempNumber = 0;\n-        do{\n-            if(!sc.hasNextInt()){\n-                System.out.println(\"Enter a number\");\n-            }else{\n-                tempNumber = sc.nextInt();\n-            }\n-\n-        }while(isIntegerAndOutOfBoundsMaxIndex(tempNumber, index));\n-        Folder f = folders.get(tempNumber-1);\n-\n-        return f;\n-    }\n-\n-\n-\n-    private void checkFolder() {\n-        for(Folder f : folders){\n-            if(f.hasProject()){\n-                //Do something\n-                System.out.println(\"It has a project?\");\n-            }else{\n-                System.out.println(\"There doesnt seem te be any projects in the folder. Please create one first\");\n-            }\n-        }\n-    }\n-\n-    private boolean isIntegerAndOutOfBounds(int userInput) {\n-        if(userInput > folders.size() || userInput <= 0){\n-            System.out.println(\"The selected number is bigger than the folder size\");\n-            return true;\n-        }\n-        return false;\n-    }\n-\n-    private boolean isIntegerAndOutOfBoundsMaxIndex(int tempNumber, int maxIndex) {\n-        if(tempNumber > maxIndex || tempNumber <= 0){\n-            System.out.println(\"The selected number is bigger than the folder size\");\n-            return true;\n-        }\n-        else return false;\n-    }\n-}"
  },
  {
    "sha": "f2b24eacd34069496082c93cc50e645d759a178a",
    "filename": "src/com/hamming/Task.java",
    "status": "modified",
    "additions": 13,
    "deletions": 25,
    "changes": 38,
    "blob_url": "https://github.com/lhhamming/Takenlijst/blob/7c8337a7eecaba01401fb1f2319161b30df0772d/src/com/hamming/Task.java",
    "raw_url": "https://github.com/lhhamming/Takenlijst/raw/7c8337a7eecaba01401fb1f2319161b30df0772d/src/com/hamming/Task.java",
    "contents_url": "https://api.github.com/repos/lhhamming/Takenlijst/contents/src/com/hamming/Task.java?ref=7c8337a7eecaba01401fb1f2319161b30df0772d",
    "patch": "@@ -1,14 +1,14 @@\n package com.hamming;\n \n public class Task {\n-    private String titel;\n-    private String deferDate;\n-    private String dueDate;\n-    private String note;\n-    private boolean active;\n+    private final String title;\n+    private final String deferDate;\n+    private final String dueDate;\n+    private final String note;\n+    private final boolean active;\n \n-    public Task(String titel, String deferDate, String dueDate, String note, boolean active){\n-        this.titel = titel;\n+    public Task(String title, String deferDate, String dueDate, String note, boolean active) {\n+        this.title = title;\n         this.deferDate = deferDate;\n         this.dueDate = dueDate;\n         this.note = note;\n@@ -18,26 +18,14 @@ public Task(String titel, String deferDate, String dueDate, String note, boolean\n \n     @Override\n     public String toString() {\n-        if(this.active){\n-            return \"Task titel:\" + this.titel + \"\\n\" +\n-                    \"Task defer date:\" + this.titel + \"\\n\" +\n-                    \"Task due date:\" + this.titel + \"\\n\" +\n-                    \"Task note:\" + this.titel + \"\\n\" +\n-                    \"Task active: yes\" + \"\\n\";\n-        }\n-        return \"Task titel:\" + this.titel + \"\\n\" +\n-               \"Task defer date:\" + this.titel + \"\\n\" +\n-               \"Task due date:\" + this.titel + \"\\n\" +\n-               \"Task note:\" + this.titel + \"\\n\" +\n-               \"Task active: no\"+ \"\\n\";\n+        return \"Task title:\" + this.title + \"\\n\" +\n+                \"Task defer date:\" + this.deferDate + \"\\n\" +\n+                \"Task due date:\" + this.dueDate + \"\\n\" +\n+                \"Task note:\" + this.note + \"\\n\" +\n+                \"Task active: \" + (this.active ? \"Yes\" : \"No\") + \"\\n\";\n     }\n \n     public String printTask() {\n-        if(this.active){\n-            return \"Title: \" + this.titel + \"| Active: Yes\";\n-        }\n-        else{\n-            return \"Title: \" + this.titel + \"|  Active: No\";\n-        }\n+        return String.format(\"Title: %s | Active: %s\", this.title, this.active ? \"Yes\" : \"No\");\n     }\n }"
  }
]
