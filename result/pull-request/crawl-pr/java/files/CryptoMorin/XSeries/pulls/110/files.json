[
  {
    "sha": "c3215973a4b18da2d712930187746457dbe0cc01",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/CryptoMorin/XSeries/blob/49b8537b80f87430df22c431bd1cda5c2fa821cb/pom.xml",
    "raw_url": "https://github.com/CryptoMorin/XSeries/raw/49b8537b80f87430df22c431bd1cda5c2fa821cb/pom.xml",
    "contents_url": "https://api.github.com/repos/CryptoMorin/XSeries/contents/pom.xml?ref=49b8537b80f87430df22c431bd1cda5c2fa821cb",
    "patch": "@@ -62,6 +62,12 @@\n     </repositories>\n \n     <dependencies>\n+        <dependency>\n+            <groupId>org.projectlombok</groupId>\n+            <artifactId>lombok</artifactId>\n+            <version>1.18.18</version>\n+            <scope>provided</scope>\n+        </dependency>\n         <dependency>\n             <groupId>org.spigotmc</groupId>\n             <artifactId>spigot</artifactId>"
  },
  {
    "sha": "ad49ad0c6f02cd0796ea4bb423f532f890b0b0c2",
    "filename": "src/main/java/com/cryptomorin/xseries/XEntity.java",
    "status": "modified",
    "additions": 36,
    "deletions": 12,
    "changes": 48,
    "blob_url": "https://github.com/CryptoMorin/XSeries/blob/49b8537b80f87430df22c431bd1cda5c2fa821cb/src/main/java/com/cryptomorin/xseries/XEntity.java",
    "raw_url": "https://github.com/CryptoMorin/XSeries/raw/49b8537b80f87430df22c431bd1cda5c2fa821cb/src/main/java/com/cryptomorin/xseries/XEntity.java",
    "contents_url": "https://api.github.com/repos/CryptoMorin/XSeries/contents/src/main/java/com/cryptomorin/xseries/XEntity.java?ref=49b8537b80f87430df22c431bd1cda5c2fa821cb",
    "patch": "@@ -21,6 +21,8 @@\n  */\n package com.cryptomorin.xseries;\n \n+import com.cryptomorin.xseries.section.BukkitConfigurationSection;\n+import com.cryptomorin.xseries.section.XConfigurationSection;\n import com.google.common.base.Enums;\n import org.bukkit.ChatColor;\n import org.bukkit.DyeColor;\n@@ -102,7 +104,13 @@ public static boolean isUndead(@Nullable EntityType type) {\n \n     @Nullable\n     public static Entity spawn(@Nonnull Location location, @Nonnull ConfigurationSection config) {\n+        return spawn(location, new BukkitConfigurationSection(config));\n+    }\n+\n+    @Nullable\n+    public static Entity spawn(@Nonnull Location location, @Nonnull XConfigurationSection config) {\n         Objects.requireNonNull(location, \"Cannot spawn entity at a null location.\");\n+        Objects.requireNonNull(location.getWorld(), \"Cannot spawn entity at a null world.\");\n         Objects.requireNonNull(config, \"Cannot spawn entity from a null configuration section\");\n \n         String typeStr = config.getString(\"type\");\n@@ -112,9 +120,14 @@ public static Entity spawn(@Nonnull Location location, @Nonnull ConfigurationSec\n         return edit(location.getWorld().spawnEntity(location, type), config);\n     }\n \n-    @SuppressWarnings({\"deprecation\", \"Guava\"})\n     @Nonnull\n     public static Entity edit(@Nonnull Entity entity, @Nonnull ConfigurationSection config) {\n+        return edit(entity, new BukkitConfigurationSection(config));\n+    }\n+\n+    @SuppressWarnings({\"deprecation\", \"Guava\"})\n+    @Nonnull\n+    public static Entity edit(@Nonnull Entity entity, @Nonnull XConfigurationSection config) {\n         Objects.requireNonNull(entity, \"Cannot edit properties of a null entity\");\n         Objects.requireNonNull(config, \"Cannot edit an entity from a null configuration section\");\n \n@@ -163,7 +176,7 @@ public static Entity edit(@Nonnull Entity entity, @Nonnull ConfigurationSection\n \n         if (entity instanceof Boss) {\n             Boss boss = (Boss) entity;\n-            ConfigurationSection bossBarSection = config.getConfigurationSection(\"bossbar\");\n+            XConfigurationSection bossBarSection = config.getConfigurationSection(\"bossbar\");\n \n             if (bossBarSection != null) {\n                 BossBar bossBar = boss.getBossBar();\n@@ -194,41 +207,41 @@ public static Entity edit(@Nonnull Entity entity, @Nonnull ConfigurationSection\n                 living.addPotionEffect(XPotion.parsePotionEffectFromString(effects));\n             }\n \n-            ConfigurationSection equip = config.getConfigurationSection(\"equipment\");\n+            XConfigurationSection equip = config.getConfigurationSection(\"equipment\");\n             if (equip != null) {\n                 EntityEquipment equipment = living.getEquipment();\n \n-                ConfigurationSection helmet = equip.getConfigurationSection(\"helmet\");\n+                XConfigurationSection helmet = equip.getConfigurationSection(\"helmet\");\n                 if (helmet != null) {\n                     equipment.setHelmet(XItemStack.deserialize(helmet.getConfigurationSection(\"item\")));\n                     equipment.setHelmetDropChance(helmet.getInt(\"drop-chance\"));\n                 }\n \n-                ConfigurationSection chestplate = equip.getConfigurationSection(\"chestplate\");\n+                XConfigurationSection chestplate = equip.getConfigurationSection(\"chestplate\");\n                 if (chestplate != null) {\n                     equipment.setChestplate(XItemStack.deserialize(chestplate.getConfigurationSection(\"item\")));\n                     equipment.setChestplateDropChance(chestplate.getInt(\"drop-chance\"));\n                 }\n \n-                ConfigurationSection leggings = equip.getConfigurationSection(\"leggings\");\n+                XConfigurationSection leggings = equip.getConfigurationSection(\"leggings\");\n                 if (leggings != null) {\n                     equipment.setLeggings(XItemStack.deserialize(leggings.getConfigurationSection(\"item\")));\n                     equipment.setLeggingsDropChance(leggings.getInt(\"drop-chance\"));\n                 }\n \n-                ConfigurationSection boots = equip.getConfigurationSection(\"boots\");\n+                XConfigurationSection boots = equip.getConfigurationSection(\"boots\");\n                 if (boots != null) {\n                     equipment.setBoots(XItemStack.deserialize(boots.getConfigurationSection(\"item\")));\n                     equipment.setBootsDropChance(boots.getInt(\"drop-chance\"));\n                 }\n \n-                ConfigurationSection mainHand = equip.getConfigurationSection(\"main-hand\");\n+                XConfigurationSection mainHand = equip.getConfigurationSection(\"main-hand\");\n                 if (mainHand != null) {\n                     equipment.setItemInMainHand(XItemStack.deserialize(mainHand.getConfigurationSection(\"item\")));\n                     equipment.setItemInMainHandDropChance(mainHand.getInt(\"drop-chance\"));\n                 }\n \n-                ConfigurationSection offHand = equip.getConfigurationSection(\"off-hand\");\n+                XConfigurationSection offHand = equip.getConfigurationSection(\"off-hand\");\n                 if (offHand != null) {\n                     equipment.setItemInOffHand(XItemStack.deserialize(offHand.getConfigurationSection(\"item\")));\n                     equipment.setItemInOffHandDropChance(offHand.getInt(\"drop-chance\"));\n@@ -274,11 +287,11 @@ public static Entity edit(@Nonnull Entity entity, @Nonnull ConfigurationSection\n                 if (config.isSet(\"jump-strength\")) horse.setJumpStrength(config.getDouble(\"jump-strength\"));\n                 if (config.isSet(\"max-domestication\")) horse.setMaxDomestication(config.getInt(\"max-domestication\"));\n \n-                ConfigurationSection items = config.getConfigurationSection(\"items\");\n+                XConfigurationSection items = config.getConfigurationSection(\"items\");\n                 if (items != null) {\n                     Inventory inventory = horse.getInventory();\n                     for (String key : items.getKeys(false)) {\n-                        ConfigurationSection itemSec = items.getConfigurationSection(key);\n+                        XConfigurationSection itemSec = items.getConfigurationSection(key);\n                         int slot = itemSec.getInt(\"slot\", -1);\n                         if (slot != -1) {\n                             ItemStack item = XItemStack.deserialize(itemSec);\n@@ -430,8 +443,19 @@ public static Entity edit(@Nonnull Entity entity, @Nonnull ConfigurationSection\n      * @param section the config section to edit the bossbar from.\n      * @since 3.0.0\n      */\n-    @SuppressWarnings(\"Guava\")\n     private static void editBossBar(BossBar bossBar, ConfigurationSection section) {\n+        editBossBar(bossBar, new BukkitConfigurationSection(section));\n+    }\n+\n+    /**\n+     * Edits an existing BossBar from the config.\n+     *\n+     * @param bossBar the created bossbar.\n+     * @param section the config section to edit the bossbar from.\n+     * @since 3.0.0\n+     */\n+    @SuppressWarnings(\"Guava\")\n+    private static void editBossBar(BossBar bossBar, XConfigurationSection section) {\n         String title = section.getString(\"title\");\n         if (title != null) bossBar.setTitle(ChatColor.translateAlternateColorCodes('&', title));\n "
  },
  {
    "sha": "1778a51a7b594557f9adaf326f10aa50c785fbf8",
    "filename": "src/main/java/com/cryptomorin/xseries/XItemStack.java",
    "status": "modified",
    "additions": 49,
    "deletions": 23,
    "changes": 72,
    "blob_url": "https://github.com/CryptoMorin/XSeries/blob/49b8537b80f87430df22c431bd1cda5c2fa821cb/src/main/java/com/cryptomorin/xseries/XItemStack.java",
    "raw_url": "https://github.com/CryptoMorin/XSeries/raw/49b8537b80f87430df22c431bd1cda5c2fa821cb/src/main/java/com/cryptomorin/xseries/XItemStack.java",
    "contents_url": "https://api.github.com/repos/CryptoMorin/XSeries/contents/src/main/java/com/cryptomorin/xseries/XItemStack.java?ref=49b8537b80f87430df22c431bd1cda5c2fa821cb",
    "patch": "@@ -21,6 +21,8 @@\n  */\n package com.cryptomorin.xseries;\n \n+import com.cryptomorin.xseries.section.BukkitConfigurationSection;\n+import com.cryptomorin.xseries.section.XConfigurationSection;\n import com.google.common.base.Enums;\n import com.google.common.base.Strings;\n import com.google.common.collect.Multimap;\n@@ -86,8 +88,20 @@ private XItemStack() {\n      * @param config the config section to write this item to.\n      * @since 1.0.0\n      */\n-    @SuppressWarnings(\"deprecation\")\n     public static void serialize(@Nonnull ItemStack item, @Nonnull ConfigurationSection config) {\n+        serialize(item, new BukkitConfigurationSection(config));\n+    }\n+\n+    /**\n+     * Writes an ItemStack object into a config.\n+     * The config file will not save after the object is written.\n+     *\n+     * @param item   the ItemStack to serialize.\n+     * @param config the config section to write this item to.\n+     * @since 1.0.0\n+     */\n+    @SuppressWarnings(\"deprecation\")\n+    public static void serialize(@Nonnull ItemStack item, @Nonnull XConfigurationSection config) {\n         Objects.requireNonNull(item, \"Cannot serialize a null item\");\n         Objects.requireNonNull(config, \"Cannot serialize item from a null configuration section.\");\n         ItemMeta meta = item.getItemMeta();\n@@ -162,7 +176,7 @@ public static void serialize(@Nonnull ItemStack item, @Nonnull ConfigurationSect\n \n             if (XMaterial.supports(11) && state instanceof ShulkerBox) {\n                 ShulkerBox box = (ShulkerBox) state;\n-                ConfigurationSection shulker = config.createSection(\"shulker\");\n+                XConfigurationSection shulker = config.createSection(\"shulker\");\n                 int i = 0;\n                 for (ItemStack itemInBox : box.getInventory().getContents()) {\n                     if (itemInBox != null) serialize(itemInBox, shulker.createSection(Integer.toString(i)));\n@@ -182,7 +196,7 @@ public static void serialize(@Nonnull ItemStack item, @Nonnull ConfigurationSect\n             config.set(\"skull\", SkullUtils.getSkinValue(meta));\n         } else if (meta instanceof BannerMeta) {\n             BannerMeta banner = (BannerMeta) meta;\n-            ConfigurationSection patterns = config.createSection(\"patterns\");\n+            XConfigurationSection patterns = config.createSection(\"patterns\");\n             for (Pattern pattern : banner.getPatterns()) {\n                 patterns.set(pattern.getPattern().name(), pattern.getColor().name());\n             }\n@@ -222,7 +236,7 @@ public static void serialize(@Nonnull ItemStack item, @Nonnull ConfigurationSect\n \n             for (FireworkEffect fw : firework.getEffects()) {\n                 config.set(\"firework.\" + i + \".type\", fw.getType().name());\n-                ConfigurationSection fwc = config.getConfigurationSection(\"firework.\" + i);\n+                XConfigurationSection fwc = config.getConfigurationSection(\"firework.\" + i);\n                 fwc.set(\"flicker\", fw.hasFlicker());\n                 fwc.set(\"trail\", fw.hasTrail());\n \n@@ -232,7 +246,7 @@ public static void serialize(@Nonnull ItemStack item, @Nonnull ConfigurationSect\n                 List<String> baseColors = new ArrayList<>(fwBaseColors.size());\n                 List<String> fadeColors = new ArrayList<>(fwFadeColors.size());\n \n-                ConfigurationSection colors = fwc.createSection(\"colors\");\n+                XConfigurationSection colors = fwc.createSection(\"colors\");\n                 for (Color color : fwBaseColors) baseColors.add(color.getRed() + \", \" + color.getGreen() + \", \" + color.getBlue());\n                 colors.set(\"base\", baseColors);\n \n@@ -242,7 +256,7 @@ public static void serialize(@Nonnull ItemStack item, @Nonnull ConfigurationSect\n             }\n         } else if(meta instanceof BookMeta) {\n             BookMeta book = (BookMeta)meta;\n-            ConfigurationSection bookSection = config.createSection(\"book\");\n+            XConfigurationSection bookSection = config.createSection(\"book\");\n             bookSection.set(\"title\", book.getTitle());\n             bookSection.set(\"author\", book.getAuthor());\n             if(XMaterial.supports(9)) {\n@@ -254,7 +268,7 @@ public static void serialize(@Nonnull ItemStack item, @Nonnull ConfigurationSect\n             bookSection.set(\"pages\", book.getPages());\n         } else if(meta instanceof MapMeta) {\n             MapMeta map = (MapMeta)meta;\n-            ConfigurationSection mapSection = config.createSection(\"map\");\n+            XConfigurationSection mapSection = config.createSection(\"map\");\n             mapSection.set(\"scaling\",map.isScaling());\n             if(XMaterial.supports(11)) {\n                 if (map.hasLocationName()) mapSection.set(\"location\", map.getLocationName());\n@@ -266,10 +280,10 @@ public static void serialize(@Nonnull ItemStack item, @Nonnull ConfigurationSect\n             if(XMaterial.supports(14)){\n                 if(map.hasMapView()) {\n                     MapView mapView = map.getMapView();\n-                    ConfigurationSection view = mapSection.createSection(\"view\");\n+                    XConfigurationSection view = mapSection.createSection(\"view\");\n                     view.set(\"scale\", mapView.getScale().toString());\n                     view.set(\"world\", mapView.getWorld().getName());\n-                    ConfigurationSection centerSection = view.createSection(\"center\");\n+                    XConfigurationSection centerSection = view.createSection(\"center\");\n                     centerSection.set(\"x\", mapView.getCenterX());\n                     centerSection.set(\"z\", mapView.getCenterZ());\n                     view.set(\"locked\",mapView.isLocked());\n@@ -325,9 +339,21 @@ public static void serialize(@Nonnull ItemStack item, @Nonnull ConfigurationSect\n      * @return a deserialized ItemStack.\n      * @since 1.0.0\n      */\n-    @SuppressWarnings(\"deprecation\")\n     @Nullable\n     public static ItemStack deserialize(@Nonnull ConfigurationSection config) {\n+        return deserialize(new BukkitConfigurationSection(config));\n+    }\n+\n+    /**\n+     * Deserialize an ItemStack from the config.\n+     *\n+     * @param config the config section to deserialize the ItemStack object from.\n+     * @return a deserialized ItemStack.\n+     * @since 1.0.0\n+     */\n+    @SuppressWarnings(\"deprecation\")\n+    @Nullable\n+    public static ItemStack deserialize(@Nonnull XConfigurationSection config) {\n         Objects.requireNonNull(config, \"Cannot deserialize item to a null configuration section.\");\n         boolean isNewVersion = XMaterial.isNewVersion();\n \n@@ -363,7 +389,7 @@ public static ItemStack deserialize(@Nonnull ConfigurationSection config) {\n             if (skull != null) SkullUtils.applySkin(meta, skull);\n         } else if (meta instanceof BannerMeta) {\n             BannerMeta banner = (BannerMeta) meta;\n-            ConfigurationSection patterns = config.getConfigurationSection(\"patterns\");\n+            XConfigurationSection patterns = config.getConfigurationSection(\"patterns\");\n \n             if (patterns != null) {\n                 for (String pattern : patterns.getKeys(false)) {\n@@ -427,7 +453,7 @@ public static ItemStack deserialize(@Nonnull ConfigurationSection config) {\n                 spawner.update(true);\n                 bsm.setBlockState(spawner);\n             } else if (XMaterial.supports(11) && state instanceof ShulkerBox) {\n-                ConfigurationSection shulkerSection = config.getConfigurationSection(\"shulker\");\n+                XConfigurationSection shulkerSection = config.getConfigurationSection(\"shulker\");\n                 if (shulkerSection != null) {\n                     ShulkerBox box = (ShulkerBox) state;\n                     for (String key : shulkerSection.getKeys(false)) {\n@@ -440,7 +466,7 @@ public static ItemStack deserialize(@Nonnull ConfigurationSection config) {\n                 }\n             } else if (state instanceof Banner) {\n                 Banner banner = (Banner) state;\n-                ConfigurationSection patterns = config.getConfigurationSection(\"patterns\");\n+                XConfigurationSection patterns = config.getConfigurationSection(\"patterns\");\n \n                 if (patterns != null) {\n                     for (String pattern : patterns.getKeys(false)) {\n@@ -459,17 +485,17 @@ public static ItemStack deserialize(@Nonnull ConfigurationSection config) {\n             FireworkMeta firework = (FireworkMeta) meta;\n             firework.setPower(config.getInt(\"power\"));\n \n-            ConfigurationSection fireworkSection = config.getConfigurationSection(\"firework\");\n+            XConfigurationSection fireworkSection = config.getConfigurationSection(\"firework\");\n             if (fireworkSection != null) {\n                 FireworkEffect.Builder builder = FireworkEffect.builder();\n                 for (String fws : fireworkSection.getKeys(false)) {\n-                    ConfigurationSection fw = config.getConfigurationSection(\"firework.\" + fws);\n+                    XConfigurationSection fw = config.getConfigurationSection(\"firework.\" + fws);\n \n                     builder.flicker(fw.getBoolean(\"flicker\"));\n                     builder.trail(fw.getBoolean(\"trail\"));\n                     builder.with(Enums.getIfPresent(FireworkEffect.Type.class, fw.getString(\"type\").toUpperCase(Locale.ENGLISH)).or(FireworkEffect.Type.STAR));\n \n-                    ConfigurationSection colorsSection = fw.getConfigurationSection(\"colors\");\n+                    XConfigurationSection colorsSection = fw.getConfigurationSection(\"colors\");\n                     List<String> fwColors = colorsSection.getStringList(\"base\");\n                     List<Color> colors = new ArrayList<>(fwColors.size());\n                     for (String colorStr : fwColors) colors.add(parseColor(colorStr));\n@@ -485,7 +511,7 @@ public static ItemStack deserialize(@Nonnull ConfigurationSection config) {\n             }\n         } else if(meta instanceof BookMeta) {\n             BookMeta book = (BookMeta)meta;\n-            ConfigurationSection bookSection = config.getConfigurationSection(\"book\");\n+            XConfigurationSection bookSection = config.getConfigurationSection(\"book\");\n             book.setTitle(bookSection.getString(\"title\"));\n             book.setAuthor(bookSection.getString(\"author\"));\n             if(XMaterial.supports(9)) {\n@@ -498,7 +524,7 @@ public static ItemStack deserialize(@Nonnull ConfigurationSection config) {\n             book.setPages(bookSection.getStringList(\"pages\"));\n         } else if(meta instanceof MapMeta){\n             MapMeta map = (MapMeta)meta;\n-            ConfigurationSection mapSection = config.getConfigurationSection(\"map\");\n+            XConfigurationSection mapSection = config.getConfigurationSection(\"map\");\n             map.setScaling(mapSection.getBoolean(\"scaling\"));\n             if(XMaterial.supports(11)) {\n                 if (mapSection.isSet(\"location\")) map.setLocationName(mapSection.getString(\"location\"));\n@@ -508,14 +534,14 @@ public static ItemStack deserialize(@Nonnull ConfigurationSection config) {\n                 }\n             }\n             if(XMaterial.supports(14)){\n-                ConfigurationSection view = mapSection.getConfigurationSection(\"view\");\n+                XConfigurationSection view = mapSection.getConfigurationSection(\"view\");\n                 if(view != null) {\n                     World world = Bukkit.getWorld(view.getString(\"world\"));\n                     if (world != null) {\n                         MapView mapView = Bukkit.createMap(world);\n                         mapView.setWorld(world);\n                         mapView.setScale(Enums.getIfPresent(MapView.Scale.class,view.getString(\"scale\")).or(MapView.Scale.NORMAL));\n-                        ConfigurationSection centerSection = view.getConfigurationSection(\"center\");\n+                        XConfigurationSection centerSection = view.getConfigurationSection(\"center\");\n                         mapView.setCenterX(centerSection.getInt(\"x\"));\n                         mapView.setCenterZ(centerSection.getInt(\"z\"));\n                         mapView.setLocked(view.getBoolean(\"locked\"));\n@@ -633,7 +659,7 @@ public static ItemStack deserialize(@Nonnull ConfigurationSection config) {\n         }\n \n         // Enchantments\n-        ConfigurationSection enchants = config.getConfigurationSection(\"enchants\");\n+        XConfigurationSection enchants = config.getConfigurationSection(\"enchants\");\n         if (enchants != null) {\n             for (String ench : enchants.getKeys(false)) {\n                 Optional<XEnchantment> enchant = XEnchantment.matchXEnchantment(ench);\n@@ -642,7 +668,7 @@ public static ItemStack deserialize(@Nonnull ConfigurationSection config) {\n         }\n \n         // Enchanted Books\n-        ConfigurationSection enchantment = config.getConfigurationSection(\"stored-enchants\");\n+        XConfigurationSection enchantment = config.getConfigurationSection(\"stored-enchants\");\n         if (enchantment != null) {\n             for (String ench : enchantment.getKeys(false)) {\n                 Optional<XEnchantment> enchant = XEnchantment.matchXEnchantment(ench);\n@@ -666,7 +692,7 @@ public static ItemStack deserialize(@Nonnull ConfigurationSection config) {\n \n         // Atrributes - https://minecraft.gamepedia.com/Attribute\n         if (isNewVersion) {\n-            ConfigurationSection attributes = config.getConfigurationSection(\"attributes\");\n+            XConfigurationSection attributes = config.getConfigurationSection(\"attributes\");\n             if (attributes != null) {\n                 for (String attribute : attributes.getKeys(false)) {\n                     Attribute attributeInst = Enums.getIfPresent(Attribute.class, attribute.toUpperCase(Locale.ENGLISH)).orNull();"
  },
  {
    "sha": "4b4aed06dfd087de008123100eb7553dd548f4b1",
    "filename": "src/main/java/com/cryptomorin/xseries/messages/Titles.java",
    "status": "modified",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/CryptoMorin/XSeries/blob/49b8537b80f87430df22c431bd1cda5c2fa821cb/src/main/java/com/cryptomorin/xseries/messages/Titles.java",
    "raw_url": "https://github.com/CryptoMorin/XSeries/raw/49b8537b80f87430df22c431bd1cda5c2fa821cb/src/main/java/com/cryptomorin/xseries/messages/Titles.java",
    "contents_url": "https://api.github.com/repos/CryptoMorin/XSeries/contents/src/main/java/com/cryptomorin/xseries/messages/Titles.java?ref=49b8537b80f87430df22c431bd1cda5c2fa821cb",
    "patch": "@@ -22,6 +22,8 @@\n package com.cryptomorin.xseries.messages;\n \n import com.cryptomorin.xseries.ReflectionUtils;\n+import com.cryptomorin.xseries.section.BukkitConfigurationSection;\n+import com.cryptomorin.xseries.section.XConfigurationSection;\n import com.google.common.base.Strings;\n import org.apache.commons.lang.StringUtils;\n import org.bukkit.ChatColor;\n@@ -201,6 +203,26 @@ public static void sendTitle(@Nonnull Player player, @Nonnull String title, @Non\n      * @since 1.0.0\n      */\n     public static void sendTitle(@Nonnull Player player, @Nonnull ConfigurationSection config) {\n+        sendTitle(player, new BukkitConfigurationSection(config));\n+    }\n+\n+    /**\n+     * Parses and sends a title from the config.\n+     * The configuration section must at least\n+     * contain {@code title} or {@code subtitle}\n+     *\n+     * <p>\n+     * <b>Example:</b>\n+     * <blockquote><pre>\n+     *     ConfigurationSection titleSection = plugin.getConfig().getConfigurationSection(\"restart-title\");\n+     *     Titles.sendTitle(player, titleSection);\n+     * </pre></blockquote>\n+     *\n+     * @param player the player to send the title to.\n+     * @param config the configuration section to parse the title properties from.\n+     * @since 1.0.0\n+     */\n+    public static void sendTitle(@Nonnull Player player, @Nonnull XConfigurationSection config) {\n         String title = config.getString(\"title\");\n         String subtitle = config.getString(\"subtitle\");\n "
  },
  {
    "sha": "db3e6e81c19f0b0ff27e797b09be2cf235a3c693",
    "filename": "src/main/java/com/cryptomorin/xseries/particles/ParticleDisplay.java",
    "status": "modified",
    "additions": 27,
    "deletions": 0,
    "changes": 27,
    "blob_url": "https://github.com/CryptoMorin/XSeries/blob/49b8537b80f87430df22c431bd1cda5c2fa821cb/src/main/java/com/cryptomorin/xseries/particles/ParticleDisplay.java",
    "raw_url": "https://github.com/CryptoMorin/XSeries/raw/49b8537b80f87430df22c431bd1cda5c2fa821cb/src/main/java/com/cryptomorin/xseries/particles/ParticleDisplay.java",
    "contents_url": "https://api.github.com/repos/CryptoMorin/XSeries/contents/src/main/java/com/cryptomorin/xseries/particles/ParticleDisplay.java?ref=49b8537b80f87430df22c431bd1cda5c2fa821cb",
    "patch": "@@ -21,6 +21,8 @@\n  */\n package com.cryptomorin.xseries.particles;\n \n+import com.cryptomorin.xseries.section.BukkitConfigurationSection;\n+import com.cryptomorin.xseries.section.XConfigurationSection;\n import org.apache.commons.lang.StringUtils;\n import org.apache.commons.lang.math.NumberUtils;\n import org.bukkit.Location;\n@@ -193,6 +195,18 @@ public static ParticleDisplay display(@Nonnull Location location, @Nonnull Parti\n      * @since 1.0.0\n      */\n     public static ParticleDisplay fromConfig(@Nullable Location location, @Nonnull ConfigurationSection config) {\n+        return fromConfig(location, new BukkitConfigurationSection(config));\n+    }\n+\n+    /**\n+     * Builds particle settings from a configuration section.\n+     *\n+     * @param location the location to display this particle.\n+     * @param config   the config section for the settings.\n+     * @return a parsed ParticleDisplay.\n+     * @since 1.0.0\n+     */\n+    public static ParticleDisplay fromConfig(@Nullable Location location, @Nonnull XConfigurationSection config) {\n         ParticleDisplay display = new ParticleDisplay(DEFAULT_PARTICLE, location);\n         return edit(display, config);\n     }\n@@ -207,6 +221,19 @@ public static ParticleDisplay fromConfig(@Nullable Location location, @Nonnull C\n      */\n     @Nonnull\n     public static ParticleDisplay edit(@Nonnull ParticleDisplay display, @Nonnull ConfigurationSection config) {\n+        return edit(display, new BukkitConfigurationSection(config));\n+    }\n+\n+    /**\n+     * Builds particle settings from a configuration section.\n+     *\n+     * @param display the particle display settings to update.\n+     * @param config  the config section for the settings.\n+     * @return an edited ParticleDisplay.\n+     * @since 5.0.0\n+     */\n+    @Nonnull\n+    public static ParticleDisplay edit(@Nonnull ParticleDisplay display, @Nonnull XConfigurationSection config) {\n         Objects.requireNonNull(display, \"Cannot edit a null particle display\");\n         Objects.requireNonNull(config, \"Cannot parse ParticleDisplay from a null config section\");\n "
  },
  {
    "sha": "1f2fad5abbbcc27367874af32a33c867a6989b4b",
    "filename": "src/main/java/com/cryptomorin/xseries/section/BukkitConfigurationSection.java",
    "status": "added",
    "additions": 56,
    "deletions": 0,
    "changes": 56,
    "blob_url": "https://github.com/CryptoMorin/XSeries/blob/49b8537b80f87430df22c431bd1cda5c2fa821cb/src/main/java/com/cryptomorin/xseries/section/BukkitConfigurationSection.java",
    "raw_url": "https://github.com/CryptoMorin/XSeries/raw/49b8537b80f87430df22c431bd1cda5c2fa821cb/src/main/java/com/cryptomorin/xseries/section/BukkitConfigurationSection.java",
    "contents_url": "https://api.github.com/repos/CryptoMorin/XSeries/contents/src/main/java/com/cryptomorin/xseries/section/BukkitConfigurationSection.java?ref=49b8537b80f87430df22c431bd1cda5c2fa821cb",
    "patch": "@@ -0,0 +1,56 @@\n+package com.cryptomorin.xseries.section;\n+\n+import lombok.experimental.Delegate;\n+import org.bukkit.configuration.ConfigurationSection;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+\n+/**\n+ * A class that delegates {@link ConfigurationSection} for {@link XConfigurationSection}.\n+ *\n+ * @author portlek\n+ * @version 1.0.0\n+ */\n+public final class BukkitConfigurationSection implements XConfigurationSection {\n+\n+    /**\n+     * The section to delegate.\n+     */\n+    @Nonnull\n+    @Delegate(excludes = Exclusions.class)\n+    private final ConfigurationSection section;\n+\n+    /**\n+     * Ctor.\n+     *\n+     * @param section The section to delegate.\n+     */\n+    public BukkitConfigurationSection(@Nonnull ConfigurationSection section) {\n+        this.section = section;\n+    }\n+\n+    @Nonnull\n+    @Override\n+    public XConfigurationSection createSection(@Nonnull String path) {\n+        return new BukkitConfigurationSection(this.section.createSection(path));\n+    }\n+\n+    @Nullable\n+    @Override\n+    public XConfigurationSection getConfigurationSection(@Nonnull String path) {\n+        final ConfigurationSection section = this.section.getConfigurationSection(path);\n+        if (section == null) {\n+            return null;\n+        }\n+        return new BukkitConfigurationSection(section);\n+    }\n+\n+    /**\n+     * An interface to exclude methods from the Bukkit's configuration section.\n+     */\n+    private interface Exclusions {\n+        ConfigurationSection createSection(String path);\n+        ConfigurationSection getConfigurationSection(String path);\n+    }\n+}"
  },
  {
    "sha": "fa2443c947ee6e28cd930bb86fa2735a03aa0ea9",
    "filename": "src/main/java/com/cryptomorin/xseries/section/XConfigurationSection.java",
    "status": "added",
    "additions": 139,
    "deletions": 0,
    "changes": 139,
    "blob_url": "https://github.com/CryptoMorin/XSeries/blob/49b8537b80f87430df22c431bd1cda5c2fa821cb/src/main/java/com/cryptomorin/xseries/section/XConfigurationSection.java",
    "raw_url": "https://github.com/CryptoMorin/XSeries/raw/49b8537b80f87430df22c431bd1cda5c2fa821cb/src/main/java/com/cryptomorin/xseries/section/XConfigurationSection.java",
    "contents_url": "https://api.github.com/repos/CryptoMorin/XSeries/contents/src/main/java/com/cryptomorin/xseries/section/XConfigurationSection.java?ref=49b8537b80f87430df22c431bd1cda5c2fa821cb",
    "patch": "@@ -0,0 +1,139 @@\n+package com.cryptomorin.xseries.section;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+import java.util.List;\n+import java.util.Set;\n+\n+/**\n+ * An interface to wrap Bukkit's configuration section.\n+ */\n+public interface XConfigurationSection {\n+    /**\n+     * Gets a set containing all keys in this section.\n+     *\n+     * @param deep Whether or not to get a deep list, as opposed to a shallow\n+     *             list.\n+     * @return Set of keys contained within this ConfigurationSection.\n+     */\n+    @Nonnull\n+    Set<String> getKeys(boolean deep);\n+\n+    /**\n+     * Checks if this {@link XConfigurationSection} contains the given path.\n+     *\n+     * @param path Path to check for existence.\n+     * @return True if this section contains the requested path, either via\n+     * default or being set.\n+     * @throws IllegalArgumentException Thrown when path is null.\n+     */\n+    boolean contains(@Nonnull String path);\n+\n+    /**\n+     * Checks if this {@link XConfigurationSection} has a value set for the\n+     * given path.\n+     *\n+     * @param path Path to check for existence.\n+     * @return True if this section contains the requested path, regardless of\n+     * having a default.\n+     * @throws IllegalArgumentException Thrown when path is null.\n+     */\n+    boolean isSet(@Nonnull String path);\n+\n+    /**\n+     * Sets the specified path to the given value.\n+     *\n+     * @param path  Path of the object to set.\n+     * @param value New value to set the path to.\n+     */\n+    void set(@Nonnull String path, @Nullable Object value);\n+\n+    /**\n+     * Creates an empty {@link XConfigurationSection} at the specified path.\n+     *\n+     * @param path Path to create the section at.\n+     * @return Newly created section\n+     */\n+    @Nonnull\n+    XConfigurationSection createSection(@Nonnull String path);\n+\n+    /**\n+     * Gets the requested String by path.\n+     *\n+     * @param path Path of the String to get.\n+     * @return Requested String.\n+     */\n+    @Nullable\n+    String getString(@Nonnull String path);\n+\n+    /**\n+     * Gets the requested int by path.\n+     *\n+     * @param path Path of the int to get.\n+     * @return Requested int.\n+     */\n+    int getInt(@Nonnull String path);\n+\n+    /**\n+     * Gets the requested int by path, returning a default value if not found.\n+     *\n+     * @param path Path of the int to get.\n+     * @param def  The default value to return if the path is not found or is\n+     *             not an int.\n+     * @return Requested int.\n+     */\n+    int getInt(@Nonnull String path, int def);\n+\n+    /**\n+     * Gets the requested boolean by path.\n+     *\n+     * @param path Path of the boolean to get.\n+     * @return Requested boolean.\n+     */\n+    boolean getBoolean(@Nonnull String path);\n+\n+    /**\n+     * Gets the requested double by path.\n+     *\n+     * @param path Path of the double to get.\n+     * @return Requested double.\n+     */\n+    double getDouble(@Nonnull String path);\n+\n+    /**\n+     * Gets the requested double by path, returning a default value if not\n+     * found.\n+     *\n+     * @param path Path of the double to get.\n+     * @param def The default value to return if the path is not found or is\n+     *     not a double.\n+     * @return Requested double.\n+     */\n+    double getDouble(@Nonnull String path, double def);\n+\n+    /**\n+     * Gets the requested long by path.\n+     *\n+     * @param path Path of the long to get.\n+     * @return Requested long.\n+     */\n+    long getLong(@Nonnull String path);\n+\n+    /**\n+     * Gets the requested List of String by path.\n+     *\n+     * @param path Path of the List to get.\n+     * @return Requested List of String.\n+     */\n+    @Nonnull\n+    List<String> getStringList(@Nonnull String path);\n+\n+    /**\n+     * Gets the requested ConfigurationSection by path.\n+     *\n+     * @param path Path of the ConfigurationSection to get.\n+     * @return Requested ConfigurationSection.\n+     */\n+    @Nullable\n+    XConfigurationSection getConfigurationSection(@Nonnull String path);\n+}"
  },
  {
    "sha": "0f439414c75ef68ddb32fc11055f29e2bb0eaaf8",
    "filename": "src/main/java/com/cryptomorin/xseries/unused/BossBar.java",
    "status": "modified",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/CryptoMorin/XSeries/blob/49b8537b80f87430df22c431bd1cda5c2fa821cb/src/main/java/com/cryptomorin/xseries/unused/BossBar.java",
    "raw_url": "https://github.com/CryptoMorin/XSeries/raw/49b8537b80f87430df22c431bd1cda5c2fa821cb/src/main/java/com/cryptomorin/xseries/unused/BossBar.java",
    "contents_url": "https://api.github.com/repos/CryptoMorin/XSeries/contents/src/main/java/com/cryptomorin/xseries/unused/BossBar.java?ref=49b8537b80f87430df22c431bd1cda5c2fa821cb",
    "patch": "@@ -22,6 +22,8 @@\n package com.cryptomorin.xseries.unused;\n \n import com.cryptomorin.xseries.ReflectionUtils;\n+import com.cryptomorin.xseries.section.BukkitConfigurationSection;\n+import com.cryptomorin.xseries.section.XConfigurationSection;\n import com.google.common.base.Enums;\n import net.md_5.bungee.api.chat.BaseComponent;\n import net.md_5.bungee.api.chat.TextComponent;\n@@ -185,6 +187,10 @@ public BossBar(String title, Color color, Style style, float progress, Property.\n     }\n \n     public static BossBar fromConfig(ConfigurationSection section) {\n+        return fromConfig(new BukkitConfigurationSection(section));\n+    }\n+\n+    public static BossBar fromConfig(XConfigurationSection section) {\n         return new BossBar(ChatColor.translateAlternateColorCodes('&', section.getString(\"message\")),\n                 Enums.getIfPresent(Color.class, section.getString(\"color\")).or(Color.PURPLE),\n                 Enums.getIfPresent(Style.class, section.getString(\"style\")).or(Style.PROGRESS),"
  }
]
