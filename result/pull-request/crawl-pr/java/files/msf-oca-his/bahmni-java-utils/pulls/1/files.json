[
  {
    "sha": "22a64dee5d73b9afab051fec1727776ea72e48d6",
    "filename": "bahmni-migrator/src/main/java/org/bahmni/csv/CSVFile.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/msf-oca-his/bahmni-java-utils/blob/28a146e4fb0fa1ce3f2fb78f702aae54cf30998c/bahmni-migrator/src/main/java/org/bahmni/csv/CSVFile.java",
    "raw_url": "https://github.com/msf-oca-his/bahmni-java-utils/raw/28a146e4fb0fa1ce3f2fb78f702aae54cf30998c/bahmni-migrator/src/main/java/org/bahmni/csv/CSVFile.java",
    "contents_url": "https://api.github.com/repos/msf-oca-his/bahmni-java-utils/contents/bahmni-migrator/src/main/java/org/bahmni/csv/CSVFile.java?ref=28a146e4fb0fa1ce3f2fb78f702aae54cf30998c",
    "patch": "@@ -45,7 +45,7 @@ public void openForRead() throws IOException {\n             throw new MigrationException(\"Input CSV file does not exist. File - \" + file.getAbsolutePath());\n \n         InputStream inputStream = new FileInputStream(file);\n-        csvReader = new CSVReader(new InputStreamReader(inputStream, StandardCharsets.UTF_8.name()), ',', '\\\"', '\\u0000');\n+        csvReader = new CSVReader(new InputStreamReader(inputStream, StandardCharsets.UTF_8.name()), ',', '\\\"', '\\\\');\n         headerNames = csvReader.readNext();\n     }\n "
  },
  {
    "sha": "efff1e37eb45c1cdb2e603c9207ced2fbfcd0c50",
    "filename": "form2-utils/src/main/java/org/bahmni/form2/model/ControlProperties.java",
    "status": "modified",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/msf-oca-his/bahmni-java-utils/blob/28a146e4fb0fa1ce3f2fb78f702aae54cf30998c/form2-utils/src/main/java/org/bahmni/form2/model/ControlProperties.java",
    "raw_url": "https://github.com/msf-oca-his/bahmni-java-utils/raw/28a146e4fb0fa1ce3f2fb78f702aae54cf30998c/form2-utils/src/main/java/org/bahmni/form2/model/ControlProperties.java",
    "contents_url": "https://api.github.com/repos/msf-oca-his/bahmni-java-utils/contents/form2-utils/src/main/java/org/bahmni/form2/model/ControlProperties.java?ref=28a146e4fb0fa1ce3f2fb78f702aae54cf30998c",
    "patch": "@@ -3,6 +3,8 @@\n public class ControlProperties {\n     private boolean addMore;\n     private boolean multiSelect;\n+    private boolean mandatory;\n+    private boolean allowFutureDates;\n \n     public boolean isAddMore() {\n         return addMore;\n@@ -19,4 +21,20 @@ public boolean isMultiSelect() {\n     public void setMultiSelect(boolean multiSelect) {\n         this.multiSelect = multiSelect;\n     }\n+\n+    public boolean isMandatory() {\n+        return mandatory;\n+    }\n+\n+    public void setMandatory(boolean mandatory) {\n+        this.mandatory = mandatory;\n+    }\n+\n+    public boolean isAllowFutureDates() {\n+        return allowFutureDates;\n+    }\n+\n+    public void setAllowFutureDates(boolean allowFutureDates) {\n+        this.allowFutureDates = allowFutureDates;\n+    }\n }"
  },
  {
    "sha": "5232685a963f135126bef5577ebcf1f459f276a4",
    "filename": "form2-utils/src/main/java/org/bahmni/form2/service/FormFieldPathService.java",
    "status": "modified",
    "additions": 35,
    "deletions": 0,
    "changes": 35,
    "blob_url": "https://github.com/msf-oca-his/bahmni-java-utils/blob/28a146e4fb0fa1ce3f2fb78f702aae54cf30998c/form2-utils/src/main/java/org/bahmni/form2/service/FormFieldPathService.java",
    "raw_url": "https://github.com/msf-oca-his/bahmni-java-utils/raw/28a146e4fb0fa1ce3f2fb78f702aae54cf30998c/form2-utils/src/main/java/org/bahmni/form2/service/FormFieldPathService.java",
    "contents_url": "https://api.github.com/repos/msf-oca-his/bahmni-java-utils/contents/form2-utils/src/main/java/org/bahmni/form2/service/FormFieldPathService.java?ref=28a146e4fb0fa1ce3f2fb78f702aae54cf30998c",
    "patch": "@@ -10,4 +10,39 @@\n      * @return form field path Eg: Vitals.1/2-0\n      */\n     String getFormFieldPath(List<String> orderedControlNames);\n+\n+    /**\n+     * @param orderedControlNames Eg: Vitals, BMI, Height as list items when Height\n+     *                            control is under BMI section and form name is Vitals\n+     * @return true when obs is multi select; otherwise false\n+     */\n+    boolean isMultiSelectObs(List<String> orderedControlNames);\n+\n+    /**\n+     * @param orderedControlNames Eg: Vitals, BMI, Height as list items when Height\n+     *                            control is under BMI section and form name is Vitals\n+     * @return true when obs is mandatory; otherwise false\n+     */\n+    boolean isMandatory(List<String> orderedControlNames);\n+\n+    /**\n+     * @param orderedControlNames Eg: Vitals, BMI, Height as list items when Height\n+     *                            control is under BMI section and form name is Vitals\n+     * @return true when obs is add more; otherwise false\n+     */\n+    boolean isAddmore(List<String> orderedControlNames);\n+\n+    /**\n+     * @param orderedControlNames Eg: Vitals, BMI, Height as list items when Height\n+     *                            control is under BMI section and form name is Vitals\n+     * @return true when date obs is allowing future dates; otherwise false\n+     */\n+    boolean isAllowFutureDates(List<String> orderedControlNames);\n+\n+    /**\n+     * @param orderedControlNames Eg: Vitals, BMI, Height as list items when Height\n+     *                            control is under BMI section and form name is Vitals\n+     * @return true when CSV Header is valid; otherwise false\n+     */\n+    boolean isValidCSVHeader(List<String> orderedControlNames);\n }"
  },
  {
    "sha": "075076096e193cc5511091b898bd0cf2d280ddce",
    "filename": "form2-utils/src/main/java/org/bahmni/form2/service/impl/FormFieldPathServiceImpl.java",
    "status": "modified",
    "additions": 57,
    "deletions": 3,
    "changes": 60,
    "blob_url": "https://github.com/msf-oca-his/bahmni-java-utils/blob/28a146e4fb0fa1ce3f2fb78f702aae54cf30998c/form2-utils/src/main/java/org/bahmni/form2/service/impl/FormFieldPathServiceImpl.java",
    "raw_url": "https://github.com/msf-oca-his/bahmni-java-utils/raw/28a146e4fb0fa1ce3f2fb78f702aae54cf30998c/form2-utils/src/main/java/org/bahmni/form2/service/impl/FormFieldPathServiceImpl.java",
    "contents_url": "https://api.github.com/repos/msf-oca-his/bahmni-java-utils/contents/form2-utils/src/main/java/org/bahmni/form2/service/impl/FormFieldPathServiceImpl.java?ref=28a146e4fb0fa1ce3f2fb78f702aae54cf30998c",
    "patch": "@@ -25,6 +25,8 @@\n     private Form2Service form2Service;\n     private Form2ReaderService form2ReaderService;\n     private Map<String, Map<String, String>> formNamesToFormFieldPathMap = new HashMap<>();\n+    private Map<String, Map<String, Control>> formNamesToFormControlMap = new HashMap<>();\n+\n \n     @Autowired\n     public FormFieldPathServiceImpl(Form2Service form2Service, Form2ReaderService form2ReaderService) {\n@@ -52,21 +54,24 @@ private void initializeControlFormFieldPaths(String formName) {\n \n         final String initialFormFieldPath = initializeFormFieldPath(formName, formLatestVersion);\n         final Map<String, String> controlToFormFieldPath = new HashMap<>();\n+        final Map<String, Control> formControls = new HashMap<>();\n         formNamesToFormFieldPathMap.put(formName, controlToFormFieldPath);\n+        formNamesToFormControlMap.put(formName, formControls);\n \n         final List<String> orderedControlNames = asList(formName);\n         form2JsonMetadata.getControls().forEach(control -> {\n             initializeControlFormFieldPaths(control, orderedControlNames, initialFormFieldPath,\n-                    controlToFormFieldPath, isAddMore(control));\n+                    controlToFormFieldPath, formControls, isAddMore(control));\n         });\n     }\n \n     private void initializeControlFormFieldPaths(Control control, List<String> orderedControlNames,\n-                                                 String formFieldPath, Map<String, String> controlToFormFieldPath, Boolean isControlAddMore) {\n+                                                 String formFieldPath, Map<String, String> controlToFormFieldPath, Map<String, Control> formControls, Boolean isControlAddMore) {\n         final List<String> currentOrderedControlNames = new ArrayList<>(orderedControlNames);\n         currentOrderedControlNames.add(control.getLabel().getValue());\n         final String currentFormFieldPath = getFormFieldPath(control.getId(), formFieldPath);\n         controlToFormFieldPath.put(currentOrderedControlNames.toString(), currentFormFieldPath);\n+        formControls.put(currentOrderedControlNames.toString(), control);\n         final List<Control> controls = control.getControls();\n         if (controls != null) {\n             for(Control childControl : controls ){\n@@ -75,7 +80,7 @@ private void initializeControlFormFieldPaths(Control control, List<String> order\n                 }\n                 initializeControlFormFieldPaths(childControl, currentOrderedControlNames,\n                         isControlAddMore ? currentFormFieldPath : formFieldPath,\n-                        controlToFormFieldPath, isControlAddMore);\n+                        controlToFormFieldPath, formControls, isControlAddMore);\n             }\n         }\n     }\n@@ -96,4 +101,53 @@ private String getFormName(List<String> orderedPathToControl) {\n         return !isEmpty(orderedPathToControl) ? orderedPathToControl.get(0) : \"\";\n     }\n \n+    @Override\n+    public boolean isMultiSelectObs(List<String> orderedControlNames) {\n+        final String formName = getFormName(orderedControlNames);\n+        if (!formNamesToFormFieldPathMap.containsKey(formName)) {\n+            initializeControlFormFieldPaths(formName);\n+        }\n+        return formNamesToFormControlMap.get(formName).get(orderedControlNames.toString()).getProperties().isMultiSelect();\n+    }\n+\n+    @Override\n+    public boolean isMandatory(List<String> orderedControlNames) {\n+        final String formName = getFormName(orderedControlNames);\n+        if (!formNamesToFormFieldPathMap.containsKey(formName)) {\n+            initializeControlFormFieldPaths(formName);\n+        }\n+        return formNamesToFormControlMap.get(formName).get(orderedControlNames.toString()).getProperties().isMandatory();\n+    }\n+\n+    @Override\n+    public boolean isAddmore(List<String> orderedControlNames) {\n+        final String formName = getFormName(orderedControlNames);\n+        if (!formNamesToFormFieldPathMap.containsKey(formName)) {\n+            initializeControlFormFieldPaths(formName);\n+        }\n+        return formNamesToFormControlMap.get(formName).get(orderedControlNames.toString()).getProperties().isAddMore();\n+    }\n+\n+    @Override\n+    public boolean isAllowFutureDates(List<String> orderedControlNames) {\n+        final String formName = getFormName(orderedControlNames);\n+        if (!formNamesToFormFieldPathMap.containsKey(formName)) {\n+            initializeControlFormFieldPaths(formName);\n+        }\n+        return formNamesToFormControlMap.get(formName).get(orderedControlNames.toString()).getProperties().isAllowFutureDates();\n+    }\n+\n+    @Override\n+    public boolean isValidCSVHeader(List<String> orderedControlNames) {\n+        final String formName = getFormName(orderedControlNames);\n+        boolean isValidCSVHeader = true;\n+        if (!formNamesToFormFieldPathMap.containsKey(formName)) {\n+            initializeControlFormFieldPaths(formName);\n+        }\n+        final Control control = formNamesToFormControlMap.get(formName).get(orderedControlNames.toString());\n+        if(control == null)\n+            isValidCSVHeader = false;\n+\n+        return isValidCSVHeader;\n+    }\n }"
  },
  {
    "sha": "6e9b044c33f3ac45e68987f9e02b9d4138d4d84f",
    "filename": "form2-utils/src/test/java/org/bahmni/form2/service/FormFieldPathServiceImplTest.java",
    "status": "modified",
    "additions": 62,
    "deletions": 0,
    "changes": 62,
    "blob_url": "https://github.com/msf-oca-his/bahmni-java-utils/blob/28a146e4fb0fa1ce3f2fb78f702aae54cf30998c/form2-utils/src/test/java/org/bahmni/form2/service/FormFieldPathServiceImplTest.java",
    "raw_url": "https://github.com/msf-oca-his/bahmni-java-utils/raw/28a146e4fb0fa1ce3f2fb78f702aae54cf30998c/form2-utils/src/test/java/org/bahmni/form2/service/FormFieldPathServiceImplTest.java",
    "contents_url": "https://api.github.com/repos/msf-oca-his/bahmni-java-utils/contents/form2-utils/src/test/java/org/bahmni/form2/service/FormFieldPathServiceImplTest.java?ref=28a146e4fb0fa1ce3f2fb78f702aae54cf30998c",
    "patch": "@@ -11,6 +11,8 @@\n \n import static java.util.Arrays.asList;\n import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.assertFalse;\n import static org.mockito.Mockito.when;\n import static org.mockito.MockitoAnnotations.initMocks;\n \n@@ -191,4 +193,64 @@ public void shouldReturnFormFieldPathForObsInsideParallelSections() {\n                 \"Second Section With Add More\", \"Height (cm)\"));\n         assertEquals(\"SameLevelSection.1/4-0/6-0\", heightObsFormFieldPath);\n     }\n+\n+    @Test\n+    public void shouldReturnMultiSelectAttributeOfObsControl() {\n+\n+        when(form2Service.getFormPath(\"Form2EncountersTest\")).thenReturn(\"src/test/resources/Form2Encounters.json\");\n+        when(form2Service.getFormLatestVersion(\"Form2EncountersTest\")).thenReturn(1);\n+        final boolean isMultiSelectObs = formFieldPathService.isMultiSelectObs(asList(\"Form2EncountersTest\", \"HIV Infection History\", \"WHO Stage Conditions\"));\n+\n+        assertTrue(isMultiSelectObs);\n+    }\n+\n+    @Test\n+    public void shouldReturnMandatoryAttributeOfObsControl() {\n+\n+        when(form2Service.getFormPath(\"Form2EncountersTest\")).thenReturn(\"src/test/resources/Form2Encounters.json\");\n+        when(form2Service.getFormLatestVersion(\"Form2EncountersTest\")).thenReturn(1);\n+        final boolean isMandatoryObs = formFieldPathService.isMandatory(asList(\"Form2EncountersTest\", \"HIV Infection History\", \"WHO Stage Conditions\"));\n+\n+        assertTrue(isMandatoryObs);\n+    }\n+\n+    @Test\n+    public void shouldReturnAddmoreAttributeOfObsControl() {\n+\n+        when(form2Service.getFormPath(\"Form2EncountersTest\")).thenReturn(\"src/test/resources/Form2Encounters.json\");\n+        when(form2Service.getFormLatestVersion(\"Form2EncountersTest\")).thenReturn(1);\n+        final boolean isAddmore = formFieldPathService.isAddmore(asList(\"Form2EncountersTest\", \"HIV Infection History\", \"Source case ID\"));\n+\n+        assertTrue(isAddmore);\n+    }\n+\n+    @Test\n+    public void shouldReturnAllowFutureDateAttributeOfObsControl() {\n+\n+        when(form2Service.getFormPath(\"Form2EncountersTest\")).thenReturn(\"src/test/resources/Form2Encounters.json\");\n+        when(form2Service.getFormLatestVersion(\"Form2EncountersTest\")).thenReturn(1);\n+        final boolean isAllowFutureDates = formFieldPathService.isAllowFutureDates(asList(\"Form2EncountersTest\", \"HIV Infection History\", \"Followup, Visit Date\"));\n+\n+        assertTrue(isAllowFutureDates);\n+    }\n+\n+    @Test\n+    public void shouldReturnTrueForValidCSVHeader() {\n+\n+        when(form2Service.getFormPath(\"Form2EncountersTest\")).thenReturn(\"src/test/resources/Form2Encounters.json\");\n+        when(form2Service.getFormLatestVersion(\"Form2EncountersTest\")).thenReturn(1);\n+        final boolean isValidCSVHeader = formFieldPathService.isValidCSVHeader(asList(\"Form2EncountersTest\", \"HIV Infection History\", \"Followup, Visit Date\"));\n+\n+        assertTrue(isValidCSVHeader);\n+    }\n+\n+    @Test\n+    public void shouldReturnFalseForInvalidCSVHeader() {\n+\n+        when(form2Service.getFormPath(\"Form2EncountersTest\")).thenReturn(\"src/test/resources/Form2Encounters.json\");\n+        when(form2Service.getFormLatestVersion(\"Form2EncountersTest\")).thenReturn(1);\n+        final boolean isValidCSVHeader = formFieldPathService.isValidCSVHeader(asList(\"Form2EncountersTest\", \"HIV Infection History Invalid\", \"Followup, Visit Date\"));\n+\n+        assertFalse(isValidCSVHeader);\n+    }\n }"
  },
  {
    "sha": "d685ef1d87145f4b5a3350b3c3499985fdd78d6a",
    "filename": "form2-utils/src/test/resources/Form2Encounters.json",
    "status": "added",
    "additions": 149,
    "deletions": 0,
    "changes": 149,
    "blob_url": "https://github.com/msf-oca-his/bahmni-java-utils/blob/28a146e4fb0fa1ce3f2fb78f702aae54cf30998c/form2-utils/src/test/resources/Form2Encounters.json",
    "raw_url": "https://github.com/msf-oca-his/bahmni-java-utils/raw/28a146e4fb0fa1ce3f2fb78f702aae54cf30998c/form2-utils/src/test/resources/Form2Encounters.json",
    "contents_url": "https://api.github.com/repos/msf-oca-his/bahmni-java-utils/contents/form2-utils/src/test/resources/Form2Encounters.json?ref=28a146e4fb0fa1ce3f2fb78f702aae54cf30998c",
    "patch": "@@ -0,0 +1,149 @@\n+{\n+  \"name\": \"Form2EncountersTest\",\n+  \"id\": 36,\n+  \"uuid\": \"47a3e6b8-0d5c-44ba-82b9-1ecfe5ae0803\",\n+  \"defaultLocale\": \"en\",\n+  \"controls\": [\n+    {\n+      \"type\": \"section\",\n+      \"label\": {\n+        \"translationKey\": \"SECTION_1\",\n+        \"type\": \"label\",\n+        \"value\": \"HIV Infection History\",\n+        \"id\": \"1\"\n+      },\n+      \"properties\": {\n+        \"addMore\": false,\n+        \"location\": {\n+          \"column\": 0,\n+          \"row\": 0\n+        }\n+      },\n+      \"id\": \"1\",\n+      \"controls\": [\n+        {\n+          \"type\": \"obsControl\",\n+          \"label\": {\n+            \"translationKey\": \"WHO_STAGE_CONDITIONS_2\",\n+            \"id\": \"2\",\n+            \"units\": \"\",\n+            \"type\": \"label\",\n+            \"value\": \"WHO Stage Conditions\"\n+          },\n+          \"properties\": {\n+            \"mandatory\": true,\n+            \"notes\": false,\n+            \"addMore\": false,\n+            \"hideLabel\": false,\n+            \"controlEvent\": false,\n+            \"location\": {\n+              \"column\": 0,\n+              \"row\": 1\n+            },\n+            \"autoComplete\": false,\n+            \"multiSelect\": true,\n+            \"dropDown\": false\n+          },\n+          \"id\": \"2\",\n+          \"concept\": {\n+            \"name\": \"WHO Stage Conditions\",\n+            \"uuid\": \"c6fb0220-45d0-47b4-8390-8c43f7baabb8\",\n+            \"datatype\": \"Coded\",\n+            \"conceptClass\": \"Misc\",\n+            \"conceptHandler\": null,\n+            \"answers\": [\n+              {\n+                \"uuid\": \"a36e5810-d096-42e3-a96e-795da3a1d052\",\n+                \"name\": {\n+                  \"display\": \"Asymptomatic\",\n+                  \"uuid\": \"4f1a0c32-f4ce-421d-bf32-d5d174b27274\",\n+                  \"name\": \"Asymptomatic\",\n+                  \"locale\": \"en\"\n+                },\n+                \"translationKey\": \"ASYMPTOMATIC_2\"\n+              },\n+              {\n+                \"uuid\": \"0b6c0cfb-141e-4ae2-a9de-384723ba158c\",\n+                \"name\": {\n+                  \"display\": \"Herpes Zoster\",\n+                  \"uuid\": \"62097855-a54e-4b50-8dea-69085f10815c\",\n+                  \"name\": \"Herpes Zoster\"\n+                },\n+                \"translationKey\": \"HERPES_2\"\n+              }\n+            ]\n+          }\n+        },\n+        {\n+          \"type\": \"obsControl\",\n+          \"label\": {\n+            \"translationKey\": \"SOURCE_CASE_ID_6\",\n+            \"id\": \"3\",\n+            \"units\": \"\",\n+            \"type\": \"label\",\n+            \"value\": \"Source case ID\"\n+          },\n+          \"properties\": {\n+            \"mandatory\": false,\n+            \"notes\": false,\n+            \"addMore\": true,\n+            \"hideLabel\": false,\n+            \"controlEvent\": false,\n+            \"location\": {\n+              \"column\": 0,\n+              \"row\": 2\n+            }\n+          },\n+          \"id\": \"3\",\n+          \"concept\": {\n+            \"name\": \"source case ID\",\n+            \"uuid\": \"740970ca-3f40-4ce4-b7ae-ddbd6b554bba\",\n+            \"datatype\": \"Text\",\n+            \"conceptClass\": \"Misc\",\n+            \"conceptHandler\": null,\n+            \"answers\": [],\n+            \"properties\": {\n+              \"allowDecimal\": null\n+            }\n+          }\n+        },\n+        {\n+          \"type\": \"obsControl\",\n+          \"label\": {\n+            \"translationKey\": \"FOLLOWUP,_VISIT_DATE_4\",\n+            \"id\": \"4\",\n+            \"units\": \"\",\n+            \"type\": \"label\",\n+            \"value\": \"Followup, Visit Date\"\n+          },\n+          \"properties\": {\n+            \"mandatory\": false,\n+            \"notes\": false,\n+            \"addMore\": false,\n+            \"hideLabel\": false,\n+            \"controlEvent\": false,\n+            \"location\": {\n+              \"column\": 0,\n+              \"row\": 4\n+            },\n+            \"allowFutureDates\": true\n+          },\n+          \"id\": \"4\",\n+          \"concept\": {\n+            \"name\": \"Followup, Visit Date\",\n+            \"uuid\": \"c5abb504-588d-4b18-b572-3bf92b207a06\",\n+            \"datatype\": \"Date\",\n+            \"conceptClass\": \"Misc\",\n+            \"conceptHandler\": null,\n+            \"answers\": [],\n+            \"properties\": {\n+              \"allowDecimal\": null\n+            }\n+          }\n+        }\n+      ]\n+    }\n+  ],\n+  \"events\": {},\n+  \"translationsUrl\": \"/openmrs/ws/rest/v1/bahmniie/form/translations\"\n+}"
  }
]
