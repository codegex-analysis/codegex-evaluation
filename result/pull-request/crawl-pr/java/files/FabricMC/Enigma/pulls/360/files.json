[
  {
    "sha": "c5f827efd9024e5479d4cb3e0fdaa3ff5725d0e1",
    "filename": "enigma-swing/src/main/java/cuchaz/enigma/gui/Gui.java",
    "status": "modified",
    "additions": 8,
    "deletions": 2,
    "changes": 10,
    "blob_url": "https://github.com/FabricMC/Enigma/blob/f043200fa3e819b9e8b1856ae79f9a71db84039e/enigma-swing/src/main/java/cuchaz/enigma/gui/Gui.java",
    "raw_url": "https://github.com/FabricMC/Enigma/raw/f043200fa3e819b9e8b1856ae79f9a71db84039e/enigma-swing/src/main/java/cuchaz/enigma/gui/Gui.java",
    "contents_url": "https://api.github.com/repos/FabricMC/Enigma/contents/enigma-swing/src/main/java/cuchaz/enigma/gui/Gui.java?ref=f043200fa3e819b9e8b1856ae79f9a71db84039e",
    "patch": "@@ -40,6 +40,10 @@\n import cuchaz.enigma.gui.elements.*;\n import cuchaz.enigma.gui.events.EditorActionListener;\n import cuchaz.enigma.gui.panels.*;\n+import cuchaz.enigma.gui.renderer.CallsTreeCellRenderer;\n+import cuchaz.enigma.gui.renderer.ImplementationsTreeCellRenderer;\n+import cuchaz.enigma.gui.renderer.InheritanceTreeCellRenderer;\n+import cuchaz.enigma.gui.renderer.MessageListCellRenderer;\n import cuchaz.enigma.gui.util.History;\n import cuchaz.enigma.gui.util.LanguageChangeListener;\n import cuchaz.enigma.gui.util.LanguageUtil;\n@@ -167,6 +171,7 @@ public Gui(EnigmaProfile profile) {\n \t\t// init inheritance panel\n \t\tinheritanceTree = new JTree();\n \t\tinheritanceTree.setModel(null);\n+\t\tinheritanceTree.setCellRenderer(new InheritanceTreeCellRenderer(this));\n \t\tinheritanceTree.setShowsRootHandles(true);\n \t\tinheritanceTree.addMouseListener(new MouseAdapter() {\n \t\t\t@Override\n@@ -191,8 +196,6 @@ public void mouseClicked(MouseEvent event) {\n \t\t\t\t}\n \t\t\t}\n \t\t});\n-\t\tTreeCellRenderer cellRenderer = inheritanceTree.getCellRenderer();\n-\t\tinheritanceTree.setCellRenderer(new MethodTreeCellRenderer(cellRenderer));\n \n \t\tJPanel inheritancePanel = new JPanel();\n \t\tinheritancePanel.setLayout(new BorderLayout());\n@@ -201,6 +204,7 @@ public void mouseClicked(MouseEvent event) {\n \t\t// init implementations panel\n \t\timplementationsTree = new JTree();\n \t\timplementationsTree.setModel(null);\n+\t\timplementationsTree.setCellRenderer(new ImplementationsTreeCellRenderer(this));\n \t\timplementationsTree.setShowsRootHandles(true);\n \t\timplementationsTree.addMouseListener(new MouseAdapter() {\n \t\t\t@Override\n@@ -230,6 +234,7 @@ public void mouseClicked(MouseEvent event) {\n \t\t// init call panel\n \t\tcallsTree = new JTree();\n \t\tcallsTree.setModel(null);\n+\t\tcallsTree.setCellRenderer(new CallsTreeCellRenderer(this));\n \t\tcallsTree.setShowsRootHandles(true);\n \t\tcallsTree.addMouseListener(new MouseAdapter() {\n \t\t\t@SuppressWarnings(\"unchecked\")\n@@ -947,6 +952,7 @@ public void retranslateUi() {\n \t\tthis.deobfPanelPopupMenu.retranslateUi();\n \t\tthis.infoPanel.retranslateUi();\n \t\tthis.structurePanel.retranslateUi();\n+\t\tthis.editorTabPopupMenu.retranslateUi();\n \t\tthis.editors.values().forEach(EditorPanel::retranslateUi);\n \t}\n "
  },
  {
    "sha": "c2982cd06fab0eb7fb05b1b60f993111adab3242",
    "filename": "enigma-swing/src/main/java/cuchaz/enigma/gui/elements/EditorTabPopupMenu.java",
    "status": "modified",
    "additions": 14,
    "deletions": 5,
    "changes": 19,
    "blob_url": "https://github.com/FabricMC/Enigma/blob/f043200fa3e819b9e8b1856ae79f9a71db84039e/enigma-swing/src/main/java/cuchaz/enigma/gui/elements/EditorTabPopupMenu.java",
    "raw_url": "https://github.com/FabricMC/Enigma/raw/f043200fa3e819b9e8b1856ae79f9a71db84039e/enigma-swing/src/main/java/cuchaz/enigma/gui/elements/EditorTabPopupMenu.java",
    "contents_url": "https://api.github.com/repos/FabricMC/Enigma/contents/enigma-swing/src/main/java/cuchaz/enigma/gui/elements/EditorTabPopupMenu.java?ref=f043200fa3e819b9e8b1856ae79f9a71db84039e",
    "patch": "@@ -28,31 +28,40 @@ public EditorTabPopupMenu(Gui gui) {\n \n \t\tthis.ui = new JPopupMenu();\n \n-\t\tthis.close = new JMenuItem(I18n.translate(\"popup_menu.editor_tab.close\"));\n+\t\tthis.close = new JMenuItem();\n \t\tthis.close.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_4, KeyEvent.CTRL_DOWN_MASK));\n \t\tthis.close.addActionListener(a -> gui.closeEditor(editor));\n \t\tthis.ui.add(this.close);\n \n-\t\tthis.closeAll = new JMenuItem(I18n.translate(\"popup_menu.editor_tab.close_all\"));\n+\t\tthis.closeAll = new JMenuItem();\n \t\tthis.closeAll.addActionListener(a -> gui.closeAllEditorTabs());\n \t\tthis.ui.add(this.closeAll);\n \n-\t\tthis.closeOthers = new JMenuItem(I18n.translate(\"popup_menu.editor_tab.close_others\"));\n+\t\tthis.closeOthers = new JMenuItem();\n \t\tthis.closeOthers.addActionListener(a -> gui.closeTabsExcept(editor));\n \t\tthis.ui.add(this.closeOthers);\n \n-\t\tthis.closeLeft = new JMenuItem(I18n.translate(\"popup_menu.editor_tab.close_left\"));\n+\t\tthis.closeLeft = new JMenuItem();\n \t\tthis.closeLeft.addActionListener(a -> gui.closeTabsLeftOf(editor));\n \t\tthis.ui.add(this.closeLeft);\n \n-\t\tthis.closeRight = new JMenuItem(I18n.translate(\"popup_menu.editor_tab.close_right\"));\n+\t\tthis.closeRight = new JMenuItem();\n \t\tthis.closeRight.addActionListener(a -> gui.closeTabsRightOf(editor));\n \t\tthis.ui.add(this.closeRight);\n+\n+\t\tthis.retranslateUi();\n \t}\n \n \tpublic void show(Component invoker, int x, int y, EditorPanel editorPanel) {\n \t\tthis.editor = editorPanel;\n \t\tui.show(invoker, x, y);\n \t}\n \n+\tpublic void retranslateUi() {\n+\t\tthis.close.setText(I18n.translate(\"popup_menu.editor_tab.close\"));\n+\t\tthis.closeAll.setText(I18n.translate(\"popup_menu.editor_tab.close_all\"));\n+\t\tthis.closeOthers.setText(I18n.translate(\"popup_menu.editor_tab.close_others\"));\n+\t\tthis.closeLeft.setText(I18n.translate(\"popup_menu.editor_tab.close_left\"));\n+\t\tthis.closeRight.setText(I18n.translate(\"popup_menu.editor_tab.close_right\"));\n+\t}\n }"
  },
  {
    "sha": "6078145f1af2da4abb9e33caf22d88bd5931ff68",
    "filename": "enigma-swing/src/main/java/cuchaz/enigma/gui/panels/StructurePanel.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/FabricMC/Enigma/blob/f043200fa3e819b9e8b1856ae79f9a71db84039e/enigma-swing/src/main/java/cuchaz/enigma/gui/panels/StructurePanel.java",
    "raw_url": "https://github.com/FabricMC/Enigma/raw/f043200fa3e819b9e8b1856ae79f9a71db84039e/enigma-swing/src/main/java/cuchaz/enigma/gui/panels/StructurePanel.java",
    "contents_url": "https://api.github.com/repos/FabricMC/Enigma/contents/enigma-swing/src/main/java/cuchaz/enigma/gui/panels/StructurePanel.java?ref=f043200fa3e819b9e8b1856ae79f9a71db84039e",
    "patch": "@@ -84,13 +84,13 @@ public void retranslateUi() {\n \n         @Override\n         public Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) {\n-            JComponent c = (JComponent) super.getTreeCellRendererComponent(tree, value, selected, expanded, leaf, row, hasFocus);\n-            ParentedEntry entry = ((StructureTreeNode) value).getEntry();\n+            Component c = super.getTreeCellRendererComponent(tree, value, selected, expanded, leaf, row, hasFocus);\n+            ParentedEntry<?> entry = ((StructureTreeNode) value).getEntry();\n \n             if (entry instanceof ClassEntry) {\n                 this.setIcon(GuiUtil.getClassIcon(gui, (ClassEntry) entry));\n             } else if (entry instanceof MethodEntry) {\n-                this.setIcon(((MethodEntry) entry).isConstructor() ? GuiUtil.CONSTRUCTOR_ICON : GuiUtil.METHOD_ICON);\n+                this.setIcon(GuiUtil.getMethodIcon((MethodEntry) entry));\n             } else if (entry instanceof FieldEntry) {\n                 this.setIcon(GuiUtil.FIELD_ICON);\n             }"
  },
  {
    "sha": "d5cfdab89032a71b3d980cfbb089464474c03a56",
    "filename": "enigma-swing/src/main/java/cuchaz/enigma/gui/renderer/CallsTreeCellRenderer.java",
    "status": "added",
    "additions": 45,
    "deletions": 0,
    "changes": 45,
    "blob_url": "https://github.com/FabricMC/Enigma/blob/f043200fa3e819b9e8b1856ae79f9a71db84039e/enigma-swing/src/main/java/cuchaz/enigma/gui/renderer/CallsTreeCellRenderer.java",
    "raw_url": "https://github.com/FabricMC/Enigma/raw/f043200fa3e819b9e8b1856ae79f9a71db84039e/enigma-swing/src/main/java/cuchaz/enigma/gui/renderer/CallsTreeCellRenderer.java",
    "contents_url": "https://api.github.com/repos/FabricMC/Enigma/contents/enigma-swing/src/main/java/cuchaz/enigma/gui/renderer/CallsTreeCellRenderer.java?ref=f043200fa3e819b9e8b1856ae79f9a71db84039e",
    "patch": "@@ -0,0 +1,45 @@\n+package cuchaz.enigma.gui.renderer;\n+\n+import cuchaz.enigma.analysis.*;\n+import cuchaz.enigma.gui.Gui;\n+import cuchaz.enigma.gui.config.UiConfig;\n+import cuchaz.enigma.gui.util.GuiUtil;\n+import cuchaz.enigma.translation.representation.entry.MethodEntry;\n+\n+import javax.swing.*;\n+import javax.swing.tree.DefaultTreeCellRenderer;\n+import java.awt.*;\n+\n+public class CallsTreeCellRenderer extends DefaultTreeCellRenderer {\n+    private final Gui gui;\n+\n+    public CallsTreeCellRenderer(Gui gui) {\n+        this.gui = gui;\n+    }\n+\n+    @Override\n+    public Component getTreeCellRendererComponent(JTree tree, Object value, boolean sel, boolean expanded, boolean leaf, int row, boolean hasFocus) {\n+        Component c = super.getTreeCellRendererComponent(tree, value, sel, expanded, leaf, row, hasFocus);\n+        EntryReference<?, ?> reference = ((ReferenceTreeNode<?, ?>) value).getReference();\n+\n+        this.setForeground(UiConfig.getTextColor());\n+\n+        // if the node represents the method calling the entry\n+        if (reference != null) {\n+            if (reference.context instanceof MethodEntry) {\n+                this.setIcon(GuiUtil.getMethodIcon((MethodEntry) reference.context));\n+            }\n+        // if the node represents the called entry\n+        } else {\n+            if (value instanceof ClassReferenceTreeNode) {\n+                this.setIcon(GuiUtil.getClassIcon(this.gui, ((ClassReferenceTreeNode) value).getEntry()));\n+            } else if (value instanceof MethodReferenceTreeNode) {\n+                this.setIcon(GuiUtil.getMethodIcon(((MethodReferenceTreeNode) value).getEntry()));\n+            } else if (value instanceof FieldReferenceTreeNode) {\n+                this.setIcon(GuiUtil.FIELD_ICON);\n+            }\n+        }\n+\n+        return c;\n+    }\n+}"
  },
  {
    "sha": "2eb7efc45e541e85bab3928abf521ffdcb35fc5b",
    "filename": "enigma-swing/src/main/java/cuchaz/enigma/gui/renderer/ImplementationsTreeCellRenderer.java",
    "status": "added",
    "additions": 34,
    "deletions": 0,
    "changes": 34,
    "blob_url": "https://github.com/FabricMC/Enigma/blob/f043200fa3e819b9e8b1856ae79f9a71db84039e/enigma-swing/src/main/java/cuchaz/enigma/gui/renderer/ImplementationsTreeCellRenderer.java",
    "raw_url": "https://github.com/FabricMC/Enigma/raw/f043200fa3e819b9e8b1856ae79f9a71db84039e/enigma-swing/src/main/java/cuchaz/enigma/gui/renderer/ImplementationsTreeCellRenderer.java",
    "contents_url": "https://api.github.com/repos/FabricMC/Enigma/contents/enigma-swing/src/main/java/cuchaz/enigma/gui/renderer/ImplementationsTreeCellRenderer.java?ref=f043200fa3e819b9e8b1856ae79f9a71db84039e",
    "patch": "@@ -0,0 +1,34 @@\n+package cuchaz.enigma.gui.renderer;\n+\n+import cuchaz.enigma.analysis.ClassImplementationsTreeNode;\n+import cuchaz.enigma.analysis.MethodImplementationsTreeNode;\n+import cuchaz.enigma.gui.Gui;\n+import cuchaz.enigma.gui.config.UiConfig;\n+import cuchaz.enigma.gui.util.GuiUtil;\n+\n+import javax.swing.*;\n+import javax.swing.tree.DefaultTreeCellRenderer;\n+import java.awt.*;\n+\n+public class ImplementationsTreeCellRenderer extends DefaultTreeCellRenderer {\n+    private final Gui gui;\n+\n+    public ImplementationsTreeCellRenderer(Gui gui) {\n+        this.gui = gui;\n+    }\n+\n+    @Override\n+    public Component getTreeCellRendererComponent(JTree tree, Object value, boolean sel, boolean expanded, boolean leaf, int row, boolean hasFocus) {\n+        Component c = super.getTreeCellRendererComponent(tree, value, sel, expanded, leaf, row, hasFocus);\n+\n+        this.setForeground(UiConfig.getTextColor());\n+\n+        if (value instanceof ClassImplementationsTreeNode) {\n+            this.setIcon(GuiUtil.getClassIcon(this.gui, ((ClassImplementationsTreeNode) value).getClassEntry()));\n+        } else if (value instanceof MethodImplementationsTreeNode) {\n+            this.setIcon(GuiUtil.getMethodIcon(((MethodImplementationsTreeNode) value).getMethodEntry()));\n+        }\n+\n+        return c;\n+    }\n+}"
  },
  {
    "sha": "e377b9a3412421e8d4db77be531259482f539304",
    "filename": "enigma-swing/src/main/java/cuchaz/enigma/gui/renderer/InheritanceTreeCellRenderer.java",
    "status": "renamed",
    "additions": 18,
    "deletions": 8,
    "changes": 26,
    "blob_url": "https://github.com/FabricMC/Enigma/blob/f043200fa3e819b9e8b1856ae79f9a71db84039e/enigma-swing/src/main/java/cuchaz/enigma/gui/renderer/InheritanceTreeCellRenderer.java",
    "raw_url": "https://github.com/FabricMC/Enigma/raw/f043200fa3e819b9e8b1856ae79f9a71db84039e/enigma-swing/src/main/java/cuchaz/enigma/gui/renderer/InheritanceTreeCellRenderer.java",
    "contents_url": "https://api.github.com/repos/FabricMC/Enigma/contents/enigma-swing/src/main/java/cuchaz/enigma/gui/renderer/InheritanceTreeCellRenderer.java?ref=f043200fa3e819b9e8b1856ae79f9a71db84039e",
    "patch": "@@ -9,35 +9,45 @@\n  * Jeff Martin - initial API and implementation\n  ******************************************************************************/\n \n-package cuchaz.enigma.gui;\n+package cuchaz.enigma.gui.renderer;\n \n import java.awt.Component;\n import java.awt.Font;\n \n import javax.swing.JTree;\n-import javax.swing.tree.TreeCellRenderer;\n+import javax.swing.tree.DefaultTreeCellRenderer;\n \n+import cuchaz.enigma.analysis.ClassInheritanceTreeNode;\n import cuchaz.enigma.analysis.MethodInheritanceTreeNode;\n+import cuchaz.enigma.gui.Gui;\n import cuchaz.enigma.gui.config.UiConfig;\n+import cuchaz.enigma.gui.util.GuiUtil;\n \n-class MethodTreeCellRenderer implements TreeCellRenderer {\n+public class InheritanceTreeCellRenderer extends DefaultTreeCellRenderer {\n+\tprivate final Gui gui;\n \n-\tprivate final TreeCellRenderer parent;\n-\n-\tMethodTreeCellRenderer(TreeCellRenderer parent) {\n-\t\tthis.parent = parent;\n+\tpublic InheritanceTreeCellRenderer(Gui gui) {\n+\t\tthis.gui = gui;\n \t}\n \n \t@Override\n \tpublic Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) {\n-\t\tComponent ret = parent.getTreeCellRendererComponent(tree, value, selected, expanded, leaf, row, hasFocus);\n+\t\tComponent ret = super.getTreeCellRendererComponent(tree, value, selected, expanded, leaf, row, hasFocus);\n+\n \t\tif (!(value instanceof MethodInheritanceTreeNode) || ((MethodInheritanceTreeNode) value).isImplemented()) {\n \t\t\tret.setForeground(UiConfig.getTextColor());\n \t\t\tret.setFont(ret.getFont().deriveFont(Font.PLAIN));\n+\t\t\tif (value instanceof ClassInheritanceTreeNode) {\n+\t\t\t\tthis.setIcon(GuiUtil.getClassIcon(this.gui, ((ClassInheritanceTreeNode) value).getClassEntry()));\n+\t\t\t} else if (value instanceof MethodInheritanceTreeNode) {\n+\t\t\t\tthis.setIcon(GuiUtil.getMethodIcon(((MethodInheritanceTreeNode) value).getMethodEntry()));\n+\t\t\t}\n \t\t} else {\n \t\t\tret.setForeground(UiConfig.getNumberColor());\n \t\t\tret.setFont(ret.getFont().deriveFont(Font.ITALIC));\n+\t\t\tthis.setIcon(GuiUtil.CLASS_ICON);\n \t\t}\n+\n \t\treturn ret;\n \t}\n }",
    "previous_filename": "enigma-swing/src/main/java/cuchaz/enigma/gui/MethodTreeCellRenderer.java"
  },
  {
    "sha": "b6ae0c50126798a2d49cea0b04657906ab92a0f2",
    "filename": "enigma-swing/src/main/java/cuchaz/enigma/gui/renderer/MessageListCellRenderer.java",
    "status": "renamed",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/FabricMC/Enigma/blob/f043200fa3e819b9e8b1856ae79f9a71db84039e/enigma-swing/src/main/java/cuchaz/enigma/gui/renderer/MessageListCellRenderer.java",
    "raw_url": "https://github.com/FabricMC/Enigma/raw/f043200fa3e819b9e8b1856ae79f9a71db84039e/enigma-swing/src/main/java/cuchaz/enigma/gui/renderer/MessageListCellRenderer.java",
    "contents_url": "https://api.github.com/repos/FabricMC/Enigma/contents/enigma-swing/src/main/java/cuchaz/enigma/gui/renderer/MessageListCellRenderer.java?ref=f043200fa3e819b9e8b1856ae79f9a71db84039e",
    "patch": "@@ -1,4 +1,4 @@\n-package cuchaz.enigma.gui;\n+package cuchaz.enigma.gui.renderer;\n \n import java.awt.Component;\n ",
    "previous_filename": "enigma-swing/src/main/java/cuchaz/enigma/gui/MessageListCellRenderer.java"
  },
  {
    "sha": "1a86148de2e7b2425824df37c881e7bb77d41b04",
    "filename": "enigma-swing/src/main/java/cuchaz/enigma/gui/util/GuiUtil.java",
    "status": "modified",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/FabricMC/Enigma/blob/f043200fa3e819b9e8b1856ae79f9a71db84039e/enigma-swing/src/main/java/cuchaz/enigma/gui/util/GuiUtil.java",
    "raw_url": "https://github.com/FabricMC/Enigma/raw/f043200fa3e819b9e8b1856ae79f9a71db84039e/enigma-swing/src/main/java/cuchaz/enigma/gui/util/GuiUtil.java",
    "contents_url": "https://api.github.com/repos/FabricMC/Enigma/contents/enigma-swing/src/main/java/cuchaz/enigma/gui/util/GuiUtil.java?ref=f043200fa3e819b9e8b1856ae79f9a71db84039e",
    "patch": "@@ -3,6 +3,7 @@\n import cuchaz.enigma.gui.Gui;\n import cuchaz.enigma.translation.representation.AccessFlags;\n import cuchaz.enigma.translation.representation.entry.ClassEntry;\n+import cuchaz.enigma.translation.representation.entry.MethodEntry;\n import cuchaz.enigma.utils.Os;\n \n import javax.imageio.ImageIO;\n@@ -106,4 +107,11 @@ public static Icon getClassIcon(Gui gui, ClassEntry entry) {\n \n         return CLASS_ICON;\n     }\n+\n+    public static Icon getMethodIcon(MethodEntry entry) {\n+        if (entry.isConstructor()) {\n+            return CONSTRUCTOR_ICON;\n+        }\n+        return METHOD_ICON;\n+    }\n }"
  },
  {
    "sha": "788c534798e2ed346ed307a5a414dcf56e6fe721",
    "filename": "enigma/src/main/java/cuchaz/enigma/analysis/ClassInheritanceTreeNode.java",
    "status": "modified",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/FabricMC/Enigma/blob/f043200fa3e819b9e8b1856ae79f9a71db84039e/enigma/src/main/java/cuchaz/enigma/analysis/ClassInheritanceTreeNode.java",
    "raw_url": "https://github.com/FabricMC/Enigma/raw/f043200fa3e819b9e8b1856ae79f9a71db84039e/enigma/src/main/java/cuchaz/enigma/analysis/ClassInheritanceTreeNode.java",
    "contents_url": "https://api.github.com/repos/FabricMC/Enigma/contents/enigma/src/main/java/cuchaz/enigma/analysis/ClassInheritanceTreeNode.java?ref=f043200fa3e819b9e8b1856ae79f9a71db84039e",
    "patch": "@@ -44,6 +44,13 @@ public static ClassInheritanceTreeNode findNode(ClassInheritanceTreeNode node, C\n \t\treturn null;\n \t}\n \n+\t/**\n+\t * Returns the class entry represented by this tree node.\n+\t */\n+\tpublic ClassEntry getClassEntry() {\n+\t\treturn this.obfClassEntry;\n+\t}\n+\n \tpublic String getObfClassName() {\n \t\treturn this.obfClassEntry.getFullName();\n \t}"
  },
  {
    "sha": "7bee4dc787c68a9d422a74f4ca84b1346de188c8",
    "filename": "enigma/src/main/java/cuchaz/enigma/analysis/MethodInheritanceTreeNode.java",
    "status": "modified",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/FabricMC/Enigma/blob/f043200fa3e819b9e8b1856ae79f9a71db84039e/enigma/src/main/java/cuchaz/enigma/analysis/MethodInheritanceTreeNode.java",
    "raw_url": "https://github.com/FabricMC/Enigma/raw/f043200fa3e819b9e8b1856ae79f9a71db84039e/enigma/src/main/java/cuchaz/enigma/analysis/MethodInheritanceTreeNode.java",
    "contents_url": "https://api.github.com/repos/FabricMC/Enigma/contents/enigma/src/main/java/cuchaz/enigma/analysis/MethodInheritanceTreeNode.java?ref=f043200fa3e819b9e8b1856ae79f9a71db84039e",
    "patch": "@@ -48,6 +48,9 @@ public static MethodInheritanceTreeNode findNode(MethodInheritanceTreeNode node,\n \t\treturn null;\n \t}\n \n+\t/**\n+\t * Returns the method entry represented by this tree node.\n+\t */\n \tpublic MethodEntry getMethodEntry() {\n \t\treturn this.entry;\n \t}"
  },
  {
    "sha": "ce23cb6d1b5a212fe93d332410a346ea999d8120",
    "filename": "enigma/src/main/java/cuchaz/enigma/analysis/ReferenceTreeNode.java",
    "status": "modified",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/FabricMC/Enigma/blob/f043200fa3e819b9e8b1856ae79f9a71db84039e/enigma/src/main/java/cuchaz/enigma/analysis/ReferenceTreeNode.java",
    "raw_url": "https://github.com/FabricMC/Enigma/raw/f043200fa3e819b9e8b1856ae79f9a71db84039e/enigma/src/main/java/cuchaz/enigma/analysis/ReferenceTreeNode.java",
    "contents_url": "https://api.github.com/repos/FabricMC/Enigma/contents/enigma/src/main/java/cuchaz/enigma/analysis/ReferenceTreeNode.java?ref=f043200fa3e819b9e8b1856ae79f9a71db84039e",
    "patch": "@@ -14,6 +14,9 @@\n import cuchaz.enigma.translation.representation.entry.Entry;\n \n public interface ReferenceTreeNode<E extends Entry<?>, C extends Entry<?>> {\n+\t/**\n+\t * Returns the entry represented by this tree node.\n+\t */\n \tE getEntry();\n \n \tEntryReference<E, C> getReference();"
  },
  {
    "sha": "55d75cf35796ac1fa4ffcbdc433946331bc0cfd6",
    "filename": "enigma/src/main/java/cuchaz/enigma/analysis/StructureTreeNode.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/FabricMC/Enigma/blob/f043200fa3e819b9e8b1856ae79f9a71db84039e/enigma/src/main/java/cuchaz/enigma/analysis/StructureTreeNode.java",
    "raw_url": "https://github.com/FabricMC/Enigma/raw/f043200fa3e819b9e8b1856ae79f9a71db84039e/enigma/src/main/java/cuchaz/enigma/analysis/StructureTreeNode.java",
    "contents_url": "https://api.github.com/repos/FabricMC/Enigma/contents/enigma/src/main/java/cuchaz/enigma/analysis/StructureTreeNode.java?ref=f043200fa3e819b9e8b1856ae79f9a71db84039e",
    "patch": "@@ -26,7 +26,7 @@ public StructureTreeNode(EnigmaProject project, ClassEntry parentEntry, Parented\n     }\n \n     /**\n-     * Returns the parented entry corresponding to this tree node.\n+     * Returns the parented entry represented by this tree node.\n      */\n     public ParentedEntry getEntry() {\n         return this.entry;"
  }
]
