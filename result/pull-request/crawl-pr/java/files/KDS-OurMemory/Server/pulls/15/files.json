[
  {
    "sha": "53c9c9e9b849334c164e99a834d040b0c58b937b",
    "filename": "OurMemory_Server/src/main/java/com/kds/ourmemory/advice/ErrorResponse.java",
    "status": "removed",
    "additions": 0,
    "deletions": 11,
    "changes": 11,
    "blob_url": "https://github.com/KDS-OurMemory/Server/blob/b9f84853256b179b5f8e654a7d9f0b3ef4796e93/OurMemory_Server/src/main/java/com/kds/ourmemory/advice/ErrorResponse.java",
    "raw_url": "https://github.com/KDS-OurMemory/Server/raw/b9f84853256b179b5f8e654a7d9f0b3ef4796e93/OurMemory_Server/src/main/java/com/kds/ourmemory/advice/ErrorResponse.java",
    "contents_url": "https://api.github.com/repos/KDS-OurMemory/Server/contents/OurMemory_Server/src/main/java/com/kds/ourmemory/advice/ErrorResponse.java?ref=b9f84853256b179b5f8e654a7d9f0b3ef4796e93",
    "patch": "@@ -1,11 +0,0 @@\n-package com.kds.ourmemory.advice;\n-\n-import lombok.AllArgsConstructor;\n-import lombok.Getter;\n-\n-@Getter\n-@AllArgsConstructor\n-public class ErrorResponse {\n-\tprivate int status;\n-\tprivate String message;\n-}"
  },
  {
    "sha": "496631e0a35cc0b6a264c4a99e021b64560bc93e",
    "filename": "OurMemory_Server/src/main/java/com/kds/ourmemory/controller/v1/ApiResult.java",
    "status": "modified",
    "additions": 4,
    "deletions": 8,
    "changes": 12,
    "blob_url": "https://github.com/KDS-OurMemory/Server/blob/c6e74ac8c89129ae9c1d6068ea22ccdf6a378431/OurMemory_Server/src/main/java/com/kds/ourmemory/controller/v1/ApiResult.java",
    "raw_url": "https://github.com/KDS-OurMemory/Server/raw/c6e74ac8c89129ae9c1d6068ea22ccdf6a378431/OurMemory_Server/src/main/java/com/kds/ourmemory/controller/v1/ApiResult.java",
    "contents_url": "https://api.github.com/repos/KDS-OurMemory/Server/contents/OurMemory_Server/src/main/java/com/kds/ourmemory/controller/v1/ApiResult.java?ref=c6e74ac8c89129ae9c1d6068ea22ccdf6a378431",
    "patch": "@@ -10,21 +10,17 @@\n @Getter\n @ToString\n public class ApiResult<T> {\n-\n-    @ApiModelProperty(value = \"API 요청 처리 결과\", required = true)\n-    private final boolean success;\n-\n-    @ApiModelProperty(value = \"API 요청 처리 오류 코드\")\n-    private final String errorCode;\n+    @ApiModelProperty(value = \"API 요청 처리 결과 코드\", example = \"0: 성공, 그 외: 오류 코드\")\n+    private final String resultCode;\n     \n     @ApiModelProperty(value = \"API 요청 처리 응답 값\")\n     private final T data;\n \n     public static <T> ApiResult<T> ok(T data) {\n-        return new ApiResult<>(true, \"0\", data);\n+        return new ApiResult<>(\"0\", data);\n     }\n \n     public static ApiResult<String> error(String errorCode, String errorMessage) {\n-        return new ApiResult<>(false, errorCode, errorMessage);\n+        return new ApiResult<>(errorCode, errorMessage);\n     }\n }"
  },
  {
    "sha": "7052238c10e28f8af048502c14f2e9730a6639ac",
    "filename": "OurMemory_Server/src/main/java/com/kds/ourmemory/controller/v1/memory/MemoryController.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/KDS-OurMemory/Server/blob/c6e74ac8c89129ae9c1d6068ea22ccdf6a378431/OurMemory_Server/src/main/java/com/kds/ourmemory/controller/v1/memory/MemoryController.java",
    "raw_url": "https://github.com/KDS-OurMemory/Server/raw/c6e74ac8c89129ae9c1d6068ea22ccdf6a378431/OurMemory_Server/src/main/java/com/kds/ourmemory/controller/v1/memory/MemoryController.java",
    "contents_url": "https://api.github.com/repos/KDS-OurMemory/Server/contents/OurMemory_Server/src/main/java/com/kds/ourmemory/controller/v1/memory/MemoryController.java?ref=c6e74ac8c89129ae9c1d6068ea22ccdf6a378431",
    "patch": "@@ -27,6 +27,6 @@\n     @ApiOperation(value=\"일정 추가\", notes = \"앱에서 전달받은 데이터로 일정 추가\")\n     @PostMapping(\"/memory\")\n     public ApiResult<MemoryResponseDto> addMemory(@RequestBody MemoryRequestDto request) {\n-        return ok(memoryService.addMemory(request.toEntity()));\n+        return ok(memoryService.addMemory(request));\n     }\n }"
  },
  {
    "sha": "d368c62d020299f9e4bf2b88b52a4c7e33b2bfe2",
    "filename": "OurMemory_Server/src/main/java/com/kds/ourmemory/controller/v1/memory/dto/MemoryRequestDto.java",
    "status": "modified",
    "additions": 2,
    "deletions": 21,
    "changes": 23,
    "blob_url": "https://github.com/KDS-OurMemory/Server/blob/c6e74ac8c89129ae9c1d6068ea22ccdf6a378431/OurMemory_Server/src/main/java/com/kds/ourmemory/controller/v1/memory/dto/MemoryRequestDto.java",
    "raw_url": "https://github.com/KDS-OurMemory/Server/raw/c6e74ac8c89129ae9c1d6068ea22ccdf6a378431/OurMemory_Server/src/main/java/com/kds/ourmemory/controller/v1/memory/dto/MemoryRequestDto.java",
    "contents_url": "https://api.github.com/repos/KDS-OurMemory/Server/contents/OurMemory_Server/src/main/java/com/kds/ourmemory/controller/v1/memory/dto/MemoryRequestDto.java?ref=c6e74ac8c89129ae9c1d6068ea22ccdf6a378431",
    "patch": "@@ -2,8 +2,6 @@\n \n import java.util.Date;\n \n-import com.kds.ourmemory.entity.memory.Memory;\n-\n import io.swagger.annotations.ApiModelProperty;\n import lombok.AllArgsConstructor;\n import lombok.Getter;\n@@ -13,8 +11,8 @@\n @AllArgsConstructor\n @NoArgsConstructor\n public class MemoryRequestDto {\n-    @ApiModelProperty(value=\"일정 작성자 번호\", required = true, example = \"49\")\n-    private Long writer;\n+    @ApiModelProperty(value=\"일정 작성자 snsId\", required = true)\n+    private String snsId;\n     \n     @ApiModelProperty(value=\"일정 이름\", required = true, example = \"회의 일정\")\n     private String name;\n@@ -39,21 +37,4 @@\n     \n     @ApiModelProperty(value=\"배경색\", required = true, example = \"#FFFFFF\")\n     private String bgColor;\n-    \n-    public Memory toEntity() {\n-        return Memory.builder()\n-                .writer(writer)\n-                .name(this.name)\n-                .contents(contents)\n-                .place(place)\n-                .startDate(startDate)\n-                .endDate(endDate)\n-                .bgColor(bgColor)\n-                .firstAlarm(firstAlarm)\n-                .secondAlarm(secondAlarm)\n-                .regDate(new Date())\n-                .modDate(null)\n-                .used(true)\n-                .build();\n-    }\n }"
  },
  {
    "sha": "f0e3e8022a13a3019d88830074a8383880663f47",
    "filename": "OurMemory_Server/src/main/java/com/kds/ourmemory/controller/v1/memory/dto/MemoryResponseDto.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/KDS-OurMemory/Server/blob/c6e74ac8c89129ae9c1d6068ea22ccdf6a378431/OurMemory_Server/src/main/java/com/kds/ourmemory/controller/v1/memory/dto/MemoryResponseDto.java",
    "raw_url": "https://github.com/KDS-OurMemory/Server/raw/c6e74ac8c89129ae9c1d6068ea22ccdf6a378431/OurMemory_Server/src/main/java/com/kds/ourmemory/controller/v1/memory/dto/MemoryResponseDto.java",
    "contents_url": "https://api.github.com/repos/KDS-OurMemory/Server/contents/OurMemory_Server/src/main/java/com/kds/ourmemory/controller/v1/memory/dto/MemoryResponseDto.java?ref=c6e74ac8c89129ae9c1d6068ea22ccdf6a378431",
    "patch": "@@ -8,5 +8,5 @@\n @AllArgsConstructor\n public class MemoryResponseDto {\n     @ApiModelProperty(value=\"일정 추가한 날짜\", example = \"20210315\")\n-    private String addTime;\n+    private String addDate;\n }"
  },
  {
    "sha": "9610a5d898a4a71b03244ab9cad3f0a21179c6df",
    "filename": "OurMemory_Server/src/main/java/com/kds/ourmemory/controller/v1/room/RoomController.java",
    "status": "modified",
    "additions": 34,
    "deletions": 8,
    "changes": 42,
    "blob_url": "https://github.com/KDS-OurMemory/Server/blob/c6e74ac8c89129ae9c1d6068ea22ccdf6a378431/OurMemory_Server/src/main/java/com/kds/ourmemory/controller/v1/room/RoomController.java",
    "raw_url": "https://github.com/KDS-OurMemory/Server/raw/c6e74ac8c89129ae9c1d6068ea22ccdf6a378431/OurMemory_Server/src/main/java/com/kds/ourmemory/controller/v1/room/RoomController.java",
    "contents_url": "https://api.github.com/repos/KDS-OurMemory/Server/contents/OurMemory_Server/src/main/java/com/kds/ourmemory/controller/v1/room/RoomController.java?ref=c6e74ac8c89129ae9c1d6068ea22ccdf6a378431",
    "patch": "@@ -2,32 +2,58 @@\n \n import static com.kds.ourmemory.controller.v1.ApiResult.ok;\n \n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import org.springframework.web.bind.annotation.DeleteMapping;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.PathVariable;\n import org.springframework.web.bind.annotation.PostMapping;\n import org.springframework.web.bind.annotation.RequestBody;\n import org.springframework.web.bind.annotation.RequestMapping;\n import org.springframework.web.bind.annotation.RestController;\n \n import com.kds.ourmemory.advice.exception.CRoomException;\n+import com.kds.ourmemory.advice.exception.CUserNotFoundException;\n import com.kds.ourmemory.controller.v1.ApiResult;\n-import com.kds.ourmemory.controller.v1.room.dto.RoomRequestDto;\n-import com.kds.ourmemory.controller.v1.room.dto.RoomResponseDto;\n+import com.kds.ourmemory.controller.v1.room.dto.DeleteResponseDto;\n+import com.kds.ourmemory.controller.v1.room.dto.FindRoomResponseDto;\n+import com.kds.ourmemory.controller.v1.room.dto.InsertRequestDto;\n+import com.kds.ourmemory.controller.v1.room.dto.InsertResponseDto;\n+import com.kds.ourmemory.entity.room.Room;\n import com.kds.ourmemory.service.v1.room.RoomService;\n \n import io.swagger.annotations.Api;\n import io.swagger.annotations.ApiOperation;\n+import io.swagger.annotations.ApiParam;\n import lombok.RequiredArgsConstructor;\n \n-@Api(tags = {\"2. Room\"})\n+@Api(tags = { \"2. Room\" })\n @RequiredArgsConstructor\n @RestController\n @RequestMapping(value = \"/v1\")\n public class RoomController {\n \n     private final RoomService roomService;\n-    \n-    @ApiOperation(value=\"방 생성\", notes = \"앱에서 전달받은 데이터로 방 생성 및 사용자 추가\")\n-    @PostMapping(value=\"/room\")\n-    public ApiResult<RoomResponseDto> createRoom(@RequestBody RoomRequestDto request) throws CRoomException {\n-        return ok(roomService.createRoom(request.toEntity(), request.getMember()));\n+\n+    @ApiOperation(value = \"방 생성\", notes = \"앱에서 전달받은 데이터로 방 생성 및 사용자 추가\")\n+    @PostMapping(value = \"/room\")\n+    public ApiResult<InsertResponseDto> insert(@RequestBody InsertRequestDto request) throws CRoomException {\n+        return ok(roomService.insert(request.toEntity(), request.getMember()));\n+    }\n+\n+    @ApiOperation(value = \"방 목록 조회\", notes = \"사용자가 참여중인 방 목록을 조회한다.\")\n+    @GetMapping(value = \"/rooms/{snsId}\")\n+    public ApiResult<List<FindRoomResponseDto>> findRooms(\n+            @ApiParam(value = \"snsId\", required = true) @PathVariable String snsId) throws CUserNotFoundException {\n+        return ok(roomService.findRooms(snsId).stream().filter(Room::isUsed).map(FindRoomResponseDto::new)\n+                .collect(Collectors.toList()));\n+    }\n+\n+    @ApiOperation(value = \"방 삭제\", notes = \"방 번호에 맞는 방을 삭제한다.\")\n+    @DeleteMapping(value = \"/room/{roomId}\")\n+    public ApiResult<DeleteResponseDto> delete(@ApiParam(value = \"roomId\", required = true) @PathVariable Long roomId)\n+            throws CRoomException {\n+        return ok(roomService.delete(roomId));\n     }\n }"
  },
  {
    "sha": "430647c74b21f02aa4ca023dcc1636da8a544eb7",
    "filename": "OurMemory_Server/src/main/java/com/kds/ourmemory/controller/v1/room/dto/DeleteResponseDto.java",
    "status": "added",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/KDS-OurMemory/Server/blob/c6e74ac8c89129ae9c1d6068ea22ccdf6a378431/OurMemory_Server/src/main/java/com/kds/ourmemory/controller/v1/room/dto/DeleteResponseDto.java",
    "raw_url": "https://github.com/KDS-OurMemory/Server/raw/c6e74ac8c89129ae9c1d6068ea22ccdf6a378431/OurMemory_Server/src/main/java/com/kds/ourmemory/controller/v1/room/dto/DeleteResponseDto.java",
    "contents_url": "https://api.github.com/repos/KDS-OurMemory/Server/contents/OurMemory_Server/src/main/java/com/kds/ourmemory/controller/v1/room/dto/DeleteResponseDto.java?ref=c6e74ac8c89129ae9c1d6068ea22ccdf6a378431",
    "patch": "@@ -0,0 +1,12 @@\n+package com.kds.ourmemory.controller.v1.room.dto;\n+\n+import lombok.Getter;\n+import io.swagger.annotations.ApiModelProperty;\n+import lombok.AllArgsConstructor;\n+\n+@Getter\n+@AllArgsConstructor\n+public class DeleteResponseDto {\n+    @ApiModelProperty(value = \"방 삭제 날짜\", example = \"20210317\")\n+    private String deleteDate;\n+}"
  },
  {
    "sha": "bf9619e2b3aab8b65068a97bdd002012861894bd",
    "filename": "OurMemory_Server/src/main/java/com/kds/ourmemory/controller/v1/room/dto/FindRoomResponseDto.java",
    "status": "added",
    "additions": 45,
    "deletions": 0,
    "changes": 45,
    "blob_url": "https://github.com/KDS-OurMemory/Server/blob/c6e74ac8c89129ae9c1d6068ea22ccdf6a378431/OurMemory_Server/src/main/java/com/kds/ourmemory/controller/v1/room/dto/FindRoomResponseDto.java",
    "raw_url": "https://github.com/KDS-OurMemory/Server/raw/c6e74ac8c89129ae9c1d6068ea22ccdf6a378431/OurMemory_Server/src/main/java/com/kds/ourmemory/controller/v1/room/dto/FindRoomResponseDto.java",
    "contents_url": "https://api.github.com/repos/KDS-OurMemory/Server/contents/OurMemory_Server/src/main/java/com/kds/ourmemory/controller/v1/room/dto/FindRoomResponseDto.java?ref=c6e74ac8c89129ae9c1d6068ea22ccdf6a378431",
    "patch": "@@ -0,0 +1,45 @@\n+package com.kds.ourmemory.controller.v1.room.dto;\n+\n+import java.text.SimpleDateFormat;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import com.kds.ourmemory.controller.v1.user.dto.SignInResponseDto;\n+import com.kds.ourmemory.entity.room.Room;\n+import com.kds.ourmemory.entity.user.User;\n+\n+import io.swagger.annotations.ApiModelProperty;\n+import lombok.AllArgsConstructor;\n+import lombok.Getter;\n+\n+@Getter\n+@AllArgsConstructor\n+public class FindRoomResponseDto {\n+    @ApiModelProperty(value = \"방 번호\", example = \"5\")\n+    private Long id;\n+\n+    @ApiModelProperty(value = \"방 소유자\", example = \"17\")\n+    private Long owner;\n+\n+    @ApiModelProperty(value = \"방 이름\", example = \"가족방\")\n+    private String name;\n+\n+    @ApiModelProperty(value = \"방 생성일\", example = \"20210316\")\n+    private String regTime;\n+\n+    @ApiModelProperty(value = \"방 공개여부\", example = \"false\")\n+    private boolean opened;\n+\n+    @ApiModelProperty(value = \"방 참여자\", example = \"[{사용자}, {사용자2}]\")\n+    private List<SignInResponseDto> member;\n+\n+    public FindRoomResponseDto(Room room) {\n+        id = room.getId();\n+        owner = room.getOwner();\n+        name = room.getName();\n+        regTime = new SimpleDateFormat(\"yyyyMMdd\").format(room.getRegDate());\n+        opened = room.isOpened();\n+        member = room.getUsers().stream().filter(User::isUsed).map(SignInResponseDto::new)\n+                .collect(Collectors.toList());\n+    }\n+}"
  },
  {
    "sha": "283ce7db00e1a94e192f77d15c960841c42aec07",
    "filename": "OurMemory_Server/src/main/java/com/kds/ourmemory/controller/v1/room/dto/InsertRequestDto.java",
    "status": "renamed",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/KDS-OurMemory/Server/blob/c6e74ac8c89129ae9c1d6068ea22ccdf6a378431/OurMemory_Server/src/main/java/com/kds/ourmemory/controller/v1/room/dto/InsertRequestDto.java",
    "raw_url": "https://github.com/KDS-OurMemory/Server/raw/c6e74ac8c89129ae9c1d6068ea22ccdf6a378431/OurMemory_Server/src/main/java/com/kds/ourmemory/controller/v1/room/dto/InsertRequestDto.java",
    "contents_url": "https://api.github.com/repos/KDS-OurMemory/Server/contents/OurMemory_Server/src/main/java/com/kds/ourmemory/controller/v1/room/dto/InsertRequestDto.java?ref=c6e74ac8c89129ae9c1d6068ea22ccdf6a378431",
    "patch": "@@ -14,7 +14,7 @@\n @Getter\n @AllArgsConstructor\n @NoArgsConstructor\n-public class RoomRequestDto {\n+public class InsertRequestDto {\n     @ApiModelProperty(value = \"방 이름\", required = true)\n     private String name;\n     ",
    "previous_filename": "OurMemory_Server/src/main/java/com/kds/ourmemory/controller/v1/room/dto/RoomRequestDto.java"
  },
  {
    "sha": "abf4e4033b30bd897ba106301d83028a8cbedd72",
    "filename": "OurMemory_Server/src/main/java/com/kds/ourmemory/controller/v1/room/dto/InsertResponseDto.java",
    "status": "renamed",
    "additions": 5,
    "deletions": 2,
    "changes": 7,
    "blob_url": "https://github.com/KDS-OurMemory/Server/blob/c6e74ac8c89129ae9c1d6068ea22ccdf6a378431/OurMemory_Server/src/main/java/com/kds/ourmemory/controller/v1/room/dto/InsertResponseDto.java",
    "raw_url": "https://github.com/KDS-OurMemory/Server/raw/c6e74ac8c89129ae9c1d6068ea22ccdf6a378431/OurMemory_Server/src/main/java/com/kds/ourmemory/controller/v1/room/dto/InsertResponseDto.java",
    "contents_url": "https://api.github.com/repos/KDS-OurMemory/Server/contents/OurMemory_Server/src/main/java/com/kds/ourmemory/controller/v1/room/dto/InsertResponseDto.java?ref=c6e74ac8c89129ae9c1d6068ea22ccdf6a378431",
    "patch": "@@ -6,7 +6,10 @@\n \n @Getter\n @AllArgsConstructor\n-public class RoomResponseDto {\n+public class InsertResponseDto {\n+    @ApiModelProperty(value = \"방 번호\", example = \"3\")\n+    private Long id;\n+    \n     @ApiModelProperty(value=\"방 생성한 날짜\", example = \"20210315\")\n-    private String createTime;\n+    private String createDate;\n }",
    "previous_filename": "OurMemory_Server/src/main/java/com/kds/ourmemory/controller/v1/room/dto/RoomResponseDto.java"
  },
  {
    "sha": "9bafe0bfd146203df64713154feaf00bfbe2fe87",
    "filename": "OurMemory_Server/src/main/java/com/kds/ourmemory/controller/v1/user/UserController.java",
    "status": "modified",
    "additions": 18,
    "deletions": 16,
    "changes": 34,
    "blob_url": "https://github.com/KDS-OurMemory/Server/blob/c6e74ac8c89129ae9c1d6068ea22ccdf6a378431/OurMemory_Server/src/main/java/com/kds/ourmemory/controller/v1/user/UserController.java",
    "raw_url": "https://github.com/KDS-OurMemory/Server/raw/c6e74ac8c89129ae9c1d6068ea22ccdf6a378431/OurMemory_Server/src/main/java/com/kds/ourmemory/controller/v1/user/UserController.java",
    "contents_url": "https://api.github.com/repos/KDS-OurMemory/Server/contents/OurMemory_Server/src/main/java/com/kds/ourmemory/controller/v1/user/UserController.java?ref=c6e74ac8c89129ae9c1d6068ea22ccdf6a378431",
    "patch": "@@ -3,10 +3,10 @@\n import static com.kds.ourmemory.controller.v1.ApiResult.ok;\n \n import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.PathVariable;\n import org.springframework.web.bind.annotation.PostMapping;\n import org.springframework.web.bind.annotation.RequestBody;\n import org.springframework.web.bind.annotation.RequestMapping;\n-import org.springframework.web.bind.annotation.RequestParam;\n import org.springframework.web.bind.annotation.RestController;\n \n import com.kds.ourmemory.advice.exception.CUserNotFoundException;\n@@ -18,25 +18,27 @@\n \n import io.swagger.annotations.Api;\n import io.swagger.annotations.ApiOperation;\n+import io.swagger.annotations.ApiParam;\n import lombok.RequiredArgsConstructor;\n \n-@Api(tags = {\"1. User\"})\n+@Api(tags = { \"1. User\" })\n @RequiredArgsConstructor\n @RestController\n @RequestMapping(value = \"/v1\")\n public class UserController {\n-    \n-\tprivate final UserService service;\n-\t\n-\t@ApiOperation(value=\"회원가입\", notes = \"앱에서 전달받은 데이터로 회원가입 진행\")\n-\t@PostMapping(\"/signUp\")\n-\tpublic ApiResult<SignUpResponseDto> signUp(@RequestBody SignUpRequestDto request) {\n-\t\treturn ok(service.signUp(request.toEntity()));\n-\t}\n-\t\n-\t@ApiOperation(value=\"로그인\", notes = \"snsId 로 사용자 정보 조회 및 리턴\")\n-\t@GetMapping(\"/signIn\")\n-\tpublic ApiResult<SignInResponseDto> signIn(@RequestParam String snsId) throws CUserNotFoundException {\n-\t\treturn ok(service.signIn(snsId));\n-\t}\n+\n+    private final UserService service;\n+\n+    @ApiOperation(value = \"회원가입\", notes = \"앱에서 전달받은 데이터로 회원가입 진행\")\n+    @PostMapping(\"/user\")\n+    public ApiResult<SignUpResponseDto> signUp(@RequestBody SignUpRequestDto request) {\n+        return ok(service.signUp(request.toEntity()));\n+    }\n+\n+    @ApiOperation(value = \"로그인\", notes = \"snsId 로 사용자 정보 조회 및 리턴\")\n+    @GetMapping(\"/user/{snsId}\")\n+    public ApiResult<SignInResponseDto> signIn(@ApiParam(value = \"snsId\", required = true) @PathVariable String snsId)\n+            throws CUserNotFoundException {\n+        return ok(service.signIn(snsId));\n+    }\n }\n\\ No newline at end of file"
  },
  {
    "sha": "d87648b532f530b4051abecdccfc03f194f6917a",
    "filename": "OurMemory_Server/src/main/java/com/kds/ourmemory/controller/v1/user/dto/SignInResponseDto.java",
    "status": "modified",
    "additions": 8,
    "deletions": 6,
    "changes": 14,
    "blob_url": "https://github.com/KDS-OurMemory/Server/blob/c6e74ac8c89129ae9c1d6068ea22ccdf6a378431/OurMemory_Server/src/main/java/com/kds/ourmemory/controller/v1/user/dto/SignInResponseDto.java",
    "raw_url": "https://github.com/KDS-OurMemory/Server/raw/c6e74ac8c89129ae9c1d6068ea22ccdf6a378431/OurMemory_Server/src/main/java/com/kds/ourmemory/controller/v1/user/dto/SignInResponseDto.java",
    "contents_url": "https://api.github.com/repos/KDS-OurMemory/Server/contents/OurMemory_Server/src/main/java/com/kds/ourmemory/controller/v1/user/dto/SignInResponseDto.java?ref=c6e74ac8c89129ae9c1d6068ea22ccdf6a378431",
    "patch": "@@ -1,7 +1,5 @@\n package com.kds.ourmemory.controller.v1.user.dto;\n \n-import org.springframework.beans.BeanUtils;\n-\n import com.kds.ourmemory.entity.user.User;\n \n import io.swagger.annotations.ApiModelProperty;\n@@ -20,13 +18,17 @@\n     @ApiModelProperty(value=\"사용자 생일\", example = \"null\")\n     private String birthday;\n     \n-    @ApiModelProperty(value=\"양력 여부\", example = \"false\")\n-    private boolean isSolar;\n+    @ApiModelProperty(value=\"양력 여부\", example = \"true\")\n+    private boolean solar;\n     \n     @ApiModelProperty(value=\"생일 공개여부\", example = \"false\")\n-    private boolean isBirthdayOpen;\n+    private boolean birthdayOpen;\n     \n     public SignInResponseDto(User user) {\n-        BeanUtils.copyProperties(user, this);\n+        id = user.getId();\n+        name = user.getName();\n+        birthday = user.isBirthdayOpen()? user.getBirthday() : null;\n+        solar = user.isSolar();\n+        birthdayOpen = user.isBirthdayOpen();\n     }\n }"
  },
  {
    "sha": "5006aaaf4f4570e0c40da9b9c9db52f1217f4aaa",
    "filename": "OurMemory_Server/src/main/java/com/kds/ourmemory/controller/v1/user/dto/SignUpRequestDto.java",
    "status": "modified",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/KDS-OurMemory/Server/blob/c6e74ac8c89129ae9c1d6068ea22ccdf6a378431/OurMemory_Server/src/main/java/com/kds/ourmemory/controller/v1/user/dto/SignUpRequestDto.java",
    "raw_url": "https://github.com/KDS-OurMemory/Server/raw/c6e74ac8c89129ae9c1d6068ea22ccdf6a378431/OurMemory_Server/src/main/java/com/kds/ourmemory/controller/v1/user/dto/SignUpRequestDto.java",
    "contents_url": "https://api.github.com/repos/KDS-OurMemory/Server/contents/OurMemory_Server/src/main/java/com/kds/ourmemory/controller/v1/user/dto/SignUpRequestDto.java?ref=c6e74ac8c89129ae9c1d6068ea22ccdf6a378431",
    "patch": "@@ -30,10 +30,10 @@\n \tprivate String birthday;\n \t\n \t@ApiModelProperty(value=\"양력 여부\", required = false)\n-\tprivate boolean isSolar;\n+\tprivate boolean solar;\n \t\n \t@ApiModelProperty(value=\"생일 공개여부\", required = false)\n-\tprivate boolean isBirthdayOpen;\n+\tprivate boolean birthdayOpen;\n \t\n \tpublic User toEntity() {\n \t    return User.builder()\n@@ -42,8 +42,8 @@ public User toEntity() {\n                 .pushToken(pushToken)\n                 .name(name)\n                 .birthday(birthday)\n-                .isSolar(isSolar)\n-                .isBirthdayOpen(isBirthdayOpen)\n+                .solar(solar)\n+                .birthdayOpen(birthdayOpen)\n                 .role(\"user\")\n                 .regDate(new Date())\n                 .used(true)"
  },
  {
    "sha": "81daf6a98ff67ff9b7af8d9233445edfae674ca6",
    "filename": "OurMemory_Server/src/main/java/com/kds/ourmemory/controller/v1/user/dto/SignUpResponseDto.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/KDS-OurMemory/Server/blob/c6e74ac8c89129ae9c1d6068ea22ccdf6a378431/OurMemory_Server/src/main/java/com/kds/ourmemory/controller/v1/user/dto/SignUpResponseDto.java",
    "raw_url": "https://github.com/KDS-OurMemory/Server/raw/c6e74ac8c89129ae9c1d6068ea22ccdf6a378431/OurMemory_Server/src/main/java/com/kds/ourmemory/controller/v1/user/dto/SignUpResponseDto.java",
    "contents_url": "https://api.github.com/repos/KDS-OurMemory/Server/contents/OurMemory_Server/src/main/java/com/kds/ourmemory/controller/v1/user/dto/SignUpResponseDto.java?ref=c6e74ac8c89129ae9c1d6068ea22ccdf6a378431",
    "patch": "@@ -8,5 +8,5 @@\n @AllArgsConstructor\n public class SignUpResponseDto {\n     @ApiModelProperty(value=\"사용자 추가한 날짜\", example = \"20210315\")\n-\tprivate String joinTime;\n+\tprivate String joinDate;\n }"
  },
  {
    "sha": "600fd2e4bd22cb3bf466c4482cc060e6e71a21f2",
    "filename": "OurMemory_Server/src/main/java/com/kds/ourmemory/entity/memory/Memory.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/KDS-OurMemory/Server/blob/c6e74ac8c89129ae9c1d6068ea22ccdf6a378431/OurMemory_Server/src/main/java/com/kds/ourmemory/entity/memory/Memory.java",
    "raw_url": "https://github.com/KDS-OurMemory/Server/raw/c6e74ac8c89129ae9c1d6068ea22ccdf6a378431/OurMemory_Server/src/main/java/com/kds/ourmemory/entity/memory/Memory.java",
    "contents_url": "https://api.github.com/repos/KDS-OurMemory/Server/contents/OurMemory_Server/src/main/java/com/kds/ourmemory/entity/memory/Memory.java?ref=c6e74ac8c89129ae9c1d6068ea22ccdf6a378431",
    "patch": "@@ -37,8 +37,8 @@\n \t@Column(name = \"memory_id\")\n \tprivate Long id;\n     \n-    @Column(nullable = false, name=\"memory_writer\")\n-    private Long writer;\n+    @Column(nullable = false, name=\"memory_writerId\")\n+    private Long writerId;\n \t\n \t@Column(nullable = false, name=\"memory_name\")\n \tprivate String name;"
  },
  {
    "sha": "b8b42f5b2c498074d8c79843993eec8bb281c2a2",
    "filename": "OurMemory_Server/src/main/java/com/kds/ourmemory/entity/room/Room.java",
    "status": "modified",
    "additions": 3,
    "deletions": 4,
    "changes": 7,
    "blob_url": "https://github.com/KDS-OurMemory/Server/blob/c6e74ac8c89129ae9c1d6068ea22ccdf6a378431/OurMemory_Server/src/main/java/com/kds/ourmemory/entity/room/Room.java",
    "raw_url": "https://github.com/KDS-OurMemory/Server/raw/c6e74ac8c89129ae9c1d6068ea22ccdf6a378431/OurMemory_Server/src/main/java/com/kds/ourmemory/entity/room/Room.java",
    "contents_url": "https://api.github.com/repos/KDS-OurMemory/Server/contents/OurMemory_Server/src/main/java/com/kds/ourmemory/entity/room/Room.java?ref=c6e74ac8c89129ae9c1d6068ea22ccdf6a378431",
    "patch": "@@ -6,6 +6,7 @@\n import java.util.List;\n import java.util.Optional;\n \n+import javax.persistence.CascadeType;\n import javax.persistence.Column;\n import javax.persistence.Entity;\n import javax.persistence.FetchType;\n@@ -64,14 +65,12 @@\n \t    return Optional.of(this);\n \t}\n \t\n-\tpublic Optional<Room> addUser(User user) {\n-\t    Optional.ofNullable(this.users).orElseGet(() -> this.users = new ArrayList<>());\n+\tpublic Room addUser(User user) {\n \t    this.users.add(user);\n-\t    return Optional.of(this);\n+\t    return this;\n \t}\n \t\n \tpublic Optional<Room> addUsers(List<User> users) {\n-\t    Optional.ofNullable(this.users).orElseGet(() -> this.users = new ArrayList<>());\n \t    this.users.addAll(users);\n \t    return Optional.of(this);\n     }\t"
  },
  {
    "sha": "5f362d7a1cd2d5aef03fcdbff6826016c2a0c12a",
    "filename": "OurMemory_Server/src/main/java/com/kds/ourmemory/entity/user/User.java",
    "status": "modified",
    "additions": 4,
    "deletions": 8,
    "changes": 12,
    "blob_url": "https://github.com/KDS-OurMemory/Server/blob/c6e74ac8c89129ae9c1d6068ea22ccdf6a378431/OurMemory_Server/src/main/java/com/kds/ourmemory/entity/user/User.java",
    "raw_url": "https://github.com/KDS-OurMemory/Server/raw/c6e74ac8c89129ae9c1d6068ea22ccdf6a378431/OurMemory_Server/src/main/java/com/kds/ourmemory/entity/user/User.java",
    "contents_url": "https://api.github.com/repos/KDS-OurMemory/Server/contents/OurMemory_Server/src/main/java/com/kds/ourmemory/entity/user/User.java?ref=c6e74ac8c89129ae9c1d6068ea22ccdf6a378431",
    "patch": "@@ -61,10 +61,10 @@\n \tprivate String birthday;\n \t\n \t@Column(nullable = false, name=\"user_solar_flag\")\n-\tprivate boolean isSolar;\n+\tprivate boolean solar;\n \t\n \t@Column(nullable = false, name=\"user_birthday_open_flag\")\n-\tprivate boolean isBirthdayOpen;\n+\tprivate boolean birthdayOpen;\n \t\n \t@Column(nullable = true, name=\"user_role\")\n \tprivate String role;\n@@ -92,14 +92,12 @@\n \t    return Optional.of(this);\n \t}\n \t\n-\tpublic Optional<User> addRoom(Room room) {\n-\t    Optional.ofNullable(this.rooms).orElseGet(() -> this.rooms = new ArrayList<>());\n+\tpublic User addRoom(Room room) {\n \t    this.rooms.add(room);\n-\t    return Optional.of(this);\n+\t    return this;\n \t}\n \t\n \tpublic Optional<User> addRooms(List<Room> rooms) {\n-\t    Optional.ofNullable(this.rooms).orElseGet(() -> this.rooms = new ArrayList<>());\n \t    this.rooms.addAll(rooms);\n \t    return Optional.of(this);\n \t}\n@@ -110,13 +108,11 @@\n \t}\n \t\n \tpublic Optional<User> addMemory(Memory memory) {\n-\t    Optional.ofNullable(this.memorys).orElseGet(() -> this.memorys = new ArrayList<>());\n \t    this.memorys.add(memory);\n \t    return Optional.of(this);\n \t}\n \t\n \tpublic Optional<User> addMemorys(List<Memory> memorys) {\n-\t    Optional.ofNullable(this.memorys).orElseGet(() -> this.memorys = new ArrayList<>());\n \t    this.memorys.addAll(memorys);\n \t    return Optional.of(this);\n \t}"
  },
  {
    "sha": "4bb8d3266e4e29a8e74ea2eeccdffb05e98239b2",
    "filename": "OurMemory_Server/src/main/java/com/kds/ourmemory/service/v1/memory/MemoryService.java",
    "status": "modified",
    "additions": 24,
    "deletions": 9,
    "changes": 33,
    "blob_url": "https://github.com/KDS-OurMemory/Server/blob/c6e74ac8c89129ae9c1d6068ea22ccdf6a378431/OurMemory_Server/src/main/java/com/kds/ourmemory/service/v1/memory/MemoryService.java",
    "raw_url": "https://github.com/KDS-OurMemory/Server/raw/c6e74ac8c89129ae9c1d6068ea22ccdf6a378431/OurMemory_Server/src/main/java/com/kds/ourmemory/service/v1/memory/MemoryService.java",
    "contents_url": "https://api.github.com/repos/KDS-OurMemory/Server/contents/OurMemory_Server/src/main/java/com/kds/ourmemory/service/v1/memory/MemoryService.java?ref=c6e74ac8c89129ae9c1d6068ea22ccdf6a378431",
    "patch": "@@ -1,31 +1,46 @@\n package com.kds.ourmemory.service.v1.memory;\n \n-import java.text.DateFormat;\n-import java.text.SimpleDateFormat;\n+import static com.kds.ourmemory.util.DateUtil.currentDate;\n+\n import java.util.Date;\n import java.util.Optional;\n \n import org.springframework.stereotype.Service;\n \n import com.kds.ourmemory.advice.exception.CMemoryException;\n+import com.kds.ourmemory.controller.v1.memory.dto.MemoryRequestDto;\n import com.kds.ourmemory.controller.v1.memory.dto.MemoryResponseDto;\n import com.kds.ourmemory.entity.memory.Memory;\n import com.kds.ourmemory.repository.memory.MemoryRepository;\n+import com.kds.ourmemory.repository.user.UserRepository;\n \n import lombok.RequiredArgsConstructor;\n \n @RequiredArgsConstructor\n @Service\n public class MemoryService {\n     private final MemoryRepository memoryRepo;\n+    private final UserRepository userRepo;\n     \n-    public MemoryResponseDto addMemory(Memory memory) throws CMemoryException{\n-        return insert(memory).map(m -> {\n-            DateFormat format = new SimpleDateFormat(\"yyyyMMdd\");\n-            String today = format.format(new Date());\n-            \n-            return new MemoryResponseDto(today);\n-        }).orElseThrow(() -> new CMemoryException(\"Add Memory to \"));\n+    public MemoryResponseDto addMemory(MemoryRequestDto request) throws CMemoryException{\n+        return userRepo.findBySnsId(request.getSnsId())\n+                .map(user -> Memory.builder()\n+                        .writerId(user.getId())\n+                        .name(request.getName())\n+                        .contents(request.getContents())\n+                        .place(request.getPlace())\n+                        .startDate(request.getStartDate())\n+                        .endDate(request.getEndDate())\n+                        .firstAlarm(request.getFirstAlarm())\n+                        .secondAlarm(request.getSecondAlarm())\n+                        .bgColor(request.getBgColor())\n+                        .regDate(new Date())\n+                        .used(true)\n+                        .build()\n+                        )\n+                .map(memory -> insert(memory))\n+                .map(m -> new MemoryResponseDto(currentDate()))\n+                .orElseThrow(() -> new CMemoryException(\"Add Memory to DB Failed.\"));\n     }\n     \n     private Optional<Memory> insert(Memory memory) {"
  },
  {
    "sha": "9d36f2b28555e7f317aec644af7e54a3f0cb5949",
    "filename": "OurMemory_Server/src/main/java/com/kds/ourmemory/service/v1/room/RoomService.java",
    "status": "modified",
    "additions": 32,
    "deletions": 11,
    "changes": 43,
    "blob_url": "https://github.com/KDS-OurMemory/Server/blob/c6e74ac8c89129ae9c1d6068ea22ccdf6a378431/OurMemory_Server/src/main/java/com/kds/ourmemory/service/v1/room/RoomService.java",
    "raw_url": "https://github.com/KDS-OurMemory/Server/raw/c6e74ac8c89129ae9c1d6068ea22ccdf6a378431/OurMemory_Server/src/main/java/com/kds/ourmemory/service/v1/room/RoomService.java",
    "contents_url": "https://api.github.com/repos/KDS-OurMemory/Server/contents/OurMemory_Server/src/main/java/com/kds/ourmemory/service/v1/room/RoomService.java?ref=c6e74ac8c89129ae9c1d6068ea22ccdf6a378431",
    "patch": "@@ -1,6 +1,7 @@\n package com.kds.ourmemory.service.v1.room;\n \n-import java.text.SimpleDateFormat;\n+import static com.kds.ourmemory.util.DateUtil.currentDate;\n+\n import java.util.List;\n import java.util.Objects;\n import java.util.Optional;\n@@ -10,8 +11,11 @@\n import org.springframework.stereotype.Service;\n \n import com.kds.ourmemory.advice.exception.CRoomException;\n-import com.kds.ourmemory.controller.v1.room.dto.RoomResponseDto;\n+import com.kds.ourmemory.advice.exception.CUserNotFoundException;\n+import com.kds.ourmemory.controller.v1.room.dto.DeleteResponseDto;\n+import com.kds.ourmemory.controller.v1.room.dto.InsertResponseDto;\n import com.kds.ourmemory.entity.room.Room;\n+import com.kds.ourmemory.entity.user.User;\n import com.kds.ourmemory.repository.room.RoomRepository;\n import com.kds.ourmemory.repository.user.UserRepository;\n import com.kds.ourmemory.service.v1.firebase.FirebaseCloudMessageService;\n@@ -27,15 +31,22 @@\n     private final FirebaseCloudMessageService firebaseFcm;\n \n     @Transactional\n-    public RoomResponseDto createRoom(Room room, List<Long> members) throws CRoomException {\n-        return insert(room).map(r -> addMemberToRoom(members, r)).map(isAdd -> {\n-            String currentDate = new SimpleDateFormat(\"yyyyMMdd\").format(System.currentTimeMillis());\n-            return new RoomResponseDto(currentDate);\n-        }).orElseThrow(() -> new CRoomException(\"Create Room Failed.\"));\n+    public InsertResponseDto insert(Room room, List<Long> members) throws CRoomException {\n+        return insert(room)\n+                .map(r -> userRepo.findById(r.getOwner())\n+                        .map(user -> user.addRoom(r))\n+                        .map(r::addUser).get())\n+                .map(r -> addMemberToRoom(r, members))\n+                .map(r -> new InsertResponseDto(r.getId(), currentDate()))\n+                .orElseThrow(() -> new CRoomException(\"Create Room Failed.\"));\n+    }\n+    \n+    private Optional<Room> insert(Room room) {\n+        return Optional.of(roomRepo.save(room));\n     }\n \n     @Transactional\n-    public boolean addMemberToRoom(List<Long> members, Room room) throws CRoomException {\n+    public Room addMemberToRoom(Room room, List<Long> members) throws CRoomException {\n         Optional.ofNullable(members).map(List::stream)\n             .ifPresent(stream -> stream.forEach(id -> {\n                 userRepo.findById(id).filter(Objects::nonNull)\n@@ -49,10 +60,20 @@ public boolean addMemberToRoom(List<Long> members, Room room) throws CRoomExcept\n                  .orElseThrow(() -> new CRoomException(\"memberId is Not Registered DB. id: \" + id));\n              }));\n         \n-        return true;\n+        return room;\n     }\n     \n-    public Optional<Room> insert(Room room) {\n-        return Optional.of(roomRepo.save(room));\n+    public List<Room> findRooms(String snsId) throws CUserNotFoundException {\n+        return userRepo.findBySnsId(snsId).map(User::getRooms)\n+                .orElseThrow(() -> new CUserNotFoundException(\"Not Found User From snsId: \" + snsId));\n+    }\n+    \n+    public DeleteResponseDto delete(Long roomId) throws CRoomException {\n+        return roomRepo.findById(roomId)\n+                .map(room -> {\n+                    room.getUsers().stream().forEach(user -> user.getRooms().remove(room));\n+                    roomRepo.delete(room);\n+                    return new DeleteResponseDto(currentDate());\n+                }).orElseThrow(() -> new CRoomException(\"Delete Failed: \" + roomId));\n     }\n }"
  },
  {
    "sha": "c1241caebf57059531477bcab1831ba28142b505",
    "filename": "OurMemory_Server/src/main/java/com/kds/ourmemory/service/v1/user/UserService.java",
    "status": "modified",
    "additions": 8,
    "deletions": 8,
    "changes": 16,
    "blob_url": "https://github.com/KDS-OurMemory/Server/blob/c6e74ac8c89129ae9c1d6068ea22ccdf6a378431/OurMemory_Server/src/main/java/com/kds/ourmemory/service/v1/user/UserService.java",
    "raw_url": "https://github.com/KDS-OurMemory/Server/raw/c6e74ac8c89129ae9c1d6068ea22ccdf6a378431/OurMemory_Server/src/main/java/com/kds/ourmemory/service/v1/user/UserService.java",
    "contents_url": "https://api.github.com/repos/KDS-OurMemory/Server/contents/OurMemory_Server/src/main/java/com/kds/ourmemory/service/v1/user/UserService.java?ref=c6e74ac8c89129ae9c1d6068ea22ccdf6a378431",
    "patch": "@@ -1,14 +1,13 @@\n package com.kds.ourmemory.service.v1.user;\n \n-import java.text.DateFormat;\n-import java.text.SimpleDateFormat;\n-import java.util.Date;\n+import static com.kds.ourmemory.util.DateUtil.currentDate;\n+\n import java.util.Optional;\n \n import org.springframework.stereotype.Service;\n \n-import com.kds.ourmemory.advice.exception.CUserNotFoundException;\n import com.kds.ourmemory.advice.exception.CUserException;\n+import com.kds.ourmemory.advice.exception.CUserNotFoundException;\n import com.kds.ourmemory.controller.v1.user.dto.SignInResponseDto;\n import com.kds.ourmemory.controller.v1.user.dto.SignUpResponseDto;\n import com.kds.ourmemory.entity.user.User;\n@@ -26,11 +25,8 @@\n \n \tpublic SignUpResponseDto signUp(User user) throws CUserException {\n \t\treturn insert(user).map(u -> {\n-\t\t    DateFormat format = new SimpleDateFormat(\"yyyyMMdd\");\n-\t        String today = format.format(new Date());\n-\t        \n             firebaseFcm.sendMessageTo(user.getPushToken(), \"OurMemory - SignUp\", user.getName() + \" is SignUp Success\");\n-\t        return new SignUpResponseDto(today);\n+\t        return new SignUpResponseDto(currentDate());\n \t\t}).orElseThrow(() -> {\n             firebaseFcm.sendMessageTo(user.getPushToken(), \"OurMemory - SignUp\", user.getName() + \" is SignUp Failed.\");\n \t\t    \n@@ -46,4 +42,8 @@ public SignInResponseDto signIn(String snsId) throws CUserNotFoundException {\n \tprivate Optional<User> insert(User user) {\n \t    return Optional.of(userRepo.save(user));\n \t}\n+\t\n+\tpublic Optional<User> findById(Long id) {\n+\t    return userRepo.findById(id);\n+\t}\n }"
  },
  {
    "sha": "15deb0a5883b6293cc9fba4fc8de6090cc8e361d",
    "filename": "OurMemory_Server/src/main/java/com/kds/ourmemory/util/DateUtil.java",
    "status": "added",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/KDS-OurMemory/Server/blob/c6e74ac8c89129ae9c1d6068ea22ccdf6a378431/OurMemory_Server/src/main/java/com/kds/ourmemory/util/DateUtil.java",
    "raw_url": "https://github.com/KDS-OurMemory/Server/raw/c6e74ac8c89129ae9c1d6068ea22ccdf6a378431/OurMemory_Server/src/main/java/com/kds/ourmemory/util/DateUtil.java",
    "contents_url": "https://api.github.com/repos/KDS-OurMemory/Server/contents/OurMemory_Server/src/main/java/com/kds/ourmemory/util/DateUtil.java?ref=c6e74ac8c89129ae9c1d6068ea22ccdf6a378431",
    "patch": "@@ -0,0 +1,12 @@\n+package com.kds.ourmemory.util;\n+\n+import java.text.SimpleDateFormat;\n+\n+public class DateUtil {\n+    private DateUtil() {\n+    }\n+    \n+    public static String currentDate() {\n+        return new SimpleDateFormat(\"yyyyMMdd\").format(System.currentTimeMillis());\n+    }\n+}"
  },
  {
    "sha": "3fc98304c137340ec933df9ec48121af603d4b0b",
    "filename": "OurMemory_Server/src/test/java/com/kds/ourmemory/service/v1/room/RoomServiceTest.java",
    "status": "added",
    "additions": 77,
    "deletions": 0,
    "changes": 77,
    "blob_url": "https://github.com/KDS-OurMemory/Server/blob/c6e74ac8c89129ae9c1d6068ea22ccdf6a378431/OurMemory_Server/src/test/java/com/kds/ourmemory/service/v1/room/RoomServiceTest.java",
    "raw_url": "https://github.com/KDS-OurMemory/Server/raw/c6e74ac8c89129ae9c1d6068ea22ccdf6a378431/OurMemory_Server/src/test/java/com/kds/ourmemory/service/v1/room/RoomServiceTest.java",
    "contents_url": "https://api.github.com/repos/KDS-OurMemory/Server/contents/OurMemory_Server/src/test/java/com/kds/ourmemory/service/v1/room/RoomServiceTest.java?ref=c6e74ac8c89129ae9c1d6068ea22ccdf6a378431",
    "patch": "@@ -0,0 +1,77 @@\n+package com.kds.ourmemory.service.v1.room;\n+\n+import static com.kds.ourmemory.util.DateUtil.currentDate;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import org.assertj.core.api.Assertions;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.MethodOrderer;\n+import org.junit.jupiter.api.Order;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.TestInstance;\n+import org.junit.jupiter.api.TestMethodOrder;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.context.SpringBootTest;\n+\n+import com.kds.ourmemory.advice.exception.CRoomException;\n+import com.kds.ourmemory.advice.exception.CUserNotFoundException;\n+import com.kds.ourmemory.controller.v1.room.dto.DeleteResponseDto;\n+import com.kds.ourmemory.controller.v1.room.dto.InsertRequestDto;\n+import com.kds.ourmemory.controller.v1.room.dto.InsertResponseDto;\n+import com.kds.ourmemory.entity.room.Room;\n+import com.kds.ourmemory.entity.user.User;\n+import com.kds.ourmemory.service.v1.user.UserService;\n+\n+import lombok.extern.slf4j.Slf4j;\n+\n+@Slf4j\n+@SpringBootTest\n+@TestInstance(TestInstance.Lifecycle.PER_CLASS)\n+@TestMethodOrder(MethodOrderer.OrderAnnotation.class)\n+class RoomServiceTest {\n+    @Autowired private RoomService roomService;\n+    @Autowired private UserService userService;\n+    \n+    private InsertRequestDto insertRequestDto;\n+    private InsertResponseDto insertResponseDto;\n+    \n+    @BeforeAll\n+    void setUp() {\n+        List<Long> member = new ArrayList<>();\n+        member.add(2L);\n+        member.add(4L);\n+        \n+        insertRequestDto = new InsertRequestDto(\"테스트방\", 94L, false, member);\n+    }\n+    \n+    @Test\n+    @Order(1)\n+    void 방_생성() {\n+        insertResponseDto = roomService.insert(insertRequestDto.toEntity(), insertRequestDto.getMember());\n+        Assertions.assertThat(insertResponseDto).isNotNull();\n+        Assertions.assertThat(insertResponseDto.getCreateDate()).isEqualTo(currentDate());\n+        \n+        log.info(\"CreateDate: {} roomId: {}\", insertResponseDto.getCreateDate(), insertResponseDto.getId());\n+    }\n+    \n+    @Test\n+    @Order(2)\n+    void 방_목록_조회() throws CUserNotFoundException {\n+        User user = userService.findById(insertRequestDto.getOwner()).orElseThrow(() -> new CUserNotFoundException(\"Not Found User: \" + insertRequestDto.getOwner()));\n+        List<Room> responseList = roomService.findRooms(user.getSnsId());\n+        Assertions.assertThat(responseList).isNotNull();\n+        \n+        log.info(\"responseList : {}\", responseList);    // lazy load 때문인지 실패함. 확인 필요.\n+    }\n+    \n+    @Test\n+    @Order(3)\n+    void 방_삭제() throws CRoomException {\n+        DeleteResponseDto deleteResponseDto = roomService.delete(insertResponseDto.getId());\n+        \n+        Assertions.assertThat(deleteResponseDto).isNotNull();\n+        Assertions.assertThat(deleteResponseDto.getDeleteDate()).isEqualTo(currentDate());\n+    }\n+}"
  }
]
