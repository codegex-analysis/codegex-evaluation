[
  {
    "sha": "ab479796c4ea8d00eb4d9ff78ff580c5c2903896",
    "filename": "server/.gitignore",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/eclipse/openvsx/blob/99c6be42c6f335c466d95b3ed8e6ed1d1f32944a/server/.gitignore",
    "raw_url": "https://github.com/eclipse/openvsx/raw/99c6be42c6f335c466d95b3ed8e6ed1d1f32944a/server/.gitignore",
    "contents_url": "https://api.github.com/repos/eclipse/openvsx/contents/server/.gitignore?ref=99c6be42c6f335c466d95b3ed8e6ed1d1f32944a",
    "patch": "@@ -1,6 +1,7 @@\n /bin/\n /build/\n .gradle/\n+.idea/\n .settings/\n .classpath\n .project"
  },
  {
    "sha": "69d3b83362591374ae5e105fc97144d46fae760c",
    "filename": "server/src/main/java/org/eclipse/openvsx/ExtensionProcessor.java",
    "status": "modified",
    "additions": 29,
    "deletions": 10,
    "changes": 39,
    "blob_url": "https://github.com/eclipse/openvsx/blob/99c6be42c6f335c466d95b3ed8e6ed1d1f32944a/server/src/main/java/org/eclipse/openvsx/ExtensionProcessor.java",
    "raw_url": "https://github.com/eclipse/openvsx/raw/99c6be42c6f335c466d95b3ed8e6ed1d1f32944a/server/src/main/java/org/eclipse/openvsx/ExtensionProcessor.java",
    "contents_url": "https://api.github.com/repos/eclipse/openvsx/contents/server/src/main/java/org/eclipse/openvsx/ExtensionProcessor.java?ref=99c6be42c6f335c466d95b3ed8e6ed1d1f32944a",
    "patch": "@@ -13,11 +13,9 @@\n import java.io.File;\n import java.io.IOException;\n import java.io.InputStream;\n-import java.util.ArrayList;\n-import java.util.Collections;\n-import java.util.LinkedHashSet;\n-import java.util.List;\n+import java.util.*;\n import java.util.regex.Pattern;\n+import java.util.stream.Collectors;\n import java.util.zip.ZipException;\n import java.util.zip.ZipFile;\n \n@@ -50,19 +48,16 @@\n     private static final int MAX_CONTENT_SIZE = 512 * 1024 * 1024;\n     private static final Pattern LICENSE_PATTERN = Pattern.compile(\"SEE( (?<license>\\\\S+))? LICENSE IN (?<file>\\\\S+)\");\n \n+    private final PublishOptions publishOptions;\n     private final InputStream inputStream;\n     private byte[] content;\n     private ZipFile zipFile;\n     private JsonNode packageJson;\n     private JsonNode packageNlsJson;\n \n-    public ExtensionProcessor(byte[] content) {\n-        this.content = content;\n-        this.inputStream = null;\n-    }\n-\n-    public ExtensionProcessor(InputStream stream) {\n+    public ExtensionProcessor(InputStream stream, PublishOptions publishOptions) {\n         this.inputStream = stream;\n+        this.publishOptions = publishOptions;\n     }\n \n     @Override\n@@ -163,6 +158,7 @@ public ExtensionVersion getMetadata() {\n         extension.setDescription(getNlsValue(packageJson.path(\"description\")));\n         extension.setEngines(getEngines(packageJson.path(\"engines\")));\n         extension.setCategories(getStringList(packageJson.path(\"categories\")));\n+        extension.setExtensionKind(getStringList(packageJson.path(\"extensionKind\")));\n         extension.setTags(getStringList(packageJson.path(\"keywords\")));\n         extension.setLicense(packageJson.path(\"license\").textValue());\n         extension.setHomepage(getUrl(packageJson.path(\"homepage\")));\n@@ -243,9 +239,32 @@ private String getUrl(JsonNode node) {\n         var icon = getIcon(extension);\n         if (icon != null)\n             resources.add(icon);\n+        if (extension.getExtensionKind().contains(\"web\") && publishOptions.web)\n+            resources.addAll(getWebResources(extension));\n         return resources;\n     }\n \n+    protected List<FileResource> getWebResources(ExtensionVersion extension) {\n+        readInputStream();\n+        var namePrefix = \"extension/\";\n+        return zipFile.stream()\n+                .filter(zipEntry -> zipEntry.getName().startsWith(namePrefix))\n+                .map(zipEntry -> {\n+                    var bytes = ArchiveUtil.readEntry(zipFile, zipEntry);\n+                    if (bytes == null) {\n+                        return null;\n+                    }\n+                    var webResource = new FileResource();\n+                    webResource.setExtension(extension);\n+                    webResource.setName(zipEntry.getName());\n+                    webResource.setType(FileResource.WEB_RESOURCE);\n+                    webResource.setContent(bytes);\n+                    return webResource;\n+                })\n+                .filter(Objects::nonNull)\n+                .collect(Collectors.toList());\n+    }\n+\n     protected FileResource getBinary(ExtensionVersion extension) {\n         var binary = new FileResource();\n         binary.setExtension(extension);"
  },
  {
    "sha": "435c18907e00b6f9f4279fbe589ca26a72079502",
    "filename": "server/src/main/java/org/eclipse/openvsx/ExtensionService.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/eclipse/openvsx/blob/99c6be42c6f335c466d95b3ed8e6ed1d1f32944a/server/src/main/java/org/eclipse/openvsx/ExtensionService.java",
    "raw_url": "https://github.com/eclipse/openvsx/raw/99c6be42c6f335c466d95b3ed8e6ed1d1f32944a/server/src/main/java/org/eclipse/openvsx/ExtensionService.java",
    "contents_url": "https://api.github.com/repos/eclipse/openvsx/contents/server/src/main/java/org/eclipse/openvsx/ExtensionService.java?ref=99c6be42c6f335c466d95b3ed8e6ed1d1f32944a",
    "patch": "@@ -61,8 +61,8 @@\n     boolean requireLicense;\n \n     @Transactional(TxType.REQUIRED)\n-    public ExtensionVersion publishVersion(InputStream content, PersonalAccessToken token) {\n-        try (var processor = new ExtensionProcessor(content)) {\n+    public ExtensionVersion publishVersion(InputStream content, PersonalAccessToken token, PublishOptions publishOptions) {\n+        try (var processor = new ExtensionProcessor(content, publishOptions)) {\n             // Extract extension metadata from its manifest\n             var extVersion = createExtensionVersion(processor, token.getUser(), token);\n             processor.getExtensionDependencies().forEach(dep -> addDependency(dep, extVersion));"
  },
  {
    "sha": "b87674e540c17673a9f2c3dbc654732c9f0b68e2",
    "filename": "server/src/main/java/org/eclipse/openvsx/LocalRegistryService.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/eclipse/openvsx/blob/99c6be42c6f335c466d95b3ed8e6ed1d1f32944a/server/src/main/java/org/eclipse/openvsx/LocalRegistryService.java",
    "raw_url": "https://github.com/eclipse/openvsx/raw/99c6be42c6f335c466d95b3ed8e6ed1d1f32944a/server/src/main/java/org/eclipse/openvsx/LocalRegistryService.java",
    "contents_url": "https://api.github.com/repos/eclipse/openvsx/contents/server/src/main/java/org/eclipse/openvsx/LocalRegistryService.java?ref=99c6be42c6f335c466d95b3ed8e6ed1d1f32944a",
    "patch": "@@ -335,7 +335,7 @@ public ResultJson createNamespace(NamespaceJson json, String tokenValue) {\n     }\n \n     @Transactional(rollbackOn = ErrorResultException.class)\n-    public ExtensionJson publish(InputStream content, String tokenValue) throws ErrorResultException {\n+    public ExtensionJson publish(InputStream content, String tokenValue, PublishOptions publishOptions) throws ErrorResultException {\n         var token = users.useAccessToken(tokenValue);\n         if (token == null || token.getUser() == null) {\n             throw new ErrorResultException(\"Invalid access token.\");\n@@ -344,7 +344,7 @@ public ExtensionJson publish(InputStream content, String tokenValue) throws Erro\n         // Check whether the user has a valid publisher agreement\n         eclipse.checkPublisherAgreement(token.getUser());\n \n-        var extVersion = extensions.publishVersion(content, token);\n+        var extVersion = extensions.publishVersion(content, token, publishOptions);\n         return toExtensionVersionJson(extVersion, true);\n     }\n "
  },
  {
    "sha": "ebf6835d015bc2e1a8560ca323fb4105761cb753",
    "filename": "server/src/main/java/org/eclipse/openvsx/PublishOptions.java",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/eclipse/openvsx/blob/99c6be42c6f335c466d95b3ed8e6ed1d1f32944a/server/src/main/java/org/eclipse/openvsx/PublishOptions.java",
    "raw_url": "https://github.com/eclipse/openvsx/raw/99c6be42c6f335c466d95b3ed8e6ed1d1f32944a/server/src/main/java/org/eclipse/openvsx/PublishOptions.java",
    "contents_url": "https://api.github.com/repos/eclipse/openvsx/contents/server/src/main/java/org/eclipse/openvsx/PublishOptions.java?ref=99c6be42c6f335c466d95b3ed8e6ed1d1f32944a",
    "patch": "@@ -0,0 +1,11 @@\n+package org.eclipse.openvsx;\n+\n+class PublishOptions {\n+\n+    final boolean web;\n+\n+    PublishOptions(boolean web) {\n+        this.web = web;\n+    }\n+\n+}"
  },
  {
    "sha": "a1d027c987ff68cde539548aa5051163a0e7d0d0",
    "filename": "server/src/main/java/org/eclipse/openvsx/RegistryAPI.java",
    "status": "modified",
    "additions": 5,
    "deletions": 2,
    "changes": 7,
    "blob_url": "https://github.com/eclipse/openvsx/blob/99c6be42c6f335c466d95b3ed8e6ed1d1f32944a/server/src/main/java/org/eclipse/openvsx/RegistryAPI.java",
    "raw_url": "https://github.com/eclipse/openvsx/raw/99c6be42c6f335c466d95b3ed8e6ed1d1f32944a/server/src/main/java/org/eclipse/openvsx/RegistryAPI.java",
    "contents_url": "https://api.github.com/repos/eclipse/openvsx/contents/server/src/main/java/org/eclipse/openvsx/RegistryAPI.java?ref=99c6be42c6f335c466d95b3ed8e6ed1d1f32944a",
    "patch": "@@ -13,6 +13,7 @@\n import java.net.URI;\n import java.util.ArrayList;\n import java.util.List;\n+import java.util.Map;\n import java.util.concurrent.TimeUnit;\n \n import com.google.common.collect.Iterables;\n@@ -462,10 +463,12 @@ private int mergeSearchResults(SearchResultJson result, List<SearchEntryJson> en\n     })\n     public ResponseEntity<ExtensionJson> publish(\n             InputStream content,\n-            @RequestParam @ApiParam(\"A personal access token\") String token\n+            @RequestParam @ApiParam(\"A personal access token\") String token,\n+            @RequestParam(required = false, defaultValue = \"false\") @ApiParam(\"Flag to enable publishing web extensions\") boolean web\n         ) {\n         try {\n-            var json = local.publish(content, token);\n+            var publishOptions = new PublishOptions(web);\n+            var json = local.publish(content, token, publishOptions);\n             var serverUrl = UrlUtil.getBaseUrl();\n             var url = UrlUtil.createApiUrl(serverUrl, \"api\", json.namespace, json.name, json.version);\n             return ResponseEntity.status(HttpStatus.CREATED)"
  },
  {
    "sha": "caf0803c22749aa9b33f1ef6d6df4efd0a68b670",
    "filename": "server/src/main/java/org/eclipse/openvsx/adapter/ExtensionQueryResult.java",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/eclipse/openvsx/blob/99c6be42c6f335c466d95b3ed8e6ed1d1f32944a/server/src/main/java/org/eclipse/openvsx/adapter/ExtensionQueryResult.java",
    "raw_url": "https://github.com/eclipse/openvsx/raw/99c6be42c6f335c466d95b3ed8e6ed1d1f32944a/server/src/main/java/org/eclipse/openvsx/adapter/ExtensionQueryResult.java",
    "contents_url": "https://api.github.com/repos/eclipse/openvsx/contents/server/src/main/java/org/eclipse/openvsx/adapter/ExtensionQueryResult.java?ref=99c6be42c6f335c466d95b3ed8e6ed1d1f32944a",
    "patch": "@@ -73,6 +73,7 @@ public void addProperty(String key, String value) {\n         public static final String FILE_MANIFEST = \"Microsoft.VisualStudio.Code.Manifest\";\n         public static final String FILE_VSIX = \"Microsoft.VisualStudio.Services.VSIXPackage\";\n         public static final String FILE_LICENSE = \"Microsoft.VisualStudio.Services.Content.License\";\n+        public static final String FILE_WEB_RESOURCES = \"Microsoft.VisualStudio.Code.WebResources/\";\n \n         public String assetType;\n         public String source;"
  },
  {
    "sha": "c5bec9567300f3ff0b98fdd87446fa170cf8e77e",
    "filename": "server/src/main/java/org/eclipse/openvsx/adapter/VSCodeAdapter.java",
    "status": "modified",
    "additions": 9,
    "deletions": 2,
    "changes": 11,
    "blob_url": "https://github.com/eclipse/openvsx/blob/99c6be42c6f335c466d95b3ed8e6ed1d1f32944a/server/src/main/java/org/eclipse/openvsx/adapter/VSCodeAdapter.java",
    "raw_url": "https://github.com/eclipse/openvsx/raw/99c6be42c6f335c466d95b3ed8e6ed1d1f32944a/server/src/main/java/org/eclipse/openvsx/adapter/VSCodeAdapter.java",
    "contents_url": "https://api.github.com/repos/eclipse/openvsx/contents/server/src/main/java/org/eclipse/openvsx/adapter/VSCodeAdapter.java?ref=99c6be42c6f335c466d95b3ed8e6ed1d1f32944a",
    "patch": "@@ -258,8 +258,14 @@ private FileResource getFileFromDB(ExtensionVersion extVersion, String assetType\n                 return repositories.findFileByType(extVersion, FileResource.LICENSE);\n             case FILE_ICON:\n                 return repositories.findFileByType(extVersion, FileResource.ICON);\n-            default:\n-                return null;\n+            default: {\n+                if (assetType.startsWith(FILE_WEB_RESOURCES)) {\n+                    var name = assetType.substring((FILE_WEB_RESOURCES.length()));\n+                    return repositories.findFileByTypeAndName(extVersion, FileResource.WEB_RESOURCE, name);\n+                } else {\n+                    return null;\n+                }\n+            }\n         }\n     }\n \n@@ -361,6 +367,7 @@ public ModelAndView download(@PathVariable String namespace, @PathVariable Strin\n             queryVer.addFile(FILE_ICON, type2Url.get(FileResource.ICON));\n             queryVer.addFile(FILE_VSIX, type2Url.get(FileResource.DOWNLOAD));\n             queryVer.addFile(FILE_CHANGELOG, type2Url.get(FileResource.CHANGELOG));\n+            storageUtil.getWebResourceUrls(extVer, serverUrl).forEach((name, url) -> queryVer.addFile(FILE_WEB_RESOURCES + name, url));\n         }\n \n         if (test(flags, FLAG_INCLUDE_VERSION_PROPERTIES)) {"
  },
  {
    "sha": "180814e4e4b821ff820a0c19a1e8c5496c394a34",
    "filename": "server/src/main/java/org/eclipse/openvsx/entities/ExtensionVersion.java",
    "status": "modified",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/eclipse/openvsx/blob/99c6be42c6f335c466d95b3ed8e6ed1d1f32944a/server/src/main/java/org/eclipse/openvsx/entities/ExtensionVersion.java",
    "raw_url": "https://github.com/eclipse/openvsx/raw/99c6be42c6f335c466d95b3ed8e6ed1d1f32944a/server/src/main/java/org/eclipse/openvsx/entities/ExtensionVersion.java",
    "contents_url": "https://api.github.com/repos/eclipse/openvsx/contents/server/src/main/java/org/eclipse/openvsx/entities/ExtensionVersion.java?ref=99c6be42c6f335c466d95b3ed8e6ed1d1f32944a",
    "patch": "@@ -76,6 +76,9 @@\n     @ElementCollection\n     List<String> categories;\n \n+    @ElementCollection\n+    List<String> extensionKind;\n+\n     @ElementCollection\n     List<String> tags;\n \n@@ -124,6 +127,7 @@ public ExtensionJson toExtensionJson() {\n         json.description = this.getDescription();\n         json.engines = this.getEnginesMap();\n         json.categories = this.getCategories();\n+        json.extensionKind = this.getExtensionKind();\n         json.tags = this.getTags();\n         json.license = this.getLicense();\n         json.homepage = this.getHomepage();\n@@ -291,6 +295,14 @@ public void setCategories(List<String> categories) {\n \t\tthis.categories = categories;\n \t}\n \n+\tpublic List<String> getExtensionKind() {\n+\t\treturn extensionKind;\n+\t}\n+\n+\tpublic void setExtensionKind(List<String> extensionKind) {\n+\t\tthis.extensionKind = extensionKind;\n+\t}\n+\n \tpublic List<String> getTags() {\n \t\treturn tags;\n \t}"
  },
  {
    "sha": "533241ba64ac3ff13ae0c5968b807be63c30e3fb",
    "filename": "server/src/main/java/org/eclipse/openvsx/entities/FileResource.java",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/eclipse/openvsx/blob/99c6be42c6f335c466d95b3ed8e6ed1d1f32944a/server/src/main/java/org/eclipse/openvsx/entities/FileResource.java",
    "raw_url": "https://github.com/eclipse/openvsx/raw/99c6be42c6f335c466d95b3ed8e6ed1d1f32944a/server/src/main/java/org/eclipse/openvsx/entities/FileResource.java",
    "contents_url": "https://api.github.com/repos/eclipse/openvsx/contents/server/src/main/java/org/eclipse/openvsx/entities/FileResource.java?ref=99c6be42c6f335c466d95b3ed8e6ed1d1f32944a",
    "patch": "@@ -27,6 +27,7 @@\n     public static final String README = \"readme\";\n     public static final String LICENSE = \"license\";\n     public static final String CHANGELOG = \"changelog\";\n+    public static final String WEB_RESOURCE = \"web-resource\";\n \n     // Storage types\n     public static final String STORAGE_DB = \"database\";"
  },
  {
    "sha": "d919b5de0a3a9f7fbe08bba28a59ddb5a958e0b5",
    "filename": "server/src/main/java/org/eclipse/openvsx/json/ExtensionJson.java",
    "status": "modified",
    "additions": 4,
    "deletions": 1,
    "changes": 5,
    "blob_url": "https://github.com/eclipse/openvsx/blob/99c6be42c6f335c466d95b3ed8e6ed1d1f32944a/server/src/main/java/org/eclipse/openvsx/json/ExtensionJson.java",
    "raw_url": "https://github.com/eclipse/openvsx/raw/99c6be42c6f335c466d95b3ed8e6ed1d1f32944a/server/src/main/java/org/eclipse/openvsx/json/ExtensionJson.java",
    "contents_url": "https://api.github.com/repos/eclipse/openvsx/contents/server/src/main/java/org/eclipse/openvsx/json/ExtensionJson.java?ref=99c6be42c6f335c466d95b3ed8e6ed1d1f32944a",
    "patch": "@@ -19,7 +19,7 @@\n import com.fasterxml.jackson.annotation.JsonInclude.Include;\n \n import io.swagger.annotations.ApiModel;\n-import io.swagger.annotations.ApiModelProperty;;\n+import io.swagger.annotations.ApiModelProperty;\n \n @ApiModel(\n     value = \"Extension\",\n@@ -112,6 +112,9 @@ public static ExtensionJson error(String message) {\n \n     public List<String> categories;\n \n+    @ApiModelProperty(\"An list that indicates where the extension should run in remote configurations. Values are \\\"ui\\\" (run locally), \\\"workspace\\\" (run on remote machine) and \\\"web\\\"\")\n+    public List<String> extensionKind;\n+\n     public List<String> tags;\n \n     @ApiModelProperty(\"License identifier\")"
  },
  {
    "sha": "e11a05663d2c17b540b75c681e0706cd7e989abe",
    "filename": "server/src/main/java/org/eclipse/openvsx/repositories/FileResourceRepository.java",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/eclipse/openvsx/blob/99c6be42c6f335c466d95b3ed8e6ed1d1f32944a/server/src/main/java/org/eclipse/openvsx/repositories/FileResourceRepository.java",
    "raw_url": "https://github.com/eclipse/openvsx/raw/99c6be42c6f335c466d95b3ed8e6ed1d1f32944a/server/src/main/java/org/eclipse/openvsx/repositories/FileResourceRepository.java",
    "contents_url": "https://api.github.com/repos/eclipse/openvsx/contents/server/src/main/java/org/eclipse/openvsx/repositories/FileResourceRepository.java?ref=99c6be42c6f335c466d95b3ed8e6ed1d1f32944a",
    "patch": "@@ -27,6 +27,8 @@\n \n     FileResource findByExtensionAndType(ExtensionVersion extVersion, String type);\n \n+    FileResource findByExtensionAndTypeAndNameIgnoreCase(ExtensionVersion extVersion, String type, String name);\n+\n     Streamable<FileResource> findByExtensionAndTypeIn(ExtensionVersion extVersion, Collection<String> types);\n \n }\n\\ No newline at end of file"
  },
  {
    "sha": "6021245da03fe10aad2520bd0c09ff2c947b7187",
    "filename": "server/src/main/java/org/eclipse/openvsx/repositories/RepositoryService.java",
    "status": "modified",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/eclipse/openvsx/blob/99c6be42c6f335c466d95b3ed8e6ed1d1f32944a/server/src/main/java/org/eclipse/openvsx/repositories/RepositoryService.java",
    "raw_url": "https://github.com/eclipse/openvsx/raw/99c6be42c6f335c466d95b3ed8e6ed1d1f32944a/server/src/main/java/org/eclipse/openvsx/repositories/RepositoryService.java",
    "contents_url": "https://api.github.com/repos/eclipse/openvsx/contents/server/src/main/java/org/eclipse/openvsx/repositories/RepositoryService.java?ref=99c6be42c6f335c466d95b3ed8e6ed1d1f32944a",
    "patch": "@@ -151,6 +151,10 @@ public FileResource findFileByName(ExtensionVersion extVersion, String name) {\n         return fileResourceRepo.findByExtensionAndNameIgnoreCase(extVersion, name);\n     }\n \n+    public FileResource findFileByTypeAndName(ExtensionVersion extVersion, String type, String name) {\n+        return fileResourceRepo.findByExtensionAndTypeAndNameIgnoreCase(extVersion, type, name);\n+    }\n+\n     public FileResource findFileByType(ExtensionVersion extVersion, String type) {\n         return fileResourceRepo.findByExtensionAndType(extVersion, type);\n     }"
  },
  {
    "sha": "b2b7cade6a7843a319e83ca689a00033f8a42042",
    "filename": "server/src/main/java/org/eclipse/openvsx/storage/StorageUtilService.java",
    "status": "modified",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/eclipse/openvsx/blob/99c6be42c6f335c466d95b3ed8e6ed1d1f32944a/server/src/main/java/org/eclipse/openvsx/storage/StorageUtilService.java",
    "raw_url": "https://github.com/eclipse/openvsx/raw/99c6be42c6f335c466d95b3ed8e6ed1d1f32944a/server/src/main/java/org/eclipse/openvsx/storage/StorageUtilService.java",
    "contents_url": "https://api.github.com/repos/eclipse/openvsx/contents/server/src/main/java/org/eclipse/openvsx/storage/StorageUtilService.java?ref=99c6be42c6f335c466d95b3ed8e6ed1d1f32944a",
    "patch": "@@ -15,6 +15,7 @@\n import java.net.URLConnection;\n import java.util.ArrayList;\n import java.util.Arrays;\n+import java.util.HashMap;\n import java.util.Map;\n import java.util.concurrent.TimeUnit;\n \n@@ -155,6 +156,19 @@ public void addFileUrls(ExtensionVersion extVersion, String serverUrl, Map<Strin\n         }\n     }\n \n+    public Map<String, String> getWebResourceUrls(ExtensionVersion extVersion, String serverUrl) {\n+        var name2Url = new HashMap<String, String>();\n+        var extension = extVersion.getExtension();\n+        var namespace = extension.getNamespace();\n+        var versionUrl = UrlUtil.createApiUrl(serverUrl, \"api\", namespace.getName(), extension.getName(), extVersion.getVersion());\n+        var resources = repositories.findFilesByType(extVersion, Arrays.asList(WEB_RESOURCE));\n+        for (var resource : resources) {\n+            var fileUrl = UrlUtil.createApiUrl(versionUrl, \"file\", resource.getName());\n+            name2Url.put(resource.getName(), fileUrl);\n+        }\n+        return name2Url;\n+    }\n+\n     /**\n      * Register a package file download by increasing its download count.\n      */"
  },
  {
    "sha": "871e750d8fd5131f506cc07f4a83a9621116d40f",
    "filename": "server/src/main/resources/db/migration/V1_10__Extension_Kind.sql",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/eclipse/openvsx/blob/99c6be42c6f335c466d95b3ed8e6ed1d1f32944a/server/src/main/resources/db/migration/V1_10__Extension_Kind.sql",
    "raw_url": "https://github.com/eclipse/openvsx/raw/99c6be42c6f335c466d95b3ed8e6ed1d1f32944a/server/src/main/resources/db/migration/V1_10__Extension_Kind.sql",
    "contents_url": "https://api.github.com/repos/eclipse/openvsx/contents/server/src/main/resources/db/migration/V1_10__Extension_Kind.sql?ref=99c6be42c6f335c466d95b3ed8e6ed1d1f32944a",
    "patch": "@@ -0,0 +1,7 @@\n+CREATE TABLE public.extension_version_extension_kind (\n+    extension_version_id bigint NOT NULL,\n+    extension_kind character varying(255)\n+);\n+\n+ALTER TABLE ONLY public.extension_version_extension_kind\n+    ADD CONSTRAINT extension_kind_extension_version_fkey FOREIGN KEY (extension_version_id) REFERENCES public.extension_version(id);"
  },
  {
    "sha": "811c48440d9fdff358ec76e38bd08d53a8b963eb",
    "filename": "server/src/test/java/org/eclipse/openvsx/ExtensionProcessorTest.java",
    "status": "modified",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/eclipse/openvsx/blob/99c6be42c6f335c466d95b3ed8e6ed1d1f32944a/server/src/test/java/org/eclipse/openvsx/ExtensionProcessorTest.java",
    "raw_url": "https://github.com/eclipse/openvsx/raw/99c6be42c6f335c466d95b3ed8e6ed1d1f32944a/server/src/test/java/org/eclipse/openvsx/ExtensionProcessorTest.java",
    "contents_url": "https://api.github.com/repos/eclipse/openvsx/contents/server/src/test/java/org/eclipse/openvsx/ExtensionProcessorTest.java?ref=99c6be42c6f335c466d95b3ed8e6ed1d1f32944a",
    "patch": "@@ -22,7 +22,7 @@\n     void testTodoTree() throws Exception {\n         try (\n             var stream = getClass().getResourceAsStream(\"util/todo-tree.zip\");\n-            var processor = new ExtensionProcessor(stream);\n+            var processor = new ExtensionProcessor(stream, new PublishOptions(false));\n         ) {\n             assertThat(processor.getNamespace()).isEqualTo(\"Gruntfuggly\");\n             assertThat(processor.getExtensionName()).isEqualTo(\"todo-tree\");\n@@ -47,7 +47,7 @@ void testTodoTree() throws Exception {\n     void testChangelog() throws Exception {\n         try (\n             var stream = getClass().getResourceAsStream(\"util/changelog.zip\");\n-            var processor = new ExtensionProcessor(stream);\n+            var processor = new ExtensionProcessor(stream, new PublishOptions(false));\n         ) {\n             checkResource(processor, FileResource.CHANGELOG, \"CHANGELOG.md\");\n         }\n@@ -57,7 +57,7 @@ void testChangelog() throws Exception {\n     void testCapitalizedCaseForResources() throws Exception {\n         try (\n             var stream = getClass().getResourceAsStream(\"util/with-capitalized-case.zip\");\n-            var processor = new ExtensionProcessor(stream);\n+            var processor = new ExtensionProcessor(stream, new PublishOptions(false));\n         ) {\n             checkResource(processor, FileResource.CHANGELOG, \"Changelog.md\");\n             checkResource(processor, FileResource.README, \"Readme.md\");\n@@ -69,7 +69,7 @@ void testCapitalizedCaseForResources() throws Exception {\n     void testMinorCaseForResources() throws Exception {\n         try (\n             var stream = getClass().getResourceAsStream(\"util/with-minor-case.zip\");\n-            var processor = new ExtensionProcessor(stream);\n+            var processor = new ExtensionProcessor(stream, new PublishOptions(false));\n         ) {\n             checkResource(processor, FileResource.CHANGELOG, \"changelog.md\");\n             checkResource(processor, FileResource.README, \"readme.md\");"
  },
  {
    "sha": "95b3413daac92082b2df9787646c639c757d65ea",
    "filename": "server/test-extensions.gradle",
    "status": "modified",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/eclipse/openvsx/blob/99c6be42c6f335c466d95b3ed8e6ed1d1f32944a/server/test-extensions.gradle",
    "raw_url": "https://github.com/eclipse/openvsx/raw/99c6be42c6f335c466d95b3ed8e6ed1d1f32944a/server/test-extensions.gradle",
    "contents_url": "https://api.github.com/repos/eclipse/openvsx/contents/server/test-extensions.gradle?ref=99c6be42c6f335c466d95b3ed8e6ed1d1f32944a",
    "patch": "@@ -156,5 +156,9 @@ task downloadTestExtensions {\n             src \"https://github.com/formulahendry/vscode-auto-close-tag/releases/download/0.5.5/auto-close-tag-0.5.5.vsix\"\n             dest \"${buildDir}/test-extensions/formulahendry.auto-close-tag-0.5.5.vsix\"\n         }\n+        download {\n+            src \"https://github.com/VSCodeVim/Vim/releases/download/v1.18.9/vim-1.18.9.vsix\"\n+            dest \"${buildDir}/test-extensions/vim-1.18.9.vsix\"\n+        }\n     }\n }"
  }
]
