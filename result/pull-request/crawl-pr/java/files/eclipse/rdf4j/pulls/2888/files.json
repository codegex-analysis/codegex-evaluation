[
  {
    "sha": "63305da215a4b5186224f27b8b96cfa9785a3c6c",
    "filename": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/Exportable.java",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/eclipse/rdf4j/blob/908977b9cccf612c5c03eb98ed5381062e80ee6c/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/Exportable.java",
    "raw_url": "https://github.com/eclipse/rdf4j/raw/908977b9cccf612c5c03eb98ed5381062e80ee6c/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/Exportable.java",
    "contents_url": "https://api.github.com/repos/eclipse/rdf4j/contents/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/Exportable.java?ref=908977b9cccf612c5c03eb98ed5381062e80ee6c",
    "patch": "@@ -8,6 +8,5 @@\n \n public interface Exportable {\n \n-\tvoid toModel(Resource subject, IRI predicate, Model model, Set<Resource> cycleDetection,\n-\t\t\tSet<Resource> rdfListDedupe);\n+\tvoid toModel(Resource subject, IRI predicate, Model model, Set<Resource> cycleDetection);\n }"
  },
  {
    "sha": "952f00f73df45b3f897366d9251d73715b916ee7",
    "filename": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/HelperTool.java",
    "status": "modified",
    "additions": 3,
    "deletions": 1,
    "changes": 4,
    "blob_url": "https://github.com/eclipse/rdf4j/blob/908977b9cccf612c5c03eb98ed5381062e80ee6c/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/HelperTool.java",
    "raw_url": "https://github.com/eclipse/rdf4j/raw/908977b9cccf612c5c03eb98ed5381062e80ee6c/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/HelperTool.java",
    "contents_url": "https://api.github.com/repos/eclipse/rdf4j/contents/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/HelperTool.java?ref=908977b9cccf612c5c03eb98ed5381062e80ee6c",
    "patch": "@@ -21,13 +21,15 @@ public static void listToRdf(Collection<? extends Value> values, Resource head,\n \t\t// The Turtle parser does not add \"a rdf:List\" statements when parsing the shorthand list format,\n \t\t// so we don't add rdf:List when writing it out either.\n \n+\t\tint counter = 0;\n+\n \t\tIterator<? extends Value> iter = values.iterator();\n \t\twhile (iter.hasNext()) {\n \t\t\tValue value = iter.next();\n \t\t\tmodel.add(head, RDF.FIRST, value);\n \n \t\t\tif (iter.hasNext()) {\n-\t\t\t\tResource next = bnode();\n+\t\t\t\tResource next = bnode(head.stringValue() + \"_rdf_list_item_\" + (++counter));\n \t\t\t\tmodel.add(head, RDF.REST, next);\n \t\t\t\thead = next;\n \t\t\t} else {"
  },
  {
    "sha": "462e22545f28c5823ab6bbdffd657ab0fc44cfcb",
    "filename": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/NodeShape.java",
    "status": "modified",
    "additions": 3,
    "deletions": 4,
    "changes": 7,
    "blob_url": "https://github.com/eclipse/rdf4j/blob/908977b9cccf612c5c03eb98ed5381062e80ee6c/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/NodeShape.java",
    "raw_url": "https://github.com/eclipse/rdf4j/raw/908977b9cccf612c5c03eb98ed5381062e80ee6c/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/NodeShape.java",
    "contents_url": "https://api.github.com/repos/eclipse/rdf4j/contents/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/NodeShape.java?ref=908977b9cccf612c5c03eb98ed5381062e80ee6c",
    "patch": "@@ -81,9 +81,8 @@ protected NodeShape shallowClone() {\n \t}\n \n \t@Override\n-\tpublic void toModel(Resource subject, IRI predicate, Model model, Set<Resource> cycleDetection,\n-\t\t\tSet<Resource> rdfListDedupe) {\n-\t\tsuper.toModel(subject, predicate, model, cycleDetection, rdfListDedupe);\n+\tpublic void toModel(Resource subject, IRI predicate, Model model, Set<Resource> cycleDetection) {\n+\t\tsuper.toModel(subject, predicate, model, cycleDetection);\n \t\tmodel.add(getId(), RDF.TYPE, SHACL.NODE_SHAPE);\n \n \t\tif (subject != null) {\n@@ -100,7 +99,7 @@ public void toModel(Resource subject, IRI predicate, Model model, Set<Resource>\n \t\t}\n \t\tcycleDetection.add(getId());\n \n-\t\tconstraintComponents.forEach(c -> c.toModel(getId(), null, model, cycleDetection, rdfListDedupe));\n+\t\tconstraintComponents.forEach(c -> c.toModel(getId(), null, model, cycleDetection));\n \n \t}\n "
  },
  {
    "sha": "caee5c5af47d5694ec4b32c8863e32401f8d0a1d",
    "filename": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/PropertyShape.java",
    "status": "modified",
    "additions": 4,
    "deletions": 5,
    "changes": 9,
    "blob_url": "https://github.com/eclipse/rdf4j/blob/908977b9cccf612c5c03eb98ed5381062e80ee6c/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/PropertyShape.java",
    "raw_url": "https://github.com/eclipse/rdf4j/raw/908977b9cccf612c5c03eb98ed5381062e80ee6c/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/PropertyShape.java",
    "contents_url": "https://api.github.com/repos/eclipse/rdf4j/contents/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/PropertyShape.java?ref=908977b9cccf612c5c03eb98ed5381062e80ee6c",
    "patch": "@@ -88,10 +88,9 @@ protected Shape shallowClone() {\n \t}\n \n \t@Override\n-\tpublic void toModel(Resource subject, IRI predicate, Model model, Set<Resource> cycleDetection,\n-\t\t\tSet<Resource> rdfListDedupe) {\n+\tpublic void toModel(Resource subject, IRI predicate, Model model, Set<Resource> cycleDetection) {\n \n-\t\tsuper.toModel(subject, predicate, model, cycleDetection, rdfListDedupe);\n+\t\tsuper.toModel(subject, predicate, model, cycleDetection);\n \t\tmodel.add(getId(), RDF.TYPE, SHACL.PROPERTY_SHAPE);\n \n \t\tif (subject != null) {\n@@ -103,14 +102,14 @@ public void toModel(Resource subject, IRI predicate, Model model, Set<Resource>\n \t\t}\n \n \t\tmodel.add(getId(), SHACL.PATH, path.getId());\n-\t\tpath.toModel(path.getId(), null, model, cycleDetection, rdfListDedupe);\n+\t\tpath.toModel(path.getId(), null, model, cycleDetection);\n \n \t\tif (cycleDetection.contains(getId())) {\n \t\t\treturn;\n \t\t}\n \t\tcycleDetection.add(getId());\n \n-\t\tconstraintComponents.forEach(c -> c.toModel(getId(), null, model, cycleDetection, rdfListDedupe));\n+\t\tconstraintComponents.forEach(c -> c.toModel(getId(), null, model, cycleDetection));\n \n \t}\n "
  },
  {
    "sha": "81a3cca018f4e04bf5fa0f5baf2c33832c34ba97",
    "filename": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/Shape.java",
    "status": "modified",
    "additions": 7,
    "deletions": 8,
    "changes": 15,
    "blob_url": "https://github.com/eclipse/rdf4j/blob/908977b9cccf612c5c03eb98ed5381062e80ee6c/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/Shape.java",
    "raw_url": "https://github.com/eclipse/rdf4j/raw/908977b9cccf612c5c03eb98ed5381062e80ee6c/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/Shape.java",
    "contents_url": "https://api.github.com/repos/eclipse/rdf4j/contents/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/Shape.java?ref=908977b9cccf612c5c03eb98ed5381062e80ee6c",
    "patch": "@@ -16,6 +16,7 @@\n import org.eclipse.rdf4j.model.impl.DynamicModel;\n import org.eclipse.rdf4j.model.impl.LinkedHashModelFactory;\n import org.eclipse.rdf4j.model.util.ModelBuilder;\n+import org.eclipse.rdf4j.model.util.Values;\n import org.eclipse.rdf4j.model.vocabulary.DASH;\n import org.eclipse.rdf4j.model.vocabulary.RDF;\n import org.eclipse.rdf4j.model.vocabulary.RSX;\n@@ -153,17 +154,15 @@ public Resource getId() {\n \n \t/**\n \t *\n-\t * @param model         the model to export the shapes into\n-\t * @param rdfListDedupe a set used to dedupe the output\n+\t * @param model the model to export the shapes into\n \t * @return the provided model\n \t */\n-\tpublic Model toModel(Model model, Set<Resource> rdfListDedupe) {\n-\t\ttoModel(null, null, model, new HashSet<>(), rdfListDedupe);\n+\tpublic Model toModel(Model model) {\n+\t\ttoModel(null, null, model, new HashSet<>());\n \t\treturn model;\n \t}\n \n-\tpublic void toModel(Resource subject, IRI predicate, Model model, Set<Resource> cycleDetection,\n-\t\t\tSet<Resource> rdfListDedupe) {\n+\tpublic void toModel(Resource subject, IRI predicate, Model model, Set<Resource> cycleDetection) {\n \t\tModelBuilder modelBuilder = new ModelBuilder();\n \n \t\tmodelBuilder.subject(getId());\n@@ -173,7 +172,7 @@ public void toModel(Resource subject, IRI predicate, Model model, Set<Resource>\n \t\t}\n \n \t\ttarget.forEach(t -> {\n-\t\t\tt.toModel(getId(), null, model, cycleDetection, rdfListDedupe);\n+\t\t\tt.toModel(getId(), null, model, cycleDetection);\n \t\t});\n \n \t\tmodel.addAll(modelBuilder.build());\n@@ -540,7 +539,7 @@ private static void calculateTargetChain(List<Shape> parsed) {\n \n \t@Override\n \tpublic String toString() {\n-\t\tModel statements = toModel(new DynamicModel(new LinkedHashModelFactory()), new HashSet<>());\n+\t\tModel statements = toModel(new DynamicModel(new LinkedHashModelFactory()));\n \t\tstatements.setNamespace(SHACL.NS);\n \t\tstatements.setNamespace(XSD.NS);\n \t\tWriterConfig writerConfig = new WriterConfig();"
  },
  {
    "sha": "ee1116d3f3528efa9cdee57de4078b82026413b5",
    "filename": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/AndConstraintComponent.java",
    "status": "modified",
    "additions": 3,
    "deletions": 7,
    "changes": 10,
    "blob_url": "https://github.com/eclipse/rdf4j/blob/908977b9cccf612c5c03eb98ed5381062e80ee6c/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/AndConstraintComponent.java",
    "raw_url": "https://github.com/eclipse/rdf4j/raw/908977b9cccf612c5c03eb98ed5381062e80ee6c/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/AndConstraintComponent.java",
    "contents_url": "https://api.github.com/repos/eclipse/rdf4j/contents/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/AndConstraintComponent.java?ref=908977b9cccf612c5c03eb98ed5381062e80ee6c",
    "patch": "@@ -57,19 +57,15 @@ public AndConstraintComponent(AndConstraintComponent andConstraintComponent) {\n \t}\n \n \t@Override\n-\tpublic void toModel(Resource subject, IRI predicate, Model model, Set<Resource> cycleDetection,\n-\t\t\tSet<Resource> rdfListDedupe) {\n+\tpublic void toModel(Resource subject, IRI predicate, Model model, Set<Resource> cycleDetection) {\n \t\tmodel.add(subject, SHACL.AND, getId());\n \n \t\tif (!cycleDetection.contains(getId())) {\n \t\t\tcycleDetection.add(getId());\n-\t\t\tand.forEach(o -> o.toModel(null, null, model, cycleDetection, rdfListDedupe));\n+\t\t\tand.forEach(o -> o.toModel(null, null, model, cycleDetection));\n \t\t}\n \n-\t\tif (!rdfListDedupe.contains(getId())) {\n-\t\t\trdfListDedupe.add(getId());\n-\t\t\tHelperTool.listToRdf(and.stream().map(Shape::getId).collect(Collectors.toList()), getId(), model);\n-\t\t}\n+\t\tHelperTool.listToRdf(and.stream().map(Shape::getId).collect(Collectors.toList()), getId(), model);\n \n \t}\n "
  },
  {
    "sha": "d398a9b4a179517936b2ee977c31b30eee225a2d",
    "filename": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/ClassConstraintComponent.java",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/eclipse/rdf4j/blob/908977b9cccf612c5c03eb98ed5381062e80ee6c/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/ClassConstraintComponent.java",
    "raw_url": "https://github.com/eclipse/rdf4j/raw/908977b9cccf612c5c03eb98ed5381062e80ee6c/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/ClassConstraintComponent.java",
    "contents_url": "https://api.github.com/repos/eclipse/rdf4j/contents/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/ClassConstraintComponent.java?ref=908977b9cccf612c5c03eb98ed5381062e80ee6c",
    "patch": "@@ -35,8 +35,7 @@ public ClassConstraintComponent(Resource clazz) {\n \t}\n \n \t@Override\n-\tpublic void toModel(Resource subject, IRI predicate, Model model, Set<Resource> cycleDetection,\n-\t\t\tSet<Resource> rdfListDedupe) {\n+\tpublic void toModel(Resource subject, IRI predicate, Model model, Set<Resource> cycleDetection) {\n \t\tmodel.add(subject, SHACL.CLASS, clazz);\n \t}\n "
  },
  {
    "sha": "b6de1adc8da5504c0b392d91cb7bd8a014e07ef3",
    "filename": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/ClosedConstraintComponent.java",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/eclipse/rdf4j/blob/908977b9cccf612c5c03eb98ed5381062e80ee6c/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/ClosedConstraintComponent.java",
    "raw_url": "https://github.com/eclipse/rdf4j/raw/908977b9cccf612c5c03eb98ed5381062e80ee6c/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/ClosedConstraintComponent.java",
    "contents_url": "https://api.github.com/repos/eclipse/rdf4j/contents/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/ClosedConstraintComponent.java?ref=908977b9cccf612c5c03eb98ed5381062e80ee6c",
    "patch": "@@ -48,8 +48,7 @@ public ClosedConstraintComponent(ClosedConstraintComponent closedConstraintCompo\n \t}\n \n \t@Override\n-\tpublic void toModel(Resource subject, IRI predicate, Model model, Set<Resource> cycleDetection,\n-\t\t\tSet<Resource> rdfListDedupe) {\n+\tpublic void toModel(Resource subject, IRI predicate, Model model, Set<Resource> cycleDetection) {\n \t\tmodel.add(subject, SHACL.CLOSED, literal(true));\n \t\t// TODO: add ignored properties to model!\n "
  },
  {
    "sha": "76a1f20357a89cc73b85183c0933c8cc724509be",
    "filename": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/DashHasValueInConstraintComponent.java",
    "status": "modified",
    "additions": 3,
    "deletions": 6,
    "changes": 9,
    "blob_url": "https://github.com/eclipse/rdf4j/blob/908977b9cccf612c5c03eb98ed5381062e80ee6c/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/DashHasValueInConstraintComponent.java",
    "raw_url": "https://github.com/eclipse/rdf4j/raw/908977b9cccf612c5c03eb98ed5381062e80ee6c/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/DashHasValueInConstraintComponent.java",
    "contents_url": "https://api.github.com/repos/eclipse/rdf4j/contents/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/DashHasValueInConstraintComponent.java?ref=908977b9cccf612c5c03eb98ed5381062e80ee6c",
    "patch": "@@ -49,13 +49,10 @@ public DashHasValueInConstraintComponent(DashHasValueInConstraintComponent dashH\n \t}\n \n \t@Override\n-\tpublic void toModel(Resource subject, IRI predicate, Model model, Set<Resource> cycleDetection,\n-\t\t\tSet<Resource> rdfListDedupe) {\n+\tpublic void toModel(Resource subject, IRI predicate, Model model, Set<Resource> cycleDetection) {\n \t\tmodel.add(subject, DASH.hasValueIn, getId());\n-\t\tif (!rdfListDedupe.contains(getId())) {\n-\t\t\trdfListDedupe.add(getId());\n-\t\t\tHelperTool.listToRdf(hasValueIn, getId(), model);\n-\t\t}\n+\n+\t\tHelperTool.listToRdf(hasValueIn, getId(), model);\n \n \t}\n "
  },
  {
    "sha": "bfaae85b8b6df887efbb48d307ed4761334c497a",
    "filename": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/DatatypeConstraintComponent.java",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/eclipse/rdf4j/blob/908977b9cccf612c5c03eb98ed5381062e80ee6c/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/DatatypeConstraintComponent.java",
    "raw_url": "https://github.com/eclipse/rdf4j/raw/908977b9cccf612c5c03eb98ed5381062e80ee6c/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/DatatypeConstraintComponent.java",
    "contents_url": "https://api.github.com/repos/eclipse/rdf4j/contents/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/DatatypeConstraintComponent.java?ref=908977b9cccf612c5c03eb98ed5381062e80ee6c",
    "patch": "@@ -21,8 +21,7 @@ public DatatypeConstraintComponent(Resource datatype) {\n \t}\n \n \t@Override\n-\tpublic void toModel(Resource subject, IRI predicate, Model model, Set<Resource> cycleDetection,\n-\t\t\tSet<Resource> rdfListDedupe) {\n+\tpublic void toModel(Resource subject, IRI predicate, Model model, Set<Resource> cycleDetection) {\n \t\tmodel.add(subject, SHACL.DATATYPE, datatype);\n \t}\n "
  },
  {
    "sha": "324f22d36f4e3c05851e24eb967726720c5a420c",
    "filename": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/DisjointConstraintComponent.java",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/eclipse/rdf4j/blob/908977b9cccf612c5c03eb98ed5381062e80ee6c/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/DisjointConstraintComponent.java",
    "raw_url": "https://github.com/eclipse/rdf4j/raw/908977b9cccf612c5c03eb98ed5381062e80ee6c/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/DisjointConstraintComponent.java",
    "contents_url": "https://api.github.com/repos/eclipse/rdf4j/contents/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/DisjointConstraintComponent.java?ref=908977b9cccf612c5c03eb98ed5381062e80ee6c",
    "patch": "@@ -17,8 +17,7 @@ public DisjointConstraintComponent(IRI predicate) {\n \t}\n \n \t@Override\n-\tpublic void toModel(Resource subject, IRI predicate, Model model, Set<Resource> cycleDetection,\n-\t\t\tSet<Resource> rdfListDedupe) {\n+\tpublic void toModel(Resource subject, IRI predicate, Model model, Set<Resource> cycleDetection) {\n \t\tmodel.add(subject, SHACL.DISJOINT, this.predicate);\n \t}\n "
  },
  {
    "sha": "95afd1603eba51b6d699c304e187c2465f5dd550",
    "filename": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/EqualsConstraintComponent.java",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/eclipse/rdf4j/blob/908977b9cccf612c5c03eb98ed5381062e80ee6c/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/EqualsConstraintComponent.java",
    "raw_url": "https://github.com/eclipse/rdf4j/raw/908977b9cccf612c5c03eb98ed5381062e80ee6c/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/EqualsConstraintComponent.java",
    "contents_url": "https://api.github.com/repos/eclipse/rdf4j/contents/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/EqualsConstraintComponent.java?ref=908977b9cccf612c5c03eb98ed5381062e80ee6c",
    "patch": "@@ -17,8 +17,7 @@ public EqualsConstraintComponent(IRI predicate) {\n \t}\n \n \t@Override\n-\tpublic void toModel(Resource subject, IRI predicate, Model model, Set<Resource> cycleDetection,\n-\t\t\tSet<Resource> rdfListDedupe) {\n+\tpublic void toModel(Resource subject, IRI predicate, Model model, Set<Resource> cycleDetection) {\n \t\tmodel.add(subject, SHACL.EQUALS, this.predicate);\n \t}\n "
  },
  {
    "sha": "af82d1dd22fd0b79bd331826da11e7ea13f64568",
    "filename": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/HasValueConstraintComponent.java",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/eclipse/rdf4j/blob/908977b9cccf612c5c03eb98ed5381062e80ee6c/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/HasValueConstraintComponent.java",
    "raw_url": "https://github.com/eclipse/rdf4j/raw/908977b9cccf612c5c03eb98ed5381062e80ee6c/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/HasValueConstraintComponent.java",
    "contents_url": "https://api.github.com/repos/eclipse/rdf4j/contents/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/HasValueConstraintComponent.java?ref=908977b9cccf612c5c03eb98ed5381062e80ee6c",
    "patch": "@@ -39,8 +39,7 @@ public HasValueConstraintComponent(Value hasValue) {\n \t}\n \n \t@Override\n-\tpublic void toModel(Resource subject, IRI predicate, Model model, Set<Resource> cycleDetection,\n-\t\t\tSet<Resource> rdfListDedupe) {\n+\tpublic void toModel(Resource subject, IRI predicate, Model model, Set<Resource> cycleDetection) {\n \t\tmodel.add(subject, SHACL.HAS_VALUE, hasValue);\n \t}\n "
  },
  {
    "sha": "500c72b3da27e34e17ddda5f2d2486cece1628f3",
    "filename": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/InConstraintComponent.java",
    "status": "modified",
    "additions": 3,
    "deletions": 6,
    "changes": 9,
    "blob_url": "https://github.com/eclipse/rdf4j/blob/908977b9cccf612c5c03eb98ed5381062e80ee6c/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/InConstraintComponent.java",
    "raw_url": "https://github.com/eclipse/rdf4j/raw/908977b9cccf612c5c03eb98ed5381062e80ee6c/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/InConstraintComponent.java",
    "contents_url": "https://api.github.com/repos/eclipse/rdf4j/contents/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/InConstraintComponent.java?ref=908977b9cccf612c5c03eb98ed5381062e80ee6c",
    "patch": "@@ -33,13 +33,10 @@ public InConstraintComponent(InConstraintComponent inConstraintComponent) {\n \t}\n \n \t@Override\n-\tpublic void toModel(Resource subject, IRI predicate, Model model, Set<Resource> cycleDetection,\n-\t\t\tSet<Resource> rdfListDedupe) {\n+\tpublic void toModel(Resource subject, IRI predicate, Model model, Set<Resource> cycleDetection) {\n \t\tmodel.add(subject, SHACL.IN, getId());\n-\t\tif (!rdfListDedupe.contains(getId())) {\n-\t\t\trdfListDedupe.add(getId());\n-\t\t\tHelperTool.listToRdf(in, getId(), model);\n-\t\t}\n+\n+\t\tHelperTool.listToRdf(in, getId(), model);\n \n \t}\n "
  },
  {
    "sha": "0bf8b1d052114c96e914a2245249df10c3677720",
    "filename": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/LanguageInConstraintComponent.java",
    "status": "modified",
    "additions": 4,
    "deletions": 8,
    "changes": 12,
    "blob_url": "https://github.com/eclipse/rdf4j/blob/908977b9cccf612c5c03eb98ed5381062e80ee6c/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/LanguageInConstraintComponent.java",
    "raw_url": "https://github.com/eclipse/rdf4j/raw/908977b9cccf612c5c03eb98ed5381062e80ee6c/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/LanguageInConstraintComponent.java",
    "contents_url": "https://api.github.com/repos/eclipse/rdf4j/contents/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/LanguageInConstraintComponent.java?ref=908977b9cccf612c5c03eb98ed5381062e80ee6c",
    "patch": "@@ -52,16 +52,12 @@ private LanguageInConstraintComponent(LanguageInConstraintComponent languageInCo\n \t}\n \n \t@Override\n-\tpublic void toModel(Resource subject, IRI predicate, Model model, Set<Resource> cycleDetection,\n-\t\t\tSet<Resource> rdfListDedupe) {\n+\tpublic void toModel(Resource subject, IRI predicate, Model model, Set<Resource> cycleDetection) {\n \t\tmodel.add(subject, SHACL.LANGUAGE_IN, getId());\n-\t\tif (!rdfListDedupe.contains(getId())) {\n-\t\t\trdfListDedupe.add(getId());\n \n-\t\t\tHelperTool.listToRdf(languageIn.stream()\n-\t\t\t\t\t.map(Values::literal)\n-\t\t\t\t\t.collect(Collectors.toList()), getId(), model);\n-\t\t}\n+\t\tHelperTool.listToRdf(languageIn.stream()\n+\t\t\t\t.map(Values::literal)\n+\t\t\t\t.collect(Collectors.toList()), getId(), model);\n \n \t}\n "
  },
  {
    "sha": "8bad268f65ce284b6b65642f5f9f60af620ca2f5",
    "filename": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/LessThanConstraintComponent.java",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/eclipse/rdf4j/blob/908977b9cccf612c5c03eb98ed5381062e80ee6c/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/LessThanConstraintComponent.java",
    "raw_url": "https://github.com/eclipse/rdf4j/raw/908977b9cccf612c5c03eb98ed5381062e80ee6c/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/LessThanConstraintComponent.java",
    "contents_url": "https://api.github.com/repos/eclipse/rdf4j/contents/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/LessThanConstraintComponent.java?ref=908977b9cccf612c5c03eb98ed5381062e80ee6c",
    "patch": "@@ -17,8 +17,7 @@ public LessThanConstraintComponent(IRI predicate) {\n \t}\n \n \t@Override\n-\tpublic void toModel(Resource subject, IRI predicate, Model model, Set<Resource> cycleDetection,\n-\t\t\tSet<Resource> rdfListDedupe) {\n+\tpublic void toModel(Resource subject, IRI predicate, Model model, Set<Resource> cycleDetection) {\n \t\tmodel.add(subject, SHACL.LESS_THAN, this.predicate);\n \t}\n "
  },
  {
    "sha": "22eb1a74214390bd4487fd6eafd52f17bf879078",
    "filename": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/LessThanOrEqualsConstraintComponent.java",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/eclipse/rdf4j/blob/908977b9cccf612c5c03eb98ed5381062e80ee6c/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/LessThanOrEqualsConstraintComponent.java",
    "raw_url": "https://github.com/eclipse/rdf4j/raw/908977b9cccf612c5c03eb98ed5381062e80ee6c/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/LessThanOrEqualsConstraintComponent.java",
    "contents_url": "https://api.github.com/repos/eclipse/rdf4j/contents/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/LessThanOrEqualsConstraintComponent.java?ref=908977b9cccf612c5c03eb98ed5381062e80ee6c",
    "patch": "@@ -17,8 +17,7 @@ public LessThanOrEqualsConstraintComponent(IRI predicate) {\n \t}\n \n \t@Override\n-\tpublic void toModel(Resource subject, IRI predicate, Model model, Set<Resource> cycleDetection,\n-\t\t\tSet<Resource> rdfListDedupe) {\n+\tpublic void toModel(Resource subject, IRI predicate, Model model, Set<Resource> cycleDetection) {\n \t\tmodel.add(subject, SHACL.LESS_THAN_OR_EQUALS, this.predicate);\n \t}\n "
  },
  {
    "sha": "551da93d24c1762094f01d238fa08448ec1e8218",
    "filename": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/MaxCountConstraintComponent.java",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/eclipse/rdf4j/blob/908977b9cccf612c5c03eb98ed5381062e80ee6c/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/MaxCountConstraintComponent.java",
    "raw_url": "https://github.com/eclipse/rdf4j/raw/908977b9cccf612c5c03eb98ed5381062e80ee6c/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/MaxCountConstraintComponent.java",
    "contents_url": "https://api.github.com/repos/eclipse/rdf4j/contents/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/MaxCountConstraintComponent.java?ref=908977b9cccf612c5c03eb98ed5381062e80ee6c",
    "patch": "@@ -35,8 +35,7 @@ public MaxCountConstraintComponent(long maxCount) {\n \t}\n \n \t@Override\n-\tpublic void toModel(Resource subject, IRI predicate, Model model, Set<Resource> cycleDetection,\n-\t\t\tSet<Resource> rdfListDedupe) {\n+\tpublic void toModel(Resource subject, IRI predicate, Model model, Set<Resource> cycleDetection) {\n \t\tmodel.add(subject, SHACL.MAX_COUNT, literal(BigInteger.valueOf(maxCount)));\n \t}\n "
  },
  {
    "sha": "820dfd8be172445314f4c9c1b92453ea171f0cab",
    "filename": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/MaxExclusiveConstraintComponent.java",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/eclipse/rdf4j/blob/908977b9cccf612c5c03eb98ed5381062e80ee6c/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/MaxExclusiveConstraintComponent.java",
    "raw_url": "https://github.com/eclipse/rdf4j/raw/908977b9cccf612c5c03eb98ed5381062e80ee6c/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/MaxExclusiveConstraintComponent.java",
    "contents_url": "https://api.github.com/repos/eclipse/rdf4j/contents/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/MaxExclusiveConstraintComponent.java?ref=908977b9cccf612c5c03eb98ed5381062e80ee6c",
    "patch": "@@ -23,8 +23,7 @@ public MaxExclusiveConstraintComponent(Literal maxExclusive) {\n \t}\n \n \t@Override\n-\tpublic void toModel(Resource subject, IRI predicate, Model model, Set<Resource> cycleDetection,\n-\t\t\tSet<Resource> rdfListDedupe) {\n+\tpublic void toModel(Resource subject, IRI predicate, Model model, Set<Resource> cycleDetection) {\n \t\tmodel.add(subject, SHACL.MAX_EXCLUSIVE, maxExclusive);\n \t}\n "
  },
  {
    "sha": "e35d68dc9d8d180ef999a34fd99575b9bd43b4dc",
    "filename": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/MaxInclusiveConstraintComponent.java",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/eclipse/rdf4j/blob/908977b9cccf612c5c03eb98ed5381062e80ee6c/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/MaxInclusiveConstraintComponent.java",
    "raw_url": "https://github.com/eclipse/rdf4j/raw/908977b9cccf612c5c03eb98ed5381062e80ee6c/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/MaxInclusiveConstraintComponent.java",
    "contents_url": "https://api.github.com/repos/eclipse/rdf4j/contents/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/MaxInclusiveConstraintComponent.java?ref=908977b9cccf612c5c03eb98ed5381062e80ee6c",
    "patch": "@@ -23,8 +23,7 @@ public MaxInclusiveConstraintComponent(Literal maxInclusive) {\n \t}\n \n \t@Override\n-\tpublic void toModel(Resource subject, IRI predicate, Model model, Set<Resource> cycleDetection,\n-\t\t\tSet<Resource> rdfListDedupe) {\n+\tpublic void toModel(Resource subject, IRI predicate, Model model, Set<Resource> cycleDetection) {\n \t\tmodel.add(subject, SHACL.MAX_INCLUSIVE, maxInclusive);\n \t}\n "
  },
  {
    "sha": "0e3dd46ed5cc81da697cc2fe55f1b98268af62e6",
    "filename": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/MaxLengthConstraintComponent.java",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/eclipse/rdf4j/blob/908977b9cccf612c5c03eb98ed5381062e80ee6c/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/MaxLengthConstraintComponent.java",
    "raw_url": "https://github.com/eclipse/rdf4j/raw/908977b9cccf612c5c03eb98ed5381062e80ee6c/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/MaxLengthConstraintComponent.java",
    "contents_url": "https://api.github.com/repos/eclipse/rdf4j/contents/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/MaxLengthConstraintComponent.java?ref=908977b9cccf612c5c03eb98ed5381062e80ee6c",
    "patch": "@@ -24,8 +24,7 @@ public MaxLengthConstraintComponent(long maxLength) {\n \t}\n \n \t@Override\n-\tpublic void toModel(Resource subject, IRI predicate, Model model, Set<Resource> cycleDetection,\n-\t\t\tSet<Resource> rdfListDedupe) {\n+\tpublic void toModel(Resource subject, IRI predicate, Model model, Set<Resource> cycleDetection) {\n \t\tmodel.add(subject, SHACL.MAX_LENGTH,\n \t\t\t\tliteral(BigInteger.valueOf(maxLength)));\n \t}"
  },
  {
    "sha": "57026e6381f1e346b551cabe9ab517b6d24aab2a",
    "filename": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/MinCountConstraintComponent.java",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/eclipse/rdf4j/blob/908977b9cccf612c5c03eb98ed5381062e80ee6c/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/MinCountConstraintComponent.java",
    "raw_url": "https://github.com/eclipse/rdf4j/raw/908977b9cccf612c5c03eb98ed5381062e80ee6c/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/MinCountConstraintComponent.java",
    "contents_url": "https://api.github.com/repos/eclipse/rdf4j/contents/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/MinCountConstraintComponent.java?ref=908977b9cccf612c5c03eb98ed5381062e80ee6c",
    "patch": "@@ -32,8 +32,7 @@ public MinCountConstraintComponent(long minCount) {\n \t}\n \n \t@Override\n-\tpublic void toModel(Resource subject, IRI predicate, Model model, Set<Resource> cycleDetection,\n-\t\t\tSet<Resource> rdfListDedupe) {\n+\tpublic void toModel(Resource subject, IRI predicate, Model model, Set<Resource> cycleDetection) {\n \t\tmodel.add(subject, SHACL.MIN_COUNT,\n \t\t\t\tliteral(BigInteger.valueOf(minCount)));\n \t}"
  },
  {
    "sha": "e0d5835fdee3905b428bf448b85e59e6d806b886",
    "filename": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/MinExclusiveConstraintComponent.java",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/eclipse/rdf4j/blob/908977b9cccf612c5c03eb98ed5381062e80ee6c/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/MinExclusiveConstraintComponent.java",
    "raw_url": "https://github.com/eclipse/rdf4j/raw/908977b9cccf612c5c03eb98ed5381062e80ee6c/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/MinExclusiveConstraintComponent.java",
    "contents_url": "https://api.github.com/repos/eclipse/rdf4j/contents/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/MinExclusiveConstraintComponent.java?ref=908977b9cccf612c5c03eb98ed5381062e80ee6c",
    "patch": "@@ -23,8 +23,7 @@ public MinExclusiveConstraintComponent(Literal minExclusive) {\n \t}\n \n \t@Override\n-\tpublic void toModel(Resource subject, IRI predicate, Model model, Set<Resource> cycleDetection,\n-\t\t\tSet<Resource> rdfListDedupe) {\n+\tpublic void toModel(Resource subject, IRI predicate, Model model, Set<Resource> cycleDetection) {\n \t\tmodel.add(subject, SHACL.MIN_EXCLUSIVE, minExclusive);\n \t}\n "
  },
  {
    "sha": "fe096a7e795dea8213ee111739c23c8b3ec6d13e",
    "filename": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/MinInclusiveConstraintComponent.java",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/eclipse/rdf4j/blob/908977b9cccf612c5c03eb98ed5381062e80ee6c/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/MinInclusiveConstraintComponent.java",
    "raw_url": "https://github.com/eclipse/rdf4j/raw/908977b9cccf612c5c03eb98ed5381062e80ee6c/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/MinInclusiveConstraintComponent.java",
    "contents_url": "https://api.github.com/repos/eclipse/rdf4j/contents/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/MinInclusiveConstraintComponent.java?ref=908977b9cccf612c5c03eb98ed5381062e80ee6c",
    "patch": "@@ -23,8 +23,7 @@ public MinInclusiveConstraintComponent(Literal minInclusive) {\n \t}\n \n \t@Override\n-\tpublic void toModel(Resource subject, IRI predicate, Model model, Set<Resource> cycleDetection,\n-\t\t\tSet<Resource> rdfListDedupe) {\n+\tpublic void toModel(Resource subject, IRI predicate, Model model, Set<Resource> cycleDetection) {\n \t\tmodel.add(subject, SHACL.MIN_INCLUSIVE, minInclusive);\n \t}\n "
  },
  {
    "sha": "6a074af8c844a3e6136b2b28312981f8fde9dc53",
    "filename": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/MinLengthConstraintComponent.java",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/eclipse/rdf4j/blob/908977b9cccf612c5c03eb98ed5381062e80ee6c/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/MinLengthConstraintComponent.java",
    "raw_url": "https://github.com/eclipse/rdf4j/raw/908977b9cccf612c5c03eb98ed5381062e80ee6c/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/MinLengthConstraintComponent.java",
    "contents_url": "https://api.github.com/repos/eclipse/rdf4j/contents/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/MinLengthConstraintComponent.java?ref=908977b9cccf612c5c03eb98ed5381062e80ee6c",
    "patch": "@@ -24,8 +24,7 @@ public MinLengthConstraintComponent(long minLength) {\n \t}\n \n \t@Override\n-\tpublic void toModel(Resource subject, IRI predicate, Model model, Set<Resource> cycleDetection,\n-\t\t\tSet<Resource> rdfListDedupe) {\n+\tpublic void toModel(Resource subject, IRI predicate, Model model, Set<Resource> cycleDetection) {\n \t\tmodel.add(subject, SHACL.MIN_LENGTH,\n \t\t\t\tliteral(BigInteger.valueOf(minLength)));\n \t}"
  },
  {
    "sha": "6f8d68de500f9069fc80ccdca0548e35fb314bd6",
    "filename": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/NodeKindConstraintComponent.java",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/eclipse/rdf4j/blob/908977b9cccf612c5c03eb98ed5381062e80ee6c/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/NodeKindConstraintComponent.java",
    "raw_url": "https://github.com/eclipse/rdf4j/raw/908977b9cccf612c5c03eb98ed5381062e80ee6c/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/NodeKindConstraintComponent.java",
    "contents_url": "https://api.github.com/repos/eclipse/rdf4j/contents/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/NodeKindConstraintComponent.java?ref=908977b9cccf612c5c03eb98ed5381062e80ee6c",
    "patch": "@@ -40,8 +40,7 @@ String getSparqlFilterExpression(String varName, boolean negated) {\n \t}\n \n \t@Override\n-\tpublic void toModel(Resource subject, IRI predicate, Model model, Set<Resource> cycleDetection,\n-\t\t\tSet<Resource> rdfListDedupe) {\n+\tpublic void toModel(Resource subject, IRI predicate, Model model, Set<Resource> cycleDetection) {\n \t\tmodel.add(subject, SHACL.NODE_KIND_PROP, nodeKind.iri);\n \t}\n "
  },
  {
    "sha": "cf719b7e26d9f63b60cafe7bfe5367191824a9ab",
    "filename": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/NotConstraintComponent.java",
    "status": "modified",
    "additions": 2,
    "deletions": 3,
    "changes": 5,
    "blob_url": "https://github.com/eclipse/rdf4j/blob/908977b9cccf612c5c03eb98ed5381062e80ee6c/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/NotConstraintComponent.java",
    "raw_url": "https://github.com/eclipse/rdf4j/raw/908977b9cccf612c5c03eb98ed5381062e80ee6c/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/NotConstraintComponent.java",
    "contents_url": "https://api.github.com/repos/eclipse/rdf4j/contents/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/NotConstraintComponent.java?ref=908977b9cccf612c5c03eb98ed5381062e80ee6c",
    "patch": "@@ -48,11 +48,10 @@ public NotConstraintComponent(NotConstraintComponent notConstraintComponent) {\n \t}\n \n \t@Override\n-\tpublic void toModel(Resource subject, IRI predicate, Model model, Set<Resource> cycleDetection,\n-\t\t\tSet<Resource> rdfListDedupe) {\n+\tpublic void toModel(Resource subject, IRI predicate, Model model, Set<Resource> cycleDetection) {\n \t\tmodel.add(subject, SHACL.NOT, getId());\n \n-\t\tnot.toModel(null, null, model, cycleDetection, rdfListDedupe);\n+\t\tnot.toModel(null, null, model, cycleDetection);\n \n \t}\n "
  },
  {
    "sha": "50a34dc047ebcee56828cf8c7d346e34729e0e84",
    "filename": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/OrConstraintComponent.java",
    "status": "modified",
    "additions": 3,
    "deletions": 7,
    "changes": 10,
    "blob_url": "https://github.com/eclipse/rdf4j/blob/908977b9cccf612c5c03eb98ed5381062e80ee6c/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/OrConstraintComponent.java",
    "raw_url": "https://github.com/eclipse/rdf4j/raw/908977b9cccf612c5c03eb98ed5381062e80ee6c/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/OrConstraintComponent.java",
    "contents_url": "https://api.github.com/repos/eclipse/rdf4j/contents/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/OrConstraintComponent.java?ref=908977b9cccf612c5c03eb98ed5381062e80ee6c",
    "patch": "@@ -59,18 +59,14 @@ public OrConstraintComponent(OrConstraintComponent orConstraintComponent) {\n \t}\n \n \t@Override\n-\tpublic void toModel(Resource subject, IRI predicate, Model model, Set<Resource> cycleDetection,\n-\t\t\tSet<Resource> rdfListDedupe) {\n+\tpublic void toModel(Resource subject, IRI predicate, Model model, Set<Resource> cycleDetection) {\n \t\tmodel.add(subject, SHACL.OR, getId());\n \t\tif (!cycleDetection.contains(getId())) {\n \t\t\tcycleDetection.add(getId());\n-\t\t\tor.forEach(o -> o.toModel(null, null, model, cycleDetection, rdfListDedupe));\n+\t\t\tor.forEach(o -> o.toModel(null, null, model, cycleDetection));\n \t\t}\n \n-\t\tif (!rdfListDedupe.contains(getId())) {\n-\t\t\trdfListDedupe.add(getId());\n-\t\t\tHelperTool.listToRdf(or.stream().map(Shape::getId).collect(Collectors.toList()), getId(), model);\n-\t\t}\n+\t\tHelperTool.listToRdf(or.stream().map(Shape::getId).collect(Collectors.toList()), getId(), model);\n \n \t}\n "
  },
  {
    "sha": "d90c0feb7b00a4c55fbd7cd4a47d7ecc1a3b81e1",
    "filename": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/PatternConstraintComponent.java",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/eclipse/rdf4j/blob/908977b9cccf612c5c03eb98ed5381062e80ee6c/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/PatternConstraintComponent.java",
    "raw_url": "https://github.com/eclipse/rdf4j/raw/908977b9cccf612c5c03eb98ed5381062e80ee6c/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/PatternConstraintComponent.java",
    "contents_url": "https://api.github.com/repos/eclipse/rdf4j/contents/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/PatternConstraintComponent.java?ref=908977b9cccf612c5c03eb98ed5381062e80ee6c",
    "patch": "@@ -29,8 +29,7 @@ public PatternConstraintComponent(String pattern, String flags) {\n \t}\n \n \t@Override\n-\tpublic void toModel(Resource subject, IRI predicate, Model model, Set<Resource> cycleDetection,\n-\t\t\tSet<Resource> rdfListDedupe) {\n+\tpublic void toModel(Resource subject, IRI predicate, Model model, Set<Resource> cycleDetection) {\n \t\tmodel.add(subject, SHACL.PATTERN, literal(pattern));\n \t\tif (flags != null && !flags.isEmpty()) {\n \t\t\tmodel.add(subject, SHACL.FLAGS, literal(flags));"
  },
  {
    "sha": "a91558fe65f24b789238437f4e4a4cf3c7faf07e",
    "filename": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/QualifiedMaxCountConstraintComponent.java",
    "status": "modified",
    "additions": 2,
    "deletions": 3,
    "changes": 5,
    "blob_url": "https://github.com/eclipse/rdf4j/blob/908977b9cccf612c5c03eb98ed5381062e80ee6c/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/QualifiedMaxCountConstraintComponent.java",
    "raw_url": "https://github.com/eclipse/rdf4j/raw/908977b9cccf612c5c03eb98ed5381062e80ee6c/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/QualifiedMaxCountConstraintComponent.java",
    "contents_url": "https://api.github.com/repos/eclipse/rdf4j/contents/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ast/constraintcomponents/QualifiedMaxCountConstraintComponent.java?ref=908977b9cccf612c5c03eb98ed5381062e80ee6c",
    "patch": "@@ -75,8 +75,7 @@ public QualifiedMaxCountConstraintComponent(QualifiedMaxCountConstraintComponent\n \t}\n \n \t@Override\n-\tpublic void toModel(Resource subject, IRI predicate, Model model, Set<Resource> cycleDetection,\n-\t\t\tSet<Resource> rdfListDedupe) {\n+\tpublic void toModel(Resource subject, IRI predicate, Model model, Set<Resource> cycleDetection) {\n \t\tmodel.add(subject, SHACL.QUALIFIED_VALUE_SHAPE, getId());\n \n \t\tif (qualifiedValueShapesDisjoint != null) {\n@@ -87,7 +86,7 @@ public void toModel(Resource subject, IRI predicate, Model model, Set<Resource>\n \t\t\tmodel.add(subject, SHACL.QUALIFIED_MAX_COUNT, literal(BigInteger.valueOf(qualifiedMaxCount)));\n \t\t}\n \n-\t\tqualifiedValueShape.toModel(null, null, model, cycleDetection, rdfListDedupe);\n+\t\tqualifiedValueShape.toModel(null, null, model, cycleDetection);\n \n \t}\n "
  }
]
