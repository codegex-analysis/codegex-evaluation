[
  {
    "sha": "b1e5f10dbee5c41a8b86437dc6c1aa467d1d322c",
    "filename": "backend/src/main/java/de/neuefische/teddyscoronadiaries/config/RestTemplateConfig.java",
    "status": "added",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/lisamittmann/capstone-teddys-corona-diaries/blob/100c068c9aa4d9c7239a5495559cab4773a8c748/backend/src/main/java/de/neuefische/teddyscoronadiaries/config/RestTemplateConfig.java",
    "raw_url": "https://github.com/lisamittmann/capstone-teddys-corona-diaries/raw/100c068c9aa4d9c7239a5495559cab4773a8c748/backend/src/main/java/de/neuefische/teddyscoronadiaries/config/RestTemplateConfig.java",
    "contents_url": "https://api.github.com/repos/lisamittmann/capstone-teddys-corona-diaries/contents/backend/src/main/java/de/neuefische/teddyscoronadiaries/config/RestTemplateConfig.java?ref=100c068c9aa4d9c7239a5495559cab4773a8c748",
    "patch": "@@ -0,0 +1,15 @@\n+package de.neuefische.teddyscoronadiaries.config;\n+\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.web.client.RestTemplate;\n+\n+@Configuration\n+public class RestTemplateConfig {\n+\n+    @Bean\n+    public RestTemplate getRestTemplate(){\n+        return new RestTemplate();\n+    }\n+\n+}"
  },
  {
    "sha": "3e228cfde1deb8307655fd35d8d18fabc620c46b",
    "filename": "backend/src/main/java/de/neuefische/teddyscoronadiaries/controller/CovidController.java",
    "status": "added",
    "additions": 28,
    "deletions": 0,
    "changes": 28,
    "blob_url": "https://github.com/lisamittmann/capstone-teddys-corona-diaries/blob/100c068c9aa4d9c7239a5495559cab4773a8c748/backend/src/main/java/de/neuefische/teddyscoronadiaries/controller/CovidController.java",
    "raw_url": "https://github.com/lisamittmann/capstone-teddys-corona-diaries/raw/100c068c9aa4d9c7239a5495559cab4773a8c748/backend/src/main/java/de/neuefische/teddyscoronadiaries/controller/CovidController.java",
    "contents_url": "https://api.github.com/repos/lisamittmann/capstone-teddys-corona-diaries/contents/backend/src/main/java/de/neuefische/teddyscoronadiaries/controller/CovidController.java?ref=100c068c9aa4d9c7239a5495559cab4773a8c748",
    "patch": "@@ -0,0 +1,28 @@\n+package de.neuefische.teddyscoronadiaries.controller;\n+\n+import de.neuefische.teddyscoronadiaries.model.covid.IncidenceDetails;\n+import de.neuefische.teddyscoronadiaries.service.CovidService;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.PathVariable;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+import java.util.List;\n+\n+@RestController\n+@RequestMapping(\"covid\")\n+public class CovidController {\n+\n+    private final CovidService covidService;\n+\n+    @Autowired\n+    public CovidController(CovidService covidService) {\n+        this.covidService = covidService;\n+    }\n+\n+    @GetMapping(\"{quarantineDay}\")\n+    public IncidenceDetails getCases(@PathVariable int quarantineDay){\n+        return covidService.getSevenDayIncidenceForQuarantineDay(quarantineDay);\n+    }\n+}"
  },
  {
    "sha": "16aa85e3f81ad5e125da303fdec4634f3f617267",
    "filename": "backend/src/main/java/de/neuefische/teddyscoronadiaries/covid19api/model/ConfirmedCase.java",
    "status": "added",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/lisamittmann/capstone-teddys-corona-diaries/blob/100c068c9aa4d9c7239a5495559cab4773a8c748/backend/src/main/java/de/neuefische/teddyscoronadiaries/covid19api/model/ConfirmedCase.java",
    "raw_url": "https://github.com/lisamittmann/capstone-teddys-corona-diaries/raw/100c068c9aa4d9c7239a5495559cab4773a8c748/backend/src/main/java/de/neuefische/teddyscoronadiaries/covid19api/model/ConfirmedCase.java",
    "contents_url": "https://api.github.com/repos/lisamittmann/capstone-teddys-corona-diaries/contents/backend/src/main/java/de/neuefische/teddyscoronadiaries/covid19api/model/ConfirmedCase.java?ref=100c068c9aa4d9c7239a5495559cab4773a8c748",
    "patch": "@@ -0,0 +1,20 @@\n+package de.neuefische.teddyscoronadiaries.covid19api.model;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import lombok.AllArgsConstructor;\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+\n+import java.time.Instant;\n+\n+@Data\n+@AllArgsConstructor\n+@NoArgsConstructor\n+public class ConfirmedCase {\n+    @JsonProperty(\"Status\")\n+    private String status;\n+    @JsonProperty(\"Cases\")\n+    private int cases;\n+    @JsonProperty(\"Date\")\n+    private String date;\n+}"
  },
  {
    "sha": "3e9897a18c08c94280ddce887447a167f267c02a",
    "filename": "backend/src/main/java/de/neuefische/teddyscoronadiaries/covid19api/service/Covid19ApiService.java",
    "status": "added",
    "additions": 33,
    "deletions": 0,
    "changes": 33,
    "blob_url": "https://github.com/lisamittmann/capstone-teddys-corona-diaries/blob/100c068c9aa4d9c7239a5495559cab4773a8c748/backend/src/main/java/de/neuefische/teddyscoronadiaries/covid19api/service/Covid19ApiService.java",
    "raw_url": "https://github.com/lisamittmann/capstone-teddys-corona-diaries/raw/100c068c9aa4d9c7239a5495559cab4773a8c748/backend/src/main/java/de/neuefische/teddyscoronadiaries/covid19api/service/Covid19ApiService.java",
    "contents_url": "https://api.github.com/repos/lisamittmann/capstone-teddys-corona-diaries/contents/backend/src/main/java/de/neuefische/teddyscoronadiaries/covid19api/service/Covid19ApiService.java?ref=100c068c9aa4d9c7239a5495559cab4773a8c748",
    "patch": "@@ -0,0 +1,33 @@\n+package de.neuefische.teddyscoronadiaries.covid19api.service;\n+\n+import de.neuefische.teddyscoronadiaries.covid19api.model.ConfirmedCase;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.stereotype.Service;\n+import org.springframework.web.client.RestTemplate;\n+\n+import java.util.List;\n+\n+@Service\n+public class Covid19ApiService {\n+\n+    private final RestTemplate restTemplate;\n+    private final String baseUrl = \"https://api.covid19api.com/\";\n+\n+    @Autowired\n+    public Covid19ApiService(RestTemplate restTemplate) {\n+        this.restTemplate = restTemplate;\n+    }\n+\n+    public List<ConfirmedCase> getConfirmedCases(String from, String to){\n+\n+        String url = baseUrl + \"country/germany/status/confirmed/live?from=\" + from + \"&to=\" + to;\n+\n+        try {\n+            ResponseEntity<ConfirmedCase[]> response = restTemplate.getForEntity(url, ConfirmedCase[].class);\n+            return List.of(response.getBody());\n+        } catch(Exception e) {\n+            return List.of();\n+        }\n+    }\n+}"
  },
  {
    "sha": "e8f5b5edab51fb0f89f1bdc15a82f70087298894",
    "filename": "backend/src/main/java/de/neuefische/teddyscoronadiaries/model/covid/IncidenceDetails.java",
    "status": "added",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/lisamittmann/capstone-teddys-corona-diaries/blob/100c068c9aa4d9c7239a5495559cab4773a8c748/backend/src/main/java/de/neuefische/teddyscoronadiaries/model/covid/IncidenceDetails.java",
    "raw_url": "https://github.com/lisamittmann/capstone-teddys-corona-diaries/raw/100c068c9aa4d9c7239a5495559cab4773a8c748/backend/src/main/java/de/neuefische/teddyscoronadiaries/model/covid/IncidenceDetails.java",
    "contents_url": "https://api.github.com/repos/lisamittmann/capstone-teddys-corona-diaries/contents/backend/src/main/java/de/neuefische/teddyscoronadiaries/model/covid/IncidenceDetails.java?ref=100c068c9aa4d9c7239a5495559cab4773a8c748",
    "patch": "@@ -0,0 +1,14 @@\n+package de.neuefische.teddyscoronadiaries.model.covid;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+\n+@Data\n+@AllArgsConstructor\n+@NoArgsConstructor\n+public class IncidenceDetails {\n+\n+    private int incidenceValue;\n+    private IncidenceLevel incidenceLevel;\n+}"
  },
  {
    "sha": "fc5fe556710812988b6109f6a065265fed85fadc",
    "filename": "backend/src/main/java/de/neuefische/teddyscoronadiaries/model/covid/IncidenceLevel.java",
    "status": "added",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/lisamittmann/capstone-teddys-corona-diaries/blob/100c068c9aa4d9c7239a5495559cab4773a8c748/backend/src/main/java/de/neuefische/teddyscoronadiaries/model/covid/IncidenceLevel.java",
    "raw_url": "https://github.com/lisamittmann/capstone-teddys-corona-diaries/raw/100c068c9aa4d9c7239a5495559cab4773a8c748/backend/src/main/java/de/neuefische/teddyscoronadiaries/model/covid/IncidenceLevel.java",
    "contents_url": "https://api.github.com/repos/lisamittmann/capstone-teddys-corona-diaries/contents/backend/src/main/java/de/neuefische/teddyscoronadiaries/model/covid/IncidenceLevel.java?ref=100c068c9aa4d9c7239a5495559cab4773a8c748",
    "patch": "@@ -0,0 +1,8 @@\n+package de.neuefische.teddyscoronadiaries.model.covid;\n+\n+public enum IncidenceLevel {\n+    GREEN,\n+    YELLOW,\n+    ORANGE,\n+    RED\n+}"
  },
  {
    "sha": "487307c228bb05d59757759e232e58befda6b21e",
    "filename": "backend/src/main/java/de/neuefische/teddyscoronadiaries/service/CovidService.java",
    "status": "added",
    "additions": 64,
    "deletions": 0,
    "changes": 64,
    "blob_url": "https://github.com/lisamittmann/capstone-teddys-corona-diaries/blob/100c068c9aa4d9c7239a5495559cab4773a8c748/backend/src/main/java/de/neuefische/teddyscoronadiaries/service/CovidService.java",
    "raw_url": "https://github.com/lisamittmann/capstone-teddys-corona-diaries/raw/100c068c9aa4d9c7239a5495559cab4773a8c748/backend/src/main/java/de/neuefische/teddyscoronadiaries/service/CovidService.java",
    "contents_url": "https://api.github.com/repos/lisamittmann/capstone-teddys-corona-diaries/contents/backend/src/main/java/de/neuefische/teddyscoronadiaries/service/CovidService.java?ref=100c068c9aa4d9c7239a5495559cab4773a8c748",
    "patch": "@@ -0,0 +1,64 @@\n+package de.neuefische.teddyscoronadiaries.service;\n+\n+import de.neuefische.teddyscoronadiaries.covid19api.model.ConfirmedCase;\n+import de.neuefische.teddyscoronadiaries.covid19api.service.Covid19ApiService;\n+import de.neuefische.teddyscoronadiaries.model.covid.IncidenceDetails;\n+import de.neuefische.teddyscoronadiaries.model.covid.IncidenceLevel;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.stereotype.Service;\n+import org.springframework.web.server.ResponseStatusException;\n+\n+import java.time.Instant;\n+import java.time.temporal.ChronoUnit;\n+import java.util.List;\n+import java.util.Optional;\n+\n+@Service\n+public class CovidService {\n+\n+    private final Covid19ApiService covid19ApiService;\n+    private final Instant quarantineStart = Instant.ofEpochSecond(1584230400L);\n+    private final float inhabitantsGermany = 83100000;\n+\n+    @Autowired\n+    public CovidService(Covid19ApiService covid19ApiService) {\n+        this.covid19ApiService = covid19ApiService;\n+    }\n+\n+    public IncidenceDetails getSevenDayIncidenceForQuarantineDay(int quarantineDay){\n+        String to = quarantineStart.plus(quarantineDay, ChronoUnit.DAYS).toString();\n+        String from = quarantineStart.plus(quarantineDay-6, ChronoUnit.DAYS).toString();\n+        List<ConfirmedCase> confirmedCases = covid19ApiService.getConfirmedCases(from, to);\n+\n+        Optional<ConfirmedCase> startValue = getConfirmedCase(confirmedCases, from);\n+        Optional<ConfirmedCase> endValue = getConfirmedCase(confirmedCases, to);\n+\n+        if(endValue.isEmpty() || startValue.isEmpty()) {\n+            throw new ResponseStatusException(HttpStatus.NOT_FOUND, \"Could not retrieve data from CovidAPI\");\n+        }\n+\n+        float incidenceValue = (endValue.get().getCases()-startValue.get().getCases())/inhabitantsGermany*100000;\n+\n+\n+        return new IncidenceDetails((int) incidenceValue, getIncidenceLevel((int) incidenceValue));\n+    }\n+\n+    private Optional<ConfirmedCase> getConfirmedCase(List<ConfirmedCase> confirmedCases, String filterCriteria){\n+        return confirmedCases.stream()\n+                .filter(item -> item.getDate().equals(filterCriteria))\n+                .findAny();\n+    }\n+\n+    private IncidenceLevel getIncidenceLevel(int incidenceValue) {\n+        if(incidenceValue <= 35) {\n+            return IncidenceLevel.GREEN;\n+        } else if (incidenceValue <= 50) {\n+            return IncidenceLevel.YELLOW;\n+        } else if(incidenceValue <= 100) {\n+            return IncidenceLevel.ORANGE;\n+        } else {\n+            return IncidenceLevel.RED;\n+        }\n+    }\n+}"
  },
  {
    "sha": "f1419b8835f9baeba3ad22b52eafbeb885bc7f3a",
    "filename": "backend/src/test/java/de/neuefische/teddyscoronadiaries/controller/CovidControllerTest.java",
    "status": "added",
    "additions": 66,
    "deletions": 0,
    "changes": 66,
    "blob_url": "https://github.com/lisamittmann/capstone-teddys-corona-diaries/blob/100c068c9aa4d9c7239a5495559cab4773a8c748/backend/src/test/java/de/neuefische/teddyscoronadiaries/controller/CovidControllerTest.java",
    "raw_url": "https://github.com/lisamittmann/capstone-teddys-corona-diaries/raw/100c068c9aa4d9c7239a5495559cab4773a8c748/backend/src/test/java/de/neuefische/teddyscoronadiaries/controller/CovidControllerTest.java",
    "contents_url": "https://api.github.com/repos/lisamittmann/capstone-teddys-corona-diaries/contents/backend/src/test/java/de/neuefische/teddyscoronadiaries/controller/CovidControllerTest.java?ref=100c068c9aa4d9c7239a5495559cab4773a8c748",
    "patch": "@@ -0,0 +1,66 @@\n+package de.neuefische.teddyscoronadiaries.controller;\n+\n+import de.neuefische.teddyscoronadiaries.covid19api.model.ConfirmedCase;\n+import de.neuefische.teddyscoronadiaries.model.covid.IncidenceDetails;\n+import de.neuefische.teddyscoronadiaries.model.covid.IncidenceLevel;\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.boot.test.mock.mockito.MockBean;\n+import org.springframework.boot.test.web.client.TestRestTemplate;\n+import org.springframework.boot.web.server.LocalServerPort;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.web.client.RestTemplate;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.junit.jupiter.api.Assertions.*;\n+import static org.mockito.Mockito.when;\n+\n+@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)\n+class CovidControllerTest {\n+\n+    @LocalServerPort\n+    private int serverPort;\n+\n+    private String getUrl(){\n+        return \"http://localhost:\" + serverPort + \"/covid\";\n+    }\n+\n+    @MockBean\n+    private RestTemplate restTemplate;\n+\n+    @Autowired\n+    private TestRestTemplate testRestTemplate;\n+\n+    @Test\n+    @DisplayName(\"Get incidence value should return incidence value\")\n+    public void getIncidenceValueShouldReturnIncidenceValue(){\n+        //Given\n+        int quarantineDay = 42;\n+        String from = \"2020-04-20T00:00:00Z\";\n+        String to = \"2020-04-26T00:00:00Z\";\n+        String mockUrl = \"https://api.covid19api.com/country/germany/status/confirmed/live?from=\" + from + \"&to=\" + to;\n+        when(restTemplate.getForEntity(mockUrl, ConfirmedCase[].class)).thenReturn(ResponseEntity.ok(\n+                new ConfirmedCase[]{\n+                        new ConfirmedCase(\"Confirmed\", 210000, \"2020-04-20T00:00:00Z\"),\n+                        new ConfirmedCase(\"Confirmed\", 220000, \"2020-04-21T00:00:00Z\"),\n+                        new ConfirmedCase(\"Confirmed\", 230000, \"2020-04-22T00:00:00Z\"),\n+                        new ConfirmedCase(\"Confirmed\", 240000, \"2020-04-23T00:00:00Z\"),\n+                        new ConfirmedCase(\"Confirmed\", 250000, \"2020-04-24T00:00:00Z\"),\n+                        new ConfirmedCase(\"Confirmed\", 260000, \"2020-04-25T00:00:00Z\"),\n+                        new ConfirmedCase(\"Confirmed\", 270000, \"2020-04-26T00:00:00Z\")\n+                }\n+        ));\n+\n+        // When\n+        ResponseEntity<IncidenceDetails> response = testRestTemplate.getForEntity(getUrl() + \"/\" + quarantineDay, IncidenceDetails.class);\n+\n+        // Then\n+        assertThat(response.getStatusCode(), is(HttpStatus.OK));\n+        assertThat(response.getBody(), is(new IncidenceDetails(72, IncidenceLevel.ORANGE)));\n+    }\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "545ce431cedc8713f10d903831677af91ec87849",
    "filename": "backend/src/test/java/de/neuefische/teddyscoronadiaries/covid19api/service/Covid19ApiServiceTest.java",
    "status": "added",
    "additions": 67,
    "deletions": 0,
    "changes": 67,
    "blob_url": "https://github.com/lisamittmann/capstone-teddys-corona-diaries/blob/100c068c9aa4d9c7239a5495559cab4773a8c748/backend/src/test/java/de/neuefische/teddyscoronadiaries/covid19api/service/Covid19ApiServiceTest.java",
    "raw_url": "https://github.com/lisamittmann/capstone-teddys-corona-diaries/raw/100c068c9aa4d9c7239a5495559cab4773a8c748/backend/src/test/java/de/neuefische/teddyscoronadiaries/covid19api/service/Covid19ApiServiceTest.java",
    "contents_url": "https://api.github.com/repos/lisamittmann/capstone-teddys-corona-diaries/contents/backend/src/test/java/de/neuefische/teddyscoronadiaries/covid19api/service/Covid19ApiServiceTest.java?ref=100c068c9aa4d9c7239a5495559cab4773a8c748",
    "patch": "@@ -0,0 +1,67 @@\n+package de.neuefische.teddyscoronadiaries.covid19api.service;\n+\n+import de.neuefische.teddyscoronadiaries.covid19api.model.ConfirmedCase;\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.web.client.RestClientException;\n+import org.springframework.web.client.RestTemplate;\n+\n+import java.util.List;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+class Covid19ApiServiceTest {\n+\n+    private final RestTemplate restTemplate = mock(RestTemplate.class);\n+\n+    private final String baseUrl = \"https://api.covid19api.com/\";\n+    private final Covid19ApiService covid19ApiService = new Covid19ApiService(restTemplate);\n+\n+    @Test\n+    @DisplayName(\"Get confirmed cases for quarantine date period\")\n+    public void getConfirmedCasesReturnsListOfConfirmedCases() {\n+        //Given\n+        String from = \"2020-04-24T00:00:00Z\";\n+        String to = \"2020-04-26T00:00:00Z\";\n+        String mockUrl = baseUrl + \"country/germany/status/confirmed/live?from=\" + from + \"&to=\" + to;\n+        when(restTemplate.getForEntity(mockUrl, ConfirmedCase[].class)).thenReturn(ResponseEntity.ok(\n+                new ConfirmedCase[]{\n+                        new ConfirmedCase(\"Confirmed\", 250, \"2020-04-24T00:00:00Z\"),\n+                        new ConfirmedCase(\"Confirmed\", 260, \"2020-04-25T00:00:00Z\"),\n+                        new ConfirmedCase(\"Confirmed\", 270, \"2020-04-26T00:00:00Z\")\n+                }\n+        ));\n+\n+        // When\n+        List<ConfirmedCase> result = covid19ApiService.getConfirmedCases(from, to);\n+\n+        // Then\n+        assertThat(result, is(List.of(\n+                new ConfirmedCase(\"Confirmed\", 250, \"2020-04-24T00:00:00Z\"),\n+                new ConfirmedCase(\"Confirmed\", 260, \"2020-04-25T00:00:00Z\"),\n+                new ConfirmedCase(\"Confirmed\", 270, \"2020-04-26T00:00:00Z\")\n+        )));\n+    }\n+\n+    @Test\n+    @DisplayName(\"get confirmed cases should return empty list when API is unavailable\")\n+    public void getConfirmedCasesShouldReturnNull(){\n+        //Given\n+        String from = \"2020-04-24T00:00:00Z\";\n+        String to = \"2020-04-26T00:00:00Z\";\n+        String url = baseUrl + \"country/germany/status/confirmed/live?from=\" + from + \"&to=\" + to;\n+        when(restTemplate.getForEntity(url, ConfirmedCase[].class))\n+                .thenThrow(new RestClientException(\"404 not found\"));\n+\n+        // When\n+        List<ConfirmedCase> result = covid19ApiService.getConfirmedCases(from, to);\n+\n+        // Then\n+        assertThat(result, is(List.of()));\n+    }\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "1d6fd497e822c237b5e4bef8ba200e225a3eaf40",
    "filename": "backend/src/test/java/de/neuefische/teddyscoronadiaries/service/CovidServiceTest.java",
    "status": "added",
    "additions": 82,
    "deletions": 0,
    "changes": 82,
    "blob_url": "https://github.com/lisamittmann/capstone-teddys-corona-diaries/blob/100c068c9aa4d9c7239a5495559cab4773a8c748/backend/src/test/java/de/neuefische/teddyscoronadiaries/service/CovidServiceTest.java",
    "raw_url": "https://github.com/lisamittmann/capstone-teddys-corona-diaries/raw/100c068c9aa4d9c7239a5495559cab4773a8c748/backend/src/test/java/de/neuefische/teddyscoronadiaries/service/CovidServiceTest.java",
    "contents_url": "https://api.github.com/repos/lisamittmann/capstone-teddys-corona-diaries/contents/backend/src/test/java/de/neuefische/teddyscoronadiaries/service/CovidServiceTest.java?ref=100c068c9aa4d9c7239a5495559cab4773a8c748",
    "patch": "@@ -0,0 +1,82 @@\n+package de.neuefische.teddyscoronadiaries.service;\n+\n+import de.neuefische.teddyscoronadiaries.covid19api.model.ConfirmedCase;\n+import de.neuefische.teddyscoronadiaries.covid19api.service.Covid19ApiService;\n+import de.neuefische.teddyscoronadiaries.model.covid.IncidenceDetails;\n+import de.neuefische.teddyscoronadiaries.model.covid.IncidenceLevel;\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.stereotype.Service;\n+import org.springframework.web.server.ResponseStatusException;\n+\n+import java.util.List;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.junit.jupiter.api.Assertions.*;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+class CovidServiceTest {\n+\n+    private final Covid19ApiService covid19ApiService = mock(Covid19ApiService.class);\n+    private final CovidService covidService = new CovidService(covid19ApiService);\n+\n+    @Test\n+    @DisplayName(\"Get 7 day incidence should return value for quarantine day\")\n+    public void getSevenDayIncidenceShouldReturnIncidenceValue() {\n+        // Given\n+        int quarantineDay = 42;\n+        String from = \"2020-04-20T00:00:00Z\";\n+        String to = \"2020-04-26T00:00:00Z\";\n+        when(covid19ApiService.getConfirmedCases(from, to)).thenReturn(List.of(\n+                new ConfirmedCase(\"Confirmed\", 210000, \"2020-04-20T00:00:00Z\"),\n+                new ConfirmedCase(\"Confirmed\", 220000, \"2020-04-21T00:00:00Z\"),\n+                new ConfirmedCase(\"Confirmed\", 230000, \"2020-04-22T00:00:00Z\"),\n+                new ConfirmedCase(\"Confirmed\", 240000, \"2020-04-23T00:00:00Z\"),\n+                new ConfirmedCase(\"Confirmed\", 250000, \"2020-04-24T00:00:00Z\"),\n+                new ConfirmedCase(\"Confirmed\", 260000, \"2020-04-25T00:00:00Z\"),\n+                new ConfirmedCase(\"Confirmed\", 270000, \"2020-04-26T00:00:00Z\")\n+        ));\n+\n+        // When\n+        IncidenceDetails result = covidService.getSevenDayIncidenceForQuarantineDay(quarantineDay);\n+\n+        // Then\n+        assertThat(result, is(new IncidenceDetails(72, IncidenceLevel.ORANGE)));\n+    }\n+\n+    @Test\n+    @DisplayName(\"Get 7 day incidence should return 403 not found when API unavailable\")\n+    public void getSevenDayIncidenceValueShouldReturnError() {\n+        // Given\n+        int quarantineDay = 42;\n+        String from = \"2020-04-20T00:00:00Z\";\n+        String to = \"2020-04-26T00:00:00Z\";\n+        when(covid19ApiService.getConfirmedCases(from, to)).thenReturn(List.of());\n+\n+        // Then\n+        assertThrows(ResponseStatusException.class, () -> {\n+            covidService.getSevenDayIncidenceForQuarantineDay(quarantineDay);\n+        });\n+    }\n+\n+    @Test\n+    @DisplayName(\"Get 7 day incidence should return 403 not found when returned list is incomplete\")\n+    public void getSevenDayIncidenceShouldReturnErrorWhenListIsIncomplete() {\n+        // Given\n+        int quarantineDay = 42;\n+        String from = \"2020-04-20T00:00:00Z\";\n+        String to = \"2020-04-26T00:00:00Z\";\n+        when(covid19ApiService.getConfirmedCases(from, to)).thenReturn(List.of(\n+                new ConfirmedCase(\"Confirmed\", 260000, \"2020-04-25T00:00:00Z\"),\n+                new ConfirmedCase(\"Confirmed\", 270000, \"2020-04-26T00:00:00Z\")\n+        ));\n+\n+        // Then\n+        assertThrows(ResponseStatusException.class, () -> {\n+            covidService.getSevenDayIncidenceForQuarantineDay(quarantineDay);\n+        });\n+    }\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "6165d55454c1c7f734aeffbe694d5732da5f5ce0",
    "filename": "frontend/package.json",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/lisamittmann/capstone-teddys-corona-diaries/blob/100c068c9aa4d9c7239a5495559cab4773a8c748/frontend/package.json",
    "raw_url": "https://github.com/lisamittmann/capstone-teddys-corona-diaries/raw/100c068c9aa4d9c7239a5495559cab4773a8c748/frontend/package.json",
    "contents_url": "https://api.github.com/repos/lisamittmann/capstone-teddys-corona-diaries/contents/frontend/package.json?ref=100c068c9aa4d9c7239a5495559cab4773a8c748",
    "patch": "@@ -18,7 +18,8 @@\n     \"start\": \"react-scripts start\",\n     \"build\": \"react-scripts build\",\n     \"test\": \"react-scripts test\",\n-    \"eject\": \"react-scripts eject\"\n+    \"eject\": \"react-scripts eject\",\n+    \"prettify\": \"prettier --write .\"\n   },\n   \"eslintConfig\": {\n     \"extends\": ["
  },
  {
    "sha": "518464550217ebfac83fe5e907b5a4c5e4be11cf",
    "filename": "frontend/src/App.js",
    "status": "modified",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/lisamittmann/capstone-teddys-corona-diaries/blob/100c068c9aa4d9c7239a5495559cab4773a8c748/frontend/src/App.js",
    "raw_url": "https://github.com/lisamittmann/capstone-teddys-corona-diaries/raw/100c068c9aa4d9c7239a5495559cab4773a8c748/frontend/src/App.js",
    "contents_url": "https://api.github.com/repos/lisamittmann/capstone-teddys-corona-diaries/contents/frontend/src/App.js?ref=100c068c9aa4d9c7239a5495559cab4773a8c748",
    "patch": "@@ -1,4 +1,3 @@\n-import logo from './logo.svg';\n import './App.css';\n import {Route} from \"react-router-dom\";\n import RecipePage from \"./pages/RecipePage\";"
  },
  {
    "sha": "a54c501992c2852ed26cab664e583189263d3fcc",
    "filename": "frontend/src/components/GlobalStyle.js",
    "status": "modified",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/lisamittmann/capstone-teddys-corona-diaries/blob/100c068c9aa4d9c7239a5495559cab4773a8c748/frontend/src/components/GlobalStyle.js",
    "raw_url": "https://github.com/lisamittmann/capstone-teddys-corona-diaries/raw/100c068c9aa4d9c7239a5495559cab4773a8c748/frontend/src/components/GlobalStyle.js",
    "contents_url": "https://api.github.com/repos/lisamittmann/capstone-teddys-corona-diaries/contents/frontend/src/components/GlobalStyle.js?ref=100c068c9aa4d9c7239a5495559cab4773a8c748",
    "patch": "@@ -16,5 +16,9 @@ export default createGlobalStyle`\n     --color-cultured: #FAFAFA;\n     --color-silver: #C4C4C4; \n     --color-battleship-grey: #878787;\n+    --color-incidence-green: #94CBB1;\n+    --color-incidence-yellow: #FFEF97;\n+    --color-incidence-orange: #FAB779;\n+    --color-incidence-red: #E39FAB;\n   }\n `\n\\ No newline at end of file"
  },
  {
    "sha": "41dd6c4160a3d9bd578127e4b4c414083734be98",
    "filename": "frontend/src/components/IncidenceDetails.js",
    "status": "added",
    "additions": 51,
    "deletions": 0,
    "changes": 51,
    "blob_url": "https://github.com/lisamittmann/capstone-teddys-corona-diaries/blob/100c068c9aa4d9c7239a5495559cab4773a8c748/frontend/src/components/IncidenceDetails.js",
    "raw_url": "https://github.com/lisamittmann/capstone-teddys-corona-diaries/raw/100c068c9aa4d9c7239a5495559cab4773a8c748/frontend/src/components/IncidenceDetails.js",
    "contents_url": "https://api.github.com/repos/lisamittmann/capstone-teddys-corona-diaries/contents/frontend/src/components/IncidenceDetails.js?ref=100c068c9aa4d9c7239a5495559cab4773a8c748",
    "patch": "@@ -0,0 +1,51 @@\n+import styled from 'styled-components/macro'\n+import {ThemeProvider} from \"styled-components\";\n+\n+export default function IncidenceDetails({incidenceDetails}) {\n+\n+    let theme\n+\n+    switch (incidenceDetails.incidenceLevel) {\n+        case \"GREEN\":\n+            theme = {main: \"var(--color-incidence-green)\"}\n+            break\n+        case \"YELLOW\":\n+            theme = {main: \"var(--color-incidence-yellow)\"}\n+            break\n+        case \"ORANGE\":\n+            theme = {main: \"var(--color-incidence-orange)\"}\n+            break\n+        case \"RED\":\n+            theme = {main: \"var(--color-incidence-red)\"}\n+            break\n+        default:\n+            theme = {main: \"var(--color-silver)\"}\n+    }\n+\n+\n+    return (\n+        <DetailsGrid>\n+            <ThemeProvider theme={theme}>\n+                <Circle/>\n+            </ThemeProvider>\n+            <p>7-Tage Inzidenz Wert: {incidenceDetails.incidenceValue}</p>\n+        </DetailsGrid>\n+    )\n+\n+}\n+\n+const DetailsGrid = styled.div`\n+  display: grid;\n+  align-items: center;\n+  grid-template-columns: auto 1fr;\n+`\n+\n+const Circle = styled.span`\n+  border-radius: 50%;\n+  background: #94CBB1;\n+  width: 25px;\n+  height: 25px;\n+  margin-left: 16px;\n+  box-shadow: 1px 1px 1px var(--color-silver);\n+  background: ${props => props.theme.main}\n+`\n\\ No newline at end of file"
  },
  {
    "sha": "6322029b42a7771150288fee155837f3341ac753",
    "filename": "frontend/src/components/RecipeCoronaDetails.js",
    "status": "modified",
    "additions": 35,
    "deletions": 11,
    "changes": 46,
    "blob_url": "https://github.com/lisamittmann/capstone-teddys-corona-diaries/blob/100c068c9aa4d9c7239a5495559cab4773a8c748/frontend/src/components/RecipeCoronaDetails.js",
    "raw_url": "https://github.com/lisamittmann/capstone-teddys-corona-diaries/raw/100c068c9aa4d9c7239a5495559cab4773a8c748/frontend/src/components/RecipeCoronaDetails.js",
    "contents_url": "https://api.github.com/repos/lisamittmann/capstone-teddys-corona-diaries/contents/frontend/src/components/RecipeCoronaDetails.js?ref=100c068c9aa4d9c7239a5495559cab4773a8c748",
    "patch": "@@ -1,24 +1,48 @@\n import styled from 'styled-components/macro'\n+import {useState, useEffect} from \"react\";\n+import {getSevenDayIncidenceValue} from \"../service/covidApiService\";\n+import IncidenceDetails from \"./IncidenceDetails\";\n+\n+export default function RecipeCoronaDetails({quarantineDay}) {\n+    const [incidenceDetails, setIncidenceDetails] = useState({incidenceValue: \"Keine Ahnung\"})\n+\n+    useEffect(() => {\n+        getSevenDayIncidenceValue(quarantineDay).then(setIncidenceDetails)\n+    }, [quarantineDay])\n \n-export default function RecipeCoronaDetails() {\n     return (\n         <CoronaBox>\n-            <div>Corona Details here</div>\n+            <p>Quarantäne Tag: {quarantineDay}</p>\n+            <IncidenceDetails incidenceDetails={incidenceDetails}/>\n         </CoronaBox>\n     )\n }\n \n const CoronaBox = styled.section`\n-  display: flex;\n-  justify-content: center;\n-  height: 45px;\n+  display: grid;\n+  \n+  @media (min-width: 500px) {\n+    grid-template-columns: 40% 60%;\n+    grid-gap: 10px;\n+  }\n+  \n+  @media (max-width: 499px) {\n+    grid-auto-rows: auto;\n+    p:nth-child(2) {\n+      margin-top: 0px;\n+    }\n+    span {\n+      margin-bottom: 16px;\n+    }\n+  }\n+  \n   font-size: 16px;\n+  background: var(--color-alabaster);\n+  margin-left: 25px;\n+  margin-right: 25px;\n+  align-items: center;\n   \n-  div {\n-    background: var(--color-alabaster);\n-    margin-left: 25px;\n-    margin-right: 25px;\n-    width: 100%;\n-    padding: 10px 16px 10px 16px;\n+  p {\n+    padding-left: 16px;\n   }\n `\n\\ No newline at end of file"
  },
  {
    "sha": "ee60e32ef974b31382b10ac188c5fadc26826981",
    "filename": "frontend/src/components/RecipePreparation.js",
    "status": "modified",
    "additions": 4,
    "deletions": 7,
    "changes": 11,
    "blob_url": "https://github.com/lisamittmann/capstone-teddys-corona-diaries/blob/100c068c9aa4d9c7239a5495559cab4773a8c748/frontend/src/components/RecipePreparation.js",
    "raw_url": "https://github.com/lisamittmann/capstone-teddys-corona-diaries/raw/100c068c9aa4d9c7239a5495559cab4773a8c748/frontend/src/components/RecipePreparation.js",
    "contents_url": "https://api.github.com/repos/lisamittmann/capstone-teddys-corona-diaries/contents/frontend/src/components/RecipePreparation.js?ref=100c068c9aa4d9c7239a5495559cab4773a8c748",
    "patch": "@@ -6,20 +6,17 @@ export default function RecipePreparation({ingredients, preparationSteps}) {\n             <div>\n                 <ul>\n                     <p>Zutaten</p>\n-                    {\n-                        ingredients.map(ingredient => (\n-                            <li key={ingredient.name}>{ingredient.amountAndUnit} {ingredient.name}</li>))\n+                    {ingredients.map(ingredient => (\n+                            <li key={ingredient.amountAndUnit + ingredient.name}>{ingredient.amountAndUnit} {ingredient.name}</li>))\n                     }\n                 </ul>\n             </div>\n             <div>\n                 <ol>\n                     <p>Zubereitung</p>\n-                    {\n-                        preparationSteps.sort((oneStep, anotherStep) => oneStep.stepNumber.localeCompare(anotherStep.stepNumber))\n+                    {preparationSteps.sort((oneStep, anotherStep) => oneStep.stepNumber.localeCompare(anotherStep.stepNumber))\n                             .map(step => (\n-                                <li key={step.stepNumber}>{step.stepDescription}</li>\n-                            ))\n+                                <li key={step.stepNumber}>{step.stepDescription}</li>))\n                     }\n                 </ol>\n             </div>"
  },
  {
    "sha": "9fe89759c084f5aefdad6189785400bb2d3e564e",
    "filename": "frontend/src/index.js",
    "status": "modified",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/lisamittmann/capstone-teddys-corona-diaries/blob/100c068c9aa4d9c7239a5495559cab4773a8c748/frontend/src/index.js",
    "raw_url": "https://github.com/lisamittmann/capstone-teddys-corona-diaries/raw/100c068c9aa4d9c7239a5495559cab4773a8c748/frontend/src/index.js",
    "contents_url": "https://api.github.com/repos/lisamittmann/capstone-teddys-corona-diaries/contents/frontend/src/index.js?ref=100c068c9aa4d9c7239a5495559cab4773a8c748",
    "patch": "@@ -2,7 +2,6 @@ import React from 'react';\n import ReactDOM from 'react-dom';\n import './index.css';\n import App from './App';\n-import reportWebVitals from './reportWebVitals';\n import GlobalStyle from \"./components/GlobalStyle\";\n import {BrowserRouter as Router} from 'react-router-dom'\n "
  },
  {
    "sha": "8811e58446ae041add28e43f483bcce7aebebad9",
    "filename": "frontend/src/pages/RecipePage.js",
    "status": "modified",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/lisamittmann/capstone-teddys-corona-diaries/blob/100c068c9aa4d9c7239a5495559cab4773a8c748/frontend/src/pages/RecipePage.js",
    "raw_url": "https://github.com/lisamittmann/capstone-teddys-corona-diaries/raw/100c068c9aa4d9c7239a5495559cab4773a8c748/frontend/src/pages/RecipePage.js",
    "contents_url": "https://api.github.com/repos/lisamittmann/capstone-teddys-corona-diaries/contents/frontend/src/pages/RecipePage.js?ref=100c068c9aa4d9c7239a5495559cab4773a8c748",
    "patch": "@@ -16,16 +16,16 @@ export default function RecipePage() {\n     }, [recipeId])\n \n     return (\n-        <section>\n+        <>\n             {recipe &&\n             <RecipeWrapper>\n-                <img src={recipe.imageUrl}/>\n+                <img src={recipe.imageUrl} alt={recipe.name}/>\n                 <RecipeHeader recipeName={recipe.name} recipeDescription={recipe.diaryEntry}/>\n-                <RecipeCoronaDetails/>\n+                <RecipeCoronaDetails quarantineDay={recipe.quarantineDay}/>\n                 <RecipePreparation ingredients={recipe.ingredients} preparationSteps={recipe.steps}/>\n             </RecipeWrapper>\n             }\n-        </section>\n+        </>\n     )\n }\n "
  },
  {
    "sha": "4a838d14048939873f8660d9db7a54aeb6c6f6a0",
    "filename": "frontend/src/service/covidApiService.js",
    "status": "added",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/lisamittmann/capstone-teddys-corona-diaries/blob/100c068c9aa4d9c7239a5495559cab4773a8c748/frontend/src/service/covidApiService.js",
    "raw_url": "https://github.com/lisamittmann/capstone-teddys-corona-diaries/raw/100c068c9aa4d9c7239a5495559cab4773a8c748/frontend/src/service/covidApiService.js",
    "contents_url": "https://api.github.com/repos/lisamittmann/capstone-teddys-corona-diaries/contents/frontend/src/service/covidApiService.js?ref=100c068c9aa4d9c7239a5495559cab4773a8c748",
    "patch": "@@ -0,0 +1,6 @@\n+import axios from \"axios\";\n+\n+const baseUrl = \"/covid\"\n+\n+export const getSevenDayIncidenceValue = (quarantineDay) =>\n+    axios.get(`${baseUrl}/${quarantineDay}`).then(response => response.data)\n\\ No newline at end of file"
  }
]
