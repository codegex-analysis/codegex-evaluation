[
  {
    "sha": "c0905dadbd21e272873a5f7df4bbea820b125806",
    "filename": "src/main/java/io/testproject/sdk/internal/rest/AgentClient.java",
    "status": "modified",
    "additions": 47,
    "deletions": 1,
    "changes": 48,
    "blob_url": "https://github.com/testproject-io/java-opensdk/blob/6478cbddcc4d67fc65ee6263924643c8bb9c856f/src/main/java/io/testproject/sdk/internal/rest/AgentClient.java",
    "raw_url": "https://github.com/testproject-io/java-opensdk/raw/6478cbddcc4d67fc65ee6263924643c8bb9c856f/src/main/java/io/testproject/sdk/internal/rest/AgentClient.java",
    "contents_url": "https://api.github.com/repos/testproject-io/java-opensdk/contents/src/main/java/io/testproject/sdk/internal/rest/AgentClient.java?ref=6478cbddcc4d67fc65ee6263924643c8bb9c856f",
    "patch": "@@ -46,6 +46,7 @@\n import org.openqa.selenium.MutableCapabilities;\n import org.openqa.selenium.Platform;\n import org.openqa.selenium.WebDriverException;\n+import org.openqa.selenium.remote.CapabilityType;\n import org.openqa.selenium.remote.Command;\n import org.openqa.selenium.remote.Dialect;\n import org.slf4j.Logger;\n@@ -665,7 +666,12 @@ private void startSession(final Capabilities capabilities, final ReportSettings\n         try {\n             MutableCapabilities mutableCapabilities;\n             if (agentResponse.getCapabilities() != null) {\n-                mutableCapabilities = new MutableCapabilities(agentResponse.getCapabilities());\n+                Map<String, Object> agentResponseCapabilities = agentResponse.getCapabilities();\n+                // Handle 'loggingPrefs' capability object.\n+                if (agentResponseCapabilities.getOrDefault(CapabilityType.LOGGING_PREFS, null) != null) {\n+                    handleLoggingPrefs(agentResponseCapabilities);\n+                }\n+                mutableCapabilities = new MutableCapabilities(agentResponseCapabilities);\n             } else {\n                 mutableCapabilities = new MutableCapabilities();\n             }\n@@ -1122,6 +1128,46 @@ public void updateJobName(final String updatedJobName) {\n         }\n     }\n \n+    /**\n+     * Handles a special case for the 'loggingPrefs' capability object.\n+     *\n+     * @param capabilitiesMap to put the updated 'loggingPrefs' object into.\n+     */\n+    private void handleLoggingPrefs(final Map<String, Object> capabilitiesMap) {\n+        // Handle 'loggingPrefs' special case, see https://dev.testproject.io/jira/browse/TP-14214.\n+        Map<String, String> loggingPrefsMap = new HashMap<>();\n+        boolean instanceOfMap = true;\n+        try {\n+            Map<?, ?> tempLoggingPrefsMap;\n+            Object tempLoggingPrefsObject = capabilitiesMap.getOrDefault(CapabilityType.LOGGING_PREFS,\n+                    null);\n+            if (tempLoggingPrefsObject != null) {\n+                if (tempLoggingPrefsObject instanceof Map<?, ?>) {\n+                    tempLoggingPrefsMap = (Map<?, ?>) tempLoggingPrefsObject;\n+                    tempLoggingPrefsObject = tempLoggingPrefsMap.getOrDefault(\"prefs\", null);\n+                    if (tempLoggingPrefsObject != null) {\n+                        if (tempLoggingPrefsObject instanceof Map<?, ?>) {\n+                            tempLoggingPrefsMap = (Map<?, ?>) tempLoggingPrefsObject;\n+                            tempLoggingPrefsMap.forEach((type, levelMap) ->\n+                                    loggingPrefsMap.put((String) type, (String) ((Map<?, ?>) levelMap).get(\"name\")));\n+                        } else {\n+                            instanceOfMap = false;\n+                        }\n+                    }\n+                } else {\n+                    instanceOfMap = false;\n+                }\n+            }\n+            if (instanceOfMap) {\n+                capabilitiesMap.put(CapabilityType.LOGGING_PREFS, loggingPrefsMap);\n+            } else {\n+                LOG.warn(\"Was unable to handle 'loggingPrefs' due to casting mismatch.\");\n+            }\n+        } catch (Exception e) {\n+            LOG.error(\"Failed to handle 'loggingPrefs' capability.\", e);\n+        }\n+    }\n+\n     /**\n      * Internal class used to store Agent API routes.\n      */"
  }
]
