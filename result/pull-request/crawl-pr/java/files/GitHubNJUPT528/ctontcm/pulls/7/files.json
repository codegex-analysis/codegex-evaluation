[
  {
    "sha": "2ca4931464ac33f6ddbbf4cdd5014ea32855aa2a",
    "filename": ".idea/free-mybatis-generator-config.xml",
    "status": "modified",
    "additions": 48,
    "deletions": 0,
    "changes": 48,
    "blob_url": "https://github.com/GitHubNJUPT528/ctontcm/blob/dfc7523b7c96c338fc290969dc3f410c7bad526a/.idea/free-mybatis-generator-config.xml",
    "raw_url": "https://github.com/GitHubNJUPT528/ctontcm/raw/dfc7523b7c96c338fc290969dc3f410c7bad526a/.idea/free-mybatis-generator-config.xml",
    "contents_url": "https://api.github.com/repos/GitHubNJUPT528/ctontcm/contents/.idea/free-mybatis-generator-config.xml?ref=dfc7523b7c96c338fc290969dc3f410c7bad526a",
    "patch": "@@ -3,6 +3,54 @@\n   <component name=\"PersistentConfig\">\n     <option name=\"historyConfigList\">\n       <map>\n+        <entry key=\"t_cargo\">\n+          <value>\n+            <Config>\n+              <option name=\"comment\" value=\"true\" />\n+              <option name=\"daoMvnPath\" value=\"truckcargomatch/src/main/java\" />\n+              <option name=\"daoName\" value=\"CargoMapper\" />\n+              <option name=\"daoPackage\" value=\"com.cton.mapper\" />\n+              <option name=\"daoPostfix\" value=\"Mapper\" />\n+              <option name=\"modelMvnPath\" value=\"truckcargomatch/src/main/java\" />\n+              <option name=\"modelName\" value=\"Cargo\" />\n+              <option name=\"modelPackage\" value=\"com.cton.model\" />\n+              <option name=\"name\" value=\"t_cargo\" />\n+              <option name=\"overrideJava\" value=\"true\" />\n+              <option name=\"overrideXML\" value=\"true\" />\n+              <option name=\"primaryKey\" value=\"id\" />\n+              <option name=\"projectFolder\" value=\"$PROJECT_DIR$\" />\n+              <option name=\"tableName\" value=\"t_cargo\" />\n+              <option name=\"useLombokPlugin\" value=\"true\" />\n+              <option name=\"useSchemaPrefix\" value=\"true\" />\n+              <option name=\"xmlMvnPath\" value=\"truckcargomatch/src/main/resources\" />\n+              <option name=\"xmlPackage\" value=\"mapper\" />\n+            </Config>\n+          </value>\n+        </entry>\n+        <entry key=\"t_truck\">\n+          <value>\n+            <Config>\n+              <option name=\"comment\" value=\"true\" />\n+              <option name=\"daoMvnPath\" value=\"src/main/java\" />\n+              <option name=\"daoName\" value=\"TruckMapper\" />\n+              <option name=\"daoPackage\" value=\"com.cton.mapper\" />\n+              <option name=\"daoPostfix\" value=\"Mapper\" />\n+              <option name=\"modelMvnPath\" value=\"src/main/java\" />\n+              <option name=\"modelName\" value=\"Truck\" />\n+              <option name=\"modelPackage\" value=\"com.cton.model\" />\n+              <option name=\"name\" value=\"t_truck\" />\n+              <option name=\"overrideJava\" value=\"true\" />\n+              <option name=\"overrideXML\" value=\"true\" />\n+              <option name=\"primaryKey\" value=\"id\" />\n+              <option name=\"projectFolder\" value=\"$PROJECT_DIR$\" />\n+              <option name=\"tableName\" value=\"t_truck\" />\n+              <option name=\"useLombokPlugin\" value=\"true\" />\n+              <option name=\"useSchemaPrefix\" value=\"true\" />\n+              <option name=\"xmlMvnPath\" value=\"src/main/resources\" />\n+              <option name=\"xmlPackage\" value=\"mapper\" />\n+            </Config>\n+          </value>\n+        </entry>\n         <entry key=\"u_permission\">\n           <value>\n             <Config>"
  },
  {
    "sha": "e79fa505ae8e8410a44c88965d3db522a1f59717",
    "filename": ".idea/libraries/Maven__com_github_skjolber_3d_bin_container_packing_core_1_2_13.xml",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/GitHubNJUPT528/ctontcm/blob/dfc7523b7c96c338fc290969dc3f410c7bad526a/.idea/libraries/Maven__com_github_skjolber_3d_bin_container_packing_core_1_2_13.xml",
    "raw_url": "https://github.com/GitHubNJUPT528/ctontcm/raw/dfc7523b7c96c338fc290969dc3f410c7bad526a/.idea/libraries/Maven__com_github_skjolber_3d_bin_container_packing_core_1_2_13.xml",
    "contents_url": "https://api.github.com/repos/GitHubNJUPT528/ctontcm/contents/.idea/libraries/Maven__com_github_skjolber_3d_bin_container_packing_core_1_2_13.xml?ref=dfc7523b7c96c338fc290969dc3f410c7bad526a",
    "patch": "@@ -0,0 +1,13 @@\n+<component name=\"libraryTable\">\n+  <library name=\"Maven: com.github.skjolber.3d-bin-container-packing:core:1.2.13\">\n+    <CLASSES>\n+      <root url=\"jar://$PROJECT_DIR$/../../maven/apache-maven-3.6.3/maven-repo/com/github/skjolber/3d-bin-container-packing/core/1.2.13/core-1.2.13.jar!/\" />\n+    </CLASSES>\n+    <JAVADOC>\n+      <root url=\"jar://$PROJECT_DIR$/../../maven/apache-maven-3.6.3/maven-repo/com/github/skjolber/3d-bin-container-packing/core/1.2.13/core-1.2.13-javadoc.jar!/\" />\n+    </JAVADOC>\n+    <SOURCES>\n+      <root url=\"jar://$PROJECT_DIR$/../../maven/apache-maven-3.6.3/maven-repo/com/github/skjolber/3d-bin-container-packing/core/1.2.13/core-1.2.13-sources.jar!/\" />\n+    </SOURCES>\n+  </library>\n+</component>\n\\ No newline at end of file"
  },
  {
    "sha": "fdc6bdf1547efcc8d9bff1d57cf1e810d541d518",
    "filename": "truckcargomatch/pom.xml",
    "status": "modified",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/GitHubNJUPT528/ctontcm/blob/dfc7523b7c96c338fc290969dc3f410c7bad526a/truckcargomatch/pom.xml",
    "raw_url": "https://github.com/GitHubNJUPT528/ctontcm/raw/dfc7523b7c96c338fc290969dc3f410c7bad526a/truckcargomatch/pom.xml",
    "contents_url": "https://api.github.com/repos/GitHubNJUPT528/ctontcm/contents/truckcargomatch/pom.xml?ref=dfc7523b7c96c338fc290969dc3f410c7bad526a",
    "patch": "@@ -15,6 +15,7 @@\n \n     <properties>\n         <java.version>1.8</java.version>\n+        <skipTests>true</skipTests>\n     </properties>\n \n     <dependencies>\n@@ -165,6 +166,13 @@\n             <artifactId>lombok</artifactId>\n         </dependency>\n \n+        <!--装箱-->\n+        <dependency>\n+            <groupId>com.github.skjolber.3d-bin-container-packing</groupId>\n+            <artifactId>core</artifactId>\n+            <version>1.2.13</version>\n+        </dependency>\n+\n     </dependencies>\n \n "
  },
  {
    "sha": "8f72d07897f0de4205b131c4d13f56f4d9238a05",
    "filename": "truckcargomatch/src/main/java/com/cton/common/ActiverUser.java",
    "status": "modified",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/GitHubNJUPT528/ctontcm/blob/dfc7523b7c96c338fc290969dc3f410c7bad526a/truckcargomatch/src/main/java/com/cton/common/ActiverUser.java",
    "raw_url": "https://github.com/GitHubNJUPT528/ctontcm/raw/dfc7523b7c96c338fc290969dc3f410c7bad526a/truckcargomatch/src/main/java/com/cton/common/ActiverUser.java",
    "contents_url": "https://api.github.com/repos/GitHubNJUPT528/ctontcm/contents/truckcargomatch/src/main/java/com/cton/common/ActiverUser.java?ref=dfc7523b7c96c338fc290969dc3f410c7bad526a",
    "patch": "@@ -1,6 +1,8 @@\n package com.cton.common;\n \n import com.cton.model.User;\n+import io.swagger.annotations.ApiModel;\n+import io.swagger.annotations.ApiModelProperty;\n import lombok.AllArgsConstructor;\n import lombok.Data;\n import lombok.NoArgsConstructor;\n@@ -10,12 +12,16 @@\n @Data\n @AllArgsConstructor\n @NoArgsConstructor\n+@ApiModel(value = \"活跃用户\",description = \"活跃用户对象\")\n public class ActiverUser {\n \n+    @ApiModelProperty(\"用户\")\n     private User user;\n \n+    @ApiModelProperty(\"角色\")\n     private List<String> roles;\n \n+    @ApiModelProperty(\"权限\")\n     private List<String> permissions;\n }\n "
  },
  {
    "sha": "84634b47c06034cd381144dacf2612a1644fe72f",
    "filename": "truckcargomatch/src/main/java/com/cton/config/ShiroConfig.java",
    "status": "modified",
    "additions": 5,
    "deletions": 3,
    "changes": 8,
    "blob_url": "https://github.com/GitHubNJUPT528/ctontcm/blob/dfc7523b7c96c338fc290969dc3f410c7bad526a/truckcargomatch/src/main/java/com/cton/config/ShiroConfig.java",
    "raw_url": "https://github.com/GitHubNJUPT528/ctontcm/raw/dfc7523b7c96c338fc290969dc3f410c7bad526a/truckcargomatch/src/main/java/com/cton/config/ShiroConfig.java",
    "contents_url": "https://api.github.com/repos/GitHubNJUPT528/ctontcm/contents/truckcargomatch/src/main/java/com/cton/config/ShiroConfig.java?ref=dfc7523b7c96c338fc290969dc3f410c7bad526a",
    "patch": "@@ -32,11 +32,13 @@ public ShiroFilterFactoryBean getShiroFilterFactoryBean(DefaultWebSecurityManage\n         //配置系统受限资源\n         //配置系统公共系统\n         Map<String,String> map = new HashMap<String,String>();\n+        map.put(\"/doc.html\",\"anon\");\n+        map.put(\"/service-worker.js\",\"anon\");\n+        map.put(\"/swagger-resources\",\"anon\");\n         map.put(\"/user/**\",\"anon\");//anon 设置为公共资源\n-        map.put(\"/register\",\"anon\");\n         map.put(\"/cton/**\",\"anon\");\n-        map.put(\"/index/**\",\"authc\");\n-        map.put(\"/**\",\"authc\");//authc 请求这个资源需要认证和授权\n+//        map.put(\"/index/**\",\"authc\");\n+//        map.put(\"/**\",\"authc\");//authc 请求这个资源需要认证和授权\n         //默认认证界面路径\n         shiroFilterFactoryBean.setLoginUrl(\"/user/loginview\");\n         shiroFilterFactoryBean.setFilterChainDefinitionMap(map);"
  },
  {
    "sha": "75d7ce1bbc9715356bf9938fb6e69dd6333365e8",
    "filename": "truckcargomatch/src/main/java/com/cton/config/Swagger2Config.java",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/GitHubNJUPT528/ctontcm/blob/dfc7523b7c96c338fc290969dc3f410c7bad526a/truckcargomatch/src/main/java/com/cton/config/Swagger2Config.java",
    "raw_url": "https://github.com/GitHubNJUPT528/ctontcm/raw/dfc7523b7c96c338fc290969dc3f410c7bad526a/truckcargomatch/src/main/java/com/cton/config/Swagger2Config.java",
    "contents_url": "https://api.github.com/repos/GitHubNJUPT528/ctontcm/contents/truckcargomatch/src/main/java/com/cton/config/Swagger2Config.java?ref=dfc7523b7c96c338fc290969dc3f410c7bad526a",
    "patch": "@@ -1,5 +1,6 @@\n package com.cton.config;\n \n+import com.github.xiaoymin.knife4j.spring.annotations.EnableKnife4j;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Configuration;\n import springfox.documentation.builders.ApiInfoBuilder;\n@@ -13,6 +14,7 @@\n \n @Configuration\n @EnableSwagger2\n+//@EnableKnife4j\n public class Swagger2Config {\n \n     @Bean"
  },
  {
    "sha": "dcf7bd0159f24b09bedddbba0aa70c779db6d491",
    "filename": "truckcargomatch/src/main/java/com/cton/constants/ResultDTO.java",
    "status": "modified",
    "additions": 8,
    "deletions": 1,
    "changes": 9,
    "blob_url": "https://github.com/GitHubNJUPT528/ctontcm/blob/dfc7523b7c96c338fc290969dc3f410c7bad526a/truckcargomatch/src/main/java/com/cton/constants/ResultDTO.java",
    "raw_url": "https://github.com/GitHubNJUPT528/ctontcm/raw/dfc7523b7c96c338fc290969dc3f410c7bad526a/truckcargomatch/src/main/java/com/cton/constants/ResultDTO.java",
    "contents_url": "https://api.github.com/repos/GitHubNJUPT528/ctontcm/contents/truckcargomatch/src/main/java/com/cton/constants/ResultDTO.java?ref=dfc7523b7c96c338fc290969dc3f410c7bad526a",
    "patch": "@@ -1,18 +1,25 @@\n package com.cton.constants;\n \n+import io.swagger.annotations.ApiModel;\n+import io.swagger.annotations.ApiModelProperty;\n import lombok.Data;\n \n /**\n  * 基本返回数据结构\n  */\n @Data\n+@ApiModel(value = \"ResultDTO对象\",description = \"统一返回格式对象\")\n public class ResultDTO {\n-    private String system;\n+    @ApiModelProperty(\"系统\")\n+    private String system = \"cton\";\n \n+    @ApiModelProperty(\"代码\")\n     private int code;\n \n+    @ApiModelProperty(\"信息\")\n     private String msg;\n \n+    @ApiModelProperty(\"数据\")\n     private Object data;\n \n     public ResultDTO(){};"
  },
  {
    "sha": "7d7f2efcc36998f87578dabc146e30c57edd8e80",
    "filename": "truckcargomatch/src/main/java/com/cton/enums/HttpCode.java",
    "status": "modified",
    "additions": 14,
    "deletions": 4,
    "changes": 18,
    "blob_url": "https://github.com/GitHubNJUPT528/ctontcm/blob/dfc7523b7c96c338fc290969dc3f410c7bad526a/truckcargomatch/src/main/java/com/cton/enums/HttpCode.java",
    "raw_url": "https://github.com/GitHubNJUPT528/ctontcm/raw/dfc7523b7c96c338fc290969dc3f410c7bad526a/truckcargomatch/src/main/java/com/cton/enums/HttpCode.java",
    "contents_url": "https://api.github.com/repos/GitHubNJUPT528/ctontcm/contents/truckcargomatch/src/main/java/com/cton/enums/HttpCode.java?ref=dfc7523b7c96c338fc290969dc3f410c7bad526a",
    "patch": "@@ -55,22 +55,32 @@\n     /**\n      * 500错误,运行异常\n      */\n-    RUN500(2008,\"500错误,运行异常\"),\n+    RUN500(2009,\"500错误,运行异常\"),\n \n     /**\n      * 堆栈溢出异常\n      */\n-    STACKOVERFLOW(2008,\"堆栈溢出\"),\n+    STACKOVERFLOW(2010,\"堆栈溢出\"),\n \n     /**\n      * 算术错误异常\n      */\n-    ARITHMETIC(2008,\"算数异常\"),\n+    ARITHMETIC(2011,\"算数异常\"),\n \n     /**\n      * 其他异常\n      */\n-    OTHER(2008,\"其他异常\"),\n+    OTHER(2012,\"其他异常\"),\n+\n+    /**\n+     * 数据库查询为空异常\n+     */\n+    DATABASEISNULL(2013,\"数据库查询为空\"),\n+\n+    /**\n+     * 用户名重复\n+     */\n+    DUPLICATEUSERNAME(2014,\"用户名重复\"),\n \n     /**\n      * 系统异常"
  },
  {
    "sha": "5fe0ee2ce9e8756a7e39dee46517c60493ff752d",
    "filename": "truckcargomatch/src/main/java/com/cton/handler/GlobalExceptionHandler.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/GitHubNJUPT528/ctontcm/blob/dfc7523b7c96c338fc290969dc3f410c7bad526a/truckcargomatch/src/main/java/com/cton/handler/GlobalExceptionHandler.java",
    "raw_url": "https://github.com/GitHubNJUPT528/ctontcm/raw/dfc7523b7c96c338fc290969dc3f410c7bad526a/truckcargomatch/src/main/java/com/cton/handler/GlobalExceptionHandler.java",
    "contents_url": "https://api.github.com/repos/GitHubNJUPT528/ctontcm/contents/truckcargomatch/src/main/java/com/cton/handler/GlobalExceptionHandler.java?ref=dfc7523b7c96c338fc290969dc3f410c7bad526a",
    "patch": "@@ -35,7 +35,7 @@ public ResultDTO error(Exception e){\n     @ExceptionHandler(BusinessException.class)\n     @ResponseBody\n     public ResultDTO error(BusinessException e){\n-        logger.info(\"系统异常\",e);\n+        logger.info(e.getErrMsg(),e);\n         return ResultUtil.error(e.getCode(),e.getErrMsg());\n     }\n "
  },
  {
    "sha": "5c99ec894fffbc795a3b042c294a3940b192dd2a",
    "filename": "truckcargomatch/src/main/java/com/cton/mapper/CargoMapper.java",
    "status": "added",
    "additions": 26,
    "deletions": 0,
    "changes": 26,
    "blob_url": "https://github.com/GitHubNJUPT528/ctontcm/blob/dfc7523b7c96c338fc290969dc3f410c7bad526a/truckcargomatch/src/main/java/com/cton/mapper/CargoMapper.java",
    "raw_url": "https://github.com/GitHubNJUPT528/ctontcm/raw/dfc7523b7c96c338fc290969dc3f410c7bad526a/truckcargomatch/src/main/java/com/cton/mapper/CargoMapper.java",
    "contents_url": "https://api.github.com/repos/GitHubNJUPT528/ctontcm/contents/truckcargomatch/src/main/java/com/cton/mapper/CargoMapper.java?ref=dfc7523b7c96c338fc290969dc3f410c7bad526a",
    "patch": "@@ -0,0 +1,26 @@\n+package com.cton.mapper;\n+\n+import com.cton.model.Cargo;\n+import org.apache.ibatis.annotations.Mapper;\n+\n+import java.util.List;\n+\n+@Mapper\n+public interface CargoMapper {\n+\n+    List<Cargo> listCargoNoTaking();\n+\n+    List<Cargo> listCargo();\n+\n+    int deleteByPrimaryKey(Integer id);\n+\n+    int insert(Cargo record);\n+\n+    int insertSelective(Cargo record);\n+\n+    Cargo selectByPrimaryKey(Integer id);\n+\n+    int updateByPrimaryKeySelective(Cargo record);\n+\n+    int updateByPrimaryKey(Cargo record);\n+}"
  },
  {
    "sha": "2fdf3bdf89452546d85ee96c3f7e36e9f0050638",
    "filename": "truckcargomatch/src/main/java/com/cton/mapper/PermissionMapper.java",
    "status": "modified",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/GitHubNJUPT528/ctontcm/blob/dfc7523b7c96c338fc290969dc3f410c7bad526a/truckcargomatch/src/main/java/com/cton/mapper/PermissionMapper.java",
    "raw_url": "https://github.com/GitHubNJUPT528/ctontcm/raw/dfc7523b7c96c338fc290969dc3f410c7bad526a/truckcargomatch/src/main/java/com/cton/mapper/PermissionMapper.java",
    "contents_url": "https://api.github.com/repos/GitHubNJUPT528/ctontcm/contents/truckcargomatch/src/main/java/com/cton/mapper/PermissionMapper.java?ref=dfc7523b7c96c338fc290969dc3f410c7bad526a",
    "patch": "@@ -3,8 +3,15 @@\n import com.cton.model.Permission;\n import org.apache.ibatis.annotations.Mapper;\n \n+import java.util.List;\n+\n @Mapper\n public interface PermissionMapper {\n+\n+    List<Permission> listAllPerms();\n+\n+    List<Permission> listAllPermsByKeyword(Integer type, String nameKeyword,String urlKeyword);\n+\n     String selectPermNameByPermId(Integer permId);\n \n     Permission selectPermissionById(Integer id);"
  },
  {
    "sha": "e7bc9500e22ee6de9f8aeb800680879b628e67da",
    "filename": "truckcargomatch/src/main/java/com/cton/mapper/RoleMapper.java",
    "status": "modified",
    "additions": 7,
    "deletions": 2,
    "changes": 9,
    "blob_url": "https://github.com/GitHubNJUPT528/ctontcm/blob/dfc7523b7c96c338fc290969dc3f410c7bad526a/truckcargomatch/src/main/java/com/cton/mapper/RoleMapper.java",
    "raw_url": "https://github.com/GitHubNJUPT528/ctontcm/raw/dfc7523b7c96c338fc290969dc3f410c7bad526a/truckcargomatch/src/main/java/com/cton/mapper/RoleMapper.java",
    "contents_url": "https://api.github.com/repos/GitHubNJUPT528/ctontcm/contents/truckcargomatch/src/main/java/com/cton/mapper/RoleMapper.java?ref=dfc7523b7c96c338fc290969dc3f410c7bad526a",
    "patch": "@@ -1,12 +1,17 @@\n package com.cton.mapper;\n \n import com.cton.model.Role;\n+import com.cton.model.User;\n import org.apache.ibatis.annotations.Mapper;\n \n import java.util.List;\n \n @Mapper\n public interface RoleMapper {\n+    List<Role> listAllRoles();\n+\n+    List<Role> listAllRolesByKeyword(String keyword);\n+\n     String selectRoleNameByRoleId(Integer roleId);\n \n     Integer deleteRoleAllPermsByRoleId(Integer roleId);\n@@ -15,13 +20,13 @@\n \n     Integer deleteRoleUserByUserIdAndRoleId(Integer userId,Integer roleId);\n \n-    List selectPermsIdsByRoleId(Integer roleId);\n+    List<Integer> selectPermsIdsByRoleId(Integer roleId);\n \n     Integer saveRolePerms(Integer roleId, Integer permId);\n \n     Integer deleteUserAllRolesByUserId(Integer userId);\n \n-    List selectUserAllRolesByUserId(Integer userId);\n+    List<Integer> selectUserAllRolesByUserId(Integer userId);\n \n     Integer insertUserRole(Integer userId, Integer roleId);\n "
  },
  {
    "sha": "e2569452ea1a8bf216c933e897cbf39784523cec",
    "filename": "truckcargomatch/src/main/java/com/cton/mapper/TruckMapper.java",
    "status": "added",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/GitHubNJUPT528/ctontcm/blob/dfc7523b7c96c338fc290969dc3f410c7bad526a/truckcargomatch/src/main/java/com/cton/mapper/TruckMapper.java",
    "raw_url": "https://github.com/GitHubNJUPT528/ctontcm/raw/dfc7523b7c96c338fc290969dc3f410c7bad526a/truckcargomatch/src/main/java/com/cton/mapper/TruckMapper.java",
    "contents_url": "https://api.github.com/repos/GitHubNJUPT528/ctontcm/contents/truckcargomatch/src/main/java/com/cton/mapper/TruckMapper.java?ref=dfc7523b7c96c338fc290969dc3f410c7bad526a",
    "patch": "@@ -0,0 +1,20 @@\n+package com.cton.mapper;\n+\n+import com.cton.model.Truck;\n+import org.apache.ibatis.annotations.Mapper;\n+\n+import java.util.List;\n+\n+@Mapper\n+public interface TruckMapper {\n+    List<Truck> listAllTrucks();\n+\n+    int insertSelective(Truck truck);\n+\n+    int deleteByPrimaryKey(Integer id);\n+\n+    int updateByPrimaryKeySelective(Truck truck);\n+\n+    Truck selectByPrimaryKey(Integer id);\n+\n+}"
  },
  {
    "sha": "9e936b031cfd0577dc8f596854ca63f3d27f3ff2",
    "filename": "truckcargomatch/src/main/java/com/cton/mapper/UserMapper.java",
    "status": "modified",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/GitHubNJUPT528/ctontcm/blob/dfc7523b7c96c338fc290969dc3f410c7bad526a/truckcargomatch/src/main/java/com/cton/mapper/UserMapper.java",
    "raw_url": "https://github.com/GitHubNJUPT528/ctontcm/raw/dfc7523b7c96c338fc290969dc3f410c7bad526a/truckcargomatch/src/main/java/com/cton/mapper/UserMapper.java",
    "contents_url": "https://api.github.com/repos/GitHubNJUPT528/ctontcm/contents/truckcargomatch/src/main/java/com/cton/mapper/UserMapper.java?ref=dfc7523b7c96c338fc290969dc3f410c7bad526a",
    "patch": "@@ -3,8 +3,14 @@\n import com.cton.model.User;\n import org.apache.ibatis.annotations.Mapper;\n \n+import java.util.List;\n+\n @Mapper\n public interface UserMapper {\n+    List<User> listAllUsers();\n+\n+    List<User> listAllUsersByKeyword(String keyword);\n+\n     Integer selectUserIdByUserName(String username);\n \n     Integer insertUserSelective(User user);"
  },
  {
    "sha": "41b7a7a105fbc8eaf11485d9dbf793eeb23bc7a1",
    "filename": "truckcargomatch/src/main/java/com/cton/model/Cargo.java",
    "status": "added",
    "additions": 94,
    "deletions": 0,
    "changes": 94,
    "blob_url": "https://github.com/GitHubNJUPT528/ctontcm/blob/dfc7523b7c96c338fc290969dc3f410c7bad526a/truckcargomatch/src/main/java/com/cton/model/Cargo.java",
    "raw_url": "https://github.com/GitHubNJUPT528/ctontcm/raw/dfc7523b7c96c338fc290969dc3f410c7bad526a/truckcargomatch/src/main/java/com/cton/model/Cargo.java",
    "contents_url": "https://api.github.com/repos/GitHubNJUPT528/ctontcm/contents/truckcargomatch/src/main/java/com/cton/model/Cargo.java?ref=dfc7523b7c96c338fc290969dc3f410c7bad526a",
    "patch": "@@ -0,0 +1,94 @@\n+package com.cton.model;\n+\n+import java.io.Serializable;\n+import java.util.Date;\n+import lombok.Data;\n+\n+/**\n+ * t_cargo\n+ * @author \n+ */\n+@Data\n+public class Cargo implements Serializable {\n+    private Integer id;\n+\n+    private Long cargoId;\n+\n+    private String senderId;\n+\n+    private String senderName;\n+\n+    private String senderPhone;\n+\n+    private String origin;\n+\n+    private String destination;\n+\n+    private Integer networkId;\n+\n+    private String detailedOrigin;\n+\n+    private Double detailedOriginLongitude;\n+\n+    private Double detailedOriginLatitude;\n+\n+    private String detailedDestination;\n+\n+    private Double detailedDestinationLongitude;\n+\n+    private Double detailedDestinationLatitude;\n+\n+    /**\n+     * 0：拼车\\n1：整车\n+     */\n+    private Integer type;\n+\n+    /**\n+     * 0：代表未接单\\n1：代表已结单\n+     */\n+    private Boolean isCargoTaking;\n+\n+    private Double mass;\n+\n+    private Double length;\n+\n+    private Double width;\n+\n+    private Double hight;\n+\n+    private Double volume;\n+\n+    private Double price;\n+\n+    private String cargoDescription;\n+\n+    /**\n+     * 0未完成; 1已完成\n+     */\n+    private Boolean completed;\n+\n+    private Double grade;\n+\n+    private Boolean payed;\n+\n+    private Boolean big;\n+\n+    private Integer transportationRecordId;\n+\n+    private Double realPrice;\n+\n+    private String currentCity;\n+\n+    private Integer currentState;\n+\n+    private Date expectedArrivalTime;\n+\n+    private Integer expectedPrice;\n+\n+    /**\n+     * 与转运中心绑定\n+     */\n+    private Integer transportationCenterId;\n+\n+    private static final long serialVersionUID = 1L;\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "2aa637481e7e4c7b2c137e2f15bef3f4336c7848",
    "filename": "truckcargomatch/src/main/java/com/cton/model/MatchDTO.java",
    "status": "added",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/GitHubNJUPT528/ctontcm/blob/dfc7523b7c96c338fc290969dc3f410c7bad526a/truckcargomatch/src/main/java/com/cton/model/MatchDTO.java",
    "raw_url": "https://github.com/GitHubNJUPT528/ctontcm/raw/dfc7523b7c96c338fc290969dc3f410c7bad526a/truckcargomatch/src/main/java/com/cton/model/MatchDTO.java",
    "contents_url": "https://api.github.com/repos/GitHubNJUPT528/ctontcm/contents/truckcargomatch/src/main/java/com/cton/model/MatchDTO.java?ref=dfc7523b7c96c338fc290969dc3f410c7bad526a",
    "patch": "@@ -0,0 +1,20 @@\n+package com.cton.model;\n+\n+import com.github.skjolber.packing.Space;\n+import lombok.AllArgsConstructor;\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+\n+@Data\n+@NoArgsConstructor\n+@AllArgsConstructor\n+public class MatchDTO {\n+    private String boxName;\n+    private int volume;\n+    private int mass;\n+    private int length;\n+    private int width;\n+    private int hight;\n+    private int[] space;\n+\n+}"
  },
  {
    "sha": "cbba0d9ee8942dadf4fdf4758f51591751a12e67",
    "filename": "truckcargomatch/src/main/java/com/cton/model/OssEntity.java",
    "status": "modified",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/GitHubNJUPT528/ctontcm/blob/dfc7523b7c96c338fc290969dc3f410c7bad526a/truckcargomatch/src/main/java/com/cton/model/OssEntity.java",
    "raw_url": "https://github.com/GitHubNJUPT528/ctontcm/raw/dfc7523b7c96c338fc290969dc3f410c7bad526a/truckcargomatch/src/main/java/com/cton/model/OssEntity.java",
    "contents_url": "https://api.github.com/repos/GitHubNJUPT528/ctontcm/contents/truckcargomatch/src/main/java/com/cton/model/OssEntity.java?ref=dfc7523b7c96c338fc290969dc3f410c7bad526a",
    "patch": "@@ -1,19 +1,27 @@\n package com.cton.model;\n \n \n+import io.swagger.annotations.ApiModel;\n+import io.swagger.annotations.ApiModelProperty;\n import lombok.Data;\n import org.springframework.boot.context.properties.ConfigurationProperties;\n import org.springframework.stereotype.Component;\n \n @Data\n @Component\n @ConfigurationProperties(prefix = \"alioss\")\n+@ApiModel(value = \"Oss对象\",description = \"Oss对象\") //需要注意必须在controller中关联实体类 才能在文档中显示\n public class OssEntity {\n+\n+    @ApiModelProperty(\"终端节点\")\n     private String endpoint;\n \n+    @ApiModelProperty(\"许可ID\")\n     private String accessKeyId;\n \n+    @ApiModelProperty(\"许可密码\")\n     private String accessKeySecret;\n \n+    @ApiModelProperty(\"bucket名\")\n     private String bucketName;\n }"
  },
  {
    "sha": "4fdf0129ea6b85a4c32298027c968fc586406b11",
    "filename": "truckcargomatch/src/main/java/com/cton/model/Permission.java",
    "status": "modified",
    "additions": 24,
    "deletions": 0,
    "changes": 24,
    "blob_url": "https://github.com/GitHubNJUPT528/ctontcm/blob/dfc7523b7c96c338fc290969dc3f410c7bad526a/truckcargomatch/src/main/java/com/cton/model/Permission.java",
    "raw_url": "https://github.com/GitHubNJUPT528/ctontcm/raw/dfc7523b7c96c338fc290969dc3f410c7bad526a/truckcargomatch/src/main/java/com/cton/model/Permission.java",
    "contents_url": "https://api.github.com/repos/GitHubNJUPT528/ctontcm/contents/truckcargomatch/src/main/java/com/cton/model/Permission.java?ref=dfc7523b7c96c338fc290969dc3f410c7bad526a",
    "patch": "@@ -2,65 +2,89 @@\n \n import java.io.Serializable;\n import java.util.Date;\n+\n+import io.swagger.annotations.ApiModel;\n+import io.swagger.annotations.ApiModelProperty;\n+import lombok.AllArgsConstructor;\n import lombok.Data;\n+import lombok.NoArgsConstructor;\n \n /**\n  * u_permission\n  * @author\n  */\n @Data\n+@AllArgsConstructor\n+@NoArgsConstructor\n+@ApiModel(value = \"Permission对象\",description = \"权限对象\") //需要注意必须在controller中关联实体类 才能在文档中显示\n public class Permission implements Serializable {\n+    /**\n+     * 权限id\n+     */\n+    @ApiModelProperty(\"权限id\")\n     private Integer id;\n \n \n     /**\n      * 权限名称\n      */\n+    @ApiModelProperty(\"权限名\")\n     private String permname;\n \n     /**\n      * 权限描述\n      */\n+    @ApiModelProperty(\"权限描述\")\n     private String description;\n \n     /**\n      * 权限访问路径\n      */\n+    @ApiModelProperty(\"权限访问路径\")\n     private String url;\n \n     /**\n      * 权限标识\n      */\n+    @ApiModelProperty(\"权限标识\")\n     private String perms;\n \n     /**\n      * 父级权限id\n      */\n+    @ApiModelProperty(\"父级权限id\")\n     private Integer parentId;\n \n     /**\n      * 类型   0：目录   1：菜单   2：按钮\n      */\n+    @ApiModelProperty(\"类型   0：目录   1：菜单   2：按钮\")\n     private Integer type;\n \n     /**\n      * 排序\n      */\n+    @ApiModelProperty(\"排序\")\n     private Integer orderNum;\n \n     /**\n      * 图标\n      */\n+    @ApiModelProperty(\"图标\")\n     private String icon;\n \n     /**\n      * 状态：1有效；2删除\n      */\n+    @ApiModelProperty(\"状态 1有效2删除\")\n     private Integer status;\n \n+    @ApiModelProperty(\"创建时间\")\n     private Date createTime;\n \n+    @ApiModelProperty(\"更新时间\")\n     private Date updateTime;\n \n+    @ApiModelProperty(\"序列ID\")\n     private static final long serialVersionUID = 1L;\n }"
  },
  {
    "sha": "5fdc568e7877e6b2469e5a27867d2eac7cdff72d",
    "filename": "truckcargomatch/src/main/java/com/cton/model/Role.java",
    "status": "modified",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/GitHubNJUPT528/ctontcm/blob/dfc7523b7c96c338fc290969dc3f410c7bad526a/truckcargomatch/src/main/java/com/cton/model/Role.java",
    "raw_url": "https://github.com/GitHubNJUPT528/ctontcm/raw/dfc7523b7c96c338fc290969dc3f410c7bad526a/truckcargomatch/src/main/java/com/cton/model/Role.java",
    "contents_url": "https://api.github.com/repos/GitHubNJUPT528/ctontcm/contents/truckcargomatch/src/main/java/com/cton/model/Role.java?ref=dfc7523b7c96c338fc290969dc3f410c7bad526a",
    "patch": "@@ -2,40 +2,58 @@\n \n import java.io.Serializable;\n import java.util.Date;\n+\n+import io.swagger.annotations.ApiModel;\n+import io.swagger.annotations.ApiModelProperty;\n+import lombok.AllArgsConstructor;\n import lombok.Data;\n+import lombok.NoArgsConstructor;\n \n /**\n  * u_role\n  * @author\n  */\n @Data\n+@AllArgsConstructor\n+@NoArgsConstructor\n+@ApiModel(value = \"Role对象\",description = \"角色对象\") //需要注意必须在controller中关联实体类 才能在文档中显示\n public class Role implements Serializable {\n+    /**\n+     * 角色id\n+     */\n+    @ApiModelProperty(\"角色id\")\n     private Integer id;\n \n     /**\n      * 角色名称\n      */\n+    @ApiModelProperty(\"角色名\")\n     private String rolename;\n \n     /**\n      * 角色描述\n      */\n+    @ApiModelProperty(\"角色描述\")\n     private String description;\n \n     /**\n      * 状态：1有效；2删除\n      */\n+    @ApiModelProperty(\"状态 1有效2删除\")\n     private Integer status;\n \n     /**\n      * 创建时间\n      */\n+    @ApiModelProperty(\"创建时间\")\n     private Date createTime;\n \n     /**\n      * 更新时间\n      */\n+    @ApiModelProperty(\"更新时间\")\n     private Date updateTime;\n \n+    @ApiModelProperty(\"序列ID\")\n     private static final long serialVersionUID = 1L;\n }"
  },
  {
    "sha": "d207041b8f7bbc8075ba7c9e5389436e0f486992",
    "filename": "truckcargomatch/src/main/java/com/cton/model/Truck.java",
    "status": "added",
    "additions": 40,
    "deletions": 0,
    "changes": 40,
    "blob_url": "https://github.com/GitHubNJUPT528/ctontcm/blob/dfc7523b7c96c338fc290969dc3f410c7bad526a/truckcargomatch/src/main/java/com/cton/model/Truck.java",
    "raw_url": "https://github.com/GitHubNJUPT528/ctontcm/raw/dfc7523b7c96c338fc290969dc3f410c7bad526a/truckcargomatch/src/main/java/com/cton/model/Truck.java",
    "contents_url": "https://api.github.com/repos/GitHubNJUPT528/ctontcm/contents/truckcargomatch/src/main/java/com/cton/model/Truck.java?ref=dfc7523b7c96c338fc290969dc3f410c7bad526a",
    "patch": "@@ -0,0 +1,40 @@\n+package com.cton.model;\n+\n+import java.io.Serializable;\n+\n+import io.swagger.annotations.ApiModel;\n+import io.swagger.annotations.ApiModelProperty;\n+import lombok.AllArgsConstructor;\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+\n+/**\n+ * t_truck\n+ * @author\n+ */\n+@Data\n+@AllArgsConstructor\n+@NoArgsConstructor\n+@ApiModel(value = \"Truck对象\",description = \"货车对象\")\n+public class Truck implements Serializable {\n+    @ApiModelProperty(\"货车ID\")\n+    private Integer id;\n+\n+    @ApiModelProperty(\"货车类型\")\n+    private String truckType;\n+\n+    @ApiModelProperty(\"货车数量\")\n+    private Integer count;\n+\n+    @ApiModelProperty(\"货车容量\")\n+    private Double truckVolume;\n+\n+    @ApiModelProperty(\"货车载重\")\n+    private Double truckLoad;\n+\n+    @ApiModelProperty(\"百公里油耗\")\n+    private Double fuelLitersperhundredmiles;\n+\n+    @ApiModelProperty(\"序列ID\")\n+    private static final long serialVersionUID = 11L;\n+}"
  },
  {
    "sha": "2dc8f5be463066f13ed2e703d55fa583ffae9388",
    "filename": "truckcargomatch/src/main/java/com/cton/model/User.java",
    "status": "modified",
    "additions": 17,
    "deletions": 0,
    "changes": 17,
    "blob_url": "https://github.com/GitHubNJUPT528/ctontcm/blob/dfc7523b7c96c338fc290969dc3f410c7bad526a/truckcargomatch/src/main/java/com/cton/model/User.java",
    "raw_url": "https://github.com/GitHubNJUPT528/ctontcm/raw/dfc7523b7c96c338fc290969dc3f410c7bad526a/truckcargomatch/src/main/java/com/cton/model/User.java",
    "contents_url": "https://api.github.com/repos/GitHubNJUPT528/ctontcm/contents/truckcargomatch/src/main/java/com/cton/model/User.java?ref=dfc7523b7c96c338fc290969dc3f410c7bad526a",
    "patch": "@@ -5,13 +5,17 @@\n \n import io.swagger.annotations.ApiModel;\n import io.swagger.annotations.ApiModelProperty;\n+import lombok.AllArgsConstructor;\n import lombok.Data;\n+import lombok.NoArgsConstructor;\n \n /**\n  * u_user\n  * @author\n  */\n @Data\n+@AllArgsConstructor\n+@NoArgsConstructor\n @ApiModel(value = \"User对象\",description = \"用户对象\") //需要注意必须在controller中关联实体类 才能在文档中显示\n public class User extends UserKey implements Serializable {\n     /**\n@@ -20,62 +24,75 @@\n     @ApiModelProperty(\"用户名\")\n     private String username;\n \n+    @ApiModelProperty(\"密码\")\n     private String password;\n \n     /**\n      * 加密盐值\n      */\n+    @ApiModelProperty(\"盐值\")\n     private String salt;\n \n     /**\n      * 邮箱\n      */\n+    @ApiModelProperty(\"邮箱\")\n     private String email;\n \n     /**\n      * 联系方式\n      */\n+    @ApiModelProperty(\"手机号\")\n     private String phone;\n \n     /**\n      * 年龄：1男2女\n      */\n+    @ApiModelProperty(\"性别 1男2女\")\n     private Integer sex;\n \n     /**\n      * 年龄\n      */\n+    @ApiModelProperty(\"年龄\")\n     private Integer age;\n \n     /**\n      * 用户状态：1有效; 2删除\n      */\n+    @ApiModelProperty(\"状态 1有效2删除\")\n     private Integer status;\n \n     /**\n      * 创建时间\n      */\n+    @ApiModelProperty(\"创建时间\")\n     private Date createTime;\n \n     /**\n      * 更新时间\n      */\n+    @ApiModelProperty(\"更新时间\")\n     private Date updateTime;\n \n     /**\n      * 最后登录时间\n      */\n+    @ApiModelProperty(\"最后登录时间\")\n     private Date lastLoginTime;\n \n     /**\n      * 临时字段1\n      */\n+    @ApiModelProperty(\"临时字段1\")\n     private String tmp1;\n \n     /**\n      * 临时字段2\n      */\n+    @ApiModelProperty(\"临时字段2\")\n     private String tmp2;\n \n+    @ApiModelProperty(\"序列ID\")\n     private static final long serialVersionUID = 1L;\n }"
  },
  {
    "sha": "89ceef0df8cc127e9ca57f94b1d30d24fb56cb42",
    "filename": "truckcargomatch/src/main/java/com/cton/model/UserKey.java",
    "status": "modified",
    "additions": 10,
    "deletions": 4,
    "changes": 14,
    "blob_url": "https://github.com/GitHubNJUPT528/ctontcm/blob/dfc7523b7c96c338fc290969dc3f410c7bad526a/truckcargomatch/src/main/java/com/cton/model/UserKey.java",
    "raw_url": "https://github.com/GitHubNJUPT528/ctontcm/raw/dfc7523b7c96c338fc290969dc3f410c7bad526a/truckcargomatch/src/main/java/com/cton/model/UserKey.java",
    "contents_url": "https://api.github.com/repos/GitHubNJUPT528/ctontcm/contents/truckcargomatch/src/main/java/com/cton/model/UserKey.java?ref=dfc7523b7c96c338fc290969dc3f410c7bad526a",
    "patch": "@@ -1,20 +1,26 @@\n package com.cton.model;\n \n import java.io.Serializable;\n+\n+import io.swagger.annotations.ApiModelProperty;\n+import lombok.AllArgsConstructor;\n import lombok.Data;\n+import lombok.NoArgsConstructor;\n \n /**\n  * u_user\n  * @author\n  */\n @Data\n+@AllArgsConstructor\n+@NoArgsConstructor\n public class UserKey implements Serializable {\n-    private Integer id;\n-\n     /**\n-     * 用户id\n+     * 主键ID\n      */\n-    private Integer userId;\n+    @ApiModelProperty(\"用户id\")\n+    private Integer id;\n \n+    @ApiModelProperty(\"序列ID\")\n     private static final long serialVersionUID = 1L;\n }"
  },
  {
    "sha": "4ad91495f2030dd4394e444a7edec7f3ade543de",
    "filename": "truckcargomatch/src/main/java/com/cton/service/bussiness/TruckCargoMatchingService.java",
    "status": "added",
    "additions": 24,
    "deletions": 0,
    "changes": 24,
    "blob_url": "https://github.com/GitHubNJUPT528/ctontcm/blob/dfc7523b7c96c338fc290969dc3f410c7bad526a/truckcargomatch/src/main/java/com/cton/service/bussiness/TruckCargoMatchingService.java",
    "raw_url": "https://github.com/GitHubNJUPT528/ctontcm/raw/dfc7523b7c96c338fc290969dc3f410c7bad526a/truckcargomatch/src/main/java/com/cton/service/bussiness/TruckCargoMatchingService.java",
    "contents_url": "https://api.github.com/repos/GitHubNJUPT528/ctontcm/contents/truckcargomatch/src/main/java/com/cton/service/bussiness/TruckCargoMatchingService.java?ref=dfc7523b7c96c338fc290969dc3f410c7bad526a",
    "patch": "@@ -0,0 +1,24 @@\n+package com.cton.service.bussiness;\n+\n+\n+\n+import com.cton.model.Cargo;\n+import com.cton.model.MatchDTO;\n+import com.github.skjolber.packing.Container;\n+\n+import java.util.List;\n+\n+public interface TruckCargoMatchingService {\n+\n+\n+\n+    //拼单分离出的动态规划算法\n+    List<Cargo> dynamicAlgorithm(List<Cargo> cargos, double load, double volume);\n+\n+    //遗传算法\n+    List<Cargo> gaAlgorithm(List<Cargo> cargos, double load, double volume);\n+\n+    //带装箱的匹配\n+    List<Object> aaa(double length, double width, double hight, double tvolume, double tmass);\n+}\n+"
  },
  {
    "sha": "98379ce1b5aa08919071f33cabf0f8ffb8efb0f2",
    "filename": "truckcargomatch/src/main/java/com/cton/service/bussiness/TruckCargoMatchingServiceImpl.java",
    "status": "added",
    "additions": 191,
    "deletions": 0,
    "changes": 191,
    "blob_url": "https://github.com/GitHubNJUPT528/ctontcm/blob/dfc7523b7c96c338fc290969dc3f410c7bad526a/truckcargomatch/src/main/java/com/cton/service/bussiness/TruckCargoMatchingServiceImpl.java",
    "raw_url": "https://github.com/GitHubNJUPT528/ctontcm/raw/dfc7523b7c96c338fc290969dc3f410c7bad526a/truckcargomatch/src/main/java/com/cton/service/bussiness/TruckCargoMatchingServiceImpl.java",
    "contents_url": "https://api.github.com/repos/GitHubNJUPT528/ctontcm/contents/truckcargomatch/src/main/java/com/cton/service/bussiness/TruckCargoMatchingServiceImpl.java?ref=dfc7523b7c96c338fc290969dc3f410c7bad526a",
    "patch": "@@ -0,0 +1,191 @@\n+package com.cton.service.bussiness;\n+\n+\n+import com.cton.model.Cargo;\n+import com.cton.model.MatchDTO;\n+import com.cton.service.cargo.CargoService;\n+import com.cton.utils.ga.GeneticAlgorithm;\n+import com.cton.utils.ga.Chromosome;\n+import com.github.skjolber.packing.*;\n+import org.apache.commons.collections.map.HashedMap;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+\n+import java.text.NumberFormat;\n+import java.util.*;\n+\n+@Service\n+public class TruckCargoMatchingServiceImpl implements TruckCargoMatchingService {\n+\n+    @Autowired\n+    private TruckCargoMatchingService truckCargoMatchingService;\n+\n+    @Autowired\n+    private CargoService cargoService;\n+\n+\n+    @Override\n+    public List<Cargo> dynamicAlgorithm(List<Cargo> cargos, double load, double volume) {   ////可以输出一个车接单价值最大得货物清单\n+\n+        //6.8 修改匹配算法为动态规划求解\n+        ArrayList<Cargo> cargoResultlist = new ArrayList<>();\n+        int numOfCargo = cargos.size();\n+        int loadOfTruck = (int) Math.ceil(load);\n+        int volumeOfTruck = (int) Math.ceil(volume);\n+        //创建三维数组，\n+        //v[i][j][k] 表示在前i个货物中能够装入载重为j，容量为k的货车中的最大价值\n+        double[][][] v = new double[numOfCargo + 1][loadOfTruck + 1][volumeOfTruck + 1];\n+        //为了记录放入货物的情况，我们定一个三维数组\n+        double[][][] path = new double[numOfCargo + 1][loadOfTruck + 1][volumeOfTruck + 1];\n+\n+        //根据动态规划思想处理\n+        for (int i = 1; i < v.length; i++) {\n+            for (int j = 1; j < v[i].length; j++) {\n+                for (int k = 1; k < v[i][j].length; k++) {\n+                    if (cargos.get(i - 1).getMass() > j || cargos.get(i - 1).getVolume() > k) { ////找到货物的jk\n+                        v[i][j][k] = v[i - 1][j][k];\n+                    } else {\n+\n+                        if (v[i - 1][j][k] < cargos.get(i - 1).getPrice() +\n+                                v[i - 1][j - (int) Math.ceil(cargos.get(i - 1).getMass())][k - (int) Math.ceil(cargos.get(i - 1).getVolume())]) {\n+\n+                            v[i][j][k] = cargos.get(i - 1).getPrice() +\n+                                    v[i - 1][j - (int) Math.ceil(cargos.get(i - 1).getMass())][k - (int) Math.ceil(cargos.get(i - 1).getVolume())];\n+                            path[i][j][k] = 1;\n+                        } else {\n+                            v[i][j][k] = v[i - 1][j][k];\n+                        }\n+                    }\n+                }\n+            }\n+\n+        }\n+\n+        //输出一下动态规划表的目前情况\n+//        for (int i = 0; i < v.length; i++) {\n+//            for (int j = 0; j < v[i].length; j++) {\n+//                for (int k = 0; k < v[i][j].length; k++) {\n+//                    System.out.print(v[i][j][k] + \" \");\n+//                }\n+//            }\n+//            System.out.println();\n+//        }\n+\n+        //取出动态规划得到的结果\n+        int i = path.length - 1;\n+        int j = path[0].length - 1;\n+        int k = path[0][0].length - 1;\n+        while (i > 0 && j > 0 && k > 0) {\n+            if (path[i][j][k] == 1) {\n+                j -= cargos.get(i - 1).getMass();\n+                k -= cargos.get(i - 1).getVolume();\n+                cargoResultlist.add(cargos.get(i - 1));\n+            }\n+            i--;\n+        }\n+\n+        return cargoResultlist;\n+    }\n+\n+\n+    //遗传算法\n+    @Override\n+    public List<Cargo> gaAlgorithm(List<Cargo> cargos, double load, double volume) {\n+        if(cargos.size()<1){return null;}\n+        ArrayList<Cargo> cargoResultlist = new ArrayList<>();\n+        List<Cargo> cargosResult = new ArrayList<>();\n+        GeneticAlgorithm test = new GeneticAlgorithm();\n+        test.setCargo(cargos);\n+        int i=test.getcargo().size();\n+        test.setGeneSize(i);\n+        cargosResult = test.caculte(load,volume);\n+        for(Cargo cargo : cargosResult){\n+            cargoResultlist.add(cargo);\n+        }\n+//        Collections.sort(cargoResultlist, new Comparator<Cargo>() {\n+//            @Override\n+//            public int compare(Cargo o1, Cargo o2) {\n+//                if(o1.getPrice()<o2.getPrice()){\n+//                    return 1;\n+//                }\n+//                return -1;\n+//            }\n+//        });\n+        return cargoResultlist;\n+    }\n+\n+    @Override\n+    public List<Object> aaa(double length, double width, double hight, double tvolume,double tmass) {\n+        List<Cargo> readyCargoes = cargoService.listCargoNoTaking();\n+        List<Cargo> cargoes = new ArrayList<>();\n+        Double temp_volume = 0.0;\n+        Double temp_mass = 0.0;\n+        for (Cargo cargo: readyCargoes\n+        ) {\n+            temp_volume += cargo.getVolume();\n+            temp_mass += cargo.getMass();\n+            if (temp_volume<=tvolume*1.5 && temp_mass <=tmass *1.5){\n+                cargoes.add(cargo);\n+            }else {\n+                break;\n+            }\n+        }\n+        Boolean flag = false;\n+        while (flag==false){\n+            List<Cargo> matchResult = truckCargoMatchingService.gaAlgorithm(cargoes,tmass,tvolume);\n+            System.out.println(\"匹配结束\");\n+\n+            List<Container> containers = new ArrayList<Container>();\n+            containers.add(new Container(\"truck\",(int)length, (int)width, (int)hight, (int)tmass)); // x y z and weight\n+\n+            Packager packager = LargestAreaFitFirstPackager.newBuilder().withContainers(containers).build();\n+\n+            List<BoxItem> products = new ArrayList<BoxItem>();\n+            Double volume = 0.0;\n+            Double mass = 0.0;\n+            for (Cargo cargo:matchResult\n+            ) {\n+                products.add(new BoxItem(new Box(\"分公司\"+cargo.getNetworkId()+\"货物\"+cargo.getId(), (int)Math.ceil(cargo.getLength()), (int)Math.ceil(cargo.getWidth()), (int)Math.ceil(cargo.getLength()), (int)Math.ceil(cargo.getMass())), 1));\n+                volume += cargo.getVolume();\n+                mass += cargo.getMass();\n+            }\n+            Container match = packager.pack(products);\n+            if (match == null){\n+                continue;\n+            }\n+\n+\n+            System.out.println(match);\n+            System.out.println(\"匹配的货物数量：\"+matchResult.size());\n+            NumberFormat nt = NumberFormat.getPercentInstance();//获取格式化对象\n+            nt.setMinimumFractionDigits(2);//设置百分数精确度2即保留两位小数\n+//            System.out.println(\"百分数1：\" + nt.format(percent));//最后格式化并输出\n+            System.out.println(\"空间满载率为:\"+nt.format(volume/match.getVolume())+\",\"+\"重量满载率为:\"+nt.format(mass/match.getWeight()));\n+            flag = true;\n+            List<MatchDTO> matchDTOList = new ArrayList<>();\n+            for (int i=0; i<match.getLevels().get(0).size();i++) {\n+                MatchDTO matchDTO = new MatchDTO();\n+                matchDTO.setBoxName(match.getLevels().get(0).get(i).getBox().getName());\n+                matchDTO.setSpace(new int[]{match.getLevels().get(0).get(i).getSpace().getX(),match.getLevels().get(0).get(i).getSpace().getY(),match.getLevels().get(0).get(i).getSpace().getZ()});\n+                matchDTO.setLength(match.getLevels().get(0).get(i).getBox().getWidth());\n+                matchDTO.setWidth(match.getLevels().get(0).get(i).getBox().getDepth());\n+                matchDTO.setHight(match.getLevels().get(0).get(i).getBox().getHeight());\n+                matchDTO.setVolume((int)match.getLevels().get(0).get(i).getBox().getVolume());\n+                matchDTO.setMass(match.getLevels().get(0).get(i).getBox().getWeight());\n+\n+                matchDTOList.add(matchDTO);\n+            }\n+            Map<String,Integer> resultMap = new HashMap();\n+            resultMap.put(\"volume\",(int)Math.floor(volume));\n+            resultMap.put(\"mass\",(int)Math.floor(mass));\n+\n+            List<Object> resultList = new ArrayList<>();\n+            resultList.add(resultMap);\n+            resultList.add(matchDTOList);\n+            return resultList;\n+        }\n+        return null;\n+    }\n+\n+\n+}"
  },
  {
    "sha": "16a49a60b752e877dffa7f56ae4426fc4e7bf02b",
    "filename": "truckcargomatch/src/main/java/com/cton/service/cargo/CargoService.java",
    "status": "added",
    "additions": 23,
    "deletions": 0,
    "changes": 23,
    "blob_url": "https://github.com/GitHubNJUPT528/ctontcm/blob/dfc7523b7c96c338fc290969dc3f410c7bad526a/truckcargomatch/src/main/java/com/cton/service/cargo/CargoService.java",
    "raw_url": "https://github.com/GitHubNJUPT528/ctontcm/raw/dfc7523b7c96c338fc290969dc3f410c7bad526a/truckcargomatch/src/main/java/com/cton/service/cargo/CargoService.java",
    "contents_url": "https://api.github.com/repos/GitHubNJUPT528/ctontcm/contents/truckcargomatch/src/main/java/com/cton/service/cargo/CargoService.java?ref=dfc7523b7c96c338fc290969dc3f410c7bad526a",
    "patch": "@@ -0,0 +1,23 @@\n+package com.cton.service.cargo;\n+\n+import com.cton.model.Cargo;\n+\n+import java.util.List;\n+\n+public interface CargoService {\n+    List<Cargo> listCargoNoTaking();\n+\n+    List<Cargo> listCargo();\n+\n+    int deleteByPrimaryKey(Integer id);\n+\n+    int insert(Cargo record);\n+\n+    int insertSelective(Cargo record);\n+\n+    Cargo selectByPrimaryKey(Integer id);\n+\n+    int updateByPrimaryKeySelective(Cargo record);\n+\n+    int updateByPrimaryKey(Cargo record);\n+}"
  },
  {
    "sha": "28f2f84bcf112fef2ddfe95680d82ae6f4857850",
    "filename": "truckcargomatch/src/main/java/com/cton/service/cargo/CargoServiceImpl.java",
    "status": "added",
    "additions": 55,
    "deletions": 0,
    "changes": 55,
    "blob_url": "https://github.com/GitHubNJUPT528/ctontcm/blob/dfc7523b7c96c338fc290969dc3f410c7bad526a/truckcargomatch/src/main/java/com/cton/service/cargo/CargoServiceImpl.java",
    "raw_url": "https://github.com/GitHubNJUPT528/ctontcm/raw/dfc7523b7c96c338fc290969dc3f410c7bad526a/truckcargomatch/src/main/java/com/cton/service/cargo/CargoServiceImpl.java",
    "contents_url": "https://api.github.com/repos/GitHubNJUPT528/ctontcm/contents/truckcargomatch/src/main/java/com/cton/service/cargo/CargoServiceImpl.java?ref=dfc7523b7c96c338fc290969dc3f410c7bad526a",
    "patch": "@@ -0,0 +1,55 @@\n+package com.cton.service.cargo;\n+\n+import com.cton.mapper.CargoMapper;\n+import com.cton.model.Cargo;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+\n+import java.util.List;\n+\n+@Service\n+public class CargoServiceImpl implements CargoService {\n+\n+    @Autowired\n+    private CargoMapper cargoMapper;\n+\n+    @Override\n+    public List<Cargo> listCargoNoTaking() {\n+        return cargoMapper.listCargoNoTaking();\n+    }\n+\n+    @Override\n+    public List<Cargo> listCargo() {\n+        return cargoMapper.listCargo();\n+    }\n+\n+    @Override\n+    public int deleteByPrimaryKey(Integer id) {\n+        return cargoMapper.deleteByPrimaryKey(id);\n+    }\n+\n+    @Override\n+    public int insert(Cargo record) {\n+        return cargoMapper.insert(record);\n+    }\n+\n+    @Override\n+    public int insertSelective(Cargo record) {\n+        return cargoMapper.insertSelective(record);\n+    }\n+\n+    @Override\n+    public Cargo selectByPrimaryKey(Integer id) {\n+        return cargoMapper.selectByPrimaryKey(id);\n+    }\n+\n+    @Override\n+    public int updateByPrimaryKeySelective(Cargo record) {\n+        return cargoMapper.updateByPrimaryKeySelective(record);\n+    }\n+\n+    @Override\n+    public int updateByPrimaryKey(Cargo record) {\n+        return cargoMapper.updateByPrimaryKey(record);\n+    }\n+}"
  },
  {
    "sha": "ff1e44433fe065c659fd0d60eb81322a994ec5f2",
    "filename": "truckcargomatch/src/main/java/com/cton/service/perms/PermsService.java",
    "status": "modified",
    "additions": 12,
    "deletions": 7,
    "changes": 19,
    "blob_url": "https://github.com/GitHubNJUPT528/ctontcm/blob/dfc7523b7c96c338fc290969dc3f410c7bad526a/truckcargomatch/src/main/java/com/cton/service/perms/PermsService.java",
    "raw_url": "https://github.com/GitHubNJUPT528/ctontcm/raw/dfc7523b7c96c338fc290969dc3f410c7bad526a/truckcargomatch/src/main/java/com/cton/service/perms/PermsService.java",
    "contents_url": "https://api.github.com/repos/GitHubNJUPT528/ctontcm/contents/truckcargomatch/src/main/java/com/cton/service/perms/PermsService.java?ref=dfc7523b7c96c338fc290969dc3f410c7bad526a",
    "patch": "@@ -2,23 +2,28 @@\n \n import com.cton.constants.ResultDTO;\n import com.cton.model.Permission;\n+import com.cton.utils.PageBean;\n \n import java.util.List;\n \n public interface PermsService {\n \n-    ResultDTO selectPermNameByPermId(Integer permId);\n+    List<Permission> listAllPerms();\n \n-    ResultDTO selectPermissionById(Integer id);\n+    PageBean<Permission> listAllPermsByKeyword(Integer type, String nameKeyword, String urlKeyword, Integer pageSize, Integer currentPage);\n \n-    ResultDTO selectPermissionByPermName(String permname);\n+    String selectPermNameByPermId(Integer permId);\n \n-    ResultDTO deletePermissionById(Integer id);\n+    Permission selectPermissionById(Integer id);\n \n-    ResultDTO deletePermissionByPermName(String permname);\n+    Permission selectPermissionByPermName(String permname);\n \n-    ResultDTO insertPermissionSelective(Permission permission);\n+    Integer deletePermissionById(Integer id);\n \n-    ResultDTO updatePermissionByIdSelective(Permission permission);\n+    Integer deletePermissionByPermName(String permname);\n+\n+    Integer insertPermissionSelective(Permission permission);\n+\n+    Integer updatePermissionByIdSelective(Permission permission);\n \n }"
  },
  {
    "sha": "8e39ebc0d276d5e2b41498f78119822a36864abb",
    "filename": "truckcargomatch/src/main/java/com/cton/service/perms/PermsServiceImpl.java",
    "status": "modified",
    "additions": 84,
    "deletions": 50,
    "changes": 134,
    "blob_url": "https://github.com/GitHubNJUPT528/ctontcm/blob/dfc7523b7c96c338fc290969dc3f410c7bad526a/truckcargomatch/src/main/java/com/cton/service/perms/PermsServiceImpl.java",
    "raw_url": "https://github.com/GitHubNJUPT528/ctontcm/raw/dfc7523b7c96c338fc290969dc3f410c7bad526a/truckcargomatch/src/main/java/com/cton/service/perms/PermsServiceImpl.java",
    "contents_url": "https://api.github.com/repos/GitHubNJUPT528/ctontcm/contents/truckcargomatch/src/main/java/com/cton/service/perms/PermsServiceImpl.java?ref=dfc7523b7c96c338fc290969dc3f410c7bad526a",
    "patch": "@@ -4,10 +4,17 @@\n import com.cton.enums.HttpCode;\n import com.cton.mapper.PermissionMapper;\n import com.cton.model.Permission;\n+import com.cton.model.User;\n+import com.cton.utils.PageBean;\n import com.cton.utils.ResultUtil;\n+import com.github.pagehelper.PageHelper;\n import com.mysql.cj.util.StringUtils;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Service;\n+import org.springframework.transaction.annotation.Transactional;\n+\n+import java.util.Date;\n+import java.util.List;\n \n \n @Service\n@@ -17,74 +24,101 @@\n     private PermissionMapper permissionMapper;\n \n     @Override\n-    public ResultDTO selectPermNameByPermId(Integer permId){\n-\n-        String returnString = permissionMapper.selectPermNameByPermId(permId);\n-        if(StringUtils.isNullOrEmpty(returnString)){\n-            return ResultUtil.error(HttpCode.FAIL.getCode(),\"根据权限ID查找权限名失败\");\n-        }else{\n-            return ResultUtil.success(\"根据权限ID查找权限名成功\",returnString);\n-        }\n+    public List<Permission> listAllPerms() {\n+        return permissionMapper.listAllPerms();\n+    }\n+\n+    @Override\n+    public PageBean<Permission> listAllPermsByKeyword(Integer type, String nameKeyword, String urlKeyword, Integer pageSize, Integer currentPage){\n+        PageHelper.startPage(currentPage, pageSize);\n+        List<Permission> permissionList = permissionMapper.listAllPermsByKeyword(type, nameKeyword, urlKeyword);\n+\n+        // 自定义分页信息\n+        int countNums = permissionList.size();     //总记录数\n+        PageBean<Permission> pageData = new PageBean<>(currentPage, pageSize, countNums);\n+        pageData.setItems(permissionList);\n+        return pageData;\n+\n+    }\n+\n+    @Override\n+    public String selectPermNameByPermId(Integer permId){\n+        return permissionMapper.selectPermNameByPermId(permId);\n+//        String returnString = permissionMapper.selectPermNameByPermId(permId);\n+//        if(StringUtils.isNullOrEmpty(returnString)){\n+//            return ResultUtil.error(HttpCode.FAIL.getCode(),\"根据权限ID查找权限名失败\");\n+//        }else{\n+//            return ResultUtil.success(\"根据权限ID查找权限名成功\",returnString);\n+//        }\n     }\n \n     @Override\n-    public ResultDTO selectPermissionById(Integer id) {\n-        Permission returnPermission = permissionMapper.selectPermissionById(id);\n-        if(null == returnPermission){\n-            return ResultUtil.error(HttpCode.FAIL.getCode(),\"根据主键ID查找权限失败\");\n-        }else{\n-            return ResultUtil.success(\"根据主键ID查找权限成功\",returnPermission);\n-        }\n+    public Permission selectPermissionById(Integer id) {\n+        return permissionMapper.selectPermissionById(id);\n+//        Permission returnPermission = permissionMapper.selectPermissionById(id);\n+//        if(null == returnPermission){\n+//            return ResultUtil.error(HttpCode.FAIL.getCode(),\"根据主键ID查找权限失败\");\n+//        }else{\n+//            return ResultUtil.success(\"根据主键ID查找权限成功\",returnPermission);\n+//        }\n     }\n \n     @Override\n-    public ResultDTO selectPermissionByPermName(String permname) {\n-        Permission returnPermission = permissionMapper.selectPermissionByPermName(permname);\n-        if(null == returnPermission){\n-            return ResultUtil.error(HttpCode.FAIL.getCode(),\"根据权限ID查找权限失败\");\n-        }else{\n-            return ResultUtil.success(\"根据权限ID查找权限成功\",returnPermission);\n-        }\n+    public Permission selectPermissionByPermName(String permname) {\n+        return permissionMapper.selectPermissionByPermName(permname);\n+//        Permission returnPermission = permissionMapper.selectPermissionByPermName(permname);\n+//        if(null == returnPermission){\n+//            return ResultUtil.error(HttpCode.FAIL.getCode(),\"根据权限ID查找权限失败\");\n+//        }else{\n+//            return ResultUtil.success(\"根据权限ID查找权限成功\",returnPermission);\n+//        }\n     }\n \n     @Override\n-    public ResultDTO deletePermissionById(Integer id) {\n-        int returnNumber = permissionMapper.deletePermissionById(id);\n-        if(returnNumber<=0){\n-            return ResultUtil.error(HttpCode.FAIL.getCode(),\"根据主键ID删除权限失败\");\n-        }else{\n-            return ResultUtil.success(\"根据主键ID删除权限成功\");\n-        }\n+    public Integer deletePermissionById(Integer id) {\n+        return permissionMapper.deletePermissionById(id);\n+//        int returnNumber = permissionMapper.deletePermissionById(id);\n+//        if(returnNumber<=0){\n+//            return ResultUtil.error(HttpCode.FAIL.getCode(),\"根据主键ID删除权限失败\");\n+//        }else{\n+//            return ResultUtil.success(\"根据主键ID删除权限成功\");\n+//        }\n     }\n \n     @Override\n-    public ResultDTO deletePermissionByPermName(String permname) {\n-        int returnNumber = permissionMapper.deletePermissionByPermName(permname);\n-        if(returnNumber<=0){\n-            return ResultUtil.error(HttpCode.FAIL.getCode(),\"根据权限ID删除权限失败\");\n-        }else{\n-            return ResultUtil.success(\"根据权限ID删除权限成功\");\n-        }\n+    public Integer deletePermissionByPermName(String permname) {\n+        return permissionMapper.deletePermissionByPermName(permname);\n+//        int returnNumber = permissionMapper.deletePermissionByPermName(permname);\n+//        if(returnNumber<=0){\n+//            return ResultUtil.error(HttpCode.FAIL.getCode(),\"根据权限ID删除权限失败\");\n+//        }else{\n+//            return ResultUtil.success(\"根据权限ID删除权限成功\");\n+//        }\n     }\n \n     @Override\n-    public ResultDTO insertPermissionSelective(Permission permission) {\n-        int returnNumber = permissionMapper.insertPermissionSelective(permission);\n-        if(returnNumber<=0){\n-            return ResultUtil.error(HttpCode.FAIL.getCode(),\"新增权限失败\");\n-        }else{\n-            return ResultUtil.success(\"新增权限成功\");\n-        }\n+    public Integer insertPermissionSelective(Permission permission) {\n+        permission.setCreateTime(new Date());\n+        return permissionMapper.insertPermissionSelective(permission);\n+//        int returnNumber = permissionMapper.insertPermissionSelective(permission);\n+//        if(returnNumber<=0){\n+//            return ResultUtil.error(HttpCode.FAIL.getCode(),\"新增权限失败\");\n+//        }else{\n+//            return ResultUtil.success(\"新增权限成功\");\n+//        }\n     }\n \n     @Override\n-    public ResultDTO updatePermissionByIdSelective(Permission permission) {\n-        int returnNumber = permissionMapper.updatePermissionByIdSelective(permission);\n-        if(returnNumber<=0){\n-            return ResultUtil.error(HttpCode.FAIL.getCode(),\"根据主键ID更新权限失败\");\n-        }else{\n-            return ResultUtil.success(\"根据主键ID更新权限成功\");\n-        }\n+    public Integer updatePermissionByIdSelective(Permission permission) {\n+        permission.setUpdateTime(new Date());\n+        return permissionMapper.updatePermissionByIdSelective(permission);\n+//        int returnNumber = permissionMapper.updatePermissionByIdSelective(permission);\n+//        if(returnNumber<=0){\n+//            return ResultUtil.error(HttpCode.FAIL.getCode(),\"根据主键ID更新权限失败\");\n+//        }else{\n+//            return ResultUtil.success(\"根据主键ID更新权限成功\");\n+//        }\n     }\n \n+\n }"
  },
  {
    "sha": "7169dce176e491560f6ba279b383449fe10b02c6",
    "filename": "truckcargomatch/src/main/java/com/cton/service/role/RoleService.java",
    "status": "modified",
    "additions": 23,
    "deletions": 15,
    "changes": 38,
    "blob_url": "https://github.com/GitHubNJUPT528/ctontcm/blob/dfc7523b7c96c338fc290969dc3f410c7bad526a/truckcargomatch/src/main/java/com/cton/service/role/RoleService.java",
    "raw_url": "https://github.com/GitHubNJUPT528/ctontcm/raw/dfc7523b7c96c338fc290969dc3f410c7bad526a/truckcargomatch/src/main/java/com/cton/service/role/RoleService.java",
    "contents_url": "https://api.github.com/repos/GitHubNJUPT528/ctontcm/contents/truckcargomatch/src/main/java/com/cton/service/role/RoleService.java?ref=dfc7523b7c96c338fc290969dc3f410c7bad526a",
    "patch": "@@ -2,40 +2,48 @@\n \n import com.cton.constants.ResultDTO;\n import com.cton.model.Role;\n+import com.cton.utils.PageBean;\n+import io.swagger.models.auth.In;\n \n import java.util.List;\n \n public interface RoleService {\n+    Integer createRole(Role role);\n \n-    ResultDTO selectRoleNameByRoleId(Integer roleId);\n+    Integer updateRoleByIdSelective(Role role);\n \n-    ResultDTO deleteRoleAllPermsByRoleId(Integer roleId);\n+    List<Role> listAllRoles();\n \n-    ResultDTO deleteRolePermByPermIdAndRoleId(Integer permId,Integer roleId);\n+    PageBean<Role> listAllRolesByKeyword(String keyword, Integer pageSize, Integer currentPage);\n \n-    ResultDTO deleteRoleUserByUserIdAndRoleId(Integer userId,Integer roleId);\n+    String selectRoleNameByRoleId(Integer roleId);\n \n-    ResultDTO selectPermsIdsByRoleId(Integer roleId);\n+    Integer deleteRoleAllPermsByRoleId(Integer roleId);\n \n-    ResultDTO saveRolePerms(Integer roleId, Integer permId);\n+    Integer deleteRolePermByPermIdAndRoleId(Integer permId,Integer roleId);\n \n-    ResultDTO deleteUserAllRolesByUserId(Integer userId);\n+    Integer deleteRoleUserByUserIdAndRoleId(Integer userId,Integer roleId);\n \n-    ResultDTO selectUserAllRolesByUserId(Integer userId);\n+    List<Integer> selectPermsIdsByRoleId(Integer roleId);\n \n-    ResultDTO insertUserRole(Integer userId, Integer roleId);\n+    Integer saveRolePerms(Integer roleId, Integer permId);\n \n-    ResultDTO selectRoleById(Integer id);\n+    Integer deleteUserAllRolesByUserId(Integer userId);\n \n-    ResultDTO selectRoleByRoleName(String rolename);\n+    List<Integer> selectUserAllRolesByUserId(Integer userId);\n \n-    ResultDTO deleteRoleById(Integer id);\n+    Integer insertUserRole(Integer userId, Integer roleId);\n \n-    ResultDTO deleteRoleByRoleName(String rolename);\n+    Role selectRoleById(Integer id);\n \n-    ResultDTO insertRoleSelective(Role role);\n+    Role selectRoleByRoleName(String rolename);\n \n-    ResultDTO updateRoleByIdSelective(Role role);\n+    Integer deleteRoleById(Integer id);\n \n+    Integer deleteRoleByRoleName(String rolename);\n+\n+    Integer deleteBatch(List<Integer> roleIds);\n+\n+    Integer allocPermission(Integer roleId, List<Integer> permissionIds);\n \n }"
  },
  {
    "sha": "8213f596cdac74c52e3e34b0b663adc97f40a2e0",
    "filename": "truckcargomatch/src/main/java/com/cton/service/role/RoleServiceImpl.java",
    "status": "modified",
    "additions": 169,
    "deletions": 106,
    "changes": 275,
    "blob_url": "https://github.com/GitHubNJUPT528/ctontcm/blob/dfc7523b7c96c338fc290969dc3f410c7bad526a/truckcargomatch/src/main/java/com/cton/service/role/RoleServiceImpl.java",
    "raw_url": "https://github.com/GitHubNJUPT528/ctontcm/raw/dfc7523b7c96c338fc290969dc3f410c7bad526a/truckcargomatch/src/main/java/com/cton/service/role/RoleServiceImpl.java",
    "contents_url": "https://api.github.com/repos/GitHubNJUPT528/ctontcm/contents/truckcargomatch/src/main/java/com/cton/service/role/RoleServiceImpl.java?ref=dfc7523b7c96c338fc290969dc3f410c7bad526a",
    "patch": "@@ -2,13 +2,20 @@\n \n import com.cton.constants.ResultDTO;\n import com.cton.enums.HttpCode;\n+import com.cton.handler.BusinessException;\n import com.cton.mapper.RoleMapper;\n+import com.cton.mapper.UserMapper;\n import com.cton.model.Role;\n+import com.cton.model.User;\n+import com.cton.utils.PageBean;\n import com.cton.utils.ResultUtil;\n+import com.github.pagehelper.PageHelper;\n import com.mysql.cj.util.StringUtils;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Service;\n+import org.springframework.transaction.annotation.Transactional;\n \n+import java.util.Date;\n import java.util.List;\n \n @Service\n@@ -17,164 +24,220 @@\n     @Autowired\n     private RoleMapper roleMapper;\n \n+    @Autowired\n+    private UserMapper userMapper;\n+\n     @Override\n-    public ResultDTO selectRoleNameByRoleId(Integer roleId) {\n+    public Integer createRole(Role role) {\n+        role.setCreateTime(new Date());\n+        return roleMapper.insertRoleSelective(role);\n+//        int returnNumber = roleMapper.insertRoleSelective(role);\n+//        if(returnNumber<=0){\n+//            return ResultUtil.error(HttpCode.FAIL.getCode(),\"新增角色失败\");\n+//        }else{\n+//            return ResultUtil.success(\"新增角色成功\");\n+//        }\n+    }\n \n-        String returnString = roleMapper.selectRoleNameByRoleId(roleId);\n-        if(StringUtils.isNullOrEmpty(returnString)){\n-            return ResultUtil.error(HttpCode.FAIL.getCode(),\"根据角色ID查找角色名失败\");\n-        }else{\n-            return ResultUtil.success(\"根据角色ID查找角色名成功\",returnString);\n-        }\n+    @Override\n+    public Integer updateRoleByIdSelective(Role role) {\n+        role.setUpdateTime(new Date());\n+        return roleMapper.updateRoleByIdSelective(role);\n+//        int returnNumber = roleMapper.updateRoleByIdSelective(role);\n+//        if(returnNumber<=0){\n+//            return ResultUtil.error(HttpCode.FAIL.getCode(),\"根据主键ID更新角色失败\");\n+//        }else{\n+//            return ResultUtil.success(\"根据主键ID更新角色成功\");\n+//        }\n     }\n \n     @Override\n-    public ResultDTO deleteRoleAllPermsByRoleId(Integer roleId){\n-        int returnNumber = roleMapper.deleteRoleAllPermsByRoleId(roleId);\n-        if(returnNumber<=0){\n-            return ResultUtil.error(HttpCode.FAIL.getCode(),\"根据角色ID删除角色所有权限失败\");\n-        }else{\n-            return ResultUtil.success(\"根据角色ID删除角色所有权限成功\");\n-        }\n+    public List<Role> listAllRoles() {\n+        return roleMapper.listAllRoles();\n \n     }\n \n     @Override\n-    public ResultDTO deleteRolePermByPermIdAndRoleId(Integer permId,Integer roleId){\n-        int returnNumber = roleMapper.deleteRolePermByPermIdAndRoleId(permId,roleId);\n-        if(returnNumber<=0){\n-            return ResultUtil.error(HttpCode.FAIL.getCode(),\"根据角色ID和权限ID删除角色对应权限失败\");\n-        }else{\n-            return ResultUtil.success(\"根据角色ID和权限ID删除角色对应权限成功\");\n-        }\n+    public PageBean<Role> listAllRolesByKeyword(String keyword, Integer pageSize, Integer currentPage){\n+        PageHelper.startPage(currentPage, pageSize);\n+        List<Role> roleList = roleMapper.listAllRolesByKeyword(keyword);\n+\n+        // 自定义分页信息\n+        int countNums = roleList.size();     //总记录数\n+        PageBean<Role> pageData = new PageBean<>(currentPage, pageSize, countNums);\n+        pageData.setItems(roleList);\n+        return pageData;\n+\n     }\n \n     @Override\n-    public ResultDTO deleteRoleUserByUserIdAndRoleId(Integer userId,Integer roleId){\n-        int returnNumber = roleMapper.deleteRoleUserByUserIdAndRoleId(userId,roleId);\n-        if(returnNumber<=0){\n-            return ResultUtil.error(HttpCode.FAIL.getCode(),\"根据角色ID和用户ID删除用户对应角色失败\");\n-        }else{\n-            return ResultUtil.success(\"根据角色ID和用户ID删除用户对应角色成功\");\n-        }\n+    public String selectRoleNameByRoleId(Integer roleId) {\n+        return roleMapper.selectRoleNameByRoleId(roleId);\n+//        String returnString = roleMapper.selectRoleNameByRoleId(roleId);\n+//        if(StringUtils.isNullOrEmpty(returnString)){\n+//            return ResultUtil.error(HttpCode.FAIL.getCode(),\"根据角色ID查找角色名失败\");\n+//        }else{\n+//            return ResultUtil.success(\"根据角色ID查找角色名成功\",returnString);\n+//        }\n+    }\n \n+    @Override\n+    public Integer deleteRoleAllPermsByRoleId(Integer roleId){\n+        return roleMapper.deleteRoleAllPermsByRoleId(roleId);\n+//        int returnNumber = roleMapper.deleteRoleAllPermsByRoleId(roleId);\n+//        if(returnNumber<=0){\n+//            return ResultUtil.error(HttpCode.FAIL.getCode(),\"根据角色ID删除角色所有权限失败\");\n+//        }else{\n+//            return ResultUtil.success(\"根据角色ID删除角色所有权限成功\");\n+//        }\n \n     }\n \n     @Override\n-    public ResultDTO selectPermsIdsByRoleId(Integer roleId){\n-\n-        List returnList = roleMapper.selectPermsIdsByRoleId(roleId);\n-        if(null == returnList){\n-            return ResultUtil.error(HttpCode.FAIL.getCode(),\"根据角色ID查找角色所有权限失败\");\n-        }else{\n-            return ResultUtil.success(\"根据角色ID查找角色所有权限成功\",returnList);\n-        }\n+    public Integer deleteRolePermByPermIdAndRoleId(Integer permId,Integer roleId){\n+        return roleMapper.deleteRolePermByPermIdAndRoleId(permId,roleId);\n+//        int returnNumber = roleMapper.deleteRolePermByPermIdAndRoleId(permId,roleId);\n+//        if(returnNumber<=0){\n+//            return ResultUtil.error(HttpCode.FAIL.getCode(),\"根据角色ID和权限ID删除角色对应权限失败\");\n+//        }else{\n+//            return ResultUtil.success(\"根据角色ID和权限ID删除角色对应权限成功\");\n+//        }\n     }\n \n     @Override\n-    public ResultDTO saveRolePerms(Integer roleId, Integer permId){\n+    public Integer deleteRoleUserByUserIdAndRoleId(Integer userId,Integer roleId){\n+        return roleMapper.deleteRoleUserByUserIdAndRoleId(userId,roleId);\n+//        int returnNumber = roleMapper.deleteRoleUserByUserIdAndRoleId(userId,roleId);\n+//        if(returnNumber<=0){\n+//            return ResultUtil.error(HttpCode.FAIL.getCode(),\"根据角色ID和用户ID删除用户对应角色失败\");\n+//        }else{\n+//            return ResultUtil.success(\"根据角色ID和用户ID删除用户对应角色成功\");\n+//        }\n+\n \n-        int returnNumber = roleMapper.saveRolePerms(roleId,permId);\n-        if(returnNumber<=0){\n-            return ResultUtil.error(HttpCode.FAIL.getCode(),\"保存角色对应权限失败\");\n-        }else{\n-            return ResultUtil.success(\"保存角色对应权限成功\");\n-        }\n     }\n \n     @Override\n-    public ResultDTO deleteUserAllRolesByUserId(Integer userId){\n-\n-        int returnNumber = roleMapper.deleteUserAllRolesByUserId(userId);\n-        if(returnNumber<=0){\n-            return ResultUtil.error(HttpCode.FAIL.getCode(),\"根据用户ID删除用户所有角色失败\");\n-        }else{\n-            return ResultUtil.success(\"根据用户ID删除用户所有角色成功\");\n-        }\n+    public List<Integer> selectPermsIdsByRoleId(Integer roleId){\n+        return roleMapper.selectPermsIdsByRoleId(roleId);\n+//        List returnList = roleMapper.selectPermsIdsByRoleId(roleId);\n+//        if(null == returnList){\n+//            return ResultUtil.error(HttpCode.FAIL.getCode(),\"根据角色ID查找角色所有权限失败\");\n+//        }else{\n+//            return ResultUtil.success(\"根据角色ID查找角色所有权限成功\",returnList);\n+//        }\n     }\n \n     @Override\n-    public ResultDTO selectUserAllRolesByUserId(Integer userId){\n+    public Integer saveRolePerms(Integer roleId, Integer permId){\n+        return roleMapper.saveRolePerms(roleId,permId);\n+//        int returnNumber = roleMapper.saveRolePerms(roleId,permId);\n+//        if(returnNumber<=0){\n+//            return ResultUtil.error(HttpCode.FAIL.getCode(),\"保存角色对应权限失败\");\n+//        }else{\n+//            return ResultUtil.success(\"保存角色对应权限成功\");\n+//        }\n+    }\n \n-        List returnList = roleMapper.selectUserAllRolesByUserId(userId);\n-        if(null == returnList){\n-            return ResultUtil.error(HttpCode.FAIL.getCode(),\"根据用户ID查找用户所有角色失败\");\n-        }else{\n-            return ResultUtil.success(\"根据用户ID查找用户所有角色成功\",returnList);\n-        }\n+    @Override\n+    public Integer deleteUserAllRolesByUserId(Integer userId){\n+        return roleMapper.deleteUserAllRolesByUserId(userId);\n+//        int returnNumber = roleMapper.deleteUserAllRolesByUserId(userId);\n+//        if(returnNumber<=0){\n+//            return ResultUtil.error(HttpCode.FAIL.getCode(),\"根据用户ID删除用户所有角色失败\");\n+//        }else{\n+//            return ResultUtil.success(\"根据用户ID删除用户所有角色成功\");\n+//        }\n     }\n \n     @Override\n-    public ResultDTO insertUserRole(Integer userId, Integer roleId){\n+    public List<Integer> selectUserAllRolesByUserId(Integer userId){\n+        return roleMapper.selectUserAllRolesByUserId(userId);\n+//        List returnList = roleMapper.selectUserAllRolesByUserId(userId);\n+//        if(null == returnList){\n+//            return ResultUtil.error(HttpCode.FAIL.getCode(),\"根据用户ID查找用户所有角色失败\");\n+//        }else{\n+//            return ResultUtil.success(\"根据用户ID查找用户所有角色成功\",returnList);\n+//        }\n+    }\n \n-        int returnNumber = roleMapper.insertUserRole(userId,roleId);\n-        if(returnNumber<=0){\n-            return ResultUtil.error(HttpCode.FAIL.getCode(),\"新增用户对应角色失败\");\n-        }else{\n-            return ResultUtil.success(\"新增用户对应角色成功\");\n-        }\n+    @Override\n+    public Integer insertUserRole(Integer userId, Integer roleId){\n+        return roleMapper.insertUserRole(userId,roleId);\n+//        int returnNumber = roleMapper.insertUserRole(userId,roleId);\n+//        if(returnNumber<=0){\n+//            return ResultUtil.error(HttpCode.FAIL.getCode(),\"新增用户对应角色失败\");\n+//        }else{\n+//            return ResultUtil.success(\"新增用户对应角色成功\");\n+//        }\n     }\n \n     @Override\n-    public ResultDTO selectRoleById(Integer id) {\n-        Role returnRole = roleMapper.selectRoleById(id);\n-        if(null == returnRole){\n-            return ResultUtil.error(HttpCode.FAIL.getCode(),\"根据主键ID查找角色失败\");\n-        }else{\n-            return ResultUtil.success(\"根据主键ID查找角色成功\",returnRole);\n-        }\n+    public Role selectRoleById(Integer id) {\n+        return roleMapper.selectRoleById(id);\n+//        Role returnRole = roleMapper.selectRoleById(id);\n+//        if(null == returnRole){\n+//            return ResultUtil.error(HttpCode.FAIL.getCode(),\"根据主键ID查找角色失败\");\n+//        }else{\n+//            return ResultUtil.success(\"根据主键ID查找角色成功\",returnRole);\n+//        }\n     }\n \n     @Override\n-    public ResultDTO selectRoleByRoleName(String rolename) {\n-        Role returnRole = roleMapper.selectRoleByRoleName(rolename);\n-        if(null == returnRole){\n-            return ResultUtil.error(HttpCode.FAIL.getCode(),\"根据角色ID查找角色失败\");\n-        }else{\n-            return ResultUtil.success(\"根据角色ID查找角色成功\",returnRole);\n-        }\n+    public Role selectRoleByRoleName(String rolename) {\n+        return roleMapper.selectRoleByRoleName(rolename);\n+//        Role returnRole = roleMapper.selectRoleByRoleName(rolename);\n+//        if(null == returnRole){\n+//            return ResultUtil.error(HttpCode.FAIL.getCode(),\"根据角色ID查找角色失败\");\n+//        }else{\n+//            return ResultUtil.success(\"根据角色ID查找角色成功\",returnRole);\n+//        }\n     }\n \n     @Override\n-    public ResultDTO deleteRoleById(Integer id) {\n-        int returnNumber = roleMapper.deleteRoleById(id);\n-        if(returnNumber<=0){\n-            return ResultUtil.error(HttpCode.FAIL.getCode(),\"根据主键ID删除角色失败\");\n-        }else{\n-            return ResultUtil.success(\"根据主键ID删除角色成功\");\n-        }\n+    public Integer deleteRoleById(Integer id) {\n+        return roleMapper.deleteRoleById(id);\n+//        int returnNumber = roleMapper.deleteRoleById(id);\n+//        if(returnNumber<=0){\n+//            return ResultUtil.error(HttpCode.FAIL.getCode(),\"根据主键ID删除角色失败\");\n+//        }else{\n+//            return ResultUtil.success(\"根据主键ID删除角色成功\");\n+//        }\n     }\n \n     @Override\n-    public ResultDTO deleteRoleByRoleName(String rolename) {\n-        int returnNumber = roleMapper.deleteRoleByRoleName(rolename);\n-        if(returnNumber<=0){\n-            return ResultUtil.error(HttpCode.FAIL.getCode(),\"根据角色ID删除角色失败\");\n-        }else{\n-            return ResultUtil.success(\"根据角色ID删除角色成功\");\n-        }\n+    public Integer deleteRoleByRoleName(String rolename) {\n+        return roleMapper.deleteRoleByRoleName(rolename);\n+//        int returnNumber = roleMapper.deleteRoleByRoleName(rolename);\n+//        if(returnNumber<=0){\n+//            return ResultUtil.error(HttpCode.FAIL.getCode(),\"根据角色ID删除角色失败\");\n+//        }else{\n+//            return ResultUtil.success(\"根据角色ID删除角色成功\");\n+//        }\n     }\n \n+\n     @Override\n-    public ResultDTO insertRoleSelective(Role role) {\n-        int returnNumber = roleMapper.insertRoleSelective(role);\n-        if(returnNumber<=0){\n-            return ResultUtil.error(HttpCode.FAIL.getCode(),\"新增角色失败\");\n-        }else{\n-            return ResultUtil.success(\"新增角色成功\");\n+    @Transactional\n+    public Integer allocPermission(Integer roleId, List<Integer> permissionIds){\n+        for (Integer permissionId:permissionIds){\n+            Integer count = roleMapper.saveRolePerms(roleId,permissionId);\n+            if(count<=0)\n+                return count;\n         }\n+        return 1;\n     }\n \n     @Override\n-    public ResultDTO updateRoleByIdSelective(Role role) {\n-        int returnNumber = roleMapper.updateRoleByIdSelective(role);\n-        if(returnNumber<=0){\n-            return ResultUtil.error(HttpCode.FAIL.getCode(),\"根据主键ID更新角色失败\");\n-        }else{\n-            return ResultUtil.success(\"根据主键ID更新角色成功\");\n+    @Transactional\n+    public Integer deleteBatch(List<Integer> roleIds){\n+        for (Integer roleId:roleIds){\n+            Integer count = roleMapper.deleteRoleById(roleId);\n+            roleMapper.deleteRoleAllPermsByRoleId(roleId);\n+            if(count<=0)\n+                return count;\n         }\n+        return 1;\n     }\n \n-\n }"
  }
]
