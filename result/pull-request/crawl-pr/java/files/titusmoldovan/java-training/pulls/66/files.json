[
  {
    "sha": "8de3b384f84f4beecf0457f1d3dd9163f2558627",
    "filename": ".project",
    "status": "added",
    "additions": 28,
    "deletions": 0,
    "changes": 28,
    "blob_url": "https://github.com/titusmoldovan/java-training/blob/84d0c7c173582b19fa2d0a97f7e89d3fa417a455/.project",
    "raw_url": "https://github.com/titusmoldovan/java-training/raw/84d0c7c173582b19fa2d0a97f7e89d3fa417a455/.project",
    "contents_url": "https://api.github.com/repos/titusmoldovan/java-training/contents/.project?ref=84d0c7c173582b19fa2d0a97f7e89d3fa417a455",
    "patch": "@@ -0,0 +1,28 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<projectDescription>\n+\t<name>java.training</name>\n+\t<comment></comment>\n+\t<projects>\n+\t</projects>\n+\t<buildSpec>\n+\t\t<buildCommand>\n+\t\t\t<name>org.eclipse.m2e.core.maven2Builder</name>\n+\t\t\t<arguments>\n+\t\t\t</arguments>\n+\t\t</buildCommand>\n+\t</buildSpec>\n+\t<natures>\n+\t\t<nature>org.eclipse.m2e.core.maven2Nature</nature>\n+\t</natures>\n+\t<filteredResources>\n+\t\t<filter>\n+\t\t\t<id>1615320566140</id>\n+\t\t\t<name></name>\n+\t\t\t<type>30</type>\n+\t\t\t<matcher>\n+\t\t\t\t<id>org.eclipse.core.resources.regexFilterMatcher</id>\n+\t\t\t\t<arguments>node_modules|.git|__CREATED_BY_JAVA_LANGUAGE_SERVER__</arguments>\n+\t\t\t</matcher>\n+\t\t</filter>\n+\t</filteredResources>\n+</projectDescription>"
  },
  {
    "sha": "6d4679c5447861bba6e85500e340b900ef3eab23",
    "filename": "README.md",
    "status": "modified",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/titusmoldovan/java-training/blob/84d0c7c173582b19fa2d0a97f7e89d3fa417a455/README.md",
    "raw_url": "https://github.com/titusmoldovan/java-training/raw/84d0c7c173582b19fa2d0a97f7e89d3fa417a455/README.md",
    "contents_url": "https://api.github.com/repos/titusmoldovan/java-training/contents/README.md?ref=84d0c7c173582b19fa2d0a97f7e89d3fa417a455",
    "patch": "@@ -1,6 +1,7 @@\n # java-training\n \n # 1 basics\n+\n \t- code study\n \t\t- 1.1 hello world\n \t\t- 1.2 postfix increment\n@@ -13,7 +14,9 @@\n \t\t- 1.2 foobarqix\n \t\t- 1.3 pair of 2\n \t\t- 1.4 pair of 3\n+\n # 2 oo\n+\n \t- code study\n \t\t- 2.1 initialization order\n \t\t- 2.2 covariant return\n@@ -25,7 +28,9 @@\n \t\t- 2.1 two fighters\n \t\t- 2.2 movie database\n \t\t- 2.3 animal hierarchy\n+\n # 3 design patterns\n+\n \t- code study\n \t\t- 3.1 design patterns used in java apis\n \t- code challenges\n@@ -37,7 +42,9 @@\n \t\t- 3.6 builder\n \t\t- 3.7 decorations (hard)\n \t\t- 3.8 drinking time (hard)\n+\n # 4 exceptions & IO\n+\n \t- code study\n \t\t- 4.1 exceptions\n \t\t- 4.2 multicatch\n@@ -56,7 +63,9 @@\n \t\t- 4.3 anagram\n \t\t- 4.4 number to lcd\n \t\t- 4.5 occurence\n+\n # 5 generics\n+\n \t- activity \n \t\t- 5.1 generic sort\n \t- code study\n@@ -70,7 +79,9 @@\n \t\t- 5.3 generic linked list\n \t\t- 5.4 generic iterator\n \t\t- 5.5 generic binary search\n+\n # 6 collectinos\n+\n \t- activity\n \t\t- 6.1 resizable array\n \t- code study\n@@ -99,7 +110,9 @@\n \t\t- 6.7 my hashtable\n \t\t- 6.8 my arraylist\n \t\t- 6.9 my set\n+\n # 7 concurrency\n+\n \t- code study\n \t\t- 7.1 contention\n \t\t- 7.2 lack of coordination\n@@ -115,7 +128,9 @@\n \t\t- 7.2 bank transactions\n \t\t- 7.3 rock paper scissors\n \t\t- 7.4 dining philosopers (hard)\n+\n # 8 functional\n+\n \t- acitvity\n \t\t- 8.1 get highest score from a collection of objects\n \t- code study\n@@ -128,7 +143,9 @@\n \t\t- 8.1 consumer\n \t\t- 8.2 predicate\n \t\t- 8.3 lambda\n+\n # 9 reactive\n+\n \t- code study\n \t\t- 9.1 create flux\n \t\t- 9.2 create mono\n@@ -141,6 +158,8 @@\n \t\t- 9.3 operations\n \t\t- 9.4 transformations\n \t\t- 9.5 merges\n+\n # clean code projects\n+\n     - design patterns\n     - chess game\t\t\n\\ No newline at end of file"
  },
  {
    "sha": "9ba41a249e124721e89c65729d21c6d7df2c1b66",
    "filename": "_1_basics/.classpath",
    "status": "added",
    "additions": 44,
    "deletions": 0,
    "changes": 44,
    "blob_url": "https://github.com/titusmoldovan/java-training/blob/84d0c7c173582b19fa2d0a97f7e89d3fa417a455/_1_basics/.classpath",
    "raw_url": "https://github.com/titusmoldovan/java-training/raw/84d0c7c173582b19fa2d0a97f7e89d3fa417a455/_1_basics/.classpath",
    "contents_url": "https://api.github.com/repos/titusmoldovan/java-training/contents/_1_basics/.classpath?ref=84d0c7c173582b19fa2d0a97f7e89d3fa417a455",
    "patch": "@@ -0,0 +1,44 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<classpath>\n+\t<classpathentry kind=\"src\" output=\"target/classes\" path=\"src/main/java\">\n+\t\t<attributes>\n+\t\t\t<attribute name=\"optional\" value=\"true\"/>\n+\t\t\t<attribute name=\"maven.pomderived\" value=\"true\"/>\n+\t\t</attributes>\n+\t</classpathentry>\n+\t<classpathentry kind=\"src\" output=\"target/test-classes\" path=\"src/test/java\">\n+\t\t<attributes>\n+\t\t\t<attribute name=\"optional\" value=\"true\"/>\n+\t\t\t<attribute name=\"maven.pomderived\" value=\"true\"/>\n+\t\t\t<attribute name=\"test\" value=\"true\"/>\n+\t\t</attributes>\n+\t</classpathentry>\n+\t<classpathentry kind=\"con\" path=\"org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-11\">\n+\t\t<attributes>\n+\t\t\t<attribute name=\"maven.pomderived\" value=\"true\"/>\n+\t\t</attributes>\n+\t</classpathentry>\n+\t<classpathentry kind=\"con\" path=\"org.eclipse.m2e.MAVEN2_CLASSPATH_CONTAINER\">\n+\t\t<attributes>\n+\t\t\t<attribute name=\"maven.pomderived\" value=\"true\"/>\n+\t\t</attributes>\n+\t</classpathentry>\n+\t<classpathentry kind=\"src\" path=\"target/generated-sources/annotations\">\n+\t\t<attributes>\n+\t\t\t<attribute name=\"optional\" value=\"true\"/>\n+\t\t\t<attribute name=\"maven.pomderived\" value=\"true\"/>\n+\t\t\t<attribute name=\"ignore_optional_problems\" value=\"true\"/>\n+\t\t\t<attribute name=\"m2e-apt\" value=\"true\"/>\n+\t\t</attributes>\n+\t</classpathentry>\n+\t<classpathentry kind=\"src\" output=\"target/test-classes\" path=\"target/generated-test-sources/test-annotations\">\n+\t\t<attributes>\n+\t\t\t<attribute name=\"optional\" value=\"true\"/>\n+\t\t\t<attribute name=\"maven.pomderived\" value=\"true\"/>\n+\t\t\t<attribute name=\"ignore_optional_problems\" value=\"true\"/>\n+\t\t\t<attribute name=\"m2e-apt\" value=\"true\"/>\n+\t\t\t<attribute name=\"test\" value=\"true\"/>\n+\t\t</attributes>\n+\t</classpathentry>\n+\t<classpathentry kind=\"output\" path=\"target/classes\"/>\n+</classpath>"
  },
  {
    "sha": "6d244073c773502aae17c152a066be5710397dc3",
    "filename": "_1_basics/.project",
    "status": "added",
    "additions": 34,
    "deletions": 0,
    "changes": 34,
    "blob_url": "https://github.com/titusmoldovan/java-training/blob/84d0c7c173582b19fa2d0a97f7e89d3fa417a455/_1_basics/.project",
    "raw_url": "https://github.com/titusmoldovan/java-training/raw/84d0c7c173582b19fa2d0a97f7e89d3fa417a455/_1_basics/.project",
    "contents_url": "https://api.github.com/repos/titusmoldovan/java-training/contents/_1_basics/.project?ref=84d0c7c173582b19fa2d0a97f7e89d3fa417a455",
    "patch": "@@ -0,0 +1,34 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<projectDescription>\n+\t<name>_1_basics</name>\n+\t<comment></comment>\n+\t<projects>\n+\t</projects>\n+\t<buildSpec>\n+\t\t<buildCommand>\n+\t\t\t<name>org.eclipse.jdt.core.javabuilder</name>\n+\t\t\t<arguments>\n+\t\t\t</arguments>\n+\t\t</buildCommand>\n+\t\t<buildCommand>\n+\t\t\t<name>org.eclipse.m2e.core.maven2Builder</name>\n+\t\t\t<arguments>\n+\t\t\t</arguments>\n+\t\t</buildCommand>\n+\t</buildSpec>\n+\t<natures>\n+\t\t<nature>org.eclipse.jdt.core.javanature</nature>\n+\t\t<nature>org.eclipse.m2e.core.maven2Nature</nature>\n+\t</natures>\n+\t<filteredResources>\n+\t\t<filter>\n+\t\t\t<id>1615320566070</id>\n+\t\t\t<name></name>\n+\t\t\t<type>30</type>\n+\t\t\t<matcher>\n+\t\t\t\t<id>org.eclipse.core.resources.regexFilterMatcher</id>\n+\t\t\t\t<arguments>node_modules|.git|__CREATED_BY_JAVA_LANGUAGE_SERVER__</arguments>\n+\t\t\t</matcher>\n+\t\t</filter>\n+\t</filteredResources>\n+</projectDescription>"
  },
  {
    "sha": "d4313d4b25e4b826b5efa4bed06fd69068761519",
    "filename": "_1_basics/.settings/org.eclipse.jdt.apt.core.prefs",
    "status": "added",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/titusmoldovan/java-training/blob/84d0c7c173582b19fa2d0a97f7e89d3fa417a455/_1_basics/.settings/org.eclipse.jdt.apt.core.prefs",
    "raw_url": "https://github.com/titusmoldovan/java-training/raw/84d0c7c173582b19fa2d0a97f7e89d3fa417a455/_1_basics/.settings/org.eclipse.jdt.apt.core.prefs",
    "contents_url": "https://api.github.com/repos/titusmoldovan/java-training/contents/_1_basics/.settings/org.eclipse.jdt.apt.core.prefs?ref=84d0c7c173582b19fa2d0a97f7e89d3fa417a455",
    "patch": "@@ -0,0 +1,2 @@\n+eclipse.preferences.version=1\n+org.eclipse.jdt.apt.aptEnabled=false"
  },
  {
    "sha": "46235dc078e4938d44ecf463f32b5f913f920ccb",
    "filename": "_1_basics/.settings/org.eclipse.jdt.core.prefs",
    "status": "added",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/titusmoldovan/java-training/blob/84d0c7c173582b19fa2d0a97f7e89d3fa417a455/_1_basics/.settings/org.eclipse.jdt.core.prefs",
    "raw_url": "https://github.com/titusmoldovan/java-training/raw/84d0c7c173582b19fa2d0a97f7e89d3fa417a455/_1_basics/.settings/org.eclipse.jdt.core.prefs",
    "contents_url": "https://api.github.com/repos/titusmoldovan/java-training/contents/_1_basics/.settings/org.eclipse.jdt.core.prefs?ref=84d0c7c173582b19fa2d0a97f7e89d3fa417a455",
    "patch": "@@ -0,0 +1,9 @@\n+eclipse.preferences.version=1\n+org.eclipse.jdt.core.compiler.codegen.targetPlatform=11\n+org.eclipse.jdt.core.compiler.compliance=11\n+org.eclipse.jdt.core.compiler.problem.enablePreviewFeatures=disabled\n+org.eclipse.jdt.core.compiler.problem.forbiddenReference=warning\n+org.eclipse.jdt.core.compiler.problem.reportPreviewFeatures=ignore\n+org.eclipse.jdt.core.compiler.processAnnotations=disabled\n+org.eclipse.jdt.core.compiler.release=disabled\n+org.eclipse.jdt.core.compiler.source=11"
  },
  {
    "sha": "3d940e257f63345d98f36c8d35a840f2b637f993",
    "filename": "_1_basics/pom.xml",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/titusmoldovan/java-training/blob/84d0c7c173582b19fa2d0a97f7e89d3fa417a455/_1_basics/pom.xml",
    "raw_url": "https://github.com/titusmoldovan/java-training/raw/84d0c7c173582b19fa2d0a97f7e89d3fa417a455/_1_basics/pom.xml",
    "contents_url": "https://api.github.com/repos/titusmoldovan/java-training/contents/_1_basics/pom.xml?ref=84d0c7c173582b19fa2d0a97f7e89d3fa417a455",
    "patch": "@@ -1,6 +1,6 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n-         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+<project xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xmlns=\"http://maven.apache.org/POM/4.0.0\"\n          xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n     <parent>\n         <artifactId>java.training</artifactId>"
  },
  {
    "sha": "a426c46d85849ec100cda22d46e6fa45b6285dde",
    "filename": "_1_basics/src/main/java/code/_1_study/_1_hello_world/HelloWorld.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/titusmoldovan/java-training/blob/84d0c7c173582b19fa2d0a97f7e89d3fa417a455/_1_basics/src/main/java/code/_1_study/_1_hello_world/HelloWorld.java",
    "raw_url": "https://github.com/titusmoldovan/java-training/raw/84d0c7c173582b19fa2d0a97f7e89d3fa417a455/_1_basics/src/main/java/code/_1_study/_1_hello_world/HelloWorld.java",
    "contents_url": "https://api.github.com/repos/titusmoldovan/java-training/contents/_1_basics/src/main/java/code/_1_study/_1_hello_world/HelloWorld.java?ref=84d0c7c173582b19fa2d0a97f7e89d3fa417a455",
    "patch": "@@ -1,7 +1,7 @@\n package code._1_study._1_hello_world;\n \n public class HelloWorld {\n-  public static void main(String[] args) {\n-    System.out.println(\"hello world\");\n-  }\n+    public static void main(String[] args) {\n+        System.out.println(\"hello world\");\n+    }\n }\n\\ No newline at end of file"
  },
  {
    "sha": "d0dd68b1bb482fa21a294703f3dc4e3ac7ce9c15",
    "filename": "_1_basics/src/main/java/code/_1_study/_2_postfix_increment/PostfixIncrement.java",
    "status": "modified",
    "additions": 10,
    "deletions": 10,
    "changes": 20,
    "blob_url": "https://github.com/titusmoldovan/java-training/blob/84d0c7c173582b19fa2d0a97f7e89d3fa417a455/_1_basics/src/main/java/code/_1_study/_2_postfix_increment/PostfixIncrement.java",
    "raw_url": "https://github.com/titusmoldovan/java-training/raw/84d0c7c173582b19fa2d0a97f7e89d3fa417a455/_1_basics/src/main/java/code/_1_study/_2_postfix_increment/PostfixIncrement.java",
    "contents_url": "https://api.github.com/repos/titusmoldovan/java-training/contents/_1_basics/src/main/java/code/_1_study/_2_postfix_increment/PostfixIncrement.java?ref=84d0c7c173582b19fa2d0a97f7e89d3fa417a455",
    "patch": "@@ -1,19 +1,19 @@\n package code._1_study._2_postfix_increment;\n \n public class PostfixIncrement {\n-  public static void main(String[] args) {\n-    int x = 0;\n-    while (x++ < 10) {\n-    }\n-    checkForXValue(x);\n+    public static void main(String[] args) {\n+        int x = 0;\n+        while (x++ < 10) {\n+        }\n+        checkForXValue(x);\n \n-  }\n+    }\n \n-  private static void checkForXValue(int x) {\n-    int expectedXValue = 11;\n+    private static void checkForXValue(int x) {\n+        int expectedXValue = 11;\n \n-    System.out.println(\"Guessed correctly the value of x ? - \" + (x == expectedXValue));\n+        System.out.println(\"Guessed correctly the value of x ? - \" + (x == expectedXValue));\n \n-  }\n+    }\n \n }\n\\ No newline at end of file"
  },
  {
    "sha": "a53b4531a903101045aa26569513aa8b095c23b2",
    "filename": "_1_basics/src/main/java/code/_1_study/_3_summing_non_floating/SummingNonFloatingTypes.java",
    "status": "modified",
    "additions": 23,
    "deletions": 23,
    "changes": 46,
    "blob_url": "https://github.com/titusmoldovan/java-training/blob/84d0c7c173582b19fa2d0a97f7e89d3fa417a455/_1_basics/src/main/java/code/_1_study/_3_summing_non_floating/SummingNonFloatingTypes.java",
    "raw_url": "https://github.com/titusmoldovan/java-training/raw/84d0c7c173582b19fa2d0a97f7e89d3fa417a455/_1_basics/src/main/java/code/_1_study/_3_summing_non_floating/SummingNonFloatingTypes.java",
    "contents_url": "https://api.github.com/repos/titusmoldovan/java-training/contents/_1_basics/src/main/java/code/_1_study/_3_summing_non_floating/SummingNonFloatingTypes.java?ref=84d0c7c173582b19fa2d0a97f7e89d3fa417a455",
    "patch": "@@ -1,30 +1,30 @@\n package code._1_study._3_summing_non_floating;\n \n public class SummingNonFloatingTypes {\n-  public static void main(String[] args) {\n-    sumBytes();\n-    sumShorts();\n-    sumInts();\n-  }\n+    public static void main(String[] args) {\n+        sumBytes();\n+        sumShorts();\n+        sumInts();\n+    }\n \n-  private static void sumBytes() {\n-    byte x = 5;\n-    byte y = 10;\n-    byte sum;\n-    sum = (byte) (x + y);\n-  }\n+    private static void sumBytes() {\n+        byte x = 5;\n+        byte y = 10;\n+        byte sum;\n+        sum = (byte) (x + y);\n+    }\n \n-  private static void sumShorts() {\n-    short x = 5;\n-    short y = 10;\n-    short sum;\n-    sum = (short) (x + y);\n-  }\n+    private static void sumShorts() {\n+        short x = 5;\n+        short y = 10;\n+        short sum;\n+        sum = (short) (x + y);\n+    }\n \n-  private static void sumInts() {\n-    int x = 5;\n-    int y = 10;\n-    int sum;\n-    sum = x + y;\n-  }\n+    private static void sumInts() {\n+        int x = 5;\n+        int y = 10;\n+        int sum;\n+        sum = x + y;\n+    }\n }\n\\ No newline at end of file"
  },
  {
    "sha": "a0df719ef473aa6d14fc9a051c9afc479f2556bc",
    "filename": "_1_basics/src/main/java/code/_1_study/_4_comparing_integers/ComparingIntegers.java",
    "status": "modified",
    "additions": 17,
    "deletions": 17,
    "changes": 34,
    "blob_url": "https://github.com/titusmoldovan/java-training/blob/84d0c7c173582b19fa2d0a97f7e89d3fa417a455/_1_basics/src/main/java/code/_1_study/_4_comparing_integers/ComparingIntegers.java",
    "raw_url": "https://github.com/titusmoldovan/java-training/raw/84d0c7c173582b19fa2d0a97f7e89d3fa417a455/_1_basics/src/main/java/code/_1_study/_4_comparing_integers/ComparingIntegers.java",
    "contents_url": "https://api.github.com/repos/titusmoldovan/java-training/contents/_1_basics/src/main/java/code/_1_study/_4_comparing_integers/ComparingIntegers.java?ref=84d0c7c173582b19fa2d0a97f7e89d3fa417a455",
    "patch": "@@ -1,24 +1,24 @@\n package code._1_study._4_comparing_integers;\n \n public class ComparingIntegers {\n-  public static void main(String[] args) {\n-    /*EX 1 */\n-    Integer i1 = 127;\n-    Integer i2 = 127;\n-    System.out.println(i1.equals(i2)); //why ?\n-    System.out.println(i1 == i2); //why ?\n+    public static void main(String[] args) {\n+        /*EX 1 */\n+        Integer i1 = 127;\n+        Integer i2 = 127;\n+        System.out.println(i1.equals(i2)); //why ?\n+        System.out.println(i1 == i2); //why ?\n \n-    /*EX 2 */\n-    Integer i11 = Integer.valueOf(127);\n-    Integer i22 = Integer.valueOf(127);\n-    System.out.println(i11.equals(i22)); //why ?\n-    System.out.println(i11 == i22); //why ?\n+        /*EX 2 */\n+        Integer i11 = Integer.valueOf(127);\n+        Integer i22 = Integer.valueOf(127);\n+        System.out.println(i11.equals(i22)); //why ?\n+        System.out.println(i11 == i22); //why ?\n \n-    /*EX 3 */\n-    Integer i111 = 128;\n-    Integer i222 = 128;\n-    System.out.println(i111.equals(i222)); //why ?\n-    System.out.println(i111 == i222); //why ?\n+        /*EX 3 */\n+        Integer i111 = 128;\n+        Integer i222 = 128;\n+        System.out.println(i111.equals(i222)); //why ?\n+        System.out.println(i111 == i222); //why ?\n \n-  }\n+    }\n }\n\\ No newline at end of file"
  },
  {
    "sha": "0b7297de3237c2d31d7556d0dbc13ec432265f47",
    "filename": "_1_basics/src/main/java/code/_1_study/_5_slow_loops/SlowLoops.java",
    "status": "modified",
    "additions": 18,
    "deletions": 18,
    "changes": 36,
    "blob_url": "https://github.com/titusmoldovan/java-training/blob/84d0c7c173582b19fa2d0a97f7e89d3fa417a455/_1_basics/src/main/java/code/_1_study/_5_slow_loops/SlowLoops.java",
    "raw_url": "https://github.com/titusmoldovan/java-training/raw/84d0c7c173582b19fa2d0a97f7e89d3fa417a455/_1_basics/src/main/java/code/_1_study/_5_slow_loops/SlowLoops.java",
    "contents_url": "https://api.github.com/repos/titusmoldovan/java-training/contents/_1_basics/src/main/java/code/_1_study/_5_slow_loops/SlowLoops.java?ref=84d0c7c173582b19fa2d0a97f7e89d3fa417a455",
    "patch": "@@ -4,24 +4,24 @@\n import java.time.Instant;\n \n public class SlowLoops {\n-  public static void main(String[] args) {\n-    loopUsingPrimitive();\n-    loopUsingWrapper();\n-  }\n+    public static void main(String[] args) {\n+        loopUsingPrimitive();\n+        loopUsingWrapper();\n+    }\n \n-  private static void loopUsingWrapper() {\n-    Instant start2 = Instant.now();\n-    for (Integer i = 0; i < 10_000_000; i++) ;\n-    Instant stop2 = Instant.now();\n-    Duration duration2 = Duration.between(start2, stop2);\n-    System.out.println(\"using wrapper: \" + duration2); //why is duration1 so different from duration2 ?\n-  }\n+    private static void loopUsingWrapper() {\n+        Instant start2 = Instant.now();\n+        for (Integer i = 0; i < 10_000_000; i++) ;\n+        Instant stop2 = Instant.now();\n+        Duration duration2 = Duration.between(start2, stop2);\n+        System.out.println(\"using wrapper: \" + duration2); //why is duration1 so different from duration2 ?\n+    }\n \n-  private static void loopUsingPrimitive() {\n-    Instant start1 = Instant.now();\n-    for (int i = 0; i < 10_000_000; i++) ;\n-    Instant stop1 = Instant.now();\n-    Duration duration1 = Duration.between(start1, stop1);\n-    System.out.println(\"using primitive: \" + duration1);\n-  }\n+    private static void loopUsingPrimitive() {\n+        Instant start1 = Instant.now();\n+        for (int i = 0; i < 10_000_000; i++) ;\n+        Instant stop1 = Instant.now();\n+        Duration duration1 = Duration.between(start1, stop1);\n+        System.out.println(\"using primitive: \" + duration1);\n+    }\n }\n\\ No newline at end of file"
  },
  {
    "sha": "d98cebf691b8f4bded7308d4480760d54f7e2f04",
    "filename": "_1_basics/src/main/java/code/_1_study/_6_accessing_private_fields/AccessingPrivateFields.java",
    "status": "modified",
    "additions": 9,
    "deletions": 9,
    "changes": 18,
    "blob_url": "https://github.com/titusmoldovan/java-training/blob/84d0c7c173582b19fa2d0a97f7e89d3fa417a455/_1_basics/src/main/java/code/_1_study/_6_accessing_private_fields/AccessingPrivateFields.java",
    "raw_url": "https://github.com/titusmoldovan/java-training/raw/84d0c7c173582b19fa2d0a97f7e89d3fa417a455/_1_basics/src/main/java/code/_1_study/_6_accessing_private_fields/AccessingPrivateFields.java",
    "contents_url": "https://api.github.com/repos/titusmoldovan/java-training/contents/_1_basics/src/main/java/code/_1_study/_6_accessing_private_fields/AccessingPrivateFields.java?ref=84d0c7c173582b19fa2d0a97f7e89d3fa417a455",
    "patch": "@@ -3,16 +3,16 @@\n import java.lang.reflect.Field;\n \n public class AccessingPrivateFields {\n-  public static void main(String[] args) throws NoSuchFieldException, IllegalAccessException {\n-    Student student = new Student(\"John\", 21);\n+    public static void main(String[] args) throws NoSuchFieldException, IllegalAccessException {\n+        Student student = new Student(\"John\", 21);\n \n-    readPrivateField(student);\n+        readPrivateField(student);\n \n-  }\n+    }\n \n-  private static void readPrivateField(Student student) throws NoSuchFieldException, IllegalAccessException {\n-    Field field = student.getClass().getDeclaredField(\"name\");\n-    field.setAccessible(true);\n-    System.out.println(field.get(student));\n-  }\n+    private static void readPrivateField(Student student) throws NoSuchFieldException, IllegalAccessException {\n+        Field field = student.getClass().getDeclaredField(\"name\");\n+        field.setAccessible(true);\n+        System.out.println(field.get(student));\n+    }\n }\n\\ No newline at end of file"
  },
  {
    "sha": "fbdedc1ac5b9ef479f5881d1dbceb1c907623d05",
    "filename": "_1_basics/src/main/java/code/_1_study/_6_accessing_private_fields/Student.java",
    "status": "modified",
    "additions": 6,
    "deletions": 6,
    "changes": 12,
    "blob_url": "https://github.com/titusmoldovan/java-training/blob/84d0c7c173582b19fa2d0a97f7e89d3fa417a455/_1_basics/src/main/java/code/_1_study/_6_accessing_private_fields/Student.java",
    "raw_url": "https://github.com/titusmoldovan/java-training/raw/84d0c7c173582b19fa2d0a97f7e89d3fa417a455/_1_basics/src/main/java/code/_1_study/_6_accessing_private_fields/Student.java",
    "contents_url": "https://api.github.com/repos/titusmoldovan/java-training/contents/_1_basics/src/main/java/code/_1_study/_6_accessing_private_fields/Student.java?ref=84d0c7c173582b19fa2d0a97f7e89d3fa417a455",
    "patch": "@@ -1,11 +1,11 @@\n package code._1_study._6_accessing_private_fields;\n \n public class Student {\n-  private String name;\n-  private Integer age;\n+    private String name;\n+    private Integer age;\n \n-  public Student(String name, Integer age) {\n-    this.name = name;\n-    this.age = age;\n-  }\n+    public Student(String name, Integer age) {\n+        this.name = name;\n+        this.age = age;\n+    }\n }\n\\ No newline at end of file"
  },
  {
    "sha": "47838aba3f1ebe680f1cde6ecad1f20eebd83dac",
    "filename": "_1_basics/src/main/java/code/_2_challenge/_1_fizzbuzz/FizzBuzz.java",
    "status": "modified",
    "additions": 42,
    "deletions": 42,
    "changes": 84,
    "blob_url": "https://github.com/titusmoldovan/java-training/blob/84d0c7c173582b19fa2d0a97f7e89d3fa417a455/_1_basics/src/main/java/code/_2_challenge/_1_fizzbuzz/FizzBuzz.java",
    "raw_url": "https://github.com/titusmoldovan/java-training/raw/84d0c7c173582b19fa2d0a97f7e89d3fa417a455/_1_basics/src/main/java/code/_2_challenge/_1_fizzbuzz/FizzBuzz.java",
    "contents_url": "https://api.github.com/repos/titusmoldovan/java-training/contents/_1_basics/src/main/java/code/_2_challenge/_1_fizzbuzz/FizzBuzz.java?ref=84d0c7c173582b19fa2d0a97f7e89d3fa417a455",
    "patch": "@@ -2,49 +2,49 @@\n \n public class FizzBuzz {\n \n-  public String fizzBuzz(int i) {\n-    String s = \"\";\n-\n-    NumberWordCorrelation[] correlations = {\n-            new NumberWordCorrelation(3, \"Fizz\"),\n-            new NumberWordCorrelation(5, \"Buzz\"),\n-    };\n-    boolean isDivisible = false;\n-    for (NumberWordCorrelation correlation : correlations) {\n-      if (i % correlation.getNumber() == 0) {\n-        isDivisible = true;\n-        s += correlation.getWord();\n-      }\n+    public String fizzBuzz(int i) {\n+        String s = \"\";\n+\n+        NumberWordCorrelation[] correlations = {\n+                new NumberWordCorrelation(3, \"Fizz\"),\n+                new NumberWordCorrelation(5, \"Buzz\"),\n+        };\n+        boolean isDivisible = false;\n+        for (NumberWordCorrelation correlation : correlations) {\n+            if (i % correlation.getNumber() == 0) {\n+                isDivisible = true;\n+                s += correlation.getWord();\n+            }\n+        }\n+        if (!isDivisible) {\n+            s = String.valueOf(i);\n+        }\n+\n+\n+        return s;\n     }\n-    if (!isDivisible) {\n-      s = String.valueOf(i);\n-    }\n-\n \n-    return s;\n-  }\n-\n-  public String fizzBuzz2(int i) {\n-    String s = \"\";\n-\n-    NumberWordCorrelation[] correlations = {\n-            new NumberWordCorrelation(3, \"Fizz\"),\n-            new NumberWordCorrelation(5, \"Buzz\"),\n-            new NumberWordCorrelation(7, \"Rizz\"),\n-            new NumberWordCorrelation(9, \"Jazz\"),\n-    };\n-    boolean isDivisible = false;\n-    for (NumberWordCorrelation correlation : correlations) {\n-      if (i % correlation.getNumber() == 0) {\n-        isDivisible = true;\n-        s += correlation.getWord();\n-      }\n-    }\n-    if (!isDivisible) {\n-      s = String.valueOf(i);\n+    public String fizzBuzz2(int i) {\n+        String s = \"\";\n+\n+        NumberWordCorrelation[] correlations = {\n+                new NumberWordCorrelation(3, \"Fizz\"),\n+                new NumberWordCorrelation(5, \"Buzz\"),\n+                new NumberWordCorrelation(7, \"Rizz\"),\n+                new NumberWordCorrelation(9, \"Jazz\"),\n+        };\n+        boolean isDivisible = false;\n+        for (NumberWordCorrelation correlation : correlations) {\n+            if (i % correlation.getNumber() == 0) {\n+                isDivisible = true;\n+                s += correlation.getWord();\n+            }\n+        }\n+        if (!isDivisible) {\n+            s = String.valueOf(i);\n+        }\n+\n+\n+        return s;\n     }\n-\n-\n-    return s;\n-  }\n }\n\\ No newline at end of file"
  },
  {
    "sha": "d95d3847ceef602a98acf994e196d233fc7d2d12",
    "filename": "_1_basics/src/main/java/code/_2_challenge/_1_fizzbuzz/NumberWordCorrelation.java",
    "status": "modified",
    "additions": 12,
    "deletions": 12,
    "changes": 24,
    "blob_url": "https://github.com/titusmoldovan/java-training/blob/84d0c7c173582b19fa2d0a97f7e89d3fa417a455/_1_basics/src/main/java/code/_2_challenge/_1_fizzbuzz/NumberWordCorrelation.java",
    "raw_url": "https://github.com/titusmoldovan/java-training/raw/84d0c7c173582b19fa2d0a97f7e89d3fa417a455/_1_basics/src/main/java/code/_2_challenge/_1_fizzbuzz/NumberWordCorrelation.java",
    "contents_url": "https://api.github.com/repos/titusmoldovan/java-training/contents/_1_basics/src/main/java/code/_2_challenge/_1_fizzbuzz/NumberWordCorrelation.java?ref=84d0c7c173582b19fa2d0a97f7e89d3fa417a455",
    "patch": "@@ -1,19 +1,19 @@\n package code._2_challenge._1_fizzbuzz;\n \n public class NumberWordCorrelation {\n-  private Integer number;\n-  private String word;\n+    private Integer number;\n+    private String word;\n \n-  public NumberWordCorrelation(Integer number, String word) {\n-    this.number = number;\n-    this.word = word;\n-  }\n+    public NumberWordCorrelation(Integer number, String word) {\n+        this.number = number;\n+        this.word = word;\n+    }\n \n-  public Integer getNumber() {\n-    return number;\n-  }\n+    public Integer getNumber() {\n+        return number;\n+    }\n \n-  public String getWord() {\n-    return word;\n-  }\n+    public String getWord() {\n+        return word;\n+    }\n }\n\\ No newline at end of file"
  },
  {
    "sha": "01dd73ccec86d88067c15ff703d93788f04b764c",
    "filename": "_1_basics/src/main/java/code/_2_challenge/_2_foobarqix/FooBarQix.java",
    "status": "modified",
    "additions": 43,
    "deletions": 43,
    "changes": 86,
    "blob_url": "https://github.com/titusmoldovan/java-training/blob/84d0c7c173582b19fa2d0a97f7e89d3fa417a455/_1_basics/src/main/java/code/_2_challenge/_2_foobarqix/FooBarQix.java",
    "raw_url": "https://github.com/titusmoldovan/java-training/raw/84d0c7c173582b19fa2d0a97f7e89d3fa417a455/_1_basics/src/main/java/code/_2_challenge/_2_foobarqix/FooBarQix.java",
    "contents_url": "https://api.github.com/repos/titusmoldovan/java-training/contents/_1_basics/src/main/java/code/_2_challenge/_2_foobarqix/FooBarQix.java?ref=84d0c7c173582b19fa2d0a97f7e89d3fa417a455",
    "patch": "@@ -1,54 +1,54 @@\n package code._2_challenge._2_foobarqix;\n \n public class FooBarQix {\n-  public String compute(int i) {\n-    String s = \"\";\n-    if (i % 3 == 0) s += \"Foo\";\n-    if (i % 5 == 0) s += \"Bar\";\n-    if (i % 7 == 0) s += \"Qix\";\n+    public String compute(int i) {\n+        String s = \"\";\n+        if (i % 3 == 0) s += \"Foo\";\n+        if (i % 5 == 0) s += \"Bar\";\n+        if (i % 7 == 0) s += \"Qix\";\n \n-    char[] digits = String.valueOf(i).toCharArray();\n-    for (char digit : digits) {\n+        char[] digits = String.valueOf(i).toCharArray();\n+        for (char digit : digits) {\n \n-      if (digit == '3') s += \"Foo\";\n-      if (digit == '5') s += \"Bar\";\n-      if (digit == '7') s += \"Qix\";\n+            if (digit == '3') s += \"Foo\";\n+            if (digit == '5') s += \"Bar\";\n+            if (digit == '7') s += \"Qix\";\n \n-    }\n-\n-    if (s.isEmpty()) {\n-      s = String.valueOf(i);\n-    }\n-    return s;\n-  }\n-\n-  public String compute2(int i) {\n-    String s = \"\";\n+        }\n \n-    boolean isDivisible = false;\n-    if (i % 3 == 0) {\n-      s += \"Foo\";\n-      isDivisible = true;\n-    }\n-    if (i % 5 == 0) {\n-      s += \"Bar\";\n-      isDivisible = true;\n-    }\n-    if (i % 7 == 0) {\n-      s += \"Qix\";\n-      isDivisible = true;\n+        if (s.isEmpty()) {\n+            s = String.valueOf(i);\n+        }\n+        return s;\n     }\n \n-    char[] digits = String.valueOf(i).toCharArray();\n-    for (char digit : digits) {\n-\n-      if (digit == '3') s += \"Foo\";\n-      else if (digit == '5') s += \"Bar\";\n-      else if (digit == '7') s += \"Qix\";\n-      else if (digit == '0') s += \"*\";\n-      else if (!isDivisible) s += digit;\n+    public String compute2(int i) {\n+        String s = \"\";\n+\n+        boolean isDivisible = false;\n+        if (i % 3 == 0) {\n+            s += \"Foo\";\n+            isDivisible = true;\n+        }\n+        if (i % 5 == 0) {\n+            s += \"Bar\";\n+            isDivisible = true;\n+        }\n+        if (i % 7 == 0) {\n+            s += \"Qix\";\n+            isDivisible = true;\n+        }\n+\n+        char[] digits = String.valueOf(i).toCharArray();\n+        for (char digit : digits) {\n+\n+            if (digit == '3') s += \"Foo\";\n+            else if (digit == '5') s += \"Bar\";\n+            else if (digit == '7') s += \"Qix\";\n+            else if (digit == '0') s += \"*\";\n+            else if (!isDivisible) s += digit;\n+        }\n+\n+        return s;\n     }\n-\n-    return s;\n-  }\n }\n\\ No newline at end of file"
  },
  {
    "sha": "2e2998757da4f535a589efdce6b1badfbf63746c",
    "filename": "_1_basics/src/main/java/code/_2_challenge/_3_pair_of_2/PairOf2.java",
    "status": "modified",
    "additions": 21,
    "deletions": 21,
    "changes": 42,
    "blob_url": "https://github.com/titusmoldovan/java-training/blob/84d0c7c173582b19fa2d0a97f7e89d3fa417a455/_1_basics/src/main/java/code/_2_challenge/_3_pair_of_2/PairOf2.java",
    "raw_url": "https://github.com/titusmoldovan/java-training/raw/84d0c7c173582b19fa2d0a97f7e89d3fa417a455/_1_basics/src/main/java/code/_2_challenge/_3_pair_of_2/PairOf2.java",
    "contents_url": "https://api.github.com/repos/titusmoldovan/java-training/contents/_1_basics/src/main/java/code/_2_challenge/_3_pair_of_2/PairOf2.java?ref=84d0c7c173582b19fa2d0a97f7e89d3fa417a455",
    "patch": "@@ -1,29 +1,29 @@\n package code._2_challenge._3_pair_of_2;\n \n public class PairOf2 {\n-  public Integer countPairs(Integer[] numbers) {\n-    Integer pairs = 0;\n-    Integer[] indexesIncludedInPairs = new Integer[numbers.length];\n-    int nrOfIndexesIncludedInPairs = 0;\n+    public Integer countPairs(Integer[] numbers) {\n+        Integer pairs = 0;\n+        Integer[] indexesIncludedInPairs = new Integer[numbers.length];\n+        int nrOfIndexesIncludedInPairs = 0;\n \n-    for (int i = 0; i < numbers.length - 1; i++) {\n-      for (int j = i + 1; j < numbers.length; j++) {\n-        boolean indexesIncludedInOtherPairs = false;\n-        for (int k = 0; k < nrOfIndexesIncludedInPairs; k++) {\n-          if (indexesIncludedInPairs[k] == i || indexesIncludedInPairs[k] == j) {\n-            indexesIncludedInOtherPairs = true;\n-          }\n+        for (int i = 0; i < numbers.length - 1; i++) {\n+            for (int j = i + 1; j < numbers.length; j++) {\n+                boolean indexesIncludedInOtherPairs = false;\n+                for (int k = 0; k < nrOfIndexesIncludedInPairs; k++) {\n+                    if (indexesIncludedInPairs[k] == i || indexesIncludedInPairs[k] == j) {\n+                        indexesIncludedInOtherPairs = true;\n+                    }\n+                }\n+                if (!indexesIncludedInOtherPairs && (numbers[i] + numbers[j] == 0)) {\n+                    indexesIncludedInPairs[nrOfIndexesIncludedInPairs++] = i;\n+                    indexesIncludedInPairs[nrOfIndexesIncludedInPairs++] = j;\n+                    pairs++;\n+                    //System.out.println(numbers[i] + \" + \" + numbers[j] + \" = \" + 0);\n+                    break;\n+                }\n+            }\n         }\n-        if (!indexesIncludedInOtherPairs && (numbers[i] + numbers[j] == 0)) {\n-          indexesIncludedInPairs[nrOfIndexesIncludedInPairs++] = i;\n-          indexesIncludedInPairs[nrOfIndexesIncludedInPairs++] = j;\n-          pairs++;\n-          //System.out.println(numbers[i] + \" + \" + numbers[j] + \" = \" + 0);\n-          break;\n-        }\n-      }\n+        return pairs;\n     }\n-    return pairs;\n-  }\n \n }\n\\ No newline at end of file"
  },
  {
    "sha": "9e77b2e1fc761c81f30a71c194c2ce091268528d",
    "filename": "_1_basics/src/main/java/code/_2_challenge/_4_pair_of_3/PairOf3.java",
    "status": "modified",
    "additions": 23,
    "deletions": 23,
    "changes": 46,
    "blob_url": "https://github.com/titusmoldovan/java-training/blob/84d0c7c173582b19fa2d0a97f7e89d3fa417a455/_1_basics/src/main/java/code/_2_challenge/_4_pair_of_3/PairOf3.java",
    "raw_url": "https://github.com/titusmoldovan/java-training/raw/84d0c7c173582b19fa2d0a97f7e89d3fa417a455/_1_basics/src/main/java/code/_2_challenge/_4_pair_of_3/PairOf3.java",
    "contents_url": "https://api.github.com/repos/titusmoldovan/java-training/contents/_1_basics/src/main/java/code/_2_challenge/_4_pair_of_3/PairOf3.java?ref=84d0c7c173582b19fa2d0a97f7e89d3fa417a455",
    "patch": "@@ -1,31 +1,31 @@\n package code._2_challenge._4_pair_of_3;\n \n public class PairOf3 {\n-  public Integer countPairs(Integer[] numbers, int sum) {\n-    Integer pairs = 0;\n-    Integer[] indexesIncludedInPairs = new Integer[numbers.length];\n-    int nrOfIndexesIncludedInPairs = 0;\n-    for (int i = 0; i < numbers.length - 2; i++) {\n-      for (int j = i + 1; j < numbers.length - 1; j++) {\n-        for (int k = j + 1; k < numbers.length; k++) {\n-          boolean indexesIncludedInOtherPairs = false;\n-          for (int p = 0; p < nrOfIndexesIncludedInPairs; p++) {\n-            if (indexesIncludedInPairs[p] == i || indexesIncludedInPairs[p] == j || indexesIncludedInPairs[p] == k) {\n-              indexesIncludedInOtherPairs = true;\n+    public Integer countPairs(Integer[] numbers, int sum) {\n+        Integer pairs = 0;\n+        Integer[] indexesIncludedInPairs = new Integer[numbers.length];\n+        int nrOfIndexesIncludedInPairs = 0;\n+        for (int i = 0; i < numbers.length - 2; i++) {\n+            for (int j = i + 1; j < numbers.length - 1; j++) {\n+                for (int k = j + 1; k < numbers.length; k++) {\n+                    boolean indexesIncludedInOtherPairs = false;\n+                    for (int p = 0; p < nrOfIndexesIncludedInPairs; p++) {\n+                        if (indexesIncludedInPairs[p] == i || indexesIncludedInPairs[p] == j || indexesIncludedInPairs[p] == k) {\n+                            indexesIncludedInOtherPairs = true;\n+                        }\n+                    }\n+                    if (!indexesIncludedInOtherPairs && (numbers[i] + numbers[j] + numbers[k] == 0)) {\n+                        indexesIncludedInPairs[nrOfIndexesIncludedInPairs++] = i;\n+                        indexesIncludedInPairs[nrOfIndexesIncludedInPairs++] = j;\n+                        indexesIncludedInPairs[nrOfIndexesIncludedInPairs++] = k;\n+                        pairs++;\n+                        //System.out.println(numbers[i] + \" + \" + numbers[j] + \" + \" + numbers[k] + \" = \" + sum);\n+                        break;\n+                    }\n+                }\n             }\n-          }\n-          if (!indexesIncludedInOtherPairs && (numbers[i] + numbers[j] + numbers[k] == 0)) {\n-            indexesIncludedInPairs[nrOfIndexesIncludedInPairs++] = i;\n-            indexesIncludedInPairs[nrOfIndexesIncludedInPairs++] = j;\n-            indexesIncludedInPairs[nrOfIndexesIncludedInPairs++] = k;\n-            pairs++;\n-            //System.out.println(numbers[i] + \" + \" + numbers[j] + \" + \" + numbers[k] + \" = \" + sum);\n-            break;\n-          }\n         }\n-      }\n+        return pairs;\n     }\n-    return pairs;\n-  }\n \n }\n\\ No newline at end of file"
  },
  {
    "sha": "3b87b45637999f58ed67968b2244d10c1dc7d868",
    "filename": "_1_basics/src/main/java/code/_3_in_class/Main.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/titusmoldovan/java-training/blob/84d0c7c173582b19fa2d0a97f7e89d3fa417a455/_1_basics/src/main/java/code/_3_in_class/Main.java",
    "raw_url": "https://github.com/titusmoldovan/java-training/raw/84d0c7c173582b19fa2d0a97f7e89d3fa417a455/_1_basics/src/main/java/code/_3_in_class/Main.java",
    "contents_url": "https://api.github.com/repos/titusmoldovan/java-training/contents/_1_basics/src/main/java/code/_3_in_class/Main.java?ref=84d0c7c173582b19fa2d0a97f7e89d3fa417a455",
    "patch": "@@ -2,7 +2,7 @@\n \n public class Main {\n \n-  public static void main(String[] args) {\n-    //TODO put your code changes in here\n-  }\n+    public static void main(String[] args) {\n+        //TODO put your code changes in here\n+    }\n }\n\\ No newline at end of file"
  },
  {
    "sha": "adbcdf0dd0448cb62e15ec0a4a89b924359cceef",
    "filename": "_1_basics/src/main/java/code/_4_student_effort/FizzBuzz.java",
    "status": "added",
    "additions": 17,
    "deletions": 0,
    "changes": 17,
    "blob_url": "https://github.com/titusmoldovan/java-training/blob/84d0c7c173582b19fa2d0a97f7e89d3fa417a455/_1_basics/src/main/java/code/_4_student_effort/FizzBuzz.java",
    "raw_url": "https://github.com/titusmoldovan/java-training/raw/84d0c7c173582b19fa2d0a97f7e89d3fa417a455/_1_basics/src/main/java/code/_4_student_effort/FizzBuzz.java",
    "contents_url": "https://api.github.com/repos/titusmoldovan/java-training/contents/_1_basics/src/main/java/code/_4_student_effort/FizzBuzz.java?ref=84d0c7c173582b19fa2d0a97f7e89d3fa417a455",
    "patch": "@@ -0,0 +1,17 @@\n+package code._4_student_effort;\n+\n+public class FizzBuzz {\n+    public static void main(String[] args) {\n+        for (int i = 1; i <= 100; i++) {\n+            if (i % 15 == 0) {\n+                System.out.println(\"FizzBuzz\");\n+            } else if (i % 3 == 0) {\n+                System.out.println(\"Fizz\");\n+            } else if (i % 5 == 0) {\n+                System.out.println(\"Buzz\");\n+            } else {\n+                System.out.println(String.valueOf(i));\n+            }\n+        }\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "95bb1182c6bae87cfdd208817332c2c0a8ebd7c3",
    "filename": "_1_basics/src/main/java/code/_4_student_effort/Main.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/titusmoldovan/java-training/blob/84d0c7c173582b19fa2d0a97f7e89d3fa417a455/_1_basics/src/main/java/code/_4_student_effort/Main.java",
    "raw_url": "https://github.com/titusmoldovan/java-training/raw/84d0c7c173582b19fa2d0a97f7e89d3fa417a455/_1_basics/src/main/java/code/_4_student_effort/Main.java",
    "contents_url": "https://api.github.com/repos/titusmoldovan/java-training/contents/_1_basics/src/main/java/code/_4_student_effort/Main.java?ref=84d0c7c173582b19fa2d0a97f7e89d3fa417a455",
    "patch": "@@ -2,7 +2,7 @@\n \n public class Main {\n \n-  public static void main(String[] args) {\n-    //TODO put your code changes in here\n-  }\n+    public static void main(String[] args) {\n+        //TODO put your code changes in here\n+    }\n }"
  },
  {
    "sha": "a2177f0dd62f10c84ef3a78336592497bc12d9cf",
    "filename": "_1_basics/src/test/java/code/_2_challenge/_1_fizzbuzz/FizzBuzzTest.java",
    "status": "modified",
    "additions": 57,
    "deletions": 57,
    "changes": 114,
    "blob_url": "https://github.com/titusmoldovan/java-training/blob/84d0c7c173582b19fa2d0a97f7e89d3fa417a455/_1_basics/src/test/java/code/_2_challenge/_1_fizzbuzz/FizzBuzzTest.java",
    "raw_url": "https://github.com/titusmoldovan/java-training/raw/84d0c7c173582b19fa2d0a97f7e89d3fa417a455/_1_basics/src/test/java/code/_2_challenge/_1_fizzbuzz/FizzBuzzTest.java",
    "contents_url": "https://api.github.com/repos/titusmoldovan/java-training/contents/_1_basics/src/test/java/code/_2_challenge/_1_fizzbuzz/FizzBuzzTest.java?ref=84d0c7c173582b19fa2d0a97f7e89d3fa417a455",
    "patch": "@@ -7,67 +7,67 @@\n import static java.util.Map.entry;\n \n public class FizzBuzzTest {\n-  public static Map<Integer, String> stage1 = Map.ofEntries(\n-          entry(1, \"1\"),\n-          entry(2, \"2\"),\n-          entry(3, \"Fizz\"),\n-          entry(4, \"4\"),\n-          entry(5, \"Buzz\"),\n-          entry(6, \"Fizz\"),\n-          entry(7, \"7\"),\n-          entry(8, \"8\"),\n-          entry(9, \"Fizz\"),\n-          entry(10, \"Buzz\"),\n-          entry(13, \"13\"),\n-          entry(14, \"14\"),\n-          entry(15, \"FizzBuzz\"),\n-          entry(16, \"16\"),\n-          entry(17, \"17\"),\n-          entry(18, \"Fizz\"),\n-          entry(19, \"19\"),\n-          entry(20, \"Buzz\"),\n-          entry(21, \"Fizz\"),\n-          entry(22, \"22\"),\n-          entry(23, \"23\"),\n-          entry(24, \"Fizz\"),\n-          entry(25, \"Buzz\"),\n-          entry(26, \"26\"),\n-          entry(27, \"Fizz\"),\n-          entry(28, \"28\"),\n-          entry(29, \"29\"),\n-          entry(30, \"FizzBuzz\")\n-  );\n+    public static Map<Integer, String> stage1 = Map.ofEntries(\n+            entry(1, \"1\"),\n+            entry(2, \"2\"),\n+            entry(3, \"Fizz\"),\n+            entry(4, \"4\"),\n+            entry(5, \"Buzz\"),\n+            entry(6, \"Fizz\"),\n+            entry(7, \"7\"),\n+            entry(8, \"8\"),\n+            entry(9, \"Fizz\"),\n+            entry(10, \"Buzz\"),\n+            entry(13, \"13\"),\n+            entry(14, \"14\"),\n+            entry(15, \"FizzBuzz\"),\n+            entry(16, \"16\"),\n+            entry(17, \"17\"),\n+            entry(18, \"Fizz\"),\n+            entry(19, \"19\"),\n+            entry(20, \"Buzz\"),\n+            entry(21, \"Fizz\"),\n+            entry(22, \"22\"),\n+            entry(23, \"23\"),\n+            entry(24, \"Fizz\"),\n+            entry(25, \"Buzz\"),\n+            entry(26, \"26\"),\n+            entry(27, \"Fizz\"),\n+            entry(28, \"28\"),\n+            entry(29, \"29\"),\n+            entry(30, \"FizzBuzz\")\n+    );\n \n-  public static Map<Integer, String> stage2 = Map.ofEntries(\n-          entry(7, \"Rizz\"),\n-          entry(9, \"FizzJazz\"),\n-          entry(14, \"Rizz\"),\n-          entry(18, \"FizzJazz\"),\n-          entry(21, \"FizzRizz\"),\n-          entry(27, \"FizzJazz\"),\n-          entry(28, \"Rizz\")\n-  );\n+    public static Map<Integer, String> stage2 = Map.ofEntries(\n+            entry(7, \"Rizz\"),\n+            entry(9, \"FizzJazz\"),\n+            entry(14, \"Rizz\"),\n+            entry(18, \"FizzJazz\"),\n+            entry(21, \"FizzRizz\"),\n+            entry(27, \"FizzJazz\"),\n+            entry(28, \"Rizz\")\n+    );\n \n-  @org.junit.Test\n-  public void stage1() {\n-    FizzBuzz FizzBuzz = new FizzBuzz();\n-    for (Map.Entry<Integer, String> entry : stage1.entrySet()) {\n-      Integer input = entry.getKey();\n-      String actual = FizzBuzz.fizzBuzz(entry.getKey());\n-      String expected = entry.getValue();\n-      Assert.assertEquals(\"for input: \" + input, expected, actual);\n+    @org.junit.Test\n+    public void stage1() {\n+        FizzBuzz FizzBuzz = new FizzBuzz();\n+        for (Map.Entry<Integer, String> entry : stage1.entrySet()) {\n+            Integer input = entry.getKey();\n+            String actual = FizzBuzz.fizzBuzz(entry.getKey());\n+            String expected = entry.getValue();\n+            Assert.assertEquals(\"for input: \" + input, expected, actual);\n+        }\n     }\n-  }\n \n-  @org.junit.Test\n-  public void stage2() {\n-    FizzBuzz FizzBuzz = new FizzBuzz();\n-    for (Map.Entry<Integer, String> entry : stage2.entrySet()) {\n-      Integer input = entry.getKey();\n-      String actual = FizzBuzz.fizzBuzz2(entry.getKey());\n-      String expected = entry.getValue();\n-      Assert.assertEquals(\"for input: \" + input, expected, actual);\n+    @org.junit.Test\n+    public void stage2() {\n+        FizzBuzz FizzBuzz = new FizzBuzz();\n+        for (Map.Entry<Integer, String> entry : stage2.entrySet()) {\n+            Integer input = entry.getKey();\n+            String actual = FizzBuzz.fizzBuzz2(entry.getKey());\n+            String expected = entry.getValue();\n+            Assert.assertEquals(\"for input: \" + input, expected, actual);\n+        }\n     }\n-  }\n \n }\n\\ No newline at end of file"
  },
  {
    "sha": "ded8ebf5830b6860aa760413670fd731c867cab5",
    "filename": "_1_basics/src/test/java/code/_2_challenge/_2_foobarqix/FooBarQixTest.java",
    "status": "modified",
    "additions": 42,
    "deletions": 42,
    "changes": 84,
    "blob_url": "https://github.com/titusmoldovan/java-training/blob/84d0c7c173582b19fa2d0a97f7e89d3fa417a455/_1_basics/src/test/java/code/_2_challenge/_2_foobarqix/FooBarQixTest.java",
    "raw_url": "https://github.com/titusmoldovan/java-training/raw/84d0c7c173582b19fa2d0a97f7e89d3fa417a455/_1_basics/src/test/java/code/_2_challenge/_2_foobarqix/FooBarQixTest.java",
    "contents_url": "https://api.github.com/repos/titusmoldovan/java-training/contents/_1_basics/src/test/java/code/_2_challenge/_2_foobarqix/FooBarQixTest.java?ref=84d0c7c173582b19fa2d0a97f7e89d3fa417a455",
    "patch": "@@ -7,51 +7,51 @@\n import static java.util.Map.entry;\n \n public class FooBarQixTest {\n-  public static Map<Integer, String> stage1 = Map.ofEntries(\n-          entry(1, \"1\"),\n-          entry(2, \"2\"),\n-          entry(3, \"FooFoo\"),\n-          entry(4, \"4\"),\n-          entry(5, \"BarBar\"),\n-          entry(6, \"Foo\"),\n-          entry(7, \"QixQix\"),\n-          entry(8, \"8\"),\n-          entry(9, \"Foo\"),\n-          entry(10, \"Bar\"),\n-          entry(13, \"Foo\"),\n-          entry(15, \"FooBarBar\"),\n-          entry(21, \"FooQix\"),\n-          entry(33, \"FooFooFoo\"),\n-          entry(51, \"FooBar\"),\n-          entry(53, \"BarFoo\")\n-  );\n+    public static Map<Integer, String> stage1 = Map.ofEntries(\n+            entry(1, \"1\"),\n+            entry(2, \"2\"),\n+            entry(3, \"FooFoo\"),\n+            entry(4, \"4\"),\n+            entry(5, \"BarBar\"),\n+            entry(6, \"Foo\"),\n+            entry(7, \"QixQix\"),\n+            entry(8, \"8\"),\n+            entry(9, \"Foo\"),\n+            entry(10, \"Bar\"),\n+            entry(13, \"Foo\"),\n+            entry(15, \"FooBarBar\"),\n+            entry(21, \"FooQix\"),\n+            entry(33, \"FooFooFoo\"),\n+            entry(51, \"FooBar\"),\n+            entry(53, \"BarFoo\")\n+    );\n \n-  public static Map<Integer, String> stage2 = Map.ofEntries(\n-          entry(101, \"1*1\"),\n-          entry(303, \"FooFoo*Foo\"),\n-          entry(105, \"FooBarQix*Bar\"),\n-          entry(10101, \"FooQix**\")\n-  );\n+    public static Map<Integer, String> stage2 = Map.ofEntries(\n+            entry(101, \"1*1\"),\n+            entry(303, \"FooFoo*Foo\"),\n+            entry(105, \"FooBarQix*Bar\"),\n+            entry(10101, \"FooQix**\")\n+    );\n \n-  @org.junit.Test\n-  public void stage1() {\n-    FooBarQix FooBarQix = new FooBarQix();\n-    for (Map.Entry<Integer, String> entry : stage1.entrySet()) {\n-      Integer input = entry.getKey();\n-      String actual = FooBarQix.compute(entry.getKey());\n-      String expected = entry.getValue();\n-      Assert.assertEquals(\"for input: \" + input, expected, actual);\n+    @org.junit.Test\n+    public void stage1() {\n+        FooBarQix FooBarQix = new FooBarQix();\n+        for (Map.Entry<Integer, String> entry : stage1.entrySet()) {\n+            Integer input = entry.getKey();\n+            String actual = FooBarQix.compute(entry.getKey());\n+            String expected = entry.getValue();\n+            Assert.assertEquals(\"for input: \" + input, expected, actual);\n+        }\n     }\n-  }\n \n-  @org.junit.Test\n-  public void stage2() {\n-    FooBarQix FooBarQix = new FooBarQix();\n-    for (Map.Entry<Integer, String> entry : stage2.entrySet()) {\n-      Integer input = entry.getKey();\n-      String actual = FooBarQix.compute2(entry.getKey());\n-      String expected = entry.getValue();\n-      Assert.assertEquals(\"for input: \" + input, expected, actual);\n+    @org.junit.Test\n+    public void stage2() {\n+        FooBarQix FooBarQix = new FooBarQix();\n+        for (Map.Entry<Integer, String> entry : stage2.entrySet()) {\n+            Integer input = entry.getKey();\n+            String actual = FooBarQix.compute2(entry.getKey());\n+            String expected = entry.getValue();\n+            Assert.assertEquals(\"for input: \" + input, expected, actual);\n+        }\n     }\n-  }\n }\n\\ No newline at end of file"
  },
  {
    "sha": "17db3ce52729ad2235b629abc1478661f9597300",
    "filename": "_1_basics/src/test/java/code/_2_challenge/_3_pair_of_2/PairOf2Test.java",
    "status": "modified",
    "additions": 14,
    "deletions": 14,
    "changes": 28,
    "blob_url": "https://github.com/titusmoldovan/java-training/blob/84d0c7c173582b19fa2d0a97f7e89d3fa417a455/_1_basics/src/test/java/code/_2_challenge/_3_pair_of_2/PairOf2Test.java",
    "raw_url": "https://github.com/titusmoldovan/java-training/raw/84d0c7c173582b19fa2d0a97f7e89d3fa417a455/_1_basics/src/test/java/code/_2_challenge/_3_pair_of_2/PairOf2Test.java",
    "contents_url": "https://api.github.com/repos/titusmoldovan/java-training/contents/_1_basics/src/test/java/code/_2_challenge/_3_pair_of_2/PairOf2Test.java?ref=84d0c7c173582b19fa2d0a97f7e89d3fa417a455",
    "patch": "@@ -8,20 +8,20 @@\n import static java.util.Map.entry;\n \n public class PairOf2Test {\n-  public static Map<Integer[], Integer> data = Map.ofEntries(\n-          entry(new Integer[]{3, 2, -3, -2, 3, 0}, 2),\n-          entry(new Integer[]{1, 1, 0, -1, -1}, 2),\n-          entry(new Integer[]{5, 9, -5, 7, -5}, 1)\n-  );\n+    public static Map<Integer[], Integer> data = Map.ofEntries(\n+            entry(new Integer[]{3, 2, -3, -2, 3, 0}, 2),\n+            entry(new Integer[]{1, 1, 0, -1, -1}, 2),\n+            entry(new Integer[]{5, 9, -5, 7, -5}, 1)\n+    );\n \n-  @org.junit.Test\n-  public void test() {\n-    PairOf2 PairOf2 = new PairOf2();\n-    for (Map.Entry<Integer[], Integer> entry : data.entrySet()) {\n-      Integer[] input = entry.getKey();\n-      Integer expected = entry.getValue();\n-      Integer actual = PairOf2.countPairs(input);\n-      Assert.assertEquals(\"for input: \" + Arrays.asList(input), expected, actual);\n+    @org.junit.Test\n+    public void test() {\n+        PairOf2 PairOf2 = new PairOf2();\n+        for (Map.Entry<Integer[], Integer> entry : data.entrySet()) {\n+            Integer[] input = entry.getKey();\n+            Integer expected = entry.getValue();\n+            Integer actual = PairOf2.countPairs(input);\n+            Assert.assertEquals(\"for input: \" + Arrays.asList(input), expected, actual);\n+        }\n     }\n-  }\n }\n\\ No newline at end of file"
  },
  {
    "sha": "d7a9caf22fadd227f79b26d041723215fd517f95",
    "filename": "_1_basics/src/test/java/code/_2_challenge/_4_pair_of_3/PairOf3Test.java",
    "status": "modified",
    "additions": 12,
    "deletions": 12,
    "changes": 24,
    "blob_url": "https://github.com/titusmoldovan/java-training/blob/84d0c7c173582b19fa2d0a97f7e89d3fa417a455/_1_basics/src/test/java/code/_2_challenge/_4_pair_of_3/PairOf3Test.java",
    "raw_url": "https://github.com/titusmoldovan/java-training/raw/84d0c7c173582b19fa2d0a97f7e89d3fa417a455/_1_basics/src/test/java/code/_2_challenge/_4_pair_of_3/PairOf3Test.java",
    "contents_url": "https://api.github.com/repos/titusmoldovan/java-training/contents/_1_basics/src/test/java/code/_2_challenge/_4_pair_of_3/PairOf3Test.java?ref=84d0c7c173582b19fa2d0a97f7e89d3fa417a455",
    "patch": "@@ -8,18 +8,18 @@\n import static java.util.Map.entry;\n \n public class PairOf3Test {\n-  public static Map<Integer[], Integer> data = Map.ofEntries(\n-          entry(new Integer[]{-1, -1, -1, 2}, 1)\n-  );\n+    public static Map<Integer[], Integer> data = Map.ofEntries(\n+            entry(new Integer[]{-1, -1, -1, 2}, 1)\n+    );\n \n-  @org.junit.Test\n-  public void test() {\n-    PairOf3 PairOf3 = new PairOf3();\n-    for (Map.Entry<Integer[], Integer> entry : data.entrySet()) {\n-      Integer[] input = entry.getKey();\n-      Integer expected = entry.getValue();\n-      Integer actual = PairOf3.countPairs(input, 0);\n-      Assert.assertEquals(\"for input: \" + Arrays.asList(input), expected, actual);\n+    @org.junit.Test\n+    public void test() {\n+        PairOf3 PairOf3 = new PairOf3();\n+        for (Map.Entry<Integer[], Integer> entry : data.entrySet()) {\n+            Integer[] input = entry.getKey();\n+            Integer expected = entry.getValue();\n+            Integer actual = PairOf3.countPairs(input, 0);\n+            Assert.assertEquals(\"for input: \" + Arrays.asList(input), expected, actual);\n+        }\n     }\n-  }\n }\n\\ No newline at end of file"
  },
  {
    "sha": "9ba41a249e124721e89c65729d21c6d7df2c1b66",
    "filename": "_2_oo/.classpath",
    "status": "added",
    "additions": 44,
    "deletions": 0,
    "changes": 44,
    "blob_url": "https://github.com/titusmoldovan/java-training/blob/84d0c7c173582b19fa2d0a97f7e89d3fa417a455/_2_oo/.classpath",
    "raw_url": "https://github.com/titusmoldovan/java-training/raw/84d0c7c173582b19fa2d0a97f7e89d3fa417a455/_2_oo/.classpath",
    "contents_url": "https://api.github.com/repos/titusmoldovan/java-training/contents/_2_oo/.classpath?ref=84d0c7c173582b19fa2d0a97f7e89d3fa417a455",
    "patch": "@@ -0,0 +1,44 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<classpath>\n+\t<classpathentry kind=\"src\" output=\"target/classes\" path=\"src/main/java\">\n+\t\t<attributes>\n+\t\t\t<attribute name=\"optional\" value=\"true\"/>\n+\t\t\t<attribute name=\"maven.pomderived\" value=\"true\"/>\n+\t\t</attributes>\n+\t</classpathentry>\n+\t<classpathentry kind=\"src\" output=\"target/test-classes\" path=\"src/test/java\">\n+\t\t<attributes>\n+\t\t\t<attribute name=\"optional\" value=\"true\"/>\n+\t\t\t<attribute name=\"maven.pomderived\" value=\"true\"/>\n+\t\t\t<attribute name=\"test\" value=\"true\"/>\n+\t\t</attributes>\n+\t</classpathentry>\n+\t<classpathentry kind=\"con\" path=\"org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-11\">\n+\t\t<attributes>\n+\t\t\t<attribute name=\"maven.pomderived\" value=\"true\"/>\n+\t\t</attributes>\n+\t</classpathentry>\n+\t<classpathentry kind=\"con\" path=\"org.eclipse.m2e.MAVEN2_CLASSPATH_CONTAINER\">\n+\t\t<attributes>\n+\t\t\t<attribute name=\"maven.pomderived\" value=\"true\"/>\n+\t\t</attributes>\n+\t</classpathentry>\n+\t<classpathentry kind=\"src\" path=\"target/generated-sources/annotations\">\n+\t\t<attributes>\n+\t\t\t<attribute name=\"optional\" value=\"true\"/>\n+\t\t\t<attribute name=\"maven.pomderived\" value=\"true\"/>\n+\t\t\t<attribute name=\"ignore_optional_problems\" value=\"true\"/>\n+\t\t\t<attribute name=\"m2e-apt\" value=\"true\"/>\n+\t\t</attributes>\n+\t</classpathentry>\n+\t<classpathentry kind=\"src\" output=\"target/test-classes\" path=\"target/generated-test-sources/test-annotations\">\n+\t\t<attributes>\n+\t\t\t<attribute name=\"optional\" value=\"true\"/>\n+\t\t\t<attribute name=\"maven.pomderived\" value=\"true\"/>\n+\t\t\t<attribute name=\"ignore_optional_problems\" value=\"true\"/>\n+\t\t\t<attribute name=\"m2e-apt\" value=\"true\"/>\n+\t\t\t<attribute name=\"test\" value=\"true\"/>\n+\t\t</attributes>\n+\t</classpathentry>\n+\t<classpathentry kind=\"output\" path=\"target/classes\"/>\n+</classpath>"
  },
  {
    "sha": "b1670e5957a5e0652f7c6c685dfb9e9af42d3e15",
    "filename": "_2_oo/.project",
    "status": "added",
    "additions": 34,
    "deletions": 0,
    "changes": 34,
    "blob_url": "https://github.com/titusmoldovan/java-training/blob/84d0c7c173582b19fa2d0a97f7e89d3fa417a455/_2_oo/.project",
    "raw_url": "https://github.com/titusmoldovan/java-training/raw/84d0c7c173582b19fa2d0a97f7e89d3fa417a455/_2_oo/.project",
    "contents_url": "https://api.github.com/repos/titusmoldovan/java-training/contents/_2_oo/.project?ref=84d0c7c173582b19fa2d0a97f7e89d3fa417a455",
    "patch": "@@ -0,0 +1,34 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<projectDescription>\n+\t<name>_2_oo</name>\n+\t<comment></comment>\n+\t<projects>\n+\t</projects>\n+\t<buildSpec>\n+\t\t<buildCommand>\n+\t\t\t<name>org.eclipse.jdt.core.javabuilder</name>\n+\t\t\t<arguments>\n+\t\t\t</arguments>\n+\t\t</buildCommand>\n+\t\t<buildCommand>\n+\t\t\t<name>org.eclipse.m2e.core.maven2Builder</name>\n+\t\t\t<arguments>\n+\t\t\t</arguments>\n+\t\t</buildCommand>\n+\t</buildSpec>\n+\t<natures>\n+\t\t<nature>org.eclipse.jdt.core.javanature</nature>\n+\t\t<nature>org.eclipse.m2e.core.maven2Nature</nature>\n+\t</natures>\n+\t<filteredResources>\n+\t\t<filter>\n+\t\t\t<id>1615320566095</id>\n+\t\t\t<name></name>\n+\t\t\t<type>30</type>\n+\t\t\t<matcher>\n+\t\t\t\t<id>org.eclipse.core.resources.regexFilterMatcher</id>\n+\t\t\t\t<arguments>node_modules|.git|__CREATED_BY_JAVA_LANGUAGE_SERVER__</arguments>\n+\t\t\t</matcher>\n+\t\t</filter>\n+\t</filteredResources>\n+</projectDescription>"
  },
  {
    "sha": "d4313d4b25e4b826b5efa4bed06fd69068761519",
    "filename": "_2_oo/.settings/org.eclipse.jdt.apt.core.prefs",
    "status": "added",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/titusmoldovan/java-training/blob/84d0c7c173582b19fa2d0a97f7e89d3fa417a455/_2_oo/.settings/org.eclipse.jdt.apt.core.prefs",
    "raw_url": "https://github.com/titusmoldovan/java-training/raw/84d0c7c173582b19fa2d0a97f7e89d3fa417a455/_2_oo/.settings/org.eclipse.jdt.apt.core.prefs",
    "contents_url": "https://api.github.com/repos/titusmoldovan/java-training/contents/_2_oo/.settings/org.eclipse.jdt.apt.core.prefs?ref=84d0c7c173582b19fa2d0a97f7e89d3fa417a455",
    "patch": "@@ -0,0 +1,2 @@\n+eclipse.preferences.version=1\n+org.eclipse.jdt.apt.aptEnabled=false"
  },
  {
    "sha": "46235dc078e4938d44ecf463f32b5f913f920ccb",
    "filename": "_2_oo/.settings/org.eclipse.jdt.core.prefs",
    "status": "added",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/titusmoldovan/java-training/blob/84d0c7c173582b19fa2d0a97f7e89d3fa417a455/_2_oo/.settings/org.eclipse.jdt.core.prefs",
    "raw_url": "https://github.com/titusmoldovan/java-training/raw/84d0c7c173582b19fa2d0a97f7e89d3fa417a455/_2_oo/.settings/org.eclipse.jdt.core.prefs",
    "contents_url": "https://api.github.com/repos/titusmoldovan/java-training/contents/_2_oo/.settings/org.eclipse.jdt.core.prefs?ref=84d0c7c173582b19fa2d0a97f7e89d3fa417a455",
    "patch": "@@ -0,0 +1,9 @@\n+eclipse.preferences.version=1\n+org.eclipse.jdt.core.compiler.codegen.targetPlatform=11\n+org.eclipse.jdt.core.compiler.compliance=11\n+org.eclipse.jdt.core.compiler.problem.enablePreviewFeatures=disabled\n+org.eclipse.jdt.core.compiler.problem.forbiddenReference=warning\n+org.eclipse.jdt.core.compiler.problem.reportPreviewFeatures=ignore\n+org.eclipse.jdt.core.compiler.processAnnotations=disabled\n+org.eclipse.jdt.core.compiler.release=disabled\n+org.eclipse.jdt.core.compiler.source=11"
  }
]
