[
  {
    "sha": "f0f490e183df08881388321e9940a24925ab7497",
    "filename": "_1_basics/src/main/java/code/_4_student_effort/Challenge1/fizzbuzz.java",
    "status": "added",
    "additions": 27,
    "deletions": 0,
    "changes": 27,
    "blob_url": "https://github.com/titusmoldovan/java-training/blob/0ad244bac38231ab7c79bc0f39e26b80abcc3df9/_1_basics/src/main/java/code/_4_student_effort/Challenge1/fizzbuzz.java",
    "raw_url": "https://github.com/titusmoldovan/java-training/raw/0ad244bac38231ab7c79bc0f39e26b80abcc3df9/_1_basics/src/main/java/code/_4_student_effort/Challenge1/fizzbuzz.java",
    "contents_url": "https://api.github.com/repos/titusmoldovan/java-training/contents/_1_basics/src/main/java/code/_4_student_effort/Challenge1/fizzbuzz.java?ref=0ad244bac38231ab7c79bc0f39e26b80abcc3df9",
    "patch": "@@ -0,0 +1,27 @@\n+package code._4_student_effort.Challenge1;\n+\n+public class fizzbuzz {\n+    public static String fizzbuzz1(Integer nr) {\n+        if (nr % 3 == 0 && nr % 5 == 0)\n+            return \"FizzBuzz\";\n+        else if (nr % 3 == 0)\n+            return \"Fizz\";\n+        else if (nr % 5 == 0)\n+            return \"Buzz\";\n+        else\n+            return nr.toString();\n+    }\n+\n+    public static String fizzbuzz2(Integer nr) {\n+        StringBuilder ans = new StringBuilder();\n+        if (nr % 3 == 0)\n+            ans.append(\"Fizz\");\n+        if (nr % 5 == 0)\n+            ans.append(\"Buzz\");\n+        if (nr % 7 == 0)\n+            ans.append(\"Rizz\");\n+        if (nr % 11 == 0)\n+            ans = ans.append(\"Jazz\");\n+        return ans.toString();\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "0413fd6b92723035691c79106ed094e09bba0b91",
    "filename": "_1_basics/src/main/java/code/_4_student_effort/Challenge2/FooBarQix.java",
    "status": "added",
    "additions": 72,
    "deletions": 0,
    "changes": 72,
    "blob_url": "https://github.com/titusmoldovan/java-training/blob/0ad244bac38231ab7c79bc0f39e26b80abcc3df9/_1_basics/src/main/java/code/_4_student_effort/Challenge2/FooBarQix.java",
    "raw_url": "https://github.com/titusmoldovan/java-training/raw/0ad244bac38231ab7c79bc0f39e26b80abcc3df9/_1_basics/src/main/java/code/_4_student_effort/Challenge2/FooBarQix.java",
    "contents_url": "https://api.github.com/repos/titusmoldovan/java-training/contents/_1_basics/src/main/java/code/_4_student_effort/Challenge2/FooBarQix.java?ref=0ad244bac38231ab7c79bc0f39e26b80abcc3df9",
    "patch": "@@ -0,0 +1,72 @@\n+package code._4_student_effort.Challenge2;\n+\n+public class FooBarQix {\n+\n+    public static int inverseNumber(int x) {\n+        int p = 0;\n+        while (x > 0) {\n+            p = p * 10 + x % 10;\n+            x /= 10;\n+        }\n+        return p;\n+    }\n+\n+    public static String compute(int nr) {\n+        StringBuilder ans = new StringBuilder();\n+        if (nr % 3 == 0)\n+            ans.append(\"Foo\");\n+        if (nr % 5 == 0)\n+            ans.append(\"Bar\");\n+        if (nr % 7 == 0)\n+            ans.append(\"Qix\");\n+\n+        nr = inverseNumber(nr);\n+        while (nr > 0) {\n+            if (nr % 10 == 3)\n+                ans.append(\"Foo\");\n+            else if (nr % 10 == 5)\n+                ans.append(\"Bar\");\n+            else if (nr % 10 == 7)\n+                ans.append(\"Qix\");\n+            nr /= 10;\n+        }\n+        return ans.toString();\n+    }\n+\n+    public static String compute2(int nr) {\n+        StringBuilder ans = new StringBuilder();\n+        boolean ok = false;\n+        if (nr % 3 == 0) {\n+            ans.append(\"Foo\");\n+            ok = true;\n+        }\n+        if (nr % 5 == 0) {\n+            ans.append(\"Bar\");\n+            ok = true;\n+        }\n+        if (nr % 7 == 0) {\n+            ans.append(\"Qix\");\n+            ok = true;\n+        }\n+\n+        nr = inverseNumber(nr);\n+\n+        while (nr > 0) {\n+            if (nr % 10 == 3) {\n+                ans.append(\"Foo\");\n+                ok = true;\n+            } else if (nr % 10 == 5) {\n+                ans.append(\"Bar\");\n+                ok = true;\n+            } else if (nr % 10 == 7) {\n+                ans.append(\"Qix\");\n+                ok = true;\n+            } else if (nr % 10 == 0)\n+                ans.append(\"*\");\n+            else if (!ok)\n+                ans.append(nr % 10);\n+            nr /= 10;\n+        }\n+        return ans.toString();\n+    }\n+}"
  },
  {
    "sha": "7a6d958a5cd838fd3f957174ba49d2af7c9a40b4",
    "filename": "_1_basics/src/main/java/code/_4_student_effort/Challenge3/pairof2.java",
    "status": "added",
    "additions": 23,
    "deletions": 0,
    "changes": 23,
    "blob_url": "https://github.com/titusmoldovan/java-training/blob/0ad244bac38231ab7c79bc0f39e26b80abcc3df9/_1_basics/src/main/java/code/_4_student_effort/Challenge3/pairof2.java",
    "raw_url": "https://github.com/titusmoldovan/java-training/raw/0ad244bac38231ab7c79bc0f39e26b80abcc3df9/_1_basics/src/main/java/code/_4_student_effort/Challenge3/pairof2.java",
    "contents_url": "https://api.github.com/repos/titusmoldovan/java-training/contents/_1_basics/src/main/java/code/_4_student_effort/Challenge3/pairof2.java?ref=0ad244bac38231ab7c79bc0f39e26b80abcc3df9",
    "patch": "@@ -0,0 +1,23 @@\n+package code._4_student_effort.Challenge3;\n+\n+public class pairof2 {\n+    public static int countPairs(Integer[] v) {\n+        int i, j, number_of_pairs = 0;\n+        int[] is_in_pair = new int[100];\n+        int n = v.length;\n+        for (i = 0; i < n-1; i++) {\n+            if (is_in_pair[i] == 0) {\n+                int current = v[i];\n+                for (j = i+1; j < n; j++)\n+                    if (v[j] == -current && is_in_pair[j] == 0) {\n+                        number_of_pairs++;\n+                        is_in_pair[i] = 1;\n+                        is_in_pair[j] = 1;\n+                        break;\n+                    }\n+            }\n+        }\n+        System.out.println(\"\\n\");\n+        return number_of_pairs;\n+    }\n+}"
  },
  {
    "sha": "2859c6526bbe7f7cc3cc699822cbfd7df4c60ff7",
    "filename": "_1_basics/src/main/java/code/_4_student_effort/Challenge4/pairof3.java",
    "status": "added",
    "additions": 30,
    "deletions": 0,
    "changes": 30,
    "blob_url": "https://github.com/titusmoldovan/java-training/blob/0ad244bac38231ab7c79bc0f39e26b80abcc3df9/_1_basics/src/main/java/code/_4_student_effort/Challenge4/pairof3.java",
    "raw_url": "https://github.com/titusmoldovan/java-training/raw/0ad244bac38231ab7c79bc0f39e26b80abcc3df9/_1_basics/src/main/java/code/_4_student_effort/Challenge4/pairof3.java",
    "contents_url": "https://api.github.com/repos/titusmoldovan/java-training/contents/_1_basics/src/main/java/code/_4_student_effort/Challenge4/pairof3.java?ref=0ad244bac38231ab7c79bc0f39e26b80abcc3df9",
    "patch": "@@ -0,0 +1,30 @@\n+package code._4_student_effort.Challenge4;\n+\n+public class pairof3 {\n+\n+    public static int countPairs(Integer[] v) {\n+        int i, j, number_of_pairs = 0;\n+        int[] is_in_pair = new int[100];\n+        int n = v.length;\n+        for (i = 0; i < n - 2; i++) {\n+            if (is_in_pair[i] == 0) {\n+                int first = v[i];\n+                int first_index = i;\n+                for (j = i + 1; j < n-1; j++) {\n+                    int second = v[j];\n+                    int second_index = j;\n+                    for (int k = j+1; k < n; k++)\n+                        if (first + second + v[k] == 0 && k != first_index && k != second_index) {\n+                            if (is_in_pair[k] == 0) {\n+                                number_of_pairs++;\n+                                is_in_pair[first_index] = 1;\n+                                is_in_pair[second_index] = 1;\n+                                is_in_pair[k] = 1;\n+                            }\n+                        }\n+                }\n+            }\n+        }\n+        return number_of_pairs;\n+    }\n+}"
  },
  {
    "sha": "d42d03ae625dbba8fb8785b30df765d42d580d35",
    "filename": "_1_basics/src/test/java/code/_2_challenge/_1_fizzbuzz/FizzBuzzTest.java",
    "status": "modified",
    "additions": 8,
    "deletions": 7,
    "changes": 15,
    "blob_url": "https://github.com/titusmoldovan/java-training/blob/0ad244bac38231ab7c79bc0f39e26b80abcc3df9/_1_basics/src/test/java/code/_2_challenge/_1_fizzbuzz/FizzBuzzTest.java",
    "raw_url": "https://github.com/titusmoldovan/java-training/raw/0ad244bac38231ab7c79bc0f39e26b80abcc3df9/_1_basics/src/test/java/code/_2_challenge/_1_fizzbuzz/FizzBuzzTest.java",
    "contents_url": "https://api.github.com/repos/titusmoldovan/java-training/contents/_1_basics/src/test/java/code/_2_challenge/_1_fizzbuzz/FizzBuzzTest.java?ref=0ad244bac38231ab7c79bc0f39e26b80abcc3df9",
    "patch": "@@ -1,5 +1,6 @@\n package code._2_challenge._1_fizzbuzz;\n \n+import code._4_student_effort.Challenge1.fizzbuzz;\n import org.junit.Assert;\n \n import java.util.Map;\n@@ -40,31 +41,31 @@\n \n   public static Map<Integer, String> stage2 = Map.ofEntries(\n           entry(7, \"Rizz\"),\n-          entry(9, \"FizzJazz\"),\n+          entry(9, \"Fizz\"),\n           entry(14, \"Rizz\"),\n-          entry(18, \"FizzJazz\"),\n+          entry(18, \"Fizz\"),\n           entry(21, \"FizzRizz\"),\n-          entry(27, \"FizzJazz\"),\n+          entry(44, \"Jazz\"),\n           entry(28, \"Rizz\")\n   );\n \n   @org.junit.Test\n   public void stage1() {\n-    FizzBuzz FizzBuzz = new FizzBuzz();\n+    fizzbuzz FizzBuzz = new fizzbuzz();\n     for (Map.Entry<Integer, String> entry : stage1.entrySet()) {\n       Integer input = entry.getKey();\n-      String actual = FizzBuzz.fizzBuzz(entry.getKey());\n+      String actual = FizzBuzz.fizzbuzz1(entry.getKey());\n       String expected = entry.getValue();\n       Assert.assertEquals(\"for input: \" + input, expected, actual);\n     }\n   }\n \n   @org.junit.Test\n   public void stage2() {\n-    FizzBuzz FizzBuzz = new FizzBuzz();\n+    fizzbuzz FizzBuzz = new fizzbuzz();\n     for (Map.Entry<Integer, String> entry : stage2.entrySet()) {\n       Integer input = entry.getKey();\n-      String actual = FizzBuzz.fizzBuzz2(entry.getKey());\n+      String actual = FizzBuzz.fizzbuzz2(entry.getKey());\n       String expected = entry.getValue();\n       Assert.assertEquals(\"for input: \" + input, expected, actual);\n     }"
  },
  {
    "sha": "c5771319bfbb6b2b2097b084fedb9b3d6a832247",
    "filename": "_1_basics/src/test/java/code/_2_challenge/_2_foobarqix/FooBarQixTest.java",
    "status": "modified",
    "additions": 3,
    "deletions": 2,
    "changes": 5,
    "blob_url": "https://github.com/titusmoldovan/java-training/blob/0ad244bac38231ab7c79bc0f39e26b80abcc3df9/_1_basics/src/test/java/code/_2_challenge/_2_foobarqix/FooBarQixTest.java",
    "raw_url": "https://github.com/titusmoldovan/java-training/raw/0ad244bac38231ab7c79bc0f39e26b80abcc3df9/_1_basics/src/test/java/code/_2_challenge/_2_foobarqix/FooBarQixTest.java",
    "contents_url": "https://api.github.com/repos/titusmoldovan/java-training/contents/_1_basics/src/test/java/code/_2_challenge/_2_foobarqix/FooBarQixTest.java?ref=0ad244bac38231ab7c79bc0f39e26b80abcc3df9",
    "patch": "@@ -1,5 +1,6 @@\n package code._2_challenge._2_foobarqix;\n \n+import code._4_student_effort.Challenge2.FooBarQix;\n import org.junit.Assert;\n \n import java.util.Map;\n@@ -35,7 +36,7 @@\n \n   @org.junit.Test\n   public void stage1() {\n-    FooBarQix FooBarQix = new FooBarQix();\n+    code._4_student_effort.Challenge2.FooBarQix FooBarQix = new code._4_student_effort.Challenge2.FooBarQix();\n     for (Map.Entry<Integer, String> entry : stage1.entrySet()) {\n       Integer input = entry.getKey();\n       String actual = FooBarQix.compute(entry.getKey());\n@@ -46,7 +47,7 @@ public void stage1() {\n \n   @org.junit.Test\n   public void stage2() {\n-    FooBarQix FooBarQix = new FooBarQix();\n+    code._4_student_effort.Challenge2.FooBarQix FooBarQix = new FooBarQix();\n     for (Map.Entry<Integer, String> entry : stage2.entrySet()) {\n       Integer input = entry.getKey();\n       String actual = FooBarQix.compute2(entry.getKey());"
  },
  {
    "sha": "1efe555e723918f95df7da9241a99bd16fc2510c",
    "filename": "_1_basics/src/test/java/code/_2_challenge/_3_pair_of_2/PairOf2Test.java",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/titusmoldovan/java-training/blob/0ad244bac38231ab7c79bc0f39e26b80abcc3df9/_1_basics/src/test/java/code/_2_challenge/_3_pair_of_2/PairOf2Test.java",
    "raw_url": "https://github.com/titusmoldovan/java-training/raw/0ad244bac38231ab7c79bc0f39e26b80abcc3df9/_1_basics/src/test/java/code/_2_challenge/_3_pair_of_2/PairOf2Test.java",
    "contents_url": "https://api.github.com/repos/titusmoldovan/java-training/contents/_1_basics/src/test/java/code/_2_challenge/_3_pair_of_2/PairOf2Test.java?ref=0ad244bac38231ab7c79bc0f39e26b80abcc3df9",
    "patch": "@@ -1,5 +1,6 @@\n package code._2_challenge._3_pair_of_2;\n \n+import code._4_student_effort.Challenge3.pairof2;\n import org.junit.Assert;\n \n import java.util.Arrays;\n@@ -16,7 +17,7 @@\n \n   @org.junit.Test\n   public void test() {\n-    PairOf2 PairOf2 = new PairOf2();\n+    code._4_student_effort.Challenge3.pairof2 PairOf2 = new pairof2();\n     for (Map.Entry<Integer[], Integer> entry : data.entrySet()) {\n       Integer[] input = entry.getKey();\n       Integer expected = entry.getValue();"
  },
  {
    "sha": "d128f8700d01b0064f60c74ec2c6d19cd20f7467",
    "filename": "_1_basics/src/test/java/code/_2_challenge/_4_pair_of_3/PairOf3Test.java",
    "status": "modified",
    "additions": 7,
    "deletions": 3,
    "changes": 10,
    "blob_url": "https://github.com/titusmoldovan/java-training/blob/0ad244bac38231ab7c79bc0f39e26b80abcc3df9/_1_basics/src/test/java/code/_2_challenge/_4_pair_of_3/PairOf3Test.java",
    "raw_url": "https://github.com/titusmoldovan/java-training/raw/0ad244bac38231ab7c79bc0f39e26b80abcc3df9/_1_basics/src/test/java/code/_2_challenge/_4_pair_of_3/PairOf3Test.java",
    "contents_url": "https://api.github.com/repos/titusmoldovan/java-training/contents/_1_basics/src/test/java/code/_2_challenge/_4_pair_of_3/PairOf3Test.java?ref=0ad244bac38231ab7c79bc0f39e26b80abcc3df9",
    "patch": "@@ -1,5 +1,6 @@\n package code._2_challenge._4_pair_of_3;\n \n+import code._4_student_effort.Challenge4.pairof3;\n import org.junit.Assert;\n \n import java.util.Arrays;\n@@ -9,16 +10,19 @@\n \n public class PairOf3Test {\n   public static Map<Integer[], Integer> data = Map.ofEntries(\n-          entry(new Integer[]{-1, -1, -1, 2}, 1)\n+          entry(new Integer[]{-1, -1, -1, 2}, 1),\n+          entry(new Integer[]{-1, -2, -1, 3, 4, -7, 3}, 2),\n+          entry(new Integer[]{-1, -1, 3}, 0),\n+          entry(new Integer[]{-5, -2, 2, 7}, 1)\n   );\n \n   @org.junit.Test\n   public void test() {\n-    PairOf3 PairOf3 = new PairOf3();\n+    code._4_student_effort.Challenge4.pairof3 PairOf3 = new pairof3();\n     for (Map.Entry<Integer[], Integer> entry : data.entrySet()) {\n       Integer[] input = entry.getKey();\n       Integer expected = entry.getValue();\n-      Integer actual = PairOf3.countPairs(input, 0);\n+      Integer actual = PairOf3.countPairs(input);\n       Assert.assertEquals(\"for input: \" + Arrays.asList(input), expected, actual);\n     }\n   }"
  },
  {
    "sha": "f34c1ffebe0bc1a275a5577071ffb439c20c7bc8",
    "filename": "_3_design_patterns/src/main/java/code/_4_student_effort/Challenge1/ArrayCustomIterator.java",
    "status": "added",
    "additions": 30,
    "deletions": 0,
    "changes": 30,
    "blob_url": "https://github.com/titusmoldovan/java-training/blob/0ad244bac38231ab7c79bc0f39e26b80abcc3df9/_3_design_patterns/src/main/java/code/_4_student_effort/Challenge1/ArrayCustomIterator.java",
    "raw_url": "https://github.com/titusmoldovan/java-training/raw/0ad244bac38231ab7c79bc0f39e26b80abcc3df9/_3_design_patterns/src/main/java/code/_4_student_effort/Challenge1/ArrayCustomIterator.java",
    "contents_url": "https://api.github.com/repos/titusmoldovan/java-training/contents/_3_design_patterns/src/main/java/code/_4_student_effort/Challenge1/ArrayCustomIterator.java?ref=0ad244bac38231ab7c79bc0f39e26b80abcc3df9",
    "patch": "@@ -0,0 +1,30 @@\n+package code._4_student_effort.Challenge1;\n+\n+public class ArrayCustomIterator {\n+    int[] arr;\n+    int i = 0;\n+\n+    private void ArrayCustomIterator(int[] arr) {\n+        this.arr = arr;\n+    }\n+\n+    boolean hasNext() {\n+        if (i < arr.length)\n+            return true;\n+        else\n+            return false;\n+    }\n+\n+    int next() {\n+        return arr[i];\n+    }\n+\n+\n+    public static void main (String[]args){\n+        int[] arr = new int[]{1, 2, 3};\n+        code._2_challenge._1_iterator.ArrayCustomIterator it = new code._2_challenge._1_iterator.ArrayCustomIterator(arr);\n+        while (it.hasNext()) {\n+            System.out.println(it.next());\n+        }\n+    }\n+}"
  },
  {
    "sha": "5b77e21996471632882eccb9c933e9267647a657",
    "filename": "_3_design_patterns/src/main/java/code/_4_student_effort/Challenge2/BubbleSort.java",
    "status": "added",
    "additions": 17,
    "deletions": 0,
    "changes": 17,
    "blob_url": "https://github.com/titusmoldovan/java-training/blob/0ad244bac38231ab7c79bc0f39e26b80abcc3df9/_3_design_patterns/src/main/java/code/_4_student_effort/Challenge2/BubbleSort.java",
    "raw_url": "https://github.com/titusmoldovan/java-training/raw/0ad244bac38231ab7c79bc0f39e26b80abcc3df9/_3_design_patterns/src/main/java/code/_4_student_effort/Challenge2/BubbleSort.java",
    "contents_url": "https://api.github.com/repos/titusmoldovan/java-training/contents/_3_design_patterns/src/main/java/code/_4_student_effort/Challenge2/BubbleSort.java?ref=0ad244bac38231ab7c79bc0f39e26b80abcc3df9",
    "patch": "@@ -0,0 +1,17 @@\n+package code._4_student_effort.Challenge2;\n+\n+public class BubbleSort implements SortingStrategy {\n+\n+    public void sort(Integer[] arr) {\n+        int i, j;\n+        for(i = 0; i < arr.length - 1; i++) {\n+            for(j = i + 1; j < arr.length ; j++) {\n+                if(arr[i] > arr[j]) {\n+                    int aux = arr[i];\n+                    arr[i] = arr[j];\n+                    arr[j] = aux;\n+                }\n+            }\n+        }\n+    }\n+}"
  },
  {
    "sha": "a56fd46ecbf9a1636f7363da52d8254baeee0529",
    "filename": "_3_design_patterns/src/main/java/code/_4_student_effort/Challenge2/MergeSort.java",
    "status": "added",
    "additions": 36,
    "deletions": 0,
    "changes": 36,
    "blob_url": "https://github.com/titusmoldovan/java-training/blob/0ad244bac38231ab7c79bc0f39e26b80abcc3df9/_3_design_patterns/src/main/java/code/_4_student_effort/Challenge2/MergeSort.java",
    "raw_url": "https://github.com/titusmoldovan/java-training/raw/0ad244bac38231ab7c79bc0f39e26b80abcc3df9/_3_design_patterns/src/main/java/code/_4_student_effort/Challenge2/MergeSort.java",
    "contents_url": "https://api.github.com/repos/titusmoldovan/java-training/contents/_3_design_patterns/src/main/java/code/_4_student_effort/Challenge2/MergeSort.java?ref=0ad244bac38231ab7c79bc0f39e26b80abcc3df9",
    "patch": "@@ -0,0 +1,36 @@\n+package code._4_student_effort.Challenge2;\n+\n+import java.util.Arrays;\n+\n+public class MergeSort implements SortingStrategy{\n+    public void sort(Integer[] arr) {\n+        if(arr.length < 2)\n+            return;\n+\n+        int mid = arr.length/2;\n+        Integer[] arrLeft = Arrays.copyOfRange(arr, 0, mid);\n+        Integer[] arrRight = Arrays.copyOfRange(arr, mid, arr.length);\n+\n+        sort(arrLeft);\n+        sort(arrRight);\n+        merge(arrLeft, arrRight, arr);\n+    }\n+\n+    public void merge(Integer[] arrLeft, Integer[] arrRight, Integer[] arr) {\n+        int i = 0, j = 0, k = 0;\n+        while (i < arrLeft.length && j < arrRight.length) {\n+            if (arrLeft[i] <= arrRight[j]) {\n+                arr[k++] = arrLeft[i++];\n+            }\n+            else {\n+                arr[k++] = arrRight[j++];\n+            }\n+        }\n+        while (i < arrLeft.length) {\n+            arr[k++] = arrLeft[i++];\n+        }\n+        while (j < arrRight.length) {\n+            arr[k++] = arrRight[j++];\n+        }\n+    }\n+}"
  },
  {
    "sha": "70cee4453790840bf82798c752ef320003078583",
    "filename": "_3_design_patterns/src/main/java/code/_4_student_effort/Challenge2/SortingStrategy.java",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/titusmoldovan/java-training/blob/0ad244bac38231ab7c79bc0f39e26b80abcc3df9/_3_design_patterns/src/main/java/code/_4_student_effort/Challenge2/SortingStrategy.java",
    "raw_url": "https://github.com/titusmoldovan/java-training/raw/0ad244bac38231ab7c79bc0f39e26b80abcc3df9/_3_design_patterns/src/main/java/code/_4_student_effort/Challenge2/SortingStrategy.java",
    "contents_url": "https://api.github.com/repos/titusmoldovan/java-training/contents/_3_design_patterns/src/main/java/code/_4_student_effort/Challenge2/SortingStrategy.java?ref=0ad244bac38231ab7c79bc0f39e26b80abcc3df9",
    "patch": "@@ -0,0 +1,5 @@\n+package code._4_student_effort.Challenge2;\n+\n+public interface SortingStrategy {\n+    void sort(Integer[] list);\n+}"
  },
  {
    "sha": "210e2aac64e1e77eeb40feb7719a716b232fab24",
    "filename": "_3_design_patterns/src/main/java/code/_4_student_effort/Challenge2/Test.java",
    "status": "added",
    "additions": 27,
    "deletions": 0,
    "changes": 27,
    "blob_url": "https://github.com/titusmoldovan/java-training/blob/0ad244bac38231ab7c79bc0f39e26b80abcc3df9/_3_design_patterns/src/main/java/code/_4_student_effort/Challenge2/Test.java",
    "raw_url": "https://github.com/titusmoldovan/java-training/raw/0ad244bac38231ab7c79bc0f39e26b80abcc3df9/_3_design_patterns/src/main/java/code/_4_student_effort/Challenge2/Test.java",
    "contents_url": "https://api.github.com/repos/titusmoldovan/java-training/contents/_3_design_patterns/src/main/java/code/_4_student_effort/Challenge2/Test.java?ref=0ad244bac38231ab7c79bc0f39e26b80abcc3df9",
    "patch": "@@ -0,0 +1,27 @@\n+package code._4_student_effort.Challenge2;\n+\n+import code._4_student_effort.Challenge2.SortingStrategy;\n+import code._4_student_effort.Challenge2.BubbleSort;\n+import code._4_student_effort.Challenge2.MergeSort;\n+\n+import java.util.Arrays;\n+\n+public class Test {\n+    public static void main(String[] args) {\n+        Integer[] arr = new Integer[]{1, 4, 5, 2, 3, 6, 9, 8, 7};\n+        Integer[] copy01OfArr = Arrays.copyOf(arr, arr.length);\n+        Integer[] copy02OfArr = Arrays.copyOf(arr, arr.length);\n+\n+        displaySorted(new BubbleSort(), copy01OfArr);\n+        displaySorted(new MergeSort(), copy02OfArr);\n+    }\n+\n+    public static void displaySorted(SortingStrategy strategy, Integer[] arr) {\n+        strategy.sort(arr);\n+\n+        for (int i = 0; i < arr.length; i++) {\n+            System.out.print(arr[i] + \" \");\n+        }\n+        System.out.println();\n+    }\n+}"
  },
  {
    "sha": "ff39bd0efb0893dec0fb068ae5a78a0cd2fc9594",
    "filename": "_3_design_patterns/src/main/java/code/_4_student_effort/Challenge3/Apartment.java",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/titusmoldovan/java-training/blob/0ad244bac38231ab7c79bc0f39e26b80abcc3df9/_3_design_patterns/src/main/java/code/_4_student_effort/Challenge3/Apartment.java",
    "raw_url": "https://github.com/titusmoldovan/java-training/raw/0ad244bac38231ab7c79bc0f39e26b80abcc3df9/_3_design_patterns/src/main/java/code/_4_student_effort/Challenge3/Apartment.java",
    "contents_url": "https://api.github.com/repos/titusmoldovan/java-training/contents/_3_design_patterns/src/main/java/code/_4_student_effort/Challenge3/Apartment.java?ref=0ad244bac38231ab7c79bc0f39e26b80abcc3df9",
    "patch": "@@ -0,0 +1,16 @@\n+package code._4_student_effort.Challenge3;\n+\n+public class Apartment {\n+    String location;\n+    int monthlyRentCost;\n+\n+    public Apartment(String location, int monthlyRentCost) {\n+        this.location = location;\n+        this.monthlyRentCost = monthlyRentCost;\n+    }\n+\n+    public String toString() {\n+        return(\"Apartment{location=\" + location +\n+                \", monthlyRentCost = \" + monthlyRentCost + \"}\");\n+    }\n+}"
  },
  {
    "sha": "97fe2c329270a849a5511d5dd659ac7d7ac19ef3",
    "filename": "_3_design_patterns/src/main/java/code/_4_student_effort/Challenge3/RealEstateAgentProxy.java",
    "status": "added",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/titusmoldovan/java-training/blob/0ad244bac38231ab7c79bc0f39e26b80abcc3df9/_3_design_patterns/src/main/java/code/_4_student_effort/Challenge3/RealEstateAgentProxy.java",
    "raw_url": "https://github.com/titusmoldovan/java-training/raw/0ad244bac38231ab7c79bc0f39e26b80abcc3df9/_3_design_patterns/src/main/java/code/_4_student_effort/Challenge3/RealEstateAgentProxy.java",
    "contents_url": "https://api.github.com/repos/titusmoldovan/java-training/contents/_3_design_patterns/src/main/java/code/_4_student_effort/Challenge3/RealEstateAgentProxy.java?ref=0ad244bac38231ab7c79bc0f39e26b80abcc3df9",
    "patch": "@@ -0,0 +1,15 @@\n+package code._4_student_effort.Challenge3;\n+\n+public class RealEstateAgentProxy {\n+    Apartment ap;\n+    public void represent(Apartment apartment) {\n+        ap = apartment;\n+    }\n+\n+    public Apartment rent (Student student){\n+        if (student.name.charAt(0) == 'P') {\n+            return null;\n+        }\n+        return ap;\n+    }\n+}"
  },
  {
    "sha": "2fd8371e6da2216d56d616f6a37e9028565292ee",
    "filename": "_3_design_patterns/src/main/java/code/_4_student_effort/Challenge3/Student.java",
    "status": "added",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/titusmoldovan/java-training/blob/0ad244bac38231ab7c79bc0f39e26b80abcc3df9/_3_design_patterns/src/main/java/code/_4_student_effort/Challenge3/Student.java",
    "raw_url": "https://github.com/titusmoldovan/java-training/raw/0ad244bac38231ab7c79bc0f39e26b80abcc3df9/_3_design_patterns/src/main/java/code/_4_student_effort/Challenge3/Student.java",
    "contents_url": "https://api.github.com/repos/titusmoldovan/java-training/contents/_3_design_patterns/src/main/java/code/_4_student_effort/Challenge3/Student.java?ref=0ad244bac38231ab7c79bc0f39e26b80abcc3df9",
    "patch": "@@ -0,0 +1,15 @@\n+package code._4_student_effort.Challenge3;\n+\n+public class Student {\n+    int money;\n+    String name;\n+    public Student(String name, int money) {\n+        this.name = name;\n+        this.money = money;\n+    }\n+\n+    public String toString() {\n+        return(\"Student{name=\" + name +\n+                \", money = \" + money + \"}\");\n+    }\n+}"
  },
  {
    "sha": "fc821164fe33451866c8adc252bf789b3c1e6e30",
    "filename": "_3_design_patterns/src/main/java/code/_4_student_effort/Challenge3/Test.java",
    "status": "added",
    "additions": 31,
    "deletions": 0,
    "changes": 31,
    "blob_url": "https://github.com/titusmoldovan/java-training/blob/0ad244bac38231ab7c79bc0f39e26b80abcc3df9/_3_design_patterns/src/main/java/code/_4_student_effort/Challenge3/Test.java",
    "raw_url": "https://github.com/titusmoldovan/java-training/raw/0ad244bac38231ab7c79bc0f39e26b80abcc3df9/_3_design_patterns/src/main/java/code/_4_student_effort/Challenge3/Test.java",
    "contents_url": "https://api.github.com/repos/titusmoldovan/java-training/contents/_3_design_patterns/src/main/java/code/_4_student_effort/Challenge3/Test.java?ref=0ad244bac38231ab7c79bc0f39e26b80abcc3df9",
    "patch": "@@ -0,0 +1,31 @@\n+package code._4_student_effort.Challenge3;\n+\n+import code._4_student_effort.Challenge3.Apartment;\n+import code._4_student_effort.Challenge3.Student;\n+import code._4_student_effort.Challenge3.RealEstateAgentProxy;\n+\n+public class Test {\n+    public static void main(String[] args) {\n+        Apartment app01 = new Apartment(\"Crangasi01\", 300);\n+        Apartment app02 = new Apartment(\"Crangasi01\", 600);\n+        Apartment app03 = new Apartment(\"Crangasi01\", 350);\n+        Apartment app04 = new Apartment(\"Crangasi01\", 400);\n+        Apartment app05 = new Apartment(\"Crangasi01\", 200);\n+\n+        RealEstateAgentProxy proxy = new RealEstateAgentProxy();\n+        proxy.represent(app01);\n+        proxy.represent(app02);\n+        proxy.represent(app03);\n+        proxy.represent(app04);\n+        proxy.represent(app05);\n+\n+       Student student01 = new Student(\"Ionescu\", 500);\n+       Student student02 = new Student(\"Popescu\", 330);\n+\n+        Apartment apartmentForStudent01 = proxy.rent(student01);\n+        System.out.println(student01 + \" rented \" + apartmentForStudent01);\n+        Apartment apartmentForStudent02 = proxy.rent(student02);\n+        System.out.println(student02 + \" rented \" + apartmentForStudent02);\n+\n+    }\n+}"
  },
  {
    "sha": "4b29714dfff6d5bb4673c563c52f8cbaed30957d",
    "filename": "_3_design_patterns/src/main/java/code/_4_student_effort/Challenge4/ObservedSubject.java",
    "status": "added",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/titusmoldovan/java-training/blob/0ad244bac38231ab7c79bc0f39e26b80abcc3df9/_3_design_patterns/src/main/java/code/_4_student_effort/Challenge4/ObservedSubject.java",
    "raw_url": "https://github.com/titusmoldovan/java-training/raw/0ad244bac38231ab7c79bc0f39e26b80abcc3df9/_3_design_patterns/src/main/java/code/_4_student_effort/Challenge4/ObservedSubject.java",
    "contents_url": "https://api.github.com/repos/titusmoldovan/java-training/contents/_3_design_patterns/src/main/java/code/_4_student_effort/Challenge4/ObservedSubject.java?ref=0ad244bac38231ab7c79bc0f39e26b80abcc3df9",
    "patch": "@@ -0,0 +1,10 @@\n+package code._4_student_effort.Challenge4;\n+\n+import code._4_student_effort.Challenge4.Observer;\n+\n+public interface ObservedSubject {\n+\n+    void register(Observer obj);\n+    void unregister(Observer obj);\n+    void notifyObservers(String message);\n+}"
  },
  {
    "sha": "6f1a3f9ae6305f2fad7d5ef5f93ed9664e237d86",
    "filename": "_3_design_patterns/src/main/java/code/_4_student_effort/Challenge4/Observer.java",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/titusmoldovan/java-training/blob/0ad244bac38231ab7c79bc0f39e26b80abcc3df9/_3_design_patterns/src/main/java/code/_4_student_effort/Challenge4/Observer.java",
    "raw_url": "https://github.com/titusmoldovan/java-training/raw/0ad244bac38231ab7c79bc0f39e26b80abcc3df9/_3_design_patterns/src/main/java/code/_4_student_effort/Challenge4/Observer.java",
    "contents_url": "https://api.github.com/repos/titusmoldovan/java-training/contents/_3_design_patterns/src/main/java/code/_4_student_effort/Challenge4/Observer.java?ref=0ad244bac38231ab7c79bc0f39e26b80abcc3df9",
    "patch": "@@ -0,0 +1,5 @@\n+package code._4_student_effort.Challenge4;\n+\n+public interface Observer {\n+    void update(String message);\n+}"
  },
  {
    "sha": "dd99871049568f95428c60fb7f89764c306e84c1",
    "filename": "_3_design_patterns/src/main/java/code/_4_student_effort/Challenge4/Student.java",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/titusmoldovan/java-training/blob/0ad244bac38231ab7c79bc0f39e26b80abcc3df9/_3_design_patterns/src/main/java/code/_4_student_effort/Challenge4/Student.java",
    "raw_url": "https://github.com/titusmoldovan/java-training/raw/0ad244bac38231ab7c79bc0f39e26b80abcc3df9/_3_design_patterns/src/main/java/code/_4_student_effort/Challenge4/Student.java",
    "contents_url": "https://api.github.com/repos/titusmoldovan/java-training/contents/_3_design_patterns/src/main/java/code/_4_student_effort/Challenge4/Student.java?ref=0ad244bac38231ab7c79bc0f39e26b80abcc3df9",
    "patch": "@@ -0,0 +1,19 @@\n+package code._4_student_effort.Challenge4;\n+\n+public class Student implements Observer{\n+    String name;\n+    Teacher teacher;\n+\n+    public Student(String name) {\n+        this.name = name;\n+    }\n+\n+    public void listenTo(Teacher teacher) {\n+        teacher.register(this);\n+    }\n+\n+    public void update(String message) {\n+        System.out.println(\"Student \" + name + \" has learned \" + message);\n+    }\n+\n+}"
  },
  {
    "sha": "87be118ad83ee2e6679d3db053bc1f8c841ca913",
    "filename": "_3_design_patterns/src/main/java/code/_4_student_effort/Challenge4/Teacher.java",
    "status": "added",
    "additions": 33,
    "deletions": 0,
    "changes": 33,
    "blob_url": "https://github.com/titusmoldovan/java-training/blob/0ad244bac38231ab7c79bc0f39e26b80abcc3df9/_3_design_patterns/src/main/java/code/_4_student_effort/Challenge4/Teacher.java",
    "raw_url": "https://github.com/titusmoldovan/java-training/raw/0ad244bac38231ab7c79bc0f39e26b80abcc3df9/_3_design_patterns/src/main/java/code/_4_student_effort/Challenge4/Teacher.java",
    "contents_url": "https://api.github.com/repos/titusmoldovan/java-training/contents/_3_design_patterns/src/main/java/code/_4_student_effort/Challenge4/Teacher.java?ref=0ad244bac38231ab7c79bc0f39e26b80abcc3df9",
    "patch": "@@ -0,0 +1,33 @@\n+package code._4_student_effort.Challenge4;\n+\n+import java.util.Arrays;\n+\n+public class Teacher implements ObservedSubject{\n+    String subject;\n+    Observer[] observers = new Observer[0];\n+    public void teach(String subject) {\n+        for(int i = 0; i < observers.length; i++) {\n+            observers[i].update(subject);\n+        }\n+    }\n+\n+\n+    public void register(Observer obj) {\n+        observers = Arrays.copyOf(observers, observers.length + 1);\n+        observers[observers.length - 1] = obj;\n+    }\n+\n+    public void unregister(Observer obj) {\n+        int unreg_i = -1;\n+        for(int i = 0; i < observers.length; i++)\n+            if(observers[i].equals(obj)) {\n+                unreg_i = i;\n+                break;\n+            }\n+        System.arraycopy(observers, unreg_i + 1, observers, unreg_i, observers.length - 1 - unreg_i);\n+    }\n+\n+    public void notifyObservers(String message) {\n+        System.out.println(message);\n+    }\n+}"
  },
  {
    "sha": "de4ba695e93ce62346f3e3106cd6cf7b07359b34",
    "filename": "_3_design_patterns/src/main/java/code/_4_student_effort/Challenge4/Test.java",
    "status": "added",
    "additions": 26,
    "deletions": 0,
    "changes": 26,
    "blob_url": "https://github.com/titusmoldovan/java-training/blob/0ad244bac38231ab7c79bc0f39e26b80abcc3df9/_3_design_patterns/src/main/java/code/_4_student_effort/Challenge4/Test.java",
    "raw_url": "https://github.com/titusmoldovan/java-training/raw/0ad244bac38231ab7c79bc0f39e26b80abcc3df9/_3_design_patterns/src/main/java/code/_4_student_effort/Challenge4/Test.java",
    "contents_url": "https://api.github.com/repos/titusmoldovan/java-training/contents/_3_design_patterns/src/main/java/code/_4_student_effort/Challenge4/Test.java?ref=0ad244bac38231ab7c79bc0f39e26b80abcc3df9",
    "patch": "@@ -0,0 +1,26 @@\n+package code._4_student_effort.Challenge4;\n+\n+import code._4_student_effort.Challenge4.Teacher;\n+import code._4_student_effort.Challenge4.Student;\n+\n+public class Test {\n+    public static void main(String[] args) {\n+        Teacher teacher = new Teacher();\n+        Student s01 = new Student(\"Popescu\");\n+        Student s02 = new Student(\"Ionescu\");\n+        Student s03 = new Student(\"Dragomirescu\");\n+\n+        s01.listenTo(teacher);\n+        s02.listenTo(teacher);\n+        s03.listenTo(teacher);\n+\n+        String[] javaTopics = new String[]{\n+                \"basics\",\n+                \"oo\",\n+                \"design patterns\"\n+        };\n+        for (int i = 0; i < javaTopics.length; i++) {\n+            teacher.teach(javaTopics[i]);\n+        }\n+    }\n+}"
  },
  {
    "sha": "0be73abc8b6e27094abd839109930a5b144c23bf",
    "filename": "_3_design_patterns/src/main/java/code/_4_student_effort/Challenge5/AscBubble.java",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/titusmoldovan/java-training/blob/0ad244bac38231ab7c79bc0f39e26b80abcc3df9/_3_design_patterns/src/main/java/code/_4_student_effort/Challenge5/AscBubble.java",
    "raw_url": "https://github.com/titusmoldovan/java-training/raw/0ad244bac38231ab7c79bc0f39e26b80abcc3df9/_3_design_patterns/src/main/java/code/_4_student_effort/Challenge5/AscBubble.java",
    "contents_url": "https://api.github.com/repos/titusmoldovan/java-training/contents/_3_design_patterns/src/main/java/code/_4_student_effort/Challenge5/AscBubble.java?ref=0ad244bac38231ab7c79bc0f39e26b80abcc3df9",
    "patch": "@@ -0,0 +1,5 @@\n+package code._4_student_effort.Challenge5;\n+\n+public class AscBubble extends TemplateMethodBubbleSort {\n+    public boolean numbersInCorrectOrder(Integer i1, Integer i2) {return i1 > i2;}\n+}"
  },
  {
    "sha": "41aa166ef6cfca58791665bb3473725f7ef3341f",
    "filename": "_3_design_patterns/src/main/java/code/_4_student_effort/Challenge5/DescBubble.java",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/titusmoldovan/java-training/blob/0ad244bac38231ab7c79bc0f39e26b80abcc3df9/_3_design_patterns/src/main/java/code/_4_student_effort/Challenge5/DescBubble.java",
    "raw_url": "https://github.com/titusmoldovan/java-training/raw/0ad244bac38231ab7c79bc0f39e26b80abcc3df9/_3_design_patterns/src/main/java/code/_4_student_effort/Challenge5/DescBubble.java",
    "contents_url": "https://api.github.com/repos/titusmoldovan/java-training/contents/_3_design_patterns/src/main/java/code/_4_student_effort/Challenge5/DescBubble.java?ref=0ad244bac38231ab7c79bc0f39e26b80abcc3df9",
    "patch": "@@ -0,0 +1,5 @@\n+package code._4_student_effort.Challenge5;\n+\n+public class DescBubble extends  TemplateMethodBubbleSort{\n+    public boolean numbersInCorrectOrder(Integer i1, Integer i2) {return i1 < i2;};\n+}"
  },
  {
    "sha": "df7fa56cc7734e8563b263628851070fa0702c9d",
    "filename": "_3_design_patterns/src/main/java/code/_4_student_effort/Challenge5/TemplateMethodBubbleSort.java",
    "status": "added",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/titusmoldovan/java-training/blob/0ad244bac38231ab7c79bc0f39e26b80abcc3df9/_3_design_patterns/src/main/java/code/_4_student_effort/Challenge5/TemplateMethodBubbleSort.java",
    "raw_url": "https://github.com/titusmoldovan/java-training/raw/0ad244bac38231ab7c79bc0f39e26b80abcc3df9/_3_design_patterns/src/main/java/code/_4_student_effort/Challenge5/TemplateMethodBubbleSort.java",
    "contents_url": "https://api.github.com/repos/titusmoldovan/java-training/contents/_3_design_patterns/src/main/java/code/_4_student_effort/Challenge5/TemplateMethodBubbleSort.java?ref=0ad244bac38231ab7c79bc0f39e26b80abcc3df9",
    "patch": "@@ -0,0 +1,18 @@\n+package code._4_student_effort.Challenge5;\n+\n+public abstract class TemplateMethodBubbleSort {\n+    void sort(Integer[] list) {\n+        for (int i = 0; i < list.length - 1; i++) {\n+            for (int j = i + 1; j < list.length; j++) {\n+                if (numbersInCorrectOrder(list[i], list[j])) {\n+                    Integer aux = list[i];\n+                    list[i] = list[j];\n+                    list[j] = aux;\n+                }\n+            }\n+        }\n+    }\n+\n+    abstract boolean numbersInCorrectOrder(Integer i1, Integer i2);\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "cde7f94e25e6285e8ca9950f7a58f198722e3051",
    "filename": "_3_design_patterns/src/main/java/code/_4_student_effort/Challenge5/Test.java",
    "status": "added",
    "additions": 29,
    "deletions": 0,
    "changes": 29,
    "blob_url": "https://github.com/titusmoldovan/java-training/blob/0ad244bac38231ab7c79bc0f39e26b80abcc3df9/_3_design_patterns/src/main/java/code/_4_student_effort/Challenge5/Test.java",
    "raw_url": "https://github.com/titusmoldovan/java-training/raw/0ad244bac38231ab7c79bc0f39e26b80abcc3df9/_3_design_patterns/src/main/java/code/_4_student_effort/Challenge5/Test.java",
    "contents_url": "https://api.github.com/repos/titusmoldovan/java-training/contents/_3_design_patterns/src/main/java/code/_4_student_effort/Challenge5/Test.java?ref=0ad244bac38231ab7c79bc0f39e26b80abcc3df9",
    "patch": "@@ -0,0 +1,29 @@\n+package code._4_student_effort.Challenge5;\n+\n+import code._4_student_effort.Challenge5.AscBubble;\n+import code._4_student_effort.Challenge5.DescBubble;\n+\n+import java.util.Arrays;\n+\n+public class Test {\n+    public static void main(String[] args) {\n+        Integer[] arr = new Integer[]{1, 4, 5, 2, 3, 6, 9, 8, 7};\n+        Integer[] copy01OfArr = Arrays.copyOf(arr, arr.length);\n+        Integer[] copy02OfArr = Arrays.copyOf(arr, arr.length);\n+\n+        AscBubble asc = new AscBubble();\n+        asc.sort(copy01OfArr);\n+        DescBubble desc = new DescBubble();\n+        desc.sort(copy02OfArr);\n+\n+        displaySorted(copy01OfArr);\n+        displaySorted(copy02OfArr);\n+    }\n+\n+    public static void displaySorted(Integer[] arr) {\n+        for (int i = 0; i < arr.length; i++) {\n+            System.out.print(arr[i] + \" \");\n+        }\n+        System.out.println();\n+    }\n+}"
  },
  {
    "sha": "c61b14d4e0d17a92d709ae29094210ec0c9d3860",
    "filename": "_3_design_patterns/src/main/java/code/_4_student_effort/Challenge6/Person.java",
    "status": "added",
    "additions": 59,
    "deletions": 0,
    "changes": 59,
    "blob_url": "https://github.com/titusmoldovan/java-training/blob/0ad244bac38231ab7c79bc0f39e26b80abcc3df9/_3_design_patterns/src/main/java/code/_4_student_effort/Challenge6/Person.java",
    "raw_url": "https://github.com/titusmoldovan/java-training/raw/0ad244bac38231ab7c79bc0f39e26b80abcc3df9/_3_design_patterns/src/main/java/code/_4_student_effort/Challenge6/Person.java",
    "contents_url": "https://api.github.com/repos/titusmoldovan/java-training/contents/_3_design_patterns/src/main/java/code/_4_student_effort/Challenge6/Person.java?ref=0ad244bac38231ab7c79bc0f39e26b80abcc3df9",
    "patch": "@@ -0,0 +1,59 @@\n+package code._4_student_effort.Challenge6;\n+\n+public class Person {\n+    public String name;\n+    public String job;\n+    public String university;\n+    public String drivingLicense;\n+    public boolean isMarried;\n+\n+\n+    public Person(Builder builder) {\n+        this.name = builder.name;\n+        this.job = builder.job;\n+        this.university = builder.university;\n+        this.drivingLicense = builder.drivingLicense;\n+        this.isMarried = builder.isMarried;\n+    }\n+\n+    public static class Builder {\n+        private String name;\n+        private String job;\n+        private String university;\n+        private String drivingLicense;\n+        private boolean isMarried;\n+\n+        public Builder(String name) {\n+            this.name = name;\n+        }\n+\n+        public Builder job(String job) {\n+            this.job = job;\n+            return this;\n+        }\n+\n+        public Builder university(String university) {\n+            this.university = university;\n+            return this;\n+        }\n+\n+        public Builder drivingLicense(String drivingLicense) {\n+            this.drivingLicense = drivingLicense;\n+            return this;\n+        }\n+\n+        public Builder isMarried(boolean isMarried) {\n+            this.isMarried = isMarried;\n+            return this;\n+        }\n+\n+        public Person build() {\n+            return new Person(this);\n+        }\n+\n+        @Override\n+        public String toString(){\n+            return (name + \" \" + \" \" + university + \" \" + drivingLicense);\n+        }\n+    }\n+}"
  },
  {
    "sha": "aebe0a952b320ca5d64d634e1ebcc0e65db5d97a",
    "filename": "_3_design_patterns/src/main/java/code/_4_student_effort/Challenge6/Test.java",
    "status": "added",
    "additions": 21,
    "deletions": 0,
    "changes": 21,
    "blob_url": "https://github.com/titusmoldovan/java-training/blob/0ad244bac38231ab7c79bc0f39e26b80abcc3df9/_3_design_patterns/src/main/java/code/_4_student_effort/Challenge6/Test.java",
    "raw_url": "https://github.com/titusmoldovan/java-training/raw/0ad244bac38231ab7c79bc0f39e26b80abcc3df9/_3_design_patterns/src/main/java/code/_4_student_effort/Challenge6/Test.java",
    "contents_url": "https://api.github.com/repos/titusmoldovan/java-training/contents/_3_design_patterns/src/main/java/code/_4_student_effort/Challenge6/Test.java?ref=0ad244bac38231ab7c79bc0f39e26b80abcc3df9",
    "patch": "@@ -0,0 +1,21 @@\n+package code._4_student_effort.Challenge6;\n+import code._4_student_effort.Challenge6.Person;\n+\n+public class Test {\n+    public static void main(String[] args) {\n+\n+       Person person01 = new Person.Builder(\"Alex\")\n+                .job(\"web designer\")\n+                .isMarried(false)\n+                .build();\n+\n+       Person person02 = new Person.Builder(\"Andrei\")\n+                .drivingLicense(\"B2\")\n+                .university(\"Universitatea Politehnica\")\n+                .build();\n+       System.out.println(person01.university);\n+       System.out.println(person02.university);\n+       System.out.println(person01);\n+\n+    }\n+}"
  },
  {
    "sha": "a6f3f7e5ddaa798276ffe251283f2c9d98169418",
    "filename": "_9_reactive/src/main/java/code/_2_challenge/_6_reactive_producers/ReactiveChallenge.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/titusmoldovan/java-training/blob/0ad244bac38231ab7c79bc0f39e26b80abcc3df9/_9_reactive/src/main/java/code/_2_challenge/_6_reactive_producers/ReactiveChallenge.java",
    "raw_url": "https://github.com/titusmoldovan/java-training/raw/0ad244bac38231ab7c79bc0f39e26b80abcc3df9/_9_reactive/src/main/java/code/_2_challenge/_6_reactive_producers/ReactiveChallenge.java",
    "contents_url": "https://api.github.com/repos/titusmoldovan/java-training/contents/_9_reactive/src/main/java/code/_2_challenge/_6_reactive_producers/ReactiveChallenge.java?ref=0ad244bac38231ab7c79bc0f39e26b80abcc3df9",
    "patch": "@@ -5,7 +5,7 @@\n import reactor.core.publisher.DirectProcessor;\n import reactor.core.publisher.EmitterProcessor;\n import reactor.core.publisher.ReplayProcessor;\n-import reactor.core.publisher.TopicProcessor;\n+//import reactor.core.publisher.TopicProcessor;\n \n public class ReactiveChallenge {\n     public static void main(String[] args) throws InterruptedException {"
  },
  {
    "sha": "c3977d3b5d1952ec4c66c73f08ccb39a902679d6",
    "filename": "clean_code_projects/_1_project_requirements_chess/src/main/java/clean/code/chess/requirements/ChessBoard.java",
    "status": "modified",
    "additions": 25,
    "deletions": 3,
    "changes": 28,
    "blob_url": "https://github.com/titusmoldovan/java-training/blob/0ad244bac38231ab7c79bc0f39e26b80abcc3df9/clean_code_projects/_1_project_requirements_chess/src/main/java/clean/code/chess/requirements/ChessBoard.java",
    "raw_url": "https://github.com/titusmoldovan/java-training/raw/0ad244bac38231ab7c79bc0f39e26b80abcc3df9/clean_code_projects/_1_project_requirements_chess/src/main/java/clean/code/chess/requirements/ChessBoard.java",
    "contents_url": "https://api.github.com/repos/titusmoldovan/java-training/contents/clean_code_projects/_1_project_requirements_chess/src/main/java/clean/code/chess/requirements/ChessBoard.java?ref=0ad244bac38231ab7c79bc0f39e26b80abcc3df9",
    "patch": "@@ -4,19 +4,41 @@\n \n     public static int MAX_BOARD_WIDTH = 7;\n     public static int MAX_BOARD_HEIGHT = 7;\n+    public static int black_pawns = 0;\n+    public static int white_pawns = 0;\n \n     private Pawn[][] pieces;\n \n     public ChessBoard() {\n-        pieces = new Pawn[MAX_BOARD_WIDTH][MAX_BOARD_HEIGHT];\n+        pieces = new Pawn[MAX_BOARD_WIDTH + 1][MAX_BOARD_HEIGHT + 1];\n \n     }\n \n     public void Add(Pawn pawn, int xCoordinate, int yCoordinate, PieceColor pieceColor) {\n-        throw new UnsupportedOperationException(\"Need to implement ChessBoard.add()\");\n+        pawn.setXCoordinate(-1);\n+        pawn.setYCoordinate(-1);\n+        if(pieces[xCoordinate][yCoordinate] == null) {\n+            switch(pieceColor) {\n+                case BLACK:\n+                    black_pawns++;\n+                    break;\n+                case WHITE:\n+                    white_pawns++;\n+                    break;\n+            }\n+            if(black_pawns <= 7 && white_pawns <= 7) {\n+                pieces[xCoordinate][yCoordinate] = pawn;\n+                pawn.setXCoordinate(xCoordinate);\n+                pawn.setYCoordinate(yCoordinate);\n+                pawn.setPieceColor(pieceColor);\n+            }\n+        }\n     }\n \n     public boolean IsLegalBoardPosition(int xCoordinate, int yCoordinate) {\n-        throw new UnsupportedOperationException(\"Need to implement ChessBoard.IsLegalBoardPosition()\");\n+        if(xCoordinate >= 0 && xCoordinate <= 7 && yCoordinate >= 0 && yCoordinate <=7)\n+            return true;\n+        else\n+            return false;\n     }\n }"
  }
]
