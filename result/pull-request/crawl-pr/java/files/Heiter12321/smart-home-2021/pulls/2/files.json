[
  {
    "sha": "d7dfdd45feb2bdc8b9675d7e3946230a7e9967f8",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/Heiter12321/smart-home-2021/blob/717b188b30cb53d168d5f02b70b004e95115e748/pom.xml",
    "raw_url": "https://github.com/Heiter12321/smart-home-2021/raw/717b188b30cb53d168d5f02b70b004e95115e748/pom.xml",
    "contents_url": "https://api.github.com/repos/Heiter12321/smart-home-2021/contents/pom.xml?ref=717b188b30cb53d168d5f02b70b004e95115e748",
    "patch": "@@ -36,5 +36,15 @@\n             <artifactId>gson</artifactId>\n             <version>2.6.2</version>\n         </dependency>\n+        <dependency>\n+            <groupId>net.java.dev.jna</groupId>\n+            <artifactId>jna</artifactId>\n+            <version>4.1.0</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>commons-beanutils</groupId>\n+            <artifactId>commons-beanutils</artifactId>\n+            <version>1.7.0</version>\n+        </dependency>\n     </dependencies>\n </project>\n\\ No newline at end of file"
  },
  {
    "sha": "7040c475b4ae75f3e063ca2bee082edf09ff7e68",
    "filename": "src/main/java/ru/sbt/mipt/oop/Action.java",
    "status": "added",
    "additions": 21,
    "deletions": 0,
    "changes": 21,
    "blob_url": "https://github.com/Heiter12321/smart-home-2021/blob/717b188b30cb53d168d5f02b70b004e95115e748/src/main/java/ru/sbt/mipt/oop/Action.java",
    "raw_url": "https://github.com/Heiter12321/smart-home-2021/raw/717b188b30cb53d168d5f02b70b004e95115e748/src/main/java/ru/sbt/mipt/oop/Action.java",
    "contents_url": "https://api.github.com/repos/Heiter12321/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/Action.java?ref=717b188b30cb53d168d5f02b70b004e95115e748",
    "patch": "@@ -0,0 +1,21 @@\n+package ru.sbt.mipt.oop;\n+\n+import java.lang.reflect.Method;\n+\n+public class Action {\n+    private final Method method;\n+    private final Object params;\n+\n+    public Action(Method method, boolean params) {\n+        this.method = method;\n+        this.params = params;\n+    }\n+\n+    public Method getMethod() {\n+        return method;\n+    }\n+\n+    public Object getParams() {\n+        return params;\n+    }\n+}"
  },
  {
    "sha": "bf5edb92f867b22fccfec563ba681b9623a53583",
    "filename": "src/main/java/ru/sbt/mipt/oop/Actionable.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/Heiter12321/smart-home-2021/blob/717b188b30cb53d168d5f02b70b004e95115e748/src/main/java/ru/sbt/mipt/oop/Actionable.java",
    "raw_url": "https://github.com/Heiter12321/smart-home-2021/raw/717b188b30cb53d168d5f02b70b004e95115e748/src/main/java/ru/sbt/mipt/oop/Actionable.java",
    "contents_url": "https://api.github.com/repos/Heiter12321/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/Actionable.java?ref=717b188b30cb53d168d5f02b70b004e95115e748",
    "patch": "@@ -0,0 +1,7 @@\n+package ru.sbt.mipt.oop;\n+\n+import java.lang.reflect.InvocationTargetException;\n+\n+public interface Actionable {\n+    void execute(Action action) throws IllegalAccessException, InstantiationException, InvocationTargetException;\n+}"
  },
  {
    "sha": "67656d9f7bb8cd225be7d21ceedd83fd7241e662",
    "filename": "src/main/java/ru/sbt/mipt/oop/AllEventsProcess.java",
    "status": "added",
    "additions": 26,
    "deletions": 0,
    "changes": 26,
    "blob_url": "https://github.com/Heiter12321/smart-home-2021/blob/717b188b30cb53d168d5f02b70b004e95115e748/src/main/java/ru/sbt/mipt/oop/AllEventsProcess.java",
    "raw_url": "https://github.com/Heiter12321/smart-home-2021/raw/717b188b30cb53d168d5f02b70b004e95115e748/src/main/java/ru/sbt/mipt/oop/AllEventsProcess.java",
    "contents_url": "https://api.github.com/repos/Heiter12321/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/AllEventsProcess.java?ref=717b188b30cb53d168d5f02b70b004e95115e748",
    "patch": "@@ -0,0 +1,26 @@\n+package ru.sbt.mipt.oop;\n+\n+import java.lang.reflect.InvocationTargetException;\n+\n+public class AllEventsProcess {\n+    private final EventCreator eventCreator;\n+    private final SmartHome smartHome;\n+\n+    public AllEventsProcess(EventCreatorImpl eventCreator, SmartHome smartHome) {\n+        this.eventCreator = eventCreator;\n+        this.smartHome = smartHome;\n+    }\n+\n+    void eventProcessCycle() throws NoSuchMethodException, IllegalAccessException, InvocationTargetException {\n+        SensorEvent event = eventCreator.getNextSensorEvent();\n+        while (event != null) {\n+            System.out.println(\"Got event: \" + event);\n+\n+            EventDistributor eventDistributor = new EventDistributor();\n+            EventProcess eventProcessor =  eventDistributor.getNeededEventProcessor(smartHome, event);\n+            eventProcessor.processingEvent();\n+\n+            event = eventCreator.getNextSensorEvent();\n+        }\n+    }\n+}"
  },
  {
    "sha": "2a11e1d981f7d3faadd2913cedb6ad4872b40f2b",
    "filename": "src/main/java/ru/sbt/mipt/oop/Application.java",
    "status": "modified",
    "additions": 7,
    "deletions": 70,
    "changes": 77,
    "blob_url": "https://github.com/Heiter12321/smart-home-2021/blob/717b188b30cb53d168d5f02b70b004e95115e748/src/main/java/ru/sbt/mipt/oop/Application.java",
    "raw_url": "https://github.com/Heiter12321/smart-home-2021/raw/717b188b30cb53d168d5f02b70b004e95115e748/src/main/java/ru/sbt/mipt/oop/Application.java",
    "contents_url": "https://api.github.com/repos/Heiter12321/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/Application.java?ref=717b188b30cb53d168d5f02b70b004e95115e748",
    "patch": "@@ -1,80 +1,17 @@\n package ru.sbt.mipt.oop;\n \n-import com.google.gson.Gson;\n-\n import java.io.IOException;\n-import java.nio.file.Files;\n-import java.nio.file.Paths;\n-\n-import static ru.sbt.mipt.oop.SensorEventType.*;\n+import java.lang.reflect.InvocationTargetException;\n \n public class Application {\n \n-    public static void main(String... args) throws IOException {\n+    public static void main(String... args) throws IOException, NoSuchMethodException, IllegalAccessException, InvocationTargetException {\n         // считываем состояние дома из файла\n-        Gson gson = new Gson();\n-        String json = new String(Files.readAllBytes(Paths.get(\"smart-home-1.js\")));\n-        SmartHome smartHome = gson.fromJson(json, SmartHome.class);\n+        HomeReader homeReader = new HomeReaderImpl();\n+        SmartHome smartHome = homeReader.readHome(\"smart-home-1.js\");\n         // начинаем цикл обработки событий\n-        SensorEvent event = getNextSensorEvent();\n-        while (event != null) {\n-            System.out.println(\"Got event: \" + event);\n-            if (event.getType() == LIGHT_ON || event.getType() == LIGHT_OFF) {\n-                // событие от источника света\n-                for (Room room : smartHome.getRooms()) {\n-                    for (Light light : room.getLights()) {\n-                        if (light.getId().equals(event.getObjectId())) {\n-                            if (event.getType() == LIGHT_ON) {\n-                                light.setOn(true);\n-                                System.out.println(\"Light \" + light.getId() + \" in room \" + room.getName() + \" was turned on.\");\n-                            } else {\n-                                light.setOn(false);\n-                                System.out.println(\"Light \" + light.getId() + \" in room \" + room.getName() + \" was turned off.\");\n-                            }\n-                        }\n-                    }\n-                }\n-            }\n-            if (event.getType() == DOOR_OPEN || event.getType() == DOOR_CLOSED) {\n-                // событие от двери\n-                for (Room room : smartHome.getRooms()) {\n-                    for (Door door : room.getDoors()) {\n-                        if (door.getId().equals(event.getObjectId())) {\n-                            if (event.getType() == DOOR_OPEN) {\n-                                door.setOpen(true);\n-                                System.out.println(\"Door \" + door.getId() + \" in room \" + room.getName() + \" was opened.\");\n-                            } else {\n-                                door.setOpen(false);\n-                                System.out.println(\"Door \" + door.getId() + \" in room \" + room.getName() + \" was closed.\");\n-                                // если мы получили событие о закрытие двери в холле - это значит, что была закрыта входная дверь.\n-                                // в этом случае мы хотим автоматически выключить свет во всем доме (это же умный дом!)\n-                                if (room.getName().equals(\"hall\")) {\n-                                    for (Room homeRoom : smartHome.getRooms()) {\n-                                        for (Light light : homeRoom.getLights()) {\n-                                            light.setOn(false);\n-                                            SensorCommand command = new SensorCommand(CommandType.LIGHT_OFF, light.getId());\n-                                            sendCommand(command);\n-                                        }\n-                                    }\n-                                }\n-                            }\n-                        }\n-                    }\n-                }\n-            }\n-            event = getNextSensorEvent();\n-        }\n-    }\n-\n-    private static void sendCommand(SensorCommand command) {\n-        System.out.println(\"Pretent we're sending command \" + command);\n-    }\n-\n-    private static SensorEvent getNextSensorEvent() {\n-        // pretend like we're getting the events from physical world, but here we're going to just generate some random events\n-        if (Math.random() < 0.05) return null; // null means end of event stream\n-        SensorEventType sensorEventType = SensorEventType.values()[(int) (4 * Math.random())];\n-        String objectId = \"\" + ((int) (10 * Math.random()));\n-        return new SensorEvent(sensorEventType, objectId);\n+        EventCreatorImpl eventCreator = new EventCreatorImpl();\n+        AllEventsProcess allEventsProcess = new AllEventsProcess(eventCreator, smartHome);\n+        allEventsProcess.eventProcessCycle();\n     }\n }"
  },
  {
    "sha": "73b14e73ed1d6a97c922fa2a20553707bb9127f4",
    "filename": "src/main/java/ru/sbt/mipt/oop/CommandSender.java",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/Heiter12321/smart-home-2021/blob/717b188b30cb53d168d5f02b70b004e95115e748/src/main/java/ru/sbt/mipt/oop/CommandSender.java",
    "raw_url": "https://github.com/Heiter12321/smart-home-2021/raw/717b188b30cb53d168d5f02b70b004e95115e748/src/main/java/ru/sbt/mipt/oop/CommandSender.java",
    "contents_url": "https://api.github.com/repos/Heiter12321/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/CommandSender.java?ref=717b188b30cb53d168d5f02b70b004e95115e748",
    "patch": "@@ -0,0 +1,5 @@\n+package ru.sbt.mipt.oop;\n+\n+public interface CommandSender {\n+    void sendCommand(SensorCommand command);\n+}"
  },
  {
    "sha": "2534c9df15f78f3a40c1f16f4df0048cd3e15c25",
    "filename": "src/main/java/ru/sbt/mipt/oop/CommandSenderImpl.java",
    "status": "added",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/Heiter12321/smart-home-2021/blob/717b188b30cb53d168d5f02b70b004e95115e748/src/main/java/ru/sbt/mipt/oop/CommandSenderImpl.java",
    "raw_url": "https://github.com/Heiter12321/smart-home-2021/raw/717b188b30cb53d168d5f02b70b004e95115e748/src/main/java/ru/sbt/mipt/oop/CommandSenderImpl.java",
    "contents_url": "https://api.github.com/repos/Heiter12321/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/CommandSenderImpl.java?ref=717b188b30cb53d168d5f02b70b004e95115e748",
    "patch": "@@ -0,0 +1,9 @@\n+package ru.sbt.mipt.oop;\n+\n+public class CommandSenderImpl implements CommandSender{\n+\n+    @Override\n+    public void sendCommand(SensorCommand command) {\n+        System.out.println(\"Pretent we're sending command \" + command);\n+    }\n+}"
  },
  {
    "sha": "ada43d57d746ce6bcb0c2a20e9db937817f824c5",
    "filename": "src/main/java/ru/sbt/mipt/oop/Door.java",
    "status": "modified",
    "additions": 11,
    "deletions": 7,
    "changes": 18,
    "blob_url": "https://github.com/Heiter12321/smart-home-2021/blob/717b188b30cb53d168d5f02b70b004e95115e748/src/main/java/ru/sbt/mipt/oop/Door.java",
    "raw_url": "https://github.com/Heiter12321/smart-home-2021/raw/717b188b30cb53d168d5f02b70b004e95115e748/src/main/java/ru/sbt/mipt/oop/Door.java",
    "contents_url": "https://api.github.com/repos/Heiter12321/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/Door.java?ref=717b188b30cb53d168d5f02b70b004e95115e748",
    "patch": "@@ -1,19 +1,23 @@\n package ru.sbt.mipt.oop;\n \n-public class Door {\n+public class Door implements HomeElement {\n     private final String id;\n-    private boolean isOpen;\n+    private boolean isDoorOpen;\n \n-    public Door(boolean isOpen, String id) {\n-        this.isOpen = isOpen;\n+    public Door(boolean isDoorOpen, String id) {\n+        this.isDoorOpen = isDoorOpen;\n         this.id = id;\n     }\n \n-    public String getId() {\n+    String getId() {\n         return id;\n     }\n \n-    public void setOpen(boolean open) {\n-        isOpen = open;\n+    public boolean isDoorOpen() {\n+        return isDoorOpen;\n+    }\n+\n+    void setOpen(boolean open) {\n+        isDoorOpen = open;\n     }\n }"
  },
  {
    "sha": "599ba136df44fbcb49ee23aff714ad41fef471a2",
    "filename": "src/main/java/ru/sbt/mipt/oop/DoorEventProcessor.java",
    "status": "added",
    "additions": 38,
    "deletions": 0,
    "changes": 38,
    "blob_url": "https://github.com/Heiter12321/smart-home-2021/blob/717b188b30cb53d168d5f02b70b004e95115e748/src/main/java/ru/sbt/mipt/oop/DoorEventProcessor.java",
    "raw_url": "https://github.com/Heiter12321/smart-home-2021/raw/717b188b30cb53d168d5f02b70b004e95115e748/src/main/java/ru/sbt/mipt/oop/DoorEventProcessor.java",
    "contents_url": "https://api.github.com/repos/Heiter12321/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/DoorEventProcessor.java?ref=717b188b30cb53d168d5f02b70b004e95115e748",
    "patch": "@@ -0,0 +1,38 @@\n+package ru.sbt.mipt.oop;\n+\n+import java.lang.reflect.InvocationTargetException;\n+\n+import static ru.sbt.mipt.oop.SensorEventType.DOOR_OPEN;\n+\n+public class DoorEventProcessor implements EventProcess {\n+    private final SmartHome smartHome;\n+    private final SensorEvent event;\n+\n+    public DoorEventProcessor(SmartHome smartHome, SensorEvent event) {\n+        this.smartHome = smartHome;\n+        this.event = event;\n+    }\n+\n+    @Override\n+    public void processingEvent() throws NoSuchMethodException, IllegalAccessException, InvocationTargetException {\n+        for (Room room : smartHome.getRooms()) {\n+            for (Door door : room.getDoors()) {\n+                if (door.getId().equals(event.getObjectId())) {\n+                    if (event.getType() == DOOR_OPEN) {\n+                        door.setOpen(true);\n+                        System.out.println(\"Door \" + door.getId() + \" in room \" + room.getName() + \" was opened.\");\n+                    } else {\n+                        door.setOpen(false);\n+                        System.out.println(\"Door \" + door.getId() + \" in room \" + room.getName() + \" was closed.\");\n+                        // если мы получили событие о закрытие двери в холле - это значит, что была закрыта входная дверь.\n+                        // в этом случае мы хотим автоматически выключить свет во всем доме (это же умный дом!)\n+                        if (room.getName().equals(\"hall\")) {\n+                            HallDoorEventProcessor hallDoorEventProcessor = new HallDoorEventProcessor(smartHome);\n+                            hallDoorEventProcessor.setLightOffAroundHome();\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+    }\n+}"
  },
  {
    "sha": "a0f8f9271a2ea6be8573d2d86d9d1ca5c213d7d3",
    "filename": "src/main/java/ru/sbt/mipt/oop/DoorEventProcessorTest.java",
    "status": "added",
    "additions": 47,
    "deletions": 0,
    "changes": 47,
    "blob_url": "https://github.com/Heiter12321/smart-home-2021/blob/717b188b30cb53d168d5f02b70b004e95115e748/src/main/java/ru/sbt/mipt/oop/DoorEventProcessorTest.java",
    "raw_url": "https://github.com/Heiter12321/smart-home-2021/raw/717b188b30cb53d168d5f02b70b004e95115e748/src/main/java/ru/sbt/mipt/oop/DoorEventProcessorTest.java",
    "contents_url": "https://api.github.com/repos/Heiter12321/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/DoorEventProcessorTest.java?ref=717b188b30cb53d168d5f02b70b004e95115e748",
    "patch": "@@ -0,0 +1,47 @@\n+package ru.sbt.mipt.oop;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.PrintStream;\n+import java.lang.reflect.InvocationTargetException;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+import static ru.sbt.mipt.oop.SensorEventType.DOOR_CLOSED;\n+import static ru.sbt.mipt.oop.SensorEventType.DOOR_OPEN;\n+\n+class DoorEventProcessorTest1 {\n+\n+    @Test\n+    void processingEvent() throws NoSuchMethodException, IllegalAccessException, InvocationTargetException {\n+        SmartHome smartHome = new SmartHome(HomeBuilder.createFourRooms());\n+        SensorEvent event = new DoorSensorEvent(DOOR_OPEN, \"3\");\n+        DoorEventProcessor doorEventProcessor = new DoorEventProcessor(smartHome, event);\n+\n+        ByteArrayOutputStream baOut = new ByteArrayOutputStream();\n+        PrintStream out = new PrintStream(baOut);\n+        System.setOut(out);\n+        System.setErr(out);\n+        doorEventProcessor.processingEvent();\n+\n+        assertEquals(baOut.toString(), \"Door 3 in room bedroom was opened.\\n\");\n+    }\n+}\n+\n+class DoorEventProcessorTest2 {\n+\n+    @Test\n+    void processingEvent() throws NoSuchMethodException, IllegalAccessException, InvocationTargetException {\n+        SmartHome smartHome = new SmartHome(HomeBuilder.createFourRooms());\n+        SensorEvent event = new DoorSensorEvent(DOOR_CLOSED, \"2\");\n+        DoorEventProcessor doorEventProcessor = new DoorEventProcessor(smartHome, event);\n+\n+        ByteArrayOutputStream baOut = new ByteArrayOutputStream();\n+        PrintStream out = new PrintStream(baOut);\n+        System.setOut(out);\n+        System.setErr(out);\n+        doorEventProcessor.processingEvent();\n+\n+        assertEquals(baOut.toString(), \"Door 2 in room bathroom was closed.\\n\");\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "b592053720c4e22be5f91c94277b0d5f73057c0a",
    "filename": "src/main/java/ru/sbt/mipt/oop/DoorIterator.java",
    "status": "added",
    "additions": 27,
    "deletions": 0,
    "changes": 27,
    "blob_url": "https://github.com/Heiter12321/smart-home-2021/blob/717b188b30cb53d168d5f02b70b004e95115e748/src/main/java/ru/sbt/mipt/oop/DoorIterator.java",
    "raw_url": "https://github.com/Heiter12321/smart-home-2021/raw/717b188b30cb53d168d5f02b70b004e95115e748/src/main/java/ru/sbt/mipt/oop/DoorIterator.java",
    "contents_url": "https://api.github.com/repos/Heiter12321/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/DoorIterator.java?ref=717b188b30cb53d168d5f02b70b004e95115e748",
    "patch": "@@ -0,0 +1,27 @@\n+package ru.sbt.mipt.oop;\n+\n+import java.util.Collection;\n+import java.util.Iterator;\n+\n+public class DoorIterator implements HomeElementIterator {\n+    private final Collection<Door> doors;\n+    private final Iterator<Door> iterator;\n+\n+    public DoorIterator(Collection<Door> doors) {\n+        this.doors = doors;\n+        this.iterator = doors.iterator();\n+    }\n+\n+    @Override\n+    public HomeElement getNext() {\n+        if (hasMore()) {\n+            return iterator.next();\n+        }\n+        return null;\n+    }\n+\n+    @Override\n+    public boolean hasMore() {\n+        return iterator.hasNext();\n+    }\n+}"
  },
  {
    "sha": "0e4a003f6618b601e4acc0559aa078ca53bf80e3",
    "filename": "src/main/java/ru/sbt/mipt/oop/DoorSensorEvent.java",
    "status": "added",
    "additions": 27,
    "deletions": 0,
    "changes": 27,
    "blob_url": "https://github.com/Heiter12321/smart-home-2021/blob/717b188b30cb53d168d5f02b70b004e95115e748/src/main/java/ru/sbt/mipt/oop/DoorSensorEvent.java",
    "raw_url": "https://github.com/Heiter12321/smart-home-2021/raw/717b188b30cb53d168d5f02b70b004e95115e748/src/main/java/ru/sbt/mipt/oop/DoorSensorEvent.java",
    "contents_url": "https://api.github.com/repos/Heiter12321/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/DoorSensorEvent.java?ref=717b188b30cb53d168d5f02b70b004e95115e748",
    "patch": "@@ -0,0 +1,27 @@\n+package ru.sbt.mipt.oop;\n+\n+public class DoorSensorEvent implements SensorEvent{\n+    private final SensorEventType type;\n+    private final String objectId;\n+\n+    public DoorSensorEvent(SensorEventType type, String objectId) {\n+        this.type = type;\n+        this.objectId = objectId;\n+    }\n+\n+    public SensorEventType getType() {\n+        return type;\n+    }\n+\n+    public String getObjectId() {\n+        return objectId;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"DoorSensorEvent{\" +\n+                \"type=\" + type +\n+                \", objectId='\" + objectId + '\\'' +\n+                '}';\n+    }\n+}"
  },
  {
    "sha": "e11b4f4ad1021597aa0da8b79a28ea1e32d698dd",
    "filename": "src/main/java/ru/sbt/mipt/oop/EventCreator.java",
    "status": "added",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/Heiter12321/smart-home-2021/blob/717b188b30cb53d168d5f02b70b004e95115e748/src/main/java/ru/sbt/mipt/oop/EventCreator.java",
    "raw_url": "https://github.com/Heiter12321/smart-home-2021/raw/717b188b30cb53d168d5f02b70b004e95115e748/src/main/java/ru/sbt/mipt/oop/EventCreator.java",
    "contents_url": "https://api.github.com/repos/Heiter12321/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/EventCreator.java?ref=717b188b30cb53d168d5f02b70b004e95115e748",
    "patch": "@@ -0,0 +1,6 @@\n+package ru.sbt.mipt.oop;\n+\n+public interface EventCreator {\n+    SensorEvent getNextSensorEvent();\n+}\n+"
  },
  {
    "sha": "67395c205e9d3583ee8823803cf9439f55ab925f",
    "filename": "src/main/java/ru/sbt/mipt/oop/EventCreatorImpl.java",
    "status": "added",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/Heiter12321/smart-home-2021/blob/717b188b30cb53d168d5f02b70b004e95115e748/src/main/java/ru/sbt/mipt/oop/EventCreatorImpl.java",
    "raw_url": "https://github.com/Heiter12321/smart-home-2021/raw/717b188b30cb53d168d5f02b70b004e95115e748/src/main/java/ru/sbt/mipt/oop/EventCreatorImpl.java",
    "contents_url": "https://api.github.com/repos/Heiter12321/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/EventCreatorImpl.java?ref=717b188b30cb53d168d5f02b70b004e95115e748",
    "patch": "@@ -0,0 +1,20 @@\n+package ru.sbt.mipt.oop;\n+\n+public class EventCreatorImpl implements EventCreator{\n+    public EventCreatorImpl() {}\n+\n+    public SensorEvent getNextSensorEvent() {\n+        // pretend like we're getting the events from physical world, but here we're going to just generate some random events\n+        if (Math.random() < 0.05) return null; // null means end of event stream\n+        int numberEventType = (int) (4 * Math.random());\n+        SensorEventType sensorEventType;\n+        String objectId = \"\" + ((int) (10 * Math.random()));\n+        if (numberEventType > 1) {\n+            sensorEventType = SensorEventType.values()[numberEventType - 2];\n+            return new DoorSensorEvent(sensorEventType, objectId);\n+        } else {\n+            sensorEventType = SensorEventType.values()[numberEventType];\n+            return new LightSensorEvent(sensorEventType, objectId);\n+        }\n+    }\n+}"
  },
  {
    "sha": "501dc01dbfc677da9eb66f10e1697134a908c0f1",
    "filename": "src/main/java/ru/sbt/mipt/oop/EventDistributor.java",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/Heiter12321/smart-home-2021/blob/717b188b30cb53d168d5f02b70b004e95115e748/src/main/java/ru/sbt/mipt/oop/EventDistributor.java",
    "raw_url": "https://github.com/Heiter12321/smart-home-2021/raw/717b188b30cb53d168d5f02b70b004e95115e748/src/main/java/ru/sbt/mipt/oop/EventDistributor.java",
    "contents_url": "https://api.github.com/repos/Heiter12321/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/EventDistributor.java?ref=717b188b30cb53d168d5f02b70b004e95115e748",
    "patch": "@@ -0,0 +1,16 @@\n+package ru.sbt.mipt.oop;\n+\n+public class EventDistributor {\n+    public EventProcess getNeededEventProcessor(SmartHome smartHome, SensorEvent event) {\n+        switch (event.getType()) {\n+            case LIGHT_ON:\n+            case LIGHT_OFF:\n+                return new LightEventProcessor(smartHome, event);\n+            case DOOR_OPEN:\n+            case DOOR_CLOSED:\n+                return new DoorEventProcessor(smartHome, event);\n+            default:\n+                return new HallDoorEventProcessor(smartHome);\n+        }\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "f38bae076dd6708a008d82c2f6d4d1382fd79048",
    "filename": "src/main/java/ru/sbt/mipt/oop/EventProcess.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/Heiter12321/smart-home-2021/blob/717b188b30cb53d168d5f02b70b004e95115e748/src/main/java/ru/sbt/mipt/oop/EventProcess.java",
    "raw_url": "https://github.com/Heiter12321/smart-home-2021/raw/717b188b30cb53d168d5f02b70b004e95115e748/src/main/java/ru/sbt/mipt/oop/EventProcess.java",
    "contents_url": "https://api.github.com/repos/Heiter12321/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/EventProcess.java?ref=717b188b30cb53d168d5f02b70b004e95115e748",
    "patch": "@@ -0,0 +1,7 @@\n+package ru.sbt.mipt.oop;\n+\n+import java.lang.reflect.InvocationTargetException;\n+\n+public interface EventProcess {\n+    void processingEvent() throws NoSuchMethodException, IllegalAccessException, InvocationTargetException;\n+}"
  },
  {
    "sha": "ac8e4a9f69390e46c9ecd48f1a4743fe1c49a25a",
    "filename": "src/main/java/ru/sbt/mipt/oop/HallDoorEventProcessor.java",
    "status": "added",
    "additions": 21,
    "deletions": 0,
    "changes": 21,
    "blob_url": "https://github.com/Heiter12321/smart-home-2021/blob/717b188b30cb53d168d5f02b70b004e95115e748/src/main/java/ru/sbt/mipt/oop/HallDoorEventProcessor.java",
    "raw_url": "https://github.com/Heiter12321/smart-home-2021/raw/717b188b30cb53d168d5f02b70b004e95115e748/src/main/java/ru/sbt/mipt/oop/HallDoorEventProcessor.java",
    "contents_url": "https://api.github.com/repos/Heiter12321/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/HallDoorEventProcessor.java?ref=717b188b30cb53d168d5f02b70b004e95115e748",
    "patch": "@@ -0,0 +1,21 @@\n+package ru.sbt.mipt.oop;\n+\n+\n+import java.lang.reflect.InvocationTargetException;\n+\n+public class HallDoorEventProcessor implements EventProcess {\n+    private final SmartHome smartHome;\n+\n+    public HallDoorEventProcessor(SmartHome smartHome) {\n+        this.smartHome = smartHome;\n+    }\n+\n+    public void setLightOffAroundHome() throws NoSuchMethodException, InvocationTargetException, IllegalAccessException {\n+        smartHome.execute(new Action(Light.class.getDeclaredMethod(\"setOn\", boolean.class), false));\n+    }\n+\n+    @Override\n+    public void processingEvent() throws NoSuchMethodException, IllegalAccessException, InvocationTargetException {\n+        setLightOffAroundHome();\n+    }\n+}"
  },
  {
    "sha": "3452d8fe2150e429ff888484f78a180a3cc58098",
    "filename": "src/main/java/ru/sbt/mipt/oop/HallDoorEventProcessorTest.java",
    "status": "added",
    "additions": 42,
    "deletions": 0,
    "changes": 42,
    "blob_url": "https://github.com/Heiter12321/smart-home-2021/blob/717b188b30cb53d168d5f02b70b004e95115e748/src/main/java/ru/sbt/mipt/oop/HallDoorEventProcessorTest.java",
    "raw_url": "https://github.com/Heiter12321/smart-home-2021/raw/717b188b30cb53d168d5f02b70b004e95115e748/src/main/java/ru/sbt/mipt/oop/HallDoorEventProcessorTest.java",
    "contents_url": "https://api.github.com/repos/Heiter12321/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/HallDoorEventProcessorTest.java?ref=717b188b30cb53d168d5f02b70b004e95115e748",
    "patch": "@@ -0,0 +1,42 @@\n+package ru.sbt.mipt.oop;\n+\n+import org.junit.jupiter.api.Test;\n+import java.lang.reflect.InvocationTargetException;\n+import java.util.Arrays;\n+import java.util.Collections;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+class HallDoorEventProcessorTest1 {\n+\n+    @Test\n+    void setLightOffAroundHome() throws NoSuchMethodException, IllegalAccessException, InvocationTargetException {\n+        SmartHome smartHome = new SmartHome(HomeBuilder.createFourRooms());\n+        HallDoorEventProcessor hallDoorEventProcessor = new HallDoorEventProcessor(smartHome);\n+        hallDoorEventProcessor.setLightOffAroundHome();\n+\n+        for (Room room : smartHome.rooms) {\n+            for (Light light : room.getLights()) {\n+                assertFalse(light.isLightOn());\n+            }\n+        }\n+    }\n+}\n+\n+class HallDoorEventProcessorTest2 {\n+\n+    @Test\n+    void setLightOffAroundHome() throws NoSuchMethodException, IllegalAccessException, InvocationTargetException {\n+        Room room = new Room(Arrays.asList(new Light(\"228\", true), new Light(\"1332\", true)),\n+                Collections.singletonList(new Door(true, \"18\")),\n+                \"hall\");\n+        SmartHome smartHome = new SmartHome(Collections.singletonList(room));\n+        HallDoorEventProcessor hallDoorEventProcessor = new HallDoorEventProcessor(smartHome);\n+        hallDoorEventProcessor.setLightOffAroundHome();\n+        for (Room room1 : smartHome.rooms) {\n+            for (Light light : room1.getLights()) {\n+                assertFalse(light.isLightOn());\n+            }\n+        }\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "4b97e85d234e271256ebf1860ec831ee6fd0f063",
    "filename": "src/main/java/ru/sbt/mipt/oop/HomeBuilder.java",
    "status": "modified",
    "additions": 15,
    "deletions": 23,
    "changes": 38,
    "blob_url": "https://github.com/Heiter12321/smart-home-2021/blob/717b188b30cb53d168d5f02b70b004e95115e748/src/main/java/ru/sbt/mipt/oop/HomeBuilder.java",
    "raw_url": "https://github.com/Heiter12321/smart-home-2021/raw/717b188b30cb53d168d5f02b70b004e95115e748/src/main/java/ru/sbt/mipt/oop/HomeBuilder.java",
    "contents_url": "https://api.github.com/repos/Heiter12321/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/HomeBuilder.java?ref=717b188b30cb53d168d5f02b70b004e95115e748",
    "patch": "@@ -1,38 +1,30 @@\n package ru.sbt.mipt.oop;\n \n-import com.google.gson.Gson;\n-import com.google.gson.GsonBuilder;\n-\n-import java.io.BufferedWriter;\n-import java.io.IOException;\n-import java.nio.file.Files;\n-import java.nio.file.Path;\n-import java.nio.file.Paths;\n import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.Collections;\n \n public class HomeBuilder {\n \n-    public static void main(String[] args) throws IOException {\n+    public static void main(String[] args) {\n+        SmartHome smartHome = new SmartHome(createFourRooms());\n+        HomePrinter homePrinter = new HomePrinter(smartHome);\n+        homePrinter.printRoom();\n+    }\n+\n+    public static Collection<Room> createFourRooms() {\n         Room kitchen = new Room(Arrays.asList(new Light(\"1\", false), new Light(\"2\", true)),\n-                Arrays.asList(new Door(false, \"1\")),\n+                Collections.singletonList(new Door(false, \"1\")),\n                 \"kitchen\");\n-        Room bathroom = new Room(Arrays.asList(new Light(\"3\", true)),\n-                Arrays.asList(new Door(false, \"2\")),\n+        Room bathroom = new Room(Collections.singletonList(new Light(\"3\", true)),\n+                Collections.singletonList(new Door(false, \"2\")),\n                 \"bathroom\");\n         Room bedroom = new Room(Arrays.asList(new Light(\"4\", false), new Light(\"5\", false), new Light(\"6\", false)),\n-                Arrays.asList(new Door(true, \"3\")),\n+                Collections.singletonList(new Door(true, \"3\")),\n                 \"bedroom\");\n         Room hall = new Room(Arrays.asList(new Light(\"7\", false), new Light(\"8\", false), new Light(\"9\", false)),\n-                Arrays.asList(new Door(false, \"4\")),\n+                Collections.singletonList(new Door(false, \"4\")),\n                 \"hall\");\n-        SmartHome smartHome = new SmartHome(Arrays.asList(kitchen, bathroom, bedroom, hall));\n-        Gson gson = new GsonBuilder().setPrettyPrinting().create();\n-        String jsonString = gson.toJson(smartHome);\n-        System.out.println(jsonString);\n-        Path path = Paths.get(\"output.js\");\n-        try (BufferedWriter writer = Files.newBufferedWriter(path)) {\n-            writer.write(jsonString);\n-        }\n+        return Arrays.asList(kitchen, bathroom, bedroom, hall);\n     }\n-\n }"
  },
  {
    "sha": "9e06a8a4a90bdf1c2763fc720b180af80b103310",
    "filename": "src/main/java/ru/sbt/mipt/oop/HomeElement.java",
    "status": "added",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/Heiter12321/smart-home-2021/blob/717b188b30cb53d168d5f02b70b004e95115e748/src/main/java/ru/sbt/mipt/oop/HomeElement.java",
    "raw_url": "https://github.com/Heiter12321/smart-home-2021/raw/717b188b30cb53d168d5f02b70b004e95115e748/src/main/java/ru/sbt/mipt/oop/HomeElement.java",
    "contents_url": "https://api.github.com/repos/Heiter12321/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/HomeElement.java?ref=717b188b30cb53d168d5f02b70b004e95115e748",
    "patch": "@@ -0,0 +1,4 @@\n+package ru.sbt.mipt.oop;\n+\n+public interface HomeElement {\n+}"
  },
  {
    "sha": "452ecd388dbbc7be1625d90d57e3c92ef5c94d2f",
    "filename": "src/main/java/ru/sbt/mipt/oop/HomeElementIterator.java",
    "status": "added",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/Heiter12321/smart-home-2021/blob/717b188b30cb53d168d5f02b70b004e95115e748/src/main/java/ru/sbt/mipt/oop/HomeElementIterator.java",
    "raw_url": "https://github.com/Heiter12321/smart-home-2021/raw/717b188b30cb53d168d5f02b70b004e95115e748/src/main/java/ru/sbt/mipt/oop/HomeElementIterator.java",
    "contents_url": "https://api.github.com/repos/Heiter12321/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/HomeElementIterator.java?ref=717b188b30cb53d168d5f02b70b004e95115e748",
    "patch": "@@ -0,0 +1,6 @@\n+package ru.sbt.mipt.oop;\n+\n+public interface HomeElementIterator {\n+    HomeElement getNext();\n+    boolean hasMore();\n+}"
  },
  {
    "sha": "34a228c07e171f5ff5085f8e39cf8bf40dd1032f",
    "filename": "src/main/java/ru/sbt/mipt/oop/HomePrinter.java",
    "status": "added",
    "additions": 30,
    "deletions": 0,
    "changes": 30,
    "blob_url": "https://github.com/Heiter12321/smart-home-2021/blob/717b188b30cb53d168d5f02b70b004e95115e748/src/main/java/ru/sbt/mipt/oop/HomePrinter.java",
    "raw_url": "https://github.com/Heiter12321/smart-home-2021/raw/717b188b30cb53d168d5f02b70b004e95115e748/src/main/java/ru/sbt/mipt/oop/HomePrinter.java",
    "contents_url": "https://api.github.com/repos/Heiter12321/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/HomePrinter.java?ref=717b188b30cb53d168d5f02b70b004e95115e748",
    "patch": "@@ -0,0 +1,30 @@\n+package ru.sbt.mipt.oop;\n+\n+import com.google.gson.Gson;\n+import com.google.gson.GsonBuilder;\n+\n+import java.io.BufferedWriter;\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+\n+public class HomePrinter {\n+    private final SmartHome smartHome;\n+\n+    public HomePrinter(SmartHome smartHome) {\n+        this.smartHome = smartHome;\n+    }\n+\n+    public void printRoom() {\n+        Gson gson = new GsonBuilder().setPrettyPrinting().create();\n+        String jsonString = gson.toJson(smartHome);\n+        System.out.println(jsonString);\n+        Path path = Paths.get(\"output.js\");\n+        try (BufferedWriter writer = Files.newBufferedWriter(path)) {\n+            writer.write(jsonString);\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+    }\n+}"
  },
  {
    "sha": "9a0c12a4d8645c7d4e1b3cb58e1568b5c79bc988",
    "filename": "src/main/java/ru/sbt/mipt/oop/HomeReader.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/Heiter12321/smart-home-2021/blob/717b188b30cb53d168d5f02b70b004e95115e748/src/main/java/ru/sbt/mipt/oop/HomeReader.java",
    "raw_url": "https://github.com/Heiter12321/smart-home-2021/raw/717b188b30cb53d168d5f02b70b004e95115e748/src/main/java/ru/sbt/mipt/oop/HomeReader.java",
    "contents_url": "https://api.github.com/repos/Heiter12321/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/HomeReader.java?ref=717b188b30cb53d168d5f02b70b004e95115e748",
    "patch": "@@ -0,0 +1,7 @@\n+package ru.sbt.mipt.oop;\n+\n+import java.io.IOException;\n+\n+public interface HomeReader {\n+    SmartHome readHome(String path) throws IOException;\n+}"
  },
  {
    "sha": "8688dd91eb9052f8b1b202c4de3c85d8506d3381",
    "filename": "src/main/java/ru/sbt/mipt/oop/HomeReaderImpl.java",
    "status": "added",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/Heiter12321/smart-home-2021/blob/717b188b30cb53d168d5f02b70b004e95115e748/src/main/java/ru/sbt/mipt/oop/HomeReaderImpl.java",
    "raw_url": "https://github.com/Heiter12321/smart-home-2021/raw/717b188b30cb53d168d5f02b70b004e95115e748/src/main/java/ru/sbt/mipt/oop/HomeReaderImpl.java",
    "contents_url": "https://api.github.com/repos/Heiter12321/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/HomeReaderImpl.java?ref=717b188b30cb53d168d5f02b70b004e95115e748",
    "patch": "@@ -0,0 +1,15 @@\n+package ru.sbt.mipt.oop;\n+\n+import com.google.gson.Gson;\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Paths;\n+\n+public class HomeReaderImpl implements HomeReader{\n+    public SmartHome readHome(String path) throws IOException {\n+        Gson gson = new Gson();\n+        String json = new String(Files.readAllBytes(Paths.get(path)));\n+        return gson.fromJson(json, SmartHome.class);\n+    }\n+}"
  },
  {
    "sha": "27aa4858286c04b431eb02a8d9efcd6bfda920ae",
    "filename": "src/main/java/ru/sbt/mipt/oop/IteratorCreator.java",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/Heiter12321/smart-home-2021/blob/717b188b30cb53d168d5f02b70b004e95115e748/src/main/java/ru/sbt/mipt/oop/IteratorCreator.java",
    "raw_url": "https://github.com/Heiter12321/smart-home-2021/raw/717b188b30cb53d168d5f02b70b004e95115e748/src/main/java/ru/sbt/mipt/oop/IteratorCreator.java",
    "contents_url": "https://api.github.com/repos/Heiter12321/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/IteratorCreator.java?ref=717b188b30cb53d168d5f02b70b004e95115e748",
    "patch": "@@ -0,0 +1,16 @@\n+package ru.sbt.mipt.oop;\n+\n+import java.util.Collection;\n+\n+public class IteratorCreator {\n+    public IteratorCreator() {\n+    }\n+\n+    public HomeElementIterator getIterator(Action action, Collection<Light> lights, Collection<Door> doors) {\n+        if (action.getMethod().getDeclaringClass() == Light.class) {\n+            return new LightIterator(lights);\n+        } else {\n+            return new DoorIterator(doors);\n+        }\n+    }\n+}"
  },
  {
    "sha": "c3605c676fc0fc08d264cbba6628a20aaeb2fbef",
    "filename": "src/main/java/ru/sbt/mipt/oop/Light.java",
    "status": "modified",
    "additions": 8,
    "deletions": 8,
    "changes": 16,
    "blob_url": "https://github.com/Heiter12321/smart-home-2021/blob/717b188b30cb53d168d5f02b70b004e95115e748/src/main/java/ru/sbt/mipt/oop/Light.java",
    "raw_url": "https://github.com/Heiter12321/smart-home-2021/raw/717b188b30cb53d168d5f02b70b004e95115e748/src/main/java/ru/sbt/mipt/oop/Light.java",
    "contents_url": "https://api.github.com/repos/Heiter12321/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/Light.java?ref=717b188b30cb53d168d5f02b70b004e95115e748",
    "patch": "@@ -1,23 +1,23 @@\n package ru.sbt.mipt.oop;\n \n-public class Light {\n-    private boolean isOn;\n+public class Light implements HomeElement {\n+    private boolean isLightOn;\n     private final String id;\n \n-    public Light(String id, boolean isOn) {\n+    public Light(String id, boolean isLightOn) {\n         this.id = id;\n-        this.isOn = isOn;\n+        this.isLightOn = isLightOn;\n     }\n \n-    public boolean isOn() {\n-        return isOn;\n+    public boolean isLightOn() {\n+        return isLightOn;\n     }\n \n-    public String getId() {\n+    String getId() {\n         return id;\n     }\n \n     public void setOn(boolean on) {\n-        isOn = on;\n+        isLightOn = on;\n     }\n }"
  },
  {
    "sha": "8c618918ef1817675e9fd39a2e4cb0c8fc55d38d",
    "filename": "src/main/java/ru/sbt/mipt/oop/LightEventProcessor.java",
    "status": "added",
    "additions": 29,
    "deletions": 0,
    "changes": 29,
    "blob_url": "https://github.com/Heiter12321/smart-home-2021/blob/717b188b30cb53d168d5f02b70b004e95115e748/src/main/java/ru/sbt/mipt/oop/LightEventProcessor.java",
    "raw_url": "https://github.com/Heiter12321/smart-home-2021/raw/717b188b30cb53d168d5f02b70b004e95115e748/src/main/java/ru/sbt/mipt/oop/LightEventProcessor.java",
    "contents_url": "https://api.github.com/repos/Heiter12321/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/LightEventProcessor.java?ref=717b188b30cb53d168d5f02b70b004e95115e748",
    "patch": "@@ -0,0 +1,29 @@\n+package ru.sbt.mipt.oop;\n+\n+import static ru.sbt.mipt.oop.SensorEventType.LIGHT_ON;\n+\n+public class LightEventProcessor implements EventProcess {\n+    private final SmartHome smartHome;\n+    private final SensorEvent event;\n+\n+    public LightEventProcessor(SmartHome smartHome, SensorEvent event) {\n+        this.smartHome = smartHome;\n+        this.event = event;\n+    }\n+\n+     public void processingEvent() {\n+        for (Room room : smartHome.getRooms()) {\n+            for (Light light : room.getLights()) {\n+                if (light.getId().equals(event.getObjectId())) {\n+                    if (event.getType() == LIGHT_ON) {\n+                        light.setOn(true);\n+                        System.out.println(\"Light \" + light.getId() + \" in room \" + room.getName() + \" was turned on.\");\n+                    } else {\n+                        light.setOn(false);\n+                        System.out.println(\"Light \" + light.getId() + \" in room \" + room.getName() + \" was turned off.\");\n+                    }\n+                }\n+            }\n+        }\n+    }\n+}"
  },
  {
    "sha": "52aa61bdc4c9badf246d67c436b4fab7810849e3",
    "filename": "src/main/java/ru/sbt/mipt/oop/LightEventProcessorTest.java",
    "status": "added",
    "additions": 43,
    "deletions": 0,
    "changes": 43,
    "blob_url": "https://github.com/Heiter12321/smart-home-2021/blob/717b188b30cb53d168d5f02b70b004e95115e748/src/main/java/ru/sbt/mipt/oop/LightEventProcessorTest.java",
    "raw_url": "https://github.com/Heiter12321/smart-home-2021/raw/717b188b30cb53d168d5f02b70b004e95115e748/src/main/java/ru/sbt/mipt/oop/LightEventProcessorTest.java",
    "contents_url": "https://api.github.com/repos/Heiter12321/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/LightEventProcessorTest.java?ref=717b188b30cb53d168d5f02b70b004e95115e748",
    "patch": "@@ -0,0 +1,43 @@\n+package ru.sbt.mipt.oop;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.PrintStream;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+import static ru.sbt.mipt.oop.SensorEventType.LIGHT_ON;\n+\n+class LightEventProcessorTest1 {\n+    @Test\n+    void processingEvent() {\n+        SmartHome smartHome = new SmartHome(HomeBuilder.createFourRooms());\n+        SensorEvent event = new LightSensorEvent(LIGHT_ON, \"3\");\n+        LightEventProcessor lightEventProcessor = new LightEventProcessor(smartHome, event);\n+\n+        ByteArrayOutputStream baOut = new ByteArrayOutputStream();\n+        PrintStream out = new PrintStream(baOut);\n+        System.setOut(out);\n+        System.setErr(out);\n+        lightEventProcessor.processingEvent();\n+\n+        assertEquals(baOut.toString(), \"Light 3 in room bathroom was turned on.\\n\");\n+    }\n+}\n+\n+class LightEventProcessorTest2 {\n+    @Test\n+    void processingEvent() {\n+        SmartHome smartHome = new SmartHome(HomeBuilder.createFourRooms());\n+        SensorEvent event = new LightSensorEvent(LIGHT_ON, \"7\");\n+        LightEventProcessor lightEventProcessor = new LightEventProcessor(smartHome, event);\n+\n+        ByteArrayOutputStream baOut = new ByteArrayOutputStream();\n+        PrintStream out = new PrintStream(baOut);\n+        System.setOut(out);\n+        System.setErr(out);\n+        lightEventProcessor.processingEvent();\n+\n+        assertEquals(baOut.toString(), \"Light 7 in room hall was turned on.\\n\");\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "76b65ebca3436f25fca9e49a8e70fd9f973804bb",
    "filename": "src/main/java/ru/sbt/mipt/oop/LightIterator.java",
    "status": "added",
    "additions": 27,
    "deletions": 0,
    "changes": 27,
    "blob_url": "https://github.com/Heiter12321/smart-home-2021/blob/717b188b30cb53d168d5f02b70b004e95115e748/src/main/java/ru/sbt/mipt/oop/LightIterator.java",
    "raw_url": "https://github.com/Heiter12321/smart-home-2021/raw/717b188b30cb53d168d5f02b70b004e95115e748/src/main/java/ru/sbt/mipt/oop/LightIterator.java",
    "contents_url": "https://api.github.com/repos/Heiter12321/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/LightIterator.java?ref=717b188b30cb53d168d5f02b70b004e95115e748",
    "patch": "@@ -0,0 +1,27 @@\n+package ru.sbt.mipt.oop;\n+\n+import java.util.Collection;\n+import java.util.Iterator;\n+\n+public class LightIterator implements HomeElementIterator {\n+    private final Collection<Light> lights;\n+    private final Iterator<Light> iterator;\n+\n+    public LightIterator(Collection<Light> lights) {\n+        this.lights = lights;\n+        this.iterator = lights.iterator();\n+    }\n+\n+    @Override\n+    public HomeElement getNext() {\n+        if (hasMore()) {\n+            return iterator.next();\n+        }\n+        return null;\n+    }\n+\n+    @Override\n+    public boolean hasMore() {\n+        return iterator.hasNext();\n+    }\n+}"
  },
  {
    "sha": "bffef9a6a397bfa7868bcd0328c899c4483ac7f9",
    "filename": "src/main/java/ru/sbt/mipt/oop/LightSensorEvent.java",
    "status": "added",
    "additions": 27,
    "deletions": 0,
    "changes": 27,
    "blob_url": "https://github.com/Heiter12321/smart-home-2021/blob/717b188b30cb53d168d5f02b70b004e95115e748/src/main/java/ru/sbt/mipt/oop/LightSensorEvent.java",
    "raw_url": "https://github.com/Heiter12321/smart-home-2021/raw/717b188b30cb53d168d5f02b70b004e95115e748/src/main/java/ru/sbt/mipt/oop/LightSensorEvent.java",
    "contents_url": "https://api.github.com/repos/Heiter12321/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/LightSensorEvent.java?ref=717b188b30cb53d168d5f02b70b004e95115e748",
    "patch": "@@ -0,0 +1,27 @@\n+package ru.sbt.mipt.oop;\n+\n+public class LightSensorEvent implements SensorEvent{\n+    private final SensorEventType type;\n+    private final String objectId;\n+\n+    public LightSensorEvent(SensorEventType type, String objectId) {\n+        this.type = type;\n+        this.objectId = objectId;\n+    }\n+\n+    public SensorEventType getType() {\n+        return type;\n+    }\n+\n+    public String getObjectId() {\n+        return objectId;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"DoorSensorEvent{\" +\n+                \"type=\" + type +\n+                \", objectId='\" + objectId + '\\'' +\n+                '}';\n+    }\n+}"
  }
]
