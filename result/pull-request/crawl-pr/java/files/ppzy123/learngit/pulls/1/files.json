[
  {
    "sha": "bdb96c388a116f978ae7e3aa7bf3cf37cf55a3eb",
    "filename": "221801405/READNE.md",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/ppzy123/learngit/blob/fd6665b5cf741036f6bb6dab32351943cc62adc7/221801405/READNE.md",
    "raw_url": "https://github.com/ppzy123/learngit/raw/fd6665b5cf741036f6bb6dab32351943cc62adc7/221801405/READNE.md",
    "contents_url": "https://api.github.com/repos/ppzy123/learngit/contents/221801405/READNE.md?ref=fd6665b5cf741036f6bb6dab32351943cc62adc7",
    "patch": "@@ -1,5 +1,5 @@\n + 将output.txt放入项目的目录，用的是相对目录\n-+ main方法里已经写好了，直接运行即可\n++ main方法里无需控制台输入，直接运行即可\n + show（）方法注释去掉可以让结果显示在控制台\n + [寒假作业2/2链接](https://edu.cnblogs.com/campus/fzu/2021SpringSoftwareEngineeringPractice/homework/11740)\n + [博客链接](https://www.cnblogs.com/blogofpzy/p/14495730.html)\n\\ No newline at end of file"
  },
  {
    "sha": "49839842dc265f6971882847ef1a2921e0b86a09",
    "filename": "221801405/codestyle.md",
    "status": "modified",
    "additions": 16,
    "deletions": 7,
    "changes": 23,
    "blob_url": "https://github.com/ppzy123/learngit/blob/fd6665b5cf741036f6bb6dab32351943cc62adc7/221801405/codestyle.md",
    "raw_url": "https://github.com/ppzy123/learngit/raw/fd6665b5cf741036f6bb6dab32351943cc62adc7/221801405/codestyle.md",
    "contents_url": "https://api.github.com/repos/ppzy123/learngit/contents/221801405/codestyle.md?ref=fd6665b5cf741036f6bb6dab32351943cc62adc7",
    "patch": "@@ -1,16 +1,25 @@\n-##1.缩进:\n+\n++ 1.缩进:\n+\n tab缩进默认4个空格\n-##2.变量名\n++ 2.变量名\n+\n 使用lowerCamelCase风格，小驼峰形式\n-##3.每行最多字符数\n++ 3.每行最多字符数\n+\n 保证代码基本能在视野正中，超出视野在适当未知换行。\n-##4.函数、类命名\n++ 4.函数、类命名\n+\n 函数命名：同变量命名\n 类命名：\n 使用UpperCamelCase风格，驼峰形式\n-##5.常量\n++ 5.常量\n+\n 命名全部大写并用分割符隔开\n-##6.其他规则\n++ 6.其他规则\n+\n 方法采取大括号独立一行\n+\n while也采取大括号独立行\n-if语句和for循环等较少代码的则采取左括号同行\n\\ No newline at end of file\n+\n+if语句和for循环等较少代码的则采取左括号同行"
  },
  {
    "sha": "352a78aa23239ff5872fad3f56c4fc11233999f0",
    "filename": "221801405/src/Lib.java",
    "status": "modified",
    "additions": 30,
    "deletions": 25,
    "changes": 55,
    "blob_url": "https://github.com/ppzy123/learngit/blob/fd6665b5cf741036f6bb6dab32351943cc62adc7/221801405/src/Lib.java",
    "raw_url": "https://github.com/ppzy123/learngit/raw/fd6665b5cf741036f6bb6dab32351943cc62adc7/221801405/src/Lib.java",
    "contents_url": "https://api.github.com/repos/ppzy123/learngit/contents/221801405/src/Lib.java?ref=fd6665b5cf741036f6bb6dab32351943cc62adc7",
    "patch": "@@ -14,12 +14,14 @@\n     boolean operable=false;\n     HashMap<String,Integer> map = new HashMap<>();\n     List<Map.Entry<String,Integer>> list;\n-    public void SetPath(String out,String in)\n+\n+    public void setPath(String out,String in)//设置文件地址\n     {\n         readPath=out;\n         writePath=in;\n     }\n-    public void Open() throws IOException\n+\n+    public void open() throws IOException//打开文件并开启缓冲流\n     {\n         operable=true;\n         readFile=new File(readPath);\n@@ -40,30 +42,28 @@ public void Open() throws IOException\n             }\n         }\n         if(operable) {\n-            reader = new BufferedReader(new FileReader(readFile));\n-            writer = new BufferedWriter(new FileWriter(writeFile));\n             str=new StringBuilder();\n             System.out.println(\"文件打开成功！\");\n         }\n     }\n-    public void Read() throws IOException\n+\n+    public void charsNumberCount() throws IOException//字符计算\n     {\n+        charNum=0;\n+        reader = new BufferedReader(new FileReader(readFile));\n         int flag;\n         while ((flag = reader.read()) != -1) {\n             str.append((char) flag);\n         }\n-    }\n-    public void charsNumberCount()\n-    {\n-        charNum=0;\n         char[] ch = str.toString().toCharArray();\n         for(int i = 0; i < ch.length; i++) {\n             if(ch[i] >= 0 && ch[i] <= 127) {\n                 charNum++;\n             }\n         }\n     }\n-    public void linesNumberCount() throws IOException\n+\n+    public void linesNumberCount() throws IOException//行数计算\n     {\n         reader = new BufferedReader(new FileReader(readFile));\n         String line;\n@@ -75,7 +75,8 @@ public void linesNumberCount() throws IOException\n             }\n         }\n     }\n-    public void wordsNumberCount() throws IOException\n+\n+    public void wordsNumberCount() throws IOException//单词数计算\n     {\n         reader = new BufferedReader(new FileReader(readFile));\n         String line;\n@@ -84,23 +85,24 @@ public void wordsNumberCount() throws IOException\n             for (int i=0;i<line.length();i++) {\n                 line=line.toLowerCase();\n             }\n-                String[] str=line.split(\" \");\n-                for(int i=0;i<str.length;i++)\n+            String[] str=line.split(\" \");\n+            for(int i=0;i<str.length;i++)\n+            {\n+                if(str[i].length()>3&&str[i].charAt(0)>'9'&&str[i].charAt(0)>'0')\n                 {\n-                    if(str[i].length()>3&&str[i].charAt(0)>'9'&&str[i].charAt(0)>'0')\n-                    {\n-                        wordNum++;\n-                        if(map.get(str[i])==null){\n-                            map.put(str[i],1);\n-                        }\n-                        else{\n-                            map.put(str[i],map.get(str[i])+1);\n-                        }\n+                    wordNum++;\n+                    if(map.get(str[i])==null){\n+                        map.put(str[i],1);\n+                    }\n+                    else{\n+                        map.put(str[i],map.get(str[i])+1);\n                     }\n                 }\n+            }\n         }\n     }\n-    public void wordSort()\n+\n+    public void wordSort()//排序\n     {\n         int i=0;\n         list = new ArrayList<Map.Entry<String,Integer>>((Collection<? extends Map.Entry<String, Integer>>) map.entrySet());\n@@ -118,7 +120,8 @@ public int compare(Map.Entry<String, Integer> o1,\n             }\n         });\n     }\n-    public void show()\n+\n+    public void show()//用于控制台输出\n     {\n         int i=0;\n         for(Map.Entry<String,Integer> mapping:list){\n@@ -130,8 +133,10 @@ public void show()\n         System.out.println(lineNum);\n         System.out.println(wordNum);\n     }\n-    public void write() throws IOException\n+\n+    public void write() throws IOException//写入文件\n     {\n+        writer = new BufferedWriter(new FileWriter(writeFile));\n         int i=0;\n         String s=\"\";\n         s+=\"characters:\"+charNum+\"\\n\";"
  },
  {
    "sha": "e2cfb2b3a3423e921efc53af69b3f123cfc2c703",
    "filename": "221801405/src/WordCount.java",
    "status": "modified",
    "additions": 8,
    "deletions": 5,
    "changes": 13,
    "blob_url": "https://github.com/ppzy123/learngit/blob/fd6665b5cf741036f6bb6dab32351943cc62adc7/221801405/src/WordCount.java",
    "raw_url": "https://github.com/ppzy123/learngit/raw/fd6665b5cf741036f6bb6dab32351943cc62adc7/221801405/src/WordCount.java",
    "contents_url": "https://api.github.com/repos/ppzy123/learngit/contents/221801405/src/WordCount.java?ref=fd6665b5cf741036f6bb6dab32351943cc62adc7",
    "patch": "@@ -1,14 +1,17 @@\n import java.io.IOException;\n+import java.util.Scanner;\n \n public class WordCount {\n     static public void main(String[] args) throws IOException {\n+        String inPath=\"input.txt\";\n+        String outPath=\"output.txt\";\n         /*Scanner input=new Scanner(System.in);\n-        String str=input.next();\n-        System.out.println(str);*/\n+        inPath=input.next();\n+        outPath=input.next();*/\n+        //将上面的注释去掉改为控制台输入，不然直接运行无需输入\n         Lib wc=new Lib();\n-        wc.SetPath(\"output.txt\",\"input.txt\");\n-        wc.Open();\n-        wc.Read();\n+        wc.setPath(\"output.txt\",\"input.txt\");\n+        wc.open();\n         wc.charsNumberCount();\n         wc.wordsNumberCount();\n         wc.linesNumberCount();"
  }
]
