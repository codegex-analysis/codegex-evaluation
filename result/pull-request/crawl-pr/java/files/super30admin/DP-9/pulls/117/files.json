[
  {
    "sha": "d6d4193e8e8d4e9b7186099b1a55e17419b644d0",
    "filename": "longestSubsequence.py",
    "status": "added",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/super30admin/DP-9/blob/be1310758ef2c388f1f3bc7a2d6f8a6725af5700/longestSubsequence.py",
    "raw_url": "https://github.com/super30admin/DP-9/raw/be1310758ef2c388f1f3bc7a2d6f8a6725af5700/longestSubsequence.py",
    "contents_url": "https://api.github.com/repos/super30admin/DP-9/contents/longestSubsequence.py?ref=be1310758ef2c388f1f3bc7a2d6f8a6725af5700",
    "patch": "@@ -0,0 +1,10 @@\n+#TC : O(N * N)\n+#SC: O(N)\n+\n+def lengthOfLIS(self, nums: List[int]) -> int:\n+        dp = [1]*len(nums)\n+        for i in range(len(nums)):\n+            for j in range(i): \n+                if nums[i] > nums[j] and dp[i] == dp [j]:\n+                    dp[i] += 1\n+        return max(dp)\n\\ No newline at end of file"
  },
  {
    "sha": "e04d1e7f4c41915dc7c88867a90a43f74584c9f5",
    "filename": "russianDoll.py",
    "status": "added",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/super30admin/DP-9/blob/be1310758ef2c388f1f3bc7a2d6f8a6725af5700/russianDoll.py",
    "raw_url": "https://github.com/super30admin/DP-9/raw/be1310758ef2c388f1f3bc7a2d6f8a6725af5700/russianDoll.py",
    "contents_url": "https://api.github.com/repos/super30admin/DP-9/contents/russianDoll.py?ref=be1310758ef2c388f1f3bc7a2d6f8a6725af5700",
    "patch": "@@ -0,0 +1,18 @@\n+#TC: O(nlogn)\n+#SC: O(N)\n+\n+class Solution(object):\n+    def maxEnvelopes(self, envelopes):\n+        envelopes.sort(key = lambda a: (a[0], -a[1]))\n+        \n+        dp = []\n+        \n+        for w, h in envelopes:\n+            index = bisect_left(dp, h)\n+            \n+            if index == len(dp):\n+                dp.append(h)\n+            else:\n+                dp[index] = h\n+        \n+        return len(dp)\n\\ No newline at end of file"
  }
]
