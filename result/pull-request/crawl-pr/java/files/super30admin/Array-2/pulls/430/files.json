[
  {
    "sha": "c40e323bb173ae2bdbcf6b6c4be609f14f84f6b7",
    "filename": "que-1.java",
    "status": "added",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/super30admin/Array-2/blob/bb6eb9cd767003151731bd67875770cc1509f96d/que-1.java",
    "raw_url": "https://github.com/super30admin/Array-2/raw/bb6eb9cd767003151731bd67875770cc1509f96d/que-1.java",
    "contents_url": "https://api.github.com/repos/super30admin/Array-2/contents/que-1.java?ref=bb6eb9cd767003151731bd67875770cc1509f96d",
    "patch": "@@ -0,0 +1,22 @@\n+// Time Complexity : O(n)\r\n+// Space Complexity :O(1)\r\n+// Did this code successfully run on Leetcode :\r\n+// Any problem you faced while coding this :\r\n+\r\n+\r\n+// Your code here along with comments explaining your approach\r\n+class Solution {\r\n+    public List<Integer> findDisappearedNumbers(int[] nums) {\r\n+        List<Integer> result = new ArrayList<>();\r\n+        if(nums == null || nums.length == 0 ) return result;\r\n+        for(int i=0;i<nums.length;i++){\r\n+            int idx = Math.abs(nums[i])-1;\r\n+            if(nums[idx] > 0){\r\n+                nums[idx] = nums[idx]*(-1); }\r\n+        }\r\n+        for(int i=0;i<nums.length;i++){\r\n+            if(nums[i]>0){\r\n+                result.add(i+1);}}\r\n+        return result;\r\n+}\r\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "4be829476ff9aabbeba1a9efbcf84139e964122f",
    "filename": "que-2.java",
    "status": "added",
    "additions": 39,
    "deletions": 0,
    "changes": 39,
    "blob_url": "https://github.com/super30admin/Array-2/blob/bb6eb9cd767003151731bd67875770cc1509f96d/que-2.java",
    "raw_url": "https://github.com/super30admin/Array-2/raw/bb6eb9cd767003151731bd67875770cc1509f96d/que-2.java",
    "contents_url": "https://api.github.com/repos/super30admin/Array-2/contents/que-2.java?ref=bb6eb9cd767003151731bd67875770cc1509f96d",
    "patch": "@@ -0,0 +1,39 @@\n+// Time Complexity : O(m*n)\r\n+// Space Complexity :O(1)\r\n+// Did this code successfully run on Leetcode :\r\n+// Any problem you faced while coding this :\r\n+\r\n+\r\n+// Your code here along with comments explaining your approach\r\n+class Solution {\r\n+    public void gameOfLife(int[][] board) {\r\n+        if(board == null || board.length == 0 || board[0].length == 0 ) return ;\r\n+        int m= board.length;\r\n+        int n= board[0].length;\r\n+        for(int i = 0;i<m;i++){\r\n+            for(int j=0;j<n;j++){\r\n+                int count = countLives(board,i,j,m,n);\r\n+                if(board[i][j] == 1 && (count<2 || count>3)){board[i][j] = 3;}\r\n+                if(board[i][j] == 0 && (count == 3)){board[i][j] = 2;}\r\n+            }\r\n+        }\r\n+        for(int i = 0;i<m;i++){\r\n+            for(int j=0;j<n;j++){if(board[i][j] == 3) board[i][j] = 0;\r\n+                if(board[i][j] == 2) board[i][j] = 1;                 \r\n+            }\r\n+        }\r\n+    }\r\n+    private int countLives(int[][] board, int i, int j,int m, int n){\r\n+        int result = 0;\r\n+        int[][]dirs = {{0,1},{0,-1},{1,0},{-1,0},{1,1},{1,-1},{-1,1},{-1,-1}};\r\n+        for(int []dir: dirs){\r\n+            int r = i + dir[0];\r\n+            int c = j + dir[1];\r\n+            if(r >= 0 && r<m && c>=0 && c<n && (board[r][c] == 1 || board[r][c] == 3)){\r\n+                result++;\r\n+                \r\n+            }\r\n+        }\r\n+        return result;\r\n+    }\r\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "b1c318c690aaafda938d4cae64f44b0f973726e3",
    "filename": "que-3.java",
    "status": "added",
    "additions": 59,
    "deletions": 0,
    "changes": 59,
    "blob_url": "https://github.com/super30admin/Array-2/blob/bb6eb9cd767003151731bd67875770cc1509f96d/que-3.java",
    "raw_url": "https://github.com/super30admin/Array-2/raw/bb6eb9cd767003151731bd67875770cc1509f96d/que-3.java",
    "contents_url": "https://api.github.com/repos/super30admin/Array-2/contents/que-3.java?ref=bb6eb9cd767003151731bd67875770cc1509f96d",
    "patch": "@@ -0,0 +1,59 @@\n+// Time Complexity : O(n)\r\n+// Space Complexity :O(1)\r\n+// Did this code successfully run on Leetcode :\r\n+// Any problem you faced while coding this :\r\n+\r\n+\r\n+// Your code here along with comments explaining your approach\r\n+public class Solution{\r\n+    static class Pair{\r\n+        int min;int max;\r\n+    }\r\n+    static Pair getMinMax(int arr[],int n){\r\n+        Pair minmax = new Pair();\r\n+        int i = 0;\r\n+        minmax.max = arr[0];\r\n+        minmax.min = arr[0];\r\n+        if(n==1 )\r\n+        {\r\n+            return minmax;\r\n+        }\r\n+        for(i = 0; i<n-1; i=i+2){\r\n+            if(i+1>=n){\r\n+              System.out.println(i);\r\n+               if(minmax.max < arr[i]){\r\n+                    minmax.max = arr[i];\r\n+                } \r\n+                if(minmax.min>arr[i]){\r\n+                    minmax.min = arr[i];\r\n+                } \r\n+                return minmax;\r\n+            }\r\n+            if(arr[i]>arr[i+1]){\r\n+                if(minmax.max < arr[i]){\r\n+                    minmax.max = arr[i];\r\n+                }\r\n+                if(minmax.min>arr[i+1]){\r\n+                    minmax.min = arr[i+1];\r\n+                }\r\n+            }\r\n+            else\r\n+            {\r\n+                if(minmax.max < arr[i+1]){\r\n+                       minmax.max = arr[i+1]; \r\n+                }\r\n+                if(minmax.min>arr[i]){\r\n+                    minmax.min = arr[i];\r\n+                }  }\r\n+        }\r\n+    return minmax;\r\n+    }\r\n+    public static void main(String args[]) {\r\n+        int arr[] = {1000, 11, 445, 1, 330};\r\n+        int arr_size = 5;\r\n+        Pair minmax = getMinMax(arr, arr_size);\r\n+        System.out.printf(\"\\nMinimum element is %d\", minmax.min);\r\n+        System.out.printf(\"\\nMaximum element is %d\", minmax.max);\r\n+ \r\n+    }\r\n+}\n\\ No newline at end of file"
  }
]
