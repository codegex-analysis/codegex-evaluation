[
  {
    "sha": "5db8b06261fea44d9fbc57f7a5dcc949bca6ffe2",
    "filename": "Candy.py",
    "status": "added",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/super30admin/Greedy-1/blob/b06b3accb3735ef59284f4427d6c95b7f2a14fe9/Candy.py",
    "raw_url": "https://github.com/super30admin/Greedy-1/raw/b06b3accb3735ef59284f4427d6c95b7f2a14fe9/Candy.py",
    "contents_url": "https://api.github.com/repos/super30admin/Greedy-1/contents/Candy.py?ref=b06b3accb3735ef59284f4427d6c95b7f2a14fe9",
    "patch": "@@ -0,0 +1,18 @@\n+class Solution:\n+    def candy(self, ratings: List[int]) -> int:\n+        # Time, Space Complexity: O(n)\n+        if(ratings==None or len(ratings)==0):\n+            return\n+        o = [1]\n+        \n+        for i in range(1,len(ratings)):\n+            if(ratings[i]>ratings[i-1]):\n+                o.append(o[-1]+1)\n+            else:\n+                o.append(1)\n+        \n+        for i in range(len(ratings)-2,-1,-1):\n+            if(ratings[i]>ratings[i+1]):\n+                o[i]= max(o[i], o[i+1]+1)\n+\n+        return sum(o)"
  },
  {
    "sha": "5663a82e5f1c5f7c372c6b0fa4d75cf71765d46a",
    "filename": "JumpGame.py",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/super30admin/Greedy-1/blob/b06b3accb3735ef59284f4427d6c95b7f2a14fe9/JumpGame.py",
    "raw_url": "https://github.com/super30admin/Greedy-1/raw/b06b3accb3735ef59284f4427d6c95b7f2a14fe9/JumpGame.py",
    "contents_url": "https://api.github.com/repos/super30admin/Greedy-1/contents/JumpGame.py?ref=b06b3accb3735ef59284f4427d6c95b7f2a14fe9",
    "patch": "@@ -0,0 +1,13 @@\n+class Solution:\n+    def canJump(self, nums: List[int]) -> bool:\n+        '''\n+        Greedy: O(n)\n+        Choose Maximum\n+        '''\n+        maxm = 0\n+        for i in range(0,len(nums)):\n+            if(i>maxm):\n+                return False\n+            maxm = max(maxm,i + nums[i])\n+        \n+        return True"
  },
  {
    "sha": "513faac34a9e23915265a2009008039eef9179f5",
    "filename": "JumpGame2_BFS.py",
    "status": "added",
    "additions": 33,
    "deletions": 0,
    "changes": 33,
    "blob_url": "https://github.com/super30admin/Greedy-1/blob/b06b3accb3735ef59284f4427d6c95b7f2a14fe9/JumpGame2_BFS.py",
    "raw_url": "https://github.com/super30admin/Greedy-1/raw/b06b3accb3735ef59284f4427d6c95b7f2a14fe9/JumpGame2_BFS.py",
    "contents_url": "https://api.github.com/repos/super30admin/Greedy-1/contents/JumpGame2_BFS.py?ref=b06b3accb3735ef59284f4427d6c95b7f2a14fe9",
    "patch": "@@ -0,0 +1,33 @@\n+class Solution:\n+    def jump(self, nums: List[int]) -> int:\n+        '''\n+        Time Complexity: O(n)\n+        Space Complexity: O(n)\n+        '''\n+        # base case\n+        if(len(nums)==1):\n+            return 0\n+        if(nums[0]>=len(nums)-1):\n+            return 1\n+        # visited to keep a check on how many elements visited, every element is added to queue only once\n+        visited=0\n+        q = deque([0])\n+        # jumps is the count for minimum number of jumps\n+        jumps=0\n+        while(len(q)>0):\n+            size = len(q)\n+            for i in range(0,size):\n+                ind = q.popleft()\n+                if(len(q)>0):\n+                    z = max(ind,q[-1])\n+                else:\n+                    z = ind\n+                # add the non visited children to queue\n+                for j in range(z+1,ind+nums[ind]+1):\n+                    if(visited<j):\n+                        if(j+nums[j]>=len(nums)-1):\n+                            return jumps+2\n+                        q.append(j)\n+                        visited+=1           \n+            jumps+=1\n+        return jumps"
  },
  {
    "sha": "889a1cae713cd8b665e076c9fd5a036f5a52cf86",
    "filename": "JumpGame2_Greedy.py",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/super30admin/Greedy-1/blob/b06b3accb3735ef59284f4427d6c95b7f2a14fe9/JumpGame2_Greedy.py",
    "raw_url": "https://github.com/super30admin/Greedy-1/raw/b06b3accb3735ef59284f4427d6c95b7f2a14fe9/JumpGame2_Greedy.py",
    "contents_url": "https://api.github.com/repos/super30admin/Greedy-1/contents/JumpGame2_Greedy.py?ref=b06b3accb3735ef59284f4427d6c95b7f2a14fe9",
    "patch": "@@ -0,0 +1,19 @@\n+class Solution:\n+    def jump(self, nums: List[int]) -> int:\n+        # Time Complexity: O(n)\n+        # Space Complexity: O(1)\n+        n = len(nums)\n+        if n < 2:\n+            return 0\n+        curr_max = nums[0]\n+        nxtmax = nums[0]\n+        jumps = 1\n+        \n+        for i in range(1,len(nums)):\n+            if(curr_max>=len(nums)-1):\n+                return jumps\n+            nxtmax = max(i+nums[i], nxtmax)\n+            if(i==curr_max):\n+                curr_max = nxtmax\n+                jumps+=1\n+            "
  }
]
