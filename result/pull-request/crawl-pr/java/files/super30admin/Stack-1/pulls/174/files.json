[
  {
    "sha": "2c71ad65bbb22e3c09227eb9f0c30b212a28f0dc",
    "filename": "DailyTemperatues.java",
    "status": "added",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/super30admin/Stack-1/blob/c4cdc4763c9d1161e53a2d79aa0b5ee148395515/DailyTemperatues.java",
    "raw_url": "https://github.com/super30admin/Stack-1/raw/c4cdc4763c9d1161e53a2d79aa0b5ee148395515/DailyTemperatues.java",
    "contents_url": "https://api.github.com/repos/super30admin/Stack-1/contents/DailyTemperatues.java?ref=c4cdc4763c9d1161e53a2d79aa0b5ee148395515",
    "patch": "@@ -0,0 +1,20 @@\n+class Solution {\n+    public int[] dailyTemperatures(int[] t) {\n+        Stack<Integer> ind = new Stack<>();\n+        int[] res = new int[t.length];\n+        ind.push(0);\n+        int i=1;\n+        while(i<t.length){\n+            while(!ind.isEmpty() && t[ind.peek()]<t[i]){\n+                res[ind.peek()] = i-ind.peek();\n+                ind.pop();\n+            }\n+            ind.push(i);\n+            i++;\n+        }\n+        return res;\n+    }\n+}\n+\n+//Time complexity : O(N)\n+//Space complexity : O(N)"
  },
  {
    "sha": "697135c32a7b8b8eb67e404f82ab570dc33fa08b",
    "filename": "NextGreaterElement.java",
    "status": "added",
    "additions": 24,
    "deletions": 0,
    "changes": 24,
    "blob_url": "https://github.com/super30admin/Stack-1/blob/c4cdc4763c9d1161e53a2d79aa0b5ee148395515/NextGreaterElement.java",
    "raw_url": "https://github.com/super30admin/Stack-1/raw/c4cdc4763c9d1161e53a2d79aa0b5ee148395515/NextGreaterElement.java",
    "contents_url": "https://api.github.com/repos/super30admin/Stack-1/contents/NextGreaterElement.java?ref=c4cdc4763c9d1161e53a2d79aa0b5ee148395515",
    "patch": "@@ -0,0 +1,24 @@\n+class Solution {\n+    public int[] nextGreaterElements(int[] t) {\n+        Stack<Integer> ind = new Stack<>();\n+        int[] res = new int[t.length];\n+        Arrays.fill(res, -1);\n+        ind.push(0);\n+        int i=1;\n+        while(i<t.length){\n+            while(!ind.isEmpty() && t[ind.peek()]<t[i]){\n+                res[ind.peek()] = t[i];\n+                ind.pop();\n+            }\n+            if(ind.contains(i))\n+                return res;\n+            ind.push(i);\n+            i++;\n+            i = i%t.length;\n+        }\n+        return res;\n+    }\n+}\n+\n+//Time complexity : O(N)\n+//Space complexity : O(N)"
  }
]
