[
  {
    "sha": "e306609567b81e8f528992d9657ada60d1a7ab57",
    "filename": "daily_temperature.py",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/super30admin/Stack-1/blob/4a38286d40aa7f18188db02b8f7523c99e5a4c44/daily_temperature.py",
    "raw_url": "https://github.com/super30admin/Stack-1/raw/4a38286d40aa7f18188db02b8f7523c99e5a4c44/daily_temperature.py",
    "contents_url": "https://api.github.com/repos/super30admin/Stack-1/contents/daily_temperature.py?ref=4a38286d40aa7f18188db02b8f7523c99e5a4c44",
    "patch": "@@ -0,0 +1,19 @@\n+# Time Complexity : O(n)\n+# Space Complexity : O(n)\n+\n+class Solution:\n+    def dailyTemperatures(self, T: List[int]) -> List[int]:\n+        if not T: return\n+        \n+        n = len(T)\n+        result = [0] * n\n+        stack = []\n+        \n+        for i in range(n):\n+            while stack and T[i] > T[stack[-1]]:\n+                idx = stack.pop()\n+                result[idx] = i - idx\n+                \n+            stack.append(i)\n+        \n+        return result\n\\ No newline at end of file"
  },
  {
    "sha": "4642c6c5c46b361a5047517ec1fb823da501f49b",
    "filename": "nxt_grtr_elem_ii.py",
    "status": "added",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/super30admin/Stack-1/blob/4a38286d40aa7f18188db02b8f7523c99e5a4c44/nxt_grtr_elem_ii.py",
    "raw_url": "https://github.com/super30admin/Stack-1/raw/4a38286d40aa7f18188db02b8f7523c99e5a4c44/nxt_grtr_elem_ii.py",
    "contents_url": "https://api.github.com/repos/super30admin/Stack-1/contents/nxt_grtr_elem_ii.py?ref=4a38286d40aa7f18188db02b8f7523c99e5a4c44",
    "patch": "@@ -0,0 +1,22 @@\n+# Time Complexity : O(n)\n+# Space Complexity : O(n)\n+\n+class Solution:\n+    def nextGreaterElements(self, nums: List[int]) -> List[int]:\n+        if not nums: return []\n+        \n+        n = len(nums)\n+        result = [-1] * n\n+        stack = []          # All indices go in stack\n+        next_pass = 0\n+        \n+        for i in range(2 * n):      # 2-pass as non-empty stack\n+            while stack and nums[i % n] > nums[stack[-1]]:\n+                idx = stack.pop()\n+                result[idx] = nums[i % n]\n+            \n+            # Only if first pass, push.(Dont push twice.)\n+            if i < n:\n+                stack.append(i)\n+            \n+        return result\n\\ No newline at end of file"
  },
  {
    "sha": "1739a9cbcbab2e211048d4cb09ef2afe514e4081",
    "filename": "sample.java",
    "status": "removed",
    "additions": 0,
    "deletions": 7,
    "changes": 7,
    "blob_url": "https://github.com/super30admin/Stack-1/blob/155a70399465410c0bd26d93c57cb02df8086f70/sample.java",
    "raw_url": "https://github.com/super30admin/Stack-1/raw/155a70399465410c0bd26d93c57cb02df8086f70/sample.java",
    "contents_url": "https://api.github.com/repos/super30admin/Stack-1/contents/sample.java?ref=155a70399465410c0bd26d93c57cb02df8086f70",
    "patch": "@@ -1,7 +0,0 @@\n-// Time Complexity :\n-// Space Complexity :\n-// Did this code successfully run on Leetcode :\n-// Any problem you faced while coding this :\n-\n-\n-// Your code here along with comments explaining your approach"
  }
]
