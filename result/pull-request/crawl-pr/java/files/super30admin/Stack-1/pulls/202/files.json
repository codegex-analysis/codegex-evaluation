[
  {
    "sha": "04eec94da07aa6f6d0a4ba4d4ee421b517db6d22",
    "filename": "dailyTemp.py",
    "status": "added",
    "additions": 45,
    "deletions": 0,
    "changes": 45,
    "blob_url": "https://github.com/super30admin/Stack-1/blob/74d0a95ad287a567e9cd469b29a6b81e18e6d273/dailyTemp.py",
    "raw_url": "https://github.com/super30admin/Stack-1/raw/74d0a95ad287a567e9cd469b29a6b81e18e6d273/dailyTemp.py",
    "contents_url": "https://api.github.com/repos/super30admin/Stack-1/contents/dailyTemp.py?ref=74d0a95ad287a567e9cd469b29a6b81e18e6d273",
    "patch": "@@ -0,0 +1,45 @@\n+# Time Complexity : O(N)\n+# Space Complexity : O(N)\n+# Did this code successfully run on Leetcode : Yes\n+# Any problem you faced while coding this : Nope\n+\n+\n+# Your code here along with comments explaining your approach\n+\n+class Solution:\n+    def dailyTemperatures(self, T: List[int]) -> List[int]:\n+        res = [0 for i in range(len(T))]\n+        \n+        if not T:\n+            return res\n+        stack = []\n+        \n+        for i in range(len(T)):\n+            while stack and T[i] > T[stack[-1]]:\n+                idx = stack.pop()\n+                res[idx] = i - idx\n+            stack.append(i)\n+        \n+        return res\n+#BRUTE FORCE     \n+class Solution:\n+    def dailyTemperatures(self, T: List[int]) -> List[int]:\n+        #brute force n^2\n+        res = []\n+        if not T:\n+            return res\n+        \n+        for i in range(len(T)):\n+            count = 0\n+            for j in range(i+1, len(T)):\n+                count += 1\n+               \n+                if T[i] < T[j]:\n+                    res.append(count)\n+                    break\n+                if j == len(T)-1:\n+                    res.append(0)\n+            \n+            if i == len(T)-1:\n+                res.append(0)\n+        return res\n\\ No newline at end of file"
  },
  {
    "sha": "6da1023e5a634511f9c7915d4bfbe68d291fe14d",
    "filename": "nextGreaterElement.py",
    "status": "added",
    "additions": 26,
    "deletions": 0,
    "changes": 26,
    "blob_url": "https://github.com/super30admin/Stack-1/blob/74d0a95ad287a567e9cd469b29a6b81e18e6d273/nextGreaterElement.py",
    "raw_url": "https://github.com/super30admin/Stack-1/raw/74d0a95ad287a567e9cd469b29a6b81e18e6d273/nextGreaterElement.py",
    "contents_url": "https://api.github.com/repos/super30admin/Stack-1/contents/nextGreaterElement.py?ref=74d0a95ad287a567e9cd469b29a6b81e18e6d273",
    "patch": "@@ -0,0 +1,26 @@\n+# Time Complexity : O(N)\n+# Space Complexity : O(N)\n+# Did this code successfully run on Leetcode :\n+# Any problem you faced while coding this :\n+\n+\n+# Your code here along with comments explaining your approach\n+\n+class Solution:\n+    def nextGreaterElements(self, nums: List[int]) -> List[int]:\n+        if not nums:\n+            return []\n+        n = len(nums)\n+        res = [-1 for i in range(len(nums))]\n+        \n+        stack = []\n+        \n+        for i in range(2*len(nums)):\n+            while stack and nums[i%len(nums)] > nums[stack[-1]]:\n+                idx = stack.pop()\n+                res[idx] = nums[i%len(nums)]\n+            \n+            if i < len(nums):\n+                stack.append(i)\n+                \n+        return res\n\\ No newline at end of file"
  }
]
