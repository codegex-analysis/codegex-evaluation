[
  {
    "sha": "ba44a7eb53e401abe02b03264b8ab309ba1ebb56",
    "filename": "PaintHouse.java",
    "status": "added",
    "additions": 41,
    "deletions": 0,
    "changes": 41,
    "blob_url": "https://github.com/super30admin/DP-2/blob/cbc3424f89850f1a7ac4f7849d0dd24663488c14/PaintHouse.java",
    "raw_url": "https://github.com/super30admin/DP-2/raw/cbc3424f89850f1a7ac4f7849d0dd24663488c14/PaintHouse.java",
    "contents_url": "https://api.github.com/repos/super30admin/DP-2/contents/PaintHouse.java?ref=cbc3424f89850f1a7ac4f7849d0dd24663488c14",
    "patch": "@@ -0,0 +1,41 @@\n+// Time Complexity :O(n)\r\n+// Space Complexity :\r\n+// Did this code successfully run on Leetcode :\r\n+// Any problem you faced while coding this :\r\n+\r\n+\r\n+public class PaintHouse {\r\n+\r\n+    public static int getMinimumPrice(int[][] cost) {\r\n+        int price = 0;\r\n+        int a=0;\r\n+        for (int i = 1; i < cost.length; i++) {\r\n+            for(int j=0;j<3;j++){\r\n+                a = Integer.MAX_VALUE;\r\n+                for(int k=0;k<3;k++){\r\n+                     \r\n+                    if(k!=j){\r\n+                        if(cost[i-1][k]<a)\r\n+                            a = cost[i-1][k];\r\n+                    \r\n+                    }\r\n+                } cost[i][j] += a;\r\n+               \r\n+            }\r\n+             System.out.println(cost[i][0]+\" \"+cost[i][1]+\" \"+cost[i][2]+\"\\n\");\r\n+        }\r\n+\r\n+        price = Math.min(Math.min(cost[cost.length - 1][0], cost[cost.length - 1][1]), cost[cost.length - 1][2]);\r\n+        return price;\r\n+    }\r\n+\r\n+    public static void main(String args[]) {\r\n+        int[][] cost = {\r\n+                {17, 32, 1}, {16, 2, 31}, {3, 33, 19}, {3, 1, 8}\r\n+        };\r\n+        int minCost = getMinimumPrice(cost);\r\n+        System.out.println(minCost);\r\n+\r\n+\r\n+    }\r\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "87af88648cb74e765dc013ed20406e7f9da7a4e3",
    "filename": "que-2.java",
    "status": "added",
    "additions": 27,
    "deletions": 0,
    "changes": 27,
    "blob_url": "https://github.com/super30admin/DP-2/blob/cbc3424f89850f1a7ac4f7849d0dd24663488c14/que-2.java",
    "raw_url": "https://github.com/super30admin/DP-2/raw/cbc3424f89850f1a7ac4f7849d0dd24663488c14/que-2.java",
    "contents_url": "https://api.github.com/repos/super30admin/DP-2/contents/que-2.java?ref=cbc3424f89850f1a7ac4f7849d0dd24663488c14",
    "patch": "@@ -0,0 +1,27 @@\n+// Time Complexity :\r\n+// Space Complexity :\r\n+// Did this code successfully run on Leetcode :\r\n+// Any problem you faced while coding this :\r\n+//Coin change 2\r\n+\r\n+// Your code here along with comments explaining your approach\r\n+class Solution {\r\n+    public int change(int amount, int[] coins) {\r\n+        int n=coins.length +1;\r\n+        int m =amount +1;\r\n+        int[][]dp = new int[n][m];\r\n+        for(int i =0;i<n;i++){\r\n+            dp[i][0]=1;}\r\n+            for(int i = 1; i<n;i++){\r\n+            for(int j = 1; j<m;j++){\r\n+            if(j< coins[i-1]){\r\n+                dp[i][j] = dp[i-1][j];\r\n+            }\r\n+            else{\r\n+                dp[i][j] = dp[i-1][j]+ dp[i][j-coins[i-1]];\r\n+            }\r\n+        }\r\n+        }\r\n+                return dp[n-1][m-1];\r\n+    }\r\n+}\n\\ No newline at end of file"
  }
]
