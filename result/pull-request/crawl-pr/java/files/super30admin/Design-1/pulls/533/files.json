[
  {
    "sha": "e98a8d5b9face2f74edc4952f39cbabd42f77503",
    "filename": "HashMap.java",
    "status": "added",
    "additions": 106,
    "deletions": 0,
    "changes": 106,
    "blob_url": "https://github.com/super30admin/Design-1/blob/ecfcc5200c67c29c99adf60a2829112e41d10c9c/HashMap.java",
    "raw_url": "https://github.com/super30admin/Design-1/raw/ecfcc5200c67c29c99adf60a2829112e41d10c9c/HashMap.java",
    "contents_url": "https://api.github.com/repos/super30admin/Design-1/contents/HashMap.java?ref=ecfcc5200c67c29c99adf60a2829112e41d10c9c",
    "patch": "@@ -0,0 +1,106 @@\n+// Time Complexity : O(1)\n+// Space Complexity : O(N)\n+// Did this code successfully run on Leetcode : Yes\n+// Any problem you faced while coding this :\n+\n+\n+// Your code here along with comments explaining your approach\n+// I have used a 2069 Buckets with each Bucket being a List of values\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+class Pair<U,V>{\n+    public U first;\n+    public V second;\n+    public Pair(U first,V second){\n+        this.first = first;\n+        this.second = second;\n+    }\n+}\n+class Bucket{\n+    private List<Pair<Integer,Integer>> bucket;\n+    public Bucket(){\n+        this.bucket = new ArrayList<Pair<Integer,Integer>>();\n+\n+\n+\n+    }\n+    public Integer get(Integer key){\n+        for (Pair<Integer,Integer> pair:this.bucket) {\n+            if(pair.first == key){\n+                return pair.second;\n+            }\n+\n+        }\n+        return -1;\n+    }\n+    public void update(Integer key,Integer value){\n+        boolean found = false;\n+        for (Pair pair:bucket) {\n+            if(pair.first.equals(key)){\n+                pair.second = value;\n+                found = true;\n+                break;\n+            }\n+\n+        }\n+        if (!found){\n+            this.bucket.add(new Pair<>(key, value));\n+        }\n+\n+    }\n+\n+    public void remove(Integer key){\n+        for (Pair pair:bucket) {\n+            if(pair.first.equals(key)){\n+                this.bucket.remove(pair);\n+                break;\n+\n+            }\n+\n+        }\n+    }\n+\n+}\n+public class HashMap {\n+    private Integer keySpace;\n+    private List<Bucket> hashTable;\n+    public HashMap(){\n+        this.keySpace = 2069;\n+        this.hashTable = new ArrayList<Bucket>();\n+        for (int i = 0; i < this.keySpace ; i++) {\n+            this.hashTable.add(new Bucket());\n+        }\n+    }\n+    public Integer get(Integer key){\n+        Integer hash = key % this.keySpace;\n+        return this.hashTable.get(hash).get(key);\n+\n+    }\n+    public void put(Integer key, Integer value){\n+        Integer hash = key % this.keySpace;\n+        this.hashTable.get(hash).update(key,value);\n+\n+    }\n+\n+    public void remove(Integer key){\n+        Integer hash = key % this.keySpace;\n+        this.hashTable.get(hash).remove(key);\n+    }\n+\n+    public static void main(String[] args) {\n+        HashMap hashMap = new HashMap();\n+        hashMap.put(1, 2);\n+        hashMap.put(2, 3);\n+\n+        hashMap.get(3);\n+        hashMap.put(2, 4);\n+        hashMap.get(2);\n+        hashMap.remove(2);\n+\n+\n+\n+\n+    }\n+\n+}"
  },
  {
    "sha": "8c4c34c3720e2aa0252fa9c111563cd14ebab702",
    "filename": "MinStack.java",
    "status": "added",
    "additions": 54,
    "deletions": 0,
    "changes": 54,
    "blob_url": "https://github.com/super30admin/Design-1/blob/ecfcc5200c67c29c99adf60a2829112e41d10c9c/MinStack.java",
    "raw_url": "https://github.com/super30admin/Design-1/raw/ecfcc5200c67c29c99adf60a2829112e41d10c9c/MinStack.java",
    "contents_url": "https://api.github.com/repos/super30admin/Design-1/contents/MinStack.java?ref=ecfcc5200c67c29c99adf60a2829112e41d10c9c",
    "patch": "@@ -0,0 +1,54 @@\n+// Time Complexity : O(1)\n+// Space Complexity : O(N)\n+// Did this code successfully run on Leetcode : Yes\n+// Any problem you faced while coding this :\n+\n+\n+// Your code here along with comments explaining your approach\n+// Used a two stack approach to retrive the minimum element in constant time.\n+import java.util.Stack;\n+\n+public class MinStack {\n+    Stack<Integer> stack;\n+    Stack<Integer> auxilStack;\n+\n+    /** initialize your data structure here. */\n+    public MinStack() {\n+        stack = new Stack<>();\n+        auxilStack = new Stack<>();\n+\n+    }\n+\n+    public void push(int x) {\n+        stack.push(x);\n+        if(auxilStack.isEmpty()){\n+            auxilStack.push(x);\n+        }\n+        else{\n+            if (x > auxilStack.peek()){\n+                auxilStack.push(auxilStack.peek());\n+            }\n+            else{\n+                this.auxilStack.push(x);\n+            }\n+        }\n+    }\n+\n+    public void pop() {\n+        this.stack.pop();\n+        this.auxilStack.pop();\n+\n+\n+    }\n+\n+    public int top() {\n+        return this.stack.peek();\n+    }\n+\n+    public int getMin() {\n+        return this.auxilStack.peek();\n+    }\n+\n+\n+}\n+"
  },
  {
    "sha": "3762eef1665a83baac02d428595195caf2de0e94",
    "filename": "README.md",
    "status": "removed",
    "additions": 0,
    "deletions": 12,
    "changes": 12,
    "blob_url": "https://github.com/super30admin/Design-1/blob/ba87a71061a07de4139446f114f0b2dd93b898a1/README.md",
    "raw_url": "https://github.com/super30admin/Design-1/raw/ba87a71061a07de4139446f114f0b2dd93b898a1/README.md",
    "contents_url": "https://api.github.com/repos/super30admin/Design-1/contents/README.md?ref=ba87a71061a07de4139446f114f0b2dd93b898a1",
    "patch": "@@ -1,12 +0,0 @@\n-# Design-1\n-\n-## Problem 1:\n-Design Hashmap (https://leetcode.com/problems/design-hashmap/)\n-\n-\n-\n-## Problem 2:\n-Design MinStack (https://leetcode.com/problems/min-stack/)\n-\n-\n-"
  },
  {
    "sha": "1739a9cbcbab2e211048d4cb09ef2afe514e4081",
    "filename": "Sample.java",
    "status": "removed",
    "additions": 0,
    "deletions": 7,
    "changes": 7,
    "blob_url": "https://github.com/super30admin/Design-1/blob/ba87a71061a07de4139446f114f0b2dd93b898a1/Sample.java",
    "raw_url": "https://github.com/super30admin/Design-1/raw/ba87a71061a07de4139446f114f0b2dd93b898a1/Sample.java",
    "contents_url": "https://api.github.com/repos/super30admin/Design-1/contents/Sample.java?ref=ba87a71061a07de4139446f114f0b2dd93b898a1",
    "patch": "@@ -1,7 +0,0 @@\n-// Time Complexity :\n-// Space Complexity :\n-// Did this code successfully run on Leetcode :\n-// Any problem you faced while coding this :\n-\n-\n-// Your code here along with comments explaining your approach"
  }
]
