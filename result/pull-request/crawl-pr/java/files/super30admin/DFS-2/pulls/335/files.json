[
  {
    "sha": "317866ccb6941df8dffc30c8105b378f1d68f52f",
    "filename": "island.cpp",
    "status": "added",
    "additions": 33,
    "deletions": 0,
    "changes": 33,
    "blob_url": "https://github.com/super30admin/DFS-2/blob/8194b8eabf7652c839b5a24a7e1410b13fe2e2a6/island.cpp",
    "raw_url": "https://github.com/super30admin/DFS-2/raw/8194b8eabf7652c839b5a24a7e1410b13fe2e2a6/island.cpp",
    "contents_url": "https://api.github.com/repos/super30admin/DFS-2/contents/island.cpp?ref=8194b8eabf7652c839b5a24a7e1410b13fe2e2a6",
    "patch": "@@ -0,0 +1,33 @@\n+Time: O(N*M)\n+Space: O(N*M)\n+\n+\n+class Solution {\n+public:\n+    int numIslands(vector<vector<char>>& grid) {\n+        int count = 0;\n+        int rows = grid.size();\n+        int cols = grid[0].size();\n+        for(int i = 0; i < rows;i++){\n+            for(int j = 0;j < cols;j++){\n+                if(grid[i][j]=='1'){\n+                    count++;\n+                    dfs(grid,i,j);\n+                }\n+            }\n+        }\n+        return count;\n+            \n+        \n+    }\n+    void dfs(vector<vector<char>>& grid,int r,int c){\n+        int rows = grid.size();\n+        int cols = grid[0].size();\n+        if(r < 0 || r > rows-1 || c <0 || c > cols-1 || grid[r][c]=='0')return;\n+        grid[r][c] = '0';\n+        dfs(grid,r-1,c);\n+        dfs(grid,r+1,c);\n+        dfs(grid,r,c-1);\n+        dfs(grid,r,c+1);\n+        }\n+};\n\\ No newline at end of file"
  }
]
