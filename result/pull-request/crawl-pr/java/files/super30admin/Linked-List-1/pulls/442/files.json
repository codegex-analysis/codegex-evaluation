[
  {
    "sha": "c415034c180522f5b0d701c520f67ee68a98d27c",
    "filename": "Problem-1.java",
    "status": "added",
    "additions": 38,
    "deletions": 0,
    "changes": 38,
    "blob_url": "https://github.com/super30admin/Linked-List-1/blob/1c1f80c86f5f6b8fed43f48d82e1a3d505b4c70b/Problem-1.java",
    "raw_url": "https://github.com/super30admin/Linked-List-1/raw/1c1f80c86f5f6b8fed43f48d82e1a3d505b4c70b/Problem-1.java",
    "contents_url": "https://api.github.com/repos/super30admin/Linked-List-1/contents/Problem-1.java?ref=1c1f80c86f5f6b8fed43f48d82e1a3d505b4c70b",
    "patch": "@@ -0,0 +1,38 @@\n+// Time Complexity :O(n)\n+// Space Complexity :O(1)\n+// Did this code successfully run on Leetcode :yes\n+// Any problem you faced while coding this :no\n+\n+\n+// Your code here along with comments explaining your approach\n+/**\n+ * Definition for singly-linked list.\n+ * public class ListNode {\n+ *     int val;\n+ *     ListNode next;\n+ *     ListNode() {}\n+ *     ListNode(int val) { this.val = val; }\n+ *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n+ * }\n+ */\n+class Solution {\n+    public ListNode removeNthFromEnd(ListNode head, int n) {\n+        ListNode dummy = new ListNode(-1);\n+        ListNode P1 = dummy;\n+        ListNode P2 = dummy;\n+        dummy.next = head;\n+        \n+        while(n>0){\n+            P2= P2.next;\n+            n--;\n+        }\n+        \n+        while(P2.next != null){\n+            P1=P1.next;\n+            P2=P2.next;\n+        }\n+        \n+        P1.next = P1.next.next;\n+        return dummy.next;\n+    }\n+}\n\\ No newline at end of file"
  }
]
