[
  {
    "sha": "26d33521af10bcc7fd8cea344038eaaeb78d0ef5",
    "filename": ".idea/.gitignore",
    "status": "added",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/super30admin/Two-Pointers-2/blob/8beb455189ca013adb3266fd15819742a9d5bdb8/.idea/.gitignore",
    "raw_url": "https://github.com/super30admin/Two-Pointers-2/raw/8beb455189ca013adb3266fd15819742a9d5bdb8/.idea/.gitignore",
    "contents_url": "https://api.github.com/repos/super30admin/Two-Pointers-2/contents/.idea/.gitignore?ref=8beb455189ca013adb3266fd15819742a9d5bdb8",
    "patch": "@@ -0,0 +1,3 @@\n+# Default ignored files\n+/shelf/\n+/workspace.xml"
  },
  {
    "sha": "b107a2dd81165eaaf682ad3da030668b937fbb6c",
    "filename": ".idea/Two-Pointers-2.iml",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/super30admin/Two-Pointers-2/blob/8beb455189ca013adb3266fd15819742a9d5bdb8/.idea/Two-Pointers-2.iml",
    "raw_url": "https://github.com/super30admin/Two-Pointers-2/raw/8beb455189ca013adb3266fd15819742a9d5bdb8/.idea/Two-Pointers-2.iml",
    "contents_url": "https://api.github.com/repos/super30admin/Two-Pointers-2/contents/.idea/Two-Pointers-2.iml?ref=8beb455189ca013adb3266fd15819742a9d5bdb8",
    "patch": "@@ -0,0 +1,11 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<module type=\"JAVA_MODULE\" version=\"4\">\n+  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\n+    <exclude-output />\n+    <content url=\"file://$MODULE_DIR$\">\n+      <sourceFolder url=\"file://$MODULE_DIR$\" isTestSource=\"false\" />\n+    </content>\n+    <orderEntry type=\"inheritedJdk\" />\n+    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n+  </component>\n+</module>\n\\ No newline at end of file"
  },
  {
    "sha": "40674af8d699c0ff4e92f9e8639ff4904ce4bdea",
    "filename": ".idea/misc.xml",
    "status": "added",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/super30admin/Two-Pointers-2/blob/8beb455189ca013adb3266fd15819742a9d5bdb8/.idea/misc.xml",
    "raw_url": "https://github.com/super30admin/Two-Pointers-2/raw/8beb455189ca013adb3266fd15819742a9d5bdb8/.idea/misc.xml",
    "contents_url": "https://api.github.com/repos/super30admin/Two-Pointers-2/contents/.idea/misc.xml?ref=8beb455189ca013adb3266fd15819742a9d5bdb8",
    "patch": "@@ -0,0 +1,6 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_15\" project-jdk-name=\"15\" project-jdk-type=\"JavaSDK\">\n+    <output url=\"file://$PROJECT_DIR$/out\" />\n+  </component>\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "827d064a9c1624232593fc4caa3e18a3c32158d3",
    "filename": ".idea/modules.xml",
    "status": "added",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/super30admin/Two-Pointers-2/blob/8beb455189ca013adb3266fd15819742a9d5bdb8/.idea/modules.xml",
    "raw_url": "https://github.com/super30admin/Two-Pointers-2/raw/8beb455189ca013adb3266fd15819742a9d5bdb8/.idea/modules.xml",
    "contents_url": "https://api.github.com/repos/super30admin/Two-Pointers-2/contents/.idea/modules.xml?ref=8beb455189ca013adb3266fd15819742a9d5bdb8",
    "patch": "@@ -0,0 +1,8 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"ProjectModuleManager\">\n+    <modules>\n+      <module fileurl=\"file://$PROJECT_DIR$/.idea/Two-Pointers-2.iml\" filepath=\"$PROJECT_DIR$/.idea/Two-Pointers-2.iml\" />\n+    </modules>\n+  </component>\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "35eb1ddfbbc029bcab630581847471d7f238ec53",
    "filename": ".idea/vcs.xml",
    "status": "added",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/super30admin/Two-Pointers-2/blob/8beb455189ca013adb3266fd15819742a9d5bdb8/.idea/vcs.xml",
    "raw_url": "https://github.com/super30admin/Two-Pointers-2/raw/8beb455189ca013adb3266fd15819742a9d5bdb8/.idea/vcs.xml",
    "contents_url": "https://api.github.com/repos/super30admin/Two-Pointers-2/contents/.idea/vcs.xml?ref=8beb455189ca013adb3266fd15819742a9d5bdb8",
    "patch": "@@ -0,0 +1,6 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"VcsDirectoryMappings\">\n+    <mapping directory=\"\" vcs=\"Git\" />\n+  </component>\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "282cd02588251ff4169a3ed5dfedbdc3880ee788",
    "filename": "MergeSortedArrays.java",
    "status": "added",
    "additions": 35,
    "deletions": 0,
    "changes": 35,
    "blob_url": "https://github.com/super30admin/Two-Pointers-2/blob/8beb455189ca013adb3266fd15819742a9d5bdb8/MergeSortedArrays.java",
    "raw_url": "https://github.com/super30admin/Two-Pointers-2/raw/8beb455189ca013adb3266fd15819742a9d5bdb8/MergeSortedArrays.java",
    "contents_url": "https://api.github.com/repos/super30admin/Two-Pointers-2/contents/MergeSortedArrays.java?ref=8beb455189ca013adb3266fd15819742a9d5bdb8",
    "patch": "@@ -0,0 +1,35 @@\n+// Time Complexity : O(m + n)\n+// Space Complexity : O(1)\n+// Did this code successfully run on Leetcode : yes\n+// Three line explanation of solution in plain english\n+//  - starting from last index, compare both elements from nums1 and nums2\n+//  - whichever is larger, put it at last index of nums1 then decrement pointers\n+//  - check in nums2, if there is any element remaining.\n+\n+public class MergeSortedArrays {\n+    public void merge(int[] nums1, int m, int[] nums2, int n) {\n+        int i = m - 1;\n+        int j = n - 1;\n+        int k = m + n - 1;\n+\n+        if (m == 0 && n == 0) return;\n+\n+        while (i >= 0 && j >= 0) {\n+            if (nums1[i] <= nums2[j]) {\n+                nums1[k] = nums2[j];\n+                k--;\n+                j--;\n+            }\n+            else {\n+                nums1[k] = nums1[i];\n+                k--;\n+                i--;\n+            }\n+        }\n+        while (j >= 0) {\n+            nums1[k] = nums2[j];\n+            j--;\n+            k--;\n+        }\n+    }\n+}"
  },
  {
    "sha": "72333b4d9dd2f161dba3ce70fae1ce47ec547511",
    "filename": "RemoveDuplicates.java",
    "status": "added",
    "additions": 25,
    "deletions": 0,
    "changes": 25,
    "blob_url": "https://github.com/super30admin/Two-Pointers-2/blob/8beb455189ca013adb3266fd15819742a9d5bdb8/RemoveDuplicates.java",
    "raw_url": "https://github.com/super30admin/Two-Pointers-2/raw/8beb455189ca013adb3266fd15819742a9d5bdb8/RemoveDuplicates.java",
    "contents_url": "https://api.github.com/repos/super30admin/Two-Pointers-2/contents/RemoveDuplicates.java?ref=8beb455189ca013adb3266fd15819742a9d5bdb8",
    "patch": "@@ -0,0 +1,25 @@\n+// Time Complexity : O(n)\n+// Space Complexity : O(1)\n+// Did this code successfully run on Leetcode : yes\n+// Three line explanation of solution in plain english\n+//  - when element is diff from previous element, count will be reset to 1.\n+//  - for same elements, count will be incrementing.\n+//  - until k count, elements will be swapped for slow and fast pointers.\n+\n+public class RemoveDuplicates {\n+    public int removeDuplicates(int[] nums) {\n+        int count = 1, slow = 1;\n+\n+        for (int fast = 1; fast < nums.length; fast++) {\n+            if (nums[fast - 1] == nums[fast])\n+                count++;\n+            else\n+                count = 1;\n+            if (count <= 2) {\n+                nums[slow] = nums[fast];\n+                slow++;\n+            }\n+        }\n+        return slow;\n+    }\n+}"
  },
  {
    "sha": "cef5b01c202752292242d01f68124cdb58825eb4",
    "filename": "SearchIn2DMatrix2.java",
    "status": "added",
    "additions": 27,
    "deletions": 0,
    "changes": 27,
    "blob_url": "https://github.com/super30admin/Two-Pointers-2/blob/8beb455189ca013adb3266fd15819742a9d5bdb8/SearchIn2DMatrix2.java",
    "raw_url": "https://github.com/super30admin/Two-Pointers-2/raw/8beb455189ca013adb3266fd15819742a9d5bdb8/SearchIn2DMatrix2.java",
    "contents_url": "https://api.github.com/repos/super30admin/Two-Pointers-2/contents/SearchIn2DMatrix2.java?ref=8beb455189ca013adb3266fd15819742a9d5bdb8",
    "patch": "@@ -0,0 +1,27 @@\n+// Time Complexity : O(log(m + n))\n+// Space Complexity : O(1)\n+// Did this code successfully run on Leetcode : yes\n+// Three line explanation of solution in plain english\n+//  - initialize a pointer at either top-right(or bottom-left) element.\n+//  - compare with the target\n+//      - if target is less than the pointer element, look into that row\n+//      - else increase the column\n+\n+public class SearchIn2DMatrix2 {\n+    public boolean searchMatrix(int[][] matrix, int target) {\n+        if (matrix == null || matrix.length == 0) return false;\n+        int m = matrix.length;\n+        int n = matrix[0].length;\n+        int r = 0, c = n - 1;\n+\n+        while (r < m && c >= 0) {\n+            if (target == matrix[r][c])\n+                return true;\n+            else if (target < matrix[r][c])\n+                c--;\n+            else\n+                r++;\n+        }\n+        return false;\n+    }\n+}"
  }
]
