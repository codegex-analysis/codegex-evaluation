[
  {
    "sha": "c89378a726dfc4d1bcd6c3d8cb1e79f8c93dbe6d",
    "filename": "Exclusive Time of Functions.py",
    "status": "added",
    "additions": 25,
    "deletions": 0,
    "changes": 25,
    "blob_url": "https://github.com/super30admin/Stack-2/blob/b35c9a2c2598fa7af6779714309a34d53155a819/Exclusive%20Time%20of%20Functions.py",
    "raw_url": "https://github.com/super30admin/Stack-2/raw/b35c9a2c2598fa7af6779714309a34d53155a819/Exclusive%20Time%20of%20Functions.py",
    "contents_url": "https://api.github.com/repos/super30admin/Stack-2/contents/Exclusive%20Time%20of%20Functions.py?ref=b35c9a2c2598fa7af6779714309a34d53155a819",
    "patch": "@@ -0,0 +1,25 @@\n+class Solution:\n+    def exclusiveTime(self, n: int, logs: List[str]) -> List[int]:\n+        #Approach: Stack\n+        #Time Complexity: O(n)\n+        #Space Complexity: O(n)\n+        \n+        result = [0 for _ in range(n)]\n+        st = []\n+        \n+        prev = None\n+        for log in logs:\n+            id, status, timestamp = log.split(':')\n+            id, timestamp = int(id), int(timestamp)\n+            \n+            if status == 'start':\n+                if st:\n+                    result[st[-1]] += timestamp - prev\n+                st.append(id)\n+                prev = timestamp\n+                \n+            else:\n+                result[st.pop()] += timestamp - prev + 1\n+                prev = timestamp + 1\n+                \n+        return result\n\\ No newline at end of file"
  },
  {
    "sha": "d5fd572bb532dfab453c0579007a2ec2579041ce",
    "filename": "Valid Parentheses.py",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/super30admin/Stack-2/blob/b35c9a2c2598fa7af6779714309a34d53155a819/Valid%20Parentheses.py",
    "raw_url": "https://github.com/super30admin/Stack-2/raw/b35c9a2c2598fa7af6779714309a34d53155a819/Valid%20Parentheses.py",
    "contents_url": "https://api.github.com/repos/super30admin/Stack-2/contents/Valid%20Parentheses.py?ref=b35c9a2c2598fa7af6779714309a34d53155a819",
    "patch": "@@ -0,0 +1,16 @@\n+class Solution:\n+    def isValid(self, s: str) -> bool:\n+        #Approach: Stack\n+        #Time Complexity: O(n)\n+        #Space Complexity: O(n)\n+        \n+        st = []\n+        pMap = {')' : '(', '}' : '{', ']' : '['}\n+        \n+        for p in s:\n+            if p in pMap.values():\n+                st.append(p)\n+            elif not st or not st.pop() == pMap[p]:\n+                return False\n+        \n+        return False if st else True\n\\ No newline at end of file"
  }
]
