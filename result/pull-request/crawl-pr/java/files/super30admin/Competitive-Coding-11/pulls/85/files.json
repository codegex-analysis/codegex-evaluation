[
  {
    "sha": "6f4565998566f7d4abc89940960969ae2561a0ef",
    "filename": "Mock.kt",
    "status": "added",
    "additions": 45,
    "deletions": 0,
    "changes": 45,
    "blob_url": "https://github.com/super30admin/Competitive-Coding-11/blob/b36ab9b39c136eae1b3759123e22f1b6a3b66867/Mock.kt",
    "raw_url": "https://github.com/super30admin/Competitive-Coding-11/raw/b36ab9b39c136eae1b3759123e22f1b6a3b66867/Mock.kt",
    "contents_url": "https://api.github.com/repos/super30admin/Competitive-Coding-11/contents/Mock.kt?ref=b36ab9b39c136eae1b3759123e22f1b6a3b66867",
    "patch": "@@ -0,0 +1,45 @@\n+package S30Mocks\n+\n+import java.lang.StringBuilder\n+import java.util.*\n+\n+\n+    fun removeKDigtis(num: String, k: Int):String{\n+        var count = k\n+        var st = Stack<Char>()\n+        for (c in num) {\n+\n+            while(!st.isEmpty() && count > 0 && st.peek()> c){\n+                st.pop()\n+                count--\n+\n+            }\n+            if (!st.isEmpty() || c!= '0'){\n+                st.push(c)\n+            }\n+\n+        }\n+        //12345\n+        while(!st.isEmpty() && count > 0){\n+            st.pop()\n+            count--\n+        }\n+        if (st.isEmpty()){\n+            return \"0\"\n+        }\n+\n+        var sb = StringBuilder()\n+        while(!st.isEmpty() && count == 0){\n+            sb.insert(0,st.pop())\n+        }\n+\n+        return sb.toString()\n+    }\n+\n+\n+\n+fun main(){\n+\n+    print(removeKDigtis(\"20\",2))\n+\n+}\n\\ No newline at end of file"
  }
]
