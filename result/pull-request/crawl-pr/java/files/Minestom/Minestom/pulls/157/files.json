[
  {
    "sha": "a4d7fcd0e5ba0d3e788188c8aaa6ce0123840dc1",
    "filename": "build.gradle",
    "status": "modified",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/Minestom/Minestom/blob/0915adcab4c9edde2d2178ad1ef1675f1b2be2fd/build.gradle",
    "raw_url": "https://github.com/Minestom/Minestom/raw/0915adcab4c9edde2d2178ad1ef1675f1b2be2fd/build.gradle",
    "contents_url": "https://api.github.com/repos/Minestom/Minestom/contents/build.gradle?ref=0915adcab4c9edde2d2178ad1ef1675f1b2be2fd",
    "patch": "@@ -182,6 +182,12 @@ dependencies {\n \n \n     generatorsImplementation(\"com.squareup:javapoet:1.13.0\")\n+\n+    // Adventure, for text messages\n+    api \"net.kyori:adventure-api:$adventureVersion\"\n+    api \"net.kyori:adventure-text-serializer-gson:$adventureVersion\"\n+    api \"net.kyori:adventure-text-serializer-plain:$adventureVersion\"\n+    api \"net.kyori:adventure-text-serializer-legacy:$adventureVersion\"\n }\n \n publishing {"
  },
  {
    "sha": "c74ba052d9c31c424fdeb73c1b5efc2b6906ff0f",
    "filename": "gradle.properties",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/Minestom/Minestom/blob/0915adcab4c9edde2d2178ad1ef1675f1b2be2fd/gradle.properties",
    "raw_url": "https://github.com/Minestom/Minestom/raw/0915adcab4c9edde2d2178ad1ef1675f1b2be2fd/gradle.properties",
    "contents_url": "https://api.github.com/repos/Minestom/Minestom/contents/gradle.properties?ref=0915adcab4c9edde2d2178ad1ef1675f1b2be2fd",
    "patch": "@@ -1,4 +1,5 @@\n asmVersion=9.0\n mixinVersion=0.8.1\n hephaistosVersion=v1.1.8\n-kotlinVersion=1.4.21\n\\ No newline at end of file\n+kotlinVersion=1.4.21\n+adventureVersion=4.7.0\n\\ No newline at end of file"
  },
  {
    "sha": "0f7c68b77e63cfc5e3dda82aecd26ad21c798897",
    "filename": "src/autogenerated/java/net/minestom/server/entity/EntityType.java",
    "status": "modified",
    "additions": 19,
    "deletions": 86,
    "changes": 105,
    "blob_url": "https://github.com/Minestom/Minestom/blob/0915adcab4c9edde2d2178ad1ef1675f1b2be2fd/src/autogenerated/java/net/minestom/server/entity/EntityType.java",
    "raw_url": "https://github.com/Minestom/Minestom/raw/0915adcab4c9edde2d2178ad1ef1675f1b2be2fd/src/autogenerated/java/net/minestom/server/entity/EntityType.java",
    "contents_url": "https://api.github.com/repos/Minestom/Minestom/contents/src/autogenerated/java/net/minestom/server/entity/EntityType.java?ref=0915adcab4c9edde2d2178ad1ef1675f1b2be2fd",
    "patch": "@@ -1,29 +1,11 @@\n package net.minestom.server.entity;\n \n-import java.util.function.BiFunction;\n+import net.kyori.adventure.key.Key;\n+import net.kyori.adventure.key.Keyed;\n import net.minestom.server.entity.metadata.EntityMeta;\n import net.minestom.server.entity.metadata.PlayerMeta;\n import net.minestom.server.entity.metadata.ambient.BatMeta;\n-import net.minestom.server.entity.metadata.animal.BeeMeta;\n-import net.minestom.server.entity.metadata.animal.ChickenMeta;\n-import net.minestom.server.entity.metadata.animal.CowMeta;\n-import net.minestom.server.entity.metadata.animal.DonkeyMeta;\n-import net.minestom.server.entity.metadata.animal.FoxMeta;\n-import net.minestom.server.entity.metadata.animal.HoglinMeta;\n-import net.minestom.server.entity.metadata.animal.HorseMeta;\n-import net.minestom.server.entity.metadata.animal.LlamaMeta;\n-import net.minestom.server.entity.metadata.animal.MooshroomMeta;\n-import net.minestom.server.entity.metadata.animal.MuleMeta;\n-import net.minestom.server.entity.metadata.animal.OcelotMeta;\n-import net.minestom.server.entity.metadata.animal.PandaMeta;\n-import net.minestom.server.entity.metadata.animal.PigMeta;\n-import net.minestom.server.entity.metadata.animal.PolarBearMeta;\n-import net.minestom.server.entity.metadata.animal.RabbitMeta;\n-import net.minestom.server.entity.metadata.animal.SheepMeta;\n-import net.minestom.server.entity.metadata.animal.SkeletonHorseMeta;\n-import net.minestom.server.entity.metadata.animal.StriderMeta;\n-import net.minestom.server.entity.metadata.animal.TurtleMeta;\n-import net.minestom.server.entity.metadata.animal.ZombieHorseMeta;\n+import net.minestom.server.entity.metadata.animal.*;\n import net.minestom.server.entity.metadata.animal.tameable.CatMeta;\n import net.minestom.server.entity.metadata.animal.tameable.ParrotMeta;\n import net.minestom.server.entity.metadata.animal.tameable.WolfMeta;\n@@ -35,73 +17,15 @@\n import net.minestom.server.entity.metadata.golem.IronGolemMeta;\n import net.minestom.server.entity.metadata.golem.ShulkerMeta;\n import net.minestom.server.entity.metadata.golem.SnowGolemMeta;\n-import net.minestom.server.entity.metadata.item.EyeOfEnderMeta;\n-import net.minestom.server.entity.metadata.item.FireballMeta;\n-import net.minestom.server.entity.metadata.item.ItemEntityMeta;\n-import net.minestom.server.entity.metadata.item.SmallFireballMeta;\n-import net.minestom.server.entity.metadata.item.SnowballMeta;\n-import net.minestom.server.entity.metadata.item.ThrownEggMeta;\n-import net.minestom.server.entity.metadata.item.ThrownEnderPearlMeta;\n-import net.minestom.server.entity.metadata.item.ThrownExperienceBottleMeta;\n-import net.minestom.server.entity.metadata.item.ThrownPotionMeta;\n-import net.minestom.server.entity.metadata.minecart.ChestMinecartMeta;\n-import net.minestom.server.entity.metadata.minecart.CommandBlockMinecartMeta;\n-import net.minestom.server.entity.metadata.minecart.FurnaceMinecartMeta;\n-import net.minestom.server.entity.metadata.minecart.HopperMinecartMeta;\n-import net.minestom.server.entity.metadata.minecart.MinecartMeta;\n-import net.minestom.server.entity.metadata.minecart.SpawnerMinecartMeta;\n-import net.minestom.server.entity.metadata.minecart.TntMinecartMeta;\n-import net.minestom.server.entity.metadata.monster.BlazeMeta;\n-import net.minestom.server.entity.metadata.monster.CaveSpiderMeta;\n-import net.minestom.server.entity.metadata.monster.CreeperMeta;\n-import net.minestom.server.entity.metadata.monster.ElderGuardianMeta;\n-import net.minestom.server.entity.metadata.monster.EndermanMeta;\n-import net.minestom.server.entity.metadata.monster.EndermiteMeta;\n-import net.minestom.server.entity.metadata.monster.GiantMeta;\n-import net.minestom.server.entity.metadata.monster.GuardianMeta;\n-import net.minestom.server.entity.metadata.monster.PiglinBruteMeta;\n-import net.minestom.server.entity.metadata.monster.PiglinMeta;\n-import net.minestom.server.entity.metadata.monster.SilverfishMeta;\n-import net.minestom.server.entity.metadata.monster.SpiderMeta;\n-import net.minestom.server.entity.metadata.monster.VexMeta;\n-import net.minestom.server.entity.metadata.monster.WitherMeta;\n-import net.minestom.server.entity.metadata.monster.ZoglinMeta;\n-import net.minestom.server.entity.metadata.monster.raider.EvokerMeta;\n-import net.minestom.server.entity.metadata.monster.raider.IllusionerMeta;\n-import net.minestom.server.entity.metadata.monster.raider.PillagerMeta;\n-import net.minestom.server.entity.metadata.monster.raider.RavagerMeta;\n-import net.minestom.server.entity.metadata.monster.raider.VindicatorMeta;\n-import net.minestom.server.entity.metadata.monster.raider.WitchMeta;\n+import net.minestom.server.entity.metadata.item.*;\n+import net.minestom.server.entity.metadata.minecart.*;\n+import net.minestom.server.entity.metadata.monster.*;\n+import net.minestom.server.entity.metadata.monster.raider.*;\n import net.minestom.server.entity.metadata.monster.skeleton.SkeletonMeta;\n import net.minestom.server.entity.metadata.monster.skeleton.StrayMeta;\n import net.minestom.server.entity.metadata.monster.skeleton.WitherSkeletonMeta;\n-import net.minestom.server.entity.metadata.monster.zombie.DrownedMeta;\n-import net.minestom.server.entity.metadata.monster.zombie.HuskMeta;\n-import net.minestom.server.entity.metadata.monster.zombie.ZombieMeta;\n-import net.minestom.server.entity.metadata.monster.zombie.ZombieVillagerMeta;\n-import net.minestom.server.entity.metadata.monster.zombie.ZombifiedPiglinMeta;\n-import net.minestom.server.entity.metadata.other.AreaEffectCloudMeta;\n-import net.minestom.server.entity.metadata.other.ArmorStandMeta;\n-import net.minestom.server.entity.metadata.other.BoatMeta;\n-import net.minestom.server.entity.metadata.other.DragonFireballMeta;\n-import net.minestom.server.entity.metadata.other.EndCrystalMeta;\n-import net.minestom.server.entity.metadata.other.EnderDragonMeta;\n-import net.minestom.server.entity.metadata.other.EvokerFangsMeta;\n-import net.minestom.server.entity.metadata.other.ExperienceOrbMeta;\n-import net.minestom.server.entity.metadata.other.FallingBlockMeta;\n-import net.minestom.server.entity.metadata.other.FireworkRocketMeta;\n-import net.minestom.server.entity.metadata.other.FishingHookMeta;\n-import net.minestom.server.entity.metadata.other.ItemFrameMeta;\n-import net.minestom.server.entity.metadata.other.LeashKnotMeta;\n-import net.minestom.server.entity.metadata.other.LightningBoltMeta;\n-import net.minestom.server.entity.metadata.other.LlamaSpitMeta;\n-import net.minestom.server.entity.metadata.other.MagmaCubeMeta;\n-import net.minestom.server.entity.metadata.other.PaintingMeta;\n-import net.minestom.server.entity.metadata.other.PrimedTntMeta;\n-import net.minestom.server.entity.metadata.other.ShulkerBulletMeta;\n-import net.minestom.server.entity.metadata.other.SlimeMeta;\n-import net.minestom.server.entity.metadata.other.TraderLlamaMeta;\n-import net.minestom.server.entity.metadata.other.WitherSkullMeta;\n+import net.minestom.server.entity.metadata.monster.zombie.*;\n+import net.minestom.server.entity.metadata.other.*;\n import net.minestom.server.entity.metadata.villager.VillagerMeta;\n import net.minestom.server.entity.metadata.villager.WanderingTraderMeta;\n import net.minestom.server.entity.metadata.water.DolphinMeta;\n@@ -114,13 +38,15 @@\n import net.minestom.server.utils.NamespaceID;\n import org.jetbrains.annotations.NotNull;\n \n+import java.util.function.BiFunction;\n+\n /**\n  * //==============================\n  * //  AUTOGENERATED BY EnumGenerator\n  * //==============================\n  */\n @SuppressWarnings({\"deprecation\"})\n-public enum EntityType {\n+public enum EntityType implements Keyed {\n     AREA_EFFECT_CLOUD(\"minecraft:area_effect_cloud\", 6.0, 0.5, AreaEffectCloudMeta::new, EntitySpawnType.BASE),\n \n     ARMOR_STAND(\"minecraft:armor_stand\", 0.5, 1.975, ArmorStandMeta::new, EntitySpawnType.LIVING),\n@@ -352,6 +278,8 @@\n     @NotNull\n     private final EntitySpawnType spawnType;\n \n+    private final Key key;\n+\n     EntityType(@NotNull String namespaceID, double width, double height,\n             @NotNull BiFunction<Entity, Metadata, EntityMeta> metaConstructor,\n             @NotNull EntitySpawnType spawnType) {\n@@ -361,6 +289,7 @@\n         this.metaConstructor = metaConstructor;\n         this.spawnType = spawnType;\n         Registries.entityTypes.put(NamespaceID.from(namespaceID), this);\n+        this.key = Key.key(this.namespaceID);\n     }\n \n     public short getId() {\n@@ -393,4 +322,8 @@ public static EntityType fromId(short id) {\n         }\n         return null;\n     }\n+\n+    public Key key() {\n+        return this.key;\n+    }\n }"
  },
  {
    "sha": "7d73de35ab3be51d7192b05e47507c2db32bf9fb",
    "filename": "src/autogenerated/java/net/minestom/server/fluids/Fluid.java",
    "status": "modified",
    "additions": 11,
    "deletions": 2,
    "changes": 13,
    "blob_url": "https://github.com/Minestom/Minestom/blob/0915adcab4c9edde2d2178ad1ef1675f1b2be2fd/src/autogenerated/java/net/minestom/server/fluids/Fluid.java",
    "raw_url": "https://github.com/Minestom/Minestom/raw/0915adcab4c9edde2d2178ad1ef1675f1b2be2fd/src/autogenerated/java/net/minestom/server/fluids/Fluid.java",
    "contents_url": "https://api.github.com/repos/Minestom/Minestom/contents/src/autogenerated/java/net/minestom/server/fluids/Fluid.java?ref=0915adcab4c9edde2d2178ad1ef1675f1b2be2fd",
    "patch": "@@ -1,5 +1,7 @@\n package net.minestom.server.fluids;\n \n+import net.kyori.adventure.key.Key;\n+import net.kyori.adventure.key.Keyed;\n import net.minestom.server.registry.Registries;\n import net.minestom.server.utils.NamespaceID;\n \n@@ -9,7 +11,7 @@\n  * //==============================\n  */\n @SuppressWarnings({\"deprecation\"})\n-public enum Fluid {\n+public enum Fluid implements Keyed {\n     EMPTY(\"minecraft:empty\"),\n \n     FLOWING_WATER(\"minecraft:flowing_water\"),\n@@ -20,11 +22,14 @@\n \n     LAVA(\"minecraft:lava\");\n \n-    private String namespaceID;\n+    private final String namespaceID;\n+\n+    private final Key key;\n \n     Fluid(String namespaceID) {\n         this.namespaceID = namespaceID;\n         Registries.fluids.put(NamespaceID.from(namespaceID), this);\n+        this.key = Key.key(this.namespaceID);\n     }\n \n     public int getId() {\n@@ -35,6 +40,10 @@ public String getNamespaceID() {\n         return namespaceID;\n     }\n \n+    public Key key() {\n+        return this.key;\n+    }\n+\n     public static Fluid fromId(int id) {\n         if (id >= 0 && id < values().length) {\n             return values()[id];"
  },
  {
    "sha": "c4788bac68717157f40b337c158095e385cc2319",
    "filename": "src/autogenerated/java/net/minestom/server/instance/block/Block.java",
    "status": "modified",
    "additions": 18,
    "deletions": 9,
    "changes": 27,
    "blob_url": "https://github.com/Minestom/Minestom/blob/0915adcab4c9edde2d2178ad1ef1675f1b2be2fd/src/autogenerated/java/net/minestom/server/instance/block/Block.java",
    "raw_url": "https://github.com/Minestom/Minestom/raw/0915adcab4c9edde2d2178ad1ef1675f1b2be2fd/src/autogenerated/java/net/minestom/server/instance/block/Block.java",
    "contents_url": "https://api.github.com/repos/Minestom/Minestom/contents/src/autogenerated/java/net/minestom/server/instance/block/Block.java?ref=0915adcab4c9edde2d2178ad1ef1675f1b2be2fd",
    "patch": "@@ -2,6 +2,8 @@\n \n import java.util.Arrays;\n import java.util.List;\n+import net.kyori.adventure.key.Key;\n+import net.kyori.adventure.key.Keyed;\n import net.minestom.server.instance.block.states.AcaciaButton;\n import net.minestom.server.instance.block.states.AcaciaDoor;\n import net.minestom.server.instance.block.states.AcaciaFence;\n@@ -481,7 +483,7 @@\n  * //==============================\n  */\n @SuppressWarnings({\"deprecation\"})\n-public enum Block {\n+public enum Block implements Keyed {\n     AIR(\"minecraft:air\", (short) 0, 0.0, 0.0, true, false, null, true),\n \n     STONE(\"minecraft:stone\", (short) 1, 1.5, 6.0, false, true, null, true),\n@@ -2480,25 +2482,27 @@\n     }\n \n     @NotNull\n-    private String namespaceID;\n+    private final String namespaceID;\n \n-    private short defaultID;\n+    private final short defaultID;\n \n-    private double hardness;\n+    private final double hardness;\n \n-    private double resistance;\n+    private final double resistance;\n \n-    private boolean isAir;\n+    private final boolean isAir;\n \n-    private boolean isSolid;\n+    private final boolean isSolid;\n \n     @Nullable\n-    private NamespaceID blockEntity;\n+    private final NamespaceID blockEntity;\n \n-    private boolean singleState;\n+    private final boolean singleState;\n \n     private List<BlockAlternative> alternatives = new java.util.ArrayList<>();\n \n+    private final Key key;\n+\n     Block(@NotNull String namespaceID, short defaultID, double hardness, double resistance,\n             boolean isAir, boolean isSolid, @Nullable NamespaceID blockEntity,\n             boolean singleState) {\n@@ -2514,6 +2518,7 @@\n             addBlockAlternative(new BlockAlternative(defaultID));\n         }\n         Registries.blocks.put(NamespaceID.from(namespaceID), this);\n+        this.key = Key.key(this.namespaceID);\n     }\n \n     public short getBlockId() {\n@@ -2586,4 +2591,8 @@ public short withProperties(String... properties) {\n     public static Block fromStateId(short blockStateId) {\n         return BlockArray.blocks[blockStateId];\n     }\n+\n+    public Key key() {\n+        return this.key;\n+    }\n }"
  },
  {
    "sha": "faba57e8b9cca03b8f01d78c6671739e85c1e842",
    "filename": "src/autogenerated/java/net/minestom/server/item/Enchantment.java",
    "status": "modified",
    "additions": 11,
    "deletions": 2,
    "changes": 13,
    "blob_url": "https://github.com/Minestom/Minestom/blob/0915adcab4c9edde2d2178ad1ef1675f1b2be2fd/src/autogenerated/java/net/minestom/server/item/Enchantment.java",
    "raw_url": "https://github.com/Minestom/Minestom/raw/0915adcab4c9edde2d2178ad1ef1675f1b2be2fd/src/autogenerated/java/net/minestom/server/item/Enchantment.java",
    "contents_url": "https://api.github.com/repos/Minestom/Minestom/contents/src/autogenerated/java/net/minestom/server/item/Enchantment.java?ref=0915adcab4c9edde2d2178ad1ef1675f1b2be2fd",
    "patch": "@@ -1,5 +1,7 @@\n package net.minestom.server.item;\n \n+import net.kyori.adventure.key.Key;\n+import net.kyori.adventure.key.Keyed;\n import net.minestom.server.registry.Registries;\n import net.minestom.server.utils.NamespaceID;\n \n@@ -9,7 +11,7 @@\n  * //==============================\n  */\n @SuppressWarnings({\"deprecation\"})\n-public enum Enchantment {\n+public enum Enchantment implements Keyed {\n     PROTECTION(\"minecraft:protection\"),\n \n     FIRE_PROTECTION(\"minecraft:fire_protection\"),\n@@ -86,11 +88,14 @@\n \n     VANISHING_CURSE(\"minecraft:vanishing_curse\");\n \n-    private String namespaceID;\n+    private final String namespaceID;\n+\n+    private final Key key;\n \n     Enchantment(String namespaceID) {\n         this.namespaceID = namespaceID;\n         Registries.enchantments.put(NamespaceID.from(namespaceID), this);\n+        this.key = Key.key(this.namespaceID);\n     }\n \n     public int getId() {\n@@ -101,6 +106,10 @@ public String getNamespaceID() {\n         return namespaceID;\n     }\n \n+    public Key key() {\n+        return this.key;\n+    }\n+\n     public static Enchantment fromId(int id) {\n         if (id >= 0 && id < values().length) {\n             return values()[id];"
  },
  {
    "sha": "0a6f526acc29010892a9a1e0b4083f6a418ce7c2",
    "filename": "src/autogenerated/java/net/minestom/server/item/Material.java",
    "status": "modified",
    "additions": 13,
    "deletions": 4,
    "changes": 17,
    "blob_url": "https://github.com/Minestom/Minestom/blob/0915adcab4c9edde2d2178ad1ef1675f1b2be2fd/src/autogenerated/java/net/minestom/server/item/Material.java",
    "raw_url": "https://github.com/Minestom/Minestom/raw/0915adcab4c9edde2d2178ad1ef1675f1b2be2fd/src/autogenerated/java/net/minestom/server/item/Material.java",
    "contents_url": "https://api.github.com/repos/Minestom/Minestom/contents/src/autogenerated/java/net/minestom/server/item/Material.java?ref=0915adcab4c9edde2d2178ad1ef1675f1b2be2fd",
    "patch": "@@ -1,5 +1,7 @@\n package net.minestom.server.item;\n \n+import net.kyori.adventure.key.Key;\n+import net.kyori.adventure.key.Keyed;\n import net.minestom.server.instance.block.Block;\n import net.minestom.server.registry.Registries;\n import net.minestom.server.utils.NamespaceID;\n@@ -12,7 +14,7 @@\n  * //==============================\n  */\n @SuppressWarnings({\"deprecation\"})\n-public enum Material {\n+public enum Material implements Keyed {\n     AIR(\"minecraft:air\", 64, Block.AIR),\n \n     STONE(\"minecraft:stone\", 64, Block.STONE),\n@@ -1966,19 +1968,22 @@\n     RESPAWN_ANCHOR(\"minecraft:respawn_anchor\", 64, Block.RESPAWN_ANCHOR);\n \n     @NotNull\n-    private String namespaceID;\n+    private final String namespaceID;\n \n-    private int maxDefaultStackSize;\n+    private final int maxDefaultStackSize;\n \n     @Nullable\n-    private Block correspondingBlock;\n+    private final Block correspondingBlock;\n+\n+    private final Key key;\n \n     Material(@NotNull String namespaceID, int maxDefaultStackSize,\n             @Nullable Block correspondingBlock) {\n         this.namespaceID = namespaceID;\n         this.maxDefaultStackSize = maxDefaultStackSize;\n         this.correspondingBlock = correspondingBlock;\n         Registries.materials.put(NamespaceID.from(namespaceID), this);\n+        this.key = Key.key(this.namespaceID);\n     }\n \n     public short getId() {\n@@ -2083,4 +2088,8 @@ public boolean hasState() {\n         }\n         return isFood();\n     }\n+\n+    public Key key() {\n+        return this.key;\n+    }\n }"
  },
  {
    "sha": "378db4edc305ab459b89aa6ac3c9c29fa2d72287",
    "filename": "src/autogenerated/java/net/minestom/server/particle/Particle.java",
    "status": "modified",
    "additions": 11,
    "deletions": 2,
    "changes": 13,
    "blob_url": "https://github.com/Minestom/Minestom/blob/0915adcab4c9edde2d2178ad1ef1675f1b2be2fd/src/autogenerated/java/net/minestom/server/particle/Particle.java",
    "raw_url": "https://github.com/Minestom/Minestom/raw/0915adcab4c9edde2d2178ad1ef1675f1b2be2fd/src/autogenerated/java/net/minestom/server/particle/Particle.java",
    "contents_url": "https://api.github.com/repos/Minestom/Minestom/contents/src/autogenerated/java/net/minestom/server/particle/Particle.java?ref=0915adcab4c9edde2d2178ad1ef1675f1b2be2fd",
    "patch": "@@ -1,5 +1,7 @@\n package net.minestom.server.particle;\n \n+import net.kyori.adventure.key.Key;\n+import net.kyori.adventure.key.Keyed;\n import net.minestom.server.registry.Registries;\n import net.minestom.server.utils.NamespaceID;\n \n@@ -9,7 +11,7 @@\n  * //==============================\n  */\n @SuppressWarnings({\"deprecation\"})\n-public enum Particle {\n+public enum Particle implements Keyed {\n     AMBIENT_ENTITY_EFFECT(\"minecraft:ambient_entity_effect\"),\n \n     ANGRY_VILLAGER(\"minecraft:angry_villager\"),\n@@ -154,11 +156,14 @@\n \n     WHITE_ASH(\"minecraft:white_ash\");\n \n-    private String namespaceID;\n+    private final String namespaceID;\n+\n+    private final Key key;\n \n     Particle(String namespaceID) {\n         this.namespaceID = namespaceID;\n         Registries.particles.put(NamespaceID.from(namespaceID), this);\n+        this.key = Key.key(this.namespaceID);\n     }\n \n     public int getId() {\n@@ -169,6 +174,10 @@ public String getNamespaceID() {\n         return namespaceID;\n     }\n \n+    public Key key() {\n+        return this.key;\n+    }\n+\n     public static Particle fromId(int id) {\n         if (id >= 0 && id < values().length) {\n             return values()[id];"
  },
  {
    "sha": "826394ee1f888ac0d0e987cad8234e832fb7ad95",
    "filename": "src/autogenerated/java/net/minestom/server/potion/PotionEffect.java",
    "status": "modified",
    "additions": 11,
    "deletions": 2,
    "changes": 13,
    "blob_url": "https://github.com/Minestom/Minestom/blob/0915adcab4c9edde2d2178ad1ef1675f1b2be2fd/src/autogenerated/java/net/minestom/server/potion/PotionEffect.java",
    "raw_url": "https://github.com/Minestom/Minestom/raw/0915adcab4c9edde2d2178ad1ef1675f1b2be2fd/src/autogenerated/java/net/minestom/server/potion/PotionEffect.java",
    "contents_url": "https://api.github.com/repos/Minestom/Minestom/contents/src/autogenerated/java/net/minestom/server/potion/PotionEffect.java?ref=0915adcab4c9edde2d2178ad1ef1675f1b2be2fd",
    "patch": "@@ -1,5 +1,7 @@\n package net.minestom.server.potion;\n \n+import net.kyori.adventure.key.Key;\n+import net.kyori.adventure.key.Keyed;\n import net.minestom.server.registry.Registries;\n import net.minestom.server.utils.NamespaceID;\n \n@@ -9,7 +11,7 @@\n  * //==============================\n  */\n @SuppressWarnings({\"deprecation\"})\n-public enum PotionEffect {\n+public enum PotionEffect implements Keyed {\n     SPEED(\"minecraft:speed\"),\n \n     SLOWNESS(\"minecraft:slowness\"),\n@@ -74,11 +76,14 @@\n \n     HERO_OF_THE_VILLAGE(\"minecraft:hero_of_the_village\");\n \n-    private String namespaceID;\n+    private final String namespaceID;\n+\n+    private final Key key;\n \n     PotionEffect(String namespaceID) {\n         this.namespaceID = namespaceID;\n         Registries.potionEffects.put(NamespaceID.from(namespaceID), this);\n+        this.key = Key.key(this.namespaceID);\n     }\n \n     public int getId() {\n@@ -89,6 +94,10 @@ public String getNamespaceID() {\n         return namespaceID;\n     }\n \n+    public Key key() {\n+        return this.key;\n+    }\n+\n     public static PotionEffect fromId(int id) {\n         if (id >= 0 && id < values().length + 1) {\n             return values()[id - 1];"
  },
  {
    "sha": "3753144724fd079f26804d8214926e8fd3b2ba26",
    "filename": "src/autogenerated/java/net/minestom/server/potion/PotionType.java",
    "status": "modified",
    "additions": 11,
    "deletions": 2,
    "changes": 13,
    "blob_url": "https://github.com/Minestom/Minestom/blob/0915adcab4c9edde2d2178ad1ef1675f1b2be2fd/src/autogenerated/java/net/minestom/server/potion/PotionType.java",
    "raw_url": "https://github.com/Minestom/Minestom/raw/0915adcab4c9edde2d2178ad1ef1675f1b2be2fd/src/autogenerated/java/net/minestom/server/potion/PotionType.java",
    "contents_url": "https://api.github.com/repos/Minestom/Minestom/contents/src/autogenerated/java/net/minestom/server/potion/PotionType.java?ref=0915adcab4c9edde2d2178ad1ef1675f1b2be2fd",
    "patch": "@@ -1,5 +1,7 @@\n package net.minestom.server.potion;\n \n+import net.kyori.adventure.key.Key;\n+import net.kyori.adventure.key.Keyed;\n import net.minestom.server.registry.Registries;\n import net.minestom.server.utils.NamespaceID;\n \n@@ -9,7 +11,7 @@\n  * //==============================\n  */\n @SuppressWarnings({\"deprecation\"})\n-public enum PotionType {\n+public enum PotionType implements Keyed {\n     EMPTY(\"minecraft:empty\"),\n \n     WATER(\"minecraft:water\"),\n@@ -96,11 +98,14 @@\n \n     LONG_SLOW_FALLING(\"minecraft:long_slow_falling\");\n \n-    private String namespaceID;\n+    private final String namespaceID;\n+\n+    private final Key key;\n \n     PotionType(String namespaceID) {\n         this.namespaceID = namespaceID;\n         Registries.potionTypes.put(NamespaceID.from(namespaceID), this);\n+        this.key = Key.key(this.namespaceID);\n     }\n \n     public int getId() {\n@@ -111,6 +116,10 @@ public String getNamespaceID() {\n         return namespaceID;\n     }\n \n+    public Key key() {\n+        return this.key;\n+    }\n+\n     public static PotionType fromId(int id) {\n         if (id >= 0 && id < values().length) {\n             return values()[id];"
  },
  {
    "sha": "b38f4c8a486492f3c6a6eefdc181f3c8982ee1b0",
    "filename": "src/autogenerated/java/net/minestom/server/registry/Registries.java",
    "status": "modified",
    "additions": 81,
    "deletions": 0,
    "changes": 81,
    "blob_url": "https://github.com/Minestom/Minestom/blob/0915adcab4c9edde2d2178ad1ef1675f1b2be2fd/src/autogenerated/java/net/minestom/server/registry/Registries.java",
    "raw_url": "https://github.com/Minestom/Minestom/raw/0915adcab4c9edde2d2178ad1ef1675f1b2be2fd/src/autogenerated/java/net/minestom/server/registry/Registries.java",
    "contents_url": "https://api.github.com/repos/Minestom/Minestom/contents/src/autogenerated/java/net/minestom/server/registry/Registries.java?ref=0915adcab4c9edde2d2178ad1ef1675f1b2be2fd",
    "patch": "@@ -2,6 +2,7 @@\n package net.minestom.server.registry;\n \n import java.util.HashMap;\n+import net.kyori.adventure.key.Key;\n import net.minestom.server.entity.EntityType;\n import net.minestom.server.fluids.Fluid;\n import net.minestom.server.instance.block.Block;\n@@ -96,6 +97,14 @@ public static Block getBlock(NamespaceID id) {\n         return blocks.getOrDefault(id, Block.AIR);\n     }\n \n+    /**\n+     * Returns the corresponding Block matching the given key. Returns 'AIR' if none match.\n+     */\n+    @NotNull\n+    public static Block getBlock(Key key) {\n+        return getBlock(NamespaceID.from(key));\n+    }\n+\n     /**\n      * Returns the corresponding Material matching the given id. Returns 'AIR' if none match.\n      */\n@@ -112,6 +121,14 @@ public static Material getMaterial(NamespaceID id) {\n         return materials.getOrDefault(id, Material.AIR);\n     }\n \n+    /**\n+     * Returns the corresponding Material matching the given key. Returns 'AIR' if none match.\n+     */\n+    @NotNull\n+    public static Material getMaterial(Key key) {\n+        return getMaterial(NamespaceID.from(key));\n+    }\n+\n     /**\n      * Returns the corresponding Enchantment matching the given id. Returns null if none match.\n      */\n@@ -128,6 +145,14 @@ public static Enchantment getEnchantment(NamespaceID id) {\n         return enchantments.get(id);\n     }\n \n+    /**\n+     * Returns the corresponding Enchantment matching the given key. Returns null if none match.\n+     */\n+    @Nullable\n+    public static Enchantment getEnchantment(Key key) {\n+        return getEnchantment(NamespaceID.from(key));\n+    }\n+\n     /**\n      * Returns the corresponding EntityType matching the given id. Returns null if none match.\n      */\n@@ -144,6 +169,14 @@ public static EntityType getEntityType(NamespaceID id) {\n         return entityTypes.get(id);\n     }\n \n+    /**\n+     * Returns the corresponding EntityType matching the given key. Returns null if none match.\n+     */\n+    @Nullable\n+    public static EntityType getEntityType(Key key) {\n+        return getEntityType(NamespaceID.from(key));\n+    }\n+\n     /**\n      * Returns the corresponding Particle matching the given id. Returns null if none match.\n      */\n@@ -160,6 +193,14 @@ public static Particle getParticle(NamespaceID id) {\n         return particles.get(id);\n     }\n \n+    /**\n+     * Returns the corresponding Particle matching the given key. Returns null if none match.\n+     */\n+    @Nullable\n+    public static Particle getParticle(Key key) {\n+        return getParticle(NamespaceID.from(key));\n+    }\n+\n     /**\n      * Returns the corresponding PotionType matching the given id. Returns null if none match.\n      */\n@@ -176,6 +217,14 @@ public static PotionType getPotionType(NamespaceID id) {\n         return potionTypes.get(id);\n     }\n \n+    /**\n+     * Returns the corresponding PotionType matching the given key. Returns null if none match.\n+     */\n+    @Nullable\n+    public static PotionType getPotionType(Key key) {\n+        return getPotionType(NamespaceID.from(key));\n+    }\n+\n     /**\n      * Returns the corresponding PotionEffect matching the given id. Returns null if none match.\n      */\n@@ -192,6 +241,14 @@ public static PotionEffect getPotionEffect(NamespaceID id) {\n         return potionEffects.get(id);\n     }\n \n+    /**\n+     * Returns the corresponding PotionEffect matching the given key. Returns null if none match.\n+     */\n+    @Nullable\n+    public static PotionEffect getPotionEffect(Key key) {\n+        return getPotionEffect(NamespaceID.from(key));\n+    }\n+\n     /**\n      * Returns the corresponding Sound matching the given id. Returns null if none match.\n      */\n@@ -208,6 +265,14 @@ public static Sound getSound(NamespaceID id) {\n         return sounds.get(id);\n     }\n \n+    /**\n+     * Returns the corresponding Sound matching the given key. Returns null if none match.\n+     */\n+    @Nullable\n+    public static Sound getSound(Key key) {\n+        return getSound(NamespaceID.from(key));\n+    }\n+\n     /**\n      * Returns the corresponding StatisticType matching the given id. Returns null if none match.\n      */\n@@ -224,6 +289,14 @@ public static StatisticType getStatisticType(NamespaceID id) {\n         return statisticTypes.get(id);\n     }\n \n+    /**\n+     * Returns the corresponding StatisticType matching the given key. Returns null if none match.\n+     */\n+    @Nullable\n+    public static StatisticType getStatisticType(Key key) {\n+        return getStatisticType(NamespaceID.from(key));\n+    }\n+\n     /**\n      * Returns the corresponding Fluid matching the given id. Returns 'EMPTY' if none match.\n      */\n@@ -239,4 +312,12 @@ public static Fluid getFluid(String id) {\n     public static Fluid getFluid(NamespaceID id) {\n         return fluids.getOrDefault(id, Fluid.EMPTY);\n     }\n+\n+    /**\n+     * Returns the corresponding Fluid matching the given key. Returns 'EMPTY' if none match.\n+     */\n+    @NotNull\n+    public static Fluid getFluid(Key key) {\n+        return getFluid(NamespaceID.from(key));\n+    }\n }"
  },
  {
    "sha": "d5b8058d0ddc829f7832c2b570c6acfe3fd747f4",
    "filename": "src/autogenerated/java/net/minestom/server/sound/Sound.java",
    "status": "modified",
    "additions": 11,
    "deletions": 2,
    "changes": 13,
    "blob_url": "https://github.com/Minestom/Minestom/blob/0915adcab4c9edde2d2178ad1ef1675f1b2be2fd/src/autogenerated/java/net/minestom/server/sound/Sound.java",
    "raw_url": "https://github.com/Minestom/Minestom/raw/0915adcab4c9edde2d2178ad1ef1675f1b2be2fd/src/autogenerated/java/net/minestom/server/sound/Sound.java",
    "contents_url": "https://api.github.com/repos/Minestom/Minestom/contents/src/autogenerated/java/net/minestom/server/sound/Sound.java?ref=0915adcab4c9edde2d2178ad1ef1675f1b2be2fd",
    "patch": "@@ -1,5 +1,7 @@\n package net.minestom.server.sound;\n \n+import net.kyori.adventure.key.Key;\n+import net.kyori.adventure.key.Keyed;\n import net.minestom.server.registry.Registries;\n import net.minestom.server.utils.NamespaceID;\n \n@@ -9,7 +11,7 @@\n  * //==============================\n  */\n @SuppressWarnings({\"deprecation\"})\n-public enum Sound {\n+public enum Sound implements Keyed, net.kyori.adventure.sound.Sound.Type {\n     AMBIENT_CAVE(\"minecraft:ambient.cave\"),\n \n     AMBIENT_BASALT_DELTAS_ADDITIONS(\"minecraft:ambient.basalt_deltas.additions\"),\n@@ -1994,11 +1996,14 @@\n \n     ENTITY_ZOMBIE_VILLAGER_STEP(\"minecraft:entity.zombie_villager.step\");\n \n-    private String namespaceID;\n+    private final String namespaceID;\n+\n+    private final Key key;\n \n     Sound(String namespaceID) {\n         this.namespaceID = namespaceID;\n         Registries.sounds.put(NamespaceID.from(namespaceID), this);\n+        this.key = Key.key(this.namespaceID);\n     }\n \n     public int getId() {\n@@ -2009,6 +2014,10 @@ public String getNamespaceID() {\n         return namespaceID;\n     }\n \n+    public Key key() {\n+        return this.key;\n+    }\n+\n     public static Sound fromId(int id) {\n         if (id >= 0 && id < values().length) {\n             return values()[id];"
  },
  {
    "sha": "fea4762ff0712db3b1f76ed915c4588e430e4865",
    "filename": "src/autogenerated/java/net/minestom/server/stat/StatisticType.java",
    "status": "modified",
    "additions": 11,
    "deletions": 2,
    "changes": 13,
    "blob_url": "https://github.com/Minestom/Minestom/blob/0915adcab4c9edde2d2178ad1ef1675f1b2be2fd/src/autogenerated/java/net/minestom/server/stat/StatisticType.java",
    "raw_url": "https://github.com/Minestom/Minestom/raw/0915adcab4c9edde2d2178ad1ef1675f1b2be2fd/src/autogenerated/java/net/minestom/server/stat/StatisticType.java",
    "contents_url": "https://api.github.com/repos/Minestom/Minestom/contents/src/autogenerated/java/net/minestom/server/stat/StatisticType.java?ref=0915adcab4c9edde2d2178ad1ef1675f1b2be2fd",
    "patch": "@@ -1,5 +1,7 @@\n package net.minestom.server.stat;\n \n+import net.kyori.adventure.key.Key;\n+import net.kyori.adventure.key.Keyed;\n import net.minestom.server.registry.Registries;\n import net.minestom.server.utils.NamespaceID;\n \n@@ -9,7 +11,7 @@\n  * //==============================\n  */\n @SuppressWarnings({\"deprecation\"})\n-public enum StatisticType {\n+public enum StatisticType implements Keyed {\n     LEAVE_GAME(\"minecraft:leave_game\"),\n \n     PLAY_ONE_MINUTE(\"minecraft:play_one_minute\"),\n@@ -158,11 +160,14 @@\n \n     INTERACT_WITH_SMITHING_TABLE(\"minecraft:interact_with_smithing_table\");\n \n-    private String namespaceID;\n+    private final String namespaceID;\n+\n+    private final Key key;\n \n     StatisticType(String namespaceID) {\n         this.namespaceID = namespaceID;\n         Registries.statisticTypes.put(NamespaceID.from(namespaceID), this);\n+        this.key = Key.key(this.namespaceID);\n     }\n \n     public int getId() {\n@@ -173,6 +178,10 @@ public String getNamespaceID() {\n         return namespaceID;\n     }\n \n+    public Key key() {\n+        return this.key;\n+    }\n+\n     public static StatisticType fromId(int id) {\n         if (id >= 0 && id < values().length) {\n             return values()[id];"
  },
  {
    "sha": "b51ae322ab61d1c0d8c981bfbfb3398d8ce28a6b",
    "filename": "src/generators/java/net/minestom/codegen/BasicEnumGenerator.java",
    "status": "modified",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/Minestom/Minestom/blob/0915adcab4c9edde2d2178ad1ef1675f1b2be2fd/src/generators/java/net/minestom/codegen/BasicEnumGenerator.java",
    "raw_url": "https://github.com/Minestom/Minestom/raw/0915adcab4c9edde2d2178ad1ef1675f1b2be2fd/src/generators/java/net/minestom/codegen/BasicEnumGenerator.java",
    "contents_url": "https://api.github.com/repos/Minestom/Minestom/contents/src/generators/java/net/minestom/codegen/BasicEnumGenerator.java?ref=0915adcab4c9edde2d2178ad1ef1675f1b2be2fd",
    "patch": "@@ -3,6 +3,8 @@\n import com.google.gson.Gson;\n import com.google.gson.JsonObject;\n import com.squareup.javapoet.*;\n+import net.kyori.adventure.key.Key;\n+import net.kyori.adventure.key.Keyed;\n import net.minestom.server.registry.Registries;\n import net.minestom.server.utils.NamespaceID;\n \n@@ -116,6 +118,12 @@ protected void prepare(EnumGenerator generator) {\n         generator.appendToConstructor(code -> {\n             code.addStatement(\"$T.\" + CodeGenerator.decapitalize(getClassName()) + \"s.put($T.from($N), this)\", registriesClass, NamespaceID.class, \"namespaceID\");\n         });\n+\n+        // implement Keyed\n+        generator.addSuperinterface(ClassName.get(Keyed.class));\n+        generator.addField(ClassName.get(Key.class), \"key\", true);\n+        generator.appendToConstructor(code -> code.addStatement(\"this.key = Key.key(this.namespaceID)\"));\n+        generator.addMethod(\"key\", new ParameterSpec[0], ClassName.get(Key.class), code -> code.addStatement(\"return this.key\"));\n     }\n \n     @Override"
  },
  {
    "sha": "c61f4d21da4d0eaeeb8aa32e766916865d3e12ac",
    "filename": "src/generators/java/net/minestom/codegen/EnumGenerator.java",
    "status": "modified",
    "additions": 33,
    "deletions": 3,
    "changes": 36,
    "blob_url": "https://github.com/Minestom/Minestom/blob/0915adcab4c9edde2d2178ad1ef1675f1b2be2fd/src/generators/java/net/minestom/codegen/EnumGenerator.java",
    "raw_url": "https://github.com/Minestom/Minestom/raw/0915adcab4c9edde2d2178ad1ef1675f1b2be2fd/src/generators/java/net/minestom/codegen/EnumGenerator.java",
    "contents_url": "https://api.github.com/repos/Minestom/Minestom/contents/src/generators/java/net/minestom/codegen/EnumGenerator.java?ref=0915adcab4c9edde2d2178ad1ef1675f1b2be2fd",
    "patch": "@@ -1,6 +1,7 @@\n package net.minestom.codegen;\n \n import com.squareup.javapoet.*;\n+import org.apache.commons.lang3.tuple.Pair;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -20,9 +21,11 @@\n \n     private final String enumName;\n     private ParameterSpec[] parameters;\n+    private List<TypeName> superinterfaces = new LinkedList<>();\n     private List<Method> methods = new LinkedList<>();\n-    private List<Field> fields = new LinkedList<>();\n+    private List<Field> staticFields = new LinkedList<>();\n     private List<Instance> instances = new LinkedList<>();\n+    private List<Pair<Field, Boolean>> fields = new LinkedList<>();\n     private List<Field> hardcodedFields = new LinkedList<>();\n     private List<AnnotationSpec> annotations = new LinkedList<>();\n     private String enumPackage;\n@@ -35,6 +38,10 @@ public EnumGenerator(String packageName, String enumName) {\n         this.enumName = enumName;\n     }\n \n+    public void addSuperinterface(TypeName typeNames) {\n+        superinterfaces.add(typeNames);\n+    }\n+\n     public void setParams(ParameterSpec... parameters) {\n         this.parameters = parameters;\n     }\n@@ -52,7 +59,7 @@ public void addStaticMethod(String name, ParameterSpec[] signature, TypeName ret\n     }\n \n     public void addStaticField(TypeName type, String name, String value) {\n-        fields.add(new Field(type, name, value));\n+        staticFields.add(new Field(type, name, value));\n     }\n \n     public void addInstance(String name, Object... parameters) {\n@@ -86,6 +93,9 @@ public void addInstance(String name, Object... parameters) {\n             enumClass.addEnumConstant(instance.name, arguments);\n         }\n \n+        // add superinterfaces\n+        enumClass.addSuperinterfaces(superinterfaces);\n+\n         if (staticBlock != null) {\n             enumClass.addStaticBlock(staticBlock);\n         }\n@@ -100,7 +110,7 @@ public void addInstance(String name, Object... parameters) {\n                         .build());\n             }\n \n-            for (Field field : fields) {\n+            for (Field field : staticFields) {\n                 enumClass.addField(FieldSpec.builder(field.type, field.name)\n                         .initializer(\"$L\", field.value)\n                         .addModifiers(Modifier.PRIVATE, Modifier.FINAL, Modifier.STATIC)\n@@ -115,6 +125,18 @@ public void addInstance(String name, Object... parameters) {\n                         .build());\n             }\n \n+            // normal fields\n+            for (Pair<Field, Boolean> field : fields) {\n+                FieldSpec.Builder builder = FieldSpec.builder(field.getLeft().type, field.getLeft().name)\n+                        .addModifiers(Modifier.PRIVATE);\n+\n+                if (field.getRight()) {\n+                    builder.addModifiers(Modifier.FINAL);\n+                }\n+\n+                enumClass.addField(builder.build());\n+            }\n+\n             // constructor\n             MethodSpec.Builder constructorBuilder = MethodSpec.constructorBuilder();\n             for (int i = 0; i < parameters.length; i++) {\n@@ -166,6 +188,10 @@ public void appendToConstructor(Consumer<CodeBlock.Builder> constructorEnding) {\n         constructorEnds.add(constructorEnding);\n     }\n \n+    public void addField(TypeName type, String name, boolean isFinal) {\n+        fields.add(Pair.of(new Field(type, name), isFinal));\n+    }\n+\n     public void addHardcodedField(TypeName type, String name, String value) {\n         hardcodedFields.add(new Field(type, name, value));\n     }\n@@ -210,6 +236,10 @@ private Method(boolean isStatic, String name, ParameterSpec[] signature, TypeNam\n         private String name;\n         private String value;\n \n+        public Field(TypeName type, String name) {\n+            this(type, name, null);\n+        }\n+\n         public Field(TypeName type, String name, String value) {\n             this.type = type;\n             this.name = name;"
  },
  {
    "sha": "b96c2eb465a5efead19b82562eeda22eceac95fb",
    "filename": "src/generators/java/net/minestom/codegen/RegistriesGenerator.java",
    "status": "modified",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/Minestom/Minestom/blob/0915adcab4c9edde2d2178ad1ef1675f1b2be2fd/src/generators/java/net/minestom/codegen/RegistriesGenerator.java",
    "raw_url": "https://github.com/Minestom/Minestom/raw/0915adcab4c9edde2d2178ad1ef1675f1b2be2fd/src/generators/java/net/minestom/codegen/RegistriesGenerator.java",
    "contents_url": "https://api.github.com/repos/Minestom/Minestom/contents/src/generators/java/net/minestom/codegen/RegistriesGenerator.java?ref=0915adcab4c9edde2d2178ad1ef1675f1b2be2fd",
    "patch": "@@ -1,6 +1,7 @@\n package net.minestom.codegen;\n \n import com.squareup.javapoet.*;\n+import net.kyori.adventure.key.Key;\n import net.minestom.server.entity.EntityType;\n import net.minestom.server.fluids.Fluid;\n import net.minestom.server.instance.block.Block;\n@@ -101,6 +102,7 @@ public static Block getBlock(NamespaceID id) {\n \n             ParameterSpec namespaceIDParam = ParameterSpec.builder(ClassName.get(NamespaceID.class), \"id\")\n                     .build();\n+            ParameterSpec keyIDParam = ParameterSpec.builder(ClassName.get(Key.class), \"key\").build();\n \n             CodeBlock.Builder code = CodeBlock.builder();\n             Class<? extends Annotation> annotation;\n@@ -134,6 +136,16 @@ public static Block getBlock(NamespaceID id) {\n                     .addCode(code.build())\n                     .addJavadoc(comment.toString())\n                     .build());\n+\n+            // Key variant\n+            registriesClass.addMethod(MethodSpec.methodBuilder(\"get\" + simpleType)\n+                    .returns(type)\n+                    .addAnnotation(annotation)\n+                    .addModifiers(Modifier.STATIC, Modifier.PUBLIC)\n+                    .addParameter(keyIDParam)\n+                    .addStatement(\"return get$N(NamespaceID.from($N))\", simpleType, keyIDParam)\n+                    .addJavadoc(comment.toString().replace(\" id.\", \" key.\"))\n+                    .build());\n         }\n \n         JavaFile file = JavaFile.builder(\"net.minestom.server.registry\", registriesClass.build())"
  },
  {
    "sha": "168ea66116ee45452c567a14dd593f4be8e7b4ef",
    "filename": "src/generators/java/net/minestom/codegen/blocks/BlockEnumGenerator.java",
    "status": "modified",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/Minestom/Minestom/blob/0915adcab4c9edde2d2178ad1ef1675f1b2be2fd/src/generators/java/net/minestom/codegen/blocks/BlockEnumGenerator.java",
    "raw_url": "https://github.com/Minestom/Minestom/raw/0915adcab4c9edde2d2178ad1ef1675f1b2be2fd/src/generators/java/net/minestom/codegen/blocks/BlockEnumGenerator.java",
    "contents_url": "https://api.github.com/repos/Minestom/Minestom/contents/src/generators/java/net/minestom/codegen/blocks/BlockEnumGenerator.java?ref=0915adcab4c9edde2d2178ad1ef1675f1b2be2fd",
    "patch": "@@ -5,6 +5,8 @@\n import com.google.gson.JsonElement;\n import com.google.gson.JsonObject;\n import com.squareup.javapoet.*;\n+import net.kyori.adventure.key.Key;\n+import net.kyori.adventure.key.Keyed;\n import net.minestom.codegen.EnumGenerator;\n import net.minestom.codegen.MinestomEnumGenerator;\n import net.minestom.codegen.PrismarinePaths;\n@@ -298,6 +300,12 @@ protected void prepare(EnumGenerator generator) {\n                 .endControlFlow()\n                 .addStatement(\"$T.blocks.put($T.from(namespaceID), this)\", Registries.class, NamespaceID.class);\n         });\n+\n+        // implement Keyed\n+        generator.addSuperinterface(ClassName.get(Keyed.class));\n+        generator.addField(ClassName.get(Key.class), \"key\", true);\n+        generator.appendToConstructor(code -> code.addStatement(\"this.key = Key.key(this.namespaceID)\"));\n+        generator.addMethod(\"key\", new ParameterSpec[0], ClassName.get(Key.class), code -> code.addStatement(\"return this.key\"));\n     }\n \n     @Override"
  },
  {
    "sha": "741c2c7e6961b07bf691a252f96e8aef62e1f6a9",
    "filename": "src/generators/java/net/minestom/codegen/entitytypes/EntityTypeEnumGenerator.java",
    "status": "modified",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/Minestom/Minestom/blob/0915adcab4c9edde2d2178ad1ef1675f1b2be2fd/src/generators/java/net/minestom/codegen/entitytypes/EntityTypeEnumGenerator.java",
    "raw_url": "https://github.com/Minestom/Minestom/raw/0915adcab4c9edde2d2178ad1ef1675f1b2be2fd/src/generators/java/net/minestom/codegen/entitytypes/EntityTypeEnumGenerator.java",
    "contents_url": "https://api.github.com/repos/Minestom/Minestom/contents/src/generators/java/net/minestom/codegen/entitytypes/EntityTypeEnumGenerator.java?ref=0915adcab4c9edde2d2178ad1ef1675f1b2be2fd",
    "patch": "@@ -4,6 +4,8 @@\n import com.google.gson.JsonArray;\n import com.google.gson.JsonObject;\n import com.squareup.javapoet.*;\n+import net.kyori.adventure.key.Key;\n+import net.kyori.adventure.key.Keyed;\n import net.minestom.codegen.ConstructorLambda;\n import net.minestom.codegen.EnumGenerator;\n import net.minestom.codegen.MinestomEnumGenerator;\n@@ -177,6 +179,12 @@ protected void prepare(EnumGenerator generator) {\n                     .endControlFlow()\n                     .addStatement(\"return null\");\n         });\n+\n+        // implement Keyed\n+        generator.addSuperinterface(ClassName.get(Keyed.class));\n+        generator.addField(ClassName.get(Key.class), \"key\", true);\n+        generator.appendToConstructor(code -> code.addStatement(\"this.key = Key.key(this.namespaceID)\"));\n+        generator.addMethod(\"key\", new ParameterSpec[0], ClassName.get(Key.class), code -> code.addStatement(\"return this.key\"));\n     }\n \n     @Override"
  },
  {
    "sha": "0c18693b2e3c9cc2631e821451c55cb0a96156d7",
    "filename": "src/generators/java/net/minestom/codegen/items/ItemEnumGenerator.java",
    "status": "modified",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/Minestom/Minestom/blob/0915adcab4c9edde2d2178ad1ef1675f1b2be2fd/src/generators/java/net/minestom/codegen/items/ItemEnumGenerator.java",
    "raw_url": "https://github.com/Minestom/Minestom/raw/0915adcab4c9edde2d2178ad1ef1675f1b2be2fd/src/generators/java/net/minestom/codegen/items/ItemEnumGenerator.java",
    "contents_url": "https://api.github.com/repos/Minestom/Minestom/contents/src/generators/java/net/minestom/codegen/items/ItemEnumGenerator.java?ref=0915adcab4c9edde2d2178ad1ef1675f1b2be2fd",
    "patch": "@@ -4,6 +4,8 @@\n import com.google.gson.JsonArray;\n import com.google.gson.JsonObject;\n import com.squareup.javapoet.*;\n+import net.kyori.adventure.key.Key;\n+import net.kyori.adventure.key.Keyed;\n import net.minestom.codegen.EnumGenerator;\n import net.minestom.codegen.MinestomEnumGenerator;\n import net.minestom.codegen.PrismarinePaths;\n@@ -218,6 +220,12 @@ protected void prepare(EnumGenerator generator) {\n                 .endControlFlow()\n                 .addStatement(\"return isFood()\");\n         });\n+\n+        // implement Keyed\n+        generator.addSuperinterface(ClassName.get(Keyed.class));\n+        generator.addField(ClassName.get(Key.class), \"key\", true);\n+        generator.appendToConstructor(code -> code.addStatement(\"this.key = Key.key(this.namespaceID)\"));\n+        generator.addMethod(\"key\", new ParameterSpec[0], ClassName.get(Key.class), code -> code.addStatement(\"return this.key\"));\n     }\n \n     @Override"
  },
  {
    "sha": "0d67b1ea5c2665925e02117f5986207e26053563",
    "filename": "src/generators/java/net/minestom/codegen/sounds/SoundEnumGenerator.java",
    "status": "modified",
    "additions": 11,
    "deletions": 1,
    "changes": 12,
    "blob_url": "https://github.com/Minestom/Minestom/blob/0915adcab4c9edde2d2178ad1ef1675f1b2be2fd/src/generators/java/net/minestom/codegen/sounds/SoundEnumGenerator.java",
    "raw_url": "https://github.com/Minestom/Minestom/raw/0915adcab4c9edde2d2178ad1ef1675f1b2be2fd/src/generators/java/net/minestom/codegen/sounds/SoundEnumGenerator.java",
    "contents_url": "https://api.github.com/repos/Minestom/Minestom/contents/src/generators/java/net/minestom/codegen/sounds/SoundEnumGenerator.java?ref=0915adcab4c9edde2d2178ad1ef1675f1b2be2fd",
    "patch": "@@ -1,7 +1,9 @@\n package net.minestom.codegen.sounds;\n \n+import com.squareup.javapoet.ClassName;\n+import net.kyori.adventure.sound.Sound;\n import net.minestom.codegen.BasicEnumGenerator;\n-import net.minestom.codegen.stats.StatsEnumGenerator;\n+import net.minestom.codegen.EnumGenerator;\n import net.minestom.server.registry.ResourceGatherer;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -45,6 +47,14 @@ private SoundEnumGenerator(File targetFolder) throws IOException {\n         super(targetFolder);\n     }\n \n+    @Override\n+    protected void prepare(EnumGenerator generator) {\n+        super.prepare(generator);\n+\n+        // implement type as well\n+        generator.addSuperinterface(ClassName.get(Sound.Type.class));\n+    }\n+\n     @Override\n     protected String getCategoryID() {\n         return \"minecraft:sound_event\";"
  },
  {
    "sha": "2ef755e7fed5b3a1210dda4fae839ca08d1e7547",
    "filename": "src/main/java/net/minestom/server/MinecraftServer.java",
    "status": "modified",
    "additions": 37,
    "deletions": 1,
    "changes": 38,
    "blob_url": "https://github.com/Minestom/Minestom/blob/0915adcab4c9edde2d2178ad1ef1675f1b2be2fd/src/main/java/net/minestom/server/MinecraftServer.java",
    "raw_url": "https://github.com/Minestom/Minestom/raw/0915adcab4c9edde2d2178ad1ef1675f1b2be2fd/src/main/java/net/minestom/server/MinecraftServer.java",
    "contents_url": "https://api.github.com/repos/Minestom/Minestom/contents/src/main/java/net/minestom/server/MinecraftServer.java?ref=0915adcab4c9edde2d2178ad1ef1675f1b2be2fd",
    "patch": "@@ -1,6 +1,10 @@\n package net.minestom.server;\n \n+import net.kyori.adventure.audience.Audience;\n+import net.kyori.adventure.audience.ForwardingAudience;\n import net.minestom.server.advancements.AdvancementManager;\n+import net.minestom.server.adventure.BossBarManager;\n+import net.minestom.server.adventure.SerializationManager;\n import net.minestom.server.benchmark.BenchmarkManager;\n import net.minestom.server.command.CommandManager;\n import net.minestom.server.data.DataManager;\n@@ -55,14 +59,16 @@\n import org.slf4j.LoggerFactory;\n \n import java.io.IOException;\n+import java.util.Collections;\n+import java.util.HashSet;\n \n /**\n  * The main server class used to start the server and retrieve all the managers.\n  * <p>\n  * The server needs to be initialized with {@link #init()} and started with {@link #start(String, int)}.\n  * You should register all of your dimensions, biomes, commands, events, etc... in-between.\n  */\n-public final class MinecraftServer {\n+public final class MinecraftServer implements ForwardingAudience {\n \n     public final static Logger LOGGER = LoggerFactory.getLogger(MinecraftServer.class);\n \n@@ -115,6 +121,8 @@\n     private static DimensionTypeManager dimensionTypeManager;\n     private static BiomeManager biomeManager;\n     private static AdvancementManager advancementManager;\n+    private static SerializationManager serializationManager;\n+    private static BossBarManager bossBarManager;\n \n     private static ExtensionManager extensionManager;\n \n@@ -180,6 +188,8 @@ public static MinecraftServer init() {\n         dimensionTypeManager = new DimensionTypeManager();\n         biomeManager = new BiomeManager();\n         advancementManager = new AdvancementManager();\n+        serializationManager = new SerializationManager();\n+        bossBarManager = new BossBarManager();\n \n         updateManager = new UpdateManager();\n \n@@ -427,6 +437,26 @@ public static ConnectionManager getConnectionManager() {\n         return connectionManager;\n     }\n \n+    /**\n+     * Gets the manager handing component serialization.\n+     *\n+     * @return the manager\n+     */\n+    public static SerializationManager getSerializationManager() {\n+        checkInitStatus(serializationManager);\n+        return serializationManager;\n+    }\n+\n+    /**\n+     * Gets the boss bar manager.\n+     *\n+     * @return the boss bar manager\n+     */\n+    public static BossBarManager getBossBarManager() {\n+        checkInitStatus(bossBarManager);\n+        return bossBarManager;\n+    }\n+\n     /**\n      * Gets the object handling the client packets processing.\n      * <p>\n@@ -804,4 +834,10 @@ private static void checkInitStatus(@Nullable Object object) {\n                         \"if you are developing an extension be sure to retrieve them at least after Extension#preInitialize\");*/\n     }\n \n+    @Override\n+    public @NotNull Iterable<? extends Audience> audiences() {\n+        HashSet<Audience> audiences = new HashSet<>(getConnectionManager().getOnlinePlayers());\n+        audiences.add(getCommandManager().getConsoleSender());\n+        return Collections.unmodifiableSet(audiences);\n+    }\n }"
  },
  {
    "sha": "a0c304e58fcd7865c71b40edee2c697303ab0c79",
    "filename": "src/main/java/net/minestom/server/Viewable.java",
    "status": "modified",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/Minestom/Minestom/blob/0915adcab4c9edde2d2178ad1ef1675f1b2be2fd/src/main/java/net/minestom/server/Viewable.java",
    "raw_url": "https://github.com/Minestom/Minestom/raw/0915adcab4c9edde2d2178ad1ef1675f1b2be2fd/src/main/java/net/minestom/server/Viewable.java",
    "contents_url": "https://api.github.com/repos/Minestom/Minestom/contents/src/main/java/net/minestom/server/Viewable.java?ref=0915adcab4c9edde2d2178ad1ef1675f1b2be2fd",
    "patch": "@@ -1,10 +1,12 @@\n package net.minestom.server;\n \n+import net.kyori.adventure.audience.Audience;\n import net.minestom.server.entity.Player;\n import net.minestom.server.network.packet.server.ServerPacket;\n import net.minestom.server.utils.PacketUtils;\n import org.jetbrains.annotations.NotNull;\n \n+import java.util.Collections;\n import java.util.Set;\n \n /**\n@@ -85,4 +87,13 @@ default void sendPacketToViewersAndSelf(@NotNull ServerPacket packet) {\n         }\n         sendPacketToViewers(packet);\n     }\n+\n+    /**\n+     * Gets the result of {@link #getViewers()} as an Adventure Audience.\n+     *\n+     * @return the audience\n+     */\n+    default @NotNull Iterable<? extends Audience> getViewersAsAudiences() {\n+        return Collections.unmodifiableSet(this.getViewers());\n+    }\n }"
  },
  {
    "sha": "d16c1a4496debc77232068ec2764c34601df0f48",
    "filename": "src/main/java/net/minestom/server/advancements/Advancement.java",
    "status": "modified",
    "additions": 76,
    "deletions": 8,
    "changes": 84,
    "blob_url": "https://github.com/Minestom/Minestom/blob/0915adcab4c9edde2d2178ad1ef1675f1b2be2fd/src/main/java/net/minestom/server/advancements/Advancement.java",
    "raw_url": "https://github.com/Minestom/Minestom/raw/0915adcab4c9edde2d2178ad1ef1675f1b2be2fd/src/main/java/net/minestom/server/advancements/Advancement.java",
    "contents_url": "https://api.github.com/repos/Minestom/Minestom/contents/src/main/java/net/minestom/server/advancements/Advancement.java?ref=0915adcab4c9edde2d2178ad1ef1675f1b2be2fd",
    "patch": "@@ -1,5 +1,6 @@\n package net.minestom.server.advancements;\n \n+import net.kyori.adventure.text.Component;\n import net.minestom.server.chat.JsonMessage;\n import net.minestom.server.entity.Player;\n import net.minestom.server.item.ItemStack;\n@@ -23,8 +24,8 @@\n \n     private boolean achieved;\n \n-    private JsonMessage title;\n-    private JsonMessage description;\n+    private Component title;\n+    private Component description;\n \n     private ItemStack icon;\n \n@@ -42,9 +43,29 @@\n     // Packet\n     private AdvancementsPacket.Criteria criteria;\n \n+    /**\n+     * @deprecated Use {@link #Advancement(Component, Component, ItemStack, FrameType, float, float)}\n+     */\n+    @Deprecated\n     public Advancement(@NotNull JsonMessage title, JsonMessage description,\n                        @NotNull ItemStack icon, @NotNull FrameType frameType,\n                        float x, float y) {\n+        this(title.asComponent(), description.asComponent(), icon, frameType, x, y);\n+    }\n+\n+    /**\n+     * @deprecated Use {@link #Advancement(Component, Component, Material, FrameType, float, float)}\n+     */\n+    @Deprecated\n+    public Advancement(@NotNull JsonMessage title, @NotNull JsonMessage description,\n+                       @NotNull Material icon, @NotNull FrameType frameType,\n+                       float x, float y) {\n+        this(title, description, new ItemStack(icon, (byte) 1), frameType, x, y);\n+    }\n+\n+    public Advancement(@NotNull Component title, Component description,\n+                       @NotNull ItemStack icon, @NotNull FrameType frameType,\n+                       float x, float y) {\n         this.title = title;\n         this.description = description;\n         this.icon = icon;\n@@ -53,7 +74,7 @@ public Advancement(@NotNull JsonMessage title, JsonMessage description,\n         this.y = y;\n     }\n \n-    public Advancement(@NotNull JsonMessage title, @NotNull JsonMessage description,\n+    public Advancement(@NotNull Component title, @NotNull Component description,\n                        @NotNull Material icon, @NotNull FrameType frameType,\n                        float x, float y) {\n         this(title, description, new ItemStack(icon, (byte) 1), frameType, x, y);\n@@ -94,46 +115,93 @@ protected void setTab(@NotNull AdvancementTab tab) {\n         this.tab = tab;\n     }\n \n+    /**\n+     * Gets the title of the advancement.\n+     *\n+     * @return the title\n+     */\n+    public Component getTitle() {\n+        return title;\n+    }\n+\n     /**\n      * Gets the title of the advancement.\n      *\n      * @return the advancement title\n+     * @deprecated Use {@link #getTitle()}\n      */\n     @NotNull\n-    public JsonMessage getTitle() {\n-        return title;\n+    @Deprecated\n+    public JsonMessage getTitleJson() {\n+        return JsonMessage.fromComponent(title);\n     }\n \n     /**\n      * Changes the advancement title.\n      *\n      * @param title the new title\n      */\n-    public void setTitle(@NotNull JsonMessage title) {\n+    public void setTitle(@NotNull Component title) {\n         this.title = title;\n         update();\n     }\n \n+    /**\n+     * Changes the advancement title.\n+     *\n+     * @param title the new title\n+     * @deprecated Use {@link #setTitle(Component)}\n+     */\n+    @Deprecated\n+    public void setTitle(@NotNull JsonMessage title) {\n+        this.title = title.asComponent();\n+        update();\n+    }\n+\n     /**\n      * Gets the description of the advancement.\n      *\n      * @return the description title\n      */\n     @NotNull\n-    public JsonMessage getDescription() {\n+    public Component getDescription() {\n         return description;\n     }\n \n+    /**\n+     * Gets the description of the advancement.\n+     *\n+     * @return the description title\n+     * @deprecated Use {@link #getDescription()}\n+     */\n+    @NotNull\n+    @Deprecated\n+    public JsonMessage getDescriptionJson() {\n+        return JsonMessage.fromComponent(description);\n+    }\n+\n     /**\n      * Changes the description title.\n      *\n      * @param description the new description\n      */\n-    public void setDescription(@NotNull JsonMessage description) {\n+    public void setDescription(@NotNull Component description) {\n         this.description = description;\n         update();\n     }\n \n+    /**\n+     * Changes the description title.\n+     *\n+     * @param description the new description\n+     * @deprecated Use {@link #setDescription(Component)}\n+     */\n+    @Deprecated\n+    public void setDescription(@NotNull JsonMessage description) {\n+        this.description = description.asComponent();\n+        update();\n+    }\n+\n     /**\n      * Gets the advancement icon.\n      *"
  },
  {
    "sha": "3aa224d30664aaa3ce2cd28c05c1a0d14e7193f4",
    "filename": "src/main/java/net/minestom/server/advancements/AdvancementRoot.java",
    "status": "modified",
    "additions": 25,
    "deletions": 0,
    "changes": 25,
    "blob_url": "https://github.com/Minestom/Minestom/blob/0915adcab4c9edde2d2178ad1ef1675f1b2be2fd/src/main/java/net/minestom/server/advancements/AdvancementRoot.java",
    "raw_url": "https://github.com/Minestom/Minestom/raw/0915adcab4c9edde2d2178ad1ef1675f1b2be2fd/src/main/java/net/minestom/server/advancements/AdvancementRoot.java",
    "contents_url": "https://api.github.com/repos/Minestom/Minestom/contents/src/main/java/net/minestom/server/advancements/AdvancementRoot.java?ref=0915adcab4c9edde2d2178ad1ef1675f1b2be2fd",
    "patch": "@@ -1,5 +1,6 @@\n package net.minestom.server.advancements;\n \n+import net.kyori.adventure.text.Component;\n import net.minestom.server.chat.ColoredText;\n import net.minestom.server.chat.JsonMessage;\n import net.minestom.server.item.ItemStack;\n@@ -15,6 +16,10 @@\n  */\n public class AdvancementRoot extends Advancement {\n \n+    /**\n+     * @deprecated Use {@link #AdvancementRoot(Component, Component, ItemStack, FrameType, float, float, String)}\n+     */\n+    @Deprecated\n     public AdvancementRoot(@NotNull JsonMessage title, @NotNull JsonMessage description,\n                            @NotNull ItemStack icon, @NotNull FrameType frameType,\n                            float x, float y,\n@@ -23,6 +28,10 @@ public AdvancementRoot(@NotNull JsonMessage title, @NotNull JsonMessage descript\n         setBackground(background);\n     }\n \n+    /**\n+     * @deprecated Use {@link #AdvancementRoot(Component, Component, Material, FrameType, float, float, String)}\n+     */\n+    @Deprecated\n     public AdvancementRoot(@NotNull JsonMessage title, @NotNull JsonMessage description,\n                            @NotNull Material icon, FrameType frameType,\n                            float x, float y,\n@@ -31,4 +40,20 @@ public AdvancementRoot(@NotNull JsonMessage title, @NotNull JsonMessage descript\n         setBackground(background);\n     }\n \n+    public AdvancementRoot(@NotNull Component title, @NotNull Component description,\n+                           @NotNull ItemStack icon, @NotNull FrameType frameType,\n+                           float x, float y,\n+                           @Nullable String background) {\n+        super(title, description, icon, frameType, x, y);\n+        setBackground(background);\n+    }\n+\n+    public AdvancementRoot(@NotNull Component title, @NotNull Component description,\n+                           @NotNull Material icon, FrameType frameType,\n+                           float x, float y,\n+                           @Nullable String background) {\n+        super(title, description, icon, frameType, x, y);\n+        setBackground(background);\n+    }\n+\n }"
  },
  {
    "sha": "456028ad012ae98638ac42553a72bf752a8ddb3e",
    "filename": "src/main/java/net/minestom/server/advancements/notifications/Notification.java",
    "status": "modified",
    "additions": 33,
    "deletions": 6,
    "changes": 39,
    "blob_url": "https://github.com/Minestom/Minestom/blob/0915adcab4c9edde2d2178ad1ef1675f1b2be2fd/src/main/java/net/minestom/server/advancements/notifications/Notification.java",
    "raw_url": "https://github.com/Minestom/Minestom/raw/0915adcab4c9edde2d2178ad1ef1675f1b2be2fd/src/main/java/net/minestom/server/advancements/notifications/Notification.java",
    "contents_url": "https://api.github.com/repos/Minestom/Minestom/contents/src/main/java/net/minestom/server/advancements/notifications/Notification.java?ref=0915adcab4c9edde2d2178ad1ef1675f1b2be2fd",
    "patch": "@@ -1,5 +1,6 @@\n package net.minestom.server.advancements.notifications;\n \n+import net.kyori.adventure.text.Component;\n import net.minestom.server.advancements.FrameType;\n import net.minestom.server.chat.JsonMessage;\n import net.minestom.server.item.ItemStack;\n@@ -11,29 +12,55 @@\n  */\n public class Notification {\n \n-    private final JsonMessage title;\n+    private final Component title;\n     private final FrameType frameType;\n     private final ItemStack icon;\n \n+    /**\n+     * @deprecated Use {@link #Notification(Component, FrameType, ItemStack)}\n+     */\n+    @Deprecated\n     public Notification(@NotNull JsonMessage title, @NotNull FrameType frameType, @NotNull ItemStack icon) {\n-        this.title = title;\n-        this.frameType = frameType;\n-        this.icon = icon;\n+        this(title.asComponent(), frameType, icon);\n     }\n \n+    /**\n+     * @deprecated Use {@link #Notification(Component, FrameType, Material)}\n+     */\n+    @Deprecated\n     public Notification(@NotNull JsonMessage title, @NotNull FrameType frameType, @NotNull Material icon) {\n+        this(title.asComponent(), frameType, icon);\n+    }\n+\n+    public Notification(@NotNull Component title, @NotNull FrameType frameType, @NotNull Material icon) {\n+        this(title, frameType, new ItemStack(icon, (byte) 1));\n+    }\n+\n+    public Notification(@NotNull Component title, @NotNull FrameType frameType, @NotNull ItemStack icon) {\n         this.title = title;\n         this.frameType = frameType;\n-        this.icon = new ItemStack(icon, (byte) 1);\n+        this.icon = icon;\n     }\n \n     /**\n      * Gets the title of the notification.\n      *\n      * @return the notification title\n+     *\n+     * @deprecated Use {@link #getTitle()}\n      */\n     @NotNull\n-    public JsonMessage getTitle() {\n+    @Deprecated\n+    public JsonMessage getTitleJson() {\n+        return JsonMessage.fromComponent(title);\n+    }\n+\n+    /**\n+     * Gets the title of the notification.\n+     *\n+     * @return the notification title\n+     */\n+    public Component getTitle() {\n         return title;\n     }\n "
  },
  {
    "sha": "57f597d3d36b0ba5a7ea398691bfecf027faa6b2",
    "filename": "src/main/java/net/minestom/server/advancements/notifications/NotificationCenter.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/Minestom/Minestom/blob/0915adcab4c9edde2d2178ad1ef1675f1b2be2fd/src/main/java/net/minestom/server/advancements/notifications/NotificationCenter.java",
    "raw_url": "https://github.com/Minestom/Minestom/raw/0915adcab4c9edde2d2178ad1ef1675f1b2be2fd/src/main/java/net/minestom/server/advancements/notifications/NotificationCenter.java",
    "contents_url": "https://api.github.com/repos/Minestom/Minestom/contents/src/main/java/net/minestom/server/advancements/notifications/NotificationCenter.java?ref=0915adcab4c9edde2d2178ad1ef1675f1b2be2fd",
    "patch": "@@ -1,6 +1,6 @@\n package net.minestom.server.advancements.notifications;\n \n-import net.minestom.server.chat.ColoredText;\n+import net.kyori.adventure.text.Component;\n import net.minestom.server.entity.Player;\n import net.minestom.server.network.packet.server.play.AdvancementsPacket;\n import net.minestom.server.network.player.PlayerConnection;\n@@ -84,7 +84,7 @@ private static AdvancementsPacket getCreatePacket(Notification notification) {\n             {\n                 displayData.title = notification.getTitle();\n                 // Description is required, but never shown/seen so, small Easter egg.\n-                displayData.description = ColoredText.of(\"Articdive was here. #Minestom\");\n+                displayData.description = Component.text(\"Articdive was here. #Minestom\");\n                 displayData.icon = notification.getIcon();\n                 displayData.frameType = notification.getFrameType();\n                 displayData.flags = 0x6;"
  },
  {
    "sha": "24cf7c8199d6fa937f2cb8da0100bfdd44d6346a",
    "filename": "src/main/java/net/minestom/server/adventure/AdventurePacketConvertor.java",
    "status": "added",
    "additions": 43,
    "deletions": 0,
    "changes": 43,
    "blob_url": "https://github.com/Minestom/Minestom/blob/0915adcab4c9edde2d2178ad1ef1675f1b2be2fd/src/main/java/net/minestom/server/adventure/AdventurePacketConvertor.java",
    "raw_url": "https://github.com/Minestom/Minestom/raw/0915adcab4c9edde2d2178ad1ef1675f1b2be2fd/src/main/java/net/minestom/server/adventure/AdventurePacketConvertor.java",
    "contents_url": "https://api.github.com/repos/Minestom/Minestom/contents/src/main/java/net/minestom/server/adventure/AdventurePacketConvertor.java?ref=0915adcab4c9edde2d2178ad1ef1675f1b2be2fd",
    "patch": "@@ -0,0 +1,43 @@\n+package net.minestom.server.adventure;\n+\n+import net.kyori.adventure.audience.MessageType;\n+import net.kyori.adventure.bossbar.BossBar;\n+import net.kyori.adventure.sound.Sound;\n+import org.jetbrains.annotations.NotNull;\n+\n+import java.util.Collection;\n+\n+/**\n+ * Utility methods to convert adventure enums to their packet values.\n+ */\n+public class AdventurePacketConvertor {\n+\n+    public static int getBossBarOverlayValue(@NotNull BossBar.Overlay overlay) {\n+        return overlay.ordinal();\n+    }\n+\n+    public static byte getBossBarFlagValue(@NotNull Collection<BossBar.Flag> flags) {\n+        byte val = 0x0;\n+        for (BossBar.Flag flag : flags) {\n+            val |= flag.ordinal();\n+        }\n+        return val;\n+    }\n+\n+    public static int getBossBarColorValue(@NotNull BossBar.Color color) {\n+        return color.ordinal();\n+    }\n+\n+    public static int getSoundSourceValue(@NotNull Sound.Source source) {\n+        return source.ordinal();\n+    }\n+\n+    public static byte getMessageTypeValue(@NotNull MessageType messageType) {\n+        switch (messageType) {\n+            case CHAT: return 0x00;\n+            case SYSTEM: return 0x01;\n+        }\n+\n+        throw new IllegalArgumentException(\"Cannot get message type\");\n+    }\n+}"
  },
  {
    "sha": "67e6db2a121bacf9049db991e40c935c143eb355",
    "filename": "src/main/java/net/minestom/server/adventure/BossBarManager.java",
    "status": "added",
    "additions": 214,
    "deletions": 0,
    "changes": 214,
    "blob_url": "https://github.com/Minestom/Minestom/blob/0915adcab4c9edde2d2178ad1ef1675f1b2be2fd/src/main/java/net/minestom/server/adventure/BossBarManager.java",
    "raw_url": "https://github.com/Minestom/Minestom/raw/0915adcab4c9edde2d2178ad1ef1675f1b2be2fd/src/main/java/net/minestom/server/adventure/BossBarManager.java",
    "contents_url": "https://api.github.com/repos/Minestom/Minestom/contents/src/main/java/net/minestom/server/adventure/BossBarManager.java?ref=0915adcab4c9edde2d2178ad1ef1675f1b2be2fd",
    "patch": "@@ -0,0 +1,214 @@\n+package net.minestom.server.adventure;\n+\n+import com.google.common.collect.MapMaker;\n+import net.kyori.adventure.bossbar.BossBar;\n+import net.kyori.adventure.bossbar.BossBar.Color;\n+import net.kyori.adventure.bossbar.BossBar.Flag;\n+import net.kyori.adventure.bossbar.BossBar.Overlay;\n+import net.kyori.adventure.text.Component;\n+import net.minestom.server.MinecraftServer;\n+import net.minestom.server.entity.Player;\n+import net.minestom.server.event.player.PlayerDisconnectEvent;\n+import net.minestom.server.network.packet.server.play.BossBarPacket;\n+import org.jetbrains.annotations.NotNull;\n+\n+import java.util.*;\n+import java.util.function.Consumer;\n+\n+import static net.minestom.server.network.packet.server.play.BossBarPacket.Action.*;\n+\n+/**\n+ * Manages all boss bars known to this Minestom instance. This implementation is heavily\n+ * based on <a href=\"https://github.com/VelocityPowered/Velocity\">Velocity</a>'s\n+ * boss bar management system.\n+ */\n+public class BossBarManager implements BossBar.Listener {\n+    private static final int CONCURRENCY_LEVEL = 4;\n+\n+    private final Map<BossBar, Holder> bars;\n+\n+    /**\n+     * Creates a new boss bar manager.\n+     */\n+    public BossBarManager() {\n+        this.bars = new MapMaker().concurrencyLevel(CONCURRENCY_LEVEL).weakKeys().makeMap();\n+\n+        MinecraftServer.getGlobalEventHandler().addEventCallback(PlayerDisconnectEvent.class, this::onDisconnect);\n+    }\n+\n+    /**\n+     * Adds the specified player to the boss bar's viewers and spawns the boss bar, registering the\n+     * boss bar if needed.\n+     *\n+     * @param player the intended viewer\n+     * @param bar the boss bar to show\n+     */\n+    public void addBossBar(@NotNull Player player, @NotNull BossBar bar) {\n+        Holder holder = this.getOrCreateHandler(bar);\n+\n+        if (holder.players.add(player.getUuid())) {\n+            player.getPlayerConnection().sendPacket(holder.createAddPacket());\n+        }\n+    }\n+    /**\n+     * Removes the specified player from the boss bar's viewers and despawns the boss bar.\n+     *\n+     * @param player the intended viewer\n+     * @param bar the boss bar to hide\n+     */\n+\n+    public void removeBossBar(@NotNull Player player, @NotNull BossBar bar) {\n+        Holder holder = this.getOrCreateHandler(bar);\n+\n+        if (holder.players.remove(player.getUuid())) {\n+            player.getPlayerConnection().sendPacket(holder.createRemovePacket());\n+        }\n+    }\n+\n+    @Override\n+    public void bossBarNameChanged(@NotNull BossBar bar, @NotNull Component oldName, @NotNull Component newName) {\n+        Holder holder = this.bars.get(bar);\n+        this.updatePlayers(holder.createTitleUpdate(newName), holder.players);\n+    }\n+\n+    @Override\n+    public void bossBarProgressChanged(@NotNull BossBar bar, float oldProgress, float newProgress) {\n+        Holder holder = this.bars.get(bar);\n+        this.updatePlayers(holder.createPercentUpdate(newProgress), holder.players);\n+    }\n+\n+    @Override\n+    public void bossBarColorChanged(@NotNull BossBar bar, @NotNull Color oldColor, @NotNull Color newColor) {\n+        Holder holder = this.bars.get(bar);\n+        this.updatePlayers(holder.createColorUpdate(newColor), holder.players);\n+    }\n+\n+    @Override\n+    public void bossBarOverlayChanged(@NotNull BossBar bar, BossBar.@NotNull Overlay oldOverlay, BossBar.@NotNull Overlay newOverlay) {\n+        Holder holder = this.bars.get(bar);\n+        this.updatePlayers(holder.createOverlayUpdate(newOverlay), holder.players);\n+    }\n+\n+    @Override\n+    public void bossBarFlagsChanged(@NotNull BossBar bar, @NotNull Set<BossBar.Flag> flagsAdded, @NotNull Set<BossBar.Flag> flagsRemoved) {\n+        Holder holder = this.bars.get(bar);\n+        this.updatePlayers(holder.createFlagsUpdate(), holder.players);\n+    }\n+\n+    /**\n+     * Sends the packet to all players in the set, removing them if they no longer exist\n+     * in the connection manager.\n+     *\n+     * @param packet the packet\n+     * @param players the players\n+     */\n+    private void updatePlayers(BossBarPacket packet, Set<UUID> players) {\n+        Iterator<UUID> iterator = players.iterator();\n+\n+        while (iterator.hasNext()) {\n+            Player player = MinecraftServer.getConnectionManager().getPlayer(iterator.next());\n+\n+            if (player == null) {\n+                iterator.remove();\n+            } else {\n+                player.getPlayerConnection().sendPacket(packet);\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Gets or creates a handler for this bar.\n+     *\n+     * @param bar the bar\n+     *\n+     * @return the handler\n+     */\n+    private @NotNull Holder getOrCreateHandler(@NotNull BossBar bar) {\n+        Holder holder = this.bars.computeIfAbsent(bar, Holder::new);\n+\n+        if (!holder.registered) {\n+            bar.addListener(this);\n+            holder.registered = true;\n+        }\n+\n+        return holder;\n+    }\n+\n+    /**\n+     * Called when a player disconnects. This removes the player from any boss bars they\n+     * may be subscribed to.\n+     *\n+     * @param event the event\n+     */\n+    private void onDisconnect(@NotNull PlayerDisconnectEvent event) {\n+        for (Holder holder : this.bars.values()) {\n+            holder.players.remove(event.getPlayer().getUuid());\n+        }\n+    }\n+\n+    private static class Holder {\n+        protected final UUID uuid;\n+        protected final BossBar bar;\n+        protected final Set<UUID> players;\n+        protected boolean registered;\n+\n+        Holder(@NotNull BossBar bar) {\n+            this.uuid = UUID.randomUUID();\n+            this.bar = bar;\n+            this.players = Collections.newSetFromMap(new MapMaker().weakKeys().makeMap());\n+            this.registered = false;\n+        }\n+\n+        @NotNull BossBarPacket createRemovePacket() {\n+            return this.createGenericPacket(REMOVE, packet -> {});\n+        }\n+\n+        @NotNull BossBarPacket createAddPacket() {\n+            return this.createGenericPacket(ADD, packet -> {\n+                packet.title = bar.name();\n+                packet.color = bar.color();\n+                packet.overlay = bar.overlay();\n+                packet.health = bar.progress();\n+                packet.flags = AdventurePacketConvertor.getBossBarFlagValue(bar.flags());\n+            });\n+        }\n+\n+        @NotNull BossBarPacket createPercentUpdate(float newPercent) {\n+            return this.createGenericPacket(UPDATE_HEALTH, packet -> packet.health = newPercent);\n+        }\n+\n+        @NotNull BossBarPacket createColorUpdate(@NotNull Color color) {\n+            return this.createGenericPacket(UPDATE_STYLE, packet -> {\n+                packet.color = color;\n+                packet.overlay = bar.overlay();\n+            });\n+        }\n+\n+        @NotNull BossBarPacket createTitleUpdate(@NotNull Component title) {\n+            return this.createGenericPacket(UPDATE_TITLE, packet -> packet.title = title);\n+        }\n+\n+        @NotNull BossBarPacket createFlagsUpdate() {\n+            return createFlagsUpdate(bar.flags());\n+        }\n+\n+        @NotNull BossBarPacket createFlagsUpdate(@NotNull Set<Flag> newFlags) {\n+            return this.createGenericPacket(UPDATE_FLAGS, packet -> packet.flags = AdventurePacketConvertor.getBossBarFlagValue(bar.flags()));\n+        }\n+\n+        @NotNull BossBarPacket createOverlayUpdate(@NotNull Overlay overlay) {\n+            return this.createGenericPacket(UPDATE_STYLE, packet -> {\n+                packet.overlay = overlay;\n+                packet.color = bar.color();\n+            });\n+        }\n+\n+        @NotNull BossBarPacket createGenericPacket(@NotNull BossBarPacket.Action action, @NotNull Consumer<BossBarPacket> consumer) {\n+            BossBarPacket packet = new BossBarPacket();\n+            packet.uuid = this.uuid;\n+            packet.action = action;\n+            consumer.accept(packet);\n+            return packet;\n+        }\n+    }\n+}"
  },
  {
    "sha": "baa08da60ca54f5124df01337e7546f411de5519",
    "filename": "src/main/java/net/minestom/server/adventure/ComponentHolder.java",
    "status": "added",
    "additions": 39,
    "deletions": 0,
    "changes": 39,
    "blob_url": "https://github.com/Minestom/Minestom/blob/0915adcab4c9edde2d2178ad1ef1675f1b2be2fd/src/main/java/net/minestom/server/adventure/ComponentHolder.java",
    "raw_url": "https://github.com/Minestom/Minestom/raw/0915adcab4c9edde2d2178ad1ef1675f1b2be2fd/src/main/java/net/minestom/server/adventure/ComponentHolder.java",
    "contents_url": "https://api.github.com/repos/Minestom/Minestom/contents/src/main/java/net/minestom/server/adventure/ComponentHolder.java?ref=0915adcab4c9edde2d2178ad1ef1675f1b2be2fd",
    "patch": "@@ -0,0 +1,39 @@\n+package net.minestom.server.adventure;\n+\n+import net.kyori.adventure.text.Component;\n+import org.jetbrains.annotations.NotNull;\n+\n+import java.util.Collection;\n+import java.util.function.Consumer;\n+import java.util.function.UnaryOperator;\n+\n+/**\n+ * Represents an object that holds some amount of components.\n+ * @param <T> the holding class\n+ */\n+public interface ComponentHolder<T> {\n+\n+    /**\n+     * Gets the components held by this object.\n+     * @return the components\n+     */\n+    @NotNull Collection<Component> components();\n+\n+    /**\n+     * Returns a copy of this object. For each component this object holds, the operator\n+     * is applied to the copy before returning.\n+     * @param operator the operator\n+     * @return the copy\n+     */\n+    @NotNull T copyWithOperator(@NotNull UnaryOperator<Component> operator);\n+\n+    /**\n+     * Visits each component held by this object.\n+     * @param visitor the visitor\n+     */\n+    default void visitComponents(@NotNull Consumer<Component> visitor) {\n+        for (Component component : this.components()) {\n+            visitor.accept(component);\n+        }\n+    }\n+}"
  },
  {
    "sha": "27612db5422e1d7a7c2b879cd7ec8096c5ca7a7b",
    "filename": "src/main/java/net/minestom/server/adventure/Localizable.java",
    "status": "added",
    "additions": 37,
    "deletions": 0,
    "changes": 37,
    "blob_url": "https://github.com/Minestom/Minestom/blob/0915adcab4c9edde2d2178ad1ef1675f1b2be2fd/src/main/java/net/minestom/server/adventure/Localizable.java",
    "raw_url": "https://github.com/Minestom/Minestom/raw/0915adcab4c9edde2d2178ad1ef1675f1b2be2fd/src/main/java/net/minestom/server/adventure/Localizable.java",
    "contents_url": "https://api.github.com/repos/Minestom/Minestom/contents/src/main/java/net/minestom/server/adventure/Localizable.java?ref=0915adcab4c9edde2d2178ad1ef1675f1b2be2fd",
    "patch": "@@ -0,0 +1,37 @@\n+package net.minestom.server.adventure;\n+\n+import org.jetbrains.annotations.NotNull;\n+import org.jetbrains.annotations.Nullable;\n+\n+import java.util.Locale;\n+\n+/**\n+ * Represents something which can have a locale.\n+ */\n+public interface Localizable {\n+\n+    /**\n+     * Gets a localizable that returns {@code null} for all calls to {@link #getLocale()}.\n+     *\n+     * @return the empty localizable\n+     */\n+    static @NotNull Localizable empty() {\n+        return SerializationManager.NULL_LOCALIZABLE;\n+    }\n+\n+    /**\n+     * Gets the locale.\n+     *\n+     * @return the locale, or {@code null} if they do not have a locale set\n+     */\n+    @Nullable Locale getLocale();\n+\n+    /**\n+     * Sets the locale. This can be set to {@code null} to remove a locale registration.\n+     *\n+     * @param locale the new locale\n+     */\n+    default void setLocale(@Nullable Locale locale) {\n+        throw new UnsupportedOperationException(\"You cannot set the locale for this object!\");\n+    }\n+}"
  }
]
