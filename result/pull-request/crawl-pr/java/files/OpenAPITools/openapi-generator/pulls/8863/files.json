[
  {
    "sha": "c7e0393d75263b3bd420dbcba6b662096d9e978d",
    "filename": "bin/configs/other/openapi3/jaxrs-cxf-client-jackson-nullable.yaml",
    "status": "added",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/OpenAPITools/openapi-generator/blob/a9923d13d02bf66002798c7092c4edd507e7d3ae/bin/configs/other/openapi3/jaxrs-cxf-client-jackson-nullable.yaml",
    "raw_url": "https://github.com/OpenAPITools/openapi-generator/raw/a9923d13d02bf66002798c7092c4edd507e7d3ae/bin/configs/other/openapi3/jaxrs-cxf-client-jackson-nullable.yaml",
    "contents_url": "https://api.github.com/repos/OpenAPITools/openapi-generator/contents/bin/configs/other/openapi3/jaxrs-cxf-client-jackson-nullable.yaml?ref=a9923d13d02bf66002798c7092c4edd507e7d3ae",
    "patch": "@@ -0,0 +1,6 @@\n+generatorName: jaxrs-cxf-client\n+outputDir: samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable\n+inputSpec: modules/openapi-generator/src/test/resources/3_0/petstore-with-fake-endpoints-models-for-testing.yaml\n+templateDir: modules/openapi-generator/src/main/resources/JavaJaxRS/cxf\n+additionalProperties:\n+  jackson: \"true\"\n\\ No newline at end of file"
  },
  {
    "sha": "953efcf114cc0e5e06b253a7154430ef353144c9",
    "filename": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/AbstractJavaCodegen.java",
    "status": "modified",
    "additions": 3,
    "deletions": 1,
    "changes": 4,
    "blob_url": "https://github.com/OpenAPITools/openapi-generator/blob/a9923d13d02bf66002798c7092c4edd507e7d3ae/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/AbstractJavaCodegen.java",
    "raw_url": "https://github.com/OpenAPITools/openapi-generator/raw/a9923d13d02bf66002798c7092c4edd507e7d3ae/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/AbstractJavaCodegen.java",
    "contents_url": "https://api.github.com/repos/OpenAPITools/openapi-generator/contents/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/AbstractJavaCodegen.java?ref=a9923d13d02bf66002798c7092c4edd507e7d3ae",
    "patch": "@@ -65,6 +65,7 @@\n     public static final String ADDITIONAL_MODEL_TYPE_ANNOTATIONS = \"additionalModelTypeAnnotations\";\n     public static final String DISCRIMINATOR_CASE_SENSITIVE = \"discriminatorCaseSensitive\";\n     public static final String OPENAPI_NULLABLE = \"openApiNullable\";\n+    public static final String JACKSON = \"jackson\";\n \n     protected String dateLibrary = \"threetenbp\";\n     protected boolean supportAsync = false;\n@@ -511,6 +512,7 @@ public void processOpts() {\n         importMapping.put(\"JsonValue\", \"com.fasterxml.jackson.annotation.JsonValue\");\n         importMapping.put(\"JsonIgnore\", \"com.fasterxml.jackson.annotation.JsonIgnore\");\n         importMapping.put(\"JsonInclude\", \"com.fasterxml.jackson.annotation.JsonInclude\");\n+        importMapping.put(\"JsonNullable\", \"org.openapitools.jackson.nullable.JsonNullable\");\n         importMapping.put(\"SerializedName\", \"com.google.gson.annotations.SerializedName\");\n         importMapping.put(\"TypeAdapter\", \"com.google.gson.TypeAdapter\");\n         importMapping.put(\"JsonAdapter\", \"com.google.gson.annotations.JsonAdapter\");\n@@ -1099,7 +1101,7 @@ public CodegenModel fromModel(String name, Schema model) {\n         if (codegenModel.description != null) {\n             codegenModel.imports.add(\"ApiModel\");\n         }\n-        if (codegenModel.discriminator != null && additionalProperties.containsKey(\"jackson\")) {\n+        if (codegenModel.discriminator != null && additionalProperties.containsKey(JACKSON)) {\n             codegenModel.imports.add(\"JsonSubTypes\");\n             codegenModel.imports.add(\"JsonTypeInfo\");\n         }"
  },
  {
    "sha": "7965c01e2a25f1245a3e0ce8cc18ade805237446",
    "filename": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/AbstractJavaJAXRSServerCodegen.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/OpenAPITools/openapi-generator/blob/a9923d13d02bf66002798c7092c4edd507e7d3ae/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/AbstractJavaJAXRSServerCodegen.java",
    "raw_url": "https://github.com/OpenAPITools/openapi-generator/raw/a9923d13d02bf66002798c7092c4edd507e7d3ae/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/AbstractJavaJAXRSServerCodegen.java",
    "contents_url": "https://api.github.com/repos/OpenAPITools/openapi-generator/contents/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/AbstractJavaJAXRSServerCodegen.java?ref=a9923d13d02bf66002798c7092c4edd507e7d3ae",
    "patch": "@@ -70,7 +70,7 @@ public AbstractJavaJAXRSServerCodegen() {\n \n         additionalProperties.put(\"title\", title);\n         // java inflector uses the jackson lib\n-        additionalProperties.put(\"jackson\", \"true\");\n+        additionalProperties.put(JACKSON, \"true\");\n \n         cliOptions.add(new CliOption(CodegenConstants.IMPL_FOLDER, CodegenConstants.IMPL_FOLDER_DESC).defaultValue(implFolder));\n         cliOptions.add(new CliOption(\"title\", \"a title describing the application\").defaultValue(title));"
  },
  {
    "sha": "a02a1782764e1cce35977ef78e0d062cdc569ae4",
    "filename": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/JavaCXFClientCodegen.java",
    "status": "modified",
    "additions": 21,
    "deletions": 2,
    "changes": 23,
    "blob_url": "https://github.com/OpenAPITools/openapi-generator/blob/a9923d13d02bf66002798c7092c4edd507e7d3ae/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/JavaCXFClientCodegen.java",
    "raw_url": "https://github.com/OpenAPITools/openapi-generator/raw/a9923d13d02bf66002798c7092c4edd507e7d3ae/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/JavaCXFClientCodegen.java",
    "contents_url": "https://api.github.com/repos/OpenAPITools/openapi-generator/contents/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/JavaCXFClientCodegen.java?ref=a9923d13d02bf66002798c7092c4edd507e7d3ae",
    "patch": "@@ -49,6 +49,8 @@\n \n     protected boolean useLoggingFeatureForTests = false;\n \n+    private boolean useJackson = false;\n+\n     public JavaCXFClientCodegen() {\n         super();\n \n@@ -108,6 +110,10 @@ public void processOpts() {\n             this.setUseLoggingFeatureForTests(convertPropertyToBooleanAndWriteBack(USE_LOGGING_FEATURE_FOR_TESTS));\n         }\n \n+        if (additionalProperties.containsKey(JACKSON)) {\n+            useJackson = convertPropertyToBooleanAndWriteBack(JACKSON);\n+        }\n+\n         supportingFiles.clear(); // Don't need extra files provided by AbstractJAX-RS & Java Codegen\n \n         supportingFiles.add(new SupportingFile(\"pom.mustache\", \"\", \"pom.xml\")\n@@ -139,12 +145,22 @@ public void postProcessModelProperty(CodegenModel model, CodegenProperty propert\n         model.imports.remove(\"JsonSerialize\");\n         model.imports.remove(\"ToStringSerializer\");\n \n-        //Add imports for Jackson when model has inner enum\n-        if (additionalProperties.containsKey(\"jackson\")) {\n+\n+        if (useJackson) {\n+            //Add jackson imports when model has inner enum\n             if (Boolean.FALSE.equals(model.isEnum) && Boolean.TRUE.equals(model.hasEnums)) {\n                 model.imports.add(\"JsonCreator\");\n                 model.imports.add(\"JsonValue\");\n             }\n+\n+            //Add JsonNullable import and mark property nullable for templating if necessary\n+            if (openApiNullable) {\n+                if (Boolean.FALSE.equals(property.required) && Boolean.TRUE.equals(property.isNullable)) {\n+                    property.getVendorExtensions().put(\"x-is-jackson-optional-nullable\", true);\n+                    model.imports.add(\"JsonNullable\");\n+                    model.imports.add(\"JsonIgnore\");\n+                }\n+            }\n         }\n     }\n \n@@ -195,4 +211,7 @@ public boolean isUseGenericResponse() {\n         return useGenericResponse;\n     }\n \n+    public boolean isUseJackson() {\n+        return useJackson;\n+    }\n }"
  },
  {
    "sha": "f7dae1dc15aad97d8a10d8eb630dca07e7a3b25f",
    "filename": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/JavaCXFServerCodegen.java",
    "status": "modified",
    "additions": 1,
    "deletions": 4,
    "changes": 5,
    "blob_url": "https://github.com/OpenAPITools/openapi-generator/blob/a9923d13d02bf66002798c7092c4edd507e7d3ae/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/JavaCXFServerCodegen.java",
    "raw_url": "https://github.com/OpenAPITools/openapi-generator/raw/a9923d13d02bf66002798c7092c4edd507e7d3ae/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/JavaCXFServerCodegen.java",
    "contents_url": "https://api.github.com/repos/OpenAPITools/openapi-generator/contents/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/JavaCXFServerCodegen.java?ref=a9923d13d02bf66002798c7092c4edd507e7d3ae",
    "patch": "@@ -17,7 +17,6 @@\n \n package org.openapitools.codegen.languages;\n \n-import io.swagger.v3.oas.models.Operation;\n import org.openapitools.codegen.*;\n import org.openapitools.codegen.languages.features.CXFServerFeatures;\n import org.openapitools.codegen.languages.features.GzipTestFeatures;\n@@ -27,8 +26,6 @@\n import org.slf4j.LoggerFactory;\n \n import java.io.File;\n-import java.util.List;\n-import java.util.Map;\n \n public class JavaCXFServerCodegen extends AbstractJavaJAXRSServerCodegen\n         implements CXFServerFeatures, GzipTestFeatures, LoggingTestFeatures, UseGenericResponseFeatures {\n@@ -245,7 +242,7 @@ public void postProcessModelProperty(CodegenModel model, CodegenProperty propert\n         model.imports.remove(\"ToStringSerializer\");\n \n         //Add imports for Jackson when model has inner enum\n-        if (additionalProperties.containsKey(\"jackson\")) {\n+        if (additionalProperties.containsKey(JACKSON)) {\n             if (Boolean.FALSE.equals(model.isEnum) && Boolean.TRUE.equals(model.hasEnums)) {\n                 model.imports.add(\"JsonCreator\");\n                 model.imports.add(\"JsonValue\");"
  },
  {
    "sha": "5bf0265e2cbaaf17e7e1b67635cd43a74be5b40b",
    "filename": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/JavaInflectorServerCodegen.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/OpenAPITools/openapi-generator/blob/a9923d13d02bf66002798c7092c4edd507e7d3ae/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/JavaInflectorServerCodegen.java",
    "raw_url": "https://github.com/OpenAPITools/openapi-generator/raw/a9923d13d02bf66002798c7092c4edd507e7d3ae/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/JavaInflectorServerCodegen.java",
    "contents_url": "https://api.github.com/repos/OpenAPITools/openapi-generator/contents/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/JavaInflectorServerCodegen.java?ref=a9923d13d02bf66002798c7092c4edd507e7d3ae",
    "patch": "@@ -69,7 +69,7 @@ public JavaInflectorServerCodegen() {\n \n         additionalProperties.put(\"title\", title);\n         // java inflector uses the jackson lib\n-        additionalProperties.put(\"jackson\", \"true\");\n+        additionalProperties.put(JACKSON, \"true\");\n     }\n \n     @Override"
  },
  {
    "sha": "009b292d3dbbe3d8d3b7220f0dd885ca0f02e652",
    "filename": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/JavaJAXRSSpecServerCodegen.java",
    "status": "modified",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/OpenAPITools/openapi-generator/blob/a9923d13d02bf66002798c7092c4edd507e7d3ae/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/JavaJAXRSSpecServerCodegen.java",
    "raw_url": "https://github.com/OpenAPITools/openapi-generator/raw/a9923d13d02bf66002798c7092c4edd507e7d3ae/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/JavaJAXRSSpecServerCodegen.java",
    "contents_url": "https://api.github.com/repos/OpenAPITools/openapi-generator/contents/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/JavaJAXRSSpecServerCodegen.java?ref=a9923d13d02bf66002798c7092c4edd507e7d3ae",
    "patch": "@@ -31,7 +31,6 @@\n     public static final String RETURN_RESPONSE = \"returnResponse\";\n     public static final String GENERATE_POM = \"generatePom\";\n     public static final String USE_SWAGGER_ANNOTATIONS = \"useSwaggerAnnotations\";\n-    public static final String JACKSON = \"jackson\";\n     public static final String OPEN_API_SPEC_FILE_LOCATION = \"openApiSpecFileLocation\";\n     public static final String GENERATE_BUILDERS = \"generateBuilders\";\n "
  },
  {
    "sha": "ed8d3258607337c3a69bcc98a0f1d11218f758df",
    "filename": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/JavaPKMSTServerCodegen.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/OpenAPITools/openapi-generator/blob/a9923d13d02bf66002798c7092c4edd507e7d3ae/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/JavaPKMSTServerCodegen.java",
    "raw_url": "https://github.com/OpenAPITools/openapi-generator/raw/a9923d13d02bf66002798c7092c4edd507e7d3ae/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/JavaPKMSTServerCodegen.java",
    "contents_url": "https://api.github.com/repos/OpenAPITools/openapi-generator/contents/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/JavaPKMSTServerCodegen.java?ref=a9923d13d02bf66002798c7092c4edd507e7d3ae",
    "patch": "@@ -70,7 +70,7 @@ public JavaPKMSTServerCodegen() {\n         updateOption(CodegenConstants.API_PACKAGE, apiPackage);\n         updateOption(CodegenConstants.MODEL_PACKAGE, modelPackage);\n \n-        additionalProperties.put(\"jackson\", \"true\");\n+        additionalProperties.put(JACKSON, \"true\");\n \n         this.cliOptions.add(new CliOption(\"basePackage\", \"base package for java source code\"));\n         this.cliOptions.add(new CliOption(\"serviceName\", \"Service Name\"));\n@@ -422,7 +422,7 @@ public void postProcessModelProperty(CodegenModel model, CodegenProperty propert\n             }\n         } else { // enum class\n             // Needed imports for Jackson's JsonCreator\n-            if (this.additionalProperties.containsKey(\"jackson\")) {\n+            if (this.additionalProperties.containsKey(JACKSON)) {\n                 model.imports.add(\"JsonCreator\");\n             }\n         }"
  },
  {
    "sha": "e3037d734607bdf4754536fb639bb9d4182b6a41",
    "filename": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/JavaPlayFrameworkCodegen.java",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/OpenAPITools/openapi-generator/blob/a9923d13d02bf66002798c7092c4edd507e7d3ae/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/JavaPlayFrameworkCodegen.java",
    "raw_url": "https://github.com/OpenAPITools/openapi-generator/raw/a9923d13d02bf66002798c7092c4edd507e7d3ae/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/JavaPlayFrameworkCodegen.java",
    "contents_url": "https://api.github.com/repos/OpenAPITools/openapi-generator/contents/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/JavaPlayFrameworkCodegen.java?ref=a9923d13d02bf66002798c7092c4edd507e7d3ae",
    "patch": "@@ -31,7 +31,6 @@\n import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n \n-import static org.openapitools.codegen.utils.OnceLogger.once;\n import static org.openapitools.codegen.utils.StringUtils.camelize;\n \n public class JavaPlayFrameworkCodegen extends AbstractJavaCodegen implements BeanValidationFeatures {\n@@ -83,7 +82,7 @@ public JavaPlayFrameworkCodegen() {\n         updateOption(CodegenConstants.MODEL_PACKAGE, modelPackage);\n \n         additionalProperties.put(\"java8\", true);\n-        additionalProperties.put(\"jackson\", \"true\");\n+        additionalProperties.put(JACKSON, \"true\");\n \n         cliOptions.add(new CliOption(TITLE, \"server title name or client service name\").defaultValue(title));\n         cliOptions.add(new CliOption(CONFIG_PACKAGE, \"configuration package for generated code\").defaultValue(getConfigPackage()));"
  },
  {
    "sha": "54d5b5335f3ee7342e26ef9ac19710c2c0eff62c",
    "filename": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/SpringCodegen.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/OpenAPITools/openapi-generator/blob/a9923d13d02bf66002798c7092c4edd507e7d3ae/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/SpringCodegen.java",
    "raw_url": "https://github.com/OpenAPITools/openapi-generator/raw/a9923d13d02bf66002798c7092c4edd507e7d3ae/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/SpringCodegen.java",
    "contents_url": "https://api.github.com/repos/OpenAPITools/openapi-generator/contents/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/SpringCodegen.java?ref=a9923d13d02bf66002798c7092c4edd507e7d3ae",
    "patch": "@@ -145,7 +145,7 @@ public SpringCodegen() {\n         apiTestTemplateFiles.clear(); // TODO: add test template\n \n         // spring uses the jackson lib\n-        additionalProperties.put(\"jackson\", \"true\");\n+        additionalProperties.put(JACKSON, \"true\");\n         additionalProperties.put(\"openbrace\", OPEN_BRACE);\n         additionalProperties.put(\"closebrace\", CLOSE_BRACE);\n \n@@ -829,7 +829,7 @@ public void postProcessModelProperty(CodegenModel model, CodegenProperty propert\n             }\n         } else { // enum class\n             //Needed imports for Jackson's JsonCreator\n-            if (additionalProperties.containsKey(\"jackson\")) {\n+            if (additionalProperties.containsKey(JACKSON)) {\n                 model.imports.add(\"JsonCreator\");\n             }\n         }"
  },
  {
    "sha": "0dd381f8ee4b79b623b8b5aa96cee0e3f745fa66",
    "filename": "modules/openapi-generator/src/main/resources/JavaJaxRS/cxf/pojo.mustache",
    "status": "modified",
    "additions": 92,
    "deletions": 11,
    "changes": 103,
    "blob_url": "https://github.com/OpenAPITools/openapi-generator/blob/a9923d13d02bf66002798c7092c4edd507e7d3ae/modules/openapi-generator/src/main/resources/JavaJaxRS/cxf/pojo.mustache",
    "raw_url": "https://github.com/OpenAPITools/openapi-generator/raw/a9923d13d02bf66002798c7092c4edd507e7d3ae/modules/openapi-generator/src/main/resources/JavaJaxRS/cxf/pojo.mustache",
    "contents_url": "https://api.github.com/repos/OpenAPITools/openapi-generator/contents/modules/openapi-generator/src/main/resources/JavaJaxRS/cxf/pojo.mustache?ref=a9923d13d02bf66002798c7092c4edd507e7d3ae",
    "patch": "@@ -28,13 +28,23 @@ import com.fasterxml.jackson.annotation.JsonProperty;\n    * {{{description}}}\n   **/\n {{/description}}\n-{{#isContainer}}\n+{{#vendorExtensions.x-is-jackson-optional-nullable}}\n+  {{#isContainer}}\n+  private JsonNullable<{{{datatypeWithEnum}}}> {{name}} = JsonNullable.<{{{datatypeWithEnum}}}>undefined();\n+  {{/isContainer}}\n+  {{^isContainer}}\n+  private JsonNullable<{{{datatypeWithEnum}}}> {{name}} = JsonNullable.<{{{datatypeWithEnum}}}>{{#defaultValue}}of({{{.}}}){{/defaultValue}}{{^defaultValue}}undefined(){{/defaultValue}};\n+  {{/isContainer}}\n+{{/vendorExtensions.x-is-jackson-optional-nullable}}\n+{{^vendorExtensions.x-is-jackson-optional-nullable}}\n+  {{#isContainer}}\n   private {{{datatypeWithEnum}}} {{name}}{{#required}} = {{{defaultValue}}}{{/required}}{{^required}} = null{{/required}};\n-{{/isContainer}}\n-{{^isContainer}}\n+  {{/isContainer}}\n+  {{^isContainer}}\n   private {{{datatypeWithEnum}}} {{name}}{{#defaultValue}} = {{{.}}}{{/defaultValue}};\n-{{/isContainer}}\n-  {{/vars}}\n+  {{/isContainer}}\n+{{/vendorExtensions.x-is-jackson-optional-nullable}}\n+{{/vars}}\n   {{#vars}}\n  /**\n   {{#description}}\n@@ -51,44 +61,115 @@ import com.fasterxml.jackson.annotation.JsonProperty;\n   {{/maximum}}\n    * @return {{name}}\n   **/\n-  @JsonProperty(\"{{baseName}}\")\n {{#vendorExtensions.x-extra-annotation}}\n   {{{vendorExtensions.x-extra-annotation}}}\n {{/vendorExtensions.x-extra-annotation}}\n-{{#useBeanValidation}}{{>beanValidation}}{{/useBeanValidation}}  {{#isEnum}}{{^isArray}}{{^isMap}}public {{dataType}} {{getter}}() {\n+{{#vendorExtensions.x-is-jackson-optional-nullable}}\n+{{!unannotated, Jackson would pick this up automatically and add it *in addition* to the _JsonNullable getter field}}\n+  @JsonIgnore\n+{{/vendorExtensions.x-is-jackson-optional-nullable}}\n+{{^vendorExtensions.x-is-jackson-optional-nullable}}\n+  @JsonProperty(\"{{baseName}}\")\n+{{/vendorExtensions.x-is-jackson-optional-nullable}}\n+{{#useBeanValidation}}{{>beanValidation}}{{/useBeanValidation}}  {{#isEnum}}{{^isContainer}}public {{dataType}} {{getter}}() {\n+  {{#vendorExtensions.x-is-jackson-optional-nullable}}\n+    if ({{name}} == null || !{{name}}.isPresent() || {{name}}.get() == null) {\n+      return null;\n+    }\n+    return {{name}}.get().value();\n+  {{/vendorExtensions.x-is-jackson-optional-nullable}}\n+  {{^vendorExtensions.x-is-jackson-optional-nullable}}\n     if ({{name}} == null) {\n       return null;\n     }\n     return {{name}}.value();\n-  }{{/isMap}}{{/isArray}}{{/isEnum}}{{#isEnum}}{{#isArray}}public {{{datatypeWithEnum}}} {{getter}}() {\n-    return {{name}};\n-  }{{/isArray}}{{/isEnum}}{{#isEnum}}{{#isMap}}public {{{datatypeWithEnum}}} {{getter}}() {\n+  {{/vendorExtensions.x-is-jackson-optional-nullable}}\n+  }{{/isContainer}}{{#isContainer}}public {{{datatypeWithEnum}}} {{getter}}() {\n+  {{#vendorExtensions.x-is-jackson-optional-nullable}}\n+    if ({{name}} == null) {\n+      return null;\n+    }\n+    return {{name}}.orElse(null);\n+  {{/vendorExtensions.x-is-jackson-optional-nullable}}\n+  {{^vendorExtensions.x-is-jackson-optional-nullable}}\n     return {{name}};\n-  }{{/isMap}}{{/isEnum}}{{^isEnum}}public {{{datatypeWithEnum}}} {{getter}}() {\n+  {{/vendorExtensions.x-is-jackson-optional-nullable}}\n+  }{{/isContainer}}{{/isEnum}}{{^isEnum}}public {{{datatypeWithEnum}}} {{getter}}() {\n+  {{#vendorExtensions.x-is-jackson-optional-nullable}}\n+    if ({{name}} == null) {\n+      return null;\n+    }\n+    return {{name}}.orElse(null);\n+  {{/vendorExtensions.x-is-jackson-optional-nullable}}\n+  {{^vendorExtensions.x-is-jackson-optional-nullable}}\n     return {{name}};\n+  {{/vendorExtensions.x-is-jackson-optional-nullable}}\n   }{{/isEnum}}\n+  {{#vendorExtensions.x-is-jackson-optional-nullable}}\n+\n+  @JsonProperty(\"{{baseName}}\")\n+  public JsonNullable<{{{datatypeWithEnum}}}> {{getter}}_JsonNullable() {\n+    return {{name}};\n+  }\n+  {{/vendorExtensions.x-is-jackson-optional-nullable}}\n \n   {{^isReadOnly}}\n   public void {{setter}}({{{datatypeWithEnum}}} {{name}}) {\n+  {{#vendorExtensions.x-is-jackson-optional-nullable}}\n+      this.{{name}} = JsonNullable.<{{{datatypeWithEnum}}}>of({{name}});\n+  {{/vendorExtensions.x-is-jackson-optional-nullable}}\n+  {{^vendorExtensions.x-is-jackson-optional-nullable}}\n+    this.{{name}} = {{name}};\n+  {{/vendorExtensions.x-is-jackson-optional-nullable}}\n+  }\n+  {{#vendorExtensions.x-is-jackson-optional-nullable}}\n+\n+  @JsonProperty(\"{{baseName}}\")\n+  public void {{setter}}_JsonNullable(JsonNullable<{{{datatypeWithEnum}}}> {{name}}) {\n+    {{! For getters/setters that have name differing from attribute name, we must include setter (albeit private) for jackson to be able to set the attribute}}\n     this.{{name}} = {{name}};\n   }\n+  {{/vendorExtensions.x-is-jackson-optional-nullable}}\n \n   public {{classname}} {{name}}({{{datatypeWithEnum}}} {{name}}) {\n+  {{#vendorExtensions.x-is-jackson-optional-nullable}}\n+    this.{{name}} = JsonNullable.<{{{datatypeWithEnum}}}>of({{name}});\n+  {{/vendorExtensions.x-is-jackson-optional-nullable}}\n+  {{^vendorExtensions.x-is-jackson-optional-nullable}}\n     this.{{name}} = {{name}};\n+  {{/vendorExtensions.x-is-jackson-optional-nullable}}\n     return this;\n   }\n   {{#isArray}}\n \n   public {{classname}} add{{nameInCamelCase}}Item({{{items.datatypeWithEnum}}} {{name}}Item) {\n+  {{#vendorExtensions.x-is-jackson-optional-nullable}}\n+    if (this.{{name}} == null || !this.{{name}}.isPresent()) {\n+      this.{{name}} = JsonNullable.<{{{datatypeWithEnum}}}>of({{{defaultValue}}});\n+    }\n+    this.{{name}}.get().add({{name}}Item);\n+    return this;\n+  {{/vendorExtensions.x-is-jackson-optional-nullable}}\n+  {{^vendorExtensions.x-is-jackson-optional-nullable}}\n     this.{{name}}.add({{name}}Item);\n     return this;\n+  {{/vendorExtensions.x-is-jackson-optional-nullable}}\n   }\n   {{/isArray}}\n   {{#isMap}}\n \n   public {{classname}} put{{nameInCamelCase}}Item(String key, {{{items.datatypeWithEnum}}} {{name}}Item) {\n+  {{#vendorExtensions.x-is-jackson-optional-nullable}}\n+    if (this.{{name}} == null || !this.{{name}}.isPresent()) {\n+      this.{{name}} = JsonNullable.<{{{datatypeWithEnum}}}>of({{{defaultValue}}});\n+    }\n+    this.{{name}}.get().put(key, {{name}}Item);\n+    return this;\n+  {{/vendorExtensions.x-is-jackson-optional-nullable}}\n+  {{^vendorExtensions.x-is-jackson-optional-nullable}}\n     this.{{name}}.put(key, {{name}}Item);\n     return this;\n+  {{/vendorExtensions.x-is-jackson-optional-nullable}}\n   }\n   {{/isMap}}\n   {{/isReadOnly}}"
  },
  {
    "sha": "f1066a7d68e51309073b11510c3b73a5daa5ee87",
    "filename": "modules/openapi-generator/src/test/java/org/openapitools/codegen/java/JavaCXFClientCodegenTest.java",
    "status": "modified",
    "additions": 119,
    "deletions": 4,
    "changes": 123,
    "blob_url": "https://github.com/OpenAPITools/openapi-generator/blob/a9923d13d02bf66002798c7092c4edd507e7d3ae/modules/openapi-generator/src/test/java/org/openapitools/codegen/java/JavaCXFClientCodegenTest.java",
    "raw_url": "https://github.com/OpenAPITools/openapi-generator/raw/a9923d13d02bf66002798c7092c4edd507e7d3ae/modules/openapi-generator/src/test/java/org/openapitools/codegen/java/JavaCXFClientCodegenTest.java",
    "contents_url": "https://api.github.com/repos/OpenAPITools/openapi-generator/contents/modules/openapi-generator/src/test/java/org/openapitools/codegen/java/JavaCXFClientCodegenTest.java?ref=a9923d13d02bf66002798c7092c4edd507e7d3ae",
    "patch": "@@ -22,10 +22,8 @@\n import io.swagger.v3.oas.models.media.*;\n import io.swagger.v3.oas.models.responses.ApiResponse;\n import io.swagger.v3.oas.models.responses.ApiResponses;\n-import org.openapitools.codegen.CodegenConstants;\n-import org.openapitools.codegen.CodegenOperation;\n-import org.openapitools.codegen.CodegenResponse;\n-import org.openapitools.codegen.TestUtils;\n+import org.openapitools.codegen.*;\n+import org.openapitools.codegen.languages.AbstractJavaCodegen;\n import org.openapitools.codegen.languages.JavaCXFClientCodegen;\n import org.openapitools.codegen.languages.features.BeanValidationFeatures;\n import org.openapitools.codegen.languages.features.GzipTestFeatures;\n@@ -179,4 +177,121 @@ public void testUseGzipFeatureForTestsAdditionalProperty() throws Exception {\n         Assert.assertTrue(codegen.isUseGzipFeatureForTests());\n     }\n \n+    @Test\n+    public void testOpenApiNullableAdditionalProperty() throws Exception {\n+        JavaCXFClientCodegen codegen = new JavaCXFClientCodegen();\n+\n+        codegen.processOpts();\n+        Assert.assertNotNull(codegen.additionalProperties().get(AbstractJavaCodegen.OPENAPI_NULLABLE));\n+        Assert.assertTrue(codegen.isOpenApiNullable());\n+\n+        codegen.additionalProperties().put(AbstractJavaCodegen.OPENAPI_NULLABLE, false);\n+        codegen.processOpts();\n+        Assert.assertEquals(codegen.additionalProperties().get(AbstractJavaCodegen.OPENAPI_NULLABLE), Boolean.FALSE);\n+        Assert.assertFalse(codegen.isOpenApiNullable());\n+    }\n+\n+    @Test\n+    public void testPostProcessNullableModelPropertyWithOpenApiNullableEnabled() throws Exception {\n+        JavaCXFClientCodegen codegen = new JavaCXFClientCodegen();\n+        codegen.additionalProperties().put(AbstractJavaCodegen.JACKSON, true);\n+        codegen.additionalProperties().put(AbstractJavaCodegen.OPENAPI_NULLABLE, true);\n+        codegen.processOpts();\n+\n+        CodegenModel codegenModel = new CodegenModel();\n+        CodegenProperty codegenProperty = new CodegenProperty();\n+        codegenProperty.required = false;\n+        codegenProperty.isNullable = true;\n+\n+        codegen.postProcessModelProperty(codegenModel, codegenProperty);\n+        Assert.assertTrue(codegenModel.imports.contains(\"JsonNullable\"));\n+        Assert.assertTrue(codegenModel.imports.contains(\"JsonIgnore\"));\n+        Assert.assertEquals(codegenProperty.getVendorExtensions().get(\"x-is-jackson-optional-nullable\"), Boolean.TRUE);\n+    }\n+\n+    @Test\n+    public void testPostProcessNullableModelPropertyWithOpenApiNullableDisabled() throws Exception {\n+        JavaCXFClientCodegen codegen = new JavaCXFClientCodegen();\n+        codegen.additionalProperties().put(AbstractJavaCodegen.JACKSON, true);\n+        codegen.additionalProperties().put(AbstractJavaCodegen.OPENAPI_NULLABLE, false);\n+        codegen.processOpts();\n+\n+        CodegenModel codegenModel = new CodegenModel();\n+        CodegenProperty codegenProperty = new CodegenProperty();\n+        codegenProperty.required = false;\n+        codegenProperty.isNullable = true;\n+\n+        codegen.postProcessModelProperty(codegenModel, codegenProperty);\n+        Assert.assertFalse(codegenModel.imports.contains(\"JsonNullable\"));\n+        Assert.assertFalse(codegenModel.imports.contains(\"JsonIgnore\"));\n+        Assert.assertNull(codegenProperty.getVendorExtensions().get(\"x-is-jackson-optional-nullable\"));\n+    }\n+\n+    @Test\n+    public void testPostProcessNullableModelPropertyWithOpenApiNullableEnabledForRequiredProperties() throws Exception {\n+        JavaCXFClientCodegen codegen = new JavaCXFClientCodegen();\n+        codegen.additionalProperties().put(AbstractJavaCodegen.JACKSON, true);\n+        codegen.additionalProperties().put(AbstractJavaCodegen.OPENAPI_NULLABLE, true);\n+        codegen.processOpts();\n+\n+        CodegenModel codegenModel = new CodegenModel();\n+        CodegenProperty codegenProperty = new CodegenProperty();\n+        codegenProperty.required = true;\n+        codegenProperty.isNullable = true;\n+\n+        codegen.postProcessModelProperty(codegenModel, codegenProperty);\n+        Assert.assertFalse(codegenModel.imports.contains(\"JsonNullable\"));\n+        Assert.assertFalse(codegenModel.imports.contains(\"JsonIgnore\"));\n+        Assert.assertNull(codegenProperty.getVendorExtensions().get(\"x-is-jackson-optional-nullable\"));\n+    }\n+\n+    @Test\n+    public void testPostProcessNotNullableModelPropertyWithOpenApiNullableEnabled() throws Exception {\n+        JavaCXFClientCodegen codegen = new JavaCXFClientCodegen();\n+        codegen.additionalProperties().put(AbstractJavaCodegen.JACKSON, true);\n+        codegen.additionalProperties().put(AbstractJavaCodegen.OPENAPI_NULLABLE, true);\n+        codegen.processOpts();\n+\n+        CodegenModel codegenModel = new CodegenModel();\n+        CodegenProperty codegenProperty = new CodegenProperty();\n+        codegenProperty.required = false;\n+        codegenProperty.isNullable = false;\n+\n+        codegen.postProcessModelProperty(codegenModel, codegenProperty);\n+        Assert.assertFalse(codegenModel.imports.contains(\"JsonNullable\"));\n+        Assert.assertFalse(codegenModel.imports.contains(\"JsonIgnore\"));\n+        Assert.assertNull(codegenProperty.getVendorExtensions().get(\"x-is-jackson-optional-nullable\"));\n+    }\n+\n+    @Test\n+    public void testPostProcessNullableModelPropertyWithOpenApiNullableEnabledButJacksonDisabled() throws Exception {\n+        JavaCXFClientCodegen codegen = new JavaCXFClientCodegen();\n+        codegen.additionalProperties().put(AbstractJavaCodegen.JACKSON, false);\n+        codegen.additionalProperties().put(AbstractJavaCodegen.OPENAPI_NULLABLE, true);\n+        codegen.processOpts();\n+\n+        CodegenModel codegenModel = new CodegenModel();\n+        CodegenProperty codegenProperty = new CodegenProperty();\n+        codegenProperty.required = false;\n+        codegenProperty.isNullable = true;\n+\n+        codegen.postProcessModelProperty(codegenModel, codegenProperty);\n+        Assert.assertFalse(codegenModel.imports.contains(\"JsonNullable\"));\n+        Assert.assertFalse(codegenModel.imports.contains(\"JsonIgnore\"));\n+        Assert.assertNull(codegenProperty.getVendorExtensions().get(\"x-is-jackson-optional-nullable\"));\n+    }\n+\n+    @Test\n+    public void testUseJackson() throws Exception {\n+        JavaCXFClientCodegen codegen = new JavaCXFClientCodegen();\n+\n+        codegen.processOpts();\n+        Assert.assertNull(codegen.additionalProperties().get(AbstractJavaCodegen.JACKSON));\n+        Assert.assertFalse(codegen.isUseJackson());\n+\n+        codegen.additionalProperties().put(AbstractJavaCodegen.JACKSON, true);\n+        codegen.processOpts();\n+        Assert.assertEquals(codegen.additionalProperties().get(AbstractJavaCodegen.JACKSON), Boolean.TRUE);\n+        Assert.assertTrue(codegen.isUseJackson());\n+    }\n }"
  },
  {
    "sha": "40080ec4384f371601444654e8aa6da33eefb8c5",
    "filename": "modules/openapi-generator/src/test/java/org/openapitools/codegen/java/jaxrs/JavaJaxrsBaseTest.java",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/OpenAPITools/openapi-generator/blob/a9923d13d02bf66002798c7092c4edd507e7d3ae/modules/openapi-generator/src/test/java/org/openapitools/codegen/java/jaxrs/JavaJaxrsBaseTest.java",
    "raw_url": "https://github.com/OpenAPITools/openapi-generator/raw/a9923d13d02bf66002798c7092c4edd507e7d3ae/modules/openapi-generator/src/test/java/org/openapitools/codegen/java/jaxrs/JavaJaxrsBaseTest.java",
    "contents_url": "https://api.github.com/repos/OpenAPITools/openapi-generator/contents/modules/openapi-generator/src/test/java/org/openapitools/codegen/java/jaxrs/JavaJaxrsBaseTest.java?ref=a9923d13d02bf66002798c7092c4edd507e7d3ae",
    "patch": "@@ -23,6 +23,7 @@\n \n import static org.openapitools.codegen.TestUtils.assertFileContains;\n import static org.openapitools.codegen.TestUtils.assertFileNotContains;\n+import static org.openapitools.codegen.languages.AbstractJavaCodegen.JACKSON;\n \n public abstract class JavaJaxrsBaseTest {\n \n@@ -59,7 +60,7 @@ public void generateJsonAnnotationForPolymorphism() throws IOException {\n \n     @Test\n     public void doNotGenerateJsonAnnotationForPolymorphismIfJsonExclude() throws IOException {\n-        codegen.additionalProperties().put(\"jackson\", false);\n+        codegen.additionalProperties().put(JACKSON, false);\n         File output = Files.createTempDirectory(\"test\").toFile().getCanonicalFile();\n         output.deleteOnExit();\n         String outputPath = output.getAbsolutePath().replace('\\\\', '/');"
  },
  {
    "sha": "7484ee590a3894506cf063799b885428f95a71be",
    "filename": "samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/.openapi-generator-ignore",
    "status": "added",
    "additions": 23,
    "deletions": 0,
    "changes": 23,
    "blob_url": "https://github.com/OpenAPITools/openapi-generator/blob/a9923d13d02bf66002798c7092c4edd507e7d3ae/samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/.openapi-generator-ignore",
    "raw_url": "https://github.com/OpenAPITools/openapi-generator/raw/a9923d13d02bf66002798c7092c4edd507e7d3ae/samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/.openapi-generator-ignore",
    "contents_url": "https://api.github.com/repos/OpenAPITools/openapi-generator/contents/samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/.openapi-generator-ignore?ref=a9923d13d02bf66002798c7092c4edd507e7d3ae",
    "patch": "@@ -0,0 +1,23 @@\n+# OpenAPI Generator Ignore\n+# Generated by openapi-generator https://github.com/openapitools/openapi-generator\n+\n+# Use this file to prevent files from being overwritten by the generator.\n+# The patterns follow closely to .gitignore or .dockerignore.\n+\n+# As an example, the C# client generator defines ApiClient.cs.\n+# You can make changes and tell OpenAPI Generator to ignore just this file by uncommenting the following line:\n+#ApiClient.cs\n+\n+# You can match any string of characters against a directory, file or extension with a single asterisk (*):\n+#foo/*/qux\n+# The above matches foo/bar/qux and foo/baz/qux, but not foo/bar/baz/qux\n+\n+# You can recursively match patterns against a directory, file or extension with a double asterisk (**):\n+#foo/**/qux\n+# This matches foo/bar/qux, foo/baz/qux, and foo/bar/baz/qux\n+\n+# You can also negate patterns with an exclamation (!).\n+# For example, you can ignore all files in a docs folder with the file extension .md:\n+#docs/*.md\n+# Then explicitly reverse the ignore rule for a single file:\n+#!docs/README.md"
  },
  {
    "sha": "0caf05fc27731fc13d7e8d078e867afdee6ff07d",
    "filename": "samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/.openapi-generator/FILES",
    "status": "added",
    "additions": 49,
    "deletions": 0,
    "changes": 49,
    "blob_url": "https://github.com/OpenAPITools/openapi-generator/blob/a9923d13d02bf66002798c7092c4edd507e7d3ae/samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/.openapi-generator/FILES",
    "raw_url": "https://github.com/OpenAPITools/openapi-generator/raw/a9923d13d02bf66002798c7092c4edd507e7d3ae/samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/.openapi-generator/FILES",
    "contents_url": "https://api.github.com/repos/OpenAPITools/openapi-generator/contents/samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/.openapi-generator/FILES?ref=a9923d13d02bf66002798c7092c4edd507e7d3ae",
    "patch": "@@ -0,0 +1,49 @@\n+pom.xml\n+src/gen/java/org/openapitools/api/AnotherFakeApi.java\n+src/gen/java/org/openapitools/api/DefaultApi.java\n+src/gen/java/org/openapitools/api/FakeApi.java\n+src/gen/java/org/openapitools/api/FakeClassnameTags123Api.java\n+src/gen/java/org/openapitools/api/PetApi.java\n+src/gen/java/org/openapitools/api/StoreApi.java\n+src/gen/java/org/openapitools/api/UserApi.java\n+src/gen/java/org/openapitools/model/AdditionalPropertiesClass.java\n+src/gen/java/org/openapitools/model/Animal.java\n+src/gen/java/org/openapitools/model/ArrayOfArrayOfNumberOnly.java\n+src/gen/java/org/openapitools/model/ArrayOfNumberOnly.java\n+src/gen/java/org/openapitools/model/ArrayTest.java\n+src/gen/java/org/openapitools/model/Capitalization.java\n+src/gen/java/org/openapitools/model/Cat.java\n+src/gen/java/org/openapitools/model/CatAllOf.java\n+src/gen/java/org/openapitools/model/Category.java\n+src/gen/java/org/openapitools/model/ClassModel.java\n+src/gen/java/org/openapitools/model/Client.java\n+src/gen/java/org/openapitools/model/Dog.java\n+src/gen/java/org/openapitools/model/DogAllOf.java\n+src/gen/java/org/openapitools/model/EnumArrays.java\n+src/gen/java/org/openapitools/model/EnumClass.java\n+src/gen/java/org/openapitools/model/EnumTest.java\n+src/gen/java/org/openapitools/model/FileSchemaTestClass.java\n+src/gen/java/org/openapitools/model/Foo.java\n+src/gen/java/org/openapitools/model/FormatTest.java\n+src/gen/java/org/openapitools/model/HasOnlyReadOnly.java\n+src/gen/java/org/openapitools/model/HealthCheckResult.java\n+src/gen/java/org/openapitools/model/InlineResponseDefault.java\n+src/gen/java/org/openapitools/model/MapTest.java\n+src/gen/java/org/openapitools/model/MixedPropertiesAndAdditionalPropertiesClass.java\n+src/gen/java/org/openapitools/model/Model200Response.java\n+src/gen/java/org/openapitools/model/ModelApiResponse.java\n+src/gen/java/org/openapitools/model/ModelReturn.java\n+src/gen/java/org/openapitools/model/Name.java\n+src/gen/java/org/openapitools/model/NullableClass.java\n+src/gen/java/org/openapitools/model/NumberOnly.java\n+src/gen/java/org/openapitools/model/Order.java\n+src/gen/java/org/openapitools/model/OuterComposite.java\n+src/gen/java/org/openapitools/model/OuterEnum.java\n+src/gen/java/org/openapitools/model/OuterEnumDefaultValue.java\n+src/gen/java/org/openapitools/model/OuterEnumInteger.java\n+src/gen/java/org/openapitools/model/OuterEnumIntegerDefaultValue.java\n+src/gen/java/org/openapitools/model/Pet.java\n+src/gen/java/org/openapitools/model/ReadOnlyFirst.java\n+src/gen/java/org/openapitools/model/SpecialModelName.java\n+src/gen/java/org/openapitools/model/Tag.java\n+src/gen/java/org/openapitools/model/User.java"
  },
  {
    "sha": "c30f0ec2be7f339925555dfcb2a85787564c1724",
    "filename": "samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/.openapi-generator/VERSION",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/OpenAPITools/openapi-generator/blob/a9923d13d02bf66002798c7092c4edd507e7d3ae/samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/.openapi-generator/VERSION",
    "raw_url": "https://github.com/OpenAPITools/openapi-generator/raw/a9923d13d02bf66002798c7092c4edd507e7d3ae/samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/.openapi-generator/VERSION",
    "contents_url": "https://api.github.com/repos/OpenAPITools/openapi-generator/contents/samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/.openapi-generator/VERSION?ref=a9923d13d02bf66002798c7092c4edd507e7d3ae",
    "patch": "@@ -0,0 +1 @@\n+5.1.0-SNAPSHOT\n\\ No newline at end of file"
  },
  {
    "sha": "33ef00aa9857570936ba0db62fc951af747fd001",
    "filename": "samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/pom.xml",
    "status": "added",
    "additions": 181,
    "deletions": 0,
    "changes": 181,
    "blob_url": "https://github.com/OpenAPITools/openapi-generator/blob/a9923d13d02bf66002798c7092c4edd507e7d3ae/samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/pom.xml",
    "raw_url": "https://github.com/OpenAPITools/openapi-generator/raw/a9923d13d02bf66002798c7092c4edd507e7d3ae/samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/pom.xml",
    "contents_url": "https://api.github.com/repos/OpenAPITools/openapi-generator/contents/samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/pom.xml?ref=a9923d13d02bf66002798c7092c4edd507e7d3ae",
    "patch": "@@ -0,0 +1,181 @@\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+  <groupId>org.openapitools</groupId>\n+  <artifactId>openapi-jaxrs-client</artifactId>\n+  <packaging>jar</packaging>\n+  <name>openapi-jaxrs-client</name>\n+  <description>This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \\&quot; \\\\</description>\n+  <version>1.0.0</version>\n+  <build>\n+    <sourceDirectory>src/main/java</sourceDirectory>\n+    <plugins>\n+      <plugin>\n+        <artifactId>maven-failsafe-plugin</artifactId>\n+        <version>2.6</version>\n+        <executions>\n+          <execution>\n+            <goals>\n+              <goal>integration-test</goal>\n+              <goal>verify</goal>\n+            </goals>\n+          </execution>\n+        </executions>\n+      </plugin>\n+      <!--plugin>\n+        <groupId>org.eclipse.jetty</groupId>\n+        <artifactId>jetty-maven-plugin</artifactId>\n+        <version>${jetty-version}</version>\n+        <configuration>\n+          <webApp>\n+            <contextPath>/</contextPath>\n+          </webApp>\n+          <webAppSourceDirectory>target/${project.artifactId}-${project.version}</webAppSourceDirectory>\n+          <stopPort>8079</stopPort>\n+          <stopKey>stopit</stopKey>\n+          <httpConnector>\n+            <port></port>\n+            <idleTimeout>60000</idleTimeout>\n+          </httpConnector>\n+        </configuration>\n+        <executions>\n+          <execution>\n+            <id>start-jetty</id>\n+            <phase>pre-integration-test</phase>\n+            <goals>\n+              <goal>start</goal>\n+            </goals>\n+            <configuration>\n+              <scanIntervalSeconds>0</scanIntervalSeconds>\n+              <daemon>true</daemon>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>stop-jetty</id>\n+            <phase>post-integration-test</phase>\n+            <goals>\n+              <goal>stop</goal>\n+            </goals>\n+          </execution>\n+        </executions>\n+      </plugin-->\n+      <plugin>\n+        <groupId>org.codehaus.mojo</groupId>\n+        <artifactId>build-helper-maven-plugin</artifactId>\n+        <version>1.9.1</version>\n+        <executions>\n+          <execution>\n+            <id>add-source</id>\n+            <phase>generate-sources</phase>\n+            <goals>\n+              <goal>add-source</goal>\n+            </goals>\n+            <configuration>\n+              <sources>\n+                <source>src/gen/java</source>\n+              </sources>\n+            </configuration>\n+          </execution>\n+        </executions>\n+      </plugin>\n+    </plugins>\n+  </build>\n+  <dependencies>\n+    <dependency>\n+      <groupId>io.swagger</groupId>\n+      <artifactId>swagger-jaxrs</artifactId>\n+      <scope>compile</scope>\n+      <version>${swagger-core-version}</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>ch.qos.logback</groupId>\n+      <artifactId>logback-classic</artifactId>\n+      <version>${logback-version}</version>\n+      <scope>compile</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>ch.qos.logback</groupId>\n+      <artifactId>logback-core</artifactId>\n+      <version>${logback-version}</version>\n+      <scope>compile</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>junit</groupId>\n+      <artifactId>junit</artifactId>\n+      <version>${junit-version}</version>\n+      <scope>test</scope>\n+    </dependency>\n+    <!-- CXF Client -->\n+    <dependency>\n+        <groupId>org.apache.cxf</groupId>\n+        <artifactId>cxf-rt-rs-client</artifactId>\n+        <version>${cxf-version}</version>\n+        <scope>test</scope>\n+    </dependency>\n+    \n+     <!-- CXF server -->\n+    <dependency>\n+        <groupId>org.apache.cxf</groupId>\n+        <artifactId>cxf-rt-frontend-jaxrs</artifactId>\n+        <version>${cxf-version}</version>\n+        <scope>compile</scope>\n+    </dependency>\n+    <dependency>\n+        <groupId>org.apache.cxf</groupId>\n+        <artifactId>cxf-rt-rs-service-description</artifactId>\n+        <version>${cxf-version}</version>\n+        <scope>compile</scope>\n+    </dependency>\n+    <dependency>\n+        <groupId>org.apache.cxf</groupId>\n+        <artifactId>cxf-rt-ws-policy</artifactId>\n+        <version>${cxf-version}</version>\n+        <scope>compile</scope>\n+    </dependency>\n+    <dependency>\n+        <groupId>org.apache.cxf</groupId>\n+        <artifactId>cxf-rt-wsdl</artifactId>\n+        <version>${cxf-version}</version>\n+        <scope>compile</scope>\n+    </dependency>\n+    <dependency>\n+        <groupId>com.fasterxml.jackson.jaxrs</groupId>\n+        <artifactId>jackson-jaxrs-json-provider</artifactId>\n+        <version>${jackson-jaxrs-version}</version>\n+        <scope>compile</scope>\n+    </dependency>\n+    <dependency>\n+        <groupId>com.fasterxml.jackson.datatype</groupId>\n+        <artifactId>jackson-datatype-joda</artifactId>\n+        <version>${jackson-jaxrs-version}</version>\n+    </dependency>\n+    <dependency>\n+        <groupId>javax.annotation</groupId>\n+        <artifactId>javax.annotation-api</artifactId>\n+        <version>${javax-annotation-version}</version>\n+        <scope>provided</scope>\n+    </dependency>\n+  </dependencies>\n+  <repositories>\n+    <repository>\n+      <id>sonatype-snapshots</id>\n+      <url>https://oss.sonatype.org/content/repositories/snapshots</url>\n+      <snapshots>\n+        <enabled>true</enabled>\n+      </snapshots>\n+    </repository>\n+  </repositories>\n+  <properties>\n+    <java.version>1.7</java.version>\n+    <maven.compiler.source>${java.version}</maven.compiler.source>\n+    <maven.compiler.target>${java.version}</maven.compiler.target>\n+    <swagger-core-version>1.5.18</swagger-core-version>\n+    <jetty-version>9.2.9.v20150224</jetty-version>\n+    <junit-version>4.13.1</junit-version>\n+    <logback-version>1.1.7</logback-version>\n+    <servlet-api-version>2.5</servlet-api-version>\n+    <cxf-version>3.3.0</cxf-version>\n+    <jackson-jaxrs-version>2.9.9</jackson-jaxrs-version>\n+    <javax-annotation-version>1.3.2</javax-annotation-version>\n+    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+  </properties>\n+</project>"
  },
  {
    "sha": "8dfdd76aafb567592338bf041d2130985f8ae818",
    "filename": "samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/src/gen/java/org/openapitools/api/AnotherFakeApi.java",
    "status": "added",
    "additions": 45,
    "deletions": 0,
    "changes": 45,
    "blob_url": "https://github.com/OpenAPITools/openapi-generator/blob/a9923d13d02bf66002798c7092c4edd507e7d3ae/samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/src/gen/java/org/openapitools/api/AnotherFakeApi.java",
    "raw_url": "https://github.com/OpenAPITools/openapi-generator/raw/a9923d13d02bf66002798c7092c4edd507e7d3ae/samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/src/gen/java/org/openapitools/api/AnotherFakeApi.java",
    "contents_url": "https://api.github.com/repos/OpenAPITools/openapi-generator/contents/samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/src/gen/java/org/openapitools/api/AnotherFakeApi.java?ref=a9923d13d02bf66002798c7092c4edd507e7d3ae",
    "patch": "@@ -0,0 +1,45 @@\n+package org.openapitools.api;\n+\n+import org.openapitools.model.Client;\n+\n+import java.io.InputStream;\n+import java.io.OutputStream;\n+import java.util.List;\n+import java.util.Map;\n+import javax.ws.rs.*;\n+import javax.ws.rs.core.Response;\n+import javax.ws.rs.core.MediaType;\n+import org.apache.cxf.jaxrs.ext.multipart.*;\n+\n+import io.swagger.annotations.Api;\n+import io.swagger.annotations.ApiOperation;\n+import io.swagger.annotations.ApiResponses;\n+import io.swagger.annotations.ApiResponse;\n+import io.swagger.jaxrs.PATCH;\n+\n+/**\n+ * OpenAPI Petstore\n+ *\n+ * <p>This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \\\" \\\\\n+ *\n+ */\n+@Path(\"/another-fake/dummy\")\n+@Api(value = \"/\", description = \"\")\n+public interface AnotherFakeApi  {\n+\n+    /**\n+     * To test special tags\n+     *\n+     * To test special tags and operation ID starting with number\n+     *\n+     */\n+    @PATCH\n+    \n+    @Consumes({ \"application/json\" })\n+    @Produces({ \"application/json\" })\n+    @ApiOperation(value = \"To test special tags\", tags={  })\n+    @ApiResponses(value = { \n+        @ApiResponse(code = 200, message = \"successful operation\", response = Client.class) })\n+    public Client call123testSpecialTags(Client client);\n+}\n+"
  },
  {
    "sha": "3f89d74c9edb52cd246962d9779d1a07dd013ae3",
    "filename": "samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/src/gen/java/org/openapitools/api/DefaultApi.java",
    "status": "added",
    "additions": 38,
    "deletions": 0,
    "changes": 38,
    "blob_url": "https://github.com/OpenAPITools/openapi-generator/blob/a9923d13d02bf66002798c7092c4edd507e7d3ae/samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/src/gen/java/org/openapitools/api/DefaultApi.java",
    "raw_url": "https://github.com/OpenAPITools/openapi-generator/raw/a9923d13d02bf66002798c7092c4edd507e7d3ae/samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/src/gen/java/org/openapitools/api/DefaultApi.java",
    "contents_url": "https://api.github.com/repos/OpenAPITools/openapi-generator/contents/samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/src/gen/java/org/openapitools/api/DefaultApi.java?ref=a9923d13d02bf66002798c7092c4edd507e7d3ae",
    "patch": "@@ -0,0 +1,38 @@\n+package org.openapitools.api;\n+\n+import org.openapitools.model.InlineResponseDefault;\n+\n+import java.io.InputStream;\n+import java.io.OutputStream;\n+import java.util.List;\n+import java.util.Map;\n+import javax.ws.rs.*;\n+import javax.ws.rs.core.Response;\n+import javax.ws.rs.core.MediaType;\n+import org.apache.cxf.jaxrs.ext.multipart.*;\n+\n+import io.swagger.annotations.Api;\n+import io.swagger.annotations.ApiOperation;\n+import io.swagger.annotations.ApiResponses;\n+import io.swagger.annotations.ApiResponse;\n+import io.swagger.jaxrs.PATCH;\n+\n+/**\n+ * OpenAPI Petstore\n+ *\n+ * <p>This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \\\" \\\\\n+ *\n+ */\n+@Path(\"/foo\")\n+@Api(value = \"/\", description = \"\")\n+public interface DefaultApi  {\n+\n+    @GET\n+    \n+    @Produces({ \"application/json\" })\n+    @ApiOperation(value = \"\", tags={  })\n+    @ApiResponses(value = { \n+        @ApiResponse(code = 200, message = \"response\", response = InlineResponseDefault.class) })\n+    public InlineResponseDefault fooGet();\n+}\n+"
  },
  {
    "sha": "a286c189544cd94b29a68b1d4bc1ff5901126044",
    "filename": "samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/src/gen/java/org/openapitools/api/FakeApi.java",
    "status": "added",
    "additions": 204,
    "deletions": 0,
    "changes": 204,
    "blob_url": "https://github.com/OpenAPITools/openapi-generator/blob/a9923d13d02bf66002798c7092c4edd507e7d3ae/samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/src/gen/java/org/openapitools/api/FakeApi.java",
    "raw_url": "https://github.com/OpenAPITools/openapi-generator/raw/a9923d13d02bf66002798c7092c4edd507e7d3ae/samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/src/gen/java/org/openapitools/api/FakeApi.java",
    "contents_url": "https://api.github.com/repos/OpenAPITools/openapi-generator/contents/samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/src/gen/java/org/openapitools/api/FakeApi.java?ref=a9923d13d02bf66002798c7092c4edd507e7d3ae",
    "patch": "@@ -0,0 +1,204 @@\n+package org.openapitools.api;\n+\n+import java.math.BigDecimal;\n+import org.openapitools.model.Client;\n+import java.util.Date;\n+import java.io.File;\n+import org.openapitools.model.FileSchemaTestClass;\n+import org.openapitools.model.HealthCheckResult;\n+import org.joda.time.LocalDate;\n+import org.openapitools.model.OuterComposite;\n+import org.openapitools.model.Pet;\n+import org.openapitools.model.User;\n+\n+import java.io.InputStream;\n+import java.io.OutputStream;\n+import java.util.List;\n+import java.util.Map;\n+import javax.ws.rs.*;\n+import javax.ws.rs.core.Response;\n+import javax.ws.rs.core.MediaType;\n+import org.apache.cxf.jaxrs.ext.multipart.*;\n+\n+import io.swagger.annotations.Api;\n+import io.swagger.annotations.ApiOperation;\n+import io.swagger.annotations.ApiResponses;\n+import io.swagger.annotations.ApiResponse;\n+import io.swagger.jaxrs.PATCH;\n+\n+/**\n+ * OpenAPI Petstore\n+ *\n+ * <p>This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \\\" \\\\\n+ *\n+ */\n+@Path(\"/fake\")\n+@Api(value = \"/\", description = \"\")\n+public interface FakeApi  {\n+\n+    /**\n+     * Health check endpoint\n+     *\n+     */\n+    @GET\n+    @Path(\"/health\")\n+    @Produces({ \"application/json\" })\n+    @ApiOperation(value = \"Health check endpoint\", tags={  })\n+    @ApiResponses(value = { \n+        @ApiResponse(code = 200, message = \"The instance started successfully\", response = HealthCheckResult.class) })\n+    public HealthCheckResult fakeHealthGet();\n+\n+    /**\n+     * test http signature authentication\n+     *\n+     */\n+    @GET\n+    @Path(\"/http-signature-test\")\n+    @Consumes({ \"application/json\", \"application/xml\" })\n+    @ApiOperation(value = \"test http signature authentication\", tags={  })\n+    @ApiResponses(value = { \n+        @ApiResponse(code = 200, message = \"The instance started successfully\") })\n+    public void fakeHttpSignatureTest(Pet pet, @QueryParam(\"query_1\") String query1, @HeaderParam(\"header_1\")  String header1);\n+\n+    @POST\n+    @Path(\"/outer/boolean\")\n+    @Consumes({ \"application/json\" })\n+    @Produces({ \"*/*\" })\n+    @ApiOperation(value = \"\", tags={  })\n+    @ApiResponses(value = { \n+        @ApiResponse(code = 200, message = \"Output boolean\", response = Boolean.class) })\n+    public Boolean fakeOuterBooleanSerialize(Boolean body);\n+\n+    @POST\n+    @Path(\"/outer/composite\")\n+    @Consumes({ \"application/json\" })\n+    @Produces({ \"*/*\" })\n+    @ApiOperation(value = \"\", tags={  })\n+    @ApiResponses(value = { \n+        @ApiResponse(code = 200, message = \"Output composite\", response = OuterComposite.class) })\n+    public OuterComposite fakeOuterCompositeSerialize(OuterComposite outerComposite);\n+\n+    @POST\n+    @Path(\"/outer/number\")\n+    @Consumes({ \"application/json\" })\n+    @Produces({ \"*/*\" })\n+    @ApiOperation(value = \"\", tags={  })\n+    @ApiResponses(value = { \n+        @ApiResponse(code = 200, message = \"Output number\", response = BigDecimal.class) })\n+    public BigDecimal fakeOuterNumberSerialize(BigDecimal body);\n+\n+    @POST\n+    @Path(\"/outer/string\")\n+    @Consumes({ \"application/json\" })\n+    @Produces({ \"*/*\" })\n+    @ApiOperation(value = \"\", tags={  })\n+    @ApiResponses(value = { \n+        @ApiResponse(code = 200, message = \"Output string\", response = String.class) })\n+    public String fakeOuterStringSerialize(String body);\n+\n+    @PUT\n+    @Path(\"/body-with-file-schema\")\n+    @Consumes({ \"application/json\" })\n+    @ApiOperation(value = \"\", tags={  })\n+    @ApiResponses(value = { \n+        @ApiResponse(code = 200, message = \"Success\") })\n+    public void testBodyWithFileSchema(FileSchemaTestClass fileSchemaTestClass);\n+\n+    @PUT\n+    @Path(\"/body-with-query-params\")\n+    @Consumes({ \"application/json\" })\n+    @ApiOperation(value = \"\", tags={  })\n+    @ApiResponses(value = { \n+        @ApiResponse(code = 200, message = \"Success\") })\n+    public void testBodyWithQueryParams(@QueryParam(\"query\") String query, User user);\n+\n+    /**\n+     * To test \\&quot;client\\&quot; model\n+     *\n+     * To test \\&quot;client\\&quot; model\n+     *\n+     */\n+    @PATCH\n+    \n+    @Consumes({ \"application/json\" })\n+    @Produces({ \"application/json\" })\n+    @ApiOperation(value = \"To test \\\"client\\\" model\", tags={  })\n+    @ApiResponses(value = { \n+        @ApiResponse(code = 200, message = \"successful operation\", response = Client.class) })\n+    public Client testClientModel(Client client);\n+\n+    /**\n+     * Fake endpoint for testing various parameters 假端點 偽のエンドポイント 가짜 엔드 포인트 \n+     *\n+     * Fake endpoint for testing various parameters 假端點 偽のエンドポイント 가짜 엔드 포인트 \n+     *\n+     */\n+    @POST\n+    \n+    @Consumes({ \"application/x-www-form-urlencoded\" })\n+    @ApiOperation(value = \"Fake endpoint for testing various parameters 假端點 偽のエンドポイント 가짜 엔드 포인트 \", tags={  })\n+    @ApiResponses(value = { \n+        @ApiResponse(code = 400, message = \"Invalid username supplied\"),\n+        @ApiResponse(code = 404, message = \"User not found\") })\n+    public void testEndpointParameters(@Multipart(value = \"number\")  BigDecimal number, @Multipart(value = \"double\")  Double _double, @Multipart(value = \"pattern_without_delimiter\")  String patternWithoutDelimiter, @Multipart(value = \"byte\")  byte[] _byte, @Multipart(value = \"integer\", required = false)  Integer integer, @Multipart(value = \"int32\", required = false)  Integer int32, @Multipart(value = \"int64\", required = false)  Long int64, @Multipart(value = \"float\", required = false)  Float _float, @Multipart(value = \"string\", required = false)  String string,  @Multipart(value = \"binary\" , required = false) Attachment binaryDetail, @Multipart(value = \"date\", required = false)  LocalDate date, @Multipart(value = \"dateTime\", required = false)  Date dateTime, @Multipart(value = \"password\", required = false)  String password, @Multipart(value = \"callback\", required = false)  String paramCallback);\n+\n+    /**\n+     * To test enum parameters\n+     *\n+     * To test enum parameters\n+     *\n+     */\n+    @GET\n+    \n+    @Consumes({ \"application/x-www-form-urlencoded\" })\n+    @ApiOperation(value = \"To test enum parameters\", tags={  })\n+    @ApiResponses(value = { \n+        @ApiResponse(code = 400, message = \"Invalid request\"),\n+        @ApiResponse(code = 404, message = \"Not found\") })\n+    public void testEnumParameters(@HeaderParam(\"enum_header_string_array\")  List<String> enumHeaderStringArray, @HeaderParam(\"enum_header_string\")  String enumHeaderString, @QueryParam(\"enum_query_string_array\") List<String> enumQueryStringArray, @QueryParam(\"enum_query_string\") @DefaultValue(\"-efg\")String enumQueryString, @QueryParam(\"enum_query_integer\") Integer enumQueryInteger, @QueryParam(\"enum_query_double\") Double enumQueryDouble, @Multipart(value = \"enum_form_string_array\", required = false)  List<String> enumFormStringArray, @Multipart(value = \"enum_form_string\", required = false)  String enumFormString);\n+\n+    /**\n+     * Fake endpoint to test group parameters (optional)\n+     *\n+     * Fake endpoint to test group parameters (optional)\n+     *\n+     */\n+    @DELETE\n+    \n+    @ApiOperation(value = \"Fake endpoint to test group parameters (optional)\", tags={  })\n+    @ApiResponses(value = { \n+        @ApiResponse(code = 400, message = \"Someting wrong\") })\n+    public void testGroupParameters(@QueryParam(\"required_string_group\") Integer requiredStringGroup, @HeaderParam(\"required_boolean_group\")  Boolean requiredBooleanGroup, @QueryParam(\"required_int64_group\") Long requiredInt64Group, @QueryParam(\"string_group\") Integer stringGroup, @HeaderParam(\"boolean_group\")  Boolean booleanGroup, @QueryParam(\"int64_group\") Long int64Group);\n+\n+    /**\n+     * test inline additionalProperties\n+     *\n+     */\n+    @POST\n+    @Path(\"/inline-additionalProperties\")\n+    @Consumes({ \"application/json\" })\n+    @ApiOperation(value = \"test inline additionalProperties\", tags={  })\n+    @ApiResponses(value = { \n+        @ApiResponse(code = 200, message = \"successful operation\") })\n+    public void testInlineAdditionalProperties(Map<String, String> requestBody);\n+\n+    /**\n+     * test json serialization of form data\n+     *\n+     */\n+    @GET\n+    @Path(\"/jsonFormData\")\n+    @Consumes({ \"application/x-www-form-urlencoded\" })\n+    @ApiOperation(value = \"test json serialization of form data\", tags={  })\n+    @ApiResponses(value = { \n+        @ApiResponse(code = 200, message = \"successful operation\") })\n+    public void testJsonFormData(@Multipart(value = \"param\")  String param, @Multipart(value = \"param2\")  String param2);\n+\n+    @PUT\n+    @Path(\"/test-query-paramters\")\n+    @ApiOperation(value = \"\", tags={  })\n+    @ApiResponses(value = { \n+        @ApiResponse(code = 200, message = \"Success\") })\n+    public void testQueryParameterCollectionFormat(@QueryParam(\"pipe\") List<String> pipe, @QueryParam(\"ioutil\") List<String> ioutil, @QueryParam(\"http\") List<String> http, @QueryParam(\"url\") List<String> url, @QueryParam(\"context\") List<String> context);\n+}\n+"
  },
  {
    "sha": "b973be7d283beea050a775c4158d24145661e90e",
    "filename": "samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/src/gen/java/org/openapitools/api/FakeClassnameTags123Api.java",
    "status": "added",
    "additions": 45,
    "deletions": 0,
    "changes": 45,
    "blob_url": "https://github.com/OpenAPITools/openapi-generator/blob/a9923d13d02bf66002798c7092c4edd507e7d3ae/samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/src/gen/java/org/openapitools/api/FakeClassnameTags123Api.java",
    "raw_url": "https://github.com/OpenAPITools/openapi-generator/raw/a9923d13d02bf66002798c7092c4edd507e7d3ae/samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/src/gen/java/org/openapitools/api/FakeClassnameTags123Api.java",
    "contents_url": "https://api.github.com/repos/OpenAPITools/openapi-generator/contents/samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/src/gen/java/org/openapitools/api/FakeClassnameTags123Api.java?ref=a9923d13d02bf66002798c7092c4edd507e7d3ae",
    "patch": "@@ -0,0 +1,45 @@\n+package org.openapitools.api;\n+\n+import org.openapitools.model.Client;\n+\n+import java.io.InputStream;\n+import java.io.OutputStream;\n+import java.util.List;\n+import java.util.Map;\n+import javax.ws.rs.*;\n+import javax.ws.rs.core.Response;\n+import javax.ws.rs.core.MediaType;\n+import org.apache.cxf.jaxrs.ext.multipart.*;\n+\n+import io.swagger.annotations.Api;\n+import io.swagger.annotations.ApiOperation;\n+import io.swagger.annotations.ApiResponses;\n+import io.swagger.annotations.ApiResponse;\n+import io.swagger.jaxrs.PATCH;\n+\n+/**\n+ * OpenAPI Petstore\n+ *\n+ * <p>This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \\\" \\\\\n+ *\n+ */\n+@Path(\"/fake_classname_test\")\n+@Api(value = \"/\", description = \"\")\n+public interface FakeClassnameTags123Api  {\n+\n+    /**\n+     * To test class name in snake case\n+     *\n+     * To test class name in snake case\n+     *\n+     */\n+    @PATCH\n+    \n+    @Consumes({ \"application/json\" })\n+    @Produces({ \"application/json\" })\n+    @ApiOperation(value = \"To test class name in snake case\", tags={  })\n+    @ApiResponses(value = { \n+        @ApiResponse(code = 200, message = \"successful operation\", response = Client.class) })\n+    public Client testClassname(Client client);\n+}\n+"
  },
  {
    "sha": "09048cfdd1a8ddfe2c319400a70603ddca511dc7",
    "filename": "samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/src/gen/java/org/openapitools/api/PetApi.java",
    "status": "added",
    "additions": 158,
    "deletions": 0,
    "changes": 158,
    "blob_url": "https://github.com/OpenAPITools/openapi-generator/blob/a9923d13d02bf66002798c7092c4edd507e7d3ae/samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/src/gen/java/org/openapitools/api/PetApi.java",
    "raw_url": "https://github.com/OpenAPITools/openapi-generator/raw/a9923d13d02bf66002798c7092c4edd507e7d3ae/samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/src/gen/java/org/openapitools/api/PetApi.java",
    "contents_url": "https://api.github.com/repos/OpenAPITools/openapi-generator/contents/samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/src/gen/java/org/openapitools/api/PetApi.java?ref=a9923d13d02bf66002798c7092c4edd507e7d3ae",
    "patch": "@@ -0,0 +1,158 @@\n+package org.openapitools.api;\n+\n+import java.io.File;\n+import org.openapitools.model.ModelApiResponse;\n+import org.openapitools.model.Pet;\n+import java.util.Set;\n+\n+import java.io.InputStream;\n+import java.io.OutputStream;\n+import java.util.List;\n+import java.util.Map;\n+import javax.ws.rs.*;\n+import javax.ws.rs.core.Response;\n+import javax.ws.rs.core.MediaType;\n+import org.apache.cxf.jaxrs.ext.multipart.*;\n+\n+import io.swagger.annotations.Api;\n+import io.swagger.annotations.ApiOperation;\n+import io.swagger.annotations.ApiResponses;\n+import io.swagger.annotations.ApiResponse;\n+import io.swagger.jaxrs.PATCH;\n+\n+/**\n+ * OpenAPI Petstore\n+ *\n+ * <p>This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \\\" \\\\\n+ *\n+ */\n+@Path(\"\")\n+@Api(value = \"/\", description = \"\")\n+public interface PetApi  {\n+\n+    /**\n+     * Add a new pet to the store\n+     *\n+     */\n+    @POST\n+    @Path(\"/pet\")\n+    @Consumes({ \"application/json\", \"application/xml\" })\n+    @ApiOperation(value = \"Add a new pet to the store\", tags={  })\n+    @ApiResponses(value = { \n+        @ApiResponse(code = 200, message = \"Successful operation\"),\n+        @ApiResponse(code = 405, message = \"Invalid input\") })\n+    public void addPet(Pet pet);\n+\n+    /**\n+     * Deletes a pet\n+     *\n+     */\n+    @DELETE\n+    @Path(\"/pet/{petId}\")\n+    @ApiOperation(value = \"Deletes a pet\", tags={  })\n+    @ApiResponses(value = { \n+        @ApiResponse(code = 200, message = \"Successful operation\"),\n+        @ApiResponse(code = 400, message = \"Invalid pet value\") })\n+    public void deletePet(@PathParam(\"petId\") Long petId, @HeaderParam(\"api_key\")  String apiKey);\n+\n+    /**\n+     * Finds Pets by status\n+     *\n+     * Multiple status values can be provided with comma separated strings\n+     *\n+     */\n+    @GET\n+    @Path(\"/pet/findByStatus\")\n+    @Produces({ \"application/xml\", \"application/json\" })\n+    @ApiOperation(value = \"Finds Pets by status\", tags={  })\n+    @ApiResponses(value = { \n+        @ApiResponse(code = 200, message = \"successful operation\", response = Pet.class, responseContainer = \"List\"),\n+        @ApiResponse(code = 400, message = \"Invalid status value\") })\n+    public List<Pet> findPetsByStatus(@QueryParam(\"status\") List<String> status);\n+\n+    /**\n+     * Finds Pets by tags\n+     *\n+     * Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.\n+     *\n+     */\n+    @GET\n+    @Path(\"/pet/findByTags\")\n+    @Produces({ \"application/xml\", \"application/json\" })\n+    @ApiOperation(value = \"Finds Pets by tags\", tags={  })\n+    @ApiResponses(value = { \n+        @ApiResponse(code = 200, message = \"successful operation\", response = Pet.class, responseContainer = \"Set\"),\n+        @ApiResponse(code = 400, message = \"Invalid tag value\") })\n+    public Set<Pet> findPetsByTags(@QueryParam(\"tags\") Set<String> tags);\n+\n+    /**\n+     * Find pet by ID\n+     *\n+     * Returns a single pet\n+     *\n+     */\n+    @GET\n+    @Path(\"/pet/{petId}\")\n+    @Produces({ \"application/xml\", \"application/json\" })\n+    @ApiOperation(value = \"Find pet by ID\", tags={  })\n+    @ApiResponses(value = { \n+        @ApiResponse(code = 200, message = \"successful operation\", response = Pet.class),\n+        @ApiResponse(code = 400, message = \"Invalid ID supplied\"),\n+        @ApiResponse(code = 404, message = \"Pet not found\") })\n+    public Pet getPetById(@PathParam(\"petId\") Long petId);\n+\n+    /**\n+     * Update an existing pet\n+     *\n+     */\n+    @PUT\n+    @Path(\"/pet\")\n+    @Consumes({ \"application/json\", \"application/xml\" })\n+    @ApiOperation(value = \"Update an existing pet\", tags={  })\n+    @ApiResponses(value = { \n+        @ApiResponse(code = 200, message = \"Successful operation\"),\n+        @ApiResponse(code = 400, message = \"Invalid ID supplied\"),\n+        @ApiResponse(code = 404, message = \"Pet not found\"),\n+        @ApiResponse(code = 405, message = \"Validation exception\") })\n+    public void updatePet(Pet pet);\n+\n+    /**\n+     * Updates a pet in the store with form data\n+     *\n+     */\n+    @POST\n+    @Path(\"/pet/{petId}\")\n+    @Consumes({ \"application/x-www-form-urlencoded\" })\n+    @ApiOperation(value = \"Updates a pet in the store with form data\", tags={  })\n+    @ApiResponses(value = { \n+        @ApiResponse(code = 200, message = \"Successful operation\"),\n+        @ApiResponse(code = 405, message = \"Invalid input\") })\n+    public void updatePetWithForm(@PathParam(\"petId\") Long petId, @Multipart(value = \"name\", required = false)  String name, @Multipart(value = \"status\", required = false)  String status);\n+\n+    /**\n+     * uploads an image\n+     *\n+     */\n+    @POST\n+    @Path(\"/pet/{petId}/uploadImage\")\n+    @Consumes({ \"multipart/form-data\" })\n+    @Produces({ \"application/json\" })\n+    @ApiOperation(value = \"uploads an image\", tags={  })\n+    @ApiResponses(value = { \n+        @ApiResponse(code = 200, message = \"successful operation\", response = ModelApiResponse.class) })\n+    public ModelApiResponse uploadFile(@PathParam(\"petId\") Long petId, @Multipart(value = \"additionalMetadata\", required = false)  String additionalMetadata,  @Multipart(value = \"file\" , required = false) Attachment fileDetail);\n+\n+    /**\n+     * uploads an image (required)\n+     *\n+     */\n+    @POST\n+    @Path(\"/fake/{petId}/uploadImageWithRequiredFile\")\n+    @Consumes({ \"multipart/form-data\" })\n+    @Produces({ \"application/json\" })\n+    @ApiOperation(value = \"uploads an image (required)\", tags={  })\n+    @ApiResponses(value = { \n+        @ApiResponse(code = 200, message = \"successful operation\", response = ModelApiResponse.class) })\n+    public ModelApiResponse uploadFileWithRequiredFile(@PathParam(\"petId\") Long petId,  @Multipart(value = \"requiredFile\" ) Attachment requiredFileDetail, @Multipart(value = \"additionalMetadata\", required = false)  String additionalMetadata);\n+}\n+"
  },
  {
    "sha": "e2f31aa5ae158a9cd4eb0a0072b82712d8f23947",
    "filename": "samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/src/gen/java/org/openapitools/api/StoreApi.java",
    "status": "added",
    "additions": 88,
    "deletions": 0,
    "changes": 88,
    "blob_url": "https://github.com/OpenAPITools/openapi-generator/blob/a9923d13d02bf66002798c7092c4edd507e7d3ae/samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/src/gen/java/org/openapitools/api/StoreApi.java",
    "raw_url": "https://github.com/OpenAPITools/openapi-generator/raw/a9923d13d02bf66002798c7092c4edd507e7d3ae/samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/src/gen/java/org/openapitools/api/StoreApi.java",
    "contents_url": "https://api.github.com/repos/OpenAPITools/openapi-generator/contents/samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/src/gen/java/org/openapitools/api/StoreApi.java?ref=a9923d13d02bf66002798c7092c4edd507e7d3ae",
    "patch": "@@ -0,0 +1,88 @@\n+package org.openapitools.api;\n+\n+import org.openapitools.model.Order;\n+\n+import java.io.InputStream;\n+import java.io.OutputStream;\n+import java.util.List;\n+import java.util.Map;\n+import javax.ws.rs.*;\n+import javax.ws.rs.core.Response;\n+import javax.ws.rs.core.MediaType;\n+import org.apache.cxf.jaxrs.ext.multipart.*;\n+\n+import io.swagger.annotations.Api;\n+import io.swagger.annotations.ApiOperation;\n+import io.swagger.annotations.ApiResponses;\n+import io.swagger.annotations.ApiResponse;\n+import io.swagger.jaxrs.PATCH;\n+\n+/**\n+ * OpenAPI Petstore\n+ *\n+ * <p>This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \\\" \\\\\n+ *\n+ */\n+@Path(\"/store\")\n+@Api(value = \"/\", description = \"\")\n+public interface StoreApi  {\n+\n+    /**\n+     * Delete purchase order by ID\n+     *\n+     * For valid response try integer IDs with value &lt; 1000. Anything above 1000 or nonintegers will generate API errors\n+     *\n+     */\n+    @DELETE\n+    @Path(\"/order/{order_id}\")\n+    @ApiOperation(value = \"Delete purchase order by ID\", tags={  })\n+    @ApiResponses(value = { \n+        @ApiResponse(code = 400, message = \"Invalid ID supplied\"),\n+        @ApiResponse(code = 404, message = \"Order not found\") })\n+    public void deleteOrder(@PathParam(\"order_id\") String orderId);\n+\n+    /**\n+     * Returns pet inventories by status\n+     *\n+     * Returns a map of status codes to quantities\n+     *\n+     */\n+    @GET\n+    @Path(\"/inventory\")\n+    @Produces({ \"application/json\" })\n+    @ApiOperation(value = \"Returns pet inventories by status\", tags={  })\n+    @ApiResponses(value = { \n+        @ApiResponse(code = 200, message = \"successful operation\", response = Map.class, responseContainer = \"Map\") })\n+    public Map<String, Integer> getInventory();\n+\n+    /**\n+     * Find purchase order by ID\n+     *\n+     * For valid response try integer IDs with value &lt;&#x3D; 5 or &gt; 10. Other values will generated exceptions\n+     *\n+     */\n+    @GET\n+    @Path(\"/order/{order_id}\")\n+    @Produces({ \"application/xml\", \"application/json\" })\n+    @ApiOperation(value = \"Find purchase order by ID\", tags={  })\n+    @ApiResponses(value = { \n+        @ApiResponse(code = 200, message = \"successful operation\", response = Order.class),\n+        @ApiResponse(code = 400, message = \"Invalid ID supplied\"),\n+        @ApiResponse(code = 404, message = \"Order not found\") })\n+    public Order getOrderById(@PathParam(\"order_id\") Long orderId);\n+\n+    /**\n+     * Place an order for a pet\n+     *\n+     */\n+    @POST\n+    @Path(\"/order\")\n+    @Consumes({ \"application/json\" })\n+    @Produces({ \"application/xml\", \"application/json\" })\n+    @ApiOperation(value = \"Place an order for a pet\", tags={  })\n+    @ApiResponses(value = { \n+        @ApiResponse(code = 200, message = \"successful operation\", response = Order.class),\n+        @ApiResponse(code = 400, message = \"Invalid Order\") })\n+    public Order placeOrder(Order order);\n+}\n+"
  },
  {
    "sha": "d27415f2056041ba7bc336cd33e116153d8c216d",
    "filename": "samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/src/gen/java/org/openapitools/api/UserApi.java",
    "status": "added",
    "additions": 135,
    "deletions": 0,
    "changes": 135,
    "blob_url": "https://github.com/OpenAPITools/openapi-generator/blob/a9923d13d02bf66002798c7092c4edd507e7d3ae/samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/src/gen/java/org/openapitools/api/UserApi.java",
    "raw_url": "https://github.com/OpenAPITools/openapi-generator/raw/a9923d13d02bf66002798c7092c4edd507e7d3ae/samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/src/gen/java/org/openapitools/api/UserApi.java",
    "contents_url": "https://api.github.com/repos/OpenAPITools/openapi-generator/contents/samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/src/gen/java/org/openapitools/api/UserApi.java?ref=a9923d13d02bf66002798c7092c4edd507e7d3ae",
    "patch": "@@ -0,0 +1,135 @@\n+package org.openapitools.api;\n+\n+import org.openapitools.model.User;\n+\n+import java.io.InputStream;\n+import java.io.OutputStream;\n+import java.util.List;\n+import java.util.Map;\n+import javax.ws.rs.*;\n+import javax.ws.rs.core.Response;\n+import javax.ws.rs.core.MediaType;\n+import org.apache.cxf.jaxrs.ext.multipart.*;\n+\n+import io.swagger.annotations.Api;\n+import io.swagger.annotations.ApiOperation;\n+import io.swagger.annotations.ApiResponses;\n+import io.swagger.annotations.ApiResponse;\n+import io.swagger.jaxrs.PATCH;\n+\n+/**\n+ * OpenAPI Petstore\n+ *\n+ * <p>This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \\\" \\\\\n+ *\n+ */\n+@Path(\"/user\")\n+@Api(value = \"/\", description = \"\")\n+public interface UserApi  {\n+\n+    /**\n+     * Create user\n+     *\n+     * This can only be done by the logged in user.\n+     *\n+     */\n+    @POST\n+    \n+    @Consumes({ \"application/json\" })\n+    @ApiOperation(value = \"Create user\", tags={  })\n+    @ApiResponses(value = { \n+        @ApiResponse(code = 200, message = \"successful operation\") })\n+    public void createUser(User user);\n+\n+    /**\n+     * Creates list of users with given input array\n+     *\n+     */\n+    @POST\n+    @Path(\"/createWithArray\")\n+    @Consumes({ \"application/json\" })\n+    @ApiOperation(value = \"Creates list of users with given input array\", tags={  })\n+    @ApiResponses(value = { \n+        @ApiResponse(code = 200, message = \"successful operation\") })\n+    public void createUsersWithArrayInput(List<User> user);\n+\n+    /**\n+     * Creates list of users with given input array\n+     *\n+     */\n+    @POST\n+    @Path(\"/createWithList\")\n+    @Consumes({ \"application/json\" })\n+    @ApiOperation(value = \"Creates list of users with given input array\", tags={  })\n+    @ApiResponses(value = { \n+        @ApiResponse(code = 200, message = \"successful operation\") })\n+    public void createUsersWithListInput(List<User> user);\n+\n+    /**\n+     * Delete user\n+     *\n+     * This can only be done by the logged in user.\n+     *\n+     */\n+    @DELETE\n+    @Path(\"/{username}\")\n+    @ApiOperation(value = \"Delete user\", tags={  })\n+    @ApiResponses(value = { \n+        @ApiResponse(code = 400, message = \"Invalid username supplied\"),\n+        @ApiResponse(code = 404, message = \"User not found\") })\n+    public void deleteUser(@PathParam(\"username\") String username);\n+\n+    /**\n+     * Get user by user name\n+     *\n+     */\n+    @GET\n+    @Path(\"/{username}\")\n+    @Produces({ \"application/xml\", \"application/json\" })\n+    @ApiOperation(value = \"Get user by user name\", tags={  })\n+    @ApiResponses(value = { \n+        @ApiResponse(code = 200, message = \"successful operation\", response = User.class),\n+        @ApiResponse(code = 400, message = \"Invalid username supplied\"),\n+        @ApiResponse(code = 404, message = \"User not found\") })\n+    public User getUserByName(@PathParam(\"username\") String username);\n+\n+    /**\n+     * Logs user into the system\n+     *\n+     */\n+    @GET\n+    @Path(\"/login\")\n+    @Produces({ \"application/xml\", \"application/json\" })\n+    @ApiOperation(value = \"Logs user into the system\", tags={  })\n+    @ApiResponses(value = { \n+        @ApiResponse(code = 200, message = \"successful operation\", response = String.class),\n+        @ApiResponse(code = 400, message = \"Invalid username/password supplied\") })\n+    public String loginUser(@QueryParam(\"username\") String username, @QueryParam(\"password\") String password);\n+\n+    /**\n+     * Logs out current logged in user session\n+     *\n+     */\n+    @GET\n+    @Path(\"/logout\")\n+    @ApiOperation(value = \"Logs out current logged in user session\", tags={  })\n+    @ApiResponses(value = { \n+        @ApiResponse(code = 200, message = \"successful operation\") })\n+    public void logoutUser();\n+\n+    /**\n+     * Updated user\n+     *\n+     * This can only be done by the logged in user.\n+     *\n+     */\n+    @PUT\n+    @Path(\"/{username}\")\n+    @Consumes({ \"application/json\" })\n+    @ApiOperation(value = \"Updated user\", tags={  })\n+    @ApiResponses(value = { \n+        @ApiResponse(code = 400, message = \"Invalid user supplied\"),\n+        @ApiResponse(code = 404, message = \"User not found\") })\n+    public void updateUser(@PathParam(\"username\") String username, User user);\n+}\n+"
  },
  {
    "sha": "f0108158055e006cdd8d52a22bd61d476543c123",
    "filename": "samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/src/gen/java/org/openapitools/model/AdditionalPropertiesClass.java",
    "status": "added",
    "additions": 93,
    "deletions": 0,
    "changes": 93,
    "blob_url": "https://github.com/OpenAPITools/openapi-generator/blob/a9923d13d02bf66002798c7092c4edd507e7d3ae/samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/src/gen/java/org/openapitools/model/AdditionalPropertiesClass.java",
    "raw_url": "https://github.com/OpenAPITools/openapi-generator/raw/a9923d13d02bf66002798c7092c4edd507e7d3ae/samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/src/gen/java/org/openapitools/model/AdditionalPropertiesClass.java",
    "contents_url": "https://api.github.com/repos/OpenAPITools/openapi-generator/contents/samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/src/gen/java/org/openapitools/model/AdditionalPropertiesClass.java?ref=a9923d13d02bf66002798c7092c4edd507e7d3ae",
    "patch": "@@ -0,0 +1,93 @@\n+package org.openapitools.model;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import io.swagger.annotations.ApiModelProperty;\n+import javax.xml.bind.annotation.XmlElement;\n+import javax.xml.bind.annotation.XmlRootElement;\n+import javax.xml.bind.annotation.XmlAccessType;\n+import javax.xml.bind.annotation.XmlAccessorType;\n+import javax.xml.bind.annotation.XmlType;\n+import javax.xml.bind.annotation.XmlEnum;\n+import javax.xml.bind.annotation.XmlEnumValue;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+public class AdditionalPropertiesClass  {\n+  \n+  @ApiModelProperty(value = \"\")\n+  private Map<String, String> mapProperty = null;\n+\n+  @ApiModelProperty(value = \"\")\n+  private Map<String, Map<String, String>> mapOfMapProperty = null;\n+ /**\n+   * Get mapProperty\n+   * @return mapProperty\n+  **/\n+  @JsonProperty(\"map_property\")\n+  public Map<String, String> getMapProperty() {\n+    return mapProperty;\n+  }\n+\n+  public void setMapProperty(Map<String, String> mapProperty) {\n+    this.mapProperty = mapProperty;\n+  }\n+\n+  public AdditionalPropertiesClass mapProperty(Map<String, String> mapProperty) {\n+    this.mapProperty = mapProperty;\n+    return this;\n+  }\n+\n+  public AdditionalPropertiesClass putMapPropertyItem(String key, String mapPropertyItem) {\n+    this.mapProperty.put(key, mapPropertyItem);\n+    return this;\n+  }\n+\n+ /**\n+   * Get mapOfMapProperty\n+   * @return mapOfMapProperty\n+  **/\n+  @JsonProperty(\"map_of_map_property\")\n+  public Map<String, Map<String, String>> getMapOfMapProperty() {\n+    return mapOfMapProperty;\n+  }\n+\n+  public void setMapOfMapProperty(Map<String, Map<String, String>> mapOfMapProperty) {\n+    this.mapOfMapProperty = mapOfMapProperty;\n+  }\n+\n+  public AdditionalPropertiesClass mapOfMapProperty(Map<String, Map<String, String>> mapOfMapProperty) {\n+    this.mapOfMapProperty = mapOfMapProperty;\n+    return this;\n+  }\n+\n+  public AdditionalPropertiesClass putMapOfMapPropertyItem(String key, Map<String, String> mapOfMapPropertyItem) {\n+    this.mapOfMapProperty.put(key, mapOfMapPropertyItem);\n+    return this;\n+  }\n+\n+\n+  @Override\n+  public String toString() {\n+    StringBuilder sb = new StringBuilder();\n+    sb.append(\"class AdditionalPropertiesClass {\\n\");\n+    \n+    sb.append(\"    mapProperty: \").append(toIndentedString(mapProperty)).append(\"\\n\");\n+    sb.append(\"    mapOfMapProperty: \").append(toIndentedString(mapOfMapProperty)).append(\"\\n\");\n+    sb.append(\"}\");\n+    return sb.toString();\n+  }\n+\n+  /**\n+   * Convert the given object to string with each line indented by 4 spaces\n+   * (except the first line).\n+   */\n+  private static String toIndentedString(Object o) {\n+    if (o == null) {\n+      return \"null\";\n+    }\n+    return o.toString().replace(\"\\n\", \"\\n    \");\n+  }\n+}\n+"
  },
  {
    "sha": "33f76666df7cbb5b7cd61583a5244c921fdd529e",
    "filename": "samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/src/gen/java/org/openapitools/model/Animal.java",
    "status": "added",
    "additions": 87,
    "deletions": 0,
    "changes": 87,
    "blob_url": "https://github.com/OpenAPITools/openapi-generator/blob/a9923d13d02bf66002798c7092c4edd507e7d3ae/samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/src/gen/java/org/openapitools/model/Animal.java",
    "raw_url": "https://github.com/OpenAPITools/openapi-generator/raw/a9923d13d02bf66002798c7092c4edd507e7d3ae/samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/src/gen/java/org/openapitools/model/Animal.java",
    "contents_url": "https://api.github.com/repos/OpenAPITools/openapi-generator/contents/samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/src/gen/java/org/openapitools/model/Animal.java?ref=a9923d13d02bf66002798c7092c4edd507e7d3ae",
    "patch": "@@ -0,0 +1,87 @@\n+package org.openapitools.model;\n+\n+import com.fasterxml.jackson.annotation.JsonSubTypes;\n+import com.fasterxml.jackson.annotation.JsonTypeInfo;\n+\n+import io.swagger.annotations.ApiModelProperty;\n+import javax.xml.bind.annotation.XmlElement;\n+import javax.xml.bind.annotation.XmlRootElement;\n+import javax.xml.bind.annotation.XmlAccessType;\n+import javax.xml.bind.annotation.XmlAccessorType;\n+import javax.xml.bind.annotation.XmlType;\n+import javax.xml.bind.annotation.XmlEnum;\n+import javax.xml.bind.annotation.XmlEnumValue;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = \"className\", visible = true)\n+@JsonSubTypes({\n+  @JsonSubTypes.Type(value = Cat.class, name = \"Cat\"),\n+  @JsonSubTypes.Type(value = Dog.class, name = \"Dog\"),\n+})\n+public class Animal  {\n+  \n+  @ApiModelProperty(required = true, value = \"\")\n+  private String className;\n+\n+  @ApiModelProperty(value = \"\")\n+  private String color = \"red\";\n+ /**\n+   * Get className\n+   * @return className\n+  **/\n+  @JsonProperty(\"className\")\n+  public String getClassName() {\n+    return className;\n+  }\n+\n+  public void setClassName(String className) {\n+    this.className = className;\n+  }\n+\n+  public Animal className(String className) {\n+    this.className = className;\n+    return this;\n+  }\n+\n+ /**\n+   * Get color\n+   * @return color\n+  **/\n+  @JsonProperty(\"color\")\n+  public String getColor() {\n+    return color;\n+  }\n+\n+  public void setColor(String color) {\n+    this.color = color;\n+  }\n+\n+  public Animal color(String color) {\n+    this.color = color;\n+    return this;\n+  }\n+\n+\n+  @Override\n+  public String toString() {\n+    StringBuilder sb = new StringBuilder();\n+    sb.append(\"class Animal {\\n\");\n+    \n+    sb.append(\"    className: \").append(toIndentedString(className)).append(\"\\n\");\n+    sb.append(\"    color: \").append(toIndentedString(color)).append(\"\\n\");\n+    sb.append(\"}\");\n+    return sb.toString();\n+  }\n+\n+  /**\n+   * Convert the given object to string with each line indented by 4 spaces\n+   * (except the first line).\n+   */\n+  private static String toIndentedString(Object o) {\n+    if (o == null) {\n+      return \"null\";\n+    }\n+    return o.toString().replace(\"\\n\", \"\\n    \");\n+  }\n+}\n+"
  },
  {
    "sha": "144c88be4f133eb6fd914c0aaafe96b764551f10",
    "filename": "samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/src/gen/java/org/openapitools/model/ArrayOfArrayOfNumberOnly.java",
    "status": "added",
    "additions": 66,
    "deletions": 0,
    "changes": 66,
    "blob_url": "https://github.com/OpenAPITools/openapi-generator/blob/a9923d13d02bf66002798c7092c4edd507e7d3ae/samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/src/gen/java/org/openapitools/model/ArrayOfArrayOfNumberOnly.java",
    "raw_url": "https://github.com/OpenAPITools/openapi-generator/raw/a9923d13d02bf66002798c7092c4edd507e7d3ae/samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/src/gen/java/org/openapitools/model/ArrayOfArrayOfNumberOnly.java",
    "contents_url": "https://api.github.com/repos/OpenAPITools/openapi-generator/contents/samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/src/gen/java/org/openapitools/model/ArrayOfArrayOfNumberOnly.java?ref=a9923d13d02bf66002798c7092c4edd507e7d3ae",
    "patch": "@@ -0,0 +1,66 @@\n+package org.openapitools.model;\n+\n+import java.math.BigDecimal;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import io.swagger.annotations.ApiModelProperty;\n+import javax.xml.bind.annotation.XmlElement;\n+import javax.xml.bind.annotation.XmlRootElement;\n+import javax.xml.bind.annotation.XmlAccessType;\n+import javax.xml.bind.annotation.XmlAccessorType;\n+import javax.xml.bind.annotation.XmlType;\n+import javax.xml.bind.annotation.XmlEnum;\n+import javax.xml.bind.annotation.XmlEnumValue;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+public class ArrayOfArrayOfNumberOnly  {\n+  \n+  @ApiModelProperty(value = \"\")\n+  private List<List<BigDecimal>> arrayArrayNumber = null;\n+ /**\n+   * Get arrayArrayNumber\n+   * @return arrayArrayNumber\n+  **/\n+  @JsonProperty(\"ArrayArrayNumber\")\n+  public List<List<BigDecimal>> getArrayArrayNumber() {\n+    return arrayArrayNumber;\n+  }\n+\n+  public void setArrayArrayNumber(List<List<BigDecimal>> arrayArrayNumber) {\n+    this.arrayArrayNumber = arrayArrayNumber;\n+  }\n+\n+  public ArrayOfArrayOfNumberOnly arrayArrayNumber(List<List<BigDecimal>> arrayArrayNumber) {\n+    this.arrayArrayNumber = arrayArrayNumber;\n+    return this;\n+  }\n+\n+  public ArrayOfArrayOfNumberOnly addArrayArrayNumberItem(List<BigDecimal> arrayArrayNumberItem) {\n+    this.arrayArrayNumber.add(arrayArrayNumberItem);\n+    return this;\n+  }\n+\n+\n+  @Override\n+  public String toString() {\n+    StringBuilder sb = new StringBuilder();\n+    sb.append(\"class ArrayOfArrayOfNumberOnly {\\n\");\n+    \n+    sb.append(\"    arrayArrayNumber: \").append(toIndentedString(arrayArrayNumber)).append(\"\\n\");\n+    sb.append(\"}\");\n+    return sb.toString();\n+  }\n+\n+  /**\n+   * Convert the given object to string with each line indented by 4 spaces\n+   * (except the first line).\n+   */\n+  private static String toIndentedString(Object o) {\n+    if (o == null) {\n+      return \"null\";\n+    }\n+    return o.toString().replace(\"\\n\", \"\\n    \");\n+  }\n+}\n+"
  },
  {
    "sha": "5b7198ac58f54104d420021a8bc6a116447b913f",
    "filename": "samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/src/gen/java/org/openapitools/model/ArrayOfNumberOnly.java",
    "status": "added",
    "additions": 66,
    "deletions": 0,
    "changes": 66,
    "blob_url": "https://github.com/OpenAPITools/openapi-generator/blob/a9923d13d02bf66002798c7092c4edd507e7d3ae/samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/src/gen/java/org/openapitools/model/ArrayOfNumberOnly.java",
    "raw_url": "https://github.com/OpenAPITools/openapi-generator/raw/a9923d13d02bf66002798c7092c4edd507e7d3ae/samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/src/gen/java/org/openapitools/model/ArrayOfNumberOnly.java",
    "contents_url": "https://api.github.com/repos/OpenAPITools/openapi-generator/contents/samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/src/gen/java/org/openapitools/model/ArrayOfNumberOnly.java?ref=a9923d13d02bf66002798c7092c4edd507e7d3ae",
    "patch": "@@ -0,0 +1,66 @@\n+package org.openapitools.model;\n+\n+import java.math.BigDecimal;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import io.swagger.annotations.ApiModelProperty;\n+import javax.xml.bind.annotation.XmlElement;\n+import javax.xml.bind.annotation.XmlRootElement;\n+import javax.xml.bind.annotation.XmlAccessType;\n+import javax.xml.bind.annotation.XmlAccessorType;\n+import javax.xml.bind.annotation.XmlType;\n+import javax.xml.bind.annotation.XmlEnum;\n+import javax.xml.bind.annotation.XmlEnumValue;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+public class ArrayOfNumberOnly  {\n+  \n+  @ApiModelProperty(value = \"\")\n+  private List<BigDecimal> arrayNumber = null;\n+ /**\n+   * Get arrayNumber\n+   * @return arrayNumber\n+  **/\n+  @JsonProperty(\"ArrayNumber\")\n+  public List<BigDecimal> getArrayNumber() {\n+    return arrayNumber;\n+  }\n+\n+  public void setArrayNumber(List<BigDecimal> arrayNumber) {\n+    this.arrayNumber = arrayNumber;\n+  }\n+\n+  public ArrayOfNumberOnly arrayNumber(List<BigDecimal> arrayNumber) {\n+    this.arrayNumber = arrayNumber;\n+    return this;\n+  }\n+\n+  public ArrayOfNumberOnly addArrayNumberItem(BigDecimal arrayNumberItem) {\n+    this.arrayNumber.add(arrayNumberItem);\n+    return this;\n+  }\n+\n+\n+  @Override\n+  public String toString() {\n+    StringBuilder sb = new StringBuilder();\n+    sb.append(\"class ArrayOfNumberOnly {\\n\");\n+    \n+    sb.append(\"    arrayNumber: \").append(toIndentedString(arrayNumber)).append(\"\\n\");\n+    sb.append(\"}\");\n+    return sb.toString();\n+  }\n+\n+  /**\n+   * Convert the given object to string with each line indented by 4 spaces\n+   * (except the first line).\n+   */\n+  private static String toIndentedString(Object o) {\n+    if (o == null) {\n+      return \"null\";\n+    }\n+    return o.toString().replace(\"\\n\", \"\\n    \");\n+  }\n+}\n+"
  },
  {
    "sha": "14df6ad168d974aa1d84590f275a1f6224c07ca8",
    "filename": "samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/src/gen/java/org/openapitools/model/ArrayTest.java",
    "status": "added",
    "additions": 120,
    "deletions": 0,
    "changes": 120,
    "blob_url": "https://github.com/OpenAPITools/openapi-generator/blob/a9923d13d02bf66002798c7092c4edd507e7d3ae/samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/src/gen/java/org/openapitools/model/ArrayTest.java",
    "raw_url": "https://github.com/OpenAPITools/openapi-generator/raw/a9923d13d02bf66002798c7092c4edd507e7d3ae/samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/src/gen/java/org/openapitools/model/ArrayTest.java",
    "contents_url": "https://api.github.com/repos/OpenAPITools/openapi-generator/contents/samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/src/gen/java/org/openapitools/model/ArrayTest.java?ref=a9923d13d02bf66002798c7092c4edd507e7d3ae",
    "patch": "@@ -0,0 +1,120 @@\n+package org.openapitools.model;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.openapitools.model.ReadOnlyFirst;\n+\n+import io.swagger.annotations.ApiModelProperty;\n+import javax.xml.bind.annotation.XmlElement;\n+import javax.xml.bind.annotation.XmlRootElement;\n+import javax.xml.bind.annotation.XmlAccessType;\n+import javax.xml.bind.annotation.XmlAccessorType;\n+import javax.xml.bind.annotation.XmlType;\n+import javax.xml.bind.annotation.XmlEnum;\n+import javax.xml.bind.annotation.XmlEnumValue;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+public class ArrayTest  {\n+  \n+  @ApiModelProperty(value = \"\")\n+  private List<String> arrayOfString = null;\n+\n+  @ApiModelProperty(value = \"\")\n+  private List<List<Long>> arrayArrayOfInteger = null;\n+\n+  @ApiModelProperty(value = \"\")\n+  private List<List<ReadOnlyFirst>> arrayArrayOfModel = null;\n+ /**\n+   * Get arrayOfString\n+   * @return arrayOfString\n+  **/\n+  @JsonProperty(\"array_of_string\")\n+  public List<String> getArrayOfString() {\n+    return arrayOfString;\n+  }\n+\n+  public void setArrayOfString(List<String> arrayOfString) {\n+    this.arrayOfString = arrayOfString;\n+  }\n+\n+  public ArrayTest arrayOfString(List<String> arrayOfString) {\n+    this.arrayOfString = arrayOfString;\n+    return this;\n+  }\n+\n+  public ArrayTest addArrayOfStringItem(String arrayOfStringItem) {\n+    this.arrayOfString.add(arrayOfStringItem);\n+    return this;\n+  }\n+\n+ /**\n+   * Get arrayArrayOfInteger\n+   * @return arrayArrayOfInteger\n+  **/\n+  @JsonProperty(\"array_array_of_integer\")\n+  public List<List<Long>> getArrayArrayOfInteger() {\n+    return arrayArrayOfInteger;\n+  }\n+\n+  public void setArrayArrayOfInteger(List<List<Long>> arrayArrayOfInteger) {\n+    this.arrayArrayOfInteger = arrayArrayOfInteger;\n+  }\n+\n+  public ArrayTest arrayArrayOfInteger(List<List<Long>> arrayArrayOfInteger) {\n+    this.arrayArrayOfInteger = arrayArrayOfInteger;\n+    return this;\n+  }\n+\n+  public ArrayTest addArrayArrayOfIntegerItem(List<Long> arrayArrayOfIntegerItem) {\n+    this.arrayArrayOfInteger.add(arrayArrayOfIntegerItem);\n+    return this;\n+  }\n+\n+ /**\n+   * Get arrayArrayOfModel\n+   * @return arrayArrayOfModel\n+  **/\n+  @JsonProperty(\"array_array_of_model\")\n+  public List<List<ReadOnlyFirst>> getArrayArrayOfModel() {\n+    return arrayArrayOfModel;\n+  }\n+\n+  public void setArrayArrayOfModel(List<List<ReadOnlyFirst>> arrayArrayOfModel) {\n+    this.arrayArrayOfModel = arrayArrayOfModel;\n+  }\n+\n+  public ArrayTest arrayArrayOfModel(List<List<ReadOnlyFirst>> arrayArrayOfModel) {\n+    this.arrayArrayOfModel = arrayArrayOfModel;\n+    return this;\n+  }\n+\n+  public ArrayTest addArrayArrayOfModelItem(List<ReadOnlyFirst> arrayArrayOfModelItem) {\n+    this.arrayArrayOfModel.add(arrayArrayOfModelItem);\n+    return this;\n+  }\n+\n+\n+  @Override\n+  public String toString() {\n+    StringBuilder sb = new StringBuilder();\n+    sb.append(\"class ArrayTest {\\n\");\n+    \n+    sb.append(\"    arrayOfString: \").append(toIndentedString(arrayOfString)).append(\"\\n\");\n+    sb.append(\"    arrayArrayOfInteger: \").append(toIndentedString(arrayArrayOfInteger)).append(\"\\n\");\n+    sb.append(\"    arrayArrayOfModel: \").append(toIndentedString(arrayArrayOfModel)).append(\"\\n\");\n+    sb.append(\"}\");\n+    return sb.toString();\n+  }\n+\n+  /**\n+   * Convert the given object to string with each line indented by 4 spaces\n+   * (except the first line).\n+   */\n+  private static String toIndentedString(Object o) {\n+    if (o == null) {\n+      return \"null\";\n+    }\n+    return o.toString().replace(\"\\n\", \"\\n    \");\n+  }\n+}\n+"
  },
  {
    "sha": "0019a471c17f419cb914f60b0ffc1b1b9c591710",
    "filename": "samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/src/gen/java/org/openapitools/model/Capitalization.java",
    "status": "added",
    "additions": 171,
    "deletions": 0,
    "changes": 171,
    "blob_url": "https://github.com/OpenAPITools/openapi-generator/blob/a9923d13d02bf66002798c7092c4edd507e7d3ae/samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/src/gen/java/org/openapitools/model/Capitalization.java",
    "raw_url": "https://github.com/OpenAPITools/openapi-generator/raw/a9923d13d02bf66002798c7092c4edd507e7d3ae/samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/src/gen/java/org/openapitools/model/Capitalization.java",
    "contents_url": "https://api.github.com/repos/OpenAPITools/openapi-generator/contents/samples/openapi3/client/petstore/jaxrs-cxf-client-jackson-nullable/src/gen/java/org/openapitools/model/Capitalization.java?ref=a9923d13d02bf66002798c7092c4edd507e7d3ae",
    "patch": "@@ -0,0 +1,171 @@\n+package org.openapitools.model;\n+\n+\n+import io.swagger.annotations.ApiModelProperty;\n+import javax.xml.bind.annotation.XmlElement;\n+import javax.xml.bind.annotation.XmlRootElement;\n+import javax.xml.bind.annotation.XmlAccessType;\n+import javax.xml.bind.annotation.XmlAccessorType;\n+import javax.xml.bind.annotation.XmlType;\n+import javax.xml.bind.annotation.XmlEnum;\n+import javax.xml.bind.annotation.XmlEnumValue;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+public class Capitalization  {\n+  \n+  @ApiModelProperty(value = \"\")\n+  private String smallCamel;\n+\n+  @ApiModelProperty(value = \"\")\n+  private String capitalCamel;\n+\n+  @ApiModelProperty(value = \"\")\n+  private String smallSnake;\n+\n+  @ApiModelProperty(value = \"\")\n+  private String capitalSnake;\n+\n+  @ApiModelProperty(value = \"\")\n+  private String scAETHFlowPoints;\n+\n+  @ApiModelProperty(value = \"Name of the pet \")\n+ /**\n+   * Name of the pet \n+  **/\n+  private String ATT_NAME;\n+ /**\n+   * Get smallCamel\n+   * @return smallCamel\n+  **/\n+  @JsonProperty(\"smallCamel\")\n+  public String getSmallCamel() {\n+    return smallCamel;\n+  }\n+\n+  public void setSmallCamel(String smallCamel) {\n+    this.smallCamel = smallCamel;\n+  }\n+\n+  public Capitalization smallCamel(String smallCamel) {\n+    this.smallCamel = smallCamel;\n+    return this;\n+  }\n+\n+ /**\n+   * Get capitalCamel\n+   * @return capitalCamel\n+  **/\n+  @JsonProperty(\"CapitalCamel\")\n+  public String getCapitalCamel() {\n+    return capitalCamel;\n+  }\n+\n+  public void setCapitalCamel(String capitalCamel) {\n+    this.capitalCamel = capitalCamel;\n+  }\n+\n+  public Capitalization capitalCamel(String capitalCamel) {\n+    this.capitalCamel = capitalCamel;\n+    return this;\n+  }\n+\n+ /**\n+   * Get smallSnake\n+   * @return smallSnake\n+  **/\n+  @JsonProperty(\"small_Snake\")\n+  public String getSmallSnake() {\n+    return smallSnake;\n+  }\n+\n+  public void setSmallSnake(String smallSnake) {\n+    this.smallSnake = smallSnake;\n+  }\n+\n+  public Capitalization smallSnake(String smallSnake) {\n+    this.smallSnake = smallSnake;\n+    return this;\n+  }\n+\n+ /**\n+   * Get capitalSnake\n+   * @return capitalSnake\n+  **/\n+  @JsonProperty(\"Capital_Snake\")\n+  public String getCapitalSnake() {\n+    return capitalSnake;\n+  }\n+\n+  public void setCapitalSnake(String capitalSnake) {\n+    this.capitalSnake = capitalSnake;\n+  }\n+\n+  public Capitalization capitalSnake(String capitalSnake) {\n+    this.capitalSnake = capitalSnake;\n+    return this;\n+  }\n+\n+ /**\n+   * Get scAETHFlowPoints\n+   * @return scAETHFlowPoints\n+  **/\n+  @JsonProperty(\"SCA_ETH_Flow_Points\")\n+  public String getScAETHFlowPoints() {\n+    return scAETHFlowPoints;\n+  }\n+\n+  public void setScAETHFlowPoints(String scAETHFlowPoints) {\n+    this.scAETHFlowPoints = scAETHFlowPoints;\n+  }\n+\n+  public Capitalization scAETHFlowPoints(String scAETHFlowPoints) {\n+    this.scAETHFlowPoints = scAETHFlowPoints;\n+    return this;\n+  }\n+\n+ /**\n+   * Name of the pet \n+   * @return ATT_NAME\n+  **/\n+  @JsonProperty(\"ATT_NAME\")\n+  public String getATTNAME() {\n+    return ATT_NAME;\n+  }\n+\n+  public void setATTNAME(String ATT_NAME) {\n+    this.ATT_NAME = ATT_NAME;\n+  }\n+\n+  public Capitalization ATT_NAME(String ATT_NAME) {\n+    this.ATT_NAME = ATT_NAME;\n+    return this;\n+  }\n+\n+\n+  @Override\n+  public String toString() {\n+    StringBuilder sb = new StringBuilder();\n+    sb.append(\"class Capitalization {\\n\");\n+    \n+    sb.append(\"    smallCamel: \").append(toIndentedString(smallCamel)).append(\"\\n\");\n+    sb.append(\"    capitalCamel: \").append(toIndentedString(capitalCamel)).append(\"\\n\");\n+    sb.append(\"    smallSnake: \").append(toIndentedString(smallSnake)).append(\"\\n\");\n+    sb.append(\"    capitalSnake: \").append(toIndentedString(capitalSnake)).append(\"\\n\");\n+    sb.append(\"    scAETHFlowPoints: \").append(toIndentedString(scAETHFlowPoints)).append(\"\\n\");\n+    sb.append(\"    ATT_NAME: \").append(toIndentedString(ATT_NAME)).append(\"\\n\");\n+    sb.append(\"}\");\n+    return sb.toString();\n+  }\n+\n+  /**\n+   * Convert the given object to string with each line indented by 4 spaces\n+   * (except the first line).\n+   */\n+  private static String toIndentedString(Object o) {\n+    if (o == null) {\n+      return \"null\";\n+    }\n+    return o.toString().replace(\"\\n\", \"\\n    \");\n+  }\n+}\n+"
  }
]
