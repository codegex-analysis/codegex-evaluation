[
  {
    "sha": "0d8490f057edca7ee37e2d339ab9d9d85519cc7f",
    "filename": "modules/openapi-generator/src/main/resources/php/ObjectSerializer.mustache",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/OpenAPITools/openapi-generator/blob/dea37fb41afabfe481cc2e86c2b2bcbe9bce0fe2/modules/openapi-generator/src/main/resources/php/ObjectSerializer.mustache",
    "raw_url": "https://github.com/OpenAPITools/openapi-generator/raw/dea37fb41afabfe481cc2e86c2b2bcbe9bce0fe2/modules/openapi-generator/src/main/resources/php/ObjectSerializer.mustache",
    "contents_url": "https://api.github.com/repos/OpenAPITools/openapi-generator/contents/modules/openapi-generator/src/main/resources/php/ObjectSerializer.mustache?ref=dea37fb41afabfe481cc2e86c2b2bcbe9bce0fe2",
    "patch": "@@ -265,11 +265,11 @@ class ObjectSerializer\n \n         if (strcasecmp(substr($class, -2), '[]') === 0) {\n             $data = is_string($data) ? json_decode($data) : $data;\n-            \n+\n             if (!is_array($data)) {\n                 throw new \\InvalidArgumentException(\"Invalid array '$class'\");\n             }\n-            \n+\n             $subClass = substr($class, 0, -2);\n             $values = [];\n             foreach ($data as $key => $value) {"
  },
  {
    "sha": "206c0a25826aac31147376115b70bd12cb7e4354",
    "filename": "modules/openapi-generator/src/main/resources/php/api.mustache",
    "status": "modified",
    "additions": 22,
    "deletions": 21,
    "changes": 43,
    "blob_url": "https://github.com/OpenAPITools/openapi-generator/blob/dea37fb41afabfe481cc2e86c2b2bcbe9bce0fe2/modules/openapi-generator/src/main/resources/php/api.mustache",
    "raw_url": "https://github.com/OpenAPITools/openapi-generator/raw/dea37fb41afabfe481cc2e86c2b2bcbe9bce0fe2/modules/openapi-generator/src/main/resources/php/api.mustache",
    "contents_url": "https://api.github.com/repos/OpenAPITools/openapi-generator/contents/modules/openapi-generator/src/main/resources/php/api.mustache?ref=dea37fb41afabfe481cc2e86c2b2bcbe9bce0fe2",
    "patch": "@@ -82,7 +82,7 @@ use {{invokerPackage}}\\ObjectSerializer;\n      *\n      * @param int $hostIndex Host index (required)\n      */\n-    public function setHostIndex($hostIndex)\n+    public function setHostIndex($hostIndex): void\n     {\n         $this->hostIndex = $hostIndex;\n     }\n@@ -110,7 +110,7 @@ use {{invokerPackage}}\\ObjectSerializer;\n      * Operation {{{operationId}}}\n {{#summary}}\n      *\n-     * {{{summary}}}\n+     * {{.}}\n {{/summary}}\n      *\n {{#description}}\n@@ -148,7 +148,7 @@ use {{invokerPackage}}\\ObjectSerializer;\n      * Operation {{{operationId}}}WithHttpInfo\n {{#summary}}\n      *\n-     * {{{summary}}}\n+     * {{.}}\n {{/summary}}\n      *\n {{#description}}\n@@ -187,7 +187,7 @@ use {{invokerPackage}}\\ObjectSerializer;\n             } catch (RequestException $e) {\n                 throw new ApiException(\n                     \"[{$e->getCode()}] {$e->getMessage()}\",\n-                    $e->getCode(),\n+                    (int) $e->getCode(),\n                     $e->getResponse() ? $e->getResponse()->getHeaders() : null,\n                     $e->getResponse() ? (string) $e->getResponse()->getBody() : null\n                 );\n@@ -200,26 +200,25 @@ use {{invokerPackage}}\\ObjectSerializer;\n                     sprintf(\n                         '[%d] Error connecting to the API (%s)',\n                         $statusCode,\n-                        $request->getUri()\n+                        (string) $request->getUri()\n                     ),\n                     $statusCode,\n                     $response->getHeaders(),\n-                    $response->getBody()\n+                    (string) $response->getBody()\n                 );\n             }\n             {{#returnType}}\n-        {{#responses}}\n+            {{#responses}}\n             {{#-first}}\n \n-            $responseBody = $response->getBody();\n             switch($statusCode) {\n             {{/-first}}\n             {{#dataType}}\n                 {{^isWildcard}}case {{code}}:{{/isWildcard}}{{#isWildcard}}default:{{/isWildcard}}\n                     if ('{{{dataType}}}' === '\\SplFileObject') {\n-                        $content = $responseBody; //stream goes to serializer\n+                        $content = $response->getBody(); //stream goes to serializer\n                     } else {\n-                        $content = (string) $responseBody;\n+                        $content = (string) $response->getBody();\n                     }\n \n                     return [\n@@ -231,14 +230,13 @@ use {{invokerPackage}}\\ObjectSerializer;\n             {{#-last}}\n             }\n             {{/-last}}\n-        {{/responses}}\n+            {{/responses}}\n \n             $returnType = '{{{returnType}}}';\n-            $responseBody = $response->getBody();\n             if ($returnType === '\\SplFileObject') {\n-                $content = $responseBody; //stream goes to serializer\n+                $content = $response->getBody(); //stream goes to serializer\n             } else {\n-                $content = (string) $responseBody;\n+                $content = (string) $response->getBody();\n             }\n \n             return [\n@@ -274,8 +272,10 @@ use {{invokerPackage}}\\ObjectSerializer;\n     /**\n      * Operation {{{operationId}}}Async\n      *\n-     * {{{summary}}}\n+{{#summary}}\n+     * {{.}}\n      *\n+{{/summary}}\n {{#description}}\n      * {{.}}\n      *\n@@ -313,8 +313,10 @@ use {{invokerPackage}}\\ObjectSerializer;\n     /**\n      * Operation {{{operationId}}}AsyncWithHttpInfo\n      *\n-     * {{{summary}}}\n+{{#summary}}\n+     * {{.}}\n      *\n+{{/summary}}\n {{#description}}\n      * {{.}}\n      *\n@@ -349,11 +351,10 @@ use {{invokerPackage}}\\ObjectSerializer;\n             ->then(\n                 function ($response) use ($returnType) {\n                     {{#returnType}}\n-                    $responseBody = $response->getBody();\n                     if ($returnType === '\\SplFileObject') {\n-                        $content = $responseBody; //stream goes to serializer\n+                        $content = $response->getBody(); //stream goes to serializer\n                     } else {\n-                        $content = (string) $responseBody;\n+                        $content = (string) $response->getBody();\n                     }\n \n                     return [\n@@ -364,7 +365,7 @@ use {{invokerPackage}}\\ObjectSerializer;\n                     {{/returnType}}\n                     {{^returnType}}\n                     return [null, $response->getStatusCode(), $response->getHeaders()];\n-                {{/returnType}}\n+                    {{/returnType}}\n                 },\n                 function ($exception) {\n                     $response = $exception->getResponse();\n@@ -377,7 +378,7 @@ use {{invokerPackage}}\\ObjectSerializer;\n                         ),\n                         $statusCode,\n                         $response->getHeaders(),\n-                        $response->getBody()\n+                        (string) $response->getBody()\n                     );\n                 }\n             );"
  },
  {
    "sha": "d1450f72cbf61dec71d3d1a59aaad492ad047d90",
    "filename": "modules/openapi-generator/src/main/resources/php/model.mustache",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/OpenAPITools/openapi-generator/blob/dea37fb41afabfe481cc2e86c2b2bcbe9bce0fe2/modules/openapi-generator/src/main/resources/php/model.mustache",
    "raw_url": "https://github.com/OpenAPITools/openapi-generator/raw/dea37fb41afabfe481cc2e86c2b2bcbe9bce0fe2/modules/openapi-generator/src/main/resources/php/model.mustache",
    "contents_url": "https://api.github.com/repos/OpenAPITools/openapi-generator/contents/modules/openapi-generator/src/main/resources/php/model.mustache?ref=dea37fb41afabfe481cc2e86c2b2bcbe9bce0fe2",
    "patch": "@@ -41,7 +41,7 @@ use \\{{invokerPackage}}\\ObjectSerializer;\n {{^isEnum}}\n  * @implements \\ArrayAccess<TKey, TValue>\n  * @template TKey int|null\n- * @template TValue mixed|null  \n+ * @template TValue mixed|null\n {{/isEnum}}\n  */\n {{#isEnum}}{{>model_enum}}{{/isEnum}}{{^isEnum}}{{>model_generic}}{{/isEnum}}"
  },
  {
    "sha": "276b2bd9d8cf1441614b45091f98bc345d82e244",
    "filename": "modules/openapi-generator/src/main/resources/php/model_generic.mustache",
    "status": "modified",
    "additions": 14,
    "deletions": 5,
    "changes": 19,
    "blob_url": "https://github.com/OpenAPITools/openapi-generator/blob/dea37fb41afabfe481cc2e86c2b2bcbe9bce0fe2/modules/openapi-generator/src/main/resources/php/model_generic.mustache",
    "raw_url": "https://github.com/OpenAPITools/openapi-generator/raw/dea37fb41afabfe481cc2e86c2b2bcbe9bce0fe2/modules/openapi-generator/src/main/resources/php/model_generic.mustache",
    "contents_url": "https://api.github.com/repos/OpenAPITools/openapi-generator/contents/modules/openapi-generator/src/main/resources/php/model_generic.mustache?ref=dea37fb41afabfe481cc2e86c2b2bcbe9bce0fe2",
    "patch": "@@ -1,4 +1,4 @@\n-class {{classname}} {{#parentSchema}}extends {{{parent}}} {{/parentSchema}}{{^parentSchema}}implements ModelInterface, ArrayAccess, \\JsonSerializable{{/parentSchema}}\n+class {{classname}} {{#parentSchema}}extends {{{parent}}}{{/parentSchema}}{{^parentSchema}}implements ModelInterface, ArrayAccess, \\JsonSerializable{{/parentSchema}}\n {\n     public const DISCRIMINATOR = {{#discriminator}}'{{discriminatorName}}'{{/discriminator}}{{^discriminator}}null{{/discriminator}};\n \n@@ -123,10 +123,18 @@ class {{classname}} {{#parentSchema}}extends {{{parent}}} {{/parentSchema}}{{^pa\n         return self::$openAPIModelName;\n     }\n \n-    {{#vars}}{{#isEnum}}{{#allowableValues}}{{#enumVars}}const {{enumName}}_{{{name}}} = {{{value}}};\n-    {{/enumVars}}{{/allowableValues}}{{/isEnum}}{{/vars}}\n+    {{#vars}}\n+    {{#isEnum}}\n+    {{#allowableValues}}\n+    {{#enumVars}}\n+    const {{enumName}}_{{{name}}} = {{{value}}};\n+    {{/enumVars}}\n+    {{/allowableValues}}\n+    {{/isEnum}}\n+    {{/vars}}\n \n-    {{#vars}}{{#isEnum}}\n+    {{#vars}}\n+    {{#isEnum}}\n     /**\n      * Gets allowable values of the enum\n      *\n@@ -139,8 +147,9 @@ class {{classname}} {{#parentSchema}}extends {{{parent}}} {{/parentSchema}}{{^pa\n             {{/-last}}{{/enumVars}}{{/allowableValues}}\n         ];\n     }\n-    {{/isEnum}}{{/vars}}\n \n+    {{/isEnum}}\n+    {{/vars}}\n     {{^parentSchema}}\n     /**\n      * Associative array for storing property values"
  },
  {
    "sha": "496169aae32b067e1b0bb49161004db5e8a3e70b",
    "filename": "modules/openapi-generator/src/main/resources/php/partial_header.mustache",
    "status": "modified",
    "additions": 6,
    "deletions": 2,
    "changes": 8,
    "blob_url": "https://github.com/OpenAPITools/openapi-generator/blob/dea37fb41afabfe481cc2e86c2b2bcbe9bce0fe2/modules/openapi-generator/src/main/resources/php/partial_header.mustache",
    "raw_url": "https://github.com/OpenAPITools/openapi-generator/raw/dea37fb41afabfe481cc2e86c2b2bcbe9bce0fe2/modules/openapi-generator/src/main/resources/php/partial_header.mustache",
    "contents_url": "https://api.github.com/repos/OpenAPITools/openapi-generator/contents/modules/openapi-generator/src/main/resources/php/partial_header.mustache?ref=dea37fb41afabfe481cc2e86c2b2bcbe9bce0fe2",
    "patch": "@@ -7,8 +7,12 @@\n  * {{{appDescription}}}\n  *\n  {{/appDescription}}\n- * {{#version}}The version of the OpenAPI document: {{{version}}}{{/version}}\n- * {{#infoEmail}}Contact: {{{infoEmail}}}{{/infoEmail}}\n+ {{#version}}\n+ * The version of the OpenAPI document: {{{version}}}\n+ {{/version}}\n+ {{#infoEmail}}\n+ * Contact: {{{infoEmail}}}\n+ {{/infoEmail}}\n  * Generated by: https://openapi-generator.tech\n  * OpenAPI Generator version: {{{generatorVersion}}}\n  */"
  },
  {
    "sha": "595bf4b8410e5a8f775caa7ea75ad6edcc1339f9",
    "filename": "samples/client/petstore/php/OpenAPIClient-php/docs/Model/AdditionalPropertiesAnyType.md",
    "status": "removed",
    "additions": 0,
    "deletions": 11,
    "changes": 11,
    "blob_url": "https://github.com/OpenAPITools/openapi-generator/blob/349445ab0102eefb0c086a74f7be4381b1ba9c0f/samples/client/petstore/php/OpenAPIClient-php/docs/Model/AdditionalPropertiesAnyType.md",
    "raw_url": "https://github.com/OpenAPITools/openapi-generator/raw/349445ab0102eefb0c086a74f7be4381b1ba9c0f/samples/client/petstore/php/OpenAPIClient-php/docs/Model/AdditionalPropertiesAnyType.md",
    "contents_url": "https://api.github.com/repos/OpenAPITools/openapi-generator/contents/samples/client/petstore/php/OpenAPIClient-php/docs/Model/AdditionalPropertiesAnyType.md?ref=349445ab0102eefb0c086a74f7be4381b1ba9c0f",
    "patch": "@@ -1,11 +0,0 @@\n-# # AdditionalPropertiesAnyType\n-\n-## Properties\n-\n-Name | Type | Description | Notes\n------------- | ------------- | ------------- | -------------\n-**name** | **string** |  | [optional] \n-\n-[[Back to Model list]](../../README.md#documentation-for-models) [[Back to API list]](../../README.md#documentation-for-api-endpoints) [[Back to README]](../../README.md)\n-\n-"
  },
  {
    "sha": "2af1984c630b7223f99e9c8904fe8a540f273b6c",
    "filename": "samples/client/petstore/php/OpenAPIClient-php/docs/Model/AdditionalPropertiesArray.md",
    "status": "removed",
    "additions": 0,
    "deletions": 11,
    "changes": 11,
    "blob_url": "https://github.com/OpenAPITools/openapi-generator/blob/349445ab0102eefb0c086a74f7be4381b1ba9c0f/samples/client/petstore/php/OpenAPIClient-php/docs/Model/AdditionalPropertiesArray.md",
    "raw_url": "https://github.com/OpenAPITools/openapi-generator/raw/349445ab0102eefb0c086a74f7be4381b1ba9c0f/samples/client/petstore/php/OpenAPIClient-php/docs/Model/AdditionalPropertiesArray.md",
    "contents_url": "https://api.github.com/repos/OpenAPITools/openapi-generator/contents/samples/client/petstore/php/OpenAPIClient-php/docs/Model/AdditionalPropertiesArray.md?ref=349445ab0102eefb0c086a74f7be4381b1ba9c0f",
    "patch": "@@ -1,11 +0,0 @@\n-# # AdditionalPropertiesArray\n-\n-## Properties\n-\n-Name | Type | Description | Notes\n------------- | ------------- | ------------- | -------------\n-**name** | **string** |  | [optional] \n-\n-[[Back to Model list]](../../README.md#documentation-for-models) [[Back to API list]](../../README.md#documentation-for-api-endpoints) [[Back to README]](../../README.md)\n-\n-"
  },
  {
    "sha": "1f8207bec9be7022c76719dfccb16c1e9860d1b1",
    "filename": "samples/client/petstore/php/OpenAPIClient-php/docs/Model/AdditionalPropertiesBoolean.md",
    "status": "removed",
    "additions": 0,
    "deletions": 11,
    "changes": 11,
    "blob_url": "https://github.com/OpenAPITools/openapi-generator/blob/349445ab0102eefb0c086a74f7be4381b1ba9c0f/samples/client/petstore/php/OpenAPIClient-php/docs/Model/AdditionalPropertiesBoolean.md",
    "raw_url": "https://github.com/OpenAPITools/openapi-generator/raw/349445ab0102eefb0c086a74f7be4381b1ba9c0f/samples/client/petstore/php/OpenAPIClient-php/docs/Model/AdditionalPropertiesBoolean.md",
    "contents_url": "https://api.github.com/repos/OpenAPITools/openapi-generator/contents/samples/client/petstore/php/OpenAPIClient-php/docs/Model/AdditionalPropertiesBoolean.md?ref=349445ab0102eefb0c086a74f7be4381b1ba9c0f",
    "patch": "@@ -1,11 +0,0 @@\n-# # AdditionalPropertiesBoolean\n-\n-## Properties\n-\n-Name | Type | Description | Notes\n------------- | ------------- | ------------- | -------------\n-**name** | **string** |  | [optional] \n-\n-[[Back to Model list]](../../README.md#documentation-for-models) [[Back to API list]](../../README.md#documentation-for-api-endpoints) [[Back to README]](../../README.md)\n-\n-"
  },
  {
    "sha": "101b8f40a3a75436dce4cc1e7ce888bec0a97f22",
    "filename": "samples/client/petstore/php/OpenAPIClient-php/docs/Model/AdditionalPropertiesInteger.md",
    "status": "removed",
    "additions": 0,
    "deletions": 11,
    "changes": 11,
    "blob_url": "https://github.com/OpenAPITools/openapi-generator/blob/349445ab0102eefb0c086a74f7be4381b1ba9c0f/samples/client/petstore/php/OpenAPIClient-php/docs/Model/AdditionalPropertiesInteger.md",
    "raw_url": "https://github.com/OpenAPITools/openapi-generator/raw/349445ab0102eefb0c086a74f7be4381b1ba9c0f/samples/client/petstore/php/OpenAPIClient-php/docs/Model/AdditionalPropertiesInteger.md",
    "contents_url": "https://api.github.com/repos/OpenAPITools/openapi-generator/contents/samples/client/petstore/php/OpenAPIClient-php/docs/Model/AdditionalPropertiesInteger.md?ref=349445ab0102eefb0c086a74f7be4381b1ba9c0f",
    "patch": "@@ -1,11 +0,0 @@\n-# # AdditionalPropertiesInteger\n-\n-## Properties\n-\n-Name | Type | Description | Notes\n------------- | ------------- | ------------- | -------------\n-**name** | **string** |  | [optional] \n-\n-[[Back to Model list]](../../README.md#documentation-for-models) [[Back to API list]](../../README.md#documentation-for-api-endpoints) [[Back to README]](../../README.md)\n-\n-"
  },
  {
    "sha": "82ed504518da66f0c7418b9be98742b33bc4ccdc",
    "filename": "samples/client/petstore/php/OpenAPIClient-php/docs/Model/AdditionalPropertiesNumber.md",
    "status": "removed",
    "additions": 0,
    "deletions": 11,
    "changes": 11,
    "blob_url": "https://github.com/OpenAPITools/openapi-generator/blob/349445ab0102eefb0c086a74f7be4381b1ba9c0f/samples/client/petstore/php/OpenAPIClient-php/docs/Model/AdditionalPropertiesNumber.md",
    "raw_url": "https://github.com/OpenAPITools/openapi-generator/raw/349445ab0102eefb0c086a74f7be4381b1ba9c0f/samples/client/petstore/php/OpenAPIClient-php/docs/Model/AdditionalPropertiesNumber.md",
    "contents_url": "https://api.github.com/repos/OpenAPITools/openapi-generator/contents/samples/client/petstore/php/OpenAPIClient-php/docs/Model/AdditionalPropertiesNumber.md?ref=349445ab0102eefb0c086a74f7be4381b1ba9c0f",
    "patch": "@@ -1,11 +0,0 @@\n-# # AdditionalPropertiesNumber\n-\n-## Properties\n-\n-Name | Type | Description | Notes\n------------- | ------------- | ------------- | -------------\n-**name** | **string** |  | [optional] \n-\n-[[Back to Model list]](../../README.md#documentation-for-models) [[Back to API list]](../../README.md#documentation-for-api-endpoints) [[Back to README]](../../README.md)\n-\n-"
  },
  {
    "sha": "e06f51ef7b35ec834ef8b5d02c753074a1fb0093",
    "filename": "samples/client/petstore/php/OpenAPIClient-php/docs/Model/AdditionalPropertiesObject.md",
    "status": "removed",
    "additions": 0,
    "deletions": 11,
    "changes": 11,
    "blob_url": "https://github.com/OpenAPITools/openapi-generator/blob/349445ab0102eefb0c086a74f7be4381b1ba9c0f/samples/client/petstore/php/OpenAPIClient-php/docs/Model/AdditionalPropertiesObject.md",
    "raw_url": "https://github.com/OpenAPITools/openapi-generator/raw/349445ab0102eefb0c086a74f7be4381b1ba9c0f/samples/client/petstore/php/OpenAPIClient-php/docs/Model/AdditionalPropertiesObject.md",
    "contents_url": "https://api.github.com/repos/OpenAPITools/openapi-generator/contents/samples/client/petstore/php/OpenAPIClient-php/docs/Model/AdditionalPropertiesObject.md?ref=349445ab0102eefb0c086a74f7be4381b1ba9c0f",
    "patch": "@@ -1,11 +0,0 @@\n-# # AdditionalPropertiesObject\n-\n-## Properties\n-\n-Name | Type | Description | Notes\n------------- | ------------- | ------------- | -------------\n-**name** | **string** |  | [optional] \n-\n-[[Back to Model list]](../../README.md#documentation-for-models) [[Back to API list]](../../README.md#documentation-for-api-endpoints) [[Back to README]](../../README.md)\n-\n-"
  },
  {
    "sha": "2483d6b582d24b32da4153298ff146aad111c81a",
    "filename": "samples/client/petstore/php/OpenAPIClient-php/docs/Model/AdditionalPropertiesString.md",
    "status": "removed",
    "additions": 0,
    "deletions": 11,
    "changes": 11,
    "blob_url": "https://github.com/OpenAPITools/openapi-generator/blob/349445ab0102eefb0c086a74f7be4381b1ba9c0f/samples/client/petstore/php/OpenAPIClient-php/docs/Model/AdditionalPropertiesString.md",
    "raw_url": "https://github.com/OpenAPITools/openapi-generator/raw/349445ab0102eefb0c086a74f7be4381b1ba9c0f/samples/client/petstore/php/OpenAPIClient-php/docs/Model/AdditionalPropertiesString.md",
    "contents_url": "https://api.github.com/repos/OpenAPITools/openapi-generator/contents/samples/client/petstore/php/OpenAPIClient-php/docs/Model/AdditionalPropertiesString.md?ref=349445ab0102eefb0c086a74f7be4381b1ba9c0f",
    "patch": "@@ -1,11 +0,0 @@\n-# # AdditionalPropertiesString\n-\n-## Properties\n-\n-Name | Type | Description | Notes\n------------- | ------------- | ------------- | -------------\n-**name** | **string** |  | [optional] \n-\n-[[Back to Model list]](../../README.md#documentation-for-models) [[Back to API list]](../../README.md#documentation-for-api-endpoints) [[Back to README]](../../README.md)\n-\n-"
  },
  {
    "sha": "8aa1c543ea38ed2b8b72b40f910314749540eaa4",
    "filename": "samples/client/petstore/php/OpenAPIClient-php/docs/Model/BigCat.md",
    "status": "removed",
    "additions": 0,
    "deletions": 11,
    "changes": 11,
    "blob_url": "https://github.com/OpenAPITools/openapi-generator/blob/349445ab0102eefb0c086a74f7be4381b1ba9c0f/samples/client/petstore/php/OpenAPIClient-php/docs/Model/BigCat.md",
    "raw_url": "https://github.com/OpenAPITools/openapi-generator/raw/349445ab0102eefb0c086a74f7be4381b1ba9c0f/samples/client/petstore/php/OpenAPIClient-php/docs/Model/BigCat.md",
    "contents_url": "https://api.github.com/repos/OpenAPITools/openapi-generator/contents/samples/client/petstore/php/OpenAPIClient-php/docs/Model/BigCat.md?ref=349445ab0102eefb0c086a74f7be4381b1ba9c0f",
    "patch": "@@ -1,11 +0,0 @@\n-# # BigCat\n-\n-## Properties\n-\n-Name | Type | Description | Notes\n------------- | ------------- | ------------- | -------------\n-**kind** | **string** |  | [optional] \n-\n-[[Back to Model list]](../../README.md#documentation-for-models) [[Back to API list]](../../README.md#documentation-for-api-endpoints) [[Back to README]](../../README.md)\n-\n-"
  },
  {
    "sha": "7241eb0843538c81bdff83af51e6cd748aff0154",
    "filename": "samples/client/petstore/php/OpenAPIClient-php/docs/Model/BigCatAllOf.md",
    "status": "removed",
    "additions": 0,
    "deletions": 11,
    "changes": 11,
    "blob_url": "https://github.com/OpenAPITools/openapi-generator/blob/349445ab0102eefb0c086a74f7be4381b1ba9c0f/samples/client/petstore/php/OpenAPIClient-php/docs/Model/BigCatAllOf.md",
    "raw_url": "https://github.com/OpenAPITools/openapi-generator/raw/349445ab0102eefb0c086a74f7be4381b1ba9c0f/samples/client/petstore/php/OpenAPIClient-php/docs/Model/BigCatAllOf.md",
    "contents_url": "https://api.github.com/repos/OpenAPITools/openapi-generator/contents/samples/client/petstore/php/OpenAPIClient-php/docs/Model/BigCatAllOf.md?ref=349445ab0102eefb0c086a74f7be4381b1ba9c0f",
    "patch": "@@ -1,11 +0,0 @@\n-# # BigCatAllOf\n-\n-## Properties\n-\n-Name | Type | Description | Notes\n------------- | ------------- | ------------- | -------------\n-**kind** | **string** |  | [optional] \n-\n-[[Back to Model list]](../../README.md#documentation-for-models) [[Back to API list]](../../README.md#documentation-for-api-endpoints) [[Back to README]](../../README.md)\n-\n-"
  },
  {
    "sha": "147910e8f50305f2df29faeeaa9e443393cc978a",
    "filename": "samples/client/petstore/php/OpenAPIClient-php/docs/Model/InlineObject.md",
    "status": "removed",
    "additions": 0,
    "deletions": 10,
    "changes": 10,
    "blob_url": "https://github.com/OpenAPITools/openapi-generator/blob/349445ab0102eefb0c086a74f7be4381b1ba9c0f/samples/client/petstore/php/OpenAPIClient-php/docs/Model/InlineObject.md",
    "raw_url": "https://github.com/OpenAPITools/openapi-generator/raw/349445ab0102eefb0c086a74f7be4381b1ba9c0f/samples/client/petstore/php/OpenAPIClient-php/docs/Model/InlineObject.md",
    "contents_url": "https://api.github.com/repos/OpenAPITools/openapi-generator/contents/samples/client/petstore/php/OpenAPIClient-php/docs/Model/InlineObject.md?ref=349445ab0102eefb0c086a74f7be4381b1ba9c0f",
    "patch": "@@ -1,10 +0,0 @@\n-# # InlineObject\n-\n-## Properties\n-\n-Name | Type | Description | Notes\n------------- | ------------- | ------------- | -------------\n-**name** | **string** | Updated name of the pet | [optional]\n-**status** | **string** | Updated status of the pet | [optional]\n-\n-[[Back to Model list]](../../README.md#models) [[Back to API list]](../../README.md#endpoints) [[Back to README]](../../README.md)"
  },
  {
    "sha": "2aa9afa208518893d19f6da4686ca5299f412058",
    "filename": "samples/client/petstore/php/OpenAPIClient-php/docs/Model/InlineObject1.md",
    "status": "removed",
    "additions": 0,
    "deletions": 10,
    "changes": 10,
    "blob_url": "https://github.com/OpenAPITools/openapi-generator/blob/349445ab0102eefb0c086a74f7be4381b1ba9c0f/samples/client/petstore/php/OpenAPIClient-php/docs/Model/InlineObject1.md",
    "raw_url": "https://github.com/OpenAPITools/openapi-generator/raw/349445ab0102eefb0c086a74f7be4381b1ba9c0f/samples/client/petstore/php/OpenAPIClient-php/docs/Model/InlineObject1.md",
    "contents_url": "https://api.github.com/repos/OpenAPITools/openapi-generator/contents/samples/client/petstore/php/OpenAPIClient-php/docs/Model/InlineObject1.md?ref=349445ab0102eefb0c086a74f7be4381b1ba9c0f",
    "patch": "@@ -1,10 +0,0 @@\n-# # InlineObject1\n-\n-## Properties\n-\n-Name | Type | Description | Notes\n------------- | ------------- | ------------- | -------------\n-**additional_metadata** | **string** | Additional data to pass to server | [optional]\n-**file** | [**\\SplFileObject**](\\SplFileObject.md) | file to upload | [optional]\n-\n-[[Back to Model list]](../../README.md#models) [[Back to API list]](../../README.md#endpoints) [[Back to README]](../../README.md)"
  },
  {
    "sha": "1bc037b38ddcb45c68b6d006de0c19c018cd7d19",
    "filename": "samples/client/petstore/php/OpenAPIClient-php/docs/Model/InlineObject2.md",
    "status": "removed",
    "additions": 0,
    "deletions": 10,
    "changes": 10,
    "blob_url": "https://github.com/OpenAPITools/openapi-generator/blob/349445ab0102eefb0c086a74f7be4381b1ba9c0f/samples/client/petstore/php/OpenAPIClient-php/docs/Model/InlineObject2.md",
    "raw_url": "https://github.com/OpenAPITools/openapi-generator/raw/349445ab0102eefb0c086a74f7be4381b1ba9c0f/samples/client/petstore/php/OpenAPIClient-php/docs/Model/InlineObject2.md",
    "contents_url": "https://api.github.com/repos/OpenAPITools/openapi-generator/contents/samples/client/petstore/php/OpenAPIClient-php/docs/Model/InlineObject2.md?ref=349445ab0102eefb0c086a74f7be4381b1ba9c0f",
    "patch": "@@ -1,10 +0,0 @@\n-# # InlineObject2\n-\n-## Properties\n-\n-Name | Type | Description | Notes\n------------- | ------------- | ------------- | -------------\n-**enum_form_string_array** | **string[]** | Form parameter enum test (string array) | [optional]\n-**enum_form_string** | **string** | Form parameter enum test (string) | [optional] [default to '-efg']\n-\n-[[Back to Model list]](../../README.md#models) [[Back to API list]](../../README.md#endpoints) [[Back to README]](../../README.md)"
  },
  {
    "sha": "b71d41094909732874f1fb59667857c3422c1f9e",
    "filename": "samples/client/petstore/php/OpenAPIClient-php/docs/Model/InlineObject3.md",
    "status": "removed",
    "additions": 0,
    "deletions": 22,
    "changes": 22,
    "blob_url": "https://github.com/OpenAPITools/openapi-generator/blob/349445ab0102eefb0c086a74f7be4381b1ba9c0f/samples/client/petstore/php/OpenAPIClient-php/docs/Model/InlineObject3.md",
    "raw_url": "https://github.com/OpenAPITools/openapi-generator/raw/349445ab0102eefb0c086a74f7be4381b1ba9c0f/samples/client/petstore/php/OpenAPIClient-php/docs/Model/InlineObject3.md",
    "contents_url": "https://api.github.com/repos/OpenAPITools/openapi-generator/contents/samples/client/petstore/php/OpenAPIClient-php/docs/Model/InlineObject3.md?ref=349445ab0102eefb0c086a74f7be4381b1ba9c0f",
    "patch": "@@ -1,22 +0,0 @@\n-# # InlineObject3\n-\n-## Properties\n-\n-Name | Type | Description | Notes\n------------- | ------------- | ------------- | -------------\n-**integer** | **int** | None | [optional]\n-**int32** | **int** | None | [optional]\n-**int64** | **int** | None | [optional]\n-**number** | **float** | None |\n-**float** | **float** | None | [optional]\n-**double** | **double** | None |\n-**string** | **string** | None | [optional]\n-**pattern_without_delimiter** | **string** | None |\n-**byte** | **string** | None |\n-**binary** | [**\\SplFileObject**](\\SplFileObject.md) | None | [optional]\n-**date** | [**\\DateTime**](\\DateTime.md) | None | [optional]\n-**date_time** | [**\\DateTime**](\\DateTime.md) | None | [optional]\n-**password** | **string** | None | [optional]\n-**callback** | **string** | None | [optional]\n-\n-[[Back to Model list]](../../README.md#models) [[Back to API list]](../../README.md#endpoints) [[Back to README]](../../README.md)"
  },
  {
    "sha": "c16cf834eb80706f72344c393a0b4e091876cb4b",
    "filename": "samples/client/petstore/php/OpenAPIClient-php/docs/Model/InlineObject4.md",
    "status": "removed",
    "additions": 0,
    "deletions": 10,
    "changes": 10,
    "blob_url": "https://github.com/OpenAPITools/openapi-generator/blob/349445ab0102eefb0c086a74f7be4381b1ba9c0f/samples/client/petstore/php/OpenAPIClient-php/docs/Model/InlineObject4.md",
    "raw_url": "https://github.com/OpenAPITools/openapi-generator/raw/349445ab0102eefb0c086a74f7be4381b1ba9c0f/samples/client/petstore/php/OpenAPIClient-php/docs/Model/InlineObject4.md",
    "contents_url": "https://api.github.com/repos/OpenAPITools/openapi-generator/contents/samples/client/petstore/php/OpenAPIClient-php/docs/Model/InlineObject4.md?ref=349445ab0102eefb0c086a74f7be4381b1ba9c0f",
    "patch": "@@ -1,10 +0,0 @@\n-# # InlineObject4\n-\n-## Properties\n-\n-Name | Type | Description | Notes\n------------- | ------------- | ------------- | -------------\n-**param** | **string** | field1 |\n-**param2** | **string** | field2 |\n-\n-[[Back to Model list]](../../README.md#models) [[Back to API list]](../../README.md#endpoints) [[Back to README]](../../README.md)"
  },
  {
    "sha": "a0f3dbae385ec2d0a1cf6f0ac096f506c46a3191",
    "filename": "samples/client/petstore/php/OpenAPIClient-php/docs/Model/InlineObject5.md",
    "status": "removed",
    "additions": 0,
    "deletions": 10,
    "changes": 10,
    "blob_url": "https://github.com/OpenAPITools/openapi-generator/blob/349445ab0102eefb0c086a74f7be4381b1ba9c0f/samples/client/petstore/php/OpenAPIClient-php/docs/Model/InlineObject5.md",
    "raw_url": "https://github.com/OpenAPITools/openapi-generator/raw/349445ab0102eefb0c086a74f7be4381b1ba9c0f/samples/client/petstore/php/OpenAPIClient-php/docs/Model/InlineObject5.md",
    "contents_url": "https://api.github.com/repos/OpenAPITools/openapi-generator/contents/samples/client/petstore/php/OpenAPIClient-php/docs/Model/InlineObject5.md?ref=349445ab0102eefb0c086a74f7be4381b1ba9c0f",
    "patch": "@@ -1,10 +0,0 @@\n-# # InlineObject5\n-\n-## Properties\n-\n-Name | Type | Description | Notes\n------------- | ------------- | ------------- | -------------\n-**additional_metadata** | **string** | Additional data to pass to server | [optional]\n-**required_file** | [**\\SplFileObject**](\\SplFileObject.md) | file to upload |\n-\n-[[Back to Model list]](../../README.md#models) [[Back to API list]](../../README.md#endpoints) [[Back to README]](../../README.md)"
  },
  {
    "sha": "d13890be3ec5b530fc71d3f92edc09a779b610b7",
    "filename": "samples/client/petstore/php/OpenAPIClient-php/docs/Model/TypeHolderDefault.md",
    "status": "removed",
    "additions": 0,
    "deletions": 15,
    "changes": 15,
    "blob_url": "https://github.com/OpenAPITools/openapi-generator/blob/349445ab0102eefb0c086a74f7be4381b1ba9c0f/samples/client/petstore/php/OpenAPIClient-php/docs/Model/TypeHolderDefault.md",
    "raw_url": "https://github.com/OpenAPITools/openapi-generator/raw/349445ab0102eefb0c086a74f7be4381b1ba9c0f/samples/client/petstore/php/OpenAPIClient-php/docs/Model/TypeHolderDefault.md",
    "contents_url": "https://api.github.com/repos/OpenAPITools/openapi-generator/contents/samples/client/petstore/php/OpenAPIClient-php/docs/Model/TypeHolderDefault.md?ref=349445ab0102eefb0c086a74f7be4381b1ba9c0f",
    "patch": "@@ -1,15 +0,0 @@\n-# # TypeHolderDefault\n-\n-## Properties\n-\n-Name | Type | Description | Notes\n------------- | ------------- | ------------- | -------------\n-**string_item** | **string** |  | [default to 'what']\n-**number_item** | **float** |  | \n-**integer_item** | **int** |  | \n-**bool_item** | **bool** |  | [default to true]\n-**array_item** | **int[]** |  | \n-\n-[[Back to Model list]](../../README.md#documentation-for-models) [[Back to API list]](../../README.md#documentation-for-api-endpoints) [[Back to README]](../../README.md)\n-\n-"
  },
  {
    "sha": "bafe6adae49708bafcc88ae7fe2a9a7729934586",
    "filename": "samples/client/petstore/php/OpenAPIClient-php/docs/Model/TypeHolderExample.md",
    "status": "removed",
    "additions": 0,
    "deletions": 16,
    "changes": 16,
    "blob_url": "https://github.com/OpenAPITools/openapi-generator/blob/349445ab0102eefb0c086a74f7be4381b1ba9c0f/samples/client/petstore/php/OpenAPIClient-php/docs/Model/TypeHolderExample.md",
    "raw_url": "https://github.com/OpenAPITools/openapi-generator/raw/349445ab0102eefb0c086a74f7be4381b1ba9c0f/samples/client/petstore/php/OpenAPIClient-php/docs/Model/TypeHolderExample.md",
    "contents_url": "https://api.github.com/repos/OpenAPITools/openapi-generator/contents/samples/client/petstore/php/OpenAPIClient-php/docs/Model/TypeHolderExample.md?ref=349445ab0102eefb0c086a74f7be4381b1ba9c0f",
    "patch": "@@ -1,16 +0,0 @@\n-# # TypeHolderExample\n-\n-## Properties\n-\n-Name | Type | Description | Notes\n------------- | ------------- | ------------- | -------------\n-**string_item** | **string** |  | \n-**number_item** | **float** |  | \n-**float_item** | **float** |  | \n-**integer_item** | **int** |  | \n-**bool_item** | **bool** |  | \n-**array_item** | **int[]** |  | \n-\n-[[Back to Model list]](../../README.md#documentation-for-models) [[Back to API list]](../../README.md#documentation-for-api-endpoints) [[Back to README]](../../README.md)\n-\n-"
  },
  {
    "sha": "fa348356c4966513e04349071b3edfddb55c855d",
    "filename": "samples/client/petstore/php/OpenAPIClient-php/docs/Model/XmlItem.md",
    "status": "removed",
    "additions": 0,
    "deletions": 39,
    "changes": 39,
    "blob_url": "https://github.com/OpenAPITools/openapi-generator/blob/349445ab0102eefb0c086a74f7be4381b1ba9c0f/samples/client/petstore/php/OpenAPIClient-php/docs/Model/XmlItem.md",
    "raw_url": "https://github.com/OpenAPITools/openapi-generator/raw/349445ab0102eefb0c086a74f7be4381b1ba9c0f/samples/client/petstore/php/OpenAPIClient-php/docs/Model/XmlItem.md",
    "contents_url": "https://api.github.com/repos/OpenAPITools/openapi-generator/contents/samples/client/petstore/php/OpenAPIClient-php/docs/Model/XmlItem.md?ref=349445ab0102eefb0c086a74f7be4381b1ba9c0f",
    "patch": "@@ -1,39 +0,0 @@\n-# # XmlItem\n-\n-## Properties\n-\n-Name | Type | Description | Notes\n------------- | ------------- | ------------- | -------------\n-**attribute_string** | **string** |  | [optional] \n-**attribute_number** | **float** |  | [optional] \n-**attribute_integer** | **int** |  | [optional] \n-**attribute_boolean** | **bool** |  | [optional] \n-**wrapped_array** | **int[]** |  | [optional] \n-**name_string** | **string** |  | [optional] \n-**name_number** | **float** |  | [optional] \n-**name_integer** | **int** |  | [optional] \n-**name_boolean** | **bool** |  | [optional] \n-**name_array** | **int[]** |  | [optional] \n-**name_wrapped_array** | **int[]** |  | [optional] \n-**prefix_string** | **string** |  | [optional] \n-**prefix_number** | **float** |  | [optional] \n-**prefix_integer** | **int** |  | [optional] \n-**prefix_boolean** | **bool** |  | [optional] \n-**prefix_array** | **int[]** |  | [optional] \n-**prefix_wrapped_array** | **int[]** |  | [optional] \n-**namespace_string** | **string** |  | [optional] \n-**namespace_number** | **float** |  | [optional] \n-**namespace_integer** | **int** |  | [optional] \n-**namespace_boolean** | **bool** |  | [optional] \n-**namespace_array** | **int[]** |  | [optional] \n-**namespace_wrapped_array** | **int[]** |  | [optional] \n-**prefix_ns_string** | **string** |  | [optional] \n-**prefix_ns_number** | **float** |  | [optional] \n-**prefix_ns_integer** | **int** |  | [optional] \n-**prefix_ns_boolean** | **bool** |  | [optional] \n-**prefix_ns_array** | **int[]** |  | [optional] \n-**prefix_ns_wrapped_array** | **int[]** |  | [optional] \n-\n-[[Back to Model list]](../../README.md#documentation-for-models) [[Back to API list]](../../README.md#documentation-for-api-endpoints) [[Back to README]](../../README.md)\n-\n-"
  },
  {
    "sha": "c283fae297fc6c66bae297a16fe6ac1391bdd67a",
    "filename": "samples/client/petstore/php/OpenAPIClient-php/lib/Api/AnotherFakeApi.php",
    "status": "modified",
    "additions": 11,
    "deletions": 15,
    "changes": 26,
    "blob_url": "https://github.com/OpenAPITools/openapi-generator/blob/dea37fb41afabfe481cc2e86c2b2bcbe9bce0fe2/samples/client/petstore/php/OpenAPIClient-php/lib/Api/AnotherFakeApi.php",
    "raw_url": "https://github.com/OpenAPITools/openapi-generator/raw/dea37fb41afabfe481cc2e86c2b2bcbe9bce0fe2/samples/client/petstore/php/OpenAPIClient-php/lib/Api/AnotherFakeApi.php",
    "contents_url": "https://api.github.com/repos/OpenAPITools/openapi-generator/contents/samples/client/petstore/php/OpenAPIClient-php/lib/Api/AnotherFakeApi.php?ref=dea37fb41afabfe481cc2e86c2b2bcbe9bce0fe2",
    "patch": "@@ -15,7 +15,6 @@\n  * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \\\" \\\\\n  *\n  * The version of the OpenAPI document: 1.0.0\n- * \n  * Generated by: https://openapi-generator.tech\n  * OpenAPI Generator version: 5.1.0-SNAPSHOT\n  */\n@@ -92,7 +91,7 @@ public function __construct(\n      *\n      * @param int $hostIndex Host index (required)\n      */\n-    public function setHostIndex($hostIndex)\n+    public function setHostIndex($hostIndex): void\n     {\n         $this->hostIndex = $hostIndex;\n     }\n@@ -154,7 +153,7 @@ public function call123TestSpecialTagsWithHttpInfo($client)\n             } catch (RequestException $e) {\n                 throw new ApiException(\n                     \"[{$e->getCode()}] {$e->getMessage()}\",\n-                    $e->getCode(),\n+                    (int) $e->getCode(),\n                     $e->getResponse() ? $e->getResponse()->getHeaders() : null,\n                     $e->getResponse() ? (string) $e->getResponse()->getBody() : null\n                 );\n@@ -167,21 +166,20 @@ public function call123TestSpecialTagsWithHttpInfo($client)\n                     sprintf(\n                         '[%d] Error connecting to the API (%s)',\n                         $statusCode,\n-                        $request->getUri()\n+                        (string) $request->getUri()\n                     ),\n                     $statusCode,\n                     $response->getHeaders(),\n-                    $response->getBody()\n+                    (string) $response->getBody()\n                 );\n             }\n \n-            $responseBody = $response->getBody();\n             switch($statusCode) {\n                 case 200:\n                     if ('\\OpenAPI\\Client\\Model\\Client' === '\\SplFileObject') {\n-                        $content = $responseBody; //stream goes to serializer\n+                        $content = $response->getBody(); //stream goes to serializer\n                     } else {\n-                        $content = (string) $responseBody;\n+                        $content = (string) $response->getBody();\n                     }\n \n                     return [\n@@ -192,11 +190,10 @@ public function call123TestSpecialTagsWithHttpInfo($client)\n             }\n \n             $returnType = '\\OpenAPI\\Client\\Model\\Client';\n-            $responseBody = $response->getBody();\n             if ($returnType === '\\SplFileObject') {\n-                $content = $responseBody; //stream goes to serializer\n+                $content = $response->getBody(); //stream goes to serializer\n             } else {\n-                $content = (string) $responseBody;\n+                $content = (string) $response->getBody();\n             }\n \n             return [\n@@ -259,11 +256,10 @@ public function call123TestSpecialTagsAsyncWithHttpInfo($client)\n             ->sendAsync($request, $this->createHttpClientOption())\n             ->then(\n                 function ($response) use ($returnType) {\n-                    $responseBody = $response->getBody();\n                     if ($returnType === '\\SplFileObject') {\n-                        $content = $responseBody; //stream goes to serializer\n+                        $content = $response->getBody(); //stream goes to serializer\n                     } else {\n-                        $content = (string) $responseBody;\n+                        $content = (string) $response->getBody();\n                     }\n \n                     return [\n@@ -283,7 +279,7 @@ function ($exception) {\n                         ),\n                         $statusCode,\n                         $response->getHeaders(),\n-                        $response->getBody()\n+                        (string) $response->getBody()\n                     );\n                 }\n             );"
  },
  {
    "sha": "8a768da9db33ab34a0b91681892b6e259f627226",
    "filename": "samples/client/petstore/php/OpenAPIClient-php/lib/Api/DefaultApi.php",
    "status": "modified",
    "additions": 11,
    "deletions": 19,
    "changes": 30,
    "blob_url": "https://github.com/OpenAPITools/openapi-generator/blob/dea37fb41afabfe481cc2e86c2b2bcbe9bce0fe2/samples/client/petstore/php/OpenAPIClient-php/lib/Api/DefaultApi.php",
    "raw_url": "https://github.com/OpenAPITools/openapi-generator/raw/dea37fb41afabfe481cc2e86c2b2bcbe9bce0fe2/samples/client/petstore/php/OpenAPIClient-php/lib/Api/DefaultApi.php",
    "contents_url": "https://api.github.com/repos/OpenAPITools/openapi-generator/contents/samples/client/petstore/php/OpenAPIClient-php/lib/Api/DefaultApi.php?ref=dea37fb41afabfe481cc2e86c2b2bcbe9bce0fe2",
    "patch": "@@ -15,7 +15,6 @@\n  * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \\\" \\\\\n  *\n  * The version of the OpenAPI document: 1.0.0\n- * \n  * Generated by: https://openapi-generator.tech\n  * OpenAPI Generator version: 5.1.0-SNAPSHOT\n  */\n@@ -92,7 +91,7 @@ public function __construct(\n      *\n      * @param int $hostIndex Host index (required)\n      */\n-    public function setHostIndex($hostIndex)\n+    public function setHostIndex($hostIndex): void\n     {\n         $this->hostIndex = $hostIndex;\n     }\n@@ -148,7 +147,7 @@ public function fooGetWithHttpInfo()\n             } catch (RequestException $e) {\n                 throw new ApiException(\n                     \"[{$e->getCode()}] {$e->getMessage()}\",\n-                    $e->getCode(),\n+                    (int) $e->getCode(),\n                     $e->getResponse() ? $e->getResponse()->getHeaders() : null,\n                     $e->getResponse() ? (string) $e->getResponse()->getBody() : null\n                 );\n@@ -161,21 +160,20 @@ public function fooGetWithHttpInfo()\n                     sprintf(\n                         '[%d] Error connecting to the API (%s)',\n                         $statusCode,\n-                        $request->getUri()\n+                        (string) $request->getUri()\n                     ),\n                     $statusCode,\n                     $response->getHeaders(),\n-                    $response->getBody()\n+                    (string) $response->getBody()\n                 );\n             }\n \n-            $responseBody = $response->getBody();\n             switch($statusCode) {\n                 default:\n                     if ('\\OpenAPI\\Client\\Model\\InlineResponseDefault' === '\\SplFileObject') {\n-                        $content = $responseBody; //stream goes to serializer\n+                        $content = $response->getBody(); //stream goes to serializer\n                     } else {\n-                        $content = (string) $responseBody;\n+                        $content = (string) $response->getBody();\n                     }\n \n                     return [\n@@ -186,11 +184,10 @@ public function fooGetWithHttpInfo()\n             }\n \n             $returnType = '\\OpenAPI\\Client\\Model\\InlineResponseDefault';\n-            $responseBody = $response->getBody();\n             if ($returnType === '\\SplFileObject') {\n-                $content = $responseBody; //stream goes to serializer\n+                $content = $response->getBody(); //stream goes to serializer\n             } else {\n-                $content = (string) $responseBody;\n+                $content = (string) $response->getBody();\n             }\n \n             return [\n@@ -217,8 +214,6 @@ public function fooGetWithHttpInfo()\n     /**\n      * Operation fooGetAsync\n      *\n-     * \n-     *\n      *\n      * @throws \\InvalidArgumentException\n      * @return \\GuzzleHttp\\Promise\\PromiseInterface\n@@ -236,8 +231,6 @@ function ($response) {\n     /**\n      * Operation fooGetAsyncWithHttpInfo\n      *\n-     * \n-     *\n      *\n      * @throws \\InvalidArgumentException\n      * @return \\GuzzleHttp\\Promise\\PromiseInterface\n@@ -251,11 +244,10 @@ public function fooGetAsyncWithHttpInfo()\n             ->sendAsync($request, $this->createHttpClientOption())\n             ->then(\n                 function ($response) use ($returnType) {\n-                    $responseBody = $response->getBody();\n                     if ($returnType === '\\SplFileObject') {\n-                        $content = $responseBody; //stream goes to serializer\n+                        $content = $response->getBody(); //stream goes to serializer\n                     } else {\n-                        $content = (string) $responseBody;\n+                        $content = (string) $response->getBody();\n                     }\n \n                     return [\n@@ -275,7 +267,7 @@ function ($exception) {\n                         ),\n                         $statusCode,\n                         $response->getHeaders(),\n-                        $response->getBody()\n+                        (string) $response->getBody()\n                     );\n                 }\n             );"
  },
  {
    "sha": "95e20f132f7d4196c8bb86a2292b1ab8c741002d",
    "filename": "samples/client/petstore/php/OpenAPIClient-php/lib/Api/FakeApi.php",
    "status": "modified",
    "additions": 111,
    "deletions": 165,
    "changes": 276,
    "blob_url": "https://github.com/OpenAPITools/openapi-generator/blob/dea37fb41afabfe481cc2e86c2b2bcbe9bce0fe2/samples/client/petstore/php/OpenAPIClient-php/lib/Api/FakeApi.php",
    "raw_url": "https://github.com/OpenAPITools/openapi-generator/raw/dea37fb41afabfe481cc2e86c2b2bcbe9bce0fe2/samples/client/petstore/php/OpenAPIClient-php/lib/Api/FakeApi.php",
    "contents_url": "https://api.github.com/repos/OpenAPITools/openapi-generator/contents/samples/client/petstore/php/OpenAPIClient-php/lib/Api/FakeApi.php?ref=dea37fb41afabfe481cc2e86c2b2bcbe9bce0fe2",
    "patch": "@@ -15,7 +15,6 @@\n  * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \\\" \\\\\n  *\n  * The version of the OpenAPI document: 1.0.0\n- * \n  * Generated by: https://openapi-generator.tech\n  * OpenAPI Generator version: 5.1.0-SNAPSHOT\n  */\n@@ -92,7 +91,7 @@ public function __construct(\n      *\n      * @param int $hostIndex Host index (required)\n      */\n-    public function setHostIndex($hostIndex)\n+    public function setHostIndex($hostIndex): void\n     {\n         $this->hostIndex = $hostIndex;\n     }\n@@ -152,7 +151,7 @@ public function fakeHealthGetWithHttpInfo()\n             } catch (RequestException $e) {\n                 throw new ApiException(\n                     \"[{$e->getCode()}] {$e->getMessage()}\",\n-                    $e->getCode(),\n+                    (int) $e->getCode(),\n                     $e->getResponse() ? $e->getResponse()->getHeaders() : null,\n                     $e->getResponse() ? (string) $e->getResponse()->getBody() : null\n                 );\n@@ -165,21 +164,20 @@ public function fakeHealthGetWithHttpInfo()\n                     sprintf(\n                         '[%d] Error connecting to the API (%s)',\n                         $statusCode,\n-                        $request->getUri()\n+                        (string) $request->getUri()\n                     ),\n                     $statusCode,\n                     $response->getHeaders(),\n-                    $response->getBody()\n+                    (string) $response->getBody()\n                 );\n             }\n \n-            $responseBody = $response->getBody();\n             switch($statusCode) {\n                 case 200:\n                     if ('\\OpenAPI\\Client\\Model\\HealthCheckResult' === '\\SplFileObject') {\n-                        $content = $responseBody; //stream goes to serializer\n+                        $content = $response->getBody(); //stream goes to serializer\n                     } else {\n-                        $content = (string) $responseBody;\n+                        $content = (string) $response->getBody();\n                     }\n \n                     return [\n@@ -190,11 +188,10 @@ public function fakeHealthGetWithHttpInfo()\n             }\n \n             $returnType = '\\OpenAPI\\Client\\Model\\HealthCheckResult';\n-            $responseBody = $response->getBody();\n             if ($returnType === '\\SplFileObject') {\n-                $content = $responseBody; //stream goes to serializer\n+                $content = $response->getBody(); //stream goes to serializer\n             } else {\n-                $content = (string) $responseBody;\n+                $content = (string) $response->getBody();\n             }\n \n             return [\n@@ -255,11 +252,10 @@ public function fakeHealthGetAsyncWithHttpInfo()\n             ->sendAsync($request, $this->createHttpClientOption())\n             ->then(\n                 function ($response) use ($returnType) {\n-                    $responseBody = $response->getBody();\n                     if ($returnType === '\\SplFileObject') {\n-                        $content = $responseBody; //stream goes to serializer\n+                        $content = $response->getBody(); //stream goes to serializer\n                     } else {\n-                        $content = (string) $responseBody;\n+                        $content = (string) $response->getBody();\n                     }\n \n                     return [\n@@ -279,7 +275,7 @@ function ($exception) {\n                         ),\n                         $statusCode,\n                         $response->getHeaders(),\n-                        $response->getBody()\n+                        (string) $response->getBody()\n                     );\n                 }\n             );\n@@ -405,7 +401,7 @@ public function fakeHttpSignatureTestWithHttpInfo($pet, $query_1 = null, $header\n             } catch (RequestException $e) {\n                 throw new ApiException(\n                     \"[{$e->getCode()}] {$e->getMessage()}\",\n-                    $e->getCode(),\n+                    (int) $e->getCode(),\n                     $e->getResponse() ? $e->getResponse()->getHeaders() : null,\n                     $e->getResponse() ? (string) $e->getResponse()->getBody() : null\n                 );\n@@ -418,11 +414,11 @@ public function fakeHttpSignatureTestWithHttpInfo($pet, $query_1 = null, $header\n                     sprintf(\n                         '[%d] Error connecting to the API (%s)',\n                         $statusCode,\n-                        $request->getUri()\n+                        (string) $request->getUri()\n                     ),\n                     $statusCode,\n                     $response->getHeaders(),\n-                    $response->getBody()\n+                    (string) $response->getBody()\n                 );\n             }\n \n@@ -491,7 +487,7 @@ function ($exception) {\n                         ),\n                         $statusCode,\n                         $response->getHeaders(),\n-                        $response->getBody()\n+                        (string) $response->getBody()\n                     );\n                 }\n             );\n@@ -640,7 +636,7 @@ public function fakeOuterBooleanSerializeWithHttpInfo($body = null)\n             } catch (RequestException $e) {\n                 throw new ApiException(\n                     \"[{$e->getCode()}] {$e->getMessage()}\",\n-                    $e->getCode(),\n+                    (int) $e->getCode(),\n                     $e->getResponse() ? $e->getResponse()->getHeaders() : null,\n                     $e->getResponse() ? (string) $e->getResponse()->getBody() : null\n                 );\n@@ -653,21 +649,20 @@ public function fakeOuterBooleanSerializeWithHttpInfo($body = null)\n                     sprintf(\n                         '[%d] Error connecting to the API (%s)',\n                         $statusCode,\n-                        $request->getUri()\n+                        (string) $request->getUri()\n                     ),\n                     $statusCode,\n                     $response->getHeaders(),\n-                    $response->getBody()\n+                    (string) $response->getBody()\n                 );\n             }\n \n-            $responseBody = $response->getBody();\n             switch($statusCode) {\n                 case 200:\n                     if ('bool' === '\\SplFileObject') {\n-                        $content = $responseBody; //stream goes to serializer\n+                        $content = $response->getBody(); //stream goes to serializer\n                     } else {\n-                        $content = (string) $responseBody;\n+                        $content = (string) $response->getBody();\n                     }\n \n                     return [\n@@ -678,11 +673,10 @@ public function fakeOuterBooleanSerializeWithHttpInfo($body = null)\n             }\n \n             $returnType = 'bool';\n-            $responseBody = $response->getBody();\n             if ($returnType === '\\SplFileObject') {\n-                $content = $responseBody; //stream goes to serializer\n+                $content = $response->getBody(); //stream goes to serializer\n             } else {\n-                $content = (string) $responseBody;\n+                $content = (string) $response->getBody();\n             }\n \n             return [\n@@ -709,8 +703,6 @@ public function fakeOuterBooleanSerializeWithHttpInfo($body = null)\n     /**\n      * Operation fakeOuterBooleanSerializeAsync\n      *\n-     * \n-     *\n      * @param  bool $body Input boolean as post body (optional)\n      *\n      * @throws \\InvalidArgumentException\n@@ -729,8 +721,6 @@ function ($response) {\n     /**\n      * Operation fakeOuterBooleanSerializeAsyncWithHttpInfo\n      *\n-     * \n-     *\n      * @param  bool $body Input boolean as post body (optional)\n      *\n      * @throws \\InvalidArgumentException\n@@ -745,11 +735,10 @@ public function fakeOuterBooleanSerializeAsyncWithHttpInfo($body = null)\n             ->sendAsync($request, $this->createHttpClientOption())\n             ->then(\n                 function ($response) use ($returnType) {\n-                    $responseBody = $response->getBody();\n                     if ($returnType === '\\SplFileObject') {\n-                        $content = $responseBody; //stream goes to serializer\n+                        $content = $response->getBody(); //stream goes to serializer\n                     } else {\n-                        $content = (string) $responseBody;\n+                        $content = (string) $response->getBody();\n                     }\n \n                     return [\n@@ -769,7 +758,7 @@ function ($exception) {\n                         ),\n                         $statusCode,\n                         $response->getHeaders(),\n-                        $response->getBody()\n+                        (string) $response->getBody()\n                     );\n                 }\n             );\n@@ -895,7 +884,7 @@ public function fakeOuterCompositeSerializeWithHttpInfo($outer_composite = null)\n             } catch (RequestException $e) {\n                 throw new ApiException(\n                     \"[{$e->getCode()}] {$e->getMessage()}\",\n-                    $e->getCode(),\n+                    (int) $e->getCode(),\n                     $e->getResponse() ? $e->getResponse()->getHeaders() : null,\n                     $e->getResponse() ? (string) $e->getResponse()->getBody() : null\n                 );\n@@ -908,21 +897,20 @@ public function fakeOuterCompositeSerializeWithHttpInfo($outer_composite = null)\n                     sprintf(\n                         '[%d] Error connecting to the API (%s)',\n                         $statusCode,\n-                        $request->getUri()\n+                        (string) $request->getUri()\n                     ),\n                     $statusCode,\n                     $response->getHeaders(),\n-                    $response->getBody()\n+                    (string) $response->getBody()\n                 );\n             }\n \n-            $responseBody = $response->getBody();\n             switch($statusCode) {\n                 case 200:\n                     if ('\\OpenAPI\\Client\\Model\\OuterComposite' === '\\SplFileObject') {\n-                        $content = $responseBody; //stream goes to serializer\n+                        $content = $response->getBody(); //stream goes to serializer\n                     } else {\n-                        $content = (string) $responseBody;\n+                        $content = (string) $response->getBody();\n                     }\n \n                     return [\n@@ -933,11 +921,10 @@ public function fakeOuterCompositeSerializeWithHttpInfo($outer_composite = null)\n             }\n \n             $returnType = '\\OpenAPI\\Client\\Model\\OuterComposite';\n-            $responseBody = $response->getBody();\n             if ($returnType === '\\SplFileObject') {\n-                $content = $responseBody; //stream goes to serializer\n+                $content = $response->getBody(); //stream goes to serializer\n             } else {\n-                $content = (string) $responseBody;\n+                $content = (string) $response->getBody();\n             }\n \n             return [\n@@ -964,8 +951,6 @@ public function fakeOuterCompositeSerializeWithHttpInfo($outer_composite = null)\n     /**\n      * Operation fakeOuterCompositeSerializeAsync\n      *\n-     * \n-     *\n      * @param  \\OpenAPI\\Client\\Model\\OuterComposite $outer_composite Input composite as post body (optional)\n      *\n      * @throws \\InvalidArgumentException\n@@ -984,8 +969,6 @@ function ($response) {\n     /**\n      * Operation fakeOuterCompositeSerializeAsyncWithHttpInfo\n      *\n-     * \n-     *\n      * @param  \\OpenAPI\\Client\\Model\\OuterComposite $outer_composite Input composite as post body (optional)\n      *\n      * @throws \\InvalidArgumentException\n@@ -1000,11 +983,10 @@ public function fakeOuterCompositeSerializeAsyncWithHttpInfo($outer_composite =\n             ->sendAsync($request, $this->createHttpClientOption())\n             ->then(\n                 function ($response) use ($returnType) {\n-                    $responseBody = $response->getBody();\n                     if ($returnType === '\\SplFileObject') {\n-                        $content = $responseBody; //stream goes to serializer\n+                        $content = $response->getBody(); //stream goes to serializer\n                     } else {\n-                        $content = (string) $responseBody;\n+                        $content = (string) $response->getBody();\n                     }\n \n                     return [\n@@ -1024,7 +1006,7 @@ function ($exception) {\n                         ),\n                         $statusCode,\n                         $response->getHeaders(),\n-                        $response->getBody()\n+                        (string) $response->getBody()\n                     );\n                 }\n             );\n@@ -1150,7 +1132,7 @@ public function fakeOuterNumberSerializeWithHttpInfo($body = null)\n             } catch (RequestException $e) {\n                 throw new ApiException(\n                     \"[{$e->getCode()}] {$e->getMessage()}\",\n-                    $e->getCode(),\n+                    (int) $e->getCode(),\n                     $e->getResponse() ? $e->getResponse()->getHeaders() : null,\n                     $e->getResponse() ? (string) $e->getResponse()->getBody() : null\n                 );\n@@ -1163,21 +1145,20 @@ public function fakeOuterNumberSerializeWithHttpInfo($body = null)\n                     sprintf(\n                         '[%d] Error connecting to the API (%s)',\n                         $statusCode,\n-                        $request->getUri()\n+                        (string) $request->getUri()\n                     ),\n                     $statusCode,\n                     $response->getHeaders(),\n-                    $response->getBody()\n+                    (string) $response->getBody()\n                 );\n             }\n \n-            $responseBody = $response->getBody();\n             switch($statusCode) {\n                 case 200:\n                     if ('float' === '\\SplFileObject') {\n-                        $content = $responseBody; //stream goes to serializer\n+                        $content = $response->getBody(); //stream goes to serializer\n                     } else {\n-                        $content = (string) $responseBody;\n+                        $content = (string) $response->getBody();\n                     }\n \n                     return [\n@@ -1188,11 +1169,10 @@ public function fakeOuterNumberSerializeWithHttpInfo($body = null)\n             }\n \n             $returnType = 'float';\n-            $responseBody = $response->getBody();\n             if ($returnType === '\\SplFileObject') {\n-                $content = $responseBody; //stream goes to serializer\n+                $content = $response->getBody(); //stream goes to serializer\n             } else {\n-                $content = (string) $responseBody;\n+                $content = (string) $response->getBody();\n             }\n \n             return [\n@@ -1219,8 +1199,6 @@ public function fakeOuterNumberSerializeWithHttpInfo($body = null)\n     /**\n      * Operation fakeOuterNumberSerializeAsync\n      *\n-     * \n-     *\n      * @param  float $body Input number as post body (optional)\n      *\n      * @throws \\InvalidArgumentException\n@@ -1239,8 +1217,6 @@ function ($response) {\n     /**\n      * Operation fakeOuterNumberSerializeAsyncWithHttpInfo\n      *\n-     * \n-     *\n      * @param  float $body Input number as post body (optional)\n      *\n      * @throws \\InvalidArgumentException\n@@ -1255,11 +1231,10 @@ public function fakeOuterNumberSerializeAsyncWithHttpInfo($body = null)\n             ->sendAsync($request, $this->createHttpClientOption())\n             ->then(\n                 function ($response) use ($returnType) {\n-                    $responseBody = $response->getBody();\n                     if ($returnType === '\\SplFileObject') {\n-                        $content = $responseBody; //stream goes to serializer\n+                        $content = $response->getBody(); //stream goes to serializer\n                     } else {\n-                        $content = (string) $responseBody;\n+                        $content = (string) $response->getBody();\n                     }\n \n                     return [\n@@ -1279,7 +1254,7 @@ function ($exception) {\n                         ),\n                         $statusCode,\n                         $response->getHeaders(),\n-                        $response->getBody()\n+                        (string) $response->getBody()\n                     );\n                 }\n             );\n@@ -1405,7 +1380,7 @@ public function fakeOuterStringSerializeWithHttpInfo($body = null)\n             } catch (RequestException $e) {\n                 throw new ApiException(\n                     \"[{$e->getCode()}] {$e->getMessage()}\",\n-                    $e->getCode(),\n+                    (int) $e->getCode(),\n                     $e->getResponse() ? $e->getResponse()->getHeaders() : null,\n                     $e->getResponse() ? (string) $e->getResponse()->getBody() : null\n                 );\n@@ -1418,21 +1393,20 @@ public function fakeOuterStringSerializeWithHttpInfo($body = null)\n                     sprintf(\n                         '[%d] Error connecting to the API (%s)',\n                         $statusCode,\n-                        $request->getUri()\n+                        (string) $request->getUri()\n                     ),\n                     $statusCode,\n                     $response->getHeaders(),\n-                    $response->getBody()\n+                    (string) $response->getBody()\n                 );\n             }\n \n-            $responseBody = $response->getBody();\n             switch($statusCode) {\n                 case 200:\n                     if ('string' === '\\SplFileObject') {\n-                        $content = $responseBody; //stream goes to serializer\n+                        $content = $response->getBody(); //stream goes to serializer\n                     } else {\n-                        $content = (string) $responseBody;\n+                        $content = (string) $response->getBody();\n                     }\n \n                     return [\n@@ -1443,11 +1417,10 @@ public function fakeOuterStringSerializeWithHttpInfo($body = null)\n             }\n \n             $returnType = 'string';\n-            $responseBody = $response->getBody();\n             if ($returnType === '\\SplFileObject') {\n-                $content = $responseBody; //stream goes to serializer\n+                $content = $response->getBody(); //stream goes to serializer\n             } else {\n-                $content = (string) $responseBody;\n+                $content = (string) $response->getBody();\n             }\n \n             return [\n@@ -1474,8 +1447,6 @@ public function fakeOuterStringSerializeWithHttpInfo($body = null)\n     /**\n      * Operation fakeOuterStringSerializeAsync\n      *\n-     * \n-     *\n      * @param  string $body Input string as post body (optional)\n      *\n      * @throws \\InvalidArgumentException\n@@ -1494,8 +1465,6 @@ function ($response) {\n     /**\n      * Operation fakeOuterStringSerializeAsyncWithHttpInfo\n      *\n-     * \n-     *\n      * @param  string $body Input string as post body (optional)\n      *\n      * @throws \\InvalidArgumentException\n@@ -1510,11 +1479,10 @@ public function fakeOuterStringSerializeAsyncWithHttpInfo($body = null)\n             ->sendAsync($request, $this->createHttpClientOption())\n             ->then(\n                 function ($response) use ($returnType) {\n-                    $responseBody = $response->getBody();\n                     if ($returnType === '\\SplFileObject') {\n-                        $content = $responseBody; //stream goes to serializer\n+                        $content = $response->getBody(); //stream goes to serializer\n                     } else {\n-                        $content = (string) $responseBody;\n+                        $content = (string) $response->getBody();\n                     }\n \n                     return [\n@@ -1534,7 +1502,7 @@ function ($exception) {\n                         ),\n                         $statusCode,\n                         $response->getHeaders(),\n-                        $response->getBody()\n+                        (string) $response->getBody()\n                     );\n                 }\n             );\n@@ -1660,7 +1628,7 @@ public function fakePropertyEnumIntegerSerializeWithHttpInfo($outer_object_with_\n             } catch (RequestException $e) {\n                 throw new ApiException(\n                     \"[{$e->getCode()}] {$e->getMessage()}\",\n-                    $e->getCode(),\n+                    (int) $e->getCode(),\n                     $e->getResponse() ? $e->getResponse()->getHeaders() : null,\n                     $e->getResponse() ? (string) $e->getResponse()->getBody() : null\n                 );\n@@ -1673,21 +1641,20 @@ public function fakePropertyEnumIntegerSerializeWithHttpInfo($outer_object_with_\n                     sprintf(\n                         '[%d] Error connecting to the API (%s)',\n                         $statusCode,\n-                        $request->getUri()\n+                        (string) $request->getUri()\n                     ),\n                     $statusCode,\n                     $response->getHeaders(),\n-                    $response->getBody()\n+                    (string) $response->getBody()\n                 );\n             }\n \n-            $responseBody = $response->getBody();\n             switch($statusCode) {\n                 case 200:\n                     if ('\\OpenAPI\\Client\\Model\\OuterObjectWithEnumProperty' === '\\SplFileObject') {\n-                        $content = $responseBody; //stream goes to serializer\n+                        $content = $response->getBody(); //stream goes to serializer\n                     } else {\n-                        $content = (string) $responseBody;\n+                        $content = (string) $response->getBody();\n                     }\n \n                     return [\n@@ -1698,11 +1665,10 @@ public function fakePropertyEnumIntegerSerializeWithHttpInfo($outer_object_with_\n             }\n \n             $returnType = '\\OpenAPI\\Client\\Model\\OuterObjectWithEnumProperty';\n-            $responseBody = $response->getBody();\n             if ($returnType === '\\SplFileObject') {\n-                $content = $responseBody; //stream goes to serializer\n+                $content = $response->getBody(); //stream goes to serializer\n             } else {\n-                $content = (string) $responseBody;\n+                $content = (string) $response->getBody();\n             }\n \n             return [\n@@ -1729,8 +1695,6 @@ public function fakePropertyEnumIntegerSerializeWithHttpInfo($outer_object_with_\n     /**\n      * Operation fakePropertyEnumIntegerSerializeAsync\n      *\n-     * \n-     *\n      * @param  \\OpenAPI\\Client\\Model\\OuterObjectWithEnumProperty $outer_object_with_enum_property Input enum (int) as post body (required)\n      *\n      * @throws \\InvalidArgumentException\n@@ -1749,8 +1713,6 @@ function ($response) {\n     /**\n      * Operation fakePropertyEnumIntegerSerializeAsyncWithHttpInfo\n      *\n-     * \n-     *\n      * @param  \\OpenAPI\\Client\\Model\\OuterObjectWithEnumProperty $outer_object_with_enum_property Input enum (int) as post body (required)\n      *\n      * @throws \\InvalidArgumentException\n@@ -1765,11 +1727,10 @@ public function fakePropertyEnumIntegerSerializeAsyncWithHttpInfo($outer_object_\n             ->sendAsync($request, $this->createHttpClientOption())\n             ->then(\n                 function ($response) use ($returnType) {\n-                    $responseBody = $response->getBody();\n                     if ($returnType === '\\SplFileObject') {\n-                        $content = $responseBody; //stream goes to serializer\n+                        $content = $response->getBody(); //stream goes to serializer\n                     } else {\n-                        $content = (string) $responseBody;\n+                        $content = (string) $response->getBody();\n                     }\n \n                     return [\n@@ -1789,7 +1750,7 @@ function ($exception) {\n                         ),\n                         $statusCode,\n                         $response->getHeaders(),\n-                        $response->getBody()\n+                        (string) $response->getBody()\n                     );\n                 }\n             );\n@@ -1920,7 +1881,7 @@ public function testBodyWithFileSchemaWithHttpInfo($file_schema_test_class)\n             } catch (RequestException $e) {\n                 throw new ApiException(\n                     \"[{$e->getCode()}] {$e->getMessage()}\",\n-                    $e->getCode(),\n+                    (int) $e->getCode(),\n                     $e->getResponse() ? $e->getResponse()->getHeaders() : null,\n                     $e->getResponse() ? (string) $e->getResponse()->getBody() : null\n                 );\n@@ -1933,11 +1894,11 @@ public function testBodyWithFileSchemaWithHttpInfo($file_schema_test_class)\n                     sprintf(\n                         '[%d] Error connecting to the API (%s)',\n                         $statusCode,\n-                        $request->getUri()\n+                        (string) $request->getUri()\n                     ),\n                     $statusCode,\n                     $response->getHeaders(),\n-                    $response->getBody()\n+                    (string) $response->getBody()\n                 );\n             }\n \n@@ -1953,8 +1914,6 @@ public function testBodyWithFileSchemaWithHttpInfo($file_schema_test_class)\n     /**\n      * Operation testBodyWithFileSchemaAsync\n      *\n-     * \n-     *\n      * @param  \\OpenAPI\\Client\\Model\\FileSchemaTestClass $file_schema_test_class (required)\n      *\n      * @throws \\InvalidArgumentException\n@@ -1973,8 +1932,6 @@ function ($response) {\n     /**\n      * Operation testBodyWithFileSchemaAsyncWithHttpInfo\n      *\n-     * \n-     *\n      * @param  \\OpenAPI\\Client\\Model\\FileSchemaTestClass $file_schema_test_class (required)\n      *\n      * @throws \\InvalidArgumentException\n@@ -2002,7 +1959,7 @@ function ($exception) {\n                         ),\n                         $statusCode,\n                         $response->getHeaders(),\n-                        $response->getBody()\n+                        (string) $response->getBody()\n                     );\n                 }\n             );\n@@ -2135,7 +2092,7 @@ public function testBodyWithQueryParamsWithHttpInfo($query, $user)\n             } catch (RequestException $e) {\n                 throw new ApiException(\n                     \"[{$e->getCode()}] {$e->getMessage()}\",\n-                    $e->getCode(),\n+                    (int) $e->getCode(),\n                     $e->getResponse() ? $e->getResponse()->getHeaders() : null,\n                     $e->getResponse() ? (string) $e->getResponse()->getBody() : null\n                 );\n@@ -2148,11 +2105,11 @@ public function testBodyWithQueryParamsWithHttpInfo($query, $user)\n                     sprintf(\n                         '[%d] Error connecting to the API (%s)',\n                         $statusCode,\n-                        $request->getUri()\n+                        (string) $request->getUri()\n                     ),\n                     $statusCode,\n                     $response->getHeaders(),\n-                    $response->getBody()\n+                    (string) $response->getBody()\n                 );\n             }\n \n@@ -2168,8 +2125,6 @@ public function testBodyWithQueryParamsWithHttpInfo($query, $user)\n     /**\n      * Operation testBodyWithQueryParamsAsync\n      *\n-     * \n-     *\n      * @param  string $query (required)\n      * @param  \\OpenAPI\\Client\\Model\\User $user (required)\n      *\n@@ -2189,8 +2144,6 @@ function ($response) {\n     /**\n      * Operation testBodyWithQueryParamsAsyncWithHttpInfo\n      *\n-     * \n-     *\n      * @param  string $query (required)\n      * @param  \\OpenAPI\\Client\\Model\\User $user (required)\n      *\n@@ -2219,7 +2172,7 @@ function ($exception) {\n                         ),\n                         $statusCode,\n                         $response->getHeaders(),\n-                        $response->getBody()\n+                        (string) $response->getBody()\n                     );\n                 }\n             );\n@@ -2337,7 +2290,7 @@ public function testBodyWithQueryParamsRequest($query, $user)\n     /**\n      * Operation testClientModel\n      *\n-     * To test \\\"client\\\" model\n+     * To test \\&quot;client\\&quot; model\n      *\n      * @param  \\OpenAPI\\Client\\Model\\Client $client client model (required)\n      *\n@@ -2354,7 +2307,7 @@ public function testClientModel($client)\n     /**\n      * Operation testClientModelWithHttpInfo\n      *\n-     * To test \\\"client\\\" model\n+     * To test \\&quot;client\\&quot; model\n      *\n      * @param  \\OpenAPI\\Client\\Model\\Client $client client model (required)\n      *\n@@ -2373,7 +2326,7 @@ public function testClientModelWithHttpInfo($client)\n             } catch (RequestException $e) {\n                 throw new ApiException(\n                     \"[{$e->getCode()}] {$e->getMessage()}\",\n-                    $e->getCode(),\n+                    (int) $e->getCode(),\n                     $e->getResponse() ? $e->getResponse()->getHeaders() : null,\n                     $e->getResponse() ? (string) $e->getResponse()->getBody() : null\n                 );\n@@ -2386,21 +2339,20 @@ public function testClientModelWithHttpInfo($client)\n                     sprintf(\n                         '[%d] Error connecting to the API (%s)',\n                         $statusCode,\n-                        $request->getUri()\n+                        (string) $request->getUri()\n                     ),\n                     $statusCode,\n                     $response->getHeaders(),\n-                    $response->getBody()\n+                    (string) $response->getBody()\n                 );\n             }\n \n-            $responseBody = $response->getBody();\n             switch($statusCode) {\n                 case 200:\n                     if ('\\OpenAPI\\Client\\Model\\Client' === '\\SplFileObject') {\n-                        $content = $responseBody; //stream goes to serializer\n+                        $content = $response->getBody(); //stream goes to serializer\n                     } else {\n-                        $content = (string) $responseBody;\n+                        $content = (string) $response->getBody();\n                     }\n \n                     return [\n@@ -2411,11 +2363,10 @@ public function testClientModelWithHttpInfo($client)\n             }\n \n             $returnType = '\\OpenAPI\\Client\\Model\\Client';\n-            $responseBody = $response->getBody();\n             if ($returnType === '\\SplFileObject') {\n-                $content = $responseBody; //stream goes to serializer\n+                $content = $response->getBody(); //stream goes to serializer\n             } else {\n-                $content = (string) $responseBody;\n+                $content = (string) $response->getBody();\n             }\n \n             return [\n@@ -2442,7 +2393,7 @@ public function testClientModelWithHttpInfo($client)\n     /**\n      * Operation testClientModelAsync\n      *\n-     * To test \\\"client\\\" model\n+     * To test \\&quot;client\\&quot; model\n      *\n      * @param  \\OpenAPI\\Client\\Model\\Client $client client model (required)\n      *\n@@ -2462,7 +2413,7 @@ function ($response) {\n     /**\n      * Operation testClientModelAsyncWithHttpInfo\n      *\n-     * To test \\\"client\\\" model\n+     * To test \\&quot;client\\&quot; model\n      *\n      * @param  \\OpenAPI\\Client\\Model\\Client $client client model (required)\n      *\n@@ -2478,11 +2429,10 @@ public function testClientModelAsyncWithHttpInfo($client)\n             ->sendAsync($request, $this->createHttpClientOption())\n             ->then(\n                 function ($response) use ($returnType) {\n-                    $responseBody = $response->getBody();\n                     if ($returnType === '\\SplFileObject') {\n-                        $content = $responseBody; //stream goes to serializer\n+                        $content = $response->getBody(); //stream goes to serializer\n                     } else {\n-                        $content = (string) $responseBody;\n+                        $content = (string) $response->getBody();\n                     }\n \n                     return [\n@@ -2502,7 +2452,7 @@ function ($exception) {\n                         ),\n                         $statusCode,\n                         $response->getHeaders(),\n-                        $response->getBody()\n+                        (string) $response->getBody()\n                     );\n                 }\n             );\n@@ -2663,7 +2613,7 @@ public function testEndpointParametersWithHttpInfo($number, $double, $pattern_wi\n             } catch (RequestException $e) {\n                 throw new ApiException(\n                     \"[{$e->getCode()}] {$e->getMessage()}\",\n-                    $e->getCode(),\n+                    (int) $e->getCode(),\n                     $e->getResponse() ? $e->getResponse()->getHeaders() : null,\n                     $e->getResponse() ? (string) $e->getResponse()->getBody() : null\n                 );\n@@ -2676,11 +2626,11 @@ public function testEndpointParametersWithHttpInfo($number, $double, $pattern_wi\n                     sprintf(\n                         '[%d] Error connecting to the API (%s)',\n                         $statusCode,\n-                        $request->getUri()\n+                        (string) $request->getUri()\n                     ),\n                     $statusCode,\n                     $response->getHeaders(),\n-                    $response->getBody()\n+                    (string) $response->getBody()\n                 );\n             }\n \n@@ -2771,7 +2721,7 @@ function ($exception) {\n                         ),\n                         $statusCode,\n                         $response->getHeaders(),\n-                        $response->getBody()\n+                        (string) $response->getBody()\n                     );\n                 }\n             );\n@@ -3060,7 +3010,7 @@ public function testEnumParametersWithHttpInfo($enum_header_string_array = null,\n             } catch (RequestException $e) {\n                 throw new ApiException(\n                     \"[{$e->getCode()}] {$e->getMessage()}\",\n-                    $e->getCode(),\n+                    (int) $e->getCode(),\n                     $e->getResponse() ? $e->getResponse()->getHeaders() : null,\n                     $e->getResponse() ? (string) $e->getResponse()->getBody() : null\n                 );\n@@ -3073,11 +3023,11 @@ public function testEnumParametersWithHttpInfo($enum_header_string_array = null,\n                     sprintf(\n                         '[%d] Error connecting to the API (%s)',\n                         $statusCode,\n-                        $request->getUri()\n+                        (string) $request->getUri()\n                     ),\n                     $statusCode,\n                     $response->getHeaders(),\n-                    $response->getBody()\n+                    (string) $response->getBody()\n                 );\n             }\n \n@@ -3156,7 +3106,7 @@ function ($exception) {\n                         ),\n                         $statusCode,\n                         $response->getHeaders(),\n-                        $response->getBody()\n+                        (string) $response->getBody()\n                     );\n                 }\n             );\n@@ -3363,7 +3313,7 @@ public function testGroupParametersWithHttpInfo($associative_array)\n             } catch (RequestException $e) {\n                 throw new ApiException(\n                     \"[{$e->getCode()}] {$e->getMessage()}\",\n-                    $e->getCode(),\n+                    (int) $e->getCode(),\n                     $e->getResponse() ? $e->getResponse()->getHeaders() : null,\n                     $e->getResponse() ? (string) $e->getResponse()->getBody() : null\n                 );\n@@ -3376,11 +3326,11 @@ public function testGroupParametersWithHttpInfo($associative_array)\n                     sprintf(\n                         '[%d] Error connecting to the API (%s)',\n                         $statusCode,\n-                        $request->getUri()\n+                        (string) $request->getUri()\n                     ),\n                     $statusCode,\n                     $response->getHeaders(),\n-                    $response->getBody()\n+                    (string) $response->getBody()\n                 );\n             }\n \n@@ -3459,7 +3409,7 @@ function ($exception) {\n                         ),\n                         $statusCode,\n                         $response->getHeaders(),\n-                        $response->getBody()\n+                        (string) $response->getBody()\n                     );\n                 }\n             );\n@@ -3671,7 +3621,7 @@ public function testInlineAdditionalPropertiesWithHttpInfo($request_body)\n             } catch (RequestException $e) {\n                 throw new ApiException(\n                     \"[{$e->getCode()}] {$e->getMessage()}\",\n-                    $e->getCode(),\n+                    (int) $e->getCode(),\n                     $e->getResponse() ? $e->getResponse()->getHeaders() : null,\n                     $e->getResponse() ? (string) $e->getResponse()->getBody() : null\n                 );\n@@ -3684,11 +3634,11 @@ public function testInlineAdditionalPropertiesWithHttpInfo($request_body)\n                     sprintf(\n                         '[%d] Error connecting to the API (%s)',\n                         $statusCode,\n-                        $request->getUri()\n+                        (string) $request->getUri()\n                     ),\n                     $statusCode,\n                     $response->getHeaders(),\n-                    $response->getBody()\n+                    (string) $response->getBody()\n                 );\n             }\n \n@@ -3753,7 +3703,7 @@ function ($exception) {\n                         ),\n                         $statusCode,\n                         $response->getHeaders(),\n-                        $response->getBody()\n+                        (string) $response->getBody()\n                     );\n                 }\n             );\n@@ -3890,7 +3840,7 @@ public function testJsonFormDataWithHttpInfo($param, $param2)\n             } catch (RequestException $e) {\n                 throw new ApiException(\n                     \"[{$e->getCode()}] {$e->getMessage()}\",\n-                    $e->getCode(),\n+                    (int) $e->getCode(),\n                     $e->getResponse() ? $e->getResponse()->getHeaders() : null,\n                     $e->getResponse() ? (string) $e->getResponse()->getBody() : null\n                 );\n@@ -3903,11 +3853,11 @@ public function testJsonFormDataWithHttpInfo($param, $param2)\n                     sprintf(\n                         '[%d] Error connecting to the API (%s)',\n                         $statusCode,\n-                        $request->getUri()\n+                        (string) $request->getUri()\n                     ),\n                     $statusCode,\n                     $response->getHeaders(),\n-                    $response->getBody()\n+                    (string) $response->getBody()\n                 );\n             }\n \n@@ -3974,7 +3924,7 @@ function ($exception) {\n                         ),\n                         $statusCode,\n                         $response->getHeaders(),\n-                        $response->getBody()\n+                        (string) $response->getBody()\n                     );\n                 }\n             );\n@@ -4122,7 +4072,7 @@ public function testQueryParameterCollectionFormatWithHttpInfo($pipe, $ioutil, $\n             } catch (RequestException $e) {\n                 throw new ApiException(\n                     \"[{$e->getCode()}] {$e->getMessage()}\",\n-                    $e->getCode(),\n+                    (int) $e->getCode(),\n                     $e->getResponse() ? $e->getResponse()->getHeaders() : null,\n                     $e->getResponse() ? (string) $e->getResponse()->getBody() : null\n                 );\n@@ -4135,11 +4085,11 @@ public function testQueryParameterCollectionFormatWithHttpInfo($pipe, $ioutil, $\n                     sprintf(\n                         '[%d] Error connecting to the API (%s)',\n                         $statusCode,\n-                        $request->getUri()\n+                        (string) $request->getUri()\n                     ),\n                     $statusCode,\n                     $response->getHeaders(),\n-                    $response->getBody()\n+                    (string) $response->getBody()\n                 );\n             }\n \n@@ -4155,8 +4105,6 @@ public function testQueryParameterCollectionFormatWithHttpInfo($pipe, $ioutil, $\n     /**\n      * Operation testQueryParameterCollectionFormatAsync\n      *\n-     * \n-     *\n      * @param  string[] $pipe (required)\n      * @param  string[] $ioutil (required)\n      * @param  string[] $http (required)\n@@ -4179,8 +4127,6 @@ function ($response) {\n     /**\n      * Operation testQueryParameterCollectionFormatAsyncWithHttpInfo\n      *\n-     * \n-     *\n      * @param  string[] $pipe (required)\n      * @param  string[] $ioutil (required)\n      * @param  string[] $http (required)\n@@ -4212,7 +4158,7 @@ function ($exception) {\n                         ),\n                         $statusCode,\n                         $response->getHeaders(),\n-                        $response->getBody()\n+                        (string) $response->getBody()\n                     );\n                 }\n             );"
  },
  {
    "sha": "ac25a60c8c95ba89a4dd5cb4596215238c3fd1fb",
    "filename": "samples/client/petstore/php/OpenAPIClient-php/lib/Api/FakeClassnameTags123Api.php",
    "status": "modified",
    "additions": 11,
    "deletions": 15,
    "changes": 26,
    "blob_url": "https://github.com/OpenAPITools/openapi-generator/blob/dea37fb41afabfe481cc2e86c2b2bcbe9bce0fe2/samples/client/petstore/php/OpenAPIClient-php/lib/Api/FakeClassnameTags123Api.php",
    "raw_url": "https://github.com/OpenAPITools/openapi-generator/raw/dea37fb41afabfe481cc2e86c2b2bcbe9bce0fe2/samples/client/petstore/php/OpenAPIClient-php/lib/Api/FakeClassnameTags123Api.php",
    "contents_url": "https://api.github.com/repos/OpenAPITools/openapi-generator/contents/samples/client/petstore/php/OpenAPIClient-php/lib/Api/FakeClassnameTags123Api.php?ref=dea37fb41afabfe481cc2e86c2b2bcbe9bce0fe2",
    "patch": "@@ -15,7 +15,6 @@\n  * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \\\" \\\\\n  *\n  * The version of the OpenAPI document: 1.0.0\n- * \n  * Generated by: https://openapi-generator.tech\n  * OpenAPI Generator version: 5.1.0-SNAPSHOT\n  */\n@@ -92,7 +91,7 @@ public function __construct(\n      *\n      * @param int $hostIndex Host index (required)\n      */\n-    public function setHostIndex($hostIndex)\n+    public function setHostIndex($hostIndex): void\n     {\n         $this->hostIndex = $hostIndex;\n     }\n@@ -154,7 +153,7 @@ public function testClassnameWithHttpInfo($client)\n             } catch (RequestException $e) {\n                 throw new ApiException(\n                     \"[{$e->getCode()}] {$e->getMessage()}\",\n-                    $e->getCode(),\n+                    (int) $e->getCode(),\n                     $e->getResponse() ? $e->getResponse()->getHeaders() : null,\n                     $e->getResponse() ? (string) $e->getResponse()->getBody() : null\n                 );\n@@ -167,21 +166,20 @@ public function testClassnameWithHttpInfo($client)\n                     sprintf(\n                         '[%d] Error connecting to the API (%s)',\n                         $statusCode,\n-                        $request->getUri()\n+                        (string) $request->getUri()\n                     ),\n                     $statusCode,\n                     $response->getHeaders(),\n-                    $response->getBody()\n+                    (string) $response->getBody()\n                 );\n             }\n \n-            $responseBody = $response->getBody();\n             switch($statusCode) {\n                 case 200:\n                     if ('\\OpenAPI\\Client\\Model\\Client' === '\\SplFileObject') {\n-                        $content = $responseBody; //stream goes to serializer\n+                        $content = $response->getBody(); //stream goes to serializer\n                     } else {\n-                        $content = (string) $responseBody;\n+                        $content = (string) $response->getBody();\n                     }\n \n                     return [\n@@ -192,11 +190,10 @@ public function testClassnameWithHttpInfo($client)\n             }\n \n             $returnType = '\\OpenAPI\\Client\\Model\\Client';\n-            $responseBody = $response->getBody();\n             if ($returnType === '\\SplFileObject') {\n-                $content = $responseBody; //stream goes to serializer\n+                $content = $response->getBody(); //stream goes to serializer\n             } else {\n-                $content = (string) $responseBody;\n+                $content = (string) $response->getBody();\n             }\n \n             return [\n@@ -259,11 +256,10 @@ public function testClassnameAsyncWithHttpInfo($client)\n             ->sendAsync($request, $this->createHttpClientOption())\n             ->then(\n                 function ($response) use ($returnType) {\n-                    $responseBody = $response->getBody();\n                     if ($returnType === '\\SplFileObject') {\n-                        $content = $responseBody; //stream goes to serializer\n+                        $content = $response->getBody(); //stream goes to serializer\n                     } else {\n-                        $content = (string) $responseBody;\n+                        $content = (string) $response->getBody();\n                     }\n \n                     return [\n@@ -283,7 +279,7 @@ function ($exception) {\n                         ),\n                         $statusCode,\n                         $response->getHeaders(),\n-                        $response->getBody()\n+                        (string) $response->getBody()\n                     );\n                 }\n             );"
  },
  {
    "sha": "4e9dd1200bbab88745b253033b6af97031be9212",
    "filename": "samples/client/petstore/php/OpenAPIClient-php/lib/Api/PetApi.php",
    "status": "modified",
    "additions": 67,
    "deletions": 83,
    "changes": 150,
    "blob_url": "https://github.com/OpenAPITools/openapi-generator/blob/dea37fb41afabfe481cc2e86c2b2bcbe9bce0fe2/samples/client/petstore/php/OpenAPIClient-php/lib/Api/PetApi.php",
    "raw_url": "https://github.com/OpenAPITools/openapi-generator/raw/dea37fb41afabfe481cc2e86c2b2bcbe9bce0fe2/samples/client/petstore/php/OpenAPIClient-php/lib/Api/PetApi.php",
    "contents_url": "https://api.github.com/repos/OpenAPITools/openapi-generator/contents/samples/client/petstore/php/OpenAPIClient-php/lib/Api/PetApi.php?ref=dea37fb41afabfe481cc2e86c2b2bcbe9bce0fe2",
    "patch": "@@ -15,7 +15,6 @@\n  * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \\\" \\\\\n  *\n  * The version of the OpenAPI document: 1.0.0\n- * \n  * Generated by: https://openapi-generator.tech\n  * OpenAPI Generator version: 5.1.0-SNAPSHOT\n  */\n@@ -92,7 +91,7 @@ public function __construct(\n      *\n      * @param int $hostIndex Host index (required)\n      */\n-    public function setHostIndex($hostIndex)\n+    public function setHostIndex($hostIndex): void\n     {\n         $this->hostIndex = $hostIndex;\n     }\n@@ -161,7 +160,7 @@ public function addPetWithHttpInfo($pet)\n             } catch (RequestException $e) {\n                 throw new ApiException(\n                     \"[{$e->getCode()}] {$e->getMessage()}\",\n-                    $e->getCode(),\n+                    (int) $e->getCode(),\n                     $e->getResponse() ? $e->getResponse()->getHeaders() : null,\n                     $e->getResponse() ? (string) $e->getResponse()->getBody() : null\n                 );\n@@ -174,11 +173,11 @@ public function addPetWithHttpInfo($pet)\n                     sprintf(\n                         '[%d] Error connecting to the API (%s)',\n                         $statusCode,\n-                        $request->getUri()\n+                        (string) $request->getUri()\n                     ),\n                     $statusCode,\n                     $response->getHeaders(),\n-                    $response->getBody()\n+                    (string) $response->getBody()\n                 );\n             }\n \n@@ -251,7 +250,7 @@ function ($exception) {\n                         ),\n                         $statusCode,\n                         $response->getHeaders(),\n-                        $response->getBody()\n+                        (string) $response->getBody()\n                     );\n                 }\n             );\n@@ -402,7 +401,7 @@ public function deletePetWithHttpInfo($pet_id, $api_key = null)\n             } catch (RequestException $e) {\n                 throw new ApiException(\n                     \"[{$e->getCode()}] {$e->getMessage()}\",\n-                    $e->getCode(),\n+                    (int) $e->getCode(),\n                     $e->getResponse() ? $e->getResponse()->getHeaders() : null,\n                     $e->getResponse() ? (string) $e->getResponse()->getBody() : null\n                 );\n@@ -415,11 +414,11 @@ public function deletePetWithHttpInfo($pet_id, $api_key = null)\n                     sprintf(\n                         '[%d] Error connecting to the API (%s)',\n                         $statusCode,\n-                        $request->getUri()\n+                        (string) $request->getUri()\n                     ),\n                     $statusCode,\n                     $response->getHeaders(),\n-                    $response->getBody()\n+                    (string) $response->getBody()\n                 );\n             }\n \n@@ -486,7 +485,7 @@ function ($exception) {\n                         ),\n                         $statusCode,\n                         $response->getHeaders(),\n-                        $response->getBody()\n+                        (string) $response->getBody()\n                     );\n                 }\n             );\n@@ -633,7 +632,7 @@ public function findPetsByStatusWithHttpInfo($status)\n             } catch (RequestException $e) {\n                 throw new ApiException(\n                     \"[{$e->getCode()}] {$e->getMessage()}\",\n-                    $e->getCode(),\n+                    (int) $e->getCode(),\n                     $e->getResponse() ? $e->getResponse()->getHeaders() : null,\n                     $e->getResponse() ? (string) $e->getResponse()->getBody() : null\n                 );\n@@ -646,21 +645,20 @@ public function findPetsByStatusWithHttpInfo($status)\n                     sprintf(\n                         '[%d] Error connecting to the API (%s)',\n                         $statusCode,\n-                        $request->getUri()\n+                        (string) $request->getUri()\n                     ),\n                     $statusCode,\n                     $response->getHeaders(),\n-                    $response->getBody()\n+                    (string) $response->getBody()\n                 );\n             }\n \n-            $responseBody = $response->getBody();\n             switch($statusCode) {\n                 case 200:\n                     if ('\\OpenAPI\\Client\\Model\\Pet[]' === '\\SplFileObject') {\n-                        $content = $responseBody; //stream goes to serializer\n+                        $content = $response->getBody(); //stream goes to serializer\n                     } else {\n-                        $content = (string) $responseBody;\n+                        $content = (string) $response->getBody();\n                     }\n \n                     return [\n@@ -671,11 +669,10 @@ public function findPetsByStatusWithHttpInfo($status)\n             }\n \n             $returnType = '\\OpenAPI\\Client\\Model\\Pet[]';\n-            $responseBody = $response->getBody();\n             if ($returnType === '\\SplFileObject') {\n-                $content = $responseBody; //stream goes to serializer\n+                $content = $response->getBody(); //stream goes to serializer\n             } else {\n-                $content = (string) $responseBody;\n+                $content = (string) $response->getBody();\n             }\n \n             return [\n@@ -738,11 +735,10 @@ public function findPetsByStatusAsyncWithHttpInfo($status)\n             ->sendAsync($request, $this->createHttpClientOption())\n             ->then(\n                 function ($response) use ($returnType) {\n-                    $responseBody = $response->getBody();\n                     if ($returnType === '\\SplFileObject') {\n-                        $content = $responseBody; //stream goes to serializer\n+                        $content = $response->getBody(); //stream goes to serializer\n                     } else {\n-                        $content = (string) $responseBody;\n+                        $content = (string) $response->getBody();\n                     }\n \n                     return [\n@@ -762,7 +758,7 @@ function ($exception) {\n                         ),\n                         $statusCode,\n                         $response->getHeaders(),\n-                        $response->getBody()\n+                        (string) $response->getBody()\n                     );\n                 }\n             );\n@@ -903,7 +899,7 @@ public function findPetsByTagsWithHttpInfo($tags)\n             } catch (RequestException $e) {\n                 throw new ApiException(\n                     \"[{$e->getCode()}] {$e->getMessage()}\",\n-                    $e->getCode(),\n+                    (int) $e->getCode(),\n                     $e->getResponse() ? $e->getResponse()->getHeaders() : null,\n                     $e->getResponse() ? (string) $e->getResponse()->getBody() : null\n                 );\n@@ -916,21 +912,20 @@ public function findPetsByTagsWithHttpInfo($tags)\n                     sprintf(\n                         '[%d] Error connecting to the API (%s)',\n                         $statusCode,\n-                        $request->getUri()\n+                        (string) $request->getUri()\n                     ),\n                     $statusCode,\n                     $response->getHeaders(),\n-                    $response->getBody()\n+                    (string) $response->getBody()\n                 );\n             }\n \n-            $responseBody = $response->getBody();\n             switch($statusCode) {\n                 case 200:\n                     if ('\\OpenAPI\\Client\\Model\\Pet[]' === '\\SplFileObject') {\n-                        $content = $responseBody; //stream goes to serializer\n+                        $content = $response->getBody(); //stream goes to serializer\n                     } else {\n-                        $content = (string) $responseBody;\n+                        $content = (string) $response->getBody();\n                     }\n \n                     return [\n@@ -941,11 +936,10 @@ public function findPetsByTagsWithHttpInfo($tags)\n             }\n \n             $returnType = '\\OpenAPI\\Client\\Model\\Pet[]';\n-            $responseBody = $response->getBody();\n             if ($returnType === '\\SplFileObject') {\n-                $content = $responseBody; //stream goes to serializer\n+                $content = $response->getBody(); //stream goes to serializer\n             } else {\n-                $content = (string) $responseBody;\n+                $content = (string) $response->getBody();\n             }\n \n             return [\n@@ -1008,11 +1002,10 @@ public function findPetsByTagsAsyncWithHttpInfo($tags)\n             ->sendAsync($request, $this->createHttpClientOption())\n             ->then(\n                 function ($response) use ($returnType) {\n-                    $responseBody = $response->getBody();\n                     if ($returnType === '\\SplFileObject') {\n-                        $content = $responseBody; //stream goes to serializer\n+                        $content = $response->getBody(); //stream goes to serializer\n                     } else {\n-                        $content = (string) $responseBody;\n+                        $content = (string) $response->getBody();\n                     }\n \n                     return [\n@@ -1032,7 +1025,7 @@ function ($exception) {\n                         ),\n                         $statusCode,\n                         $response->getHeaders(),\n-                        $response->getBody()\n+                        (string) $response->getBody()\n                     );\n                 }\n             );\n@@ -1174,7 +1167,7 @@ public function getPetByIdWithHttpInfo($pet_id)\n             } catch (RequestException $e) {\n                 throw new ApiException(\n                     \"[{$e->getCode()}] {$e->getMessage()}\",\n-                    $e->getCode(),\n+                    (int) $e->getCode(),\n                     $e->getResponse() ? $e->getResponse()->getHeaders() : null,\n                     $e->getResponse() ? (string) $e->getResponse()->getBody() : null\n                 );\n@@ -1187,21 +1180,20 @@ public function getPetByIdWithHttpInfo($pet_id)\n                     sprintf(\n                         '[%d] Error connecting to the API (%s)',\n                         $statusCode,\n-                        $request->getUri()\n+                        (string) $request->getUri()\n                     ),\n                     $statusCode,\n                     $response->getHeaders(),\n-                    $response->getBody()\n+                    (string) $response->getBody()\n                 );\n             }\n \n-            $responseBody = $response->getBody();\n             switch($statusCode) {\n                 case 200:\n                     if ('\\OpenAPI\\Client\\Model\\Pet' === '\\SplFileObject') {\n-                        $content = $responseBody; //stream goes to serializer\n+                        $content = $response->getBody(); //stream goes to serializer\n                     } else {\n-                        $content = (string) $responseBody;\n+                        $content = (string) $response->getBody();\n                     }\n \n                     return [\n@@ -1212,11 +1204,10 @@ public function getPetByIdWithHttpInfo($pet_id)\n             }\n \n             $returnType = '\\OpenAPI\\Client\\Model\\Pet';\n-            $responseBody = $response->getBody();\n             if ($returnType === '\\SplFileObject') {\n-                $content = $responseBody; //stream goes to serializer\n+                $content = $response->getBody(); //stream goes to serializer\n             } else {\n-                $content = (string) $responseBody;\n+                $content = (string) $response->getBody();\n             }\n \n             return [\n@@ -1279,11 +1270,10 @@ public function getPetByIdAsyncWithHttpInfo($pet_id)\n             ->sendAsync($request, $this->createHttpClientOption())\n             ->then(\n                 function ($response) use ($returnType) {\n-                    $responseBody = $response->getBody();\n                     if ($returnType === '\\SplFileObject') {\n-                        $content = $responseBody; //stream goes to serializer\n+                        $content = $response->getBody(); //stream goes to serializer\n                     } else {\n-                        $content = (string) $responseBody;\n+                        $content = (string) $response->getBody();\n                     }\n \n                     return [\n@@ -1303,7 +1293,7 @@ function ($exception) {\n                         ),\n                         $statusCode,\n                         $response->getHeaders(),\n-                        $response->getBody()\n+                        (string) $response->getBody()\n                     );\n                 }\n             );\n@@ -1453,7 +1443,7 @@ public function updatePetWithHttpInfo($pet)\n             } catch (RequestException $e) {\n                 throw new ApiException(\n                     \"[{$e->getCode()}] {$e->getMessage()}\",\n-                    $e->getCode(),\n+                    (int) $e->getCode(),\n                     $e->getResponse() ? $e->getResponse()->getHeaders() : null,\n                     $e->getResponse() ? (string) $e->getResponse()->getBody() : null\n                 );\n@@ -1466,11 +1456,11 @@ public function updatePetWithHttpInfo($pet)\n                     sprintf(\n                         '[%d] Error connecting to the API (%s)',\n                         $statusCode,\n-                        $request->getUri()\n+                        (string) $request->getUri()\n                     ),\n                     $statusCode,\n                     $response->getHeaders(),\n-                    $response->getBody()\n+                    (string) $response->getBody()\n                 );\n             }\n \n@@ -1543,7 +1533,7 @@ function ($exception) {\n                         ),\n                         $statusCode,\n                         $response->getHeaders(),\n-                        $response->getBody()\n+                        (string) $response->getBody()\n                     );\n                 }\n             );\n@@ -1696,7 +1686,7 @@ public function updatePetWithFormWithHttpInfo($pet_id, $name = null, $status = n\n             } catch (RequestException $e) {\n                 throw new ApiException(\n                     \"[{$e->getCode()}] {$e->getMessage()}\",\n-                    $e->getCode(),\n+                    (int) $e->getCode(),\n                     $e->getResponse() ? $e->getResponse()->getHeaders() : null,\n                     $e->getResponse() ? (string) $e->getResponse()->getBody() : null\n                 );\n@@ -1709,11 +1699,11 @@ public function updatePetWithFormWithHttpInfo($pet_id, $name = null, $status = n\n                     sprintf(\n                         '[%d] Error connecting to the API (%s)',\n                         $statusCode,\n-                        $request->getUri()\n+                        (string) $request->getUri()\n                     ),\n                     $statusCode,\n                     $response->getHeaders(),\n-                    $response->getBody()\n+                    (string) $response->getBody()\n                 );\n             }\n \n@@ -1782,7 +1772,7 @@ function ($exception) {\n                         ),\n                         $statusCode,\n                         $response->getHeaders(),\n-                        $response->getBody()\n+                        (string) $response->getBody()\n                     );\n                 }\n             );\n@@ -1938,7 +1928,7 @@ public function uploadFileWithHttpInfo($pet_id, $additional_metadata = null, $fi\n             } catch (RequestException $e) {\n                 throw new ApiException(\n                     \"[{$e->getCode()}] {$e->getMessage()}\",\n-                    $e->getCode(),\n+                    (int) $e->getCode(),\n                     $e->getResponse() ? $e->getResponse()->getHeaders() : null,\n                     $e->getResponse() ? (string) $e->getResponse()->getBody() : null\n                 );\n@@ -1951,21 +1941,20 @@ public function uploadFileWithHttpInfo($pet_id, $additional_metadata = null, $fi\n                     sprintf(\n                         '[%d] Error connecting to the API (%s)',\n                         $statusCode,\n-                        $request->getUri()\n+                        (string) $request->getUri()\n                     ),\n                     $statusCode,\n                     $response->getHeaders(),\n-                    $response->getBody()\n+                    (string) $response->getBody()\n                 );\n             }\n \n-            $responseBody = $response->getBody();\n             switch($statusCode) {\n                 case 200:\n                     if ('\\OpenAPI\\Client\\Model\\ApiResponse' === '\\SplFileObject') {\n-                        $content = $responseBody; //stream goes to serializer\n+                        $content = $response->getBody(); //stream goes to serializer\n                     } else {\n-                        $content = (string) $responseBody;\n+                        $content = (string) $response->getBody();\n                     }\n \n                     return [\n@@ -1976,11 +1965,10 @@ public function uploadFileWithHttpInfo($pet_id, $additional_metadata = null, $fi\n             }\n \n             $returnType = '\\OpenAPI\\Client\\Model\\ApiResponse';\n-            $responseBody = $response->getBody();\n             if ($returnType === '\\SplFileObject') {\n-                $content = $responseBody; //stream goes to serializer\n+                $content = $response->getBody(); //stream goes to serializer\n             } else {\n-                $content = (string) $responseBody;\n+                $content = (string) $response->getBody();\n             }\n \n             return [\n@@ -2047,11 +2035,10 @@ public function uploadFileAsyncWithHttpInfo($pet_id, $additional_metadata = null\n             ->sendAsync($request, $this->createHttpClientOption())\n             ->then(\n                 function ($response) use ($returnType) {\n-                    $responseBody = $response->getBody();\n                     if ($returnType === '\\SplFileObject') {\n-                        $content = $responseBody; //stream goes to serializer\n+                        $content = $response->getBody(); //stream goes to serializer\n                     } else {\n-                        $content = (string) $responseBody;\n+                        $content = (string) $response->getBody();\n                     }\n \n                     return [\n@@ -2071,7 +2058,7 @@ function ($exception) {\n                         ),\n                         $statusCode,\n                         $response->getHeaders(),\n-                        $response->getBody()\n+                        (string) $response->getBody()\n                     );\n                 }\n             );\n@@ -2235,7 +2222,7 @@ public function uploadFileWithRequiredFileWithHttpInfo($pet_id, $required_file,\n             } catch (RequestException $e) {\n                 throw new ApiException(\n                     \"[{$e->getCode()}] {$e->getMessage()}\",\n-                    $e->getCode(),\n+                    (int) $e->getCode(),\n                     $e->getResponse() ? $e->getResponse()->getHeaders() : null,\n                     $e->getResponse() ? (string) $e->getResponse()->getBody() : null\n                 );\n@@ -2248,21 +2235,20 @@ public function uploadFileWithRequiredFileWithHttpInfo($pet_id, $required_file,\n                     sprintf(\n                         '[%d] Error connecting to the API (%s)',\n                         $statusCode,\n-                        $request->getUri()\n+                        (string) $request->getUri()\n                     ),\n                     $statusCode,\n                     $response->getHeaders(),\n-                    $response->getBody()\n+                    (string) $response->getBody()\n                 );\n             }\n \n-            $responseBody = $response->getBody();\n             switch($statusCode) {\n                 case 200:\n                     if ('\\OpenAPI\\Client\\Model\\ApiResponse' === '\\SplFileObject') {\n-                        $content = $responseBody; //stream goes to serializer\n+                        $content = $response->getBody(); //stream goes to serializer\n                     } else {\n-                        $content = (string) $responseBody;\n+                        $content = (string) $response->getBody();\n                     }\n \n                     return [\n@@ -2273,11 +2259,10 @@ public function uploadFileWithRequiredFileWithHttpInfo($pet_id, $required_file,\n             }\n \n             $returnType = '\\OpenAPI\\Client\\Model\\ApiResponse';\n-            $responseBody = $response->getBody();\n             if ($returnType === '\\SplFileObject') {\n-                $content = $responseBody; //stream goes to serializer\n+                $content = $response->getBody(); //stream goes to serializer\n             } else {\n-                $content = (string) $responseBody;\n+                $content = (string) $response->getBody();\n             }\n \n             return [\n@@ -2344,11 +2329,10 @@ public function uploadFileWithRequiredFileAsyncWithHttpInfo($pet_id, $required_f\n             ->sendAsync($request, $this->createHttpClientOption())\n             ->then(\n                 function ($response) use ($returnType) {\n-                    $responseBody = $response->getBody();\n                     if ($returnType === '\\SplFileObject') {\n-                        $content = $responseBody; //stream goes to serializer\n+                        $content = $response->getBody(); //stream goes to serializer\n                     } else {\n-                        $content = (string) $responseBody;\n+                        $content = (string) $response->getBody();\n                     }\n \n                     return [\n@@ -2368,7 +2352,7 @@ function ($exception) {\n                         ),\n                         $statusCode,\n                         $response->getHeaders(),\n-                        $response->getBody()\n+                        (string) $response->getBody()\n                     );\n                 }\n             );"
  },
  {
    "sha": "7db5a43e82b29a5503f778214d41dd8e3ff13af6",
    "filename": "samples/client/petstore/php/OpenAPIClient-php/lib/Api/StoreApi.php",
    "status": "modified",
    "additions": 35,
    "deletions": 45,
    "changes": 80,
    "blob_url": "https://github.com/OpenAPITools/openapi-generator/blob/dea37fb41afabfe481cc2e86c2b2bcbe9bce0fe2/samples/client/petstore/php/OpenAPIClient-php/lib/Api/StoreApi.php",
    "raw_url": "https://github.com/OpenAPITools/openapi-generator/raw/dea37fb41afabfe481cc2e86c2b2bcbe9bce0fe2/samples/client/petstore/php/OpenAPIClient-php/lib/Api/StoreApi.php",
    "contents_url": "https://api.github.com/repos/OpenAPITools/openapi-generator/contents/samples/client/petstore/php/OpenAPIClient-php/lib/Api/StoreApi.php?ref=dea37fb41afabfe481cc2e86c2b2bcbe9bce0fe2",
    "patch": "@@ -15,7 +15,6 @@\n  * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \\\" \\\\\n  *\n  * The version of the OpenAPI document: 1.0.0\n- * \n  * Generated by: https://openapi-generator.tech\n  * OpenAPI Generator version: 5.1.0-SNAPSHOT\n  */\n@@ -92,7 +91,7 @@ public function __construct(\n      *\n      * @param int $hostIndex Host index (required)\n      */\n-    public function setHostIndex($hostIndex)\n+    public function setHostIndex($hostIndex): void\n     {\n         $this->hostIndex = $hostIndex;\n     }\n@@ -153,7 +152,7 @@ public function deleteOrderWithHttpInfo($order_id)\n             } catch (RequestException $e) {\n                 throw new ApiException(\n                     \"[{$e->getCode()}] {$e->getMessage()}\",\n-                    $e->getCode(),\n+                    (int) $e->getCode(),\n                     $e->getResponse() ? $e->getResponse()->getHeaders() : null,\n                     $e->getResponse() ? (string) $e->getResponse()->getBody() : null\n                 );\n@@ -166,11 +165,11 @@ public function deleteOrderWithHttpInfo($order_id)\n                     sprintf(\n                         '[%d] Error connecting to the API (%s)',\n                         $statusCode,\n-                        $request->getUri()\n+                        (string) $request->getUri()\n                     ),\n                     $statusCode,\n                     $response->getHeaders(),\n-                    $response->getBody()\n+                    (string) $response->getBody()\n                 );\n             }\n \n@@ -235,7 +234,7 @@ function ($exception) {\n                         ),\n                         $statusCode,\n                         $response->getHeaders(),\n-                        $response->getBody()\n+                        (string) $response->getBody()\n                     );\n                 }\n             );\n@@ -371,7 +370,7 @@ public function getInventoryWithHttpInfo()\n             } catch (RequestException $e) {\n                 throw new ApiException(\n                     \"[{$e->getCode()}] {$e->getMessage()}\",\n-                    $e->getCode(),\n+                    (int) $e->getCode(),\n                     $e->getResponse() ? $e->getResponse()->getHeaders() : null,\n                     $e->getResponse() ? (string) $e->getResponse()->getBody() : null\n                 );\n@@ -384,21 +383,20 @@ public function getInventoryWithHttpInfo()\n                     sprintf(\n                         '[%d] Error connecting to the API (%s)',\n                         $statusCode,\n-                        $request->getUri()\n+                        (string) $request->getUri()\n                     ),\n                     $statusCode,\n                     $response->getHeaders(),\n-                    $response->getBody()\n+                    (string) $response->getBody()\n                 );\n             }\n \n-            $responseBody = $response->getBody();\n             switch($statusCode) {\n                 case 200:\n                     if ('array<string,int>' === '\\SplFileObject') {\n-                        $content = $responseBody; //stream goes to serializer\n+                        $content = $response->getBody(); //stream goes to serializer\n                     } else {\n-                        $content = (string) $responseBody;\n+                        $content = (string) $response->getBody();\n                     }\n \n                     return [\n@@ -409,11 +407,10 @@ public function getInventoryWithHttpInfo()\n             }\n \n             $returnType = 'array<string,int>';\n-            $responseBody = $response->getBody();\n             if ($returnType === '\\SplFileObject') {\n-                $content = $responseBody; //stream goes to serializer\n+                $content = $response->getBody(); //stream goes to serializer\n             } else {\n-                $content = (string) $responseBody;\n+                $content = (string) $response->getBody();\n             }\n \n             return [\n@@ -474,11 +471,10 @@ public function getInventoryAsyncWithHttpInfo()\n             ->sendAsync($request, $this->createHttpClientOption())\n             ->then(\n                 function ($response) use ($returnType) {\n-                    $responseBody = $response->getBody();\n                     if ($returnType === '\\SplFileObject') {\n-                        $content = $responseBody; //stream goes to serializer\n+                        $content = $response->getBody(); //stream goes to serializer\n                     } else {\n-                        $content = (string) $responseBody;\n+                        $content = (string) $response->getBody();\n                     }\n \n                     return [\n@@ -498,7 +494,7 @@ function ($exception) {\n                         ),\n                         $statusCode,\n                         $response->getHeaders(),\n-                        $response->getBody()\n+                        (string) $response->getBody()\n                     );\n                 }\n             );\n@@ -626,7 +622,7 @@ public function getOrderByIdWithHttpInfo($order_id)\n             } catch (RequestException $e) {\n                 throw new ApiException(\n                     \"[{$e->getCode()}] {$e->getMessage()}\",\n-                    $e->getCode(),\n+                    (int) $e->getCode(),\n                     $e->getResponse() ? $e->getResponse()->getHeaders() : null,\n                     $e->getResponse() ? (string) $e->getResponse()->getBody() : null\n                 );\n@@ -639,21 +635,20 @@ public function getOrderByIdWithHttpInfo($order_id)\n                     sprintf(\n                         '[%d] Error connecting to the API (%s)',\n                         $statusCode,\n-                        $request->getUri()\n+                        (string) $request->getUri()\n                     ),\n                     $statusCode,\n                     $response->getHeaders(),\n-                    $response->getBody()\n+                    (string) $response->getBody()\n                 );\n             }\n \n-            $responseBody = $response->getBody();\n             switch($statusCode) {\n                 case 200:\n                     if ('\\OpenAPI\\Client\\Model\\Order' === '\\SplFileObject') {\n-                        $content = $responseBody; //stream goes to serializer\n+                        $content = $response->getBody(); //stream goes to serializer\n                     } else {\n-                        $content = (string) $responseBody;\n+                        $content = (string) $response->getBody();\n                     }\n \n                     return [\n@@ -664,11 +659,10 @@ public function getOrderByIdWithHttpInfo($order_id)\n             }\n \n             $returnType = '\\OpenAPI\\Client\\Model\\Order';\n-            $responseBody = $response->getBody();\n             if ($returnType === '\\SplFileObject') {\n-                $content = $responseBody; //stream goes to serializer\n+                $content = $response->getBody(); //stream goes to serializer\n             } else {\n-                $content = (string) $responseBody;\n+                $content = (string) $response->getBody();\n             }\n \n             return [\n@@ -731,11 +725,10 @@ public function getOrderByIdAsyncWithHttpInfo($order_id)\n             ->sendAsync($request, $this->createHttpClientOption())\n             ->then(\n                 function ($response) use ($returnType) {\n-                    $responseBody = $response->getBody();\n                     if ($returnType === '\\SplFileObject') {\n-                        $content = $responseBody; //stream goes to serializer\n+                        $content = $response->getBody(); //stream goes to serializer\n                     } else {\n-                        $content = (string) $responseBody;\n+                        $content = (string) $response->getBody();\n                     }\n \n                     return [\n@@ -755,7 +748,7 @@ function ($exception) {\n                         ),\n                         $statusCode,\n                         $response->getHeaders(),\n-                        $response->getBody()\n+                        (string) $response->getBody()\n                     );\n                 }\n             );\n@@ -900,7 +893,7 @@ public function placeOrderWithHttpInfo($order)\n             } catch (RequestException $e) {\n                 throw new ApiException(\n                     \"[{$e->getCode()}] {$e->getMessage()}\",\n-                    $e->getCode(),\n+                    (int) $e->getCode(),\n                     $e->getResponse() ? $e->getResponse()->getHeaders() : null,\n                     $e->getResponse() ? (string) $e->getResponse()->getBody() : null\n                 );\n@@ -913,21 +906,20 @@ public function placeOrderWithHttpInfo($order)\n                     sprintf(\n                         '[%d] Error connecting to the API (%s)',\n                         $statusCode,\n-                        $request->getUri()\n+                        (string) $request->getUri()\n                     ),\n                     $statusCode,\n                     $response->getHeaders(),\n-                    $response->getBody()\n+                    (string) $response->getBody()\n                 );\n             }\n \n-            $responseBody = $response->getBody();\n             switch($statusCode) {\n                 case 200:\n                     if ('\\OpenAPI\\Client\\Model\\Order' === '\\SplFileObject') {\n-                        $content = $responseBody; //stream goes to serializer\n+                        $content = $response->getBody(); //stream goes to serializer\n                     } else {\n-                        $content = (string) $responseBody;\n+                        $content = (string) $response->getBody();\n                     }\n \n                     return [\n@@ -938,11 +930,10 @@ public function placeOrderWithHttpInfo($order)\n             }\n \n             $returnType = '\\OpenAPI\\Client\\Model\\Order';\n-            $responseBody = $response->getBody();\n             if ($returnType === '\\SplFileObject') {\n-                $content = $responseBody; //stream goes to serializer\n+                $content = $response->getBody(); //stream goes to serializer\n             } else {\n-                $content = (string) $responseBody;\n+                $content = (string) $response->getBody();\n             }\n \n             return [\n@@ -1005,11 +996,10 @@ public function placeOrderAsyncWithHttpInfo($order)\n             ->sendAsync($request, $this->createHttpClientOption())\n             ->then(\n                 function ($response) use ($returnType) {\n-                    $responseBody = $response->getBody();\n                     if ($returnType === '\\SplFileObject') {\n-                        $content = $responseBody; //stream goes to serializer\n+                        $content = $response->getBody(); //stream goes to serializer\n                     } else {\n-                        $content = (string) $responseBody;\n+                        $content = (string) $response->getBody();\n                     }\n \n                     return [\n@@ -1029,7 +1019,7 @@ function ($exception) {\n                         ),\n                         $statusCode,\n                         $response->getHeaders(),\n-                        $response->getBody()\n+                        (string) $response->getBody()\n                     );\n                 }\n             );"
  },
  {
    "sha": "6dc74148008256afb83e26bfa38847604019cdf3",
    "filename": "samples/client/petstore/php/OpenAPIClient-php/lib/Api/UserApi.php",
    "status": "modified",
    "additions": 45,
    "deletions": 52,
    "changes": 97,
    "blob_url": "https://github.com/OpenAPITools/openapi-generator/blob/dea37fb41afabfe481cc2e86c2b2bcbe9bce0fe2/samples/client/petstore/php/OpenAPIClient-php/lib/Api/UserApi.php",
    "raw_url": "https://github.com/OpenAPITools/openapi-generator/raw/dea37fb41afabfe481cc2e86c2b2bcbe9bce0fe2/samples/client/petstore/php/OpenAPIClient-php/lib/Api/UserApi.php",
    "contents_url": "https://api.github.com/repos/OpenAPITools/openapi-generator/contents/samples/client/petstore/php/OpenAPIClient-php/lib/Api/UserApi.php?ref=dea37fb41afabfe481cc2e86c2b2bcbe9bce0fe2",
    "patch": "@@ -15,7 +15,6 @@\n  * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \\\" \\\\\n  *\n  * The version of the OpenAPI document: 1.0.0\n- * \n  * Generated by: https://openapi-generator.tech\n  * OpenAPI Generator version: 5.1.0-SNAPSHOT\n  */\n@@ -92,7 +91,7 @@ public function __construct(\n      *\n      * @param int $hostIndex Host index (required)\n      */\n-    public function setHostIndex($hostIndex)\n+    public function setHostIndex($hostIndex): void\n     {\n         $this->hostIndex = $hostIndex;\n     }\n@@ -153,7 +152,7 @@ public function createUserWithHttpInfo($user)\n             } catch (RequestException $e) {\n                 throw new ApiException(\n                     \"[{$e->getCode()}] {$e->getMessage()}\",\n-                    $e->getCode(),\n+                    (int) $e->getCode(),\n                     $e->getResponse() ? $e->getResponse()->getHeaders() : null,\n                     $e->getResponse() ? (string) $e->getResponse()->getBody() : null\n                 );\n@@ -166,11 +165,11 @@ public function createUserWithHttpInfo($user)\n                     sprintf(\n                         '[%d] Error connecting to the API (%s)',\n                         $statusCode,\n-                        $request->getUri()\n+                        (string) $request->getUri()\n                     ),\n                     $statusCode,\n                     $response->getHeaders(),\n-                    $response->getBody()\n+                    (string) $response->getBody()\n                 );\n             }\n \n@@ -235,7 +234,7 @@ function ($exception) {\n                         ),\n                         $statusCode,\n                         $response->getHeaders(),\n-                        $response->getBody()\n+                        (string) $response->getBody()\n                     );\n                 }\n             );\n@@ -370,7 +369,7 @@ public function createUsersWithArrayInputWithHttpInfo($user)\n             } catch (RequestException $e) {\n                 throw new ApiException(\n                     \"[{$e->getCode()}] {$e->getMessage()}\",\n-                    $e->getCode(),\n+                    (int) $e->getCode(),\n                     $e->getResponse() ? $e->getResponse()->getHeaders() : null,\n                     $e->getResponse() ? (string) $e->getResponse()->getBody() : null\n                 );\n@@ -383,11 +382,11 @@ public function createUsersWithArrayInputWithHttpInfo($user)\n                     sprintf(\n                         '[%d] Error connecting to the API (%s)',\n                         $statusCode,\n-                        $request->getUri()\n+                        (string) $request->getUri()\n                     ),\n                     $statusCode,\n                     $response->getHeaders(),\n-                    $response->getBody()\n+                    (string) $response->getBody()\n                 );\n             }\n \n@@ -452,7 +451,7 @@ function ($exception) {\n                         ),\n                         $statusCode,\n                         $response->getHeaders(),\n-                        $response->getBody()\n+                        (string) $response->getBody()\n                     );\n                 }\n             );\n@@ -587,7 +586,7 @@ public function createUsersWithListInputWithHttpInfo($user)\n             } catch (RequestException $e) {\n                 throw new ApiException(\n                     \"[{$e->getCode()}] {$e->getMessage()}\",\n-                    $e->getCode(),\n+                    (int) $e->getCode(),\n                     $e->getResponse() ? $e->getResponse()->getHeaders() : null,\n                     $e->getResponse() ? (string) $e->getResponse()->getBody() : null\n                 );\n@@ -600,11 +599,11 @@ public function createUsersWithListInputWithHttpInfo($user)\n                     sprintf(\n                         '[%d] Error connecting to the API (%s)',\n                         $statusCode,\n-                        $request->getUri()\n+                        (string) $request->getUri()\n                     ),\n                     $statusCode,\n                     $response->getHeaders(),\n-                    $response->getBody()\n+                    (string) $response->getBody()\n                 );\n             }\n \n@@ -669,7 +668,7 @@ function ($exception) {\n                         ),\n                         $statusCode,\n                         $response->getHeaders(),\n-                        $response->getBody()\n+                        (string) $response->getBody()\n                     );\n                 }\n             );\n@@ -804,7 +803,7 @@ public function deleteUserWithHttpInfo($username)\n             } catch (RequestException $e) {\n                 throw new ApiException(\n                     \"[{$e->getCode()}] {$e->getMessage()}\",\n-                    $e->getCode(),\n+                    (int) $e->getCode(),\n                     $e->getResponse() ? $e->getResponse()->getHeaders() : null,\n                     $e->getResponse() ? (string) $e->getResponse()->getBody() : null\n                 );\n@@ -817,11 +816,11 @@ public function deleteUserWithHttpInfo($username)\n                     sprintf(\n                         '[%d] Error connecting to the API (%s)',\n                         $statusCode,\n-                        $request->getUri()\n+                        (string) $request->getUri()\n                     ),\n                     $statusCode,\n                     $response->getHeaders(),\n-                    $response->getBody()\n+                    (string) $response->getBody()\n                 );\n             }\n \n@@ -886,7 +885,7 @@ function ($exception) {\n                         ),\n                         $statusCode,\n                         $response->getHeaders(),\n-                        $response->getBody()\n+                        (string) $response->getBody()\n                     );\n                 }\n             );\n@@ -1024,7 +1023,7 @@ public function getUserByNameWithHttpInfo($username)\n             } catch (RequestException $e) {\n                 throw new ApiException(\n                     \"[{$e->getCode()}] {$e->getMessage()}\",\n-                    $e->getCode(),\n+                    (int) $e->getCode(),\n                     $e->getResponse() ? $e->getResponse()->getHeaders() : null,\n                     $e->getResponse() ? (string) $e->getResponse()->getBody() : null\n                 );\n@@ -1037,21 +1036,20 @@ public function getUserByNameWithHttpInfo($username)\n                     sprintf(\n                         '[%d] Error connecting to the API (%s)',\n                         $statusCode,\n-                        $request->getUri()\n+                        (string) $request->getUri()\n                     ),\n                     $statusCode,\n                     $response->getHeaders(),\n-                    $response->getBody()\n+                    (string) $response->getBody()\n                 );\n             }\n \n-            $responseBody = $response->getBody();\n             switch($statusCode) {\n                 case 200:\n                     if ('\\OpenAPI\\Client\\Model\\User' === '\\SplFileObject') {\n-                        $content = $responseBody; //stream goes to serializer\n+                        $content = $response->getBody(); //stream goes to serializer\n                     } else {\n-                        $content = (string) $responseBody;\n+                        $content = (string) $response->getBody();\n                     }\n \n                     return [\n@@ -1062,11 +1060,10 @@ public function getUserByNameWithHttpInfo($username)\n             }\n \n             $returnType = '\\OpenAPI\\Client\\Model\\User';\n-            $responseBody = $response->getBody();\n             if ($returnType === '\\SplFileObject') {\n-                $content = $responseBody; //stream goes to serializer\n+                $content = $response->getBody(); //stream goes to serializer\n             } else {\n-                $content = (string) $responseBody;\n+                $content = (string) $response->getBody();\n             }\n \n             return [\n@@ -1129,11 +1126,10 @@ public function getUserByNameAsyncWithHttpInfo($username)\n             ->sendAsync($request, $this->createHttpClientOption())\n             ->then(\n                 function ($response) use ($returnType) {\n-                    $responseBody = $response->getBody();\n                     if ($returnType === '\\SplFileObject') {\n-                        $content = $responseBody; //stream goes to serializer\n+                        $content = $response->getBody(); //stream goes to serializer\n                     } else {\n-                        $content = (string) $responseBody;\n+                        $content = (string) $response->getBody();\n                     }\n \n                     return [\n@@ -1153,7 +1149,7 @@ function ($exception) {\n                         ),\n                         $statusCode,\n                         $response->getHeaders(),\n-                        $response->getBody()\n+                        (string) $response->getBody()\n                     );\n                 }\n             );\n@@ -1293,7 +1289,7 @@ public function loginUserWithHttpInfo($username, $password)\n             } catch (RequestException $e) {\n                 throw new ApiException(\n                     \"[{$e->getCode()}] {$e->getMessage()}\",\n-                    $e->getCode(),\n+                    (int) $e->getCode(),\n                     $e->getResponse() ? $e->getResponse()->getHeaders() : null,\n                     $e->getResponse() ? (string) $e->getResponse()->getBody() : null\n                 );\n@@ -1306,21 +1302,20 @@ public function loginUserWithHttpInfo($username, $password)\n                     sprintf(\n                         '[%d] Error connecting to the API (%s)',\n                         $statusCode,\n-                        $request->getUri()\n+                        (string) $request->getUri()\n                     ),\n                     $statusCode,\n                     $response->getHeaders(),\n-                    $response->getBody()\n+                    (string) $response->getBody()\n                 );\n             }\n \n-            $responseBody = $response->getBody();\n             switch($statusCode) {\n                 case 200:\n                     if ('string' === '\\SplFileObject') {\n-                        $content = $responseBody; //stream goes to serializer\n+                        $content = $response->getBody(); //stream goes to serializer\n                     } else {\n-                        $content = (string) $responseBody;\n+                        $content = (string) $response->getBody();\n                     }\n \n                     return [\n@@ -1331,11 +1326,10 @@ public function loginUserWithHttpInfo($username, $password)\n             }\n \n             $returnType = 'string';\n-            $responseBody = $response->getBody();\n             if ($returnType === '\\SplFileObject') {\n-                $content = $responseBody; //stream goes to serializer\n+                $content = $response->getBody(); //stream goes to serializer\n             } else {\n-                $content = (string) $responseBody;\n+                $content = (string) $response->getBody();\n             }\n \n             return [\n@@ -1400,11 +1394,10 @@ public function loginUserAsyncWithHttpInfo($username, $password)\n             ->sendAsync($request, $this->createHttpClientOption())\n             ->then(\n                 function ($response) use ($returnType) {\n-                    $responseBody = $response->getBody();\n                     if ($returnType === '\\SplFileObject') {\n-                        $content = $responseBody; //stream goes to serializer\n+                        $content = $response->getBody(); //stream goes to serializer\n                     } else {\n-                        $content = (string) $responseBody;\n+                        $content = (string) $response->getBody();\n                     }\n \n                     return [\n@@ -1424,7 +1417,7 @@ function ($exception) {\n                         ),\n                         $statusCode,\n                         $response->getHeaders(),\n-                        $response->getBody()\n+                        (string) $response->getBody()\n                     );\n                 }\n             );\n@@ -1580,7 +1573,7 @@ public function logoutUserWithHttpInfo()\n             } catch (RequestException $e) {\n                 throw new ApiException(\n                     \"[{$e->getCode()}] {$e->getMessage()}\",\n-                    $e->getCode(),\n+                    (int) $e->getCode(),\n                     $e->getResponse() ? $e->getResponse()->getHeaders() : null,\n                     $e->getResponse() ? (string) $e->getResponse()->getBody() : null\n                 );\n@@ -1593,11 +1586,11 @@ public function logoutUserWithHttpInfo()\n                     sprintf(\n                         '[%d] Error connecting to the API (%s)',\n                         $statusCode,\n-                        $request->getUri()\n+                        (string) $request->getUri()\n                     ),\n                     $statusCode,\n                     $response->getHeaders(),\n-                    $response->getBody()\n+                    (string) $response->getBody()\n                 );\n             }\n \n@@ -1660,7 +1653,7 @@ function ($exception) {\n                         ),\n                         $statusCode,\n                         $response->getHeaders(),\n-                        $response->getBody()\n+                        (string) $response->getBody()\n                     );\n                 }\n             );\n@@ -1784,7 +1777,7 @@ public function updateUserWithHttpInfo($username, $user)\n             } catch (RequestException $e) {\n                 throw new ApiException(\n                     \"[{$e->getCode()}] {$e->getMessage()}\",\n-                    $e->getCode(),\n+                    (int) $e->getCode(),\n                     $e->getResponse() ? $e->getResponse()->getHeaders() : null,\n                     $e->getResponse() ? (string) $e->getResponse()->getBody() : null\n                 );\n@@ -1797,11 +1790,11 @@ public function updateUserWithHttpInfo($username, $user)\n                     sprintf(\n                         '[%d] Error connecting to the API (%s)',\n                         $statusCode,\n-                        $request->getUri()\n+                        (string) $request->getUri()\n                     ),\n                     $statusCode,\n                     $response->getHeaders(),\n-                    $response->getBody()\n+                    (string) $response->getBody()\n                 );\n             }\n \n@@ -1868,7 +1861,7 @@ function ($exception) {\n                         ),\n                         $statusCode,\n                         $response->getHeaders(),\n-                        $response->getBody()\n+                        (string) $response->getBody()\n                     );\n                 }\n             );"
  }
]
