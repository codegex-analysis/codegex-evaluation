[
  {
    "sha": "28ee3d23af72a88ad50a44b227fc25cc2ef8c203",
    "filename": "src/ru/geekbrains/ntr_0307/Calc.java",
    "status": "added",
    "additions": 29,
    "deletions": 0,
    "changes": 29,
    "blob_url": "https://github.com/NabiyevTR/0307/blob/ecfd571ffc011f2043f7dddd6944076b1e91989c/src/ru/geekbrains/ntr_0307/Calc.java",
    "raw_url": "https://github.com/NabiyevTR/0307/raw/ecfd571ffc011f2043f7dddd6944076b1e91989c/src/ru/geekbrains/ntr_0307/Calc.java",
    "contents_url": "https://api.github.com/repos/NabiyevTR/0307/contents/src/ru/geekbrains/ntr_0307/Calc.java?ref=ecfd571ffc011f2043f7dddd6944076b1e91989c",
    "patch": "@@ -0,0 +1,29 @@\n+package ru.geekbrains.ntr_0307;\n+\n+public class Calc {\n+    private int x;\n+    private int y;\n+\n+    public Calc(int x, int y) {\n+        this.x = x;\n+        this.y = y;\n+    }\n+\n+    public int sum() {\n+        return x + y;\n+    }\n+\n+    public int mul() {\n+        return x * y;\n+    }\n+\n+    public int div() throws ArithmeticException {\n+        if (y == 0) throw new ArithmeticException();\n+        return x / y;\n+    }\n+\n+    public int sub() {\n+        return x - y;\n+    }\n+\n+}"
  },
  {
    "sha": "42b752e46faa11d595df6a22d2472c4ed937dfc7",
    "filename": "src/ru/geekbrains/ntr_0307/CalcTest.java",
    "status": "added",
    "additions": 45,
    "deletions": 0,
    "changes": 45,
    "blob_url": "https://github.com/NabiyevTR/0307/blob/ecfd571ffc011f2043f7dddd6944076b1e91989c/src/ru/geekbrains/ntr_0307/CalcTest.java",
    "raw_url": "https://github.com/NabiyevTR/0307/raw/ecfd571ffc011f2043f7dddd6944076b1e91989c/src/ru/geekbrains/ntr_0307/CalcTest.java",
    "contents_url": "https://api.github.com/repos/NabiyevTR/0307/contents/src/ru/geekbrains/ntr_0307/CalcTest.java?ref=ecfd571ffc011f2043f7dddd6944076b1e91989c",
    "patch": "@@ -0,0 +1,45 @@\n+package ru.geekbrains.ntr_0307;\n+\n+import ru.geekbrains.ntr_0307.annotations.AfterSuite;\n+import ru.geekbrains.ntr_0307.annotations.BeforeSuite;\n+import ru.geekbrains.ntr_0307.annotations.Test;\n+\n+public class CalcTest {\n+\n+    private static Calc calc;\n+\n+    @BeforeSuite\n+    public static void init() {\n+        calc = new Calc(3, 2);\n+        System.out.println(\"Start of test\");\n+    }\n+\n+    @Test(priority = 10)\n+    public static void testSum() {\n+        System.out.print(\"Test sum: \");\n+        MyAssert.assertEquals(calc.sum(), 3 + 2);\n+    }\n+\n+    @Test\n+    public static void testMul() {\n+        System.out.print(\"Test mul: \");\n+        MyAssert.assertEquals(calc.mul(), 3 * 2);\n+    }\n+\n+    @Test(priority = 2)\n+    public static void testDiv() throws ArithmeticException {\n+        System.out.print(\"Test div: \");\n+        MyAssert.assertEquals(calc.div(), 3 / 2);\n+    }\n+\n+    @Test(priority = 1)\n+    public static void testSub() {\n+        System.out.print(\"Test sub: \");\n+        MyAssert.assertEquals(calc.sub(), 3-2);\n+    }\n+\n+    @AfterSuite\n+    public static void testEnd() {\n+        System.out.println(\"End of test\");\n+    }\n+}"
  },
  {
    "sha": "af253df438f9dd30bdd6ecfb45e0779af771aff9",
    "filename": "src/ru/geekbrains/ntr_0307/Main.java",
    "status": "removed",
    "additions": 0,
    "deletions": 8,
    "changes": 8,
    "blob_url": "https://github.com/NabiyevTR/0307/blob/d2e22892b5595a28e9f0daccbf792515c64d460d/src/ru/geekbrains/ntr_0307/Main.java",
    "raw_url": "https://github.com/NabiyevTR/0307/raw/d2e22892b5595a28e9f0daccbf792515c64d460d/src/ru/geekbrains/ntr_0307/Main.java",
    "contents_url": "https://api.github.com/repos/NabiyevTR/0307/contents/src/ru/geekbrains/ntr_0307/Main.java?ref=d2e22892b5595a28e9f0daccbf792515c64d460d",
    "patch": "@@ -1,8 +0,0 @@\n-package ru.geekbrains.ntr_0307;\n-\n-public class Main {\n-\n-    public static void main(String[] args) {\n-\t// write your code here\n-    }\n-}"
  },
  {
    "sha": "cd303e27714a740711e4b86c226f0f6a08da6710",
    "filename": "src/ru/geekbrains/ntr_0307/MyAssert.java",
    "status": "added",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/NabiyevTR/0307/blob/ecfd571ffc011f2043f7dddd6944076b1e91989c/src/ru/geekbrains/ntr_0307/MyAssert.java",
    "raw_url": "https://github.com/NabiyevTR/0307/raw/ecfd571ffc011f2043f7dddd6944076b1e91989c/src/ru/geekbrains/ntr_0307/MyAssert.java",
    "contents_url": "https://api.github.com/repos/NabiyevTR/0307/contents/src/ru/geekbrains/ntr_0307/MyAssert.java?ref=ecfd571ffc011f2043f7dddd6944076b1e91989c",
    "patch": "@@ -0,0 +1,9 @@\n+package ru.geekbrains.ntr_0307;\n+\n+public class MyAssert {\n+\n+    public static void assertEquals(int a , int b ) {\n+        System.out.println(a==b);\n+    }\n+\n+}"
  },
  {
    "sha": "784f8e793d38fa10f58c64c9395b21670a28fd8d",
    "filename": "src/ru/geekbrains/ntr_0307/SimpleTests.java",
    "status": "added",
    "additions": 111,
    "deletions": 0,
    "changes": 111,
    "blob_url": "https://github.com/NabiyevTR/0307/blob/ecfd571ffc011f2043f7dddd6944076b1e91989c/src/ru/geekbrains/ntr_0307/SimpleTests.java",
    "raw_url": "https://github.com/NabiyevTR/0307/raw/ecfd571ffc011f2043f7dddd6944076b1e91989c/src/ru/geekbrains/ntr_0307/SimpleTests.java",
    "contents_url": "https://api.github.com/repos/NabiyevTR/0307/contents/src/ru/geekbrains/ntr_0307/SimpleTests.java?ref=ecfd571ffc011f2043f7dddd6944076b1e91989c",
    "patch": "@@ -0,0 +1,111 @@\n+package ru.geekbrains.ntr_0307;\n+\n+import ru.geekbrains.ntr_0307.annotations.AfterSuite;\n+import ru.geekbrains.ntr_0307.annotations.BeforeSuite;\n+import ru.geekbrains.ntr_0307.annotations.Test;\n+\n+import java.lang.annotation.Annotation;\n+import java.lang.reflect.InvocationTargetException;\n+import java.lang.reflect.Method;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+public class SimpleTests {\n+\n+    private static Class testedClass;\n+    private static List<Method> methods;\n+    private static List<Method> beforeMethods;\n+    private static List<Method> afterMethods;\n+    private static List<Method> testMethods;\n+\n+    private static Class test = Test.class;\n+    private static Class before = BeforeSuite.class;\n+    private static Class after = AfterSuite.class;\n+\n+    private static final int MIN_PRIORITY = 0;\n+    private static final int MAX_PRIORITY = 10;\n+\n+    public static void start(Class testedClass) {\n+        try {\n+            init(testedClass);\n+        } catch (RuntimeException e) {\n+            e.printStackTrace();\n+            return;\n+        }\n+\n+        try {\n+            testing();\n+        } catch (InvocationTargetException | IllegalAccessException e) {\n+            e.printStackTrace();\n+\n+        }\n+    }\n+\n+    private static void init(Class testedClass) throws RuntimeException {\n+        SimpleTests.testedClass = testedClass;\n+        methods = Arrays.asList(testedClass.getMethods());\n+        beforeMethods = getMethodsAnnotatedWith(testedClass, before);\n+        if (beforeMethods.size() > 1) {\n+            throw new RuntimeException(before.getName() + \" annotation сan be used no more than once.\");\n+        }\n+        afterMethods = getMethodsAnnotatedWith(testedClass, after);\n+        if (beforeMethods.size() > 1) {\n+            throw new RuntimeException(after.getName() + \" annotation сan be used no more than once.\");\n+        }\n+\n+        testMethods = getMethodsAnnotatedWith(testedClass, test);\n+\n+        testMethods.sort((o1, o2) -> getPriorityForTestAnnotation(o2) - getPriorityForTestAnnotation(o1));\n+    }\n+\n+    private static void testing() throws InvocationTargetException, IllegalAccessException {\n+\n+        if (!beforeMethods.isEmpty()) {\n+            beforeMethods.get(0).invoke(null);\n+        }\n+\n+        for (Method method : testMethods) {\n+            method.invoke(null);\n+        }\n+\n+        if (!afterMethods.isEmpty()) {\n+            afterMethods.get(0).invoke(null);\n+        }\n+    }\n+\n+    private static int getPriorityForTestAnnotation(Method method) throws IllegalArgumentException {\n+        Annotation[] annotations = method.getAnnotations();\n+        for (Annotation annotation : annotations) {\n+            if (annotation instanceof Test) {\n+                int priority = ((Test) annotation).priority();\n+                if (priority < MIN_PRIORITY || priority > MAX_PRIORITY) {\n+                    throw new IllegalArgumentException(\n+                            String.format(\"Test priority for %s = %d. Priority must be in range [%d..%d].\",\n+                                    method.getName(), priority, MIN_PRIORITY, MAX_PRIORITY)\n+                    );\n+                }\n+                return (priority);\n+            }\n+        }\n+        return 0;\n+    }\n+\n+    public static List<Method> getMethodsAnnotatedWith(final Class<?> type, final Class<? extends Annotation> annotation) {\n+        final List<Method> methods = new ArrayList<Method>();\n+        Class<?> klass = type;\n+        while (klass != Object.class) {\n+            for (final Method method : klass.getDeclaredMethods()) {\n+                if (method.isAnnotationPresent(annotation)) {\n+                    methods.add(method);\n+                }\n+            }\n+            klass = klass.getSuperclass();\n+        }\n+        return methods;\n+    }\n+\n+    public static void main(String[] args) {\n+        start(CalcTest.class);\n+    }\n+}"
  },
  {
    "sha": "1f87a5c318dae585d8095e853cb01548b6fdc0c0",
    "filename": "src/ru/geekbrains/ntr_0307/annotations/AfterSuite.java",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/NabiyevTR/0307/blob/ecfd571ffc011f2043f7dddd6944076b1e91989c/src/ru/geekbrains/ntr_0307/annotations/AfterSuite.java",
    "raw_url": "https://github.com/NabiyevTR/0307/raw/ecfd571ffc011f2043f7dddd6944076b1e91989c/src/ru/geekbrains/ntr_0307/annotations/AfterSuite.java",
    "contents_url": "https://api.github.com/repos/NabiyevTR/0307/contents/src/ru/geekbrains/ntr_0307/annotations/AfterSuite.java?ref=ecfd571ffc011f2043f7dddd6944076b1e91989c",
    "patch": "@@ -0,0 +1,11 @@\n+package ru.geekbrains.ntr_0307.annotations;\n+\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+@Retention(RetentionPolicy.RUNTIME)\n+@Target({ElementType.METHOD})\n+public @interface AfterSuite {\n+}"
  },
  {
    "sha": "3b9172aeb6784afe83c4037c564bedf77d933c0c",
    "filename": "src/ru/geekbrains/ntr_0307/annotations/BeforeSuite.java",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/NabiyevTR/0307/blob/ecfd571ffc011f2043f7dddd6944076b1e91989c/src/ru/geekbrains/ntr_0307/annotations/BeforeSuite.java",
    "raw_url": "https://github.com/NabiyevTR/0307/raw/ecfd571ffc011f2043f7dddd6944076b1e91989c/src/ru/geekbrains/ntr_0307/annotations/BeforeSuite.java",
    "contents_url": "https://api.github.com/repos/NabiyevTR/0307/contents/src/ru/geekbrains/ntr_0307/annotations/BeforeSuite.java?ref=ecfd571ffc011f2043f7dddd6944076b1e91989c",
    "patch": "@@ -0,0 +1,11 @@\n+package ru.geekbrains.ntr_0307.annotations;\n+\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+@Retention(RetentionPolicy.RUNTIME)\n+@Target({ElementType.METHOD})\n+public @interface BeforeSuite {\n+}"
  },
  {
    "sha": "0ce3ceadf0b06f2a19d18e0380194172dbeeee1a",
    "filename": "src/ru/geekbrains/ntr_0307/annotations/Test.java",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/NabiyevTR/0307/blob/ecfd571ffc011f2043f7dddd6944076b1e91989c/src/ru/geekbrains/ntr_0307/annotations/Test.java",
    "raw_url": "https://github.com/NabiyevTR/0307/raw/ecfd571ffc011f2043f7dddd6944076b1e91989c/src/ru/geekbrains/ntr_0307/annotations/Test.java",
    "contents_url": "https://api.github.com/repos/NabiyevTR/0307/contents/src/ru/geekbrains/ntr_0307/annotations/Test.java?ref=ecfd571ffc011f2043f7dddd6944076b1e91989c",
    "patch": "@@ -0,0 +1,13 @@\n+package ru.geekbrains.ntr_0307.annotations;\n+\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+@Retention(RetentionPolicy.RUNTIME)\n+@Target({ElementType.METHOD})\n+public @interface Test {\n+    int priority() default 5;\n+\n+}"
  }
]
