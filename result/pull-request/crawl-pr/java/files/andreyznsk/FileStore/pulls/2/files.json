[
  {
    "sha": "7a59d63b8b9f2be331d10d4d98c8f1e1e4c8d6fe",
    "filename": "Client/logging.properties",
    "status": "added",
    "additions": 63,
    "deletions": 0,
    "changes": 63,
    "blob_url": "https://github.com/andreyznsk/FileStore/blob/e147d4caff3aa06269240bae09e3d914022ef63c/Client/logging.properties",
    "raw_url": "https://github.com/andreyznsk/FileStore/raw/e147d4caff3aa06269240bae09e3d914022ef63c/Client/logging.properties",
    "contents_url": "https://api.github.com/repos/andreyznsk/FileStore/contents/Client/logging.properties?ref=e147d4caff3aa06269240bae09e3d914022ef63c",
    "patch": "@@ -0,0 +1,63 @@\n+############################################################\n+#  \tDefault Logging Configuration File\n+#\n+# You can use a different file by specifying a filename\n+# with the java.util.logging.config.file system property.  \n+# For example java -Djava.util.logging.config.file=myfile\n+############################################################\n+\n+############################################################\n+#  \tGlobal properties\n+############################################################\n+\n+# \"handlers\" specifies a comma separated list of log Handler \n+# classes.  These handlers will be installed during VM startup.\n+# Note that these classes must be on the system classpath.\n+# By default we only configure a ConsoleHandler, which will only\n+# show messages at the INFO and above levels.\n+#handlers= java.util.logging.ConsoleHandler\n+\n+# To also add the FileHandler, use the following line instead.\n+handlers= java.util.logging.FileHandler, java.util.logging.ConsoleHandler\n+\n+# Default global logging level.\n+# This specifies which kinds of events are logged across\n+# all loggers.  For any given facility this global level\n+# can be overriden by a facility specific level\n+# Note that the ConsoleHandler also has a separate level\n+# setting to limit messages printed to the console.\n+.level= FINE\n+\n+############################################################\n+# Handler specific properties.\n+# Describes specific configuration info for Handlers.\n+############################################################\n+\n+# default file output is in user's home directory.\n+java.util.logging.FileHandler.pattern = java%u.log\n+java.util.logging.FileHandler.limit = 50000\n+java.util.logging.FileHandler.count = 1\n+java.util.logging.FileHandler.formatter = java.util.logging.SimpleFormatter\n+java.util.logging.FileHandler.append = true\n+\n+# Limit the message that are printed on the console to INFO and above.\n+#java.util.logging.ConsoleHandler.level = INFO\n+java.util.logging.ConsoleHandler.level = FINE\n+java.util.logging.ConsoleHandler.formatter = java.util.logging.SimpleFormatter\n+#java.util.logging.ConsoleHandler.formatter = java.util.logging.XMLFormatter\n+\n+# Example to customize the SimpleFormatter output format \n+# to print one-line log message like this:\n+#     <level>: <log message> [<date/time>]\n+#\n+# java.util.logging.SimpleFormatter.format=%4$s: %5$s [%1$tc]%n\n+\n+############################################################\n+# Facility specific properties.\n+# Provides extra control for each logger.\n+############################################################\n+\n+# For example, set the com.xyz.foo logger to only log SEVERE\n+# messages:\n+com.xyz.foo.level = SEVERE\n+MyServer.java.level = SEVERE"
  },
  {
    "sha": "89627d7da6a27c88b33fdf257428e50a19b1344d",
    "filename": "Client/pom.xml",
    "status": "modified",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/andreyznsk/FileStore/blob/e147d4caff3aa06269240bae09e3d914022ef63c/Client/pom.xml",
    "raw_url": "https://github.com/andreyznsk/FileStore/raw/e147d4caff3aa06269240bae09e3d914022ef63c/Client/pom.xml",
    "contents_url": "https://api.github.com/repos/andreyznsk/FileStore/contents/Client/pom.xml?ref=e147d4caff3aa06269240bae09e3d914022ef63c",
    "patch": "@@ -15,5 +15,13 @@\n         <maven.compiler.source>8</maven.compiler.source>\n         <maven.compiler.target>8</maven.compiler.target>\n     </properties>\n+    <dependencies>\n \n+        <dependency>\n+            <groupId>Geekbrains</groupId>\n+            <artifactId>ClientServer</artifactId>\n+            <version>1.0-SNAPSHOT</version>\n+        </dependency>\n+\n+    </dependencies>\n </project>\n\\ No newline at end of file"
  },
  {
    "sha": "e258fd62e6996c50991c249f95ca1e0d9906e4bf",
    "filename": "Client/src/main/java/Client.java",
    "status": "removed",
    "additions": 0,
    "deletions": 26,
    "changes": 26,
    "blob_url": "https://github.com/andreyznsk/FileStore/blob/654776ac78823468c85f2e20bd87847e91df69f7/Client/src/main/java/Client.java",
    "raw_url": "https://github.com/andreyznsk/FileStore/raw/654776ac78823468c85f2e20bd87847e91df69f7/Client/src/main/java/Client.java",
    "contents_url": "https://api.github.com/repos/andreyznsk/FileStore/contents/Client/src/main/java/Client.java?ref=654776ac78823468c85f2e20bd87847e91df69f7",
    "patch": "@@ -1,26 +0,0 @@\n-import java.io.IOException;\n-import java.net.InetSocketAddress;\n-import java.net.SocketAddress;\n-import java.nio.ByteBuffer;\n-import java.nio.channels.DatagramChannel;\n-\n-public class Client {\n-    public static void main(String[] args) throws IOException {\n-        DatagramChannel client = null;\n-        client = DatagramChannel.open();\n-\n-        client.bind(null);\n-\n-        String msg = \"Hello World!\";\n-        ByteBuffer buffer = ByteBuffer.wrap(msg.getBytes());\n-        InetSocketAddress serverAddress = new InetSocketAddress(\"localhost\",\n-                8989);\n-\n-        client.send(buffer, serverAddress);\n-        buffer.clear();\n-        client.receive(buffer);\n-        buffer.flip();\n-\n-        client.close();\n-    }\n-}\n\\ No newline at end of file"
  },
  {
    "sha": "e5146de890893eaadfad0f7495b55e62b324027e",
    "filename": "Client/src/main/java/client/AuthController.java",
    "status": "added",
    "additions": 87,
    "deletions": 0,
    "changes": 87,
    "blob_url": "https://github.com/andreyznsk/FileStore/blob/e147d4caff3aa06269240bae09e3d914022ef63c/Client/src/main/java/client/AuthController.java",
    "raw_url": "https://github.com/andreyznsk/FileStore/raw/e147d4caff3aa06269240bae09e3d914022ef63c/Client/src/main/java/client/AuthController.java",
    "contents_url": "https://api.github.com/repos/andreyznsk/FileStore/contents/Client/src/main/java/client/AuthController.java?ref=e147d4caff3aa06269240bae09e3d914022ef63c",
    "patch": "@@ -0,0 +1,87 @@\n+package client;\n+\n+import client.models.Network;\n+import javafx.event.ActionEvent;\n+import javafx.fxml.FXML;\n+import javafx.fxml.FXMLLoader;\n+import javafx.scene.Parent;\n+import javafx.scene.Scene;\n+import javafx.scene.control.PasswordField;\n+import javafx.scene.control.TextField;\n+import javafx.stage.Modality;\n+import javafx.stage.Stage;\n+\n+\n+import java.io.IOException;\n+\n+public class AuthController {\n+\n+    private static final String AUTH_CMD = \"/auth\"; // \"/auth login password\"\n+    private Stage regStage;\n+    private RegController regController;\n+\n+    @FXML\n+    public TextField loginField;\n+\n+    @FXML\n+    public PasswordField passwordField;\n+\n+\n+    private Network network;\n+\n+    @FXML\n+    public void initialize() {\n+        createRegWindow();\n+    }\n+\n+    @FXML\n+    public void executeAuth(ActionEvent actionEvent) {\n+        String login = loginField.getText();\n+        String password = passwordField.getText();\n+        if (login == null || login.isEmpty() || password == null || password.isEmpty()) {\n+            ClientChat.showNetworkError(\"Логин и пароль обязательны!\", \"Валидация\", null);\n+            return;\n+        }\n+\n+\n+        try {\n+            network.sendAuthMessage(login, password);\n+        } catch (IOException e) {\n+            ClientChat.showNetworkError(e.getMessage(), \"Auth error!\", null);\n+            e.printStackTrace();\n+        }\n+    }\n+\n+    public void setNetwork(Network network) {\n+        this.network = network;\n+        regController.setNetwork(network);\n+    }\n+\n+    private void createRegWindow() {\n+        try {\n+            FXMLLoader fxmlLoader = new FXMLLoader(getClass().getResource(\"/regDialog.fxml\"));\n+            Parent root = fxmlLoader.load();\n+            regStage = new Stage();\n+            regStage.setTitle(\"Регистрация\");\n+            regStage.setScene(new Scene(root, 350, 300));\n+            regStage.initModality(Modality.APPLICATION_MODAL);\n+\n+            regController = fxmlLoader.getController();\n+            regController.setController(this);\n+\n+        } catch (IOException e) {\n+\n+            e.printStackTrace();\n+        }\n+\n+    }\n+\n+    @FXML\n+    public void executeOpenRegDialog(ActionEvent actionEvent) throws IOException {\n+        System.out.println(\"Нажали на кнопку\");\n+        regStage.show();\n+      //ClientChat.openRegDialog();\n+    }\n+\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "61c52d89239b079d6941f781e0eb28f77f9cb850",
    "filename": "Client/src/main/java/client/ClientChat.java",
    "status": "added",
    "additions": 155,
    "deletions": 0,
    "changes": 155,
    "blob_url": "https://github.com/andreyznsk/FileStore/blob/e147d4caff3aa06269240bae09e3d914022ef63c/Client/src/main/java/client/ClientChat.java",
    "raw_url": "https://github.com/andreyznsk/FileStore/raw/e147d4caff3aa06269240bae09e3d914022ef63c/Client/src/main/java/client/ClientChat.java",
    "contents_url": "https://api.github.com/repos/andreyznsk/FileStore/contents/Client/src/main/java/client/ClientChat.java?ref=e147d4caff3aa06269240bae09e3d914022ef63c",
    "patch": "@@ -0,0 +1,155 @@\n+package client;\n+\n+import client.models.ChatHistoryBuilder;\n+import client.models.ClientChatState;\n+import client.models.Network;\n+import javafx.application.Application;\n+import javafx.collections.FXCollections;\n+import javafx.fxml.FXMLLoader;\n+import javafx.scene.Parent;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Alert;\n+import javafx.scene.layout.AnchorPane;\n+import javafx.stage.Modality;\n+import javafx.stage.Stage;\n+\n+import java.io.BufferedWriter;\n+import java.io.FileNotFoundException;\n+import java.io.FileWriter;\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+\n+public class ClientChat extends Application {\n+\n+    public static final List<String> USERS_TEST_DATA = new ArrayList<>();\n+    private Stage regStage;\n+    private RegController regController;\n+\n+    private ClientChatState state = ClientChatState.AUTHENTICATION;\n+    private Stage primaryStage;\n+    private Stage authDialogStage;\n+\n+    private ChatHistoryBuilder historyBuilder;\n+    private Network network;\n+    private ViewController viewController;\n+\n+   /* public static void openRegDialog() throws IOException{\n+        FXMLLoader loader = new FXMLLoader();\n+        loader.setLocation(ClientChat.class.getResource(\"/regDialog.fxml\"));\n+        AnchorPane parent = loader.load();\n+\n+        regDialogStage = new Stage();\n+        regDialogStage.initModality(Modality.WINDOW_MODAL);\n+        regDialogStage.initOwner(primaryStage);\n+\n+        AuthController authController = loader.getController();\n+        authController.setNetwork(network);\n+\n+        regDialogStage.setScene(new Scene(parent));\n+        regDialogStage.show();\n+    }*/\n+\n+    public void updateUsers(List<String> users) {\n+        viewController.usersList.setItems(FXCollections.observableList(users));\n+    }\n+\n+    @Override\n+    public void start(Stage primaryStage) throws Exception {\n+        this.primaryStage = primaryStage;\n+\n+        FXMLLoader loader = new FXMLLoader();\n+        loader.setLocation(ClientChat.class.getResource(\"/view_lesson7.fxml\"));\n+\n+        Parent root = loader.load();\n+        viewController = loader.getController();\n+\n+        primaryStage.setTitle(\"Messenger\");\n+        primaryStage.setScene(new Scene(root, 600, 400));\n+        viewController.getTextField().requestFocus();\n+\n+        network = new Network(this);\n+        if (!network.connect()) {\n+            showNetworkError(\"\", \"Failed to connect to server\", primaryStage);\n+        }\n+\n+        viewController.setNetwork(network);\n+        viewController.setStage(primaryStage);\n+\n+        network.waitMessages(viewController);\n+\n+        primaryStage.setOnCloseRequest(event -> {\n+            try {\n+                network.sendMessage(\"/end\");\n+            } catch (IOException e) {\n+                e.printStackTrace();\n+            }\n+            network.close();\n+        });\n+        //regController.setNetwork(network);\n+        openAuthDialog();\n+    }\n+\n+    private void openAuthDialog() throws IOException {\n+        FXMLLoader loader = new FXMLLoader();\n+        loader.setLocation(ClientChat.class.getResource(\"/authDialog.fxml\"));\n+        AnchorPane parent = loader.load();\n+\n+        authDialogStage = new Stage();\n+        authDialogStage.initModality(Modality.WINDOW_MODAL);\n+        authDialogStage.initOwner(primaryStage);\n+\n+        AuthController authController = loader.getController();\n+        authController.setNetwork(network);\n+\n+        authDialogStage.setScene(new Scene(parent));\n+        authDialogStage.show();\n+    }\n+    public static void showNetworkConfirmation(String errorDetails, String errorTitle, Stage dialogStage) {\n+        Alert alert = new Alert(Alert.AlertType.CONFIRMATION);\n+\n+        if (dialogStage != null) {\n+            alert.initOwner(dialogStage);\n+        }\n+        alert.setTitle(\"Successful\");\n+        alert.setHeaderText(errorTitle);\n+        alert.setContentText(errorDetails);\n+        alert.showAndWait();\n+    }\n+\n+    public static void showNetworkError(String errorDetails, String errorTitle, Stage dialogStage) {\n+        Alert alert = new Alert(Alert.AlertType.ERROR);\n+\n+        if (dialogStage != null) {\n+            alert.initOwner(dialogStage);\n+        }\n+        alert.setTitle(\"Network Error\");\n+        alert.setHeaderText(errorTitle);\n+        alert.setContentText(errorDetails);\n+        alert.showAndWait();\n+    }\n+\n+    public static void main(String[] args) {\n+        launch(args);\n+    }\n+\n+    public ClientChatState getState() {\n+        return state;\n+    }\n+\n+    public void setState(ClientChatState state) {\n+        this.state = state;\n+    }\n+\n+    public void activeChatDialog(String nickname) {\n+        //historyBuilder = new ChatHistoryBuilder(nickname);\n+        //viewController.setHistoryBuilder(historyBuilder);\n+       // network.setHistoryBuilder(historyBuilder);\n+        primaryStage.setTitle(nickname);\n+        state = ClientChatState.CHAT;\n+        authDialogStage.close();\n+        primaryStage.show();\n+        viewController.getTextField().requestFocus();\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "3c073845963adb2fd787261c765f52ee58d84921",
    "filename": "Client/src/main/java/client/RegController.java",
    "status": "added",
    "additions": 76,
    "deletions": 0,
    "changes": 76,
    "blob_url": "https://github.com/andreyznsk/FileStore/blob/e147d4caff3aa06269240bae09e3d914022ef63c/Client/src/main/java/client/RegController.java",
    "raw_url": "https://github.com/andreyznsk/FileStore/raw/e147d4caff3aa06269240bae09e3d914022ef63c/Client/src/main/java/client/RegController.java",
    "contents_url": "https://api.github.com/repos/andreyznsk/FileStore/contents/Client/src/main/java/client/RegController.java?ref=e147d4caff3aa06269240bae09e3d914022ef63c",
    "patch": "@@ -0,0 +1,76 @@\n+package client;\n+\n+import client.models.Network;\n+import javafx.event.ActionEvent;\n+import javafx.fxml.FXML;\n+import javafx.scene.control.PasswordField;\n+import javafx.scene.control.TextField;\n+\n+\n+import java.io.IOException;\n+\n+public class RegController {\n+\n+  //  private static final String AUTH_CMD = \"/auth\"; // \"/auth login password\"\n+\n+    @FXML\n+    public TextField loginField;\n+\n+    @FXML\n+    public PasswordField passwordField;\n+\n+    @FXML\n+    public TextField nicknameField;\n+\n+    private AuthController controller;\n+\n+    private Network network;\n+\n+    @FXML\n+    public void executeRegNew(ActionEvent actionEvent) {\n+        String login = loginField.getText();\n+        String password = passwordField.getText();\n+        String nickname = nicknameField.getText();\n+        if (login == null || login.isEmpty() || password == null || password.isEmpty() || nickname == null || nickname.isEmpty()) {\n+            ClientChat.showNetworkError(\"Логин и пароль обязательны!\", \"Валидация\", null);\n+            return;\n+        }\n+        System.out.println(\"Create new user\");\n+\n+\n+        try {\n+            network.sendNewUserCommand(login,password,nickname);\n+        } catch (IOException e) {\n+            ClientChat.showNetworkError(e.getMessage(), \"Auth error!\", null);\n+            e.printStackTrace();\n+        }\n+    }\n+    @FXML\n+    public void executeRegUpdate(ActionEvent actionEvent) {\n+        String login = loginField.getText();\n+        String password = passwordField.getText();\n+        String nickname = nicknameField.getText();\n+        if (login == null || login.isEmpty() || password == null || password.isEmpty() || nickname == null || nickname.isEmpty()) {\n+            ClientChat.showNetworkError(\"Логин и пароль обязательны!\", \"Валидация\", null);\n+            return;\n+        }\n+        System.out.println(\"Update User\");\n+\n+        try {\n+            network.sendUpdateUserCommand(login,password,nickname);\n+        } catch (IOException e) {\n+            ClientChat.showNetworkError(e.getMessage(), \"Auth error!\", null);\n+            e.printStackTrace();\n+        }\n+\n+    }\n+\n+    public void setController(AuthController controller) {\n+        //this.network = network;\n+        this.controller = controller;\n+    }\n+\n+    public void setNetwork(Network network) {\n+        this.network = network;\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "897bedb76c1e85af484115d3d0e581186a962b03",
    "filename": "Client/src/main/java/client/ViewController.java",
    "status": "added",
    "additions": 107,
    "deletions": 0,
    "changes": 107,
    "blob_url": "https://github.com/andreyznsk/FileStore/blob/e147d4caff3aa06269240bae09e3d914022ef63c/Client/src/main/java/client/ViewController.java",
    "raw_url": "https://github.com/andreyznsk/FileStore/raw/e147d4caff3aa06269240bae09e3d914022ef63c/Client/src/main/java/client/ViewController.java",
    "contents_url": "https://api.github.com/repos/andreyznsk/FileStore/contents/Client/src/main/java/client/ViewController.java?ref=e147d4caff3aa06269240bae09e3d914022ef63c",
    "patch": "@@ -0,0 +1,107 @@\n+package client;\n+\n+import client.models.ChatHistoryBuilder;\n+import client.models.Network;\n+import javafx.collections.FXCollections;\n+import javafx.fxml.FXML;\n+import javafx.scene.control.*;\n+import javafx.scene.input.MouseEvent;\n+import javafx.stage.Stage;\n+\n+\n+import java.io.IOException;\n+\n+public class ViewController {\n+\n+    @FXML\n+    public ListView<String> usersList;\n+\n+    @FXML\n+    private TextArea chatHistory;\n+    @FXML\n+    private TextField textField;\n+    private Network network;\n+    private Stage primaryStage;\n+\n+   // private ListView<String> usersList;\n+   private String selectedRecipient;\n+   private ChatHistoryBuilder historyBuilder;\n+\n+\n+    @FXML\n+    public void initialize() {\n+ //       usersList.setItems(FXCollections.observableArrayList(Main.USERS_TEST_DATA));\n+//        sendButton.setOnAction(event -> sendMessage());\n+//        textField.setOnAction(event -> sendMessage());\n+\n+        //chatHistory.appendText(historyBuilder.readChatHistory());\n+        usersList.setItems(FXCollections.observableArrayList(ClientChat.USERS_TEST_DATA));\n+\n+        usersList.setCellFactory(lv -> {\n+            MultipleSelectionModel<String> selectionModel = usersList.getSelectionModel();\n+            ListCell<String> cell = new ListCell<>();\n+            cell.textProperty().bind(cell.itemProperty());\n+            cell.addEventFilter(MouseEvent.MOUSE_PRESSED, event -> {\n+                usersList.requestFocus();\n+                if (! cell.isEmpty()) {\n+                    int index = cell.getIndex();\n+                    if (selectionModel.getSelectedIndices().contains(index)) {\n+                        selectionModel.clearSelection(index);\n+                        selectedRecipient = null;\n+                    } else {\n+                        selectionModel.select(index);\n+                        selectedRecipient = cell.getItem();\n+                    }\n+                    event.consume();\n+                }\n+            });\n+            return cell ;\n+        });\n+\n+    }\n+\n+    @FXML\n+    private void sendMessage() {\n+        String message = textField.getText();\n+        appendMessage(\"Я: \" + message);\n+        textField.clear();\n+\n+        try {\n+            if (selectedRecipient != null) {\n+                network.sendPrivateMessage(selectedRecipient, message);\n+            } else {\n+                network.sendMessage(message);\n+            }\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+            String errorMessage = \"Failed to send message\";\n+            ClientChat.showNetworkError(e.getMessage(), errorMessage, primaryStage);\n+        }\n+    }\n+\n+    public void setNetwork(Network network) {\n+        this.network = network;\n+    }\n+\n+    public void appendMessage(String message) {\n+        //historyBuilder.writeChatHistory(message);\n+        chatHistory.appendText(message);\n+        chatHistory.appendText(System.lineSeparator());\n+    }\n+\n+    public void setStage(Stage primaryStage) {\n+        this.primaryStage = primaryStage;\n+    }\n+\n+    public TextField getTextField() {\n+        return textField;\n+    }\n+\n+    public void setHistoryBuilder(ChatHistoryBuilder historyBuilder) {\n+\n+        //this.historyBuilder = historyBuilder;\n+        chatHistory.appendText(historyBuilder.readChatHistory());\n+\n+    }\n+\n+}"
  },
  {
    "sha": "0a46a0fb03783c77ca4f097966aa4caca9ecb4c6",
    "filename": "Client/src/main/java/client/chatHisotory/chathistory_Andreyz.txt",
    "status": "added",
    "additions": 121,
    "deletions": 0,
    "changes": 121,
    "blob_url": "https://github.com/andreyznsk/FileStore/blob/e147d4caff3aa06269240bae09e3d914022ef63c/Client/src/main/java/client/chatHisotory/chathistory_Andreyz.txt",
    "raw_url": "https://github.com/andreyznsk/FileStore/raw/e147d4caff3aa06269240bae09e3d914022ef63c/Client/src/main/java/client/chatHisotory/chathistory_Andreyz.txt",
    "contents_url": "https://api.github.com/repos/andreyznsk/FileStore/contents/Client/src/main/java/client/chatHisotory/chathistory_Andreyz.txt?ref=e147d4caff3aa06269240bae09e3d914022ef63c",
    "patch": "@@ -0,0 +1,121 @@\n+Я: qwqer\n+Пользователь 'Oleg' зашел в чат!\n+Oleg: 1234\n+Пользователь 'Oleg' зашел в чат!\n+Oleg: 123\n+Oleg: qwe\n+Oleg: asd\n+Oleg: zxc\n+Я: 123\n+Я: 123\n+Я: kjhg\n+Я: kjhg\n+Я: iu\n+Я: iu\n+Я: ffЯ: 0\n+Я: Это 100 строчка с конца\n+Я: 0\n+Я: 1\n+Я: 2\n+Я: 3\n+Я: 4\n+Я: 5\n+Я: 6\n+Я: 7\n+Я: 8\n+Я: 9\n+Я: 10\n+Я: 11\n+Я: 12\n+Я: 13\n+Я: 14\n+Я: 15\n+Я: 16\n+Я: 17\n+Я: 18\n+Я: 19\n+Я: 20\n+Я: 21\n+Я: 22\n+Я: 23\n+Я: 24\n+Я: 25\n+Я: 26\n+Я: 27\n+Я: 28\n+Я: 29\n+Я: 30\n+Я: 31\n+Я: 32\n+Я: 33\n+Я: 34\n+Я: 35\n+Я: 36\n+Я: 37\n+Я: 38\n+Я: 39\n+Я: 40\n+Я: 41\n+Я: 42\n+Я: 43\n+Я: 44\n+Я: 45\n+Я: 46\n+Я: 47\n+Я: 48\n+Я: 49\n+Я: 50\n+Я: 51\n+Я: 52\n+Я: 53\n+Я: 54\n+Я: 55\n+Я: 56\n+Я: 57\n+Я: 58\n+Я: 59\n+Я: 60\n+Я: 61\n+Я: 62\n+Я: 63\n+Я: 64\n+Я: 65\n+Я: 66\n+Я: 67\n+Я: 68\n+Я: 69\n+Я: 70\n+Я: 71\n+Я: 72\n+Я: 73\n+Я: 74\n+Я: 75\n+Я: 76\n+Я: 77\n+Я: 78\n+Я: 79\n+Я: 80\n+Я: 81\n+Я: 82\n+Я: 83\n+Я: 84\n+Я: 85\n+Я: 86\n+Я: 87\n+Я: 88\n+Я: 89\n+Я: 90\n+Я: 91\n+Я: 92\n+Я: 93\n+Я: 94\n+Я: 95\n+Я: 96\n+Я: 97\n+Я: 98Я: 123\n+Я: 123\n+Я: 123\n+Я: qwer\n+Пользователь 'Oleg' зашел в чат!\n+Oleg: qwe\n+Я: 123 after all"
  },
  {
    "sha": "17c4f8c17db5e4d02764bbb6ee015aaf3852f47f",
    "filename": "Client/src/main/java/client/chatHisotory/chathistory_Oleg.txt",
    "status": "added",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/andreyznsk/FileStore/blob/e147d4caff3aa06269240bae09e3d914022ef63c/Client/src/main/java/client/chatHisotory/chathistory_Oleg.txt",
    "raw_url": "https://github.com/andreyznsk/FileStore/raw/e147d4caff3aa06269240bae09e3d914022ef63c/Client/src/main/java/client/chatHisotory/chathistory_Oleg.txt",
    "contents_url": "https://api.github.com/repos/andreyznsk/FileStore/contents/Client/src/main/java/client/chatHisotory/chathistory_Oleg.txt?ref=e147d4caff3aa06269240bae09e3d914022ef63c",
    "patch": "@@ -0,0 +1,18 @@\n+Я: 1234\n+Andreyz: /end\n+Я: 123\n+Я: 123\n+Я: qwe\n+Я: qwe\n+Я: asd\n+Я: asd\n+Я: zxc\n+Я: zxc\n+Andreyz: 123\n+Andreyz: kjhg\n+Andreyz: iu\n+Andreyz: ff\n+Andreyz: /end\n+Я: 123\n+Я: qwe\n+Andreyz: /end"
  },
  {
    "sha": "6772234775b16cda3cd4b02296d90c73218a3903",
    "filename": "Client/src/main/java/client/models/ChatHistoryBuilder.java",
    "status": "added",
    "additions": 81,
    "deletions": 0,
    "changes": 81,
    "blob_url": "https://github.com/andreyznsk/FileStore/blob/e147d4caff3aa06269240bae09e3d914022ef63c/Client/src/main/java/client/models/ChatHistoryBuilder.java",
    "raw_url": "https://github.com/andreyznsk/FileStore/raw/e147d4caff3aa06269240bae09e3d914022ef63c/Client/src/main/java/client/models/ChatHistoryBuilder.java",
    "contents_url": "https://api.github.com/repos/andreyznsk/FileStore/contents/Client/src/main/java/client/models/ChatHistoryBuilder.java?ref=e147d4caff3aa06269240bae09e3d914022ef63c",
    "patch": "@@ -0,0 +1,81 @@\n+package client.models;\n+\n+import java.io.*;\n+import java.util.*;\n+\n+public class ChatHistoryBuilder {\n+    private BufferedReader reader;\n+    private BufferedWriter writer;\n+\n+    public static String getFileName (String nickName){\n+        return \"src/main/java/ru/JavaLevel2/Lesson7/client/chatHisotory/chathistory_\" + nickName + \".txt\";\n+    }\n+\n+    public ChatHistoryBuilder(String nickName) {\n+\n+        String fileName = getFileName(nickName);\n+\n+        try {\n+            writer = new BufferedWriter(new FileWriter(fileName, true));\n+        } catch (FileNotFoundException e) {\n+            //e.printStackTrace();\n+            System.err.println(\"File not found + \" + e.getMessage());\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+        try {\n+            reader = new BufferedReader(new FileReader(fileName));\n+        } catch (FileNotFoundException fileNotFoundException) {\n+            fileNotFoundException.printStackTrace();\n+\n+\n+        }\n+    }\n+\n+\n+    public void closeChatHistoryFile(){\n+        try {\n+            reader.close();\n+            writer.close();\n+        } catch (IOException e) {\n+            System.err.println(e.getMessage());\n+            e.printStackTrace();\n+        }\n+    }\n+\n+    public String readChatHistory() {\n+        ArrayDeque<String> stringStack = new ArrayDeque<>();\n+        try{\n+            String strTemp;\n+            int i=0;\n+            while ((strTemp = reader.readLine()) != null) {\n+                if (i>99) stringStack.removeFirst();\n+                stringStack.add(strTemp+\"\\n\");\n+                i++;\n+            }\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+        StringBuilder str2 = new StringBuilder();\n+        while (stringStack.peekFirst()!=null) {\n+            //System.out.println(stringStack.pop());\n+            str2.append(stringStack.pollFirst());\n+        }\n+\n+        return str2.toString();\n+    }\n+\n+\n+\n+    public void writeChatHistory(String message){\n+        try {\n+            System.out.println(message);\n+            writer.write(message);\n+            writer.write(System.lineSeparator());\n+            writer.flush();\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+    }\n+\n+}"
  },
  {
    "sha": "b6b5231f75e97275749ccd633672f8641c901efa",
    "filename": "Client/src/main/java/client/models/ClientChatState.java",
    "status": "added",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/andreyznsk/FileStore/blob/e147d4caff3aa06269240bae09e3d914022ef63c/Client/src/main/java/client/models/ClientChatState.java",
    "raw_url": "https://github.com/andreyznsk/FileStore/raw/e147d4caff3aa06269240bae09e3d914022ef63c/Client/src/main/java/client/models/ClientChatState.java",
    "contents_url": "https://api.github.com/repos/andreyznsk/FileStore/contents/Client/src/main/java/client/models/ClientChatState.java?ref=e147d4caff3aa06269240bae09e3d914022ef63c",
    "patch": "@@ -0,0 +1,6 @@\n+package client.models;\n+\n+public enum ClientChatState {\n+    AUTHENTICATION,\n+    CHAT,\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "6ad3c8510c4f04db9b7f87d98e70d21f166dd436",
    "filename": "Client/src/main/java/client/models/FillHistoryFile.java",
    "status": "added",
    "additions": 32,
    "deletions": 0,
    "changes": 32,
    "blob_url": "https://github.com/andreyznsk/FileStore/blob/e147d4caff3aa06269240bae09e3d914022ef63c/Client/src/main/java/client/models/FillHistoryFile.java",
    "raw_url": "https://github.com/andreyznsk/FileStore/raw/e147d4caff3aa06269240bae09e3d914022ef63c/Client/src/main/java/client/models/FillHistoryFile.java",
    "contents_url": "https://api.github.com/repos/andreyznsk/FileStore/contents/Client/src/main/java/client/models/FillHistoryFile.java?ref=e147d4caff3aa06269240bae09e3d914022ef63c",
    "patch": "@@ -0,0 +1,32 @@\n+package client.models;\n+\n+import java.io.BufferedWriter;\n+import java.io.FileNotFoundException;\n+import java.io.FileWriter;\n+import java.io.IOException;\n+\n+public class FillHistoryFile {\n+    public static void main(String[] args) throws IOException {\n+        String fileName = \"src/main/java/ru/JavaLevel2/Lesson7/client/chatHisotory/chathistory_Andreyz.txt\";\n+        BufferedWriter writer = null;\n+\n+        try {\n+            writer = new BufferedWriter(new FileWriter(fileName, true));\n+        } catch (FileNotFoundException e) {\n+            //e.printStackTrace();\n+            System.err.println(\"File not found + \" + e.getMessage());\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+        writer.write(\"Я: Это 100 строчка с конца\\n\");\n+        for (int i = 0; i < 99; i++) {\n+            try {\n+                writer.write(\"Я: \" + i +\"\\n\");\n+            } catch (IOException e) {\n+                e.printStackTrace();\n+            }\n+        }\n+        writer.close();\n+    }\n+\n+}"
  },
  {
    "sha": "ba0df078df7b23806f15f4c4bc2a1c44212c7fb9",
    "filename": "Client/src/main/java/client/models/HistoryReader.java",
    "status": "added",
    "additions": 42,
    "deletions": 0,
    "changes": 42,
    "blob_url": "https://github.com/andreyznsk/FileStore/blob/e147d4caff3aa06269240bae09e3d914022ef63c/Client/src/main/java/client/models/HistoryReader.java",
    "raw_url": "https://github.com/andreyznsk/FileStore/raw/e147d4caff3aa06269240bae09e3d914022ef63c/Client/src/main/java/client/models/HistoryReader.java",
    "contents_url": "https://api.github.com/repos/andreyznsk/FileStore/contents/Client/src/main/java/client/models/HistoryReader.java?ref=e147d4caff3aa06269240bae09e3d914022ef63c",
    "patch": "@@ -0,0 +1,42 @@\n+package client.models;\n+\n+import javafx.beans.binding.StringBinding;\n+\n+import java.io.BufferedReader;\n+import java.io.FileNotFoundException;\n+import java.io.FileReader;\n+import java.io.IOException;\n+import java.util.ArrayDeque;\n+import java.util.Queue;\n+import java.util.Stack;\n+\n+public class HistoryReader {\n+    public static void main(String[] args) {\n+        String fileName = \"src/main/java/ru/JavaLevel2/Lesson7/client/chatHisotory/chathistory_Andreyz.txt\";\n+\n+        BufferedReader reader = null;\n+        try {\n+            reader = new BufferedReader(new FileReader(fileName));\n+        } catch (FileNotFoundException fileNotFoundException) {\n+            fileNotFoundException.printStackTrace();\n+        }\n+        ArrayDeque<String> stringStack = new ArrayDeque<String>();\n+        try{\n+            String strTemp;\n+            int i=0;\n+            while ((strTemp = reader.readLine()) != null) {\n+                if (i>10) stringStack.removeFirst();\n+                stringStack.add(strTemp+\"\\n\");\n+                i++;\n+            }\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+        StringBuilder str2 = new StringBuilder();\n+            while (stringStack.peekFirst()!=null) {\n+                //System.out.println(stringStack.pop());\n+                str2.append(stringStack.pollFirst());\n+                }\n+        System.out.println(str2.toString());\n+    }\n+}"
  },
  {
    "sha": "760b66b5d358a1b9bbb32f1a8bbc8398ffc4e9a5",
    "filename": "Client/src/main/java/client/models/Network.java",
    "status": "added",
    "additions": 237,
    "deletions": 0,
    "changes": 237,
    "blob_url": "https://github.com/andreyznsk/FileStore/blob/e147d4caff3aa06269240bae09e3d914022ef63c/Client/src/main/java/client/models/Network.java",
    "raw_url": "https://github.com/andreyznsk/FileStore/raw/e147d4caff3aa06269240bae09e3d914022ef63c/Client/src/main/java/client/models/Network.java",
    "contents_url": "https://api.github.com/repos/andreyznsk/FileStore/contents/Client/src/main/java/client/models/Network.java?ref=e147d4caff3aa06269240bae09e3d914022ef63c",
    "patch": "@@ -0,0 +1,237 @@\n+package client.models;\n+\n+\n+import ClaintServer.Command;\n+import ClaintServer.commands.*;\n+import client.ClientChat;\n+import client.ViewController;\n+import javafx.application.Platform;\n+import org.apache.commons.lang3.SerializationUtils;\n+\n+import java.io.IOException;\n+import java.net.InetSocketAddress;\n+import java.nio.ByteBuffer;\n+import java.nio.channels.SocketChannel;\n+import java.util.Arrays;\n+\n+import static ClaintServer.Command.*;\n+\n+public class Network {\n+\n+        private static final String SERVER_ADDRESS = \"localhost\";\n+        private static final int SERVER_PORT = 9000;\n+        private SocketChannel clientSocket;\n+\n+        private String host;\n+        private int port;\n+\n+\n+        private ClientChat clientChat;\n+        private String nickname;\n+        private ChatHistoryBuilder historyBuilder;\n+\n+        public Network() {\n+            this(SERVER_ADDRESS, SERVER_PORT);\n+        }\n+\n+        public Network(String host, int port) {\n+            this.host = host;\n+            this.port = port;\n+        }\n+\n+        public Network(ClientChat clientChat) {\n+            this();\n+            this.clientChat = clientChat;\n+        }\n+\n+        public boolean connect() {\n+            try {\n+                clientSocket = SocketChannel.open(new InetSocketAddress(host, port));\n+                clientSocket.configureBlocking(false);\n+                return true;\n+            } catch (IOException e) {\n+                System.err.println(\"Соединение не было установлено!\");\n+                e.printStackTrace();\n+                return false;\n+            }\n+        }\n+\n+        public void sendPrivateMessage(String receiver, String message) throws IOException {\n+            sendCommand(privateMessageCommand(receiver, message));\n+        }\n+\n+        public void sendMessage(String message) throws IOException {\n+            sendCommand(publicMessageCommand(nickname, message));\n+        }\n+\n+        private void sendCommand(Command command) throws IOException {\n+            byte[] data = SerializationUtils.serialize(command);\n+            clientSocket.write(ByteBuffer.wrap(data));\n+        }\n+\n+        public void waitMessages(ViewController viewController) {\n+            Thread thread = new Thread(() -> {\n+                try {\n+                    while (true) {\n+                        Command command = readCommand();\n+                        if (command == null) {\n+                            continue;\n+                        }\n+\n+                        if (clientChat.getState() == ClientChatState.AUTHENTICATION) {\n+\n+                            processAuthResult(command);\n+\n+                        } else {\n+                            processMessage(viewController, command);\n+                        }\n+                    }\n+                } catch (IOException e) {\n+                   close();\n+                    System.out.println(\"Соединение было потеряно!\");\n+                }\n+            });\n+            thread.setDaemon(true);\n+            thread.start();\n+        }\n+\n+        private void processMessage(ViewController viewController, Command command) {\n+            switch (command.getType()) {\n+                case INFO_MESSAGE: {\n+                    MessageInfoCommandData data = (MessageInfoCommandData) command.getData();\n+                    Platform.runLater(() -> {\n+                        viewController.appendMessage(data.getMessage());\n+                    });\n+                    break;\n+                }\n+                case CLIENT_MESSAGE: {\n+                    ClientMessageCommandData data = (ClientMessageCommandData) command.getData();\n+                    String sender = data.getSender();\n+                    String message = data.getMessage();\n+                    Platform.runLater(() -> {\n+                        viewController.appendMessage(String.format(\"%s: %s\", sender, message));\n+                    });\n+                    break;\n+                }\n+                case ERROR: {\n+                    ErrorCommandData data = (ErrorCommandData) command.getData();\n+                    Platform.runLater(() -> {\n+                        ClientChat.showNetworkError(data.getErrorMessage(), \"Server error\", null);\n+                    });\n+                    break;\n+                }\n+                case UPDATE_USER_LIST: {\n+                    UpdateUsersListCommandData data = (UpdateUsersListCommandData) command.getData();\n+                    Platform.runLater(() -> {\n+                        clientChat.updateUsers(data.getUsers());\n+                    });\n+                    break;\n+                }\n+                default:\n+                    throw new IllegalArgumentException(\"Uknown command type: \" + command.getType());\n+            }\n+        }\n+\n+        private void processAuthResult(Command command) {\n+            switch (command.getType()) {\n+                case AUTH_OK: {\n+                    AuthOkCommandData data = (AuthOkCommandData) command.getData();\n+                    nickname = data.getUsername();\n+                    Platform.runLater(() -> {\n+                        ClientChat.showNetworkConfirmation(\"Регистрация прошла успешно\", \"Успешно\", null);\n+                        clientChat.activeChatDialog(nickname);\n+                    });\n+                    break;\n+                }\n+                case CLOSE_BY_TIMER:{//Дополнительная служебная команда об ошибке по таймеру\n+                    Platform.runLater(() -> {\n+                        ClientChat.showNetworkError(\"Соединение разорвано по таймеру\", \"Auth error\", null);});\n+\n+\n+                    break;\n+                }\n+\n+\n+                case ERROR: {\n+                    ErrorCommandData data = (ErrorCommandData) command.getData();\n+                    Platform.runLater(() -> {\n+                        ClientChat.showNetworkError(data.getErrorMessage(), \"Auth error\", null);\n+                    });\n+                    break;\n+                }\n+\n+                case CONFIRMATION:\n+                    //ErrorCommandData data = (ErrorCommandData) command.getData();\n+                    Platform.runLater(() -> {\n+                        ClientChat.showNetworkConfirmation(\"Регистрация прошла успешно\", \"Успешно\", null);\n+                    });\n+                    break;\n+\n+                case UPDATE_USER_LIST: {\n+                        UpdateUsersListCommandData data = (UpdateUsersListCommandData) command.getData();\n+                        Platform.runLater(() -> {\n+                            clientChat.updateUsers(data.getUsers());\n+                        });\n+                        break;\n+                    }\n+                default:\n+                    throw new IllegalArgumentException(\"Uknown command type: \" + command.getType());\n+            }\n+        }\n+\n+        public void close() {\n+\n+            try {\n+                if (clientSocket != null && clientSocket.isConnected()) {\n+                    clientSocket.close();\n+                }\n+            } catch (IOException e) {\n+                e.printStackTrace();\n+            }\n+        }\n+\n+        private Command readCommand() throws IOException {\n+            Command command = null;\n+            byte[] data = new byte[1024];\n+            ByteBuffer byteBuffer = ByteBuffer.allocate(1024);\n+            int r = clientSocket.read(byteBuffer);\n+            if(r!=0) {\n+\n+                System.out.println(r);\n+                while (r != 0) {\n+                    byteBuffer.flip();\n+                    int i = 0;\n+                    while (byteBuffer.hasRemaining()) {\n+                        data[i] = byteBuffer.get();\n+                        //System.out.println(data[i]);\n+                        i++;\n+                    }\n+                    byteBuffer.clear();\n+                    r = clientSocket.read(byteBuffer);\n+                }\n+                System.out.println(Arrays.toString(data));\n+                command = SerializationUtils.deserialize(data);\n+            }\n+\n+            return command;\n+        }\n+\n+        public void sendAuthMessage(String login, String password) throws IOException {\n+            sendCommand(authCommand(login, password));\n+        }\n+\n+    public void sendNewUserCommand(String login, String password, String nickname) throws IOException {\n+\n+            sendCommand(regNewUserCommand(login, password, nickname));\n+\n+    }\n+\n+    public void sendUpdateUserCommand(String login, String password, String nickname) throws IOException {\n+        sendCommand(regUpdateUserCommand(login, password, nickname));\n+\n+    }\n+\n+    public void setHistoryBuilder(ChatHistoryBuilder historyBuilder) {\n+            this.historyBuilder = historyBuilder;\n+    }\n+}"
  },
  {
    "sha": "3df1634b58e9f6228ed05cd9f49bdc1332545764",
    "filename": "Client/src/main/resources/authDialog.fxml",
    "status": "added",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/andreyznsk/FileStore/blob/e147d4caff3aa06269240bae09e3d914022ef63c/Client/src/main/resources/authDialog.fxml",
    "raw_url": "https://github.com/andreyznsk/FileStore/raw/e147d4caff3aa06269240bae09e3d914022ef63c/Client/src/main/resources/authDialog.fxml",
    "contents_url": "https://api.github.com/repos/andreyznsk/FileStore/contents/Client/src/main/resources/authDialog.fxml?ref=e147d4caff3aa06269240bae09e3d914022ef63c",
    "patch": "@@ -0,0 +1,15 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+\n+<?import javafx.scene.control.*?>\n+<?import javafx.scene.layout.*?>\n+\n+<AnchorPane prefHeight=\"202.0\" prefWidth=\"317.0\" xmlns=\"http://javafx.com/javafx/11.0.1\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"client.AuthController\">\n+    <children>\n+        <Label layoutX=\"21.0\" layoutY=\"25.0\" text=\"Логин:\" />\n+        <Label layoutX=\"14.0\" layoutY=\"82.0\" text=\"Пароль:\" />\n+        <TextField fx:id=\"loginField\" layoutX=\"87.0\" layoutY=\"21.0\" onAction=\"#executeAuth\" />\n+        <PasswordField fx:id=\"passwordField\" layoutX=\"87.0\" layoutY=\"78.0\" onAction=\"#executeAuth\" />\n+        <Button fx:id=\"authButton\" layoutX=\"44.0\" layoutY=\"151.0\" mnemonicParsing=\"false\" onAction=\"#executeAuth\" prefHeight=\"25.0\" prefWidth=\"86.0\" text=\"Войти!\" />\n+        <Button fx:id=\"regButton\" layoutX=\"186.0\" layoutY=\"151.0\" mnemonicParsing=\"false\" onAction=\"#executeOpenRegDialog\" prefHeight=\"25.0\" prefWidth=\"101.0\" text=\"Регистрация\" />\n+    </children>\n+</AnchorPane>"
  },
  {
    "sha": "e8369cd94838f900312ae27e101b0bcf64bec0f7",
    "filename": "Client/src/main/resources/regDialog.fxml",
    "status": "added",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/andreyznsk/FileStore/blob/e147d4caff3aa06269240bae09e3d914022ef63c/Client/src/main/resources/regDialog.fxml",
    "raw_url": "https://github.com/andreyznsk/FileStore/raw/e147d4caff3aa06269240bae09e3d914022ef63c/Client/src/main/resources/regDialog.fxml",
    "contents_url": "https://api.github.com/repos/andreyznsk/FileStore/contents/Client/src/main/resources/regDialog.fxml?ref=e147d4caff3aa06269240bae09e3d914022ef63c",
    "patch": "@@ -0,0 +1,20 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+\n+<?import javafx.scene.control.*?>\n+<?import javafx.scene.layout.*?>\n+\n+<AnchorPane prefHeight=\"400.0\" prefWidth=\"600.0\" xmlns=\"http://javafx.com/javafx/11.0.1\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"client.RegController\">\n+    <children>\n+        <Label layoutX=\"14.0\" layoutY=\"133.0\" text=\"Ник:\" />\n+        <Label layoutX=\"21.0\" layoutY=\"25.0\" text=\"Логин:\" />\n+        <Label layoutX=\"14.0\" layoutY=\"82.0\" text=\"Пароль:\" />\n+        <TextField fx:id=\"loginField\" layoutX=\"87.0\" layoutY=\"21.0\" />\n+        <PasswordField fx:id=\"passwordField\" layoutX=\"87.0\" layoutY=\"78.0\" />\n+        <TextField fx:id=\"nicknameField\" layoutX=\"87.0\" layoutY=\"129.0\" />\n+\n+        <Button fx:id=\"newUsreButton\" layoutX=\"10.0\" layoutY=\"188.0\" mnemonicParsing=\"false\" onAction=\"#executeRegNew\" prefHeight=\"25.0\" prefWidth=\"80.0\" text=\"Новый\" />\n+        <Button fx:id=\"updateUserButton\" layoutX=\"110.0\" layoutY=\"188.0\" mnemonicParsing=\"false\" onAction=\"#executeRegUpdate\" prefHeight=\"25.0\" prefWidth=\"120.0\" text=\"Изменить Ник\" />\n+\n+    </children>\n+\n+</AnchorPane>"
  },
  {
    "sha": "e7658b114dd52b84fe7809e1307a171227679dc0",
    "filename": "Client/src/main/resources/view_lesson7.fxml",
    "status": "added",
    "additions": 50,
    "deletions": 0,
    "changes": 50,
    "blob_url": "https://github.com/andreyznsk/FileStore/blob/e147d4caff3aa06269240bae09e3d914022ef63c/Client/src/main/resources/view_lesson7.fxml",
    "raw_url": "https://github.com/andreyznsk/FileStore/raw/e147d4caff3aa06269240bae09e3d914022ef63c/Client/src/main/resources/view_lesson7.fxml",
    "contents_url": "https://api.github.com/repos/andreyznsk/FileStore/contents/Client/src/main/resources/view_lesson7.fxml?ref=e147d4caff3aa06269240bae09e3d914022ef63c",
    "patch": "@@ -0,0 +1,50 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+\n+<?import javafx.scene.control.*?>\n+<?import javafx.scene.layout.*?>\n+<?import javafx.scene.text.*?>\n+\n+<AnchorPane prefHeight=\"400.0\" prefWidth=\"601.0\" xmlns=\"http://javafx.com/javafx/11.0.1\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"client.ViewController\">\n+    <children>\n+        <SplitPane dividerPositions=\"0.3\" prefHeight=\"400.0\" prefWidth=\"600.0\" AnchorPane.bottomAnchor=\"0.0\" AnchorPane.leftAnchor=\"0.0\" AnchorPane.rightAnchor=\"0.0\" AnchorPane.topAnchor=\"0.0\">\n+            <items>\n+                <AnchorPane maxHeight=\"1.7976931348623157E308\" maxWidth=\"1.7976931348623157E308\" minHeight=\"0.0\" minWidth=\"0.0\" prefHeight=\"160.0\" prefWidth=\"100.0\">\n+                    <children>\n+                        <ListView fx:id=\"usersList\" minHeight=\"-Infinity\" minWidth=\"-Infinity\" AnchorPane.bottomAnchor=\"0.0\" AnchorPane.leftAnchor=\"0.0\" AnchorPane.rightAnchor=\"0.0\" AnchorPane.topAnchor=\"0.0\" />\n+                    </children></AnchorPane>\n+                <AnchorPane minHeight=\"0.0\" minWidth=\"0.0\" prefHeight=\"160.0\" prefWidth=\"100.0\">\n+                    <children>\n+                        <SplitPane dividerPositions=\"0.8838383838383839\" orientation=\"VERTICAL\" prefHeight=\"398.0\" prefWidth=\"486.0\" AnchorPane.bottomAnchor=\"0.0\" AnchorPane.leftAnchor=\"0.0\" AnchorPane.rightAnchor=\"0.0\" AnchorPane.topAnchor=\"0.0\">\n+                            <items>\n+                                <VBox prefHeight=\"200.0\" prefWidth=\"100.0\">\n+                                    <children>\n+                                        <HBox alignment=\"CENTER\" maxHeight=\"-Infinity\" prefHeight=\"30.0\" prefWidth=\"200.0\">\n+                                            <children>\n+                                                <Label alignment=\"CENTER\" prefHeight=\"42.0\" text=\"Чат\">\n+                                                    <font>\n+                                                        <Font size=\"18.0\" />\n+                                                    </font>\n+                                                </Label>\n+                                            </children>\n+                                        </HBox>\n+                                        <TextArea fx:id=\"chatHistory\" editable=\"false\" maxHeight=\"1.7976931348623157E308\" prefWidth=\"200.0\" wrapText=\"true\" VBox.vgrow=\"ALWAYS\" />\n+                                    </children>\n+                                </VBox>\n+                                <AnchorPane maxHeight=\"50.0\" minHeight=\"30.0\" minWidth=\"0.0\" prefWidth=\"160.0\">\n+                                    <children>\n+                                        <HBox prefHeight=\"100.0\" prefWidth=\"200.0\" AnchorPane.bottomAnchor=\"0.0\" AnchorPane.leftAnchor=\"0.0\" AnchorPane.rightAnchor=\"0.0\" AnchorPane.topAnchor=\"0.0\">\n+                                            <children>\n+                                                <TextField fx:id=\"textField\" maxHeight=\"1.7976931348623157E308\" onAction=\"#sendMessage\" promptText=\"Insert your message here\" HBox.hgrow=\"ALWAYS\" />\n+                                                <Button fx:id=\"sendButton\" maxHeight=\"1.7976931348623157E308\" mnemonicParsing=\"false\" onAction=\"#sendMessage\" prefWidth=\"100.0\" text=\"Send\" />\n+                                            </children>\n+                                        </HBox>\n+                                    </children>\n+                                </AnchorPane>\n+                            </items>\n+                        </SplitPane>\n+                    </children>\n+                </AnchorPane>\n+            </items>\n+        </SplitPane>\n+    </children>\n+</AnchorPane>"
  },
  {
    "sha": "0ad5d61a3243947273e91f8ee9ccd455787dab5c",
    "filename": "ClientServer/pom.xml",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/andreyznsk/FileStore/blob/e147d4caff3aa06269240bae09e3d914022ef63c/ClientServer/pom.xml",
    "raw_url": "https://github.com/andreyznsk/FileStore/raw/e147d4caff3aa06269240bae09e3d914022ef63c/ClientServer/pom.xml",
    "contents_url": "https://api.github.com/repos/andreyznsk/FileStore/contents/ClientServer/pom.xml?ref=e147d4caff3aa06269240bae09e3d914022ef63c",
    "patch": "@@ -0,0 +1,19 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <parent>\n+        <artifactId>FileStore</artifactId>\n+        <groupId>Geekbrains</groupId>\n+        <version>1.0-SNAPSHOT</version>\n+    </parent>\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <artifactId>ClientServer</artifactId>\n+\n+    <properties>\n+        <maven.compiler.source>8</maven.compiler.source>\n+        <maven.compiler.target>8</maven.compiler.target>\n+    </properties>\n+\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "f83e85e2adc72e17074e921320782d37d7a52bb5",
    "filename": "ClientServer/src/main/java/ClaintServer/Command.java",
    "status": "added",
    "additions": 108,
    "deletions": 0,
    "changes": 108,
    "blob_url": "https://github.com/andreyznsk/FileStore/blob/e147d4caff3aa06269240bae09e3d914022ef63c/ClientServer/src/main/java/ClaintServer/Command.java",
    "raw_url": "https://github.com/andreyznsk/FileStore/raw/e147d4caff3aa06269240bae09e3d914022ef63c/ClientServer/src/main/java/ClaintServer/Command.java",
    "contents_url": "https://api.github.com/repos/andreyznsk/FileStore/contents/ClientServer/src/main/java/ClaintServer/Command.java?ref=e147d4caff3aa06269240bae09e3d914022ef63c",
    "patch": "@@ -0,0 +1,108 @@\n+package ClaintServer;\n+\n+\n+\n+import ClaintServer.commands.*;\n+\n+\n+import java.io.Serializable;\n+import java.util.List;\n+\n+public class Command implements Serializable {\n+\n+    private CommandType type;\n+    private Object data;\n+\n+    public CommandType getType() {\n+        return type;\n+    }\n+\n+    public Object getData() {\n+        return data;\n+    }\n+\n+    public static Command authCommand(String login, String password){\n+        Command command = new Command();\n+        command.type = CommandType.AUTH;\n+        command.data = new AuthCommandData(login, password);\n+        return command;\n+\n+    }\n+\n+    public static Command authOkCommand(String username) {\n+        Command command = new Command();\n+        command.type = CommandType.AUTH_OK;\n+        command.data = new AuthOkCommandData(username);\n+        return command;\n+    }\n+\n+    public static Command errorCommand(String errorMessage) {\n+        Command command = new Command();\n+        command.type = CommandType.ERROR;\n+        command.data = new ErrorCommandData(errorMessage);\n+        return command;\n+    }\n+    public static Command confirmationCommand(String errorMessage) {\n+        Command command = new Command();\n+        command.type = CommandType.CONFIRMATION;\n+        command.data = new ErrorCommandData(errorMessage);\n+        return command;\n+    }\n+\n+\n+    public static Command messageInfoCommand(String message) {\n+        Command command = new Command();\n+        command.type = CommandType.INFO_MESSAGE;\n+        command.data = new MessageInfoCommandData(message);\n+        return command;\n+    }\n+\n+    public static Command publicMessageCommand(String username, String message) {\n+        Command command = new Command();\n+        command.type = CommandType.PUBLIC_MESSAGE;\n+        command.data = new PublicMessageCommandData(username, message);\n+        return command;\n+    }\n+    public static Command clientMessageCommand(String sender, String message) {\n+        Command command = new Command();\n+        command.type = CommandType.CLIENT_MESSAGE;\n+        command.data = new ClientMessageCommandData(sender, message);\n+        return command;\n+    }\n+\n+    public static Command privateMessageCommand(String receiver, String message) {\n+        Command command = new Command();\n+        command.type = CommandType.PRIVATE_MESSAGE;\n+        command.data = new PrivateMessageCommandData(receiver, message);\n+        return command;\n+    }\n+\n+    public static Command updateUsersListCommand(List<String> users) {\n+        Command command = new Command();\n+        command.type = CommandType.UPDATE_USER_LIST;\n+        command.data = new UpdateUsersListCommandData(users);\n+        return command;\n+    }\n+\n+    public static Command closeByTimer() {//Команда выход по таймеру\n+        Command command = new Command();\n+        command.type = CommandType.CLOSE_BY_TIMER;\n+        return command;\n+    }\n+\n+    public static Command regNewUserCommand(String login,String password,String nickname ) {\n+        Command command = new Command();\n+        command.type = CommandType.CREATE_NEW_USER;\n+        command.data = new AuthRegData(login, password, nickname);\n+        return command;\n+    }\n+\n+    public static Command regUpdateUserCommand(String login,String password,String nickname ) {\n+        Command command = new Command();\n+        command.type = CommandType.UPDATE_USER;\n+        command.data = new AuthRegData(login, password, nickname);\n+        return command;\n+    }\n+\n+\n+}"
  },
  {
    "sha": "9411a04ab48def6c08d65855843dc5067142ccea",
    "filename": "ClientServer/src/main/java/ClaintServer/CommandType.java",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/andreyznsk/FileStore/blob/e147d4caff3aa06269240bae09e3d914022ef63c/ClientServer/src/main/java/ClaintServer/CommandType.java",
    "raw_url": "https://github.com/andreyznsk/FileStore/raw/e147d4caff3aa06269240bae09e3d914022ef63c/ClientServer/src/main/java/ClaintServer/CommandType.java",
    "contents_url": "https://api.github.com/repos/andreyznsk/FileStore/contents/ClientServer/src/main/java/ClaintServer/CommandType.java?ref=e147d4caff3aa06269240bae09e3d914022ef63c",
    "patch": "@@ -0,0 +1,19 @@\n+package ClaintServer;\n+\n+public enum CommandType {\n+    AUTH,\n+    AUTH_OK,\n+    ERROR,\n+    PRIVATE_MESSAGE,\n+    PUBLIC_MESSAGE,\n+    INFO_MESSAGE,\n+    END,\n+    UPDATE_USER_LIST,\n+    CLIENT_MESSAGE,\n+    CLOSE_BY_TIMER,\n+    REGISTRATION,\n+    CREATE_NEW_USER,\n+    UPDATE_USER,\n+    CONFIRMATION\n+\n+}"
  },
  {
    "sha": "9317bd153b021e1095c29aa20c1571f814ad3496",
    "filename": "ClientServer/src/main/java/ClaintServer/commands/AuthCommandData.java",
    "status": "added",
    "additions": 23,
    "deletions": 0,
    "changes": 23,
    "blob_url": "https://github.com/andreyznsk/FileStore/blob/e147d4caff3aa06269240bae09e3d914022ef63c/ClientServer/src/main/java/ClaintServer/commands/AuthCommandData.java",
    "raw_url": "https://github.com/andreyznsk/FileStore/raw/e147d4caff3aa06269240bae09e3d914022ef63c/ClientServer/src/main/java/ClaintServer/commands/AuthCommandData.java",
    "contents_url": "https://api.github.com/repos/andreyznsk/FileStore/contents/ClientServer/src/main/java/ClaintServer/commands/AuthCommandData.java?ref=e147d4caff3aa06269240bae09e3d914022ef63c",
    "patch": "@@ -0,0 +1,23 @@\n+package ClaintServer.commands;\n+\n+import java.io.Serializable;\n+\n+public class AuthCommandData implements Serializable {\n+\n+    private final String login;\n+    private final String password;\n+\n+    public AuthCommandData(String login, String password){\n+        this.login = login;\n+        this.password = password;\n+    }\n+\n+    public String getLogin() {\n+        return login;\n+    }\n+\n+    public String getPassword() {\n+        return password;\n+    }\n+\n+}"
  },
  {
    "sha": "c272d6d91456b17a11a66a17feed616a5f173b4f",
    "filename": "ClientServer/src/main/java/ClaintServer/commands/AuthOkCommandData.java",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/andreyznsk/FileStore/blob/e147d4caff3aa06269240bae09e3d914022ef63c/ClientServer/src/main/java/ClaintServer/commands/AuthOkCommandData.java",
    "raw_url": "https://github.com/andreyznsk/FileStore/raw/e147d4caff3aa06269240bae09e3d914022ef63c/ClientServer/src/main/java/ClaintServer/commands/AuthOkCommandData.java",
    "contents_url": "https://api.github.com/repos/andreyznsk/FileStore/contents/ClientServer/src/main/java/ClaintServer/commands/AuthOkCommandData.java?ref=e147d4caff3aa06269240bae09e3d914022ef63c",
    "patch": "@@ -0,0 +1,16 @@\n+package ClaintServer.commands;\n+\n+import java.io.Serializable;\n+\n+public class AuthOkCommandData implements Serializable {\n+\n+    private final String username;\n+\n+    public AuthOkCommandData(String username) {\n+        this.username = username;\n+    }\n+\n+    public String getUsername() {\n+        return username;\n+    }\n+}"
  },
  {
    "sha": "0840ec3404bdad1ffe6818f28a84e9de33f1e439",
    "filename": "ClientServer/src/main/java/ClaintServer/commands/AuthRegData.java",
    "status": "added",
    "additions": 31,
    "deletions": 0,
    "changes": 31,
    "blob_url": "https://github.com/andreyznsk/FileStore/blob/e147d4caff3aa06269240bae09e3d914022ef63c/ClientServer/src/main/java/ClaintServer/commands/AuthRegData.java",
    "raw_url": "https://github.com/andreyznsk/FileStore/raw/e147d4caff3aa06269240bae09e3d914022ef63c/ClientServer/src/main/java/ClaintServer/commands/AuthRegData.java",
    "contents_url": "https://api.github.com/repos/andreyznsk/FileStore/contents/ClientServer/src/main/java/ClaintServer/commands/AuthRegData.java?ref=e147d4caff3aa06269240bae09e3d914022ef63c",
    "patch": "@@ -0,0 +1,31 @@\n+package ClaintServer.commands;\n+\n+import java.io.Serializable;\n+\n+public class AuthRegData implements Serializable {\n+\n+        private final String login;\n+        private final String password;\n+        private final String nickname;\n+\n+    public AuthRegData(String login, String password, String nickname){\n+            this.login = login;\n+            this.password = password;\n+            this.nickname = nickname;\n+        }\n+\n+        public String getLogin() {\n+            return login;\n+        }\n+\n+        public String getPassword() {\n+            return password;\n+        }\n+\n+    public String getNickname() {\n+        return nickname;\n+    }\n+}\n+\n+\n+"
  },
  {
    "sha": "bb4bf5e40a5faff97e707b2d57a5515cd1906fdb",
    "filename": "ClientServer/src/main/java/ClaintServer/commands/ClientMessageCommandData.java",
    "status": "added",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/andreyznsk/FileStore/blob/e147d4caff3aa06269240bae09e3d914022ef63c/ClientServer/src/main/java/ClaintServer/commands/ClientMessageCommandData.java",
    "raw_url": "https://github.com/andreyznsk/FileStore/raw/e147d4caff3aa06269240bae09e3d914022ef63c/ClientServer/src/main/java/ClaintServer/commands/ClientMessageCommandData.java",
    "contents_url": "https://api.github.com/repos/andreyznsk/FileStore/contents/ClientServer/src/main/java/ClaintServer/commands/ClientMessageCommandData.java?ref=e147d4caff3aa06269240bae09e3d914022ef63c",
    "patch": "@@ -0,0 +1,22 @@\n+package ClaintServer.commands;\n+\n+import java.io.Serializable;\n+\n+public class ClientMessageCommandData implements Serializable {\n+\n+    private final String sender;\n+    private final String message;\n+\n+    public ClientMessageCommandData(String sender, String message) {\n+        this.sender = sender;\n+        this.message = message;\n+    }\n+\n+    public String getMessage() {\n+        return message;\n+    }\n+\n+    public String getSender() {\n+        return sender;\n+    }\n+}"
  },
  {
    "sha": "78c9a96201ac678a1f4c1bd7a3a35080ca9329f8",
    "filename": "ClientServer/src/main/java/ClaintServer/commands/CloseByTimer.java",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/andreyznsk/FileStore/blob/e147d4caff3aa06269240bae09e3d914022ef63c/ClientServer/src/main/java/ClaintServer/commands/CloseByTimer.java",
    "raw_url": "https://github.com/andreyznsk/FileStore/raw/e147d4caff3aa06269240bae09e3d914022ef63c/ClientServer/src/main/java/ClaintServer/commands/CloseByTimer.java",
    "contents_url": "https://api.github.com/repos/andreyznsk/FileStore/contents/ClientServer/src/main/java/ClaintServer/commands/CloseByTimer.java?ref=e147d4caff3aa06269240bae09e3d914022ef63c",
    "patch": "@@ -0,0 +1,13 @@\n+package ClaintServer.commands;\n+\n+import java.io.Serializable;\n+\n+public class CloseByTimer implements Serializable {\n+\n+\n+    public CloseByTimer() {\n+\n+\n+    }\n+\n+}"
  },
  {
    "sha": "6d4961ba8262f6ab8c83961132aea2d576df6915",
    "filename": "ClientServer/src/main/java/ClaintServer/commands/ErrorCommandData.java",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/andreyznsk/FileStore/blob/e147d4caff3aa06269240bae09e3d914022ef63c/ClientServer/src/main/java/ClaintServer/commands/ErrorCommandData.java",
    "raw_url": "https://github.com/andreyznsk/FileStore/raw/e147d4caff3aa06269240bae09e3d914022ef63c/ClientServer/src/main/java/ClaintServer/commands/ErrorCommandData.java",
    "contents_url": "https://api.github.com/repos/andreyznsk/FileStore/contents/ClientServer/src/main/java/ClaintServer/commands/ErrorCommandData.java?ref=e147d4caff3aa06269240bae09e3d914022ef63c",
    "patch": "@@ -0,0 +1,16 @@\n+package ClaintServer.commands;\n+\n+import java.io.Serializable;\n+\n+public class ErrorCommandData implements Serializable {\n+\n+    private final String errorMessage;\n+\n+    public ErrorCommandData(String errorMessage) {\n+        this.errorMessage = errorMessage;\n+    }\n+\n+    public String getErrorMessage() {\n+        return errorMessage;\n+    }\n+}"
  },
  {
    "sha": "bf3aeefd50fe5bdfb989a513eafd7725fca704ac",
    "filename": "ClientServer/src/main/java/ClaintServer/commands/MessageInfoCommandData.java",
    "status": "added",
    "additions": 17,
    "deletions": 0,
    "changes": 17,
    "blob_url": "https://github.com/andreyznsk/FileStore/blob/e147d4caff3aa06269240bae09e3d914022ef63c/ClientServer/src/main/java/ClaintServer/commands/MessageInfoCommandData.java",
    "raw_url": "https://github.com/andreyznsk/FileStore/raw/e147d4caff3aa06269240bae09e3d914022ef63c/ClientServer/src/main/java/ClaintServer/commands/MessageInfoCommandData.java",
    "contents_url": "https://api.github.com/repos/andreyznsk/FileStore/contents/ClientServer/src/main/java/ClaintServer/commands/MessageInfoCommandData.java?ref=e147d4caff3aa06269240bae09e3d914022ef63c",
    "patch": "@@ -0,0 +1,17 @@\n+package ClaintServer.commands;\n+\n+import java.io.Serializable;\n+\n+public class MessageInfoCommandData implements Serializable {\n+\n+    private final String message;\n+\n+    public MessageInfoCommandData(String message) {\n+        this.message = message;\n+    }\n+\n+    public String getMessage() {\n+        return message;\n+    }\n+\n+}"
  },
  {
    "sha": "bf196d7f2194ba867f8985e1bfdc31248c82aeba",
    "filename": "ClientServer/src/main/java/ClaintServer/commands/PrivateMessageCommandData.java",
    "status": "added",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/andreyznsk/FileStore/blob/e147d4caff3aa06269240bae09e3d914022ef63c/ClientServer/src/main/java/ClaintServer/commands/PrivateMessageCommandData.java",
    "raw_url": "https://github.com/andreyznsk/FileStore/raw/e147d4caff3aa06269240bae09e3d914022ef63c/ClientServer/src/main/java/ClaintServer/commands/PrivateMessageCommandData.java",
    "contents_url": "https://api.github.com/repos/andreyznsk/FileStore/contents/ClientServer/src/main/java/ClaintServer/commands/PrivateMessageCommandData.java?ref=e147d4caff3aa06269240bae09e3d914022ef63c",
    "patch": "@@ -0,0 +1,22 @@\n+package ClaintServer.commands;\n+\n+import java.io.Serializable;\n+\n+public class PrivateMessageCommandData implements Serializable {\n+\n+    private final String receiver;\n+    private final String message;\n+\n+    public PrivateMessageCommandData(String receiver, String message) {\n+        this.receiver = receiver;\n+        this.message = message;\n+    }\n+\n+    public String getReceiver() {\n+        return receiver;\n+    }\n+\n+    public String getMessage() {\n+        return message;\n+    }\n+}"
  },
  {
    "sha": "03607eca703211461afbe0d5639f123142d80fc7",
    "filename": "ClientServer/src/main/java/ClaintServer/commands/PublicMessageCommandData.java",
    "status": "added",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/andreyznsk/FileStore/blob/e147d4caff3aa06269240bae09e3d914022ef63c/ClientServer/src/main/java/ClaintServer/commands/PublicMessageCommandData.java",
    "raw_url": "https://github.com/andreyznsk/FileStore/raw/e147d4caff3aa06269240bae09e3d914022ef63c/ClientServer/src/main/java/ClaintServer/commands/PublicMessageCommandData.java",
    "contents_url": "https://api.github.com/repos/andreyznsk/FileStore/contents/ClientServer/src/main/java/ClaintServer/commands/PublicMessageCommandData.java?ref=e147d4caff3aa06269240bae09e3d914022ef63c",
    "patch": "@@ -0,0 +1,22 @@\n+package ClaintServer.commands;\n+\n+import java.io.Serializable;\n+\n+public class PublicMessageCommandData implements Serializable {\n+\n+    private final String sender;\n+    private final String message;\n+\n+    public PublicMessageCommandData(String sender, String message) {\n+        this.sender = sender;\n+        this.message = message;\n+    }\n+\n+    public String getMessage() {\n+        return message;\n+    }\n+\n+    public String getSender() {\n+        return sender;\n+    }\n+}"
  },
  {
    "sha": "19c2a7cbae8fea64666c055a80d3eca0280e54ad",
    "filename": "ClientServer/src/main/java/ClaintServer/commands/UpdateUsersListCommandData.java",
    "status": "added",
    "additions": 17,
    "deletions": 0,
    "changes": 17,
    "blob_url": "https://github.com/andreyznsk/FileStore/blob/e147d4caff3aa06269240bae09e3d914022ef63c/ClientServer/src/main/java/ClaintServer/commands/UpdateUsersListCommandData.java",
    "raw_url": "https://github.com/andreyznsk/FileStore/raw/e147d4caff3aa06269240bae09e3d914022ef63c/ClientServer/src/main/java/ClaintServer/commands/UpdateUsersListCommandData.java",
    "contents_url": "https://api.github.com/repos/andreyznsk/FileStore/contents/ClientServer/src/main/java/ClaintServer/commands/UpdateUsersListCommandData.java?ref=e147d4caff3aa06269240bae09e3d914022ef63c",
    "patch": "@@ -0,0 +1,17 @@\n+package ClaintServer.commands;\n+\n+import java.io.Serializable;\n+import java.util.List;\n+\n+public class UpdateUsersListCommandData implements Serializable {\n+\n+    private final List<String> users;\n+\n+    public UpdateUsersListCommandData(List<String> users) {\n+        this.users = users;\n+    }\n+\n+    public List<String> getUsers() {\n+        return users;\n+    }\n+}"
  }
]
