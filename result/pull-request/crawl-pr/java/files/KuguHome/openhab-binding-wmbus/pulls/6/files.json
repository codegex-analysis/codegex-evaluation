[
  {
    "sha": "1bb58a306a905591ab3b993a2a62d3eb9e5f4061",
    "filename": "README.md",
    "status": "modified",
    "additions": 14,
    "deletions": 14,
    "changes": 28,
    "blob_url": "https://github.com/KuguHome/openhab-binding-wmbus/blob/09f6c0c24aa6ddd238436ac2891d8108562dad51/README.md",
    "raw_url": "https://github.com/KuguHome/openhab-binding-wmbus/raw/09f6c0c24aa6ddd238436ac2891d8108562dad51/README.md",
    "contents_url": "https://api.github.com/repos/KuguHome/openhab-binding-wmbus/contents/README.md?ref=09f6c0c24aa6ddd238436ac2891d8108562dad51",
    "patch": "@@ -2,11 +2,11 @@\n \n This is a binding for the [openHAB](https://www.openhab.org/) / eclipse Smart Home home automation system. It aims to make data available to the user, which is already sent by lots of modern metering hardware (e.g. heat cost allocators, electricity/gas/water/heat meters) already widely deployed in houses and especially flats.\n \n-The binding is based on the [jMBus](https://www.openmuc.org/m-bus/) library, which provides all basic receiving and decoding. It is currently using [a fork](https://github.com/kaikreuzer/jmbus) of version 3.1.1 to make it work within openHAB.\n+The binding is based on the [jMBus](https://www.openmuc.org/m-bus/) library, which provides all basic receiving and decoding. It is currently using version 3.1.1 plus one extension for access to the RAW frame.\n Implementation of the Techem devices has been ported from [FHEM](https://forum.fhem.de/index.php/topic,42232.html).\n \n-The binding is working stable. To use it, you need a device to receive the transmissions. The underlying library  supports transceivers of Amber, Radiocrafts (RC1180-MBUS) and IMST (iM871A-USB), the binding is mainly developed and tested with the [Amber Wireless AMB8465-M](https://www.amber-wireless.de/de/produkte/wireless-m-bus/alle-usb-sticks/wireless-m-bus-868-mhz-usb-stick-int-antenne-amb8465-m.html).\n-However, development is still going on and there are some known issues. One is, that sometimes when changing settings etc. to the stick, the serial port native parts segfault and the whole openHAB is restarting. This seems to be caused by a bug in the serial library or the jMBus library.\n+The binding is working stable. To use it, you need a device to receive the transmissions. The underlying library supports transceivers of Amber, Radiocrafts (RC1180-MBUS) and IMST (iM871A-USB), the binding is mainly developed and tested with the [Amber Wireless AMB8465-M](https://www.we-online.de/catalog/en/USB_RADIO_STICK_METERING).\n+However, development is still going on and there are some known issues.\n \n ### Features:\n * Receive WMBus frames as inbox discovery results\n@@ -39,23 +39,23 @@ There is some more information and discussion [in the forum](https://community.o\n ![Diagram in HABmin, fed by several HKVs ](doc/diagrams.png)\n \n ## Install\n-1. Drop the .jar from https://github.com/KuguHome/openhab-binding-wmbus/releases (or your own build, see below) into your openHAB2 Karaf deploy directory, e.g. `openhab2/addons` or `/usr/share/openhab2/addons/`.\n+1. Drop the .jar from https://github.com/KuguHome/openhab-binding-wmbus/releases (or your own build, see below) into your openHAB Karaf deploy directory, e.g. `openhab/addons` or `/usr/share/openhab/addons/`.\n 2. It should get picked up automatically and started by Karaf.\n 3. Run `bundle:list` in the [OSGi console](https://www.openhab.org/docs/administration/console.html), it should show a `wmbus` bundle in active state. If it is there but not active yet, try `feature:install openhab-transport-serial` or `bundle:start XXX` where `XXX` is the number of the wmbus bundle shown by the `list` command.\n-4. Open PaperUI in the browser.\n-5. Check that Configuration -> Bindings lists the WMBus Binding.\n-6. Go to Configuration -> Things.\n+4. Open OH3 UI in the browser.\n+5. Check that `Settings` -> `Things` -> `(+)` lists the WMBus Binding.\n+6. Configure WMBus Binding: Set `include the BridgeUID (stick/adapter name) into the ThingUID of the metering device` to `true`.\n 7. Manually add new WMBus Binding Thing -> WMBus Stick (exactly one).\n-8. Select/enter serial device (e.g. /dev/ttyUSB0, check via `dmesg` when plugging in the stick) as configuration parameter.\n+8. Select/enter serial device (e.g. `/dev/ttyUSB0`, check via `dmesg` when plugging in the stick) as configuration parameter.\n 9. Select receiving mode. T is most common, will also receive frames sent in mode C. S is transmitting only rarely.\n-10. The Thing should show `ONLINE` as status. If not, edit the Thing, this screen should include some more error details, also check OSGi console and `userdata/logs/openhab.log` or `/var/log/oppenhab2/openhab.log`.\n+10. The Thing should show `ONLINE` as status. If not, edit the Thing, this screen should include some more error details, also check OSGi console and `userdata/logs/openhab.log` or `/var/log/oppenhab/openhab.log`.\n 11. If everything is working correctly, devices should be discovered automatically and turn up as new Things in the Inbox as soon as a message is received from them. Manually adding the devices is not necessary, also the active search function when adding a Thing does nothing. Everything goes throught the discovery.\n 12. Search your devices in the Inbox by the ID that is printed outside or shown on the display (e.g. Techem HKVs display the last 4 digits) and add those devices via the checkmark button. Make sure \"Item Linking Simple Mode\" is activated or link the channels to items yourself.\n 13. On the \"Control\" page, the Thing with it's different channels should display, readings should be updated regularly about every 4 minutes:\n   * Room/radiator temperature etc. are always current (at the time of sending/receiving the message).\n   * Some device's \"Current Reading\" will only update once each day.\n 14. If a Persistence Add-on (e.g. InfluxDB) is installed, the readings will also be stored into the database.\n-15. In HABmin or HABPanel, diagrams/charts/graphs can be configured to have a look at the latest values in comparison. Grafana is a good third party software to get an overview.\n+15. In OH3 UI, diagrams/charts/graphs can be configured to have a look at the latest values in comparison. Grafana is a good third party software to get an overview.\n 16. If any Exceptions or other messages turn up in the logs or console, please let us know and open an issue here.\n \n ### Encrypted messages\n@@ -68,15 +68,15 @@ If your device is encrypted, you will need to get the AES key from the manufactu\n ## Build\n \n 1. Run `mvn package` in the root directory..\n-2. The compilation result will be at `org.openhab.binding.wmbus/target/org.openhab.binding.wmbus-2.3.0-SNAPSHOT.jar`.\n+2. The compilation result will be at `org.openhab.binding.wmbus/target/org.openhab.binding.wmbus-3.1.0-SNAPSHOT.jar`.\n \n ## Development\n \n 1. Install OpenHAB IDE according to their webpage. This is basically Eclipse IDE + Oomph + OpenHAB dev addons via Oomph.\n 2. Clone this repository.\n 3. File - Import - Maven - Existing Maven Projects. Give path to this git repository, select all three projects, add project to working set \"WMBus\" or similar.\n \n-For debugging and development, it is helpful to add the folloing to `/var/lib/openhab2/etc/org.ops4j.pax.logging.cfg` to log to a separate file `/var/log/openhab2/wmbus.log`\n+For debugging and development, it is helpful to add the folloing to `/var/lib/openhab/etc/org.ops4j.pax.logging.cfg` to log to a separate file `/var/log/openhab/wmbus.log`\n \n ```\n # Define WMBus file appender\n@@ -100,8 +100,8 @@ log4j2.logger.org_openhab_binding_wmbus.appenderRef.wmbus.ref = WMBUS\n ```\n \n ## Raw tool\n-There is an additional tool, that compiles as a second .jar file `org.openhab.binding.wmbus.tools-2.3.0-SNAPSHOT.jar` (also available from the releases page). If you drop this bundle into your addons folder or install it otherwise to openHAB, you can access the tool at http://localhost:8080/wmbus. It gives you the ability to inject frames to the binding, as if they were received via a stick. There is also a collector, which lists you each received WMbus frame as raw hex, together with timestamp and basic grouping (ID, Manufacturer, device type).\n-If you add the following lines to `/var/lib/openhab2/etc/org.ops4j.pax.logging.cfg`, you can also log all frames to a plaintext file `wmbustools.log`. The content of that file can later be fed to the injector.\n+There is an additional tool, that compiles as a second .jar file `org.openhab.binding.wmbus.tools-3.1.0-SNAPSHOT.jar` (also available from the releases page). If you drop this bundle into your addons folder or install it otherwise to openHAB, you can access the tool at http://localhost:8080/wmbus. It gives you the ability to inject frames to the binding, as if they were received via a stick. There is also a collector, which lists you each received WMbus frame as raw hex, together with timestamp and basic grouping (ID, Manufacturer, device type).\n+If you add the following lines to `/var/lib/openhab/etc/org.ops4j.pax.logging.cfg`, you can also log all frames to a plaintext file `wmbustools.log`. The content of that file can later be fed to the injector.\n \n ```\n # Define WMBus Tools file appender"
  },
  {
    "sha": "3793db710d8bb2764d0f66f2baadf20f9d8e5280",
    "filename": "org.openhab.binding.wmbus.tools/pom.xml",
    "status": "modified",
    "additions": 64,
    "deletions": 64,
    "changes": 128,
    "blob_url": "https://github.com/KuguHome/openhab-binding-wmbus/blob/09f6c0c24aa6ddd238436ac2891d8108562dad51/org.openhab.binding.wmbus.tools/pom.xml",
    "raw_url": "https://github.com/KuguHome/openhab-binding-wmbus/raw/09f6c0c24aa6ddd238436ac2891d8108562dad51/org.openhab.binding.wmbus.tools/pom.xml",
    "contents_url": "https://api.github.com/repos/KuguHome/openhab-binding-wmbus/contents/org.openhab.binding.wmbus.tools/pom.xml?ref=09f6c0c24aa6ddd238436ac2891d8108562dad51",
    "patch": "@@ -1,75 +1,75 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n-    <modelVersion>4.0.0</modelVersion>\n+<project xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n \n-    <parent>\n-        <groupId>org.openhab.binding</groupId>\n-        <artifactId>wmbus</artifactId>\n-        <version>2.5.0-SNAPSHOT</version>\n-    </parent>\n+  <parent>\n+    <groupId>org.openhab.addons.bundles</groupId>\n+    <artifactId>wmbus</artifactId>\n+    <version>3.1.0-SNAPSHOT</version>\n+  </parent>\n \n-    <groupId>org.openhab.binding</groupId>\n-    <artifactId>org.openhab.binding.wmbus.tools</artifactId>\n+  <groupId>org.openhab.addons.bundles</groupId>\n+  <artifactId>org.openhab.binding.wmbus.tools</artifactId>\n \n-    <name>WMBus Binding Tools</name>\n-    \n-    <properties>\n-        <report.fail.on.error>false</report.fail.on.error>\n-    </properties>\n+  <name>WMBus Binding Tools</name>\n \n-    <dependencies>\n-        <dependency>\n-            <groupId>org.openhab.binding</groupId>\n-            <artifactId>org.openhab.binding.wmbus</artifactId>\n-            <version>${project.version}</version>\n-        </dependency>\n+  <properties>\n+    <report.fail.on.error>false</report.fail.on.error>\n+  </properties>\n \n-        <dependency>\n-            <groupId>com.google.guava</groupId>\n-            <artifactId>guava</artifactId>\n-            <version>20.0</version>\n-            <scope>provided</scope>\n-        </dependency>\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.openhab.addons.bundles</groupId>\n+      <artifactId>org.openhab.binding.wmbus</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n \n-        <dependency>\n-            <groupId>org.openhab.core.bom</groupId>\n-            <artifactId>org.openhab.core.bom.compile</artifactId>\n-            <type>pom</type>\n-            <scope>provided</scope>\n-        </dependency>\n-        <dependency>\n-            <groupId>org.openhab.core.bom</groupId>\n-            <artifactId>org.openhab.core.bom.openhab-core</artifactId>\n-            <type>pom</type>\n-            <scope>provided</scope>\n-        </dependency>\n+    <dependency>\n+      <groupId>com.google.guava</groupId>\n+      <artifactId>guava</artifactId>\n+      <version>20.0</version>\n+      <scope>provided</scope>\n+    </dependency>\n \n-        <dependency>\n-            <groupId>junit</groupId>\n-            <artifactId>junit</artifactId>\n-            <version>4.12</version>\n-            <scope>test</scope>\n-        </dependency>\n-        <dependency>\n-            <groupId>org.assertj</groupId>\n-            <artifactId>assertj-core</artifactId>\n-            <version>3.11.1</version>\n-            <scope>test</scope>\n-        </dependency>\n-        <dependency>\n-            <groupId>org.slf4j</groupId>\n-            <artifactId>slf4j-simple</artifactId>\n-            <version>1.7.2</version>\n-            <scope>test</scope>\n-        </dependency>\n-        <dependency>\n-            <groupId>org.mockito</groupId>\n-            <artifactId>mockito-core</artifactId>\n-            <version>2.23.0</version>\n-            <scope>test</scope>\n-        </dependency>\n+    <dependency>\n+      <groupId>org.openhab.core.bom</groupId>\n+      <artifactId>org.openhab.core.bom.compile</artifactId>\n+      <type>pom</type>\n+      <scope>provided</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.openhab.core.bom</groupId>\n+      <artifactId>org.openhab.core.bom.openhab-core</artifactId>\n+      <type>pom</type>\n+      <scope>provided</scope>\n+    </dependency>\n \n-    </dependencies>\n+    <dependency>\n+      <groupId>junit</groupId>\n+      <artifactId>junit</artifactId>\n+      <version>4.12</version>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.assertj</groupId>\n+      <artifactId>assertj-core</artifactId>\n+      <version>3.11.1</version>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.slf4j</groupId>\n+      <artifactId>slf4j-simple</artifactId>\n+      <version>1.7.2</version>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.mockito</groupId>\n+      <artifactId>mockito-core</artifactId>\n+      <version>2.23.0</version>\n+      <scope>test</scope>\n+    </dependency>\n+\n+  </dependencies>\n \n </project>"
  },
  {
    "sha": "e2662ecf92a19cc301df4ce18ee541024feaf077",
    "filename": "org.openhab.binding.wmbus.tools/src/main/java/org/openhab/binding/wmbus/tools/CollectorServlet.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/KuguHome/openhab-binding-wmbus/blob/09f6c0c24aa6ddd238436ac2891d8108562dad51/org.openhab.binding.wmbus.tools/src/main/java/org/openhab/binding/wmbus/tools/CollectorServlet.java",
    "raw_url": "https://github.com/KuguHome/openhab-binding-wmbus/raw/09f6c0c24aa6ddd238436ac2891d8108562dad51/org.openhab.binding.wmbus.tools/src/main/java/org/openhab/binding/wmbus/tools/CollectorServlet.java",
    "contents_url": "https://api.github.com/repos/KuguHome/openhab-binding-wmbus/contents/org.openhab.binding.wmbus.tools/src/main/java/org/openhab/binding/wmbus/tools/CollectorServlet.java?ref=09f6c0c24aa6ddd238436ac2891d8108562dad51",
    "patch": "@@ -26,10 +26,10 @@\n import javax.servlet.http.HttpServletResponse;\n \n import org.apache.commons.io.IOUtils;\n-import org.eclipse.smarthome.core.util.HexUtils;\n import org.openhab.binding.wmbus.WMBusDevice;\n import org.openhab.binding.wmbus.handler.WMBusAdapter;\n import org.openhab.binding.wmbus.handler.WMBusMessageListener;\n+import org.openhab.core.util.HexUtils;\n import org.openmuc.jmbus.SecondaryAddress;\n import org.osgi.service.component.annotations.Activate;\n import org.osgi.service.component.annotations.Component;"
  },
  {
    "sha": "ffd379b42b0111bd7c98fc2586936b8e5335c9d3",
    "filename": "org.openhab.binding.wmbus.tools/src/main/java/org/openhab/binding/wmbus/tools/InjectorServlet.java",
    "status": "modified",
    "additions": 16,
    "deletions": 16,
    "changes": 32,
    "blob_url": "https://github.com/KuguHome/openhab-binding-wmbus/blob/09f6c0c24aa6ddd238436ac2891d8108562dad51/org.openhab.binding.wmbus.tools/src/main/java/org/openhab/binding/wmbus/tools/InjectorServlet.java",
    "raw_url": "https://github.com/KuguHome/openhab-binding-wmbus/raw/09f6c0c24aa6ddd238436ac2891d8108562dad51/org.openhab.binding.wmbus.tools/src/main/java/org/openhab/binding/wmbus/tools/InjectorServlet.java",
    "contents_url": "https://api.github.com/repos/KuguHome/openhab-binding-wmbus/contents/org.openhab.binding.wmbus.tools/src/main/java/org/openhab/binding/wmbus/tools/InjectorServlet.java?ref=09f6c0c24aa6ddd238436ac2891d8108562dad51",
    "patch": "@@ -8,14 +8,25 @@\n  */\n package org.openhab.binding.wmbus.tools;\n \n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.io.PrintWriter;\n+import java.util.*;\n+import java.util.stream.Collectors;\n+\n+import javax.servlet.ServletException;\n+import javax.servlet.http.HttpServlet;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+\n import org.apache.commons.io.IOUtils;\n-import org.eclipse.smarthome.core.thing.Thing;\n-import org.eclipse.smarthome.core.thing.ThingRegistry;\n-import org.eclipse.smarthome.core.util.HexUtils;\n import org.openhab.binding.wmbus.WMBusBindingConstants;\n import org.openhab.binding.wmbus.WMBusDevice;\n import org.openhab.binding.wmbus.handler.WMBusAdapter;\n import org.openhab.binding.wmbus.tools.processor.*;\n+import org.openhab.core.thing.Thing;\n+import org.openhab.core.thing.ThingRegistry;\n+import org.openhab.core.util.HexUtils;\n import org.openmuc.jmbus.DecodingException;\n import org.openmuc.jmbus.wireless.VirtualWMBusMessageHelper;\n import org.openmuc.jmbus.wireless.WMBusMessage;\n@@ -28,16 +39,6 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-import javax.servlet.ServletException;\n-import javax.servlet.http.HttpServlet;\n-import javax.servlet.http.HttpServletRequest;\n-import javax.servlet.http.HttpServletResponse;\n-import java.io.ByteArrayOutputStream;\n-import java.io.IOException;\n-import java.io.PrintWriter;\n-import java.util.*;\n-import java.util.stream.Collectors;\n-\n /**\n  * Very basic servlet which allows to send a test frame to deployed binding.\n  *\n@@ -109,8 +110,8 @@ private void inject(WMBusAdapter adapter, String frames, HttpServletRequest req,\n         boolean stripCRC = Optional.ofNullable(req.getParameter(\"stripCRC\")).map(value -> Boolean.TRUE).orElse(false);\n         boolean calculateLength = Optional.ofNullable(req.getParameter(\"calculateLength\")).map(value -> Boolean.TRUE)\n                 .orElse(false);\n-        boolean recalculateLength = Optional.ofNullable(req.getParameter(\"recalculateLength\")).map(value -> Boolean.TRUE)\n-                .orElse(false);\n+        boolean recalculateLength = Optional.ofNullable(req.getParameter(\"recalculateLength\"))\n+                .map(value -> Boolean.TRUE).orElse(false);\n \n         List<Processor<String>> processors = new ArrayList<>();\n         processors.add(new RssiProcessor(rssiIndex, rssiValue));\n@@ -184,5 +185,4 @@ public void activate() throws ServletException, NamespaceException {\n     public void deactivate() {\n         httpService.unregister(\"/wmbus\");\n     }\n-\n }"
  },
  {
    "sha": "7cb5dfb7fdce365973dbd3cf31bb4e8884b5f423",
    "filename": "org.openhab.binding.wmbus.tools/src/main/java/org/openhab/binding/wmbus/tools/LoggingMessageListener.java",
    "status": "modified",
    "additions": 1,
    "deletions": 3,
    "changes": 4,
    "blob_url": "https://github.com/KuguHome/openhab-binding-wmbus/blob/09f6c0c24aa6ddd238436ac2891d8108562dad51/org.openhab.binding.wmbus.tools/src/main/java/org/openhab/binding/wmbus/tools/LoggingMessageListener.java",
    "raw_url": "https://github.com/KuguHome/openhab-binding-wmbus/raw/09f6c0c24aa6ddd238436ac2891d8108562dad51/org.openhab.binding.wmbus.tools/src/main/java/org/openhab/binding/wmbus/tools/LoggingMessageListener.java",
    "contents_url": "https://api.github.com/repos/KuguHome/openhab-binding-wmbus/contents/org.openhab.binding.wmbus.tools/src/main/java/org/openhab/binding/wmbus/tools/LoggingMessageListener.java?ref=09f6c0c24aa6ddd238436ac2891d8108562dad51",
    "patch": "@@ -8,11 +8,10 @@\n  */\n package org.openhab.binding.wmbus.tools;\n \n-import org.eclipse.smarthome.core.util.HexUtils;\n import org.openhab.binding.wmbus.WMBusDevice;\n-import org.openmuc.jmbus.wireless.WMBusMessage;\n import org.openhab.binding.wmbus.handler.WMBusAdapter;\n import org.openhab.binding.wmbus.handler.WMBusMessageListener;\n+import org.openhab.core.util.HexUtils;\n import org.osgi.service.component.annotations.Component;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -40,5 +39,4 @@ public void onChangedWMBusDevice(WMBusAdapter adapter, WMBusDevice device) {\n     private void log(WMBusDevice device) {\n         logger.debug(HexUtils.bytesToHex(device.getOriginalMessage().asBlob()));\n     }\n-\n }"
  },
  {
    "sha": "631db5d0d6a0f3b603e9638eaa9f0d138b5d9b5d",
    "filename": "org.openhab.binding.wmbus.tools/src/main/java/org/openhab/binding/wmbus/tools/Processor.java",
    "status": "modified",
    "additions": 2,
    "deletions": 3,
    "changes": 5,
    "blob_url": "https://github.com/KuguHome/openhab-binding-wmbus/blob/09f6c0c24aa6ddd238436ac2891d8108562dad51/org.openhab.binding.wmbus.tools/src/main/java/org/openhab/binding/wmbus/tools/Processor.java",
    "raw_url": "https://github.com/KuguHome/openhab-binding-wmbus/raw/09f6c0c24aa6ddd238436ac2891d8108562dad51/org.openhab.binding.wmbus.tools/src/main/java/org/openhab/binding/wmbus/tools/Processor.java",
    "contents_url": "https://api.github.com/repos/KuguHome/openhab-binding-wmbus/contents/org.openhab.binding.wmbus.tools/src/main/java/org/openhab/binding/wmbus/tools/Processor.java?ref=09f6c0c24aa6ddd238436ac2891d8108562dad51",
    "patch": "@@ -17,8 +17,7 @@\n  */\n public interface Processor<T> {\n \n-  String RSSI = \"rssi\";\n-\n-  T process(T frame, Map<String, Object> context);\n+    String RSSI = \"rssi\";\n \n+    T process(T frame, Map<String, Object> context);\n }"
  },
  {
    "sha": "960dcf8f4c772646fced2d50d71515a097659656",
    "filename": "org.openhab.binding.wmbus.tools/src/main/java/org/openhab/binding/wmbus/tools/processor/CalculateLength.java",
    "status": "modified",
    "additions": 8,
    "deletions": 9,
    "changes": 17,
    "blob_url": "https://github.com/KuguHome/openhab-binding-wmbus/blob/09f6c0c24aa6ddd238436ac2891d8108562dad51/org.openhab.binding.wmbus.tools/src/main/java/org/openhab/binding/wmbus/tools/processor/CalculateLength.java",
    "raw_url": "https://github.com/KuguHome/openhab-binding-wmbus/raw/09f6c0c24aa6ddd238436ac2891d8108562dad51/org.openhab.binding.wmbus.tools/src/main/java/org/openhab/binding/wmbus/tools/processor/CalculateLength.java",
    "contents_url": "https://api.github.com/repos/KuguHome/openhab-binding-wmbus/contents/org.openhab.binding.wmbus.tools/src/main/java/org/openhab/binding/wmbus/tools/processor/CalculateLength.java?ref=09f6c0c24aa6ddd238436ac2891d8108562dad51",
    "patch": "@@ -8,17 +8,16 @@\n  */\n package org.openhab.binding.wmbus.tools.processor;\n \n-import org.openhab.binding.wmbus.tools.Processor;\n-\n import java.util.Map;\n \n-public class CalculateLength implements Processor<String> {\n+import org.openhab.binding.wmbus.tools.Processor;\n \n-  @Override\n-  public String process(String frame, Map<String, Object> context) {\n-    // remember of hex notation which doubles length\n-    Integer len = frame.length() / 2;\n-    return Integer.toHexString(len) + frame;\n-  }\n+public class CalculateLength implements Processor<String> {\n \n+    @Override\n+    public String process(String frame, Map<String, Object> context) {\n+        // remember of hex notation which doubles length\n+        Integer len = frame.length() / 2;\n+        return Integer.toHexString(len) + frame;\n+    }\n }"
  },
  {
    "sha": "1092dc561994cde396c3e692d1207a0390825364",
    "filename": "org.openhab.binding.wmbus.tools/src/main/java/org/openhab/binding/wmbus/tools/processor/Processors.java",
    "status": "modified",
    "additions": 12,
    "deletions": 13,
    "changes": 25,
    "blob_url": "https://github.com/KuguHome/openhab-binding-wmbus/blob/09f6c0c24aa6ddd238436ac2891d8108562dad51/org.openhab.binding.wmbus.tools/src/main/java/org/openhab/binding/wmbus/tools/processor/Processors.java",
    "raw_url": "https://github.com/KuguHome/openhab-binding-wmbus/raw/09f6c0c24aa6ddd238436ac2891d8108562dad51/org.openhab.binding.wmbus.tools/src/main/java/org/openhab/binding/wmbus/tools/processor/Processors.java",
    "contents_url": "https://api.github.com/repos/KuguHome/openhab-binding-wmbus/contents/org.openhab.binding.wmbus.tools/src/main/java/org/openhab/binding/wmbus/tools/processor/Processors.java?ref=09f6c0c24aa6ddd238436ac2891d8108562dad51",
    "patch": "@@ -8,29 +8,28 @@\n  */\n package org.openhab.binding.wmbus.tools.processor;\n \n-import org.openhab.binding.wmbus.tools.Processor;\n-\n import java.util.List;\n import java.util.Map;\n \n+import org.openhab.binding.wmbus.tools.Processor;\n+\n /**\n  * Helper type to orchestrate execution of several frame processors at once.\n  *\n  * @author Łukasz Dywicki - Initial contribution.\n  */\n public class Processors {\n \n-  public static <T> T process(final T value, Map<String, Object> context, List<Processor<T>> processors) {\n-    if (processors.isEmpty()) {\n-      return value;\n-    }\n-\n-    T result = value;\n-    for (Processor<T> processor : processors) {\n-      result = processor.process(result, context);\n-    }\n+    public static <T> T process(final T value, Map<String, Object> context, List<Processor<T>> processors) {\n+        if (processors.isEmpty()) {\n+            return value;\n+        }\n \n-    return result;\n-  }\n+        T result = value;\n+        for (Processor<T> processor : processors) {\n+            result = processor.process(result, context);\n+        }\n \n+        return result;\n+    }\n }"
  },
  {
    "sha": "f1098ba10399b32d69ed90739642d649e191a15c",
    "filename": "org.openhab.binding.wmbus.tools/src/main/java/org/openhab/binding/wmbus/tools/processor/RecalculateLength.java",
    "status": "modified",
    "additions": 33,
    "deletions": 34,
    "changes": 67,
    "blob_url": "https://github.com/KuguHome/openhab-binding-wmbus/blob/09f6c0c24aa6ddd238436ac2891d8108562dad51/org.openhab.binding.wmbus.tools/src/main/java/org/openhab/binding/wmbus/tools/processor/RecalculateLength.java",
    "raw_url": "https://github.com/KuguHome/openhab-binding-wmbus/raw/09f6c0c24aa6ddd238436ac2891d8108562dad51/org.openhab.binding.wmbus.tools/src/main/java/org/openhab/binding/wmbus/tools/processor/RecalculateLength.java",
    "contents_url": "https://api.github.com/repos/KuguHome/openhab-binding-wmbus/contents/org.openhab.binding.wmbus.tools/src/main/java/org/openhab/binding/wmbus/tools/processor/RecalculateLength.java?ref=09f6c0c24aa6ddd238436ac2891d8108562dad51",
    "patch": "@@ -8,45 +8,44 @@\n  */\n package org.openhab.binding.wmbus.tools.processor;\n \n-import org.openhab.binding.wmbus.tools.Processor;\n-\n import java.util.Map;\n \n+import org.openhab.binding.wmbus.tools.Processor;\n+\n public class RecalculateLength implements Processor<String> {\n \n-  @Override\n-  public String process(String frame, Map<String, Object> context) {\n-    int inputByteLength = frame.length() / 2;\n-\n-    String newFrame = \"\";\n-    Integer numberOfBlocks;\n-    int ciField = parseInt(frame, 20, 22);\n-\n-    if (ciField == 0x7A){\n-      numberOfBlocks = (inputByteLength-14) / 16;\n-      inputByteLength = 14 + numberOfBlocks*16;\n-      newFrame += Integer.toHexString(inputByteLength);\n-      newFrame += frame.substring(2, 26);\n-      newFrame += Integer.toHexString(numberOfBlocks*16);\n-      newFrame += frame.substring(28, (inputByteLength * 2) + 2);\n-      return newFrame;\n+    @Override\n+    public String process(String frame, Map<String, Object> context) {\n+        int inputByteLength = frame.length() / 2;\n+\n+        String newFrame = \"\";\n+        Integer numberOfBlocks;\n+        int ciField = parseInt(frame, 20, 22);\n+\n+        if (ciField == 0x7A) {\n+            numberOfBlocks = (inputByteLength - 14) / 16;\n+            inputByteLength = 14 + numberOfBlocks * 16;\n+            newFrame += Integer.toHexString(inputByteLength);\n+            newFrame += frame.substring(2, 26);\n+            newFrame += Integer.toHexString(numberOfBlocks * 16);\n+            newFrame += frame.substring(28, (inputByteLength * 2) + 2);\n+            return newFrame;\n+        }\n+\n+        if (ciField == 0x72) {\n+            numberOfBlocks = (inputByteLength - 22) / 16;\n+            inputByteLength = 22 + numberOfBlocks * 16;\n+            newFrame += Integer.toHexString(inputByteLength);\n+            newFrame += frame.substring(2, 42);\n+            newFrame += Integer.toHexString(numberOfBlocks * 16);\n+            newFrame += frame.substring(44, (inputByteLength * 2) + 2);\n+            return newFrame;\n+        }\n+\n+        return newFrame;\n     }\n \n-    if (ciField == 0x72){\n-      numberOfBlocks = (inputByteLength-22) / 16;\n-      inputByteLength = 22 + numberOfBlocks*16;\n-      newFrame += Integer.toHexString(inputByteLength);\n-      newFrame += frame.substring(2, 42);\n-      newFrame += Integer.toHexString(numberOfBlocks*16);\n-      newFrame += frame.substring(44, (inputByteLength * 2) + 2);\n-      return newFrame;\n+    private int parseInt(String frame, int startIndex, int endIndex) {\n+        return Integer.parseInt(frame.substring(startIndex, endIndex), 16);\n     }\n-\n-    return newFrame;\n-  }\n-\n-  private int parseInt(String frame, int startIndex, int endIndex) {\n-    return Integer.parseInt(frame.substring(startIndex, endIndex), 16);\n-  }\n-\n }"
  },
  {
    "sha": "98a58758d9b6508e07d2430b5c4a004e43c764b5",
    "filename": "org.openhab.binding.wmbus.tools/src/main/java/org/openhab/binding/wmbus/tools/processor/RssiProcessor.java",
    "status": "modified",
    "additions": 22,
    "deletions": 22,
    "changes": 44,
    "blob_url": "https://github.com/KuguHome/openhab-binding-wmbus/blob/09f6c0c24aa6ddd238436ac2891d8108562dad51/org.openhab.binding.wmbus.tools/src/main/java/org/openhab/binding/wmbus/tools/processor/RssiProcessor.java",
    "raw_url": "https://github.com/KuguHome/openhab-binding-wmbus/raw/09f6c0c24aa6ddd238436ac2891d8108562dad51/org.openhab.binding.wmbus.tools/src/main/java/org/openhab/binding/wmbus/tools/processor/RssiProcessor.java",
    "contents_url": "https://api.github.com/repos/KuguHome/openhab-binding-wmbus/contents/org.openhab.binding.wmbus.tools/src/main/java/org/openhab/binding/wmbus/tools/processor/RssiProcessor.java?ref=09f6c0c24aa6ddd238436ac2891d8108562dad51",
    "patch": "@@ -8,33 +8,33 @@\n  */\n package org.openhab.binding.wmbus.tools.processor;\n \n-import org.openhab.binding.wmbus.tools.Processor;\n-\n import java.util.Map;\n \n-public class RssiProcessor implements Processor<String> {\n+import org.openhab.binding.wmbus.tools.Processor;\n \n-  private final int rssiIndex;\n-  private final int rssiValue;\n+public class RssiProcessor implements Processor<String> {\n \n-  public RssiProcessor(int rssiIndex, int rssiValue) {\n-    this.rssiIndex = rssiIndex;\n-    this.rssiValue = rssiValue;\n-  }\n+    private final int rssiIndex;\n+    private final int rssiValue;\n \n-  @Override\n-  public String process(String frame, Map<String, Object> context) {\n-    if (rssiIndex != 0) {\n-      if (rssiIndex == 1) { // first byte starts from character at index 0.\n-        context.put(RSSI, Integer.parseUnsignedInt(frame.substring(0, 2), 16));\n-        return frame.substring(2);\n-      } else if (rssiIndex == -1) {\n-        context.put(RSSI, Integer.parseUnsignedInt(frame.substring(frame.length() -2), 16));\n-        return frame.substring(0, frame.length() - 2);\n-      }\n+    public RssiProcessor(int rssiIndex, int rssiValue) {\n+        this.rssiIndex = rssiIndex;\n+        this.rssiValue = rssiValue;\n     }\n \n-    context.put(RSSI, rssiValue);\n-    return frame;\n-  }\n+    @Override\n+    public String process(String frame, Map<String, Object> context) {\n+        if (rssiIndex != 0) {\n+            if (rssiIndex == 1) { // first byte starts from character at index 0.\n+                context.put(RSSI, Integer.parseUnsignedInt(frame.substring(0, 2), 16));\n+                return frame.substring(2);\n+            } else if (rssiIndex == -1) {\n+                context.put(RSSI, Integer.parseUnsignedInt(frame.substring(frame.length() - 2), 16));\n+                return frame.substring(0, frame.length() - 2);\n+            }\n+        }\n+\n+        context.put(RSSI, rssiValue);\n+        return frame;\n+    }\n }"
  },
  {
    "sha": "b9299b1b9ddabf4fddd609916b6818771381b41f",
    "filename": "org.openhab.binding.wmbus.tools/src/main/java/org/openhab/binding/wmbus/tools/processor/SkipCrcProcessor.java",
    "status": "modified",
    "additions": 37,
    "deletions": 39,
    "changes": 76,
    "blob_url": "https://github.com/KuguHome/openhab-binding-wmbus/blob/09f6c0c24aa6ddd238436ac2891d8108562dad51/org.openhab.binding.wmbus.tools/src/main/java/org/openhab/binding/wmbus/tools/processor/SkipCrcProcessor.java",
    "raw_url": "https://github.com/KuguHome/openhab-binding-wmbus/raw/09f6c0c24aa6ddd238436ac2891d8108562dad51/org.openhab.binding.wmbus.tools/src/main/java/org/openhab/binding/wmbus/tools/processor/SkipCrcProcessor.java",
    "contents_url": "https://api.github.com/repos/KuguHome/openhab-binding-wmbus/contents/org.openhab.binding.wmbus.tools/src/main/java/org/openhab/binding/wmbus/tools/processor/SkipCrcProcessor.java?ref=09f6c0c24aa6ddd238436ac2891d8108562dad51",
    "patch": "@@ -8,49 +8,47 @@\n  */\n package org.openhab.binding.wmbus.tools.processor;\n \n-import org.openhab.binding.wmbus.tools.Processor;\n-\n-import java.util.HashMap;\n import java.util.Map;\n \n+import org.openhab.binding.wmbus.tools.Processor;\n+\n public class SkipCrcProcessor implements Processor<String> {\n \n-  @Override\n-  public String process(String frame, Map<String, Object> context) {\n-    String strippedframe = \"\";\n-    int len = frame.length() / 2; // include all fields\n-\n-    //int lengthField = Integer.decode(frame.substring(0, 2));\n-    int ciField = parseInt(frame, 22, 24);\n-    boolean formatB = ciField == 0x72 || ciField == 0x7A;\n-\n-    if (formatB) {\n-      strippedframe += frame.substring(0, Math.min(18, frame.length() - 4));\n-      // block 1 + block 2 = 11 + ((16*n)+2) -- max 129 bytes\n-      if (len <= 129) {\n-        strippedframe += frame.substring(Math.min(22, frame.length()), frame.length() - 4);\n-      }\n-      // block 1 + block 2 + block 3= 11 + ((16*n)+2) + (16*n) -- bytes > 129\n-      else {\n-        strippedframe += frame.substring(22, 256);\n-        strippedframe += frame.substring(Math.min(260, frame.length()), frame.length() - 4);\n-      }\n-    } else {\n-      // assume that we starts counting from C-field\n-      strippedframe += frame.substring(0, Math.min(18, frame.length()));\n-      int position = 22;\n-      while (position < frame.length()) {\n-        strippedframe += frame.substring(position, Math.min(position + 32, frame.length()));\n-        position += 36;\n-      }\n-      strippedframe = strippedframe.substring(0,strippedframe.length()-4);\n+    @Override\n+    public String process(String frame, Map<String, Object> context) {\n+        String strippedframe = \"\";\n+        int len = frame.length() / 2; // include all fields\n+\n+        // int lengthField = Integer.decode(frame.substring(0, 2));\n+        int ciField = parseInt(frame, 22, 24);\n+        boolean formatB = ciField == 0x72 || ciField == 0x7A;\n+\n+        if (formatB) {\n+            strippedframe += frame.substring(0, Math.min(18, frame.length() - 4));\n+            // block 1 + block 2 = 11 + ((16*n)+2) -- max 129 bytes\n+            if (len <= 129) {\n+                strippedframe += frame.substring(Math.min(22, frame.length()), frame.length() - 4);\n+            }\n+            // block 1 + block 2 + block 3= 11 + ((16*n)+2) + (16*n) -- bytes > 129\n+            else {\n+                strippedframe += frame.substring(22, 256);\n+                strippedframe += frame.substring(Math.min(260, frame.length()), frame.length() - 4);\n+            }\n+        } else {\n+            // assume that we starts counting from C-field\n+            strippedframe += frame.substring(0, Math.min(18, frame.length()));\n+            int position = 22;\n+            while (position < frame.length()) {\n+                strippedframe += frame.substring(position, Math.min(position + 32, frame.length()));\n+                position += 36;\n+            }\n+            strippedframe = strippedframe.substring(0, strippedframe.length() - 4);\n+        }\n+\n+        return strippedframe;\n     }\n \n-    return strippedframe;\n-  }\n-\n-  private int parseInt(String frame, int startIndex, int endIndex) {\n-    return Integer.parseInt(frame.substring(startIndex, endIndex), 16);\n-  }\n-\n+    private int parseInt(String frame, int startIndex, int endIndex) {\n+        return Integer.parseInt(frame.substring(startIndex, endIndex), 16);\n+    }\n }"
  },
  {
    "sha": "b37c0305e4050959bb2bcd1313d1054d312de439",
    "filename": "org.openhab.binding.wmbus.tools/src/main/java/org/openhab/binding/wmbus/tools/processor/SkipProcessor.java",
    "status": "modified",
    "additions": 11,
    "deletions": 11,
    "changes": 22,
    "blob_url": "https://github.com/KuguHome/openhab-binding-wmbus/blob/09f6c0c24aa6ddd238436ac2891d8108562dad51/org.openhab.binding.wmbus.tools/src/main/java/org/openhab/binding/wmbus/tools/processor/SkipProcessor.java",
    "raw_url": "https://github.com/KuguHome/openhab-binding-wmbus/raw/09f6c0c24aa6ddd238436ac2891d8108562dad51/org.openhab.binding.wmbus.tools/src/main/java/org/openhab/binding/wmbus/tools/processor/SkipProcessor.java",
    "contents_url": "https://api.github.com/repos/KuguHome/openhab-binding-wmbus/contents/org.openhab.binding.wmbus.tools/src/main/java/org/openhab/binding/wmbus/tools/processor/SkipProcessor.java?ref=09f6c0c24aa6ddd238436ac2891d8108562dad51",
    "patch": "@@ -8,21 +8,21 @@\n  */\n package org.openhab.binding.wmbus.tools.processor;\n \n-import org.openhab.binding.wmbus.tools.Processor;\n-\n import java.util.Map;\n \n+import org.openhab.binding.wmbus.tools.Processor;\n+\n public class SkipProcessor implements Processor<String> {\n \n-  private final int amount;\n+    private final int amount;\n \n-  public SkipProcessor(int amount) {\n-    this.amount = amount;\n-  }\n+    public SkipProcessor(int amount) {\n+        this.amount = amount;\n+    }\n \n-  @Override\n-  public String process(String frame, Map<String, Object> context) {\n-    // one byte is 2 characters in hex representation\n-    return frame.substring(amount * 2);\n-  }\n+    @Override\n+    public String process(String frame, Map<String, Object> context) {\n+        // one byte is 2 characters in hex representation\n+        return frame.substring(amount * 2);\n+    }\n }"
  },
  {
    "sha": "947e619a83bf57be0436907a24aee4f825bbbc46",
    "filename": "org.openhab.binding.wmbus.tools/src/test/java/org/openhab/binding/wmbus/tools/processor/RecalculateLengthTest.java",
    "status": "modified",
    "additions": 18,
    "deletions": 23,
    "changes": 41,
    "blob_url": "https://github.com/KuguHome/openhab-binding-wmbus/blob/09f6c0c24aa6ddd238436ac2891d8108562dad51/org.openhab.binding.wmbus.tools/src/test/java/org/openhab/binding/wmbus/tools/processor/RecalculateLengthTest.java",
    "raw_url": "https://github.com/KuguHome/openhab-binding-wmbus/raw/09f6c0c24aa6ddd238436ac2891d8108562dad51/org.openhab.binding.wmbus.tools/src/test/java/org/openhab/binding/wmbus/tools/processor/RecalculateLengthTest.java",
    "contents_url": "https://api.github.com/repos/KuguHome/openhab-binding-wmbus/contents/org.openhab.binding.wmbus.tools/src/test/java/org/openhab/binding/wmbus/tools/processor/RecalculateLengthTest.java?ref=09f6c0c24aa6ddd238436ac2891d8108562dad51",
    "patch": "@@ -1,59 +1,54 @@\n package org.openhab.binding.wmbus.tools.processor;\n \n-import org.eclipse.smarthome.core.util.HexUtils;\n-import org.junit.Test;\n-import org.openmuc.jmbus.DecodingException;\n-import org.openmuc.jmbus.wireless.VirtualWMBusMessageHelper;\n-import org.openmuc.jmbus.wireless.WMBusMessage;\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Assertions.assertThatThrownBy;\n \n import java.util.Collections;\n import java.util.HashMap;\n import java.util.Map;\n \n-import static org.assertj.core.api.Assertions.assertThat;\n-import static org.assertj.core.api.Assertions.assertThatThrownBy;\n-\n+import org.junit.Test;\n+import org.openhab.core.util.HexUtils;\n+import org.openmuc.jmbus.DecodingException;\n+import org.openmuc.jmbus.wireless.VirtualWMBusMessageHelper;\n+import org.openmuc.jmbus.wireless.WMBusMessage;\n \n public class RecalculateLengthTest {\n \n     RecalculateLength recalculateLength = new RecalculateLength();\n     Map<String, Object> context = new HashMap<>();\n \n-   @Test\n+    @Test\n     public void testValidFrame() throws DecodingException {\n         String frame = \"2e44972682213893071A7AB80020A56BE69947E41B7346595CCA02F2BF0E62C906B80BD18240811FD4879DA1296D3F\";\n         String expectedFrame = \"2e44972682213893071A7AB80020A56BE69947E41B7346595CCA02F2BF0E62C906B80BD18240811FD4879DA1296D3F\";\n-        assertThat(recalculateLength.process(frame, context))\n-            .isEqualTo(expectedFrame);\n+        assertThat(recalculateLength.process(frame, context)).isEqualTo(expectedFrame);\n         byte[] payload = HexUtils.hexToBytes(expectedFrame);\n         WMBusMessage message = VirtualWMBusMessageHelper.decode(payload, 100, Collections.emptyMap());\n-        assertThatThrownBy(() -> message.getVariableDataResponse().decode())\n-            .isInstanceOf(DecodingException.class).hasMessageContaining(\"address key\");\n+        assertThatThrownBy(() -> message.getVariableDataResponse().decode()).isInstanceOf(DecodingException.class)\n+                .hasMessageContaining(\"address key\");\n     }\n \n     @Test\n     public void testShortHeader() throws DecodingException {\n         String frame = \"3244972682213893071A7AB80040A56BE69947E41B7346595CCA02F2BF0E62C906B80BD18240811FD4879DA1296D3F4279385A\";\n         String expectedFrame = \"2e44972682213893071A7AB80020A56BE69947E41B7346595CCA02F2BF0E62C906B80BD18240811FD4879DA1296D3F\";\n-        assertThat(recalculateLength.process(frame, context))\n-                .isEqualTo(expectedFrame);\n+        assertThat(recalculateLength.process(frame, context)).isEqualTo(expectedFrame);\n         byte[] payload = HexUtils.hexToBytes(expectedFrame);\n         WMBusMessage message = VirtualWMBusMessageHelper.decode(payload, 100, Collections.emptyMap());\n-        assertThatThrownBy(() -> message.getVariableDataResponse().decode())\n-                .isInstanceOf(DecodingException.class).hasMessageContaining(\"address key\");\n+        assertThatThrownBy(() -> message.getVariableDataResponse().decode()).isInstanceOf(DecodingException.class)\n+                .hasMessageContaining(\"address key\");\n     }\n \n     @Test\n     public void testLongHeader() throws DecodingException {\n         String frame = \"3244C5140401806003077261885616C51400075B0B90054CC7D04A56C6919495f6565704D1D9085134926D705D40D2EE699337\";\n         String expectedFrame = \"2644C5140401806003077261885616C51400075B0B10054CC7D04A56C6919495f6565704D1D908\";\n-        assertThat(recalculateLength.process(frame, context))\n-                .isEqualTo(expectedFrame);\n+        assertThat(recalculateLength.process(frame, context)).isEqualTo(expectedFrame);\n         byte[] payload = HexUtils.hexToBytes(expectedFrame);\n         WMBusMessage message = VirtualWMBusMessageHelper.decode(payload, 100, Collections.emptyMap());\n         System.out.println(message.getVariableDataResponse().getNumberOfEncryptedBlocks());\n-        assertThatThrownBy(() -> message.getVariableDataResponse().decode())\n-                .isInstanceOf(DecodingException.class).hasMessageContaining(\"secondary address\");\n+        assertThatThrownBy(() -> message.getVariableDataResponse().decode()).isInstanceOf(DecodingException.class)\n+                .hasMessageContaining(\"secondary address\");\n     }\n-\n-}\n\\ No newline at end of file\n+}"
  },
  {
    "sha": "811441c5f37101ffc3bff0613877f4d831545b33",
    "filename": "org.openhab.binding.wmbus.tools/src/test/java/org/openhab/binding/wmbus/tools/processor/SkipCrcProcessorTest.java",
    "status": "modified",
    "additions": 27,
    "deletions": 26,
    "changes": 53,
    "blob_url": "https://github.com/KuguHome/openhab-binding-wmbus/blob/09f6c0c24aa6ddd238436ac2891d8108562dad51/org.openhab.binding.wmbus.tools/src/test/java/org/openhab/binding/wmbus/tools/processor/SkipCrcProcessorTest.java",
    "raw_url": "https://github.com/KuguHome/openhab-binding-wmbus/raw/09f6c0c24aa6ddd238436ac2891d8108562dad51/org.openhab.binding.wmbus.tools/src/test/java/org/openhab/binding/wmbus/tools/processor/SkipCrcProcessorTest.java",
    "contents_url": "https://api.github.com/repos/KuguHome/openhab-binding-wmbus/contents/org.openhab.binding.wmbus.tools/src/test/java/org/openhab/binding/wmbus/tools/processor/SkipCrcProcessorTest.java?ref=09f6c0c24aa6ddd238436ac2891d8108562dad51",
    "patch": "@@ -2,39 +2,40 @@\n \n import java.util.HashMap;\n import java.util.Map;\n-import junit.framework.TestCase;\n+\n import org.junit.Test;\n \n-public class SkipCrcProcessorTest extends TestCase {\n+import junit.framework.TestCase;\n \n-  SkipCrcProcessor stripCrc = new SkipCrcProcessor();\n-  Map<String, Object> context = new HashMap<>();\n+public class SkipCrcProcessorTest extends TestCase {\n \n-  @Test\n-  public void testFrameFormatB() {\n-    String input  = \"11111111111111111100007A1111111111111111111111111111110000\";\n-    String output = \"1111111111111111117A111111111111111111111111111111\";\n-    String result = stripCrc.process(input, context);\n+    SkipCrcProcessor stripCrc = new SkipCrcProcessor();\n+    Map<String, Object> context = new HashMap<>();\n \n-    assertEquals(output, result);\n-  }\n+    @Test\n+    public void testFrameFormatB() {\n+        String input = \"11111111111111111100007A1111111111111111111111111111110000\";\n+        String output = \"1111111111111111117A111111111111111111111111111111\";\n+        String result = stripCrc.process(input, context);\n \n-  @Test\n-  public void testFrame1() {\n-    String input  = \"111111111111111111000011111111111111111111111111110000\";\n-    String output = \"1111111111111111111111111111111111111111111111\";\n-    String result = stripCrc.process(input, context);\n+        assertEquals(output, result);\n+    }\n \n-    assertEquals(output, result);\n-  }\n+    @Test\n+    public void testFrame1() {\n+        String input = \"111111111111111111000011111111111111111111111111110000\";\n+        String output = \"1111111111111111111111111111111111111111111111\";\n+        String result = stripCrc.process(input, context);\n \n-  @Test\n-  public void testFrame3() {\n-    String input  = \"11111111111111111100001111111111111111111111111111111100001111111111110000\";\n-    String output = \"11111111111111111111111111111111111111111111111111111111111111\";\n-    String result = stripCrc.process(input, context);\n+        assertEquals(output, result);\n+    }\n \n-    assertEquals(output, result);\n-  }\n+    @Test\n+    public void testFrame3() {\n+        String input = \"11111111111111111100001111111111111111111111111111111100001111111111110000\";\n+        String output = \"11111111111111111111111111111111111111111111111111111111111111\";\n+        String result = stripCrc.process(input, context);\n \n-}\n\\ No newline at end of file\n+        assertEquals(output, result);\n+    }\n+}"
  },
  {
    "sha": "a53dcf1150edbbdd28ea6710296e48afc30a5ad0",
    "filename": "org.openhab.binding.wmbus/lib/jmbus-3.1.1.sp2.jar",
    "status": "removed",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/KuguHome/openhab-binding-wmbus/blob/a9087a054ec3d17aff27376de40309f0e6dd72de/org.openhab.binding.wmbus/lib/jmbus-3.1.1.sp2.jar",
    "raw_url": "https://github.com/KuguHome/openhab-binding-wmbus/raw/a9087a054ec3d17aff27376de40309f0e6dd72de/org.openhab.binding.wmbus/lib/jmbus-3.1.1.sp2.jar",
    "contents_url": "https://api.github.com/repos/KuguHome/openhab-binding-wmbus/contents/org.openhab.binding.wmbus/lib/jmbus-3.1.1.sp2.jar?ref=a9087a054ec3d17aff27376de40309f0e6dd72de"
  },
  {
    "sha": "5c2ef4e54130af13c994d667d870abd3e4ba8d24",
    "filename": "org.openhab.binding.wmbus/pom.xml",
    "status": "modified",
    "additions": 51,
    "deletions": 127,
    "changes": 178,
    "blob_url": "https://github.com/KuguHome/openhab-binding-wmbus/blob/09f6c0c24aa6ddd238436ac2891d8108562dad51/org.openhab.binding.wmbus/pom.xml",
    "raw_url": "https://github.com/KuguHome/openhab-binding-wmbus/raw/09f6c0c24aa6ddd238436ac2891d8108562dad51/org.openhab.binding.wmbus/pom.xml",
    "contents_url": "https://api.github.com/repos/KuguHome/openhab-binding-wmbus/contents/org.openhab.binding.wmbus/pom.xml?ref=09f6c0c24aa6ddd238436ac2891d8108562dad51",
    "patch": "@@ -1,129 +1,53 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n-    <modelVersion>4.0.0</modelVersion>\n-\n-    <parent>\n-        <groupId>org.openhab.binding</groupId>\n-        <artifactId>wmbus</artifactId>\n-        <version>2.5.0-SNAPSHOT</version>\n-    </parent>\n-\n-    <groupId>org.openhab.binding</groupId>\n-    <artifactId>org.openhab.binding.wmbus</artifactId>\n-\n-    <name>WMBus Binding</name>\n-    \n-    <properties>\n-        <report.fail.on.error>false</report.fail.on.error>\n-        <bnd.exportpackage>org.openmuc.jmbus.*</bnd.exportpackage>\n-    </properties>\n-    \n-    <dependencies>\n-        <dependency>\n-            <groupId>com.google.guava</groupId>\n-            <artifactId>guava</artifactId>\n-            <version>20.0</version>\n-            <scope>provided</scope>\n-        </dependency>\n-\n-        <!-- https://mvnrepository.com/artifact/com.neuronrobotics/nrjavaserial -->\n-        <dependency>\n-            <groupId>com.neuronrobotics</groupId>\n-            <artifactId>nrjavaserial</artifactId>\n-            <version>3.13.0</version>\n-        </dependency>\n-\n-        <!-- https://mvnrepository.com/artifact/org.openmuc/jmbus -->\n-\n-<!--\n-        <dependency>\n-            <groupId>org.openmuc</groupId>\n-            <artifactId>jmbus</artifactId>\n-            <version>3.1.1</version>\n-        </dependency>\n--->\n-\n-        <dependency>\n-            <groupId>org.openmuc</groupId>\n-            <artifactId>jrxtx</artifactId>\n-            <version>1.0.1</version>\n-        </dependency>\n-\n-        <dependency>\n-            <groupId>org.openmuc</groupId>\n-            <artifactId>jmbus</artifactId>\n-            <version>3.1.1.sp2</version>\n-            <scope>system</scope>\n-            <systemPath>${basedir}/lib/jmbus-3.1.1.sp2.jar</systemPath>\n-        </dependency>\n-\n-        <dependency>\n-            <groupId>junit</groupId>\n-            <artifactId>junit</artifactId>\n-            <version>4.12</version>\n-            <scope>test</scope>\n-        </dependency>\n-        <dependency>\n-            <groupId>org.assertj</groupId>\n-            <artifactId>assertj-core</artifactId>\n-            <version>3.11.1</version>\n-            <scope>test</scope>\n-        </dependency>\n-        <dependency>\n-            <groupId>org.slf4j</groupId>\n-            <artifactId>slf4j-simple</artifactId>\n-            <version>1.7.2</version>\n-            <scope>test</scope>\n-        </dependency>\n-        <dependency>\n-            <groupId>org.mockito</groupId>\n-            <artifactId>mockito-core</artifactId>\n-            <version>2.23.0</version>\n-            <scope>test</scope>\n-        </dependency>\n-\n-        <dependency>\n-            <groupId>org.openhab.core.bom</groupId>\n-            <artifactId>org.openhab.core.bom.compile</artifactId>\n-            <type>pom</type>\n-            <scope>provided</scope>\n-        </dependency>\n-        <dependency>\n-            <groupId>org.openhab.core.bom</groupId>\n-            <artifactId>org.openhab.core.bom.openhab-core</artifactId>\n-            <type>pom</type>\n-            <scope>provided</scope>\n-        </dependency>\n-        <dependency>\n-            <groupId>org.openhab.core.bom</groupId>\n-            <artifactId>org.openhab.core.bom.test</artifactId>\n-            <type>pom</type>\n-            <scope>test</scope>\n-        </dependency>\n-    </dependencies>\n-\n-    <build>\n-        <plugins>\n-            <plugin>\n-                <groupId>org.apache.maven.plugins</groupId>\n-                <artifactId>maven-surefire-plugin</artifactId>\n-                <version>3.0.0-M1</version>\n-                <executions>\n-                    <execution>\n-                        <id>test</id>\n-                        <phase>test</phase>\n-                        <configuration>\n-                            <includes>\n-                                <include>**/*Test.java</include>\n-                            </includes>\n-                        </configuration>\n-                        <goals>\n-                            <goal>test</goal>\n-                        </goals>\n-                    </execution>\n-                </executions>\n-            </plugin>\n-        </plugins>\n-    </build>\n+<project xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <groupId>org.openhab.addons.bundles</groupId>\n+    <artifactId>wmbus</artifactId>\n+    <version>3.1.0-SNAPSHOT</version>\n+  </parent>\n+\n+  <groupId>org.openhab.addons.bundles</groupId>\n+  <artifactId>org.openhab.binding.wmbus</artifactId>\n+\n+  <name>WMBus Binding</name>\n+  <properties>\n+    <report.fail.on.error>false</report.fail.on.error>\n+    <bnd.exportpackage>org.openhab.core.io.transport.serial</bnd.exportpackage>\n+  </properties>\n+  <dependencies>\n+    <dependency>\n+      <groupId>junit</groupId>\n+      <artifactId>junit</artifactId>\n+      <version>4.12</version>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.assertj</groupId>\n+      <artifactId>assertj-core</artifactId>\n+      <version>3.11.1</version>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.slf4j</groupId>\n+      <artifactId>slf4j-simple</artifactId>\n+      <version>1.7.2</version>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.mockito</groupId>\n+      <artifactId>mockito-core</artifactId>\n+      <version>2.23.0</version>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>com.google.guava</groupId>\n+      <artifactId>guava</artifactId>\n+      <version>20.0</version>\n+      <scope>provided</scope>\n+    </dependency>\n+  </dependencies>\n </project>"
  },
  {
    "sha": "8aa0a06d8bb66672b1cc0e0612b03e482eeeff41",
    "filename": "org.openhab.binding.wmbus/src/main/feature/feature.xml",
    "status": "added",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/KuguHome/openhab-binding-wmbus/blob/09f6c0c24aa6ddd238436ac2891d8108562dad51/org.openhab.binding.wmbus/src/main/feature/feature.xml",
    "raw_url": "https://github.com/KuguHome/openhab-binding-wmbus/raw/09f6c0c24aa6ddd238436ac2891d8108562dad51/org.openhab.binding.wmbus/src/main/feature/feature.xml",
    "contents_url": "https://api.github.com/repos/KuguHome/openhab-binding-wmbus/contents/org.openhab.binding.wmbus/src/main/feature/feature.xml?ref=09f6c0c24aa6ddd238436ac2891d8108562dad51",
    "patch": "@@ -0,0 +1,9 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n+<features name=\"org.openhab.binding.wmbus-${project.version}\" xmlns=\"http://karaf.apache.org/xmlns/features/v1.4.0\">\r\n+\t<repository>mvn:org.openhab.core.features.karaf/org.openhab.core.features.karaf.openhab-core/${ohc.version}/xml/features</repository>\r\n+\r\n+\t<feature name=\"openhab-binding-wmbus\" description=\"wmbus Binding\" version=\"${project.version}\">\r\n+\t\t<feature>openhab-runtime-base</feature>\r\n+\t\t<bundle start-level=\"80\">mvn:org.openhab.addons.bundles/org.openhab.binding.wmbus/${project.version}</bundle>\r\n+\t</feature>\r\n+</features>\r"
  },
  {
    "sha": "014e78104835fb8bf6c7bacc46313f362adbf1fd",
    "filename": "org.openhab.binding.wmbus/src/main/history/dependencies.xml",
    "status": "added",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/KuguHome/openhab-binding-wmbus/blob/09f6c0c24aa6ddd238436ac2891d8108562dad51/org.openhab.binding.wmbus/src/main/history/dependencies.xml",
    "raw_url": "https://github.com/KuguHome/openhab-binding-wmbus/raw/09f6c0c24aa6ddd238436ac2891d8108562dad51/org.openhab.binding.wmbus/src/main/history/dependencies.xml",
    "contents_url": "https://api.github.com/repos/KuguHome/openhab-binding-wmbus/contents/org.openhab.binding.wmbus/src/main/history/dependencies.xml?ref=09f6c0c24aa6ddd238436ac2891d8108562dad51",
    "patch": "@@ -0,0 +1,9 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n+<features xmlns=\"http://karaf.apache.org/xmlns/features/v1.6.0\" name=\"org.openhab.binding.wmbus-3.1.0-SNAPSHOT\">\n+    <feature version=\"0.0.0\">\n+        <feature>openhab-runtime-base</feature>\n+        <feature>wrap</feature>\n+        <bundle>mvn:org.openhab.addons.bundles/org.openhab.binding.wmbus/3.1.0-SNAPSHOT</bundle>\n+        <bundle>wrap:mvn:org.lastnpe.eea/eea-all/2.2.1</bundle>\n+    </feature>\n+</features>"
  },
  {
    "sha": "3b07cba2987e17faceb4da4db7628efd73c8e318",
    "filename": "org.openhab.binding.wmbus/src/main/java/org/openhab/binding/wmbus/BindingConfiguration.java",
    "status": "modified",
    "additions": 9,
    "deletions": 6,
    "changes": 15,
    "blob_url": "https://github.com/KuguHome/openhab-binding-wmbus/blob/09f6c0c24aa6ddd238436ac2891d8108562dad51/org.openhab.binding.wmbus/src/main/java/org/openhab/binding/wmbus/BindingConfiguration.java",
    "raw_url": "https://github.com/KuguHome/openhab-binding-wmbus/raw/09f6c0c24aa6ddd238436ac2891d8108562dad51/org.openhab.binding.wmbus/src/main/java/org/openhab/binding/wmbus/BindingConfiguration.java",
    "contents_url": "https://api.github.com/repos/KuguHome/openhab-binding-wmbus/contents/org.openhab.binding.wmbus/src/main/java/org/openhab/binding/wmbus/BindingConfiguration.java?ref=09f6c0c24aa6ddd238436ac2891d8108562dad51",
    "patch": "@@ -1,10 +1,14 @@\n /**\n- * Copyright (c) 2010-2018 by the respective copyright holders.\n+ * Copyright (c) 2010-2021 Contributors to the openHAB project\n  *\n- * All rights reserved. This program and the accompanying materials\n- * are made available under the terms of the Eclipse Public License v1.0\n- * which accompanies this distribution, and is available at\n- * http://www.eclipse.org/legal/epl-v10.html\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n  */\n package org.openhab.binding.wmbus;\n \n@@ -18,5 +22,4 @@\n     Long getTimeToLive();\n \n     Boolean getIncludeBridgeUID();\n-\n }"
  },
  {
    "sha": "be8055fafb2faec9be7fbfe3d57dca7e47c24b84",
    "filename": "org.openhab.binding.wmbus/src/main/java/org/openhab/binding/wmbus/RecordType.java",
    "status": "modified",
    "additions": 12,
    "deletions": 8,
    "changes": 20,
    "blob_url": "https://github.com/KuguHome/openhab-binding-wmbus/blob/09f6c0c24aa6ddd238436ac2891d8108562dad51/org.openhab.binding.wmbus/src/main/java/org/openhab/binding/wmbus/RecordType.java",
    "raw_url": "https://github.com/KuguHome/openhab-binding-wmbus/raw/09f6c0c24aa6ddd238436ac2891d8108562dad51/org.openhab.binding.wmbus/src/main/java/org/openhab/binding/wmbus/RecordType.java",
    "contents_url": "https://api.github.com/repos/KuguHome/openhab-binding-wmbus/contents/org.openhab.binding.wmbus/src/main/java/org/openhab/binding/wmbus/RecordType.java?ref=09f6c0c24aa6ddd238436ac2891d8108562dad51",
    "patch": "@@ -1,17 +1,21 @@\n /**\n- * Copyright (c) 2010-2018 by the respective copyright holders.\n+ * Copyright (c) 2010-2021 Contributors to the openHAB project\n  *\n- * All rights reserved. This program and the accompanying materials\n- * are made available under the terms of the Eclipse Public License v1.0\n- * which accompanies this distribution, and is available at\n- * http://www.eclipse.org/legal/epl-v10.html\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n  */\n \n package org.openhab.binding.wmbus;\n \n import java.util.Arrays;\n \n-import org.eclipse.smarthome.core.util.HexUtils;\n+import org.openhab.core.util.HexUtils;\n import org.openmuc.jmbus.DataRecord;\n \n /**\n@@ -29,7 +33,8 @@\n      * Below combination of dib/vib is intentionally invalid. It is a mark for manufacturer specific data which can be\n      * appended as part of standard payload in the frame.\n      */\n-    public final static RecordType MANUFACTURER_DATA  = new RecordType(new byte[] {0x0, 0x0, 0x0, 0x0}, new byte[] {0x0, 0x0, 0x0, 0x0});\n+    public final static RecordType MANUFACTURER_DATA = new RecordType(new byte[] { 0x0, 0x0, 0x0, 0x0 },\n+            new byte[] { 0x0, 0x0, 0x0, 0x0 });\n \n     private final byte[] dib;\n     private final byte[] vib;\n@@ -97,5 +102,4 @@ public boolean equals(Object obj) {\n         }\n         return true;\n     }\n-\n }"
  },
  {
    "sha": "bd43f1ff388bd37b76a70f8426f6895a1379730b",
    "filename": "org.openhab.binding.wmbus/src/main/java/org/openhab/binding/wmbus/UnitRegistry.java",
    "status": "modified",
    "additions": 9,
    "deletions": 6,
    "changes": 15,
    "blob_url": "https://github.com/KuguHome/openhab-binding-wmbus/blob/09f6c0c24aa6ddd238436ac2891d8108562dad51/org.openhab.binding.wmbus/src/main/java/org/openhab/binding/wmbus/UnitRegistry.java",
    "raw_url": "https://github.com/KuguHome/openhab-binding-wmbus/raw/09f6c0c24aa6ddd238436ac2891d8108562dad51/org.openhab.binding.wmbus/src/main/java/org/openhab/binding/wmbus/UnitRegistry.java",
    "contents_url": "https://api.github.com/repos/KuguHome/openhab-binding-wmbus/contents/org.openhab.binding.wmbus/src/main/java/org/openhab/binding/wmbus/UnitRegistry.java?ref=09f6c0c24aa6ddd238436ac2891d8108562dad51",
    "patch": "@@ -1,10 +1,14 @@\n /**\n- * Copyright (c) 2010-2018 by the respective copyright holders.\n+ * Copyright (c) 2010-2021 Contributors to the openHAB project\n  *\n- * All rights reserved. This program and the accompanying materials\n- * are made available under the terms of the Eclipse Public License v1.0\n- * which accompanies this distribution, and is available at\n- * http://www.eclipse.org/legal/epl-v10.html\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n  */\n package org.openhab.binding.wmbus;\n \n@@ -40,5 +44,4 @@\n      * @return Optional containing quantity type according to unit mapping.\n      */\n     Optional<Class<? extends Quantity<?>>> quantity(@Nullable DlmsUnit wmbusType);\n-\n }"
  },
  {
    "sha": "808967b65f8497f617894f2821248cdc58e33c42",
    "filename": "org.openhab.binding.wmbus/src/main/java/org/openhab/binding/wmbus/WMBusBindingConstants.java",
    "status": "modified",
    "additions": 12,
    "deletions": 9,
    "changes": 21,
    "blob_url": "https://github.com/KuguHome/openhab-binding-wmbus/blob/09f6c0c24aa6ddd238436ac2891d8108562dad51/org.openhab.binding.wmbus/src/main/java/org/openhab/binding/wmbus/WMBusBindingConstants.java",
    "raw_url": "https://github.com/KuguHome/openhab-binding-wmbus/raw/09f6c0c24aa6ddd238436ac2891d8108562dad51/org.openhab.binding.wmbus/src/main/java/org/openhab/binding/wmbus/WMBusBindingConstants.java",
    "contents_url": "https://api.github.com/repos/KuguHome/openhab-binding-wmbus/contents/org.openhab.binding.wmbus/src/main/java/org/openhab/binding/wmbus/WMBusBindingConstants.java?ref=09f6c0c24aa6ddd238436ac2891d8108562dad51",
    "patch": "@@ -1,19 +1,23 @@\n /**\n- * Copyright (c) 2010-2018 by the respective copyright holders.\n+ * Copyright (c) 2010-2021 Contributors to the openHAB project\n  *\n- * All rights reserved. This program and the accompanying materials\n- * are made available under the terms of the Eclipse Public License v1.0\n- * which accompanies this distribution, and is available at\n- * http://www.eclipse.org/legal/epl-v10.html\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n  */\n package org.openhab.binding.wmbus;\n \n import java.util.Set;\n import java.util.concurrent.TimeUnit;\n import java.util.function.Function;\n \n-import org.eclipse.smarthome.core.thing.ThingTypeUID;\n-import org.eclipse.smarthome.core.thing.type.ChannelTypeUID;\n+import org.openhab.core.thing.ThingTypeUID;\n+import org.openhab.core.thing.type.ChannelTypeUID;\n import org.openmuc.jmbus.DeviceType;\n \n import com.google.common.collect.ImmutableSet;\n@@ -42,7 +46,7 @@\n     // List all Thing Type UIDs, related to the WMBus Binding\n     public final static ThingTypeUID THING_TYPE_BRIDGE = new ThingTypeUID(BINDING_ID, THING_TYPE_NAME_BRIDGE);\n     public final static ThingTypeUID THING_TYPE_VIRTUAL_BRIDGE = new ThingTypeUID(BINDING_ID,\n-        THING_TYPE_NAME_VIRTUAL_BRIDGE);\n+            THING_TYPE_NAME_VIRTUAL_BRIDGE);\n \n     public final static ThingTypeUID THING_TYPE_METER = new ThingTypeUID(BINDING_ID, THING_TYPE_NAME_METER);\n     public final static ThingTypeUID THING_TYPE_ENCRYPTED_METER = new ThingTypeUID(BINDING_ID,\n@@ -121,5 +125,4 @@\n \n     public static final String CONFKEY_BINDING_TIME_TO_LIVE = \"timeToLive\";\n     public static final String CONFKEY_BINDING_INCLUDE_BRIDGE_UID = \"includeBridgeUID\";\n-\n }"
  },
  {
    "sha": "9bbb7ec75adb9bbbeadb2ac9ac0763fa6a4014e5",
    "filename": "org.openhab.binding.wmbus/src/main/java/org/openhab/binding/wmbus/WMBusCompanyIdentifiers.java",
    "status": "modified",
    "additions": 9,
    "deletions": 6,
    "changes": 15,
    "blob_url": "https://github.com/KuguHome/openhab-binding-wmbus/blob/09f6c0c24aa6ddd238436ac2891d8108562dad51/org.openhab.binding.wmbus/src/main/java/org/openhab/binding/wmbus/WMBusCompanyIdentifiers.java",
    "raw_url": "https://github.com/KuguHome/openhab-binding-wmbus/raw/09f6c0c24aa6ddd238436ac2891d8108562dad51/org.openhab.binding.wmbus/src/main/java/org/openhab/binding/wmbus/WMBusCompanyIdentifiers.java",
    "contents_url": "https://api.github.com/repos/KuguHome/openhab-binding-wmbus/contents/org.openhab.binding.wmbus/src/main/java/org/openhab/binding/wmbus/WMBusCompanyIdentifiers.java?ref=09f6c0c24aa6ddd238436ac2891d8108562dad51",
    "patch": "@@ -1,10 +1,14 @@\n /**\n- * Copyright (c) 2010-2018 by the respective copyright holders.\n+ * Copyright (c) 2010-2021 Contributors to the openHAB project\n  *\n- * All rights reserved. This program and the accompanying materials\n- * are made available under the terms of the Eclipse Public License v1.0\n- * which accompanies this distribution, and is available at\n- * http://www.eclipse.org/legal/epl-v10.html\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n  */\n package org.openhab.binding.wmbus;\n \n@@ -48,5 +52,4 @@\n             return null;\n         }\n     }\n-\n }"
  },
  {
    "sha": "bddadddec118de894314dbae0ccf666253b2254a",
    "filename": "org.openhab.binding.wmbus/src/main/java/org/openhab/binding/wmbus/WMBusDevice.java",
    "status": "modified",
    "additions": 11,
    "deletions": 7,
    "changes": 18,
    "blob_url": "https://github.com/KuguHome/openhab-binding-wmbus/blob/09f6c0c24aa6ddd238436ac2891d8108562dad51/org.openhab.binding.wmbus/src/main/java/org/openhab/binding/wmbus/WMBusDevice.java",
    "raw_url": "https://github.com/KuguHome/openhab-binding-wmbus/raw/09f6c0c24aa6ddd238436ac2891d8108562dad51/org.openhab.binding.wmbus/src/main/java/org/openhab/binding/wmbus/WMBusDevice.java",
    "contents_url": "https://api.github.com/repos/KuguHome/openhab-binding-wmbus/contents/org.openhab.binding.wmbus/src/main/java/org/openhab/binding/wmbus/WMBusDevice.java?ref=09f6c0c24aa6ddd238436ac2891d8108562dad51",
    "patch": "@@ -1,16 +1,20 @@\n /**\n- * Copyright (c) 2010-2018 by the respective copyright holders.\n+ * Copyright (c) 2010-2021 Contributors to the openHAB project\n  *\n- * All rights reserved. This program and the accompanying materials\n- * are made available under the terms of the Eclipse Public License v1.0\n- * which accompanies this distribution, and is available at\n- * http://www.eclipse.org/legal/epl-v10.html\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n  */\n \n package org.openhab.binding.wmbus;\n \n-import org.eclipse.smarthome.core.util.HexUtils;\n import org.openhab.binding.wmbus.handler.WMBusAdapter;\n+import org.openhab.core.util.HexUtils;\n import org.openmuc.jmbus.DataRecord;\n import org.openmuc.jmbus.DecodingException;\n import org.openmuc.jmbus.EncryptionMode;\n@@ -112,4 +116,4 @@ public String toString() {\n     public byte[] getRawData() {\n         return rawData;\n     }\n-}\n\\ No newline at end of file\n+}"
  },
  {
    "sha": "42000dcaa96d2f32df6a4265bfb9a878a8785ac6",
    "filename": "org.openhab.binding.wmbus/src/main/java/org/openhab/binding/wmbus/config/DateFieldMode.java",
    "status": "modified",
    "additions": 10,
    "deletions": 6,
    "changes": 16,
    "blob_url": "https://github.com/KuguHome/openhab-binding-wmbus/blob/09f6c0c24aa6ddd238436ac2891d8108562dad51/org.openhab.binding.wmbus/src/main/java/org/openhab/binding/wmbus/config/DateFieldMode.java",
    "raw_url": "https://github.com/KuguHome/openhab-binding-wmbus/raw/09f6c0c24aa6ddd238436ac2891d8108562dad51/org.openhab.binding.wmbus/src/main/java/org/openhab/binding/wmbus/config/DateFieldMode.java",
    "contents_url": "https://api.github.com/repos/KuguHome/openhab-binding-wmbus/contents/org.openhab.binding.wmbus/src/main/java/org/openhab/binding/wmbus/config/DateFieldMode.java?ref=09f6c0c24aa6ddd238436ac2891d8108562dad51",
    "patch": "@@ -1,10 +1,14 @@\n /**\n- * Copyright (c) 2010-2019 by the respective copyright holders.\n- * <p>\n- * All rights reserved. This program and the accompanying materials\n- * are made available under the terms of the Eclipse Public License v1.0\n- * which accompanies this distribution, and is available at\n- * http://www.eclipse.org/legal/epl-v10.html\n+ * Copyright (c) 2010-2021 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n  */\n package org.openhab.binding.wmbus.config;\n "
  },
  {
    "sha": "645ec54bb256c9dd2077ce0fa243c7f7d46fdaac",
    "filename": "org.openhab.binding.wmbus/src/main/java/org/openhab/binding/wmbus/config/StickModel.java",
    "status": "modified",
    "additions": 10,
    "deletions": 6,
    "changes": 16,
    "blob_url": "https://github.com/KuguHome/openhab-binding-wmbus/blob/09f6c0c24aa6ddd238436ac2891d8108562dad51/org.openhab.binding.wmbus/src/main/java/org/openhab/binding/wmbus/config/StickModel.java",
    "raw_url": "https://github.com/KuguHome/openhab-binding-wmbus/raw/09f6c0c24aa6ddd238436ac2891d8108562dad51/org.openhab.binding.wmbus/src/main/java/org/openhab/binding/wmbus/config/StickModel.java",
    "contents_url": "https://api.github.com/repos/KuguHome/openhab-binding-wmbus/contents/org.openhab.binding.wmbus/src/main/java/org/openhab/binding/wmbus/config/StickModel.java?ref=09f6c0c24aa6ddd238436ac2891d8108562dad51",
    "patch": "@@ -1,10 +1,14 @@\n /**\n- * Copyright (c) 2010-2019 by the respective copyright holders.\n- * <p>\n- * All rights reserved. This program and the accompanying materials\n- * are made available under the terms of the Eclipse Public License v1.0\n- * which accompanies this distribution, and is available at\n- * http://www.eclipse.org/legal/epl-v10.html\n+ * Copyright (c) 2010-2021 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n  */\n package org.openhab.binding.wmbus.config;\n "
  },
  {
    "sha": "91e47786c4a642b2300de0fb79e29035505dfc05",
    "filename": "org.openhab.binding.wmbus/src/main/java/org/openhab/binding/wmbus/config/WMBusBridgeConfig.java",
    "status": "modified",
    "additions": 10,
    "deletions": 7,
    "changes": 17,
    "blob_url": "https://github.com/KuguHome/openhab-binding-wmbus/blob/09f6c0c24aa6ddd238436ac2891d8108562dad51/org.openhab.binding.wmbus/src/main/java/org/openhab/binding/wmbus/config/WMBusBridgeConfig.java",
    "raw_url": "https://github.com/KuguHome/openhab-binding-wmbus/raw/09f6c0c24aa6ddd238436ac2891d8108562dad51/org.openhab.binding.wmbus/src/main/java/org/openhab/binding/wmbus/config/WMBusBridgeConfig.java",
    "contents_url": "https://api.github.com/repos/KuguHome/openhab-binding-wmbus/contents/org.openhab.binding.wmbus/src/main/java/org/openhab/binding/wmbus/config/WMBusBridgeConfig.java?ref=09f6c0c24aa6ddd238436ac2891d8108562dad51",
    "patch": "@@ -1,10 +1,14 @@\n /**\n- * Copyright (c) 2010-2019 by the respective copyright holders.\n- * <p>\n- * All rights reserved. This program and the accompanying materials\n- * are made available under the terms of the Eclipse Public License v1.0\n- * which accompanies this distribution, and is available at\n- * http://www.eclipse.org/legal/epl-v10.html\n+ * Copyright (c) 2010-2021 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n  */\n package org.openhab.binding.wmbus.config;\n \n@@ -28,5 +32,4 @@\n         }\n         return idInts;\n     }\n-\n }"
  },
  {
    "sha": "80ef68b61dbe2cf92115e2594509ca48acbe2bf0",
    "filename": "org.openhab.binding.wmbus/src/main/java/org/openhab/binding/wmbus/config/WMBusSerialBridgeConfig.java",
    "status": "modified",
    "additions": 10,
    "deletions": 7,
    "changes": 17,
    "blob_url": "https://github.com/KuguHome/openhab-binding-wmbus/blob/09f6c0c24aa6ddd238436ac2891d8108562dad51/org.openhab.binding.wmbus/src/main/java/org/openhab/binding/wmbus/config/WMBusSerialBridgeConfig.java",
    "raw_url": "https://github.com/KuguHome/openhab-binding-wmbus/raw/09f6c0c24aa6ddd238436ac2891d8108562dad51/org.openhab.binding.wmbus/src/main/java/org/openhab/binding/wmbus/config/WMBusSerialBridgeConfig.java",
    "contents_url": "https://api.github.com/repos/KuguHome/openhab-binding-wmbus/contents/org.openhab.binding.wmbus/src/main/java/org/openhab/binding/wmbus/config/WMBusSerialBridgeConfig.java?ref=09f6c0c24aa6ddd238436ac2891d8108562dad51",
    "patch": "@@ -1,10 +1,14 @@\n /**\n- * Copyright (c) 2010-2019 by the respective copyright holders.\n- * <p>\n- * All rights reserved. This program and the accompanying materials\n- * are made available under the terms of the Eclipse Public License v1.0\n- * which accompanies this distribution, and is available at\n- * http://www.eclipse.org/legal/epl-v10.html\n+ * Copyright (c) 2010-2021 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n  */\n package org.openhab.binding.wmbus.config;\n \n@@ -20,5 +24,4 @@\n     public StickModel stickModel;\n     public String serialDevice;\n     public WMBusMode radioMode;\n-\n }"
  },
  {
    "sha": "d47297142336a02e046308ebbb57b1d63728b407",
    "filename": "org.openhab.binding.wmbus/src/main/java/org/openhab/binding/wmbus/device/AbstractWMBusDiscoveryParticipant.java",
    "status": "modified",
    "additions": 11,
    "deletions": 7,
    "changes": 18,
    "blob_url": "https://github.com/KuguHome/openhab-binding-wmbus/blob/09f6c0c24aa6ddd238436ac2891d8108562dad51/org.openhab.binding.wmbus/src/main/java/org/openhab/binding/wmbus/device/AbstractWMBusDiscoveryParticipant.java",
    "raw_url": "https://github.com/KuguHome/openhab-binding-wmbus/raw/09f6c0c24aa6ddd238436ac2891d8108562dad51/org.openhab.binding.wmbus/src/main/java/org/openhab/binding/wmbus/device/AbstractWMBusDiscoveryParticipant.java",
    "contents_url": "https://api.github.com/repos/KuguHome/openhab-binding-wmbus/contents/org.openhab.binding.wmbus/src/main/java/org/openhab/binding/wmbus/device/AbstractWMBusDiscoveryParticipant.java?ref=09f6c0c24aa6ddd238436ac2891d8108562dad51",
    "patch": "@@ -1,19 +1,23 @@\n /**\n- * Copyright (c) 2010-2018 by the respective copyright holders.\n+ * Copyright (c) 2010-2021 Contributors to the openHAB project\n  *\n- * All rights reserved. This program and the accompanying materials\n- * are made available under the terms of the Eclipse Public License v1.0\n- * which accompanies this distribution, and is available at\n- * http://www.eclipse.org/legal/epl-v10.html\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n  */\n package org.openhab.binding.wmbus.device;\n \n import org.eclipse.jdt.annotation.Nullable;\n-import org.eclipse.smarthome.core.thing.ThingTypeUID;\n-import org.eclipse.smarthome.core.thing.ThingUID;\n import org.openhab.binding.wmbus.BindingConfiguration;\n import org.openhab.binding.wmbus.WMBusDevice;\n import org.openhab.binding.wmbus.discovery.WMBusDiscoveryParticipant;\n+import org.openhab.core.thing.ThingTypeUID;\n+import org.openhab.core.thing.ThingUID;\n \n /**\n  * Base class for discovery participants."
  },
  {
    "sha": "dacd573618d363ed1a961e8de6071ba16e576535",
    "filename": "org.openhab.binding.wmbus/src/main/java/org/openhab/binding/wmbus/device/Meter.java",
    "status": "modified",
    "additions": 10,
    "deletions": 6,
    "changes": 16,
    "blob_url": "https://github.com/KuguHome/openhab-binding-wmbus/blob/09f6c0c24aa6ddd238436ac2891d8108562dad51/org.openhab.binding.wmbus/src/main/java/org/openhab/binding/wmbus/device/Meter.java",
    "raw_url": "https://github.com/KuguHome/openhab-binding-wmbus/raw/09f6c0c24aa6ddd238436ac2891d8108562dad51/org.openhab.binding.wmbus/src/main/java/org/openhab/binding/wmbus/device/Meter.java",
    "contents_url": "https://api.github.com/repos/KuguHome/openhab-binding-wmbus/contents/org.openhab.binding.wmbus/src/main/java/org/openhab/binding/wmbus/device/Meter.java?ref=09f6c0c24aa6ddd238436ac2891d8108562dad51",
    "patch": "@@ -1,17 +1,21 @@\n /**\n- * Copyright (c) 2010-2018 by the respective copyright holders.\n+ * Copyright (c) 2010-2021 Contributors to the openHAB project\n  *\n- * All rights reserved. This program and the accompanying materials\n- * are made available under the terms of the Eclipse Public License v1.0\n- * which accompanies this distribution, and is available at\n- * http://www.eclipse.org/legal/epl-v10.html\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n  */\n \n package org.openhab.binding.wmbus.device;\n \n import java.util.Set;\n \n-import org.eclipse.smarthome.core.thing.ThingTypeUID;\n+import org.openhab.core.thing.ThingTypeUID;\n \n /**\n  * The {@link Meter} class defines common Meter device"
  }
]
