[
  {
    "sha": "457645e01e1db668f67909427ac405492f713c4f",
    "filename": "src/main/java/seedu/smartlib/logic/commands/EditCommand.java",
    "status": "modified",
    "additions": 13,
    "deletions": 6,
    "changes": 19,
    "blob_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/blob/de86906597d9f8b84991f26a0def98c552a4b083/src/main/java/seedu/smartlib/logic/commands/EditCommand.java",
    "raw_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/raw/de86906597d9f8b84991f26a0def98c552a4b083/src/main/java/seedu/smartlib/logic/commands/EditCommand.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103T-W13-2/tp/contents/src/main/java/seedu/smartlib/logic/commands/EditCommand.java?ref=de86906597d9f8b84991f26a0def98c552a4b083",
    "patch": "@@ -19,11 +19,7 @@\n import seedu.smartlib.commons.util.CollectionUtil;\n import seedu.smartlib.logic.commands.exceptions.CommandException;\n import seedu.smartlib.model.Model;\n-import seedu.smartlib.model.reader.Address;\n-import seedu.smartlib.model.reader.Email;\n-import seedu.smartlib.model.reader.Name;\n-import seedu.smartlib.model.reader.Phone;\n-import seedu.smartlib.model.reader.Reader;\n+import seedu.smartlib.model.reader.*;\n import seedu.smartlib.model.tag.Tag;\n \n /**\n@@ -97,9 +93,10 @@ private static Reader createEditedPerson(Reader readerToEdit, EditPersonDescript\n         Phone updatedPhone = editPersonDescriptor.getPhone().orElse(readerToEdit.getPhone());\n         Email updatedEmail = editPersonDescriptor.getEmail().orElse(readerToEdit.getEmail());\n         Address updatedAddress = editPersonDescriptor.getAddress().orElse(readerToEdit.getAddress());\n+        Remark updatedRemark = readerToEdit.getRemark();\n         Set<Tag> updatedTags = editPersonDescriptor.getTags().orElse(readerToEdit.getTags());\n \n-        return new Reader(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);\n+        return new Reader(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedRemark, updatedTags);\n     }\n \n     @Override\n@@ -129,6 +126,7 @@ public boolean equals(Object other) {\n         private Phone phone;\n         private Email email;\n         private Address address;\n+        private Remark remark;\n         private Set<Tag> tags;\n \n         public EditPersonDescriptor() {}\n@@ -184,6 +182,14 @@ public void setAddress(Address address) {\n             return Optional.ofNullable(address);\n         }\n \n+        public void setRemark(Remark remark) {\n+            this.remark = remark;\n+        }\n+\n+        public Optional<Remark> getRemark() {\n+            return Optional.ofNullable(remark);\n+        }\n+\n         /**\n          * Sets {@code tags} to this object's {@code tags}.\n          * A defensive copy of {@code tags} is used internally.\n@@ -220,6 +226,7 @@ public boolean equals(Object other) {\n                     && getPhone().equals(e.getPhone())\n                     && getEmail().equals(e.getEmail())\n                     && getAddress().equals(e.getAddress())\n+                    && getRemark().equals(e.getRemark())\n                     && getTags().equals(e.getTags());\n         }\n     }"
  },
  {
    "sha": "4d7aded9ce8c39ae6e3dd5e256cee5964e0e2519",
    "filename": "src/main/java/seedu/smartlib/logic/commands/RemarkCommand.java",
    "status": "added",
    "additions": 95,
    "deletions": 0,
    "changes": 95,
    "blob_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/blob/de86906597d9f8b84991f26a0def98c552a4b083/src/main/java/seedu/smartlib/logic/commands/RemarkCommand.java",
    "raw_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/raw/de86906597d9f8b84991f26a0def98c552a4b083/src/main/java/seedu/smartlib/logic/commands/RemarkCommand.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103T-W13-2/tp/contents/src/main/java/seedu/smartlib/logic/commands/RemarkCommand.java?ref=de86906597d9f8b84991f26a0def98c552a4b083",
    "patch": "@@ -0,0 +1,95 @@\n+package seedu.smartlib.logic.commands;\n+\n+\n+import seedu.smartlib.commons.core.Messages;\n+import seedu.smartlib.commons.core.index.Index;\n+import seedu.smartlib.logic.commands.exceptions.CommandException;\n+import seedu.smartlib.model.Model;\n+import seedu.smartlib.model.reader.Reader;\n+import seedu.smartlib.model.reader.Remark;\n+import static seedu.smartlib.model.Model.PREDICATE_SHOW_ALL_PERSONS;\n+\n+import java.util.List;\n+\n+import seedu.smartlib.commons.core.Messages;\n+\n+import java.util.List;\n+import java.util.function.Predicate;\n+\n+import static seedu.smartlib.commons.util.CollectionUtil.requireAllNonNull;\n+\n+public class RemarkCommand extends Command{\n+    public static final String COMMAND_WORD = \"remark\";\n+    public static final String MESSAGE_USAGE = COMMAND_WORD + \": Edits the remark of the person identified \"\n+            + \"by the index number used in the last person listing. \"\n+            + \"Existing remark will be overwritten by the input.\\n\"\n+            + \"Parameters: INDEX (must be a positive integer) \"\n+            + \"r/ [REMARK]\\n\"\n+            + \"Example: \" + COMMAND_WORD + \" 1 \"\n+            + \"r/ Likes to swim.\";\n+\n+    public static final String MESSAGE_NOT_IMPLEMENTED_YET = \"Remark command not implemented yet\";\n+\n+    public static final String MESSAGE_ARGUMENTS = \"Index: %1$d, Remark: %2$s\";\n+\n+    public static final String MESSAGE_ADD_REMARK_SUCCESS = \"Added remark to Person: %1$s\";\n+    public static final String MESSAGE_DELETE_REMARK_SUCCESS = \"Removed remark from Person: %1$s\";\n+\n+    private final Index index;\n+    private Remark remark;\n+\n+    /**\n+     * @param index of the person in the filtered person list to edit the remark\n+     * @param remark of the person to be updated to\n+     */\n+    public RemarkCommand(Index index, Remark remark) {\n+        requireAllNonNull(index, remark);\n+\n+        this.index = index;\n+        this.remark = remark;\n+    }\n+\n+    @Override\n+    public CommandResult execute(Model model) throws CommandException {\n+        List<Reader> lastShownList = model.getFilteredPersonList();\n+\n+        if (index.getZeroBased() >= lastShownList.size()) {\n+            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);\n+        }\n+\n+        Reader personToEdit = lastShownList.get(index.getZeroBased());\n+        Reader editedPerson = new Reader(personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),\n+                personToEdit.getAddress(), remark, personToEdit.getTags());\n+\n+        model.setPerson(personToEdit, editedPerson);\n+\n+        return new CommandResult(generateSuccessMessage(editedPerson));\n+    }\n+\n+    /**\n+     * Generates a command execution success message based on whether the remark is added to or removed from\n+     * {@code personToEdit}.\n+     */\n+    private String generateSuccessMessage(Reader personToEdit) {\n+        String message = !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;\n+        return String.format(message, personToEdit);\n+    }\n+\n+    @Override\n+    public boolean equals(Object other) {\n+        // short circuit if same object\n+        if (other == this) {\n+            return true;\n+        }\n+\n+        // instanceof handles nulls\n+        if (!(other instanceof RemarkCommand)) {\n+            return false;\n+        }\n+\n+        // state check\n+        RemarkCommand e = (RemarkCommand) other;\n+        return index.equals(e.index)\n+                && remark.equals(e.remark);\n+    }\n+}"
  },
  {
    "sha": "cc50c12912ff7b9b9a196d84c9660f912e31f85f",
    "filename": "src/main/java/seedu/smartlib/logic/parser/AddCommandParser.java",
    "status": "modified",
    "additions": 3,
    "deletions": 1,
    "changes": 4,
    "blob_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/blob/de86906597d9f8b84991f26a0def98c552a4b083/src/main/java/seedu/smartlib/logic/parser/AddCommandParser.java",
    "raw_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/raw/de86906597d9f8b84991f26a0def98c552a4b083/src/main/java/seedu/smartlib/logic/parser/AddCommandParser.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103T-W13-2/tp/contents/src/main/java/seedu/smartlib/logic/parser/AddCommandParser.java?ref=de86906597d9f8b84991f26a0def98c552a4b083",
    "patch": "@@ -17,6 +17,7 @@\n import seedu.smartlib.model.reader.Name;\n import seedu.smartlib.model.reader.Phone;\n import seedu.smartlib.model.reader.Reader;\n+import seedu.smartlib.model.reader.*;\n import seedu.smartlib.model.tag.Tag;\n \n /**\n@@ -42,9 +43,10 @@ public AddCommand parse(String args) throws ParseException {\n         Phone phone = ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());\n         Email email = ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());\n         Address address = ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());\n+        Remark remark = new Remark(\"\");\n         Set<Tag> tagList = ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));\n \n-        Reader reader = new Reader(name, phone, email, address, tagList);\n+        Reader reader = new Reader(name, phone, email, address, remark, tagList);\n \n         return new AddCommand(reader);\n     }"
  },
  {
    "sha": "a11b2ac4c529196fba8c3de702de6ed7ee1086f7",
    "filename": "src/main/java/seedu/smartlib/logic/parser/CliSyntax.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/blob/de86906597d9f8b84991f26a0def98c552a4b083/src/main/java/seedu/smartlib/logic/parser/CliSyntax.java",
    "raw_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/raw/de86906597d9f8b84991f26a0def98c552a4b083/src/main/java/seedu/smartlib/logic/parser/CliSyntax.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103T-W13-2/tp/contents/src/main/java/seedu/smartlib/logic/parser/CliSyntax.java?ref=de86906597d9f8b84991f26a0def98c552a4b083",
    "patch": "@@ -11,5 +11,5 @@\n     public static final Prefix PREFIX_EMAIL = new Prefix(\"e/\");\n     public static final Prefix PREFIX_ADDRESS = new Prefix(\"a/\");\n     public static final Prefix PREFIX_TAG = new Prefix(\"t/\");\n-\n+    public static final Prefix PREFIX_REMARK = new Prefix(\"r/\");\n }"
  },
  {
    "sha": "11e09232f65179b4e54e47ce78ac8e71aac2e6e0",
    "filename": "src/main/java/seedu/smartlib/logic/parser/RemarkCommandParser.java",
    "status": "added",
    "additions": 30,
    "deletions": 0,
    "changes": 30,
    "blob_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/blob/de86906597d9f8b84991f26a0def98c552a4b083/src/main/java/seedu/smartlib/logic/parser/RemarkCommandParser.java",
    "raw_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/raw/de86906597d9f8b84991f26a0def98c552a4b083/src/main/java/seedu/smartlib/logic/parser/RemarkCommandParser.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103T-W13-2/tp/contents/src/main/java/seedu/smartlib/logic/parser/RemarkCommandParser.java?ref=de86906597d9f8b84991f26a0def98c552a4b083",
    "patch": "@@ -0,0 +1,30 @@\n+package seedu.smartlib.logic.parser;\n+\n+import static java.util.Objects.requireNonNull;\n+import static seedu.smartlib.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;\n+import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_REMARK;\n+\n+import seedu.smartlib.commons.core.index.Index;\n+import seedu.smartlib.commons.exceptions.IllegalValueException;\n+import seedu.smartlib.logic.commands.RemarkCommand;\n+import seedu.smartlib.logic.parser.exceptions.ParseException;\n+import seedu.smartlib.model.reader.Remark;\n+public class RemarkCommandParser implements Parser<RemarkCommand>{\n+\n+    public RemarkCommand parse(String args) throws ParseException {\n+        requireNonNull(args);\n+        ArgumentMultimap argMultimap = ArgumentTokenizer.tokenize(args, PREFIX_REMARK);\n+\n+        Index index;\n+        try {\n+            index = ParserUtil.parseIndex(argMultimap.getPreamble());\n+        } catch (IllegalValueException ive) {\n+            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemarkCommand.MESSAGE_USAGE), ive);\n+        }\n+\n+        String remark = argMultimap.getValue(PREFIX_REMARK).orElse(\"\");\n+\n+        return new RemarkCommand(index, new Remark(remark));\n+    }\n+\n+}"
  },
  {
    "sha": "0acf03bc907cc9279e4d9d6e08e9e654b43cae63",
    "filename": "src/main/java/seedu/smartlib/logic/parser/SmartLibParser.java",
    "status": "modified",
    "additions": 4,
    "deletions": 9,
    "changes": 13,
    "blob_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/blob/de86906597d9f8b84991f26a0def98c552a4b083/src/main/java/seedu/smartlib/logic/parser/SmartLibParser.java",
    "raw_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/raw/de86906597d9f8b84991f26a0def98c552a4b083/src/main/java/seedu/smartlib/logic/parser/SmartLibParser.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103T-W13-2/tp/contents/src/main/java/seedu/smartlib/logic/parser/SmartLibParser.java?ref=de86906597d9f8b84991f26a0def98c552a4b083",
    "patch": "@@ -6,15 +6,7 @@\n import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n \n-import seedu.smartlib.logic.commands.AddCommand;\n-import seedu.smartlib.logic.commands.ClearCommand;\n-import seedu.smartlib.logic.commands.Command;\n-import seedu.smartlib.logic.commands.DeleteCommand;\n-import seedu.smartlib.logic.commands.EditCommand;\n-import seedu.smartlib.logic.commands.ExitCommand;\n-import seedu.smartlib.logic.commands.FindCommand;\n-import seedu.smartlib.logic.commands.HelpCommand;\n-import seedu.smartlib.logic.commands.ListCommand;\n+import seedu.smartlib.logic.commands.*;\n import seedu.smartlib.logic.parser.exceptions.ParseException;\n \n /**\n@@ -68,6 +60,9 @@ public Command parseCommand(String userInput) throws ParseException {\n         case HelpCommand.COMMAND_WORD:\n             return new HelpCommand();\n \n+        case RemarkCommand.COMMAND_WORD:\n+            return new RemarkCommandParser().parse(arguments);\n+\n         default:\n             throw new ParseException(MESSAGE_UNKNOWN_COMMAND);\n         }"
  },
  {
    "sha": "63b8e3825b2de4e3d6a5cd2ef15586d7bb422d17",
    "filename": "src/main/java/seedu/smartlib/model/reader/Reader.java",
    "status": "modified",
    "additions": 9,
    "deletions": 2,
    "changes": 11,
    "blob_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/blob/de86906597d9f8b84991f26a0def98c552a4b083/src/main/java/seedu/smartlib/model/reader/Reader.java",
    "raw_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/raw/de86906597d9f8b84991f26a0def98c552a4b083/src/main/java/seedu/smartlib/model/reader/Reader.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103T-W13-2/tp/contents/src/main/java/seedu/smartlib/model/reader/Reader.java?ref=de86906597d9f8b84991f26a0def98c552a4b083",
    "patch": "@@ -19,6 +19,7 @@\n     private final Name name;\n     private final Phone phone;\n     private final Email email;\n+    private final Remark remark;\n \n     // Data fields\n     private final Address address;\n@@ -27,12 +28,13 @@\n     /**\n      * Every field must be present and not null.\n      */\n-    public Reader(Name name, Phone phone, Email email, Address address, Set<Tag> tags) {\n+    public Reader(Name name, Phone phone, Email email, Address address, Remark remark, Set<Tag> tags) {\n         requireAllNonNull(name, phone, email, address, tags);\n         this.name = name;\n         this.phone = phone;\n         this.email = email;\n         this.address = address;\n+        this.remark = remark;\n         this.tags.addAll(tags);\n     }\n \n@@ -51,6 +53,9 @@ public Email getEmail() {\n     public Address getAddress() {\n         return address;\n     }\n+    public Remark getRemark() {\n+        return remark;\n+    }\n \n     /**\n      * Returns an immutable tag set, which throws {@code UnsupportedOperationException}\n@@ -110,7 +115,9 @@ public String toString() {\n                 .append(\"; Email: \")\n                 .append(getEmail())\n                 .append(\"; Address: \")\n-                .append(getAddress());\n+                .append(getAddress())\n+                .append(\" Remark: \")\n+                .append(getRemark());\n \n         Set<Tag> tags = getTags();\n         if (!tags.isEmpty()) {"
  },
  {
    "sha": "4b8fd0e6d49ebb80fad5f2f26c56617e0965e623",
    "filename": "src/main/java/seedu/smartlib/model/reader/Remark.java",
    "status": "added",
    "additions": 32,
    "deletions": 0,
    "changes": 32,
    "blob_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/blob/de86906597d9f8b84991f26a0def98c552a4b083/src/main/java/seedu/smartlib/model/reader/Remark.java",
    "raw_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/raw/de86906597d9f8b84991f26a0def98c552a4b083/src/main/java/seedu/smartlib/model/reader/Remark.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103T-W13-2/tp/contents/src/main/java/seedu/smartlib/model/reader/Remark.java?ref=de86906597d9f8b84991f26a0def98c552a4b083",
    "patch": "@@ -0,0 +1,32 @@\n+package seedu.smartlib.model.reader;\n+\n+import static java.util.Objects.requireNonNull;\n+\n+public class Remark {\n+\n+    public final String value;\n+\n+    public Remark(String remark) {\n+        requireNonNull(remark);\n+        value = remark;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return value;\n+    }\n+\n+    @Override\n+    public boolean equals(Object other) {\n+        return other == this // short circuit if same object\n+                || (other instanceof Remark // instanceof handles nulls\n+                && value.equals(((Remark) other).value)); // state check\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return value.hashCode();\n+    }\n+}\n+\n+"
  },
  {
    "sha": "439e13fa4030485e6150f6fd6505f8b6ad8c3056",
    "filename": "src/main/java/seedu/smartlib/model/util/SampleDataUtil.java",
    "status": "modified",
    "additions": 10,
    "deletions": 6,
    "changes": 16,
    "blob_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/blob/de86906597d9f8b84991f26a0def98c552a4b083/src/main/java/seedu/smartlib/model/util/SampleDataUtil.java",
    "raw_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/raw/de86906597d9f8b84991f26a0def98c552a4b083/src/main/java/seedu/smartlib/model/util/SampleDataUtil.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103T-W13-2/tp/contents/src/main/java/seedu/smartlib/model/util/SampleDataUtil.java?ref=de86906597d9f8b84991f26a0def98c552a4b083",
    "patch": "@@ -11,31 +11,35 @@\n import seedu.smartlib.model.reader.Name;\n import seedu.smartlib.model.reader.Phone;\n import seedu.smartlib.model.reader.Reader;\n+import seedu.smartlib.model.reader.Remark;\n import seedu.smartlib.model.tag.Tag;\n \n /**\n  * Contains utility methods for populating {@code AddressBook} with sample data.\n  */\n public class SampleDataUtil {\n+\n+    public static final Remark EMPTY_REMARK = new Remark(\"\");\n+\n     public static Reader[] getSamplePersons() {\n         return new Reader[] {\n             new Reader(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),\n-                new Address(\"Blk 30 Geylang Street 29, #06-40\"),\n+                new Address(\"Blk 30 Geylang Street 29, #06-40\"), EMPTY_REMARK,\n                 getTagSet(\"friends\")),\n             new Reader(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),\n-                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),\n+                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), EMPTY_REMARK,\n                 getTagSet(\"colleagues\", \"friends\")),\n             new Reader(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),\n-                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),\n+                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), EMPTY_REMARK,\n                 getTagSet(\"neighbours\")),\n             new Reader(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),\n-                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),\n+                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), EMPTY_REMARK,\n                 getTagSet(\"family\")),\n             new Reader(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),\n-                new Address(\"Blk 47 Tampines Street 20, #17-35\"),\n+                new Address(\"Blk 47 Tampines Street 20, #17-35\"), EMPTY_REMARK,\n                 getTagSet(\"classmates\")),\n             new Reader(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),\n-                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),\n+                new Address(\"Blk 45 Aljunied Street 85, #11-31\"), EMPTY_REMARK,\n                 getTagSet(\"colleagues\"))\n         };\n     }"
  },
  {
    "sha": "0bd850b89dd9378c9fc02c25a5886b0faa95bc11",
    "filename": "src/main/java/seedu/smartlib/storage/JsonAdaptedPerson.java",
    "status": "modified",
    "additions": 10,
    "deletions": 1,
    "changes": 11,
    "blob_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/blob/de86906597d9f8b84991f26a0def98c552a4b083/src/main/java/seedu/smartlib/storage/JsonAdaptedPerson.java",
    "raw_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/raw/de86906597d9f8b84991f26a0def98c552a4b083/src/main/java/seedu/smartlib/storage/JsonAdaptedPerson.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103T-W13-2/tp/contents/src/main/java/seedu/smartlib/storage/JsonAdaptedPerson.java?ref=de86906597d9f8b84991f26a0def98c552a4b083",
    "patch": "@@ -15,6 +15,7 @@\n import seedu.smartlib.model.reader.Name;\n import seedu.smartlib.model.reader.Phone;\n import seedu.smartlib.model.reader.Reader;\n+import seedu.smartlib.model.reader.Remark;\n import seedu.smartlib.model.tag.Tag;\n \n /**\n@@ -28,6 +29,7 @@\n     private final String phone;\n     private final String email;\n     private final String address;\n+    private final String remark;\n     private final List<JsonAdaptedTag> tagged = new ArrayList<>();\n \n     /**\n@@ -36,11 +38,13 @@\n     @JsonCreator\n     public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,\n             @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,\n+            @JsonProperty(\"remark\") String remark,\n             @JsonProperty(\"tagged\") List<JsonAdaptedTag> tagged) {\n         this.name = name;\n         this.phone = phone;\n         this.email = email;\n         this.address = address;\n+        this.remark = remark;\n         if (tagged != null) {\n             this.tagged.addAll(tagged);\n         }\n@@ -54,6 +58,7 @@ public JsonAdaptedPerson(Reader source) {\n         phone = source.getPhone().value;\n         email = source.getEmail().value;\n         address = source.getAddress().value;\n+        remark = source.getRemark().value;\n         tagged.addAll(source.getTags().stream()\n                 .map(JsonAdaptedTag::new)\n                 .collect(Collectors.toList()));\n@@ -97,13 +102,17 @@ public Reader toModelType() throws IllegalValueException {\n         if (address == null) {\n             throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));\n         }\n+        if (remark == null) {\n+            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Remark.class.getSimpleName()));\n+        }\n+        final Remark modelRemark = new Remark(remark);\n         if (!Address.isValidAddress(address)) {\n             throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);\n         }\n         final Address modelAddress = new Address(address);\n \n         final Set<Tag> modelTags = new HashSet<>(personTags);\n-        return new Reader(modelName, modelPhone, modelEmail, modelAddress, modelTags);\n+        return new Reader(modelName, modelPhone, modelEmail, modelAddress, modelRemark, modelTags);\n     }\n \n }"
  },
  {
    "sha": "d83b0a57d124281eff6e1617b48b400f3efa82df",
    "filename": "src/main/java/seedu/smartlib/ui/ReaderCard.java",
    "status": "modified",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/blob/de86906597d9f8b84991f26a0def98c552a4b083/src/main/java/seedu/smartlib/ui/ReaderCard.java",
    "raw_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/raw/de86906597d9f8b84991f26a0def98c552a4b083/src/main/java/seedu/smartlib/ui/ReaderCard.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103T-W13-2/tp/contents/src/main/java/seedu/smartlib/ui/ReaderCard.java?ref=de86906597d9f8b84991f26a0def98c552a4b083",
    "patch": "@@ -40,6 +40,9 @@\n     private Label email;\n     @FXML\n     private FlowPane tags;\n+    @FXML\n+    private Label remark;\n+\n \n     /**\n      * Creates a {@code PersonCode} with the given {@code Person} and index to display.\n@@ -52,6 +55,7 @@ public ReaderCard(Reader reader, int displayedIndex) {\n         phone.setText(reader.getPhone().value);\n         address.setText(reader.getAddress().value);\n         email.setText(reader.getEmail().value);\n+        remark.setText(reader.getRemark().value);\n         reader.getTags().stream()\n                 .sorted(Comparator.comparing(tag -> tag.tagName))\n                 .forEach(tag -> tags.getChildren().add(new Label(tag.tagName)));"
  },
  {
    "sha": "d1a7eb614f8352b847c07754be9b80cd299dd51e",
    "filename": "src/main/resources/view/PersonListCard.fxml",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/blob/de86906597d9f8b84991f26a0def98c552a4b083/src/main/resources/view/PersonListCard.fxml",
    "raw_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/raw/de86906597d9f8b84991f26a0def98c552a4b083/src/main/resources/view/PersonListCard.fxml",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103T-W13-2/tp/contents/src/main/resources/view/PersonListCard.fxml?ref=de86906597d9f8b84991f26a0def98c552a4b083",
    "patch": "@@ -31,6 +31,7 @@\n       <Label fx:id=\"phone\" styleClass=\"cell_small_label\" text=\"\\$phone\" />\n       <Label fx:id=\"address\" styleClass=\"cell_small_label\" text=\"\\$address\" />\n       <Label fx:id=\"email\" styleClass=\"cell_small_label\" text=\"\\$email\" />\n+      <Label fx:id=\"remark\" styleClass=\"cell_small_label\" text=\"\\$remark\" />\n     </VBox>\n   </GridPane>\n </HBox>"
  },
  {
    "sha": "338a681db1ee2d1cf363abf532a3bff530fa2d2b",
    "filename": "src/test/data/JsonSerializableAddressBookTest/duplicatePersonAddressBook.json",
    "status": "modified",
    "additions": 3,
    "deletions": 1,
    "changes": 4,
    "blob_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/blob/de86906597d9f8b84991f26a0def98c552a4b083/src/test/data/JsonSerializableAddressBookTest/duplicatePersonAddressBook.json",
    "raw_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/raw/de86906597d9f8b84991f26a0def98c552a4b083/src/test/data/JsonSerializableAddressBookTest/duplicatePersonAddressBook.json",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103T-W13-2/tp/contents/src/test/data/JsonSerializableAddressBookTest/duplicatePersonAddressBook.json?ref=de86906597d9f8b84991f26a0def98c552a4b083",
    "patch": "@@ -4,11 +4,13 @@\n     \"phone\": \"94351253\",\n     \"email\": \"alice@example.com\",\n     \"address\": \"123, Jurong West Ave 6, #08-111\",\n+    \"remark\" : \"REMARK\",\n     \"tagged\": [ \"friends\" ]\n   }, {\n     \"name\": \"Alice Pauline\",\n     \"phone\": \"94351253\",\n     \"email\": \"pauline@example.com\",\n-    \"address\": \"4th street\"\n+    \"address\": \"4th street\",\n+    \"remark\" : \"REMARK\"\n   } ]\n }"
  },
  {
    "sha": "eb5cc111b345782373b3b64c1f9d161d3ac842c3",
    "filename": "src/test/data/JsonSerializableAddressBookTest/typicalPersonsAddressBook.json",
    "status": "modified",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/blob/de86906597d9f8b84991f26a0def98c552a4b083/src/test/data/JsonSerializableAddressBookTest/typicalPersonsAddressBook.json",
    "raw_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/raw/de86906597d9f8b84991f26a0def98c552a4b083/src/test/data/JsonSerializableAddressBookTest/typicalPersonsAddressBook.json",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103T-W13-2/tp/contents/src/test/data/JsonSerializableAddressBookTest/typicalPersonsAddressBook.json?ref=de86906597d9f8b84991f26a0def98c552a4b083",
    "patch": "@@ -5,42 +5,49 @@\n     \"phone\" : \"94351253\",\n     \"email\" : \"alice@example.com\",\n     \"address\" : \"123, Jurong West Ave 6, #08-111\",\n+    \"remark\" : \"\",\n     \"tagged\" : [ \"friends\" ]\n   }, {\n     \"name\" : \"Benson Meier\",\n     \"phone\" : \"98765432\",\n     \"email\" : \"johnd@example.com\",\n     \"address\" : \"311, Clementi Ave 2, #02-25\",\n+    \"remark\" : \"\",\n     \"tagged\" : [ \"owesMoney\", \"friends\" ]\n   }, {\n     \"name\" : \"Carl Kurz\",\n     \"phone\" : \"95352563\",\n     \"email\" : \"heinz@example.com\",\n     \"address\" : \"wall street\",\n+    \"remark\" : \"\",\n     \"tagged\" : [ ]\n   }, {\n     \"name\" : \"Daniel Meier\",\n     \"phone\" : \"87652533\",\n     \"email\" : \"cornelia@example.com\",\n     \"address\" : \"10th street\",\n+    \"remark\" : \"\",\n     \"tagged\" : [ \"friends\" ]\n   }, {\n     \"name\" : \"Elle Meyer\",\n     \"phone\" : \"9482224\",\n     \"email\" : \"werner@example.com\",\n     \"address\" : \"michegan ave\",\n+    \"remark\" : \"\",\n     \"tagged\" : [ ]\n   }, {\n     \"name\" : \"Fiona Kunz\",\n     \"phone\" : \"9482427\",\n     \"email\" : \"lydia@example.com\",\n     \"address\" : \"little tokyo\",\n+    \"remark\" : \"\",\n     \"tagged\" : [ ]\n   }, {\n     \"name\" : \"George Best\",\n     \"phone\" : \"9482442\",\n     \"email\" : \"anna@example.com\",\n     \"address\" : \"4th street\",\n+    \"remark\" : \"\",\n     \"tagged\" : [ ]\n   } ]\n }"
  },
  {
    "sha": "08709765c59355ea7cdff7cf304dbec4864ea18d",
    "filename": "src/test/java/seedu/smartlib/logic/commands/CommandTestUtil.java",
    "status": "modified",
    "additions": 4,
    "deletions": 2,
    "changes": 6,
    "blob_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/blob/de86906597d9f8b84991f26a0def98c552a4b083/src/test/java/seedu/smartlib/logic/commands/CommandTestUtil.java",
    "raw_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/raw/de86906597d9f8b84991f26a0def98c552a4b083/src/test/java/seedu/smartlib/logic/commands/CommandTestUtil.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103T-W13-2/tp/contents/src/test/java/seedu/smartlib/logic/commands/CommandTestUtil.java?ref=de86906597d9f8b84991f26a0def98c552a4b083",
    "patch": "@@ -34,6 +34,8 @@\n     public static final String VALID_EMAIL_BOB = \"bob@example.com\";\n     public static final String VALID_ADDRESS_AMY = \"Block 312, Amy Street 1\";\n     public static final String VALID_ADDRESS_BOB = \"Block 123, Bobby Street 3\";\n+    public static final String VALID_REMARK_AMY = \"\";\n+    public static final String VALID_REMARK_BOB = \"\";\n     public static final String VALID_TAG_HUSBAND = \"husband\";\n     public static final String VALID_TAG_FRIEND = \"friend\";\n \n@@ -63,10 +65,10 @@\n     static {\n         DESC_AMY = new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)\n                 .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)\n-                .withTags(VALID_TAG_FRIEND).build();\n+                .withRemark(VALID_REMARK_AMY).withTags(VALID_TAG_FRIEND).build();\n         DESC_BOB = new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)\n                 .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)\n-                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();\n+                .withRemark(VALID_REMARK_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();\n     }\n \n     /**"
  },
  {
    "sha": "f2adadd9d48f261961706e17a7a5337768b95edd",
    "filename": "src/test/java/seedu/smartlib/logic/commands/RemarkCommandTest.java",
    "status": "added",
    "additions": 104,
    "deletions": 0,
    "changes": 104,
    "blob_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/blob/de86906597d9f8b84991f26a0def98c552a4b083/src/test/java/seedu/smartlib/logic/commands/RemarkCommandTest.java",
    "raw_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/raw/de86906597d9f8b84991f26a0def98c552a4b083/src/test/java/seedu/smartlib/logic/commands/RemarkCommandTest.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103T-W13-2/tp/contents/src/test/java/seedu/smartlib/logic/commands/RemarkCommandTest.java?ref=de86906597d9f8b84991f26a0def98c552a4b083",
    "patch": "@@ -0,0 +1,104 @@\n+package seedu.smartlib.logic.commands;\n+\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+import static seedu.smartlib.logic.commands.CommandTestUtil.assertCommandFailure;\n+import static seedu.smartlib.logic.commands.CommandTestUtil.assertCommandSuccess;\n+import static seedu.smartlib.logic.commands.CommandTestUtil.showPersonAtIndex;\n+import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_REMARK_BOB;\n+import static seedu.smartlib.testutil.TypicalIndexes.INDEX_FIRST_PERSON;\n+import static seedu.smartlib.testutil.TypicalIndexes.INDEX_SECOND_PERSON;\n+import static seedu.smartlib.testutil.TypicalPersons.getTypicalAddressBook;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import seedu.smartlib.commons.core.Messages;\n+import seedu.smartlib.commons.core.index.Index;\n+import seedu.smartlib.model.Model;\n+import seedu.smartlib.model.ModelManager;\n+import seedu.smartlib.model.SmartLib;\n+import seedu.smartlib.model.UserPrefs;\n+import seedu.smartlib.model.reader.Reader;\n+import seedu.smartlib.model.reader.Remark;\n+import seedu.smartlib.testutil.PersonBuilder;\n+\n+/**\n+ * Contains integration tests (interaction with the Model) and unit tests for RemarkCommand.\n+ */\n+public class RemarkCommandTest {\n+    private static final String REMARK_STUB = \"Remark\";\n+\n+    private Model model = new ModelManager(getTypicalAddressBook(), new UserPrefs());\n+\n+    public void execute_addRemarkUnfilteredList_success() {\n+        Reader firstPerson = model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());\n+        Reader editedPerson = new PersonBuilder(firstPerson).withRemark(REMARK_STUB).build();\n+\n+        RemarkCommand remarkCommand = new RemarkCommand(INDEX_FIRST_PERSON, new Remark(editedPerson.getRemark().value));\n+\n+        String expectedMessage = String.format(RemarkCommand.MESSAGE_ADD_REMARK_SUCCESS, editedPerson);\n+\n+        Model expectedModel = new ModelManager(new SmartLib(model.getSmartLib()), new UserPrefs());\n+        expectedModel.setPerson(firstPerson, editedPerson);\n+\n+        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);\n+    }\n+\n+    @Test\n+    public void execute_deleteRemarkUnfilteredList_success() {\n+        Reader firstPerson = model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());\n+        Reader editedPerson = new PersonBuilder(firstPerson).withRemark(\"\").build();\n+\n+        RemarkCommand remarkCommand = new RemarkCommand(INDEX_FIRST_PERSON,\n+                new Remark(editedPerson.getRemark().toString()));\n+\n+        String expectedMessage = String.format(RemarkCommand.MESSAGE_DELETE_REMARK_SUCCESS, editedPerson);\n+\n+        Model expectedModel = new ModelManager(new SmartLib(model.getSmartLib()), new UserPrefs());\n+        expectedModel.setPerson(firstPerson, editedPerson);\n+\n+        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);\n+    }\n+\n+    @Test\n+    public void execute_filteredList_success() {\n+        showPersonAtIndex(model, INDEX_FIRST_PERSON);\n+\n+        Reader firstPerson = model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());\n+        Reader editedPerson = new PersonBuilder(model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()))\n+                .withRemark(REMARK_STUB).build();\n+\n+        RemarkCommand remarkCommand = new RemarkCommand(INDEX_FIRST_PERSON, new Remark(editedPerson.getRemark().value));\n+\n+        String expectedMessage = String.format(RemarkCommand.MESSAGE_ADD_REMARK_SUCCESS, editedPerson);\n+\n+        Model expectedModel = new ModelManager(new SmartLib(model.getSmartLib()), new UserPrefs());\n+        expectedModel.setPerson(firstPerson, editedPerson);\n+\n+        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);\n+    }\n+\n+    @Test\n+    public void execute_invalidPersonIndexUnfilteredList_failure() {\n+        Index outOfBoundIndex = Index.fromOneBased(model.getFilteredPersonList().size() + 1);\n+        RemarkCommand remarkCommand = new RemarkCommand(outOfBoundIndex, new Remark(VALID_REMARK_BOB));\n+\n+        assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);\n+    }\n+\n+    /**\n+     * Edit filtered list where index is larger than size of filtered list,\n+     * but smaller than size of address book\n+     */\n+    @Test\n+    public void execute_invalidPersonIndexFilteredList_failure() {\n+        showPersonAtIndex(model, INDEX_FIRST_PERSON);\n+        Index outOfBoundIndex = INDEX_SECOND_PERSON;\n+        // ensures that outOfBoundIndex is still in bounds of address book list\n+        assertTrue(outOfBoundIndex.getZeroBased() < model.getSmartLib().getPersonList().size());\n+\n+        RemarkCommand remarkCommand = new RemarkCommand(outOfBoundIndex, new Remark(VALID_REMARK_BOB));\n+\n+        assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);\n+    }\n+\n+}"
  },
  {
    "sha": "35385e48ef550fba7eefcfb60e3ae5c0effac780",
    "filename": "src/test/java/seedu/smartlib/storage/JsonAdaptedReaderTest.java",
    "status": "modified",
    "additions": 10,
    "deletions": 9,
    "changes": 19,
    "blob_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/blob/de86906597d9f8b84991f26a0def98c552a4b083/src/test/java/seedu/smartlib/storage/JsonAdaptedReaderTest.java",
    "raw_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/raw/de86906597d9f8b84991f26a0def98c552a4b083/src/test/java/seedu/smartlib/storage/JsonAdaptedReaderTest.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103T-W13-2/tp/contents/src/test/java/seedu/smartlib/storage/JsonAdaptedReaderTest.java?ref=de86906597d9f8b84991f26a0def98c552a4b083",
    "patch": "@@ -28,6 +28,7 @@\n     private static final String VALID_PHONE = BENSON.getPhone().toString();\n     private static final String VALID_EMAIL = BENSON.getEmail().toString();\n     private static final String VALID_ADDRESS = BENSON.getAddress().toString();\n+    private static final String VALID_REMARK = BENSON.getRemark().toString();\n     private static final List<JsonAdaptedTag> VALID_TAGS = BENSON.getTags().stream()\n             .map(JsonAdaptedTag::new)\n             .collect(Collectors.toList());\n@@ -41,59 +42,59 @@ public void toModelType_validPersonDetails_returnsPerson() throws Exception {\n     @Test\n     public void toModelType_invalidName_throwsIllegalValueException() {\n         JsonAdaptedPerson person =\n-                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);\n+                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK, VALID_TAGS);\n         String expectedMessage = Name.MESSAGE_CONSTRAINTS;\n         assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);\n     }\n \n     @Test\n     public void toModelType_nullName_throwsIllegalValueException() {\n-        JsonAdaptedPerson person = new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);\n+        JsonAdaptedPerson person = new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK, VALID_TAGS);\n         String expectedMessage = String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());\n         assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);\n     }\n \n     @Test\n     public void toModelType_invalidPhone_throwsIllegalValueException() {\n         JsonAdaptedPerson person =\n-                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);\n+                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK, VALID_TAGS);\n         String expectedMessage = Phone.MESSAGE_CONSTRAINTS;\n         assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);\n     }\n \n     @Test\n     public void toModelType_nullPhone_throwsIllegalValueException() {\n-        JsonAdaptedPerson person = new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);\n+        JsonAdaptedPerson person = new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK, VALID_TAGS);\n         String expectedMessage = String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());\n         assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);\n     }\n \n     @Test\n     public void toModelType_invalidEmail_throwsIllegalValueException() {\n         JsonAdaptedPerson person =\n-                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS);\n+                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_REMARK, VALID_TAGS);\n         String expectedMessage = Email.MESSAGE_CONSTRAINTS;\n         assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);\n     }\n \n     @Test\n     public void toModelType_nullEmail_throwsIllegalValueException() {\n-        JsonAdaptedPerson person = new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_TAGS);\n+        JsonAdaptedPerson person = new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_REMARK, VALID_TAGS);\n         String expectedMessage = String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());\n         assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);\n     }\n \n     @Test\n     public void toModelType_invalidAddress_throwsIllegalValueException() {\n         JsonAdaptedPerson person =\n-                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS);\n+                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_REMARK, VALID_TAGS);\n         String expectedMessage = Address.MESSAGE_CONSTRAINTS;\n         assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);\n     }\n \n     @Test\n     public void toModelType_nullAddress_throwsIllegalValueException() {\n-        JsonAdaptedPerson person = new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS);\n+        JsonAdaptedPerson person = new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_REMARK, VALID_TAGS);\n         String expectedMessage = String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());\n         assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);\n     }\n@@ -103,7 +104,7 @@ public void toModelType_invalidTags_throwsIllegalValueException() {\n         List<JsonAdaptedTag> invalidTags = new ArrayList<>(VALID_TAGS);\n         invalidTags.add(new JsonAdaptedTag(INVALID_TAG));\n         JsonAdaptedPerson person =\n-                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags);\n+                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK,invalidTags);\n         assertThrows(IllegalValueException.class, person::toModelType);\n     }\n "
  },
  {
    "sha": "44b675b684ff10bf14d9efcdc6488513737a8be4",
    "filename": "src/test/java/seedu/smartlib/testutil/EditPersonDescriptorBuilder.java",
    "status": "modified",
    "additions": 12,
    "deletions": 5,
    "changes": 17,
    "blob_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/blob/de86906597d9f8b84991f26a0def98c552a4b083/src/test/java/seedu/smartlib/testutil/EditPersonDescriptorBuilder.java",
    "raw_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/raw/de86906597d9f8b84991f26a0def98c552a4b083/src/test/java/seedu/smartlib/testutil/EditPersonDescriptorBuilder.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103T-W13-2/tp/contents/src/test/java/seedu/smartlib/testutil/EditPersonDescriptorBuilder.java?ref=de86906597d9f8b84991f26a0def98c552a4b083",
    "patch": "@@ -5,11 +5,7 @@\n import java.util.stream.Stream;\n \n import seedu.smartlib.logic.commands.EditCommand.EditPersonDescriptor;\n-import seedu.smartlib.model.reader.Address;\n-import seedu.smartlib.model.reader.Email;\n-import seedu.smartlib.model.reader.Name;\n-import seedu.smartlib.model.reader.Phone;\n-import seedu.smartlib.model.reader.Reader;\n+import seedu.smartlib.model.reader.*;\n import seedu.smartlib.model.tag.Tag;\n \n /**\n@@ -36,6 +32,7 @@ public EditPersonDescriptorBuilder(Reader reader) {\n         descriptor.setPhone(reader.getPhone());\n         descriptor.setEmail(reader.getEmail());\n         descriptor.setAddress(reader.getAddress());\n+        descriptor.setRemark(reader.getRemark());\n         descriptor.setTags(reader.getTags());\n     }\n \n@@ -70,6 +67,13 @@ public EditPersonDescriptorBuilder withAddress(String address) {\n         descriptor.setAddress(new Address(address));\n         return this;\n     }\n+    /**\n+     * Sets the {@code Remark} of the {@code EditPersonDescriptor} that we are building.\n+     */\n+    public EditPersonDescriptorBuilder withRemark(String remark) {\n+        descriptor.setRemark(new Remark(remark));\n+        return this;\n+    }\n \n     /**\n      * Parses the {@code tags} into a {@code Set<Tag>} and set it to the {@code EditPersonDescriptor}\n@@ -84,4 +88,7 @@ public EditPersonDescriptorBuilder withTags(String... tags) {\n     public EditPersonDescriptor build() {\n         return descriptor;\n     }\n+\n+\n+\n }"
  },
  {
    "sha": "cbeab055f034d91f20ad331aff6a03ebbed444f8",
    "filename": "src/test/java/seedu/smartlib/testutil/PersonBuilder.java",
    "status": "modified",
    "additions": 14,
    "deletions": 1,
    "changes": 15,
    "blob_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/blob/de86906597d9f8b84991f26a0def98c552a4b083/src/test/java/seedu/smartlib/testutil/PersonBuilder.java",
    "raw_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/raw/de86906597d9f8b84991f26a0def98c552a4b083/src/test/java/seedu/smartlib/testutil/PersonBuilder.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103T-W13-2/tp/contents/src/test/java/seedu/smartlib/testutil/PersonBuilder.java?ref=de86906597d9f8b84991f26a0def98c552a4b083",
    "patch": "@@ -9,6 +9,7 @@\n import seedu.smartlib.model.reader.Phone;\n import seedu.smartlib.model.reader.Reader;\n import seedu.smartlib.model.tag.Tag;\n+import seedu.smartlib.model.reader.Remark;\n import seedu.smartlib.model.util.SampleDataUtil;\n \n /**\n@@ -20,11 +21,13 @@\n     public static final String DEFAULT_PHONE = \"85355255\";\n     public static final String DEFAULT_EMAIL = \"amy@gmail.com\";\n     public static final String DEFAULT_ADDRESS = \"123, Jurong West Ave 6, #08-111\";\n+    public static final String DEFAULT_REMARK = \"Remark\";\n \n     private Name name;\n     private Phone phone;\n     private Email email;\n     private Address address;\n+    private Remark remark;\n     private Set<Tag> tags;\n \n     /**\n@@ -35,6 +38,7 @@ public PersonBuilder() {\n         phone = new Phone(DEFAULT_PHONE);\n         email = new Email(DEFAULT_EMAIL);\n         address = new Address(DEFAULT_ADDRESS);\n+        remark = new Remark(DEFAULT_REMARK);\n         tags = new HashSet<>();\n     }\n \n@@ -46,6 +50,7 @@ public PersonBuilder(Reader readerToCopy) {\n         phone = readerToCopy.getPhone();\n         email = readerToCopy.getEmail();\n         address = readerToCopy.getAddress();\n+        remark = readerToCopy.getRemark();\n         tags = new HashSet<>(readerToCopy.getTags());\n     }\n \n@@ -89,8 +94,16 @@ public PersonBuilder withEmail(String email) {\n         return this;\n     }\n \n+    /**\n+     * Sets the {@code Remark} of the {@code Person} that we are building.\n+     */\n+    public PersonBuilder withRemark(String remark) {\n+        this.remark = new Remark(remark);\n+        return this;\n+    }\n+\n     public Reader build() {\n-        return new Reader(name, phone, email, address, tags);\n+        return new Reader(name, phone, email, address, remark, tags);\n     }\n \n }"
  },
  {
    "sha": "1dd767759f78007cc30328653bbb27e310b46e38",
    "filename": "src/test/java/seedu/smartlib/testutil/TypicalPersons.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/blob/de86906597d9f8b84991f26a0def98c552a4b083/src/test/java/seedu/smartlib/testutil/TypicalPersons.java",
    "raw_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/raw/de86906597d9f8b84991f26a0def98c552a4b083/src/test/java/seedu/smartlib/testutil/TypicalPersons.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103T-W13-2/tp/contents/src/test/java/seedu/smartlib/testutil/TypicalPersons.java?ref=de86906597d9f8b84991f26a0def98c552a4b083",
    "patch": "@@ -25,11 +25,11 @@\n \n     public static final Reader ALICE = new PersonBuilder().withName(\"Alice Pauline\")\n             .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")\n-            .withPhone(\"94351253\")\n+            .withPhone(\"94351253\").withRemark(\"\")\n             .withTags(\"friends\").build();\n     public static final Reader BENSON = new PersonBuilder().withName(\"Benson Meier\")\n             .withAddress(\"311, Clementi Ave 2, #02-25\")\n-            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")\n+            .withEmail(\"johnd@example.com\").withPhone(\"98765432\").withRemark(\"\")\n             .withTags(\"owesMoney\", \"friends\").build();\n     public static final Reader CARL = new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")\n             .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();"
  }
]
