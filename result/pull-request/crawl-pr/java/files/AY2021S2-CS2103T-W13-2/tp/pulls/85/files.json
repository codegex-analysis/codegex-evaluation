[
  {
    "sha": "d676e9c4f8209d35dd11623670b98d8c682d6985",
    "filename": "src/main/java/seedu/smartlib/logic/commands/EditCommand.java",
    "status": "modified",
    "additions": 3,
    "deletions": 6,
    "changes": 9,
    "blob_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/blob/d023bc1d9a20df2febe1bdfe47a13c371012dad0/src/main/java/seedu/smartlib/logic/commands/EditCommand.java",
    "raw_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/raw/d023bc1d9a20df2febe1bdfe47a13c371012dad0/src/main/java/seedu/smartlib/logic/commands/EditCommand.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103T-W13-2/tp/contents/src/main/java/seedu/smartlib/logic/commands/EditCommand.java?ref=d023bc1d9a20df2febe1bdfe47a13c371012dad0",
    "patch": "@@ -19,11 +19,7 @@\n import seedu.smartlib.commons.util.CollectionUtil;\n import seedu.smartlib.logic.commands.exceptions.CommandException;\n import seedu.smartlib.model.Model;\n-import seedu.smartlib.model.reader.Address;\n-import seedu.smartlib.model.reader.Email;\n-import seedu.smartlib.model.reader.Name;\n-import seedu.smartlib.model.reader.Phone;\n-import seedu.smartlib.model.reader.Reader;\n+import seedu.smartlib.model.reader.*;\n import seedu.smartlib.model.tag.Tag;\n \n /**\n@@ -97,9 +93,10 @@ private static Reader createEditedPerson(Reader readerToEdit, EditPersonDescript\n         Phone updatedPhone = editPersonDescriptor.getPhone().orElse(readerToEdit.getPhone());\n         Email updatedEmail = editPersonDescriptor.getEmail().orElse(readerToEdit.getEmail());\n         Address updatedAddress = editPersonDescriptor.getAddress().orElse(readerToEdit.getAddress());\n+        Remark updatedRemark = readerToEdit.getRemark(); // edit command does not allow editing remarks\n         Set<Tag> updatedTags = editPersonDescriptor.getTags().orElse(readerToEdit.getTags());\n \n-        return new Reader(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);\n+        return new Reader(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedRemark, updatedTags);\n     }\n \n     @Override"
  },
  {
    "sha": "5a403bae81d4f5a5628a6cd26a00776063dace76",
    "filename": "src/main/java/seedu/smartlib/logic/commands/RemarkCommand.java",
    "status": "added",
    "additions": 91,
    "deletions": 0,
    "changes": 91,
    "blob_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/blob/d023bc1d9a20df2febe1bdfe47a13c371012dad0/src/main/java/seedu/smartlib/logic/commands/RemarkCommand.java",
    "raw_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/raw/d023bc1d9a20df2febe1bdfe47a13c371012dad0/src/main/java/seedu/smartlib/logic/commands/RemarkCommand.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103T-W13-2/tp/contents/src/main/java/seedu/smartlib/logic/commands/RemarkCommand.java?ref=d023bc1d9a20df2febe1bdfe47a13c371012dad0",
    "patch": "@@ -0,0 +1,91 @@\n+package seedu.smartlib.logic.commands;\n+\n+import static seedu.smartlib.commons.util.CollectionUtil.requireAllNonNull;\n+import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_REMARK;\n+import static seedu.smartlib.model.Model.PREDICATE_SHOW_ALL_PERSONS;\n+\n+import seedu.smartlib.commons.core.Messages;\n+import seedu.smartlib.commons.core.index.Index;\n+import seedu.smartlib.logic.commands.exceptions.CommandException;\n+import seedu.smartlib.model.Model;\n+import seedu.smartlib.model.reader.Reader;\n+import seedu.smartlib.model.reader.Remark;\n+\n+import java.util.List;\n+\n+/**\n+ * Changes the remark of an existing person in the address book.\n+ */\n+public class RemarkCommand extends Command {\n+\n+    public static final String COMMAND_WORD = \"remark\";\n+    public static final String MESSAGE_USAGE = COMMAND_WORD + \": Edits the remark of the person identified \"\n+            + \"by the index number used in the last person listing. \"\n+            + \"Existing remark will be overwritten by the input.\\n\"\n+            + \"Parameters: INDEX (must be a positive integer) \"\n+            + PREFIX_REMARK + \"[REMARK]\\n\"\n+            + \"Example: \" + COMMAND_WORD + \" 1 \"\n+            + PREFIX_REMARK + \"Likes to swim.\";\n+\n+    public static final String MESSAGE_NOT_IMPLEMENTED_YET = \"Remark command not implemented yet\";\n+    public static final String MESSAGE_ARGUMENTS = \"Index: %1$d, Remark: %2$s\";\n+    public static final String MESSAGE_ADD_REMARK_SUCCESS = \"Added remark to Person: %1$s\";\n+    public static final String MESSAGE_DELETE_REMARK_SUCCESS = \"Removed remark from Person: %1$s\";\n+\n+    private final Index index;\n+    private final Remark remark;\n+    /**\n+     * @param index of the person in the filtered person list to edit the remark\n+     * @param remark of the person to be updated to\n+     */\n+    public RemarkCommand(Index index, Remark remark) {\n+        requireAllNonNull(index, remark);\n+\n+        this.index = index;\n+        this.remark = remark;\n+    }\n+    @Override\n+    public CommandResult execute(Model model) throws CommandException {\n+        List<Reader> lastShownList = model.getFilteredPersonList();\n+\n+        if (index.getZeroBased() >= lastShownList.size()) {\n+            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);\n+        }\n+\n+        Reader personToEdit = lastShownList.get(index.getZeroBased());\n+        Reader editedPerson = new Reader(personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),\n+                personToEdit.getAddress(), remark, personToEdit.getTags());\n+\n+        model.setPerson(personToEdit, editedPerson);\n+        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);\n+\n+        return new CommandResult(generateSuccessMessage(editedPerson));\n+    }\n+\n+    /**\n+     * Generates a command execution success message based on whether the remark is added to or removed from\n+     * {@code personToEdit}.\n+     */\n+    private String generateSuccessMessage(Reader personToEdit) {\n+        String message = !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;\n+        return String.format(message, personToEdit);\n+    }\n+\n+    @Override\n+    public boolean equals(Object other) {\n+        // short circuit if same object\n+        if (other == this) {\n+            return true;\n+        }\n+\n+        // instanceof handles nulls\n+        if (!(other instanceof RemarkCommand)) {\n+            return false;\n+        }\n+\n+        // state check\n+        RemarkCommand e = (RemarkCommand) other;\n+        return index.equals(e.index)\n+                && remark.equals(e.remark);\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "0f479d5accc20ab8015c4e77b653478d7e4dd0aa",
    "filename": "src/main/java/seedu/smartlib/logic/parser/AddCommandParser.java",
    "status": "modified",
    "additions": 5,
    "deletions": 11,
    "changes": 16,
    "blob_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/blob/d023bc1d9a20df2febe1bdfe47a13c371012dad0/src/main/java/seedu/smartlib/logic/parser/AddCommandParser.java",
    "raw_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/raw/d023bc1d9a20df2febe1bdfe47a13c371012dad0/src/main/java/seedu/smartlib/logic/parser/AddCommandParser.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103T-W13-2/tp/contents/src/main/java/seedu/smartlib/logic/parser/AddCommandParser.java?ref=d023bc1d9a20df2febe1bdfe47a13c371012dad0",
    "patch": "@@ -1,22 +1,15 @@\n package seedu.smartlib.logic.parser;\n \n import static seedu.smartlib.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;\n-import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_ADDRESS;\n-import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_EMAIL;\n-import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_NAME;\n-import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_PHONE;\n-import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_TAG;\n+import static seedu.smartlib.logic.parser.CliSyntax.*;\n \n import java.util.Set;\n import java.util.stream.Stream;\n \n import seedu.smartlib.logic.commands.AddCommand;\n+import seedu.smartlib.logic.commands.RemarkCommand;\n import seedu.smartlib.logic.parser.exceptions.ParseException;\n-import seedu.smartlib.model.reader.Address;\n-import seedu.smartlib.model.reader.Email;\n-import seedu.smartlib.model.reader.Name;\n-import seedu.smartlib.model.reader.Phone;\n-import seedu.smartlib.model.reader.Reader;\n+import seedu.smartlib.model.reader.*;\n import seedu.smartlib.model.tag.Tag;\n \n /**\n@@ -43,8 +36,9 @@ public AddCommand parse(String args) throws ParseException {\n         Email email = ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());\n         Address address = ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());\n         Set<Tag> tagList = ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));\n+        Remark remark = new Remark(\"\"); // add command does not allow adding remarks straight away\n \n-        Reader reader = new Reader(name, phone, email, address, tagList);\n+        Reader reader = new Reader(name, phone, email, address, remark, tagList);\n \n         return new AddCommand(reader);\n     }"
  },
  {
    "sha": "7d4e5a41e7a45d1e76b7f3853f2314e029922748",
    "filename": "src/main/java/seedu/smartlib/logic/parser/CliSyntax.java",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/blob/d023bc1d9a20df2febe1bdfe47a13c371012dad0/src/main/java/seedu/smartlib/logic/parser/CliSyntax.java",
    "raw_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/raw/d023bc1d9a20df2febe1bdfe47a13c371012dad0/src/main/java/seedu/smartlib/logic/parser/CliSyntax.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103T-W13-2/tp/contents/src/main/java/seedu/smartlib/logic/parser/CliSyntax.java?ref=d023bc1d9a20df2febe1bdfe47a13c371012dad0",
    "patch": "@@ -9,6 +9,7 @@\n     public static final Prefix PREFIX_NAME = new Prefix(\"n/\");\n     public static final Prefix PREFIX_PHONE = new Prefix(\"p/\");\n     public static final Prefix PREFIX_EMAIL = new Prefix(\"e/\");\n+    public static final Prefix PREFIX_REMARK = new Prefix(\"r/\");\n     public static final Prefix PREFIX_ADDRESS = new Prefix(\"a/\");\n     public static final Prefix PREFIX_TAG = new Prefix(\"t/\");\n "
  },
  {
    "sha": "b03c6b140a127155e6599cdacceab02fe4c8aba5",
    "filename": "src/main/java/seedu/smartlib/logic/parser/RemarkCommandParser.java",
    "status": "added",
    "additions": 32,
    "deletions": 0,
    "changes": 32,
    "blob_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/blob/d023bc1d9a20df2febe1bdfe47a13c371012dad0/src/main/java/seedu/smartlib/logic/parser/RemarkCommandParser.java",
    "raw_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/raw/d023bc1d9a20df2febe1bdfe47a13c371012dad0/src/main/java/seedu/smartlib/logic/parser/RemarkCommandParser.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103T-W13-2/tp/contents/src/main/java/seedu/smartlib/logic/parser/RemarkCommandParser.java?ref=d023bc1d9a20df2febe1bdfe47a13c371012dad0",
    "patch": "@@ -0,0 +1,32 @@\n+package seedu.smartlib.logic.parser;\n+\n+import seedu.smartlib.commons.core.index.Index;\n+import seedu.smartlib.commons.exceptions.IllegalValueException;\n+import seedu.smartlib.logic.commands.RemarkCommand;\n+import seedu.smartlib.logic.parser.exceptions.ParseException;\n+import seedu.smartlib.model.reader.Remark;\n+\n+import static java.util.Objects.requireNonNull;\n+import static seedu.smartlib.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;\n+import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_REMARK;\n+\n+public class RemarkCommandParser {\n+\n+    public RemarkCommand parse(String args) throws ParseException {\n+        requireNonNull(args);\n+        ArgumentMultimap argMultimap = ArgumentTokenizer.tokenize(args,\n+                PREFIX_REMARK);\n+\n+        Index index;\n+        try {\n+            index = ParserUtil.parseIndex(argMultimap.getPreamble());\n+        } catch (IllegalValueException ive) {\n+            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,\n+                    RemarkCommand.MESSAGE_USAGE), ive);\n+        }\n+\n+        String remark = argMultimap.getValue(PREFIX_REMARK).orElse(\"\");\n+\n+        return new RemarkCommand(index, new Remark(remark));\n+    }\n+}"
  },
  {
    "sha": "6788b5be9e94958ff4de234c3c4bae9f4a9b656a",
    "filename": "src/main/java/seedu/smartlib/logic/parser/SmartLibParser.java",
    "status": "modified",
    "additions": 4,
    "deletions": 9,
    "changes": 13,
    "blob_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/blob/d023bc1d9a20df2febe1bdfe47a13c371012dad0/src/main/java/seedu/smartlib/logic/parser/SmartLibParser.java",
    "raw_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/raw/d023bc1d9a20df2febe1bdfe47a13c371012dad0/src/main/java/seedu/smartlib/logic/parser/SmartLibParser.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103T-W13-2/tp/contents/src/main/java/seedu/smartlib/logic/parser/SmartLibParser.java?ref=d023bc1d9a20df2febe1bdfe47a13c371012dad0",
    "patch": "@@ -6,15 +6,7 @@\n import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n \n-import seedu.smartlib.logic.commands.AddCommand;\n-import seedu.smartlib.logic.commands.ClearCommand;\n-import seedu.smartlib.logic.commands.Command;\n-import seedu.smartlib.logic.commands.DeleteCommand;\n-import seedu.smartlib.logic.commands.EditCommand;\n-import seedu.smartlib.logic.commands.ExitCommand;\n-import seedu.smartlib.logic.commands.FindCommand;\n-import seedu.smartlib.logic.commands.HelpCommand;\n-import seedu.smartlib.logic.commands.ListCommand;\n+import seedu.smartlib.logic.commands.*;\n import seedu.smartlib.logic.parser.exceptions.ParseException;\n \n /**\n@@ -59,6 +51,9 @@ public Command parseCommand(String userInput) throws ParseException {\n         case FindCommand.COMMAND_WORD:\n             return new FindCommandParser().parse(arguments);\n \n+        case RemarkCommand.COMMAND_WORD:\n+            return new RemarkCommandParser().parse(arguments);\n+\n         case ListCommand.COMMAND_WORD:\n             return new ListCommand();\n "
  },
  {
    "sha": "7e6224c700fb9cfc2b138564caa27ea4faf0a4e2",
    "filename": "src/main/java/seedu/smartlib/model/reader/Reader.java",
    "status": "modified",
    "additions": 9,
    "deletions": 2,
    "changes": 11,
    "blob_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/blob/d023bc1d9a20df2febe1bdfe47a13c371012dad0/src/main/java/seedu/smartlib/model/reader/Reader.java",
    "raw_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/raw/d023bc1d9a20df2febe1bdfe47a13c371012dad0/src/main/java/seedu/smartlib/model/reader/Reader.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103T-W13-2/tp/contents/src/main/java/seedu/smartlib/model/reader/Reader.java?ref=d023bc1d9a20df2febe1bdfe47a13c371012dad0",
    "patch": "@@ -19,6 +19,7 @@\n     private final Name name;\n     private final Phone phone;\n     private final Email email;\n+    private final Remark remark;\n \n     // Data fields\n     private final Address address;\n@@ -27,12 +28,13 @@\n     /**\n      * Every field must be present and not null.\n      */\n-    public Reader(Name name, Phone phone, Email email, Address address, Set<Tag> tags) {\n+    public Reader(Name name, Phone phone, Email email, Address address, Remark remark, Set<Tag> tags) {\n         requireAllNonNull(name, phone, email, address, tags);\n         this.name = name;\n         this.phone = phone;\n         this.email = email;\n         this.address = address;\n+        this.remark = remark;\n         this.tags.addAll(tags);\n     }\n \n@@ -110,7 +112,9 @@ public String toString() {\n                 .append(\"; Email: \")\n                 .append(getEmail())\n                 .append(\"; Address: \")\n-                .append(getAddress());\n+                .append(getAddress())\n+                .append(\" Remark: \")\n+                .append(getRemark());\n \n         Set<Tag> tags = getTags();\n         if (!tags.isEmpty()) {\n@@ -120,4 +124,7 @@ public String toString() {\n         return builder.toString();\n     }\n \n+    public Remark getRemark() {\n+        return remark;\n+    }\n }"
  },
  {
    "sha": "326e527faa4d745dcc8cafb06eb52620b2801f80",
    "filename": "src/main/java/seedu/smartlib/model/reader/Remark.java",
    "status": "added",
    "additions": 32,
    "deletions": 0,
    "changes": 32,
    "blob_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/blob/d023bc1d9a20df2febe1bdfe47a13c371012dad0/src/main/java/seedu/smartlib/model/reader/Remark.java",
    "raw_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/raw/d023bc1d9a20df2febe1bdfe47a13c371012dad0/src/main/java/seedu/smartlib/model/reader/Remark.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103T-W13-2/tp/contents/src/main/java/seedu/smartlib/model/reader/Remark.java?ref=d023bc1d9a20df2febe1bdfe47a13c371012dad0",
    "patch": "@@ -0,0 +1,32 @@\n+package seedu.smartlib.model.reader;\n+import static java.util.Objects.requireNonNull;\n+\n+/**\n+ * Represents a Person's remark in the address book.\n+ * Guarantees: immutable; is always valid\n+ */\n+public class Remark {\n+    public final String value;\n+\n+    public Remark(String remark) {\n+        requireNonNull(remark);\n+        value = remark;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return value;\n+    }\n+\n+    @Override\n+    public boolean equals(Object other) {\n+        return other == this // short circuit if same object\n+                || (other instanceof Remark // instanceof handles nulls\n+                && value.equals(((Remark) other).value)); // state check\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return value.hashCode();\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "feec2b9b9a5655b8480b438cdb8ca58a9d13b3ee",
    "filename": "src/main/java/seedu/smartlib/model/util/SampleDataUtil.java",
    "status": "modified",
    "additions": 8,
    "deletions": 11,
    "changes": 19,
    "blob_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/blob/d023bc1d9a20df2febe1bdfe47a13c371012dad0/src/main/java/seedu/smartlib/model/util/SampleDataUtil.java",
    "raw_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/raw/d023bc1d9a20df2febe1bdfe47a13c371012dad0/src/main/java/seedu/smartlib/model/util/SampleDataUtil.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103T-W13-2/tp/contents/src/main/java/seedu/smartlib/model/util/SampleDataUtil.java?ref=d023bc1d9a20df2febe1bdfe47a13c371012dad0",
    "patch": "@@ -6,36 +6,33 @@\n \n import seedu.smartlib.model.ReadOnlySmartLib;\n import seedu.smartlib.model.SmartLib;\n-import seedu.smartlib.model.reader.Address;\n-import seedu.smartlib.model.reader.Email;\n-import seedu.smartlib.model.reader.Name;\n-import seedu.smartlib.model.reader.Phone;\n-import seedu.smartlib.model.reader.Reader;\n+import seedu.smartlib.model.reader.*;\n import seedu.smartlib.model.tag.Tag;\n \n /**\n  * Contains utility methods for populating {@code AddressBook} with sample data.\n  */\n public class SampleDataUtil {\n+    public static final Remark EMPTY_REMARK = new Remark(\"\");\n     public static Reader[] getSamplePersons() {\n         return new Reader[] {\n             new Reader(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),\n-                new Address(\"Blk 30 Geylang Street 29, #06-40\"),\n+                new Address(\"Blk 30 Geylang Street 29, #06-40\"), EMPTY_REMARK,\n                 getTagSet(\"friends\")),\n             new Reader(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),\n-                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),\n+                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), EMPTY_REMARK,\n                 getTagSet(\"colleagues\", \"friends\")),\n             new Reader(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),\n-                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),\n+                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), EMPTY_REMARK,\n                 getTagSet(\"neighbours\")),\n             new Reader(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),\n-                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),\n+                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), EMPTY_REMARK,\n                 getTagSet(\"family\")),\n             new Reader(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),\n-                new Address(\"Blk 47 Tampines Street 20, #17-35\"),\n+                new Address(\"Blk 47 Tampines Street 20, #17-35\"), EMPTY_REMARK,\n                 getTagSet(\"classmates\")),\n             new Reader(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),\n-                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),\n+                new Address(\"Blk 45 Aljunied Street 85, #11-31\"), EMPTY_REMARK,\n                 getTagSet(\"colleagues\"))\n         };\n     }"
  },
  {
    "sha": "60870fc5d0ba61f259446b2fae189ac56c1e57d6",
    "filename": "src/main/java/seedu/smartlib/storage/JsonAdaptedPerson.java",
    "status": "modified",
    "additions": 4,
    "deletions": 6,
    "changes": 10,
    "blob_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/blob/d023bc1d9a20df2febe1bdfe47a13c371012dad0/src/main/java/seedu/smartlib/storage/JsonAdaptedPerson.java",
    "raw_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/raw/d023bc1d9a20df2febe1bdfe47a13c371012dad0/src/main/java/seedu/smartlib/storage/JsonAdaptedPerson.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103T-W13-2/tp/contents/src/main/java/seedu/smartlib/storage/JsonAdaptedPerson.java?ref=d023bc1d9a20df2febe1bdfe47a13c371012dad0",
    "patch": "@@ -10,11 +10,7 @@\n import com.fasterxml.jackson.annotation.JsonProperty;\n \n import seedu.smartlib.commons.exceptions.IllegalValueException;\n-import seedu.smartlib.model.reader.Address;\n-import seedu.smartlib.model.reader.Email;\n-import seedu.smartlib.model.reader.Name;\n-import seedu.smartlib.model.reader.Phone;\n-import seedu.smartlib.model.reader.Reader;\n+import seedu.smartlib.model.reader.*;\n import seedu.smartlib.model.tag.Tag;\n \n /**\n@@ -102,8 +98,10 @@ public Reader toModelType() throws IllegalValueException {\n         }\n         final Address modelAddress = new Address(address);\n \n+        final Remark modelRemark = new Remark(\"\"); //TODO: Implement parsing and marshalling in the storage commit.\n+\n         final Set<Tag> modelTags = new HashSet<>(personTags);\n-        return new Reader(modelName, modelPhone, modelEmail, modelAddress, modelTags);\n+        return new Reader(modelName, modelPhone, modelEmail, modelAddress, modelRemark, modelTags);\n     }\n \n }"
  },
  {
    "sha": "5f615067b84837e24025b57bd01919774d660edf",
    "filename": "src/main/java/seedu/smartlib/ui/ReaderCard.java",
    "status": "modified",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/blob/d023bc1d9a20df2febe1bdfe47a13c371012dad0/src/main/java/seedu/smartlib/ui/ReaderCard.java",
    "raw_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/raw/d023bc1d9a20df2febe1bdfe47a13c371012dad0/src/main/java/seedu/smartlib/ui/ReaderCard.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103T-W13-2/tp/contents/src/main/java/seedu/smartlib/ui/ReaderCard.java?ref=d023bc1d9a20df2febe1bdfe47a13c371012dad0",
    "patch": "@@ -40,6 +40,8 @@\n     private Label email;\n     @FXML\n     private FlowPane tags;\n+    @FXML\n+    private Label remark;\n \n     /**\n      * Creates a {@code PersonCode} with the given {@code Person} and index to display.\n@@ -55,6 +57,7 @@ public ReaderCard(Reader reader, int displayedIndex) {\n         reader.getTags().stream()\n                 .sorted(Comparator.comparing(tag -> tag.tagName))\n                 .forEach(tag -> tags.getChildren().add(new Label(tag.tagName)));\n+        remark.setText(reader.getRemark().value);\n     }\n \n     @Override"
  },
  {
    "sha": "d1a7eb614f8352b847c07754be9b80cd299dd51e",
    "filename": "src/main/resources/view/PersonListCard.fxml",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/blob/d023bc1d9a20df2febe1bdfe47a13c371012dad0/src/main/resources/view/PersonListCard.fxml",
    "raw_url": "https://github.com/AY2021S2-CS2103T-W13-2/tp/raw/d023bc1d9a20df2febe1bdfe47a13c371012dad0/src/main/resources/view/PersonListCard.fxml",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103T-W13-2/tp/contents/src/main/resources/view/PersonListCard.fxml?ref=d023bc1d9a20df2febe1bdfe47a13c371012dad0",
    "patch": "@@ -31,6 +31,7 @@\n       <Label fx:id=\"phone\" styleClass=\"cell_small_label\" text=\"\\$phone\" />\n       <Label fx:id=\"address\" styleClass=\"cell_small_label\" text=\"\\$address\" />\n       <Label fx:id=\"email\" styleClass=\"cell_small_label\" text=\"\\$email\" />\n+      <Label fx:id=\"remark\" styleClass=\"cell_small_label\" text=\"\\$remark\" />\n     </VBox>\n   </GridPane>\n </HBox>"
  }
]
