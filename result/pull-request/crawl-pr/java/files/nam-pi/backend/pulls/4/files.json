[
  {
    "sha": "20aaf2adfb688c5b894234fe00bfee9c8679c8bd",
    "filename": ".gitignore",
    "status": "modified",
    "additions": 7,
    "deletions": 1,
    "changes": 8,
    "blob_url": "https://github.com/nam-pi/backend/blob/dfd74a299a65243031d4f0a07af1f936b8ab7ccb/.gitignore",
    "raw_url": "https://github.com/nam-pi/backend/raw/dfd74a299a65243031d4f0a07af1f936b8ab7ccb/.gitignore",
    "contents_url": "https://api.github.com/repos/nam-pi/backend/contents/.gitignore?ref=dfd74a299a65243031d4f0a07af1f936b8ab7ccb",
    "patch": "@@ -29,4 +29,10 @@ build/\n \n ### VS Code ###\n .vscode/\n-.devcontainer/\n\\ No newline at end of file\n+.devcontainer/\n+\n+### VIM ###\n+.vim/\n+\n+.env\n+docker-compose.override.yml"
  },
  {
    "sha": "865848e23753bd558074b322850590936dfedf6e",
    "filename": "Dockerfile",
    "status": "added",
    "additions": 27,
    "deletions": 0,
    "changes": 27,
    "blob_url": "https://github.com/nam-pi/backend/blob/dfd74a299a65243031d4f0a07af1f936b8ab7ccb/Dockerfile",
    "raw_url": "https://github.com/nam-pi/backend/raw/dfd74a299a65243031d4f0a07af1f936b8ab7ccb/Dockerfile",
    "contents_url": "https://api.github.com/repos/nam-pi/backend/contents/Dockerfile?ref=dfd74a299a65243031d4f0a07af1f936b8ab7ccb",
    "patch": "@@ -0,0 +1,27 @@\n+ARG JAVA_VERSION=11\n+\n+FROM adoptopenjdk/maven-openjdk${JAVA_VERSION}\n+LABEL maintainer=“nampi@icar-us.eu”\n+\n+ARG APPLICATION_PORT=8080\n+ARG DEFAULT_LIMIT=25\n+ARG KEYCLOAK_REALM\n+ARG KEYCLOAK_RESOURCE\n+ARG KEYCLOAK_URL\n+ARG LOGGING_LEVEL\n+ARG OTHER_OWL_URLS\n+ARG TRIPLE_STORE_URL\n+\n+ENV APPLICATION_PORT=${APPLICATION_PORT}\n+ENV DEFAULT_LIMIT=${DEFAULT_LIMIT}\n+ENV KEYCLOAK_REALM=${KEYCLOAK_REALM}\n+ENV KEYCLOAK_RESOURCE=${KEYCLOAK_RESOURCE}\n+ENV KEYCLOAK_URL=${KEYCLOAK_URL}\n+ENV LOGGING_LEVEL=${LOGGING_LEVEL}\n+ENV OTHER_OWL_URLS=${OTHER_OWL_URLS}\n+ENV TRIPLE_STORE_URL=${TRIPLE_STORE_URL}\n+\n+EXPOSE ${APPLICATION_PORT}\n+COPY ./ ./\n+RUN mvn package\n+ENTRYPOINT [\"java\",\"-jar\",\"./target/nampi-backend.jar\"]"
  },
  {
    "sha": "0cc49ad12cc8c011df1ac34b68db7a54619042c5",
    "filename": "Dockerfile.fuseki",
    "status": "added",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/nam-pi/backend/blob/dfd74a299a65243031d4f0a07af1f936b8ab7ccb/Dockerfile.fuseki",
    "raw_url": "https://github.com/nam-pi/backend/raw/dfd74a299a65243031d4f0a07af1f936b8ab7ccb/Dockerfile.fuseki",
    "contents_url": "https://api.github.com/repos/nam-pi/backend/contents/Dockerfile.fuseki?ref=dfd74a299a65243031d4f0a07af1f936b8ab7ccb",
    "patch": "@@ -0,0 +1,6 @@\n+ARG FUSEKI_VERSION=latest\n+\n+FROM stain/jena-fuseki:${FUSEKI_VERSION}\n+\n+RUN apt-get update; \\\n+  apt-get install -y --no-install-recommends procps"
  },
  {
    "sha": "f730817e583de9a6ca65ee20dc06381917290c57",
    "filename": "README.md",
    "status": "modified",
    "additions": 71,
    "deletions": 11,
    "changes": 82,
    "blob_url": "https://github.com/nam-pi/backend/blob/dfd74a299a65243031d4f0a07af1f936b8ab7ccb/README.md",
    "raw_url": "https://github.com/nam-pi/backend/raw/dfd74a299a65243031d4f0a07af1f936b8ab7ccb/README.md",
    "contents_url": "https://api.github.com/repos/nam-pi/backend/contents/README.md?ref=dfd74a299a65243031d4f0a07af1f936b8ab7ccb",
    "patch": "@@ -2,10 +2,12 @@\n \n This is the server backend and API for NAMPI.\n \n-## Prerequesite\n+## Prerequisite\n \n The NAMPI backend is a [Spring Boot](https://spring.io/projects/spring-boot) app, the data is stored in [Apache Fuseki](https://jena.apache.org/documentation/fuseki2/) and the identity management is handled by [Keycloak](https://www.keycloak.org/).\n \n+*Note: Currently the server only runs on Java <14 because Java 14 doesn't work yet with Keycloak, see this [issue](https://issues.redhat.com/browse/KEYCLOAK-13633).*\n+\n ### Keycloak\n \n * A new keycloak [realm](https://www.keycloak.org/docs/latest/server_admin/index.html#_create-realm) needs to be created using the default settings.\n@@ -26,24 +28,82 @@ Some users can be created for a development environment. They need to get at lea\n \n A number of command line parameters are available to configure the application.\n \n-| Parameter         | Mandatory | Default Value                                                       | Example                          | Description                                                                                                                                  |\n-|-------------------|-----------|---------------------------------------------------------------------|----------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------|\n-| APPLICATION_PORT  |           | 8080                                                                |                                  | The port the application will run on                                                                                                         |\n-| CORE_OWL_URL      |           | https://raw.githubusercontent.com/nam-pi/ontologies/master/core.owl |                                  | The location of the NAMPI-Core ontology                                                                                                      |\n-| KEYCLOAK_URL      | *         |                                                                     | http://localhost:8080/auth/      | The Keycloak URL                                                                                                                             |\n-| KEYCLOAK_REALM    | *         |                                                                     | nampi                            | The name of the Keycloak realm                                                                                                               |\n-| KEYCLOAK_RESOURCE | *         |                                                                     | nampi-client                     | The name of the Keycloak client                                                                                                              |\n-| LOGGING_LEVEL     |           | INFO                                                                | DEBUG                            | The Spring Boot [logging level](https://docs.spring.io/spring-boot/docs/1.2.1.RELEASE/reference/htmlsingle/#boot-features-custom-log-levels) |\n-| TRIPLE_STORE_URL  | *         |                                                                     | http://localhost:3030/nampi-data | The Fuseki URL including the path to the dataset                                                                                             |\n+| Parameter         | Mandatory | Default Value                   | Example                                           | Description                                                                                                                                  |\n+|-------------------|-----------|---------------------------------|---------------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------|\n+| APPLICATION_PORT  |           | 8080                            |                                                   | The port the application will run on                                                                                                         |\n+| CORE_OWL_URL      |           | https://purl.org/nampi/owl/core |                                                   | The location of the NAMPI-Core ontology                                                                                                      |\n+| DEFAULT_LIMIT     |           | 25                              |                                                   | The default result number to return when requesting from a collection endpoint like '/persons                                                |\n+| KEYCLOAK_URL      | *         |                                 | http://localhost:8080/auth/                       | The URL  of the Keycloak authentication endpoint                                                                                             |\n+| KEYCLOAK_REALM    | *         |                                 | nampi                                             | The name of the Keycloak realm                                                                                                               |\n+| KEYCLOAK_RESOURCE | *         |                                 | nampi-client                                      | The name of the Keycloak client                                                                                                              |\n+| LOGGING_LEVEL     |           | INFO                            | DEBUG                                             | The Spring Boot [logging level](https://docs.spring.io/spring-boot/docs/1.2.1.RELEASE/reference/htmlsingle/#boot-features-custom-log-levels) |\n+| OTHER_OWL_URLS    |           |                                 | http://example.com/owl/1,http://example.com/owl/2 | A comma separated list of ontologies that will be used for inference                                                                         |\n+| TRIPLE_STORE_URL  | *         |                                 | http://localhost:3030/nampi-data                  | The Fuseki URL including the path to the dataset                                                                                             |\n \n-## Running the Spring Boot application\n+## Deploying as a standalone Spring Boot application\n \n The application can be run from the command line using Maven, the environment parameters can be appended to the command.\n \n ### Example\n \n `mvn spring-boot:run \"'-Dspring-boot.run.arguments=--KEYCLOAK_URL=http://localhost:8081/auth,--KEYCLOAK_REALM=nampi,--KEYCLOAK_RESOURCE=nampi-client,--LOGGING_LEVEL=DEBUG,--TRIPLE_STORE_URL=http://localhost:3030/nampi-data'\"`\n \n+#### Windows\n+\n+`mvn spring-boot:run \"-Dspring-boot.run.arguments=--KEYCLOAK_URL=http://keycloak.dev.local:8080/auth --KEYCLOAK_REALM=nampi --KEYCLOAK_RESOURCE=nampi-client --LOGGING_LEVEL=DEBUG --TRIPLE_STORE_URL=http://localhost:3030/nampi-data\"`\n+\n+Note: To work on Windows, Keycloak must be reachable with a domain, this can be configured in the hosts file:\n+\n+    Location: `C:\\Windows\\System32\\Drivers\\etc\\hosts`\n+    Added mapping: `127.0.0.1 keycloak.dev.local`\n+\n+## Deploying as standalone Docker container\n+\n+The application can be run as a standalone Docker container connected to pre-existing Fuseki and Keycloak containers or external services. The environment parameters shown in [the configuration section](#configuring-the-application) can be added with `--build-arg` (see [documentation](https://docs.docker.com/engine/reference/commandline/build/#set-build-time-variables---build-arg)). Default values still apply as documented above.\n+\n+Example:\n+\n+```\n+docker build --build-arg KEYCLOAK_REALM=nampi --build-arg KEYCLOAK_RESOURCE=nampi-client --build-arg KEYCLOAK_URL=http://example.com/keycloak/auth --build-arg LOGGING_LEVEL=TRACE --build-arg OTHER_OWL_URLS=https://purl.org/nampi/owl/monastic-life --build-arg TRIPLE_STORE_URL=http://example.com/fuseki/data .\n+```\n+\n+## Deploying with `docker-compose`\n+\n+In addition to the pure Docker container approach, a complete environment for NAMPI can be set up with the provided `docker-compose.yml` file and an accompanying `docker-compose.override.yml` to specify exposed ports, reverse proxy settings or similar configurations. The compose-file has been kept as slim as possible to make it better adaptable to different environments.\n+\n+If used as-is it will start containers for Fuseki and Keycloak, including a Postgres Container to store the user data, in addition to the actual backend application. The environment parameter mentioned in [the configuration section](#configuring-the-application) still apply with a change: the full `TRIPLE_STORE_URL` gets replaced by `DATASET_NAME` as the rest of the URL is already set to using the included Fuseki container. Environment parameters can be set in `docker-compose.override.yml` or in a separate `.env` file. Please see the following example:\n+\n+`.env`\n+\n+```\n+DATASET_NAME=data\n+FUSEKI_ADMIN_PASSWORD=[fuseki admin password]\n+KEYCLOAK_PASSWORD=[keycloak password]\n+KEYCLOAK_PG_PASSWORD=[keycloak pg password]\n+KEYCLOAK_REALM=nampi\n+KEYCLOAK_RESOURCE=nampi-client\n+OTHER_OWL_URLS=https://purl.org/nampi/owl/monastic-life\n+```\n+\n+To directly expose the containers (including the Fuseki and Keycloak admin interfaces) to the web, the following docker-compose.override.yml file can be used as a starting point:\n+\n+`docker-compose.override.yml`\n+\n+```\n+version: \"3\"\n+\n+services:\n+  fuseki:\n+    ports:\n+      - 3030:3030\n+  keycloak:\n+    ports:\n+      - 8080:8080\n+  web:\n+    ports:\n+      - 4000:8080\n+```\n+\n ## Requesting data\n \n The application runs on the configured port, requests can be made using standard HTTP requests"
  },
  {
    "sha": "d7366dcbcfb8062ad8623cf5716f314577a250da",
    "filename": "data.ttl",
    "status": "added",
    "additions": 50,
    "deletions": 0,
    "changes": 50,
    "blob_url": "https://github.com/nam-pi/backend/blob/dfd74a299a65243031d4f0a07af1f936b8ab7ccb/data.ttl",
    "raw_url": "https://github.com/nam-pi/backend/raw/dfd74a299a65243031d4f0a07af1f936b8ab7ccb/data.ttl",
    "contents_url": "https://api.github.com/repos/nam-pi/backend/contents/data.ttl?ref=dfd74a299a65243031d4f0a07af1f936b8ab7ccb",
    "patch": "@@ -0,0 +1,50 @@\n+@prefix :      <http://base/#> .\n+@prefix rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\n+@prefix tdb2:  <http://jena.apache.org/2016/tdb#> .\n+@prefix ja:    <http://jena.hpl.hp.com/2005/11/Assembler#> .\n+@prefix rdfs:  <http://www.w3.org/2000/01/rdf-schema#> .\n+@prefix fuseki: <http://jena.apache.org/fuseki#> .\n+\n+tdb2:DatasetTDB  rdfs:subClassOf  ja:RDFDataset .\n+\n+ja:DatasetTxnMem  rdfs:subClassOf  ja:RDFDataset .\n+\n+<http://jena.hpl.hp.com/2008/tdb#DatasetTDB>\n+        rdfs:subClassOf  ja:RDFDataset .\n+\n+<http://jena.hpl.hp.com/2008/tdb#GraphTDB>\n+        rdfs:subClassOf  ja:Model .\n+\n+tdb2:GraphTDB2  rdfs:subClassOf  ja:Model .\n+\n+ja:MemoryDataset  rdfs:subClassOf  ja:RDFDataset .\n+\n+ja:RDFDatasetZero  rdfs:subClassOf  ja:RDFDataset .\n+\n+<http://jena.apache.org/text#TextDataset>\n+        rdfs:subClassOf  ja:RDFDataset .\n+\n+:service_tdb_all  a                   fuseki:Service ;\n+        rdfs:label                    \"TDB2 data\" ;\n+        fuseki:dataset                :tdb_dataset_readwrite ;\n+        fuseki:name                   \"data\" ;\n+        fuseki:serviceQuery           \"query\" , \"\" , \"sparql\" ;\n+        fuseki:serviceReadGraphStore  \"get\" ;\n+        fuseki:serviceReadQuads       \"\" ;\n+        fuseki:serviceReadWriteGraphStore\n+                \"data\" ;\n+        fuseki:serviceReadWriteQuads  \"\" ;\n+        fuseki:serviceUpdate          \"\" , \"update\" ;\n+        fuseki:serviceUpload          \"upload\" .\n+\n+:tdb_dataset_readwrite\n+        a              tdb2:DatasetTDB2 ;\n+        tdb2:location  \"/fuseki/databases/data\" .\n+\n+tdb2:GraphTDB  rdfs:subClassOf  ja:Model .\n+\n+ja:RDFDatasetOne  rdfs:subClassOf  ja:RDFDataset .\n+\n+ja:RDFDatasetSink  rdfs:subClassOf  ja:RDFDataset .\n+\n+tdb2:DatasetTDB2  rdfs:subClassOf  ja:RDFDataset .\n\\ No newline at end of file"
  },
  {
    "sha": "c5336611d871339b7b34f57b692f62ef112106e8",
    "filename": "docker-compose.yml",
    "status": "added",
    "additions": 64,
    "deletions": 0,
    "changes": 64,
    "blob_url": "https://github.com/nam-pi/backend/blob/dfd74a299a65243031d4f0a07af1f936b8ab7ccb/docker-compose.yml",
    "raw_url": "https://github.com/nam-pi/backend/raw/dfd74a299a65243031d4f0a07af1f936b8ab7ccb/docker-compose.yml",
    "contents_url": "https://api.github.com/repos/nam-pi/backend/contents/docker-compose.yml?ref=dfd74a299a65243031d4f0a07af1f936b8ab7ccb",
    "patch": "@@ -0,0 +1,64 @@\n+version: \"3\"\n+\n+services:\n+  postgres:\n+    image: postgres:13\n+    restart: always\n+    volumes:\n+      - keycloak_data:/var/lib/postgresql/data\n+    environment:\n+      POSTGRES_PASSWORD: ${KEYCLOAK_PG_PASSWORD}\n+      POSTGRES_USER: ${KEYCLOAK_PG_USER:-keycloak}\n+      POSTGRES_DB: ${KEYCLOAK_PG_DB:-keycloak}\n+\n+  fuseki:\n+    build:\n+      context: .\n+      dockerfile: Dockerfile.fuseki\n+      args:\n+        FUSEKI_VERSION: 3.14.0\n+    restart: always\n+    volumes:\n+      - fuseki_data:/fuseki\n+      - ./data.ttl:/fuseki/configuration/data.ttl:ro\n+    environment:\n+      ADMIN_PASSWORD: ${FUSEKI_ADMIN_PASSWORD}\n+      JVM_ARGS: ${JVM_ARGS:--Xmx4g}\n+      TDB: 2\n+      FUSEKI_DATASET: ${DATASET_NAME:-data}\n+\n+  keycloak:\n+    image: quay.io/keycloak/keycloak:12.0.4\n+    restart: always\n+    environment:\n+      DB_VENDOR: POSTGRES\n+      DB_ADDR: postgres\n+      DB_DATABASE: ${KEYCLOAK_PG_DB:-keycloak}\n+      DB_USER: ${KEYCLOAK_PG_USER:-keycloak}\n+      DB_SCHEMA: public\n+      DB_PASSWORD: ${KEYCLOAK_PG_PASSWORD}\n+      KEYCLOAK_USER: ${KEYCLOAK_USER:-admin}\n+      KEYCLOAK_PASSWORD: ${KEYCLOAK_PASSWORD}\n+    depends_on:\n+      - postgres\n+\n+  web:\n+    build:\n+      context: .\n+      dockerfile: Dockerfile\n+      args:\n+        JAVA_VERSION: 11\n+        KEYCLOAK_REALM: ${KEYCLOAK_REALM}\n+        KEYCLOAK_RESOURCE: ${KEYCLOAK_RESOURCE}\n+        KEYCLOAK_URL: http://keycloak:8080/auth\n+        LOGGING_LEVEL: ${LOGGING_LEVEL:-DEBUG}\n+        OTHER_OWL_URLS: ${OTHER_OWL_URLS}\n+        TRIPLE_STORE_URL: http://fuseki:3030/${DATASET_NAME:-data}\n+    restart: always\n+    depends_on:\n+      - keycloak\n+      - fuseki\n+\n+volumes:\n+  keycloak_data: {}\n+  fuseki_data: {}"
  },
  {
    "sha": "7bb6804eb39f988b43f6ac997d66c203272d4969",
    "filename": "eclipse-java-google-style.xml",
    "status": "added",
    "additions": 337,
    "deletions": 0,
    "changes": 337,
    "blob_url": "https://github.com/nam-pi/backend/blob/dfd74a299a65243031d4f0a07af1f936b8ab7ccb/eclipse-java-google-style.xml",
    "raw_url": "https://github.com/nam-pi/backend/raw/dfd74a299a65243031d4f0a07af1f936b8ab7ccb/eclipse-java-google-style.xml",
    "contents_url": "https://api.github.com/repos/nam-pi/backend/contents/eclipse-java-google-style.xml?ref=dfd74a299a65243031d4f0a07af1f936b8ab7ccb",
    "patch": "@@ -0,0 +1,337 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<profiles version=\"13\">\n+<profile kind=\"CodeFormatterProfile\" name=\"GoogleStyle\" version=\"13\">\n+<setting id=\"org.eclipse.jdt.core.formatter.comment.insert_new_line_before_root_tags\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.disabling_tag\" value=\"@formatter:off\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_annotation\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_parameters\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_type_declaration\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_arguments\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.brace_position_for_anonymous_type_declaration\" value=\"end_of_line\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_colon_in_case\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_brace_in_array_initializer\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.comment.new_lines_at_block_boundaries\" value=\"true\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_cascading_method_invocation_with_arguments.count_dependent\" value=\"16|-1|16\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_in_empty_annotation_declaration\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_annotation\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.blank_lines_before_field\" value=\"0\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_while\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.use_on_off_tags\" value=\"true\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.wrap_prefer_two_fragments\" value=\"false\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_annotation_type_member_declaration\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_before_else_in_if_statement\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_prefix_operator\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.keep_else_statement_on_same_line\" value=\"false\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_ellipsis\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.comment.insert_new_line_for_parameter\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.wrap_comment_inline_tags\" value=\"false\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_annotation_type_declaration\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.indent_breaks_compare_to_cases\" value=\"true\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_local_variable_declaration\" value=\"16\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_multiple_fields\" value=\"16\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_annotations_on_parameter\" value=\"1040\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_expressions_in_array_initializer\" value=\"16\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_annotations_on_type.count_dependent\" value=\"1585|-1|1585\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_conditional_expression\" value=\"80\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_for\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_multiple_fields.count_dependent\" value=\"16|-1|16\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_binary_operator\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_question_in_wildcard\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.brace_position_for_array_initializer\" value=\"end_of_line\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_enum_constant\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_before_finally_in_try_statement\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_local_variable\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_before_catch_in_try_statement\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_while\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.blank_lines_after_package\" value=\"1\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_arguments_in_qualified_allocation_expression.count_dependent\" value=\"16|4|80\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_method_declaration.count_dependent\" value=\"16|4|48\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_parameters\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.continuation_indentation\" value=\"2\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration.count_dependent\" value=\"16|4|49\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_postfix_operator\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_arguments_in_method_invocation\" value=\"16\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_arguments\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_superinterfaces\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.blank_lines_before_new_chunk\" value=\"1\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_binary_operator\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.blank_lines_before_package\" value=\"0\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_cascading_method_invocation_with_arguments\" value=\"16\"/>\n+<setting id=\"org.eclipse.jdt.core.compiler.source\" value=\"1.7\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_constructor_declaration.count_dependent\" value=\"16|4|48\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_constant_arguments\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_constructor_declaration\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.comment.format_line_comments\" value=\"true\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_arguments\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_declarations\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.join_wrapped_lines\" value=\"true\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_block\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_arguments_in_explicit_constructor_call\" value=\"16\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.wrap_non_simple_local_variable_annotation\" value=\"true\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.align_type_members_on_columns\" value=\"false\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.blank_lines_before_member_type\" value=\"0\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_enum_constant\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_enum_constants.count_dependent\" value=\"16|5|48\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_for\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_method_declaration\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_selector_in_method_invocation\" value=\"16\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_switch\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_unary_operator\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_colon_in_case\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.comment.indent_parameter_description\" value=\"false\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_declaration\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_switch\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_declaration\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_parameters\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_block_comment\" value=\"false\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_in_empty_type_declaration\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.lineSplit\" value=\"100\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_if\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_selector_in_method_invocation.count_dependent\" value=\"16|4|48\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_between_brackets_in_array_type_reference\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_parenthesized_expression\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_explicitconstructorcall_arguments\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_constructor_declaration\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.blank_lines_before_first_class_body_declaration\" value=\"0\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_method\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.indentation.size\" value=\"4\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_declaration\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.enabling_tag\" value=\"@formatter:on\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_enum_constant\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_annotations_on_package\" value=\"1585\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_superclass_in_type_declaration\" value=\"16\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_assignment\" value=\"16\"/>\n+<setting id=\"org.eclipse.jdt.core.compiler.problem.assertIdentifier\" value=\"error\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.tabulation.char\" value=\"space\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_try_resources\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_parameters\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_prefix_operator\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.indent_statements_compare_to_body\" value=\"true\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.blank_lines_before_method\" value=\"1\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.wrap_outer_expressions_when_nested\" value=\"true\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.wrap_non_simple_type_annotation\" value=\"true\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.format_guardian_clause_on_one_line\" value=\"false\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_colon_in_for\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_field_declaration\" value=\"16\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_cast\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_parameters_in_constructor_declaration\" value=\"16\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_colon_in_labeled_statement\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.brace_position_for_annotation_type_declaration\" value=\"end_of_line\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_in_empty_method_body\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_method_declaration\" value=\"0\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_try\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_invocation\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_allocation_expression\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_constant\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_annotation\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation_type_declaration\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_throws\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_if\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.brace_position_for_switch\" value=\"end_of_line\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_throws\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_return\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_question_in_conditional\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_question_in_wildcard\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_try\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_allocation_expression\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.comment.preserve_white_space_between_code_and_line_comments\" value=\"false\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_throw\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_arguments\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.compiler.problem.enumIdentifier\" value=\"error\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_generic_type_arguments\" value=\"16\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_switch\" value=\"true\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.comment_new_line_at_start_of_html_paragraph\" value=\"true\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_ellipsis\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.brace_position_for_block\" value=\"end_of_line\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comment_prefix\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_inits\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.brace_position_for_method_declaration\" value=\"end_of_line\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.compact_else_if\" value=\"true\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.wrap_non_simple_parameter_annotation\" value=\"false\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.wrap_before_or_operator_multicatch\" value=\"true\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_array_initializer\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_increments\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_annotations_on_method\" value=\"1585\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.format_line_comment_starting_on_first_column\" value=\"true\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_reference\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_field\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.comment.indent_root_tags\" value=\"true\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.brace_position_for_enum_constant\" value=\"end_of_line\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_declarations\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_union_type_in_multicatch\" value=\"16\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_explicitconstructorcall_arguments\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_switch\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_superinterfaces\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_allocation_expression\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.tabulation.size\" value=\"2\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_type_reference\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_closing_brace_in_block\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_reference\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_constant\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_arguments\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_constructor_declaration\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_throws\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_if\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_arguments_in_method_invocation.count_dependent\" value=\"16|5|80\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_javadoc_comment\" value=\"false\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_annotations_on_parameter.count_dependent\" value=\"1040|-1|1040\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_constructor_declaration\" value=\"16\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_assignment_operator\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_assignment_operator\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_annotations_on_package.count_dependent\" value=\"1585|-1|1585\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.indent_empty_lines\" value=\"false\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_synchronized\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_closing_paren_in_cast\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_parameters\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.force_if_else_statement_brace\" value=\"true\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.brace_position_for_block_in_case\" value=\"end_of_line\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.number_of_empty_lines_to_preserve\" value=\"3\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.wrap_non_simple_package_annotation\" value=\"true\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_declaration\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_catch\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_constructor_declaration\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_invocation\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_reference\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_arguments_in_qualified_allocation_expression\" value=\"16\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_arguments_in_annotation.count_dependent\" value=\"16|-1|16\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_and_in_type_parameter\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_annotations_on_type\" value=\"1585\"/>\n+<setting id=\"org.eclipse.jdt.core.compiler.compliance\" value=\"1.7\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.continuation_indentation_for_array_initializer\" value=\"2\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_between_empty_brackets_in_array_allocation_expression\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_at_in_annotation_type_declaration\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_arguments_in_allocation_expression\" value=\"16\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_cast\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_unary_operator\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_new_anonymous_class\" value=\"20\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_parameterized_type_reference\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_annotations_on_local_variable.count_dependent\" value=\"1585|-1|1585\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_anonymous_type_declaration\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.keep_empty_array_initializer_on_one_line\" value=\"false\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_declaration\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_annotations_on_field.count_dependent\" value=\"1585|-1|1585\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.keep_imple_if_on_one_line\" value=\"false\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_parameters\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_parameters\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_colon_in_labeled_statement\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_at_end_of_file_if_missing\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_colon_in_for\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_parameterized_type_reference\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_parameters_in_constructor_declaration.count_dependent\" value=\"16|5|80\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_type_declaration\" value=\"16\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.brace_position_for_enum_declaration\" value=\"end_of_line\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_binary_expression\" value=\"16\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_while\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_type\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode\" value=\"enabled\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_try\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.put_empty_statement_on_new_line\" value=\"false\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_after_label\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_parameter\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_parameters\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_invocation\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.comment.format_javadoc_comments\" value=\"true\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_arguments_in_enum_constant\" value=\"16\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_before_while_in_do_statement\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_arguments_in_enum_constant.count_dependent\" value=\"16|-1|16\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.comment.line_length\" value=\"100\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_package\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.blank_lines_between_import_groups\" value=\"0\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_constant_arguments\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_semicolon\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.brace_position_for_constructor_declaration\" value=\"end_of_line\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.number_of_blank_lines_at_beginning_of_method_body\" value=\"0\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_colon_in_conditional\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_type_header\" value=\"true\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation_type_member_declaration\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.wrap_before_binary_operator\" value=\"true\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.blank_lines_between_type_declarations\" value=\"2\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_declaration_header\" value=\"true\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_synchronized\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration\" value=\"16\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.indent_statements_compare_to_block\" value=\"true\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.join_lines_in_comments\" value=\"true\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_question_in_conditional\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_field_declarations\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_compact_if\" value=\"16\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_inits\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_cases\" value=\"true\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_array_initializer\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_colon_in_default\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_and_in_type_parameter\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_constructor_declaration\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.blank_lines_before_imports\" value=\"0\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_colon_in_assert\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_annotations_on_field\" value=\"1585\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.comment.format_html\" value=\"true\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_method_declaration\" value=\"16\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_parameters\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_allocation_expression\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_in_empty_anonymous_type_declaration\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_colon_in_conditional\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_parameterized_type_reference\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_for\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_expressions_in_array_initializer.count_dependent\" value=\"16|5|80\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_postfix_operator\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.comment.format_source_code\" value=\"true\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_synchronized\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_allocation_expression\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_throws\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_parameters_in_method_declaration\" value=\"16\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_brace_in_array_initializer\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.compiler.codegen.targetPlatform\" value=\"1.7\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_resources_in_try\" value=\"80\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.use_tabs_only_for_leading_indentations\" value=\"false\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_arguments_in_annotation\" value=\"16\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.comment.format_header\" value=\"true\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.comment.format_block_comments\" value=\"true\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_enum_constant\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_enum_constants\" value=\"0\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_parenthesized_expression\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_annotation_declaration_header\" value=\"true\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_in_empty_block\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_parenthesized_expression\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_catch\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_local_declarations\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_type_declaration.count_dependent\" value=\"16|4|48\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_switch\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_increments\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_annotations_on_method.count_dependent\" value=\"1585|-1|1585\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_invocation\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_colon_in_assert\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.brace_position_for_type_declaration\" value=\"end_of_line\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_array_initializer\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_between_empty_braces_in_array_initializer\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_binary_expression.count_dependent\" value=\"16|-1|16\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.wrap_non_simple_member_annotation\" value=\"true\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_annotations_on_local_variable\" value=\"1585\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_declaration\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_for\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_arguments_in_explicit_constructor_call.count_dependent\" value=\"16|5|80\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_catch\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_parameterized_type_reference\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_field_declarations\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_annotation\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_generic_type_arguments.count_dependent\" value=\"16|-1|16\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_parameterized_type_reference\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_arguments_in_allocation_expression.count_dependent\" value=\"16|5|80\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_invocation_arguments\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_parameters_in_method_declaration.count_dependent\" value=\"16|5|80\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.comment.new_lines_at_javadoc_boundaries\" value=\"true\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.blank_lines_after_imports\" value=\"1\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_local_declarations\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_constant_header\" value=\"true\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_for\" value=\"insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.never_indent_line_comments_on_first_column\" value=\"false\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_try_resources\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_for_statement\" value=\"16\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_arguments\" value=\"do not insert\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.never_indent_block_comments_on_first_column\" value=\"false\"/>\n+<setting id=\"org.eclipse.jdt.core.formatter.keep_then_statement_on_same_line\" value=\"false\"/>\n+</profile>\n+</profiles>"
  },
  {
    "sha": "bab89e33f723723ef2850e5cc06ad94b3d488166",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 120,
    "deletions": 119,
    "changes": 239,
    "blob_url": "https://github.com/nam-pi/backend/blob/dfd74a299a65243031d4f0a07af1f936b8ab7ccb/pom.xml",
    "raw_url": "https://github.com/nam-pi/backend/raw/dfd74a299a65243031d4f0a07af1f936b8ab7ccb/pom.xml",
    "contents_url": "https://api.github.com/repos/nam-pi/backend/contents/pom.xml?ref=dfd74a299a65243031d4f0a07af1f936b8ab7ccb",
    "patch": "@@ -1,126 +1,127 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n-\t<modelVersion>4.0.0</modelVersion>\n-\t<parent>\n-\t\t<groupId>org.springframework.boot</groupId>\n-\t\t<artifactId>spring-boot-starter-parent</artifactId>\n-\t\t<version>2.2.2.RELEASE</version>\n-\t\t<relativePath /> <!-- lookup parent from repository -->\n-\t</parent>\n-\t<groupId>eu.nampi</groupId>\n-\t<artifactId>backend</artifactId>\n-\t<version>0.0.1-SNAPSHOT</version>\n-\t<name>nampi-backend</name>\n-\t<description>The NAMPI backend</description>\n+  <modelVersion>4.0.0</modelVersion>\n+  <parent>\n+    <groupId>org.springframework.boot</groupId>\n+    <artifactId>spring-boot-starter-parent</artifactId>\n+    <version>2.4.3</version>\n+    <relativePath /> <!-- lookup parent from repository -->\n+  </parent>\n+  <groupId>eu.nampi</groupId>\n+  <artifactId>backend</artifactId>\n+  <version>0.0.1-SNAPSHOT</version>\n+  <name>nampi-backend</name>\n+  <description>The NAMPI backend</description>\n \n-\t<properties>\n-\t\t<java.version>13</java.version>\n-\t</properties>\n+  <properties>\n+    <java.version>11</java.version>\n+  </properties>\n \n-\t<dependencies>\n-\t\t<dependency>\n-\t\t\t<groupId>org.springframework.boot</groupId>\n-\t\t\t<artifactId>spring-boot-starter-security</artifactId>\n-\t\t</dependency>\n-\t\t<dependency>\n-\t\t\t<groupId>org.springframework.boot</groupId>\n-\t\t\t<artifactId>spring-boot-starter-web</artifactId>\n-\t\t</dependency>\n-\t\t<dependency>\n-\t\t\t<groupId>org.springframework.boot</groupId>\n-\t\t\t<artifactId>spring-boot-configuration-processor</artifactId>\n-\t\t\t<optional>true</optional>\n-\t\t</dependency>\n-\t\t<dependency>\n-\t\t\t<groupId>org.springframework.boot</groupId>\n-\t\t\t<artifactId>spring-boot-devtools</artifactId>\n-\t\t\t<scope>runtime</scope>\n-\t\t\t<optional>true</optional>\n-\t\t</dependency>\n-\t\t<dependency>\n-\t\t\t<groupId>org.projectlombok</groupId>\n-\t\t\t<artifactId>lombok</artifactId>\n-\t\t\t<optional>true</optional>\n-\t\t</dependency>\n-\t\t<dependency>\n-\t\t\t<groupId>org.springframework.boot</groupId>\n-\t\t\t<artifactId>spring-boot-starter-test</artifactId>\n-\t\t\t<scope>test</scope>\n-\t\t\t<exclusions>\n-\t\t\t\t<exclusion>\n-\t\t\t\t\t<groupId>org.junit.vintage</groupId>\n-\t\t\t\t\t<artifactId>junit-vintage-engine</artifactId>\n-\t\t\t\t</exclusion>\n-\t\t\t</exclusions>\n-\t\t</dependency>\n-\t\t<dependency>\n-\t\t\t<groupId>org.springframework.security</groupId>\n-\t\t\t<artifactId>spring-security-test</artifactId>\n-\t\t\t<scope>test</scope>\n-\t\t</dependency>\n-\t\t<dependency>\n-\t\t\t<groupId>org.keycloak</groupId>\n-\t\t\t<artifactId>keycloak-spring-boot-starter</artifactId>\n-\t\t</dependency>\n-\t\t<dependency>\n-\t\t\t<groupId>org.keycloak</groupId>\n-\t\t\t<artifactId>keycloak-spring-security-adapter</artifactId>\n-\t\t</dependency>\n-\t\t<dependency>\n-\t\t\t<groupId>org.apache.jena</groupId>\n-\t\t\t<artifactId>apache-jena-libs</artifactId>\n-\t\t\t<type>pom</type>\n-\t\t\t<version>3.13.1</version>\n-\t\t</dependency>\n-\t\t<dependency>\n-\t\t\t<groupId>org.glassfish.jaxb</groupId>\n-\t\t\t<artifactId>jaxb-runtime</artifactId>\n-\t\t\t<version>2.4.0-b180830.0438</version>\n-\t\t</dependency>\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.springframework.boot</groupId>\n+      <artifactId>spring-boot-starter-security</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.springframework.boot</groupId>\n+      <artifactId>spring-boot-starter-web</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.springframework.boot</groupId>\n+      <artifactId>spring-boot-configuration-processor</artifactId>\n+      <optional>true</optional>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.springframework.boot</groupId>\n+      <artifactId>spring-boot-devtools</artifactId>\n+      <scope>runtime</scope>\n+      <optional>true</optional>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.springframework.boot</groupId>\n+      <artifactId>spring-boot-starter-test</artifactId>\n+      <scope>test</scope>\n+      <exclusions>\n+        <exclusion>\n+          <groupId>org.junit.vintage</groupId>\n+          <artifactId>junit-vintage-engine</artifactId>\n+        </exclusion>\n+      </exclusions>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.springframework.security</groupId>\n+      <artifactId>spring-security-test</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.keycloak</groupId>\n+      <artifactId>keycloak-spring-boot-starter</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.keycloak</groupId>\n+      <artifactId>keycloak-spring-security-adapter</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.jena</groupId>\n+      <artifactId>apache-jena-libs</artifactId>\n+      <type>pom</type>\n+      <version>3.17.0</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.jena</groupId>\n+      <artifactId>jena-querybuilder</artifactId>\n+      <version>3.17.0</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.glassfish.jaxb</groupId>\n+      <artifactId>jaxb-runtime</artifactId>\n+      <version>3.0.0</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.projectlombok</groupId>\n+      <artifactId>lombok</artifactId>\n+      <version>1.18.18</version>\n+      <scope>provided</scope>\n+    </dependency>\n \n-\t</dependencies>\n+  </dependencies>\n \n-\t<dependencyManagement>\n-\t\t<dependencies>\n-\t\t\t<dependency>\n-\t\t\t\t<groupId>org.keycloak.bom</groupId>\n-\t\t\t\t<artifactId>keycloak-adapter-bom</artifactId>\n-\t\t\t\t<version>8.0.1</version>\n-\t\t\t\t<type>pom</type>\n-\t\t\t\t<scope>import</scope>\n-\t\t\t</dependency>\n-\t\t</dependencies>\n-\t</dependencyManagement>\n+  <dependencyManagement>\n+    <dependencies>\n+      <dependency>\n+        <groupId>org.keycloak.bom</groupId>\n+        <artifactId>keycloak-adapter-bom</artifactId>\n+        <version>12.0.4</version>\n+        <type>pom</type>\n+        <scope>import</scope>\n+      </dependency>\n+    </dependencies>\n+  </dependencyManagement>\n \n-\t<build>\n-\t\t<plugins>\n-\t\t\t<plugin>\n-\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n-\t\t\t\t<artifactId>maven-compiler-plugin</artifactId>\n-\t\t\t\t<version>3.8.1</version>\n-\t\t\t\t<configuration>\n-\t\t\t\t\t<release>13</release>\n-\t\t\t\t\t<target>13</target>\n-\t\t\t\t\t<compilerArgs>--enable-preview</compilerArgs>\n-\t\t\t\t</configuration>\n-\t\t\t</plugin>\n-\t\t\t<plugin>\n-\t\t\t\t<groupId>org.springframework.boot</groupId>\n-\t\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\n-\t\t\t\t<configuration>\n-\t\t\t\t\t<compilerArgs>--enable-preview</compilerArgs>\n-\t\t\t\t\t<jvmArguments>--enable-preview</jvmArguments>\n-\t\t\t\t</configuration>\n-\t\t\t</plugin>\n-\t\t\t<plugin>\n-\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n-\t\t\t\t<artifactId>maven-surefire-plugin</artifactId>\n-\t\t\t\t<version>2.22.2</version>\n-\t\t\t\t<configuration>\n-\t\t\t\t\t<argLine>--enable-preview</argLine>\n-\t\t\t\t</configuration>\n-\t\t\t</plugin>\n-\t\t</plugins>\n-\t</build>\n+  <build>\n+    <finalName>${project.name}</finalName>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-compiler-plugin</artifactId>\n+        <version>3.8.1</version>\n+        <configuration>\n+          <release>11</release>\n+          <target>11</target>\n+        </configuration>\n+      </plugin>\n+      <plugin>\n+        <groupId>org.springframework.boot</groupId>\n+        <artifactId>spring-boot-maven-plugin</artifactId>\n+        <configuration></configuration>\n+      </plugin>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-surefire-plugin</artifactId>\n+        <version>3.0.0-M1</version>\n+        <configuration></configuration>\n+      </plugin>\n+    </plugins>\n+  </build>\n \n-</project>\n\\ No newline at end of file\n+</project>"
  },
  {
    "sha": "594029095220141a79b16aacf6ba179a2421ef8e",
    "filename": "src/main/java/eu/nampi/backend/configuration/ConfigProperties.java",
    "status": "modified",
    "additions": 7,
    "deletions": 3,
    "changes": 10,
    "blob_url": "https://github.com/nam-pi/backend/blob/dfd74a299a65243031d4f0a07af1f936b8ab7ccb/src/main/java/eu/nampi/backend/configuration/ConfigProperties.java",
    "raw_url": "https://github.com/nam-pi/backend/raw/dfd74a299a65243031d4f0a07af1f936b8ab7ccb/src/main/java/eu/nampi/backend/configuration/ConfigProperties.java",
    "contents_url": "https://api.github.com/repos/nam-pi/backend/contents/src/main/java/eu/nampi/backend/configuration/ConfigProperties.java?ref=dfd74a299a65243031d4f0a07af1f936b8ab7ccb",
    "patch": "@@ -1,7 +1,7 @@\n package eu.nampi.backend.configuration;\n \n+import java.util.List;\n import org.springframework.boot.context.properties.ConfigurationProperties;\n-\n import lombok.Getter;\n import lombok.Setter;\n \n@@ -10,8 +10,12 @@\n @ConfigurationProperties(prefix = \"nampi\")\n public class ConfigProperties {\n \n-  String tripleStoreUrl;\n-\n   String coreOwlUrl;\n \n+  int defaultLimit;\n+\n+  List<String> otherOwlUrls;\n+\n+  String tripleStoreUrl;\n+\n }"
  },
  {
    "sha": "af6e49f1e2f5b23c6794aa9c964a86789e38566e",
    "filename": "src/main/java/eu/nampi/backend/configuration/JenaConfig.java",
    "status": "added",
    "additions": 56,
    "deletions": 0,
    "changes": 56,
    "blob_url": "https://github.com/nam-pi/backend/blob/dfd74a299a65243031d4f0a07af1f936b8ab7ccb/src/main/java/eu/nampi/backend/configuration/JenaConfig.java",
    "raw_url": "https://github.com/nam-pi/backend/raw/dfd74a299a65243031d4f0a07af1f936b8ab7ccb/src/main/java/eu/nampi/backend/configuration/JenaConfig.java",
    "contents_url": "https://api.github.com/repos/nam-pi/backend/contents/src/main/java/eu/nampi/backend/configuration/JenaConfig.java?ref=dfd74a299a65243031d4f0a07af1f936b8ab7ccb",
    "patch": "@@ -0,0 +1,56 @@\n+package eu.nampi.backend.configuration;\n+\n+import java.util.List;\n+import org.apache.jena.ontology.OntModel;\n+import org.apache.jena.ontology.OntModelSpec;\n+import org.apache.jena.rdf.model.ModelFactory;\n+import org.apache.jena.rdfconnection.RDFConnectionFuseki;\n+import org.apache.jena.rdfconnection.RDFConnectionRemoteBuilder;\n+import org.apache.jena.reasoner.Reasoner;\n+import org.apache.jena.reasoner.ReasonerRegistry;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import eu.nampi.backend.service.FusekiService;\n+import eu.nampi.backend.service.JenaService;\n+\n+@Configuration\n+public class JenaConfig {\n+\n+  @Value(\"${nampi.core-owl-url}\")\n+  private String coreOwlUrl;\n+\n+  @Value(\"${nampi.other-owl-urls}\")\n+  private List<String> otherOwlUrls;\n+\n+  @Value(\"${nampi.triple-store-url}\")\n+  private String tripleStoreUrl;\n+\n+  private OntModel readOntology() {\n+    OntModel model = ModelFactory.createOntologyModel(OntModelSpec.OWL_MEM, null);\n+    model.read(coreOwlUrl);\n+    for (String otherUrl : otherOwlUrls) {\n+      model.read(otherUrl);\n+    }\n+    return model;\n+  }\n+\n+  @Bean\n+  public Reasoner getDefaultReasoner() {\n+    OntModel model = readOntology();\n+    Reasoner reasoner = ReasonerRegistry.getOWLReasoner();\n+    reasoner = reasoner.bindSchema(model);\n+    return reasoner;\n+  }\n+\n+  @Bean\n+  public RDFConnectionRemoteBuilder getConnectionBuilder() {\n+    return RDFConnectionFuseki.create().destination(tripleStoreUrl);\n+  }\n+\n+  @Bean\n+  public JenaService getJenaService() {\n+    return new FusekiService();\n+  }\n+\n+}"
  },
  {
    "sha": "4c94127899f9759d2c0bbed2e05e9d58df7fa4d2",
    "filename": "src/main/java/eu/nampi/backend/configuration/SecurityConfig.java",
    "status": "modified",
    "additions": 4,
    "deletions": 3,
    "changes": 7,
    "blob_url": "https://github.com/nam-pi/backend/blob/dfd74a299a65243031d4f0a07af1f936b8ab7ccb/src/main/java/eu/nampi/backend/configuration/SecurityConfig.java",
    "raw_url": "https://github.com/nam-pi/backend/raw/dfd74a299a65243031d4f0a07af1f936b8ab7ccb/src/main/java/eu/nampi/backend/configuration/SecurityConfig.java",
    "contents_url": "https://api.github.com/repos/nam-pi/backend/contents/src/main/java/eu/nampi/backend/configuration/SecurityConfig.java?ref=dfd74a299a65243031d4f0a07af1f936b8ab7ccb",
    "patch": "@@ -33,13 +33,14 @@ KeycloakConfigResolver keycloakConfigResolver(KeycloakSpringBootProperties prope\n   @Override\n   protected void configure(final HttpSecurity http) throws Exception {\n     super.configure(http);\n-    http.authorizeRequests().antMatchers(\"/events/**\", \"/persons/**\").permitAll().antMatchers(\"/users/**\")\n-        .hasRole(\"USER\").anyRequest().authenticated();\n+    http.authorizeRequests().antMatchers(\"/events/**\", \"/persons/**\").permitAll()\n+        .antMatchers(\"/users/**\").hasRole(\"USER\").anyRequest().authenticated();\n   }\n \n   @Override\n   protected void configure(final AuthenticationManagerBuilder auth) throws Exception {\n-    KeycloakAuthenticationProvider keycloakAuthenticationProvider = keycloakAuthenticationProvider();\n+    KeycloakAuthenticationProvider keycloakAuthenticationProvider =\n+        keycloakAuthenticationProvider();\n     auth.authenticationProvider(keycloakAuthenticationProvider);\n   }\n "
  },
  {
    "sha": "58d0f0a53b5aedfe260f9ae02b04ab2bfc7a02b6",
    "filename": "src/main/java/eu/nampi/backend/configuration/WebConfig.java",
    "status": "modified",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/nam-pi/backend/blob/dfd74a299a65243031d4f0a07af1f936b8ab7ccb/src/main/java/eu/nampi/backend/configuration/WebConfig.java",
    "raw_url": "https://github.com/nam-pi/backend/raw/dfd74a299a65243031d4f0a07af1f936b8ab7ccb/src/main/java/eu/nampi/backend/configuration/WebConfig.java",
    "contents_url": "https://api.github.com/repos/nam-pi/backend/contents/src/main/java/eu/nampi/backend/configuration/WebConfig.java?ref=dfd74a299a65243031d4f0a07af1f936b8ab7ccb",
    "patch": "@@ -3,7 +3,6 @@\n import org.springframework.context.annotation.Configuration;\n import org.springframework.format.FormatterRegistry;\n import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;\n-\n import eu.nampi.backend.converter.StringToLangConverter;\n \n @Configuration"
  },
  {
    "sha": "84b276d35193dc54806b7ffd4d031fb965428527",
    "filename": "src/main/java/eu/nampi/backend/controller/AbstractRdfController.java",
    "status": "added",
    "additions": 74,
    "deletions": 0,
    "changes": 74,
    "blob_url": "https://github.com/nam-pi/backend/blob/dfd74a299a65243031d4f0a07af1f936b8ab7ccb/src/main/java/eu/nampi/backend/controller/AbstractRdfController.java",
    "raw_url": "https://github.com/nam-pi/backend/raw/dfd74a299a65243031d4f0a07af1f936b8ab7ccb/src/main/java/eu/nampi/backend/controller/AbstractRdfController.java",
    "contents_url": "https://api.github.com/repos/nam-pi/backend/contents/src/main/java/eu/nampi/backend/controller/AbstractRdfController.java?ref=dfd74a299a65243031d4f0a07af1f936b8ab7ccb",
    "patch": "@@ -0,0 +1,74 @@\n+package eu.nampi.backend.controller;\n+\n+import java.io.IOException;\n+import java.util.Arrays;\n+import java.util.LinkedHashMap;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import org.apache.http.HttpStatus;\n+import org.apache.jena.rdf.model.Model;\n+import org.apache.jena.riot.Lang;\n+import org.apache.jena.riot.RDFDataMgr;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.web.context.request.RequestContextHolder;\n+import org.springframework.web.context.request.ServletRequestAttributes;\n+import eu.nampi.backend.model.CollectionMeta;\n+import eu.nampi.backend.model.OrderByClauses;\n+import lombok.extern.slf4j.Slf4j;\n+\n+@Slf4j\n+public abstract class AbstractRdfController {\n+\n+  @Value(\"${nampi.default-limit}\")\n+  int defaultLimit;\n+\n+  private static final int DEFAULT_OFFSET = 0;\n+\n+  protected void writeToOutStream(Model model, Lang lang, HttpServletResponse response) {\n+    try {\n+      RDFDataMgr.write(response.getOutputStream(), model, lang);\n+    } catch (IOException e) {\n+      response.setStatus(HttpStatus.SC_INTERNAL_SERVER_ERROR);\n+      log.error(e.getMessage());\n+    }\n+  }\n+\n+  /**\n+   * Splits a list/keys based query parameter string into a map of the sub-parameter name and value\n+   * (if any).\n+   * \n+   * @param param The query parameter string, for instance \"foo=1,bar=2\", \"foo,bar\" or \"foo,bar=1\"\n+   * @return An ordered map with all key-value pairs. The value can be an empty Optional if there\n+   *         isn't a value in the parameter string\n+   */\n+  private Map<String, Optional<String>> splitKeysParam(String param) {\n+    return Arrays.stream(Optional.ofNullable(param).orElse(\"\").split(\",\"))\n+        .map(s -> s.split(\"\\\\s*=\\\\s*\")).collect(Collectors.toMap(a -> a[0],\n+            a -> a.length == 2 ? Optional.of(a[1]) : Optional.empty(), (u, v) -> {\n+              throw new IllegalStateException(String.format(\"Duplicate key %s\", u));\n+            }, LinkedHashMap::new));\n+  }\n+\n+  protected CollectionMeta getCollectionMeta() {\n+    HttpServletRequest request =\n+        ((ServletRequestAttributes) RequestContextHolder.getRequestAttributes()).getRequest();\n+    Optional<Integer> page =\n+        Optional.ofNullable(request.getParameter(\"page\")).map(Integer::valueOf);\n+    Optional<Integer> pageIndex =\n+        Optional.ofNullable(request.getParameter(\"pageIndex\")).map(Integer::valueOf);\n+    Optional<Integer> offset =\n+        Optional.ofNullable(request.getParameter(\"offset\")).map(Integer::valueOf);\n+    Optional<Integer> limit =\n+        Optional.ofNullable(request.getParameter(\"limit\")).map(Integer::valueOf);\n+    int effectiveLimit = limit.orElse(defaultLimit);\n+    int effectiveOffset = Optional.ofNullable(page.orElseGet(() -> pageIndex.orElse(null)))\n+        .map(p -> (p * effectiveLimit) - effectiveLimit).orElse(offset.orElse(DEFAULT_OFFSET));\n+    OrderByClauses clauses = new OrderByClauses(splitKeysParam(request.getParameter(\"orderBy\")));\n+    return new CollectionMeta(request.getRequestURL().toString(), limit.isPresent(), effectiveLimit,\n+        effectiveOffset, request.getRequestURI(), clauses);\n+  }\n+\n+}"
  },
  {
    "sha": "81b8fb2373b856b00063c1e52de83097d4673459",
    "filename": "src/main/java/eu/nampi/backend/controller/EventController.java",
    "status": "modified",
    "additions": 3,
    "deletions": 9,
    "changes": 12,
    "blob_url": "https://github.com/nam-pi/backend/blob/dfd74a299a65243031d4f0a07af1f936b8ab7ccb/src/main/java/eu/nampi/backend/controller/EventController.java",
    "raw_url": "https://github.com/nam-pi/backend/raw/dfd74a299a65243031d4f0a07af1f936b8ab7ccb/src/main/java/eu/nampi/backend/controller/EventController.java",
    "contents_url": "https://api.github.com/repos/nam-pi/backend/contents/src/main/java/eu/nampi/backend/controller/EventController.java?ref=dfd74a299a65243031d4f0a07af1f936b8ab7ccb",
    "patch": "@@ -1,29 +1,23 @@\n package eu.nampi.backend.controller;\n \n import javax.servlet.http.HttpServletResponse;\n-\n import org.apache.jena.rdf.model.Model;\n import org.apache.jena.riot.Lang;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.web.bind.annotation.GetMapping;\n import org.springframework.web.bind.annotation.RequestHeader;\n import org.springframework.web.bind.annotation.RestController;\n-\n import eu.nampi.backend.repository.EventRepository;\n-import eu.nampi.backend.util.JenaUtils;\n \n @RestController\n-public class EventController {\n+public class EventController extends AbstractRdfController {\n \n   @Autowired\n   EventRepository eventRepository;\n \n-  @Autowired\n-  JenaUtils jenaHelper;\n-\n   @GetMapping(\"/events\")\n   public void getEvents(@RequestHeader(\"accept\") Lang lang, HttpServletResponse response) {\n-    Model model = eventRepository.getEvents();\n-    jenaHelper.writeModel(model, lang, response);\n+    Model model = eventRepository.findAll(getCollectionMeta());\n+    writeToOutStream(model, lang, response);\n   }\n }"
  },
  {
    "sha": "f8f37523652db21bc3d1d1a1d5cce7b87fb3a18f",
    "filename": "src/main/java/eu/nampi/backend/controller/PersonController.java",
    "status": "modified",
    "additions": 3,
    "deletions": 19,
    "changes": 22,
    "blob_url": "https://github.com/nam-pi/backend/blob/dfd74a299a65243031d4f0a07af1f936b8ab7ccb/src/main/java/eu/nampi/backend/controller/PersonController.java",
    "raw_url": "https://github.com/nam-pi/backend/raw/dfd74a299a65243031d4f0a07af1f936b8ab7ccb/src/main/java/eu/nampi/backend/controller/PersonController.java",
    "contents_url": "https://api.github.com/repos/nam-pi/backend/contents/src/main/java/eu/nampi/backend/controller/PersonController.java?ref=dfd74a299a65243031d4f0a07af1f936b8ab7ccb",
    "patch": "@@ -1,39 +1,23 @@\n package eu.nampi.backend.controller;\n \n-import java.util.UUID;\n-\n import javax.servlet.http.HttpServletResponse;\n-\n import org.apache.jena.rdf.model.Model;\n import org.apache.jena.riot.Lang;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.web.bind.annotation.GetMapping;\n-import org.springframework.web.bind.annotation.PathVariable;\n import org.springframework.web.bind.annotation.RequestHeader;\n import org.springframework.web.bind.annotation.RestController;\n-\n import eu.nampi.backend.repository.PersonRepository;\n-import eu.nampi.backend.util.JenaUtils;\n \n @RestController\n-public class PersonController {\n+public class PersonController extends AbstractRdfController {\n \n   @Autowired\n   PersonRepository personRepository;\n \n-  @Autowired\n-  JenaUtils jenaHelper;\n-\n-  @GetMapping(\"/persons/{id}\")\n-  public void getPerson(@RequestHeader(\"accept\") Lang lang, @PathVariable(value = \"id\") UUID id,\n-      HttpServletResponse response) {\n-    Model model = personRepository.getPerson(id);\n-    jenaHelper.writeModel(model, lang, response);\n-  }\n-\n   @GetMapping(\"/persons\")\n   public void getPersons(@RequestHeader(\"accept\") Lang lang, HttpServletResponse response) {\n-    Model model = personRepository.getPersons();\n-    jenaHelper.writeModel(model, lang, response);\n+    Model model = personRepository.findAll(getCollectionMeta());\n+    writeToOutStream(model, lang, response);\n   }\n }"
  },
  {
    "sha": "ad53f36e5b2c0d40381233f3fc78a446e8edb88e",
    "filename": "src/main/java/eu/nampi/backend/controller/UserController.java",
    "status": "modified",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/nam-pi/backend/blob/dfd74a299a65243031d4f0a07af1f936b8ab7ccb/src/main/java/eu/nampi/backend/controller/UserController.java",
    "raw_url": "https://github.com/nam-pi/backend/raw/dfd74a299a65243031d4f0a07af1f936b8ab7ccb/src/main/java/eu/nampi/backend/controller/UserController.java",
    "contents_url": "https://api.github.com/repos/nam-pi/backend/contents/src/main/java/eu/nampi/backend/controller/UserController.java?ref=dfd74a299a65243031d4f0a07af1f936b8ab7ccb",
    "patch": "@@ -4,7 +4,6 @@\n import org.springframework.security.access.annotation.Secured;\n import org.springframework.web.bind.annotation.GetMapping;\n import org.springframework.web.bind.annotation.RestController;\n-\n import eu.nampi.backend.model.User;\n import eu.nampi.backend.repository.UserRepository;\n "
  },
  {
    "sha": "c3be19439bd247fd16663365212ab5313cd52d81",
    "filename": "src/main/java/eu/nampi/backend/converter/StringToLangConverter.java",
    "status": "modified",
    "additions": 11,
    "deletions": 11,
    "changes": 22,
    "blob_url": "https://github.com/nam-pi/backend/blob/dfd74a299a65243031d4f0a07af1f936b8ab7ccb/src/main/java/eu/nampi/backend/converter/StringToLangConverter.java",
    "raw_url": "https://github.com/nam-pi/backend/raw/dfd74a299a65243031d4f0a07af1f936b8ab7ccb/src/main/java/eu/nampi/backend/converter/StringToLangConverter.java",
    "contents_url": "https://api.github.com/repos/nam-pi/backend/contents/src/main/java/eu/nampi/backend/converter/StringToLangConverter.java?ref=dfd74a299a65243031d4f0a07af1f936b8ab7ccb",
    "patch": "@@ -8,16 +8,16 @@\n   @Override\n   public Lang convert(String source) {\n     switch (source.toLowerCase()) {\n-    case \"application/ld+json\":\n-      return Lang.JSONLD;\n-    case \"text/turtle\":\n-      return Lang.TURTLE;\n-    case \"application/rdf+xml\":\n-      return Lang.RDFXML;\n-    case \"application/n-triples\":\n-      return Lang.NTRIPLES;\n-    default:\n-      return Lang.JSONLD;\n+      case \"application/ld+json\":\n+        return Lang.JSONLD;\n+      case \"text/turtle\":\n+        return Lang.TURTLE;\n+      case \"application/rdf+xml\":\n+        return Lang.RDFXML;\n+      case \"application/n-triples\":\n+        return Lang.NTRIPLES;\n+      default:\n+        return Lang.JSONLD;\n     }\n   }\n-}\n\\ No newline at end of file\n+}"
  },
  {
    "sha": "f404fb3177dc8bd74b710cbe6a64d5f82a93c75c",
    "filename": "src/main/java/eu/nampi/backend/model/CollectionMeta.java",
    "status": "added",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/nam-pi/backend/blob/dfd74a299a65243031d4f0a07af1f936b8ab7ccb/src/main/java/eu/nampi/backend/model/CollectionMeta.java",
    "raw_url": "https://github.com/nam-pi/backend/raw/dfd74a299a65243031d4f0a07af1f936b8ab7ccb/src/main/java/eu/nampi/backend/model/CollectionMeta.java",
    "contents_url": "https://api.github.com/repos/nam-pi/backend/contents/src/main/java/eu/nampi/backend/model/CollectionMeta.java?ref=dfd74a299a65243031d4f0a07af1f936b8ab7ccb",
    "patch": "@@ -0,0 +1,22 @@\n+package eu.nampi.backend.model;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Getter;\n+\n+@Getter\n+@AllArgsConstructor\n+public class CollectionMeta {\n+\n+  private String baseUrl;\n+\n+  private boolean customLimit;\n+\n+  private int limit;\n+\n+  private int offset;\n+\n+  private String relativePath;\n+\n+  private OrderByClauses orderByClauses;\n+\n+}"
  },
  {
    "sha": "658c8cefa61ef4d9a2d901e405c5dc4da307706e",
    "filename": "src/main/java/eu/nampi/backend/model/OrderByClauses.java",
    "status": "added",
    "additions": 65,
    "deletions": 0,
    "changes": 65,
    "blob_url": "https://github.com/nam-pi/backend/blob/dfd74a299a65243031d4f0a07af1f936b8ab7ccb/src/main/java/eu/nampi/backend/model/OrderByClauses.java",
    "raw_url": "https://github.com/nam-pi/backend/raw/dfd74a299a65243031d4f0a07af1f936b8ab7ccb/src/main/java/eu/nampi/backend/model/OrderByClauses.java",
    "contents_url": "https://api.github.com/repos/nam-pi/backend/contents/src/main/java/eu/nampi/backend/model/OrderByClauses.java?ref=dfd74a299a65243031d4f0a07af1f936b8ab7ccb",
    "patch": "@@ -0,0 +1,65 @@\n+package eu.nampi.backend.model;\n+\n+import java.util.LinkedHashMap;\n+import java.util.Map;\n+import java.util.Optional;\n+\n+import org.apache.jena.arq.querybuilder.Order;\n+import org.apache.jena.arq.querybuilder.SelectBuilder;\n+\n+import lombok.NoArgsConstructor;\n+\n+@NoArgsConstructor\n+public class OrderByClauses {\n+\n+  public static final Order DEFAULT_ORDER = Order.ASCENDING;\n+\n+  private Map<String, Order> clauses = new LinkedHashMap<>();\n+\n+  public OrderByClauses(Map<String, Optional<String>> paramMap) {\n+    for (Map.Entry<String, Optional<String>> param : paramMap.entrySet()) {\n+      String key = param.getKey();\n+      if (!key.isEmpty()) {\n+        String value = param.getValue().orElse(\"ASC\").toUpperCase();\n+        this.clauses.put(padKey(key), value.equals(\"DESC\") ? Order.DESCENDING : Order.ASCENDING);\n+      }\n+    }\n+  }\n+\n+  public void add(String orderBy, Order order) {\n+    this.clauses.put(padKey(orderBy), order);\n+  }\n+\n+  public void add(String orderBy) {\n+    this.add(orderBy, DEFAULT_ORDER);\n+  }\n+\n+  public void appendAllTo(SelectBuilder selectBuilder) {\n+    for (Map.Entry<String, Order> entry : this.clauses.entrySet()) {\n+      selectBuilder.addOrderBy(padKey(entry.getKey()), entry.getValue());\n+    }\n+  }\n+\n+  public Map<String, Order> toMap() {\n+    return clauses;\n+  }\n+\n+  public Optional<Order> getOrderFor(String name) {\n+    String key = padKey(name);\n+    return this.clauses.containsKey(key) ? Optional.of(this.clauses.get(key)) : Optional.empty();\n+  }\n+\n+  public void replaceLabel(String originalLabel, String newLabel) {\n+    Map<String, Order> originalClauses = this.clauses;\n+    this.clauses = new LinkedHashMap<>();\n+    for (Map.Entry<String, Order> clause : originalClauses.entrySet()) {\n+      String key = clause.getKey();\n+      Order value = clause.getValue();\n+      this.add(padKey(originalLabel).equals(key) ? newLabel : key, value);\n+    }\n+  }\n+\n+  private static String padKey(String key) {\n+    return key.startsWith(\"?\") ? key : \"?\" + key;\n+  }\n+}"
  },
  {
    "sha": "5c92af6a1b32f17d49f5fcba9ab3b872bede677d",
    "filename": "src/main/java/eu/nampi/backend/model/User.java",
    "status": "modified",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/nam-pi/backend/blob/dfd74a299a65243031d4f0a07af1f936b8ab7ccb/src/main/java/eu/nampi/backend/model/User.java",
    "raw_url": "https://github.com/nam-pi/backend/raw/dfd74a299a65243031d4f0a07af1f936b8ab7ccb/src/main/java/eu/nampi/backend/model/User.java",
    "contents_url": "https://api.github.com/repos/nam-pi/backend/contents/src/main/java/eu/nampi/backend/model/User.java?ref=dfd74a299a65243031d4f0a07af1f936b8ab7ccb",
    "patch": "@@ -1,15 +1,14 @@\n package eu.nampi.backend.model;\n \n import java.util.UUID;\n-\n+import org.springframework.lang.NonNull;\n+import lombok.AllArgsConstructor;\n import lombok.Getter;\n-import lombok.NonNull;\n-import lombok.RequiredArgsConstructor;\n import lombok.Setter;\n \n @Getter\n @Setter\n-@RequiredArgsConstructor\n+@AllArgsConstructor\n public class User {\n \n   @NonNull\n@@ -20,4 +19,5 @@\n \n   @NonNull\n   private String email;\n+\n }"
  },
  {
    "sha": "aedf8ce789883d84722705475bbd0e0c699d7471",
    "filename": "src/main/java/eu/nampi/backend/repository/AbstractRdfRepository.java",
    "status": "added",
    "additions": 113,
    "deletions": 0,
    "changes": 113,
    "blob_url": "https://github.com/nam-pi/backend/blob/dfd74a299a65243031d4f0a07af1f936b8ab7ccb/src/main/java/eu/nampi/backend/repository/AbstractRdfRepository.java",
    "raw_url": "https://github.com/nam-pi/backend/raw/dfd74a299a65243031d4f0a07af1f936b8ab7ccb/src/main/java/eu/nampi/backend/repository/AbstractRdfRepository.java",
    "contents_url": "https://api.github.com/repos/nam-pi/backend/contents/src/main/java/eu/nampi/backend/repository/AbstractRdfRepository.java?ref=dfd74a299a65243031d4f0a07af1f936b8ab7ccb",
    "patch": "@@ -0,0 +1,113 @@\n+package eu.nampi.backend.repository;\n+\n+import org.apache.jena.arq.querybuilder.ConstructBuilder;\n+import org.apache.jena.arq.querybuilder.ExprFactory;\n+import org.apache.jena.arq.querybuilder.Order;\n+import org.apache.jena.arq.querybuilder.SelectBuilder;\n+import org.apache.jena.arq.querybuilder.WhereBuilder;\n+import org.apache.jena.rdf.model.Property;\n+import org.apache.jena.sparql.lang.sparql_11.ParseException;\n+import org.apache.jena.vocabulary.RDF;\n+import org.apache.jena.vocabulary.RDFS;\n+import org.apache.jena.vocabulary.XSD;\n+import org.springframework.beans.factory.annotation.Autowired;\n+\n+import eu.nampi.backend.model.CollectionMeta;\n+import eu.nampi.backend.model.OrderByClauses;\n+import eu.nampi.backend.service.JenaService;\n+import eu.nampi.backend.vocabulary.Api;\n+import eu.nampi.backend.vocabulary.Core;\n+import eu.nampi.backend.vocabulary.Hydra;\n+import lombok.extern.slf4j.Slf4j;\n+\n+@Slf4j\n+public abstract class AbstractRdfRepository {\n+\n+  @Autowired\n+  JenaService jenaService;\n+\n+  protected ConstructBuilder getHydraCollectionBuilder(CollectionMeta meta, WhereBuilder whereClause, String memberVar,\n+      String orderBy, Property orderByTemplateMappingProperty) {\n+    OrderByClauses clauses = new OrderByClauses();\n+    clauses.add(orderBy);\n+    return getHydraCollectionBuilder(meta, whereClause, memberVar, clauses, orderByTemplateMappingProperty);\n+  }\n+\n+  protected ConstructBuilder getHydraCollectionBuilder(CollectionMeta meta, WhereBuilder whereClause, String memberVar,\n+      String orderBy, Order order, Property orderByTemplateMappingProperty) {\n+    OrderByClauses clauses = new OrderByClauses();\n+    clauses.add(orderBy, order);\n+    return getHydraCollectionBuilder(meta, whereClause, memberVar, clauses, orderByTemplateMappingProperty);\n+  }\n+\n+  protected ConstructBuilder getHydraCollectionBuilder(CollectionMeta meta, WhereBuilder whereClause, String memberVar,\n+      OrderByClauses orderBy, Property orderByTemplateMappingProperty) {\n+    try {\n+      ConstructBuilder builder = new ConstructBuilder();\n+      ExprFactory exprF = builder.getExprFactory();\n+      addPrefixes(builder);\n+      addHydraMetadata(builder, memberVar, orderByTemplateMappingProperty);\n+      SelectBuilder countSelect = new SelectBuilder().addVar(\"COUNT(*)\", \"?count\").addWhere(whereClause);\n+      SelectBuilder dataSelect = new SelectBuilder().addVar(\"*\").addWhere(whereClause);\n+      orderBy.appendAllTo(dataSelect);\n+      dataSelect.addOrderBy(memberVar).setLimit(meta.getLimit()).setOffset(meta.getOffset());\n+      SelectBuilder searchSelect = new SelectBuilder().addVar(\"*\").addBind(\"bnode()\", \"?search\")\n+          .addBind(exprF.concat(meta.getRelativePath(), \"{?pageIndex,limit,offset,orderBy}\"), \"?template\")\n+          .addBind(\"bnode()\", \"?pageIndexMapping\").addBind(\"bnode()\", \"?limitMapping\")\n+          .addBind(\"bnode()\", \"?offsetMapping\").addBind(\"bnode()\", \"?orderByMapping\");\n+      builder.addWhere(new WhereBuilder().addUnion(countSelect).addUnion(dataSelect).addUnion(searchSelect));\n+      builder.addBind(exprF.asExpr(meta.getLimit()), \"?limit\").addBind(exprF.asExpr(meta.getOffset()), \"?offset\")\n+          .addBind(exprF.asExpr(meta.getBaseUrl()), \"?baseUrl\").addBind(exprF.asExpr(meta.getRelativePath()), \"?path\")\n+          .addBind(exprF.asExpr(meta.isCustomLimit()), \"?customMeta\").addBind(exprF.iri(\"?baseUrl\"), \"?col\")\n+          .addBind(builder.makeExpr(\"if(?customMeta, concat('&limit=', xsd:string(?limit)), '')\"), \"?limitQuery\")\n+          .addBind(builder.makeExpr(\"xsd:integer(floor(?offset / ?limit + 1))\"), \"?currentNumber\")\n+          .addBind(builder.makeExpr(\"xsd:integer(floor(?count / ?limit))\"), \"?lastNumber\")\n+          .addBind(builder.makeExpr(\"?currentNumber - 1\"), \"?prevNumber\")\n+          .addBind(builder.makeExpr(\"?currentNumber + 1\"), \"?nextNumber\")\n+          .addBind(\n+              builder.makeExpr(\"iri(concat(?baseUrl, ?limitQuery, '?page=', xsd:string(?currentNumber)))\"), \"?view\")\n+          .addBind(builder.makeExpr(\"concat(?path, ?limitQuery, '?page=1')\"), \"?first\")\n+          .addBind(builder.makeExpr(\n+              \"if(?prevNumber > 0, concat(?path, ?limitQuery, '?page=', xsd:string(?prevNumber)), 1+'')\"), \"?prev\")\n+          .addBind(\n+              builder.makeExpr(\n+                  \"if(?nextNumber < ?lastNumber, concat(?path, ?limitQuery, '?page=', xsd:string(?nextNumber)), 1+'')\"),\n+              \"?next\")\n+          .addBind(builder.makeExpr(\"concat(?path, ?limitQuery, '?page=', xsd:string(?lastNumber))\"), \"?last\");\n+\n+      return builder;\n+    } catch (ParseException e) {\n+      log.error(e.getMessage());\n+      return null;\n+    }\n+  }\n+\n+  private void addHydraVariable(ConstructBuilder builder, String parent, String self, Property property,\n+      boolean required, String variable) {\n+    builder.addConstruct(self, RDF.type, Hydra.IriTemplateMapping).addConstruct(self, Hydra.property, property)\n+        .addConstruct(self, Hydra.required, required ? \"true\" : \"false\").addConstruct(self, Hydra.variable, variable)\n+        .addConstruct(parent, Hydra.mapping, self);\n+  }\n+\n+  private void addHydraMetadata(ConstructBuilder builder, String memberVar, Property orderByTemplateMappingProperty) {\n+    builder.addConstruct(\"?col\", Hydra.totalItems, \"?count\").addConstruct(\"?col\", Hydra.member, memberVar)\n+        .addConstruct(\"?col\", Hydra.view, \"?view\").addConstruct(\"?view\", RDF.type, Hydra.PartialCollectionView)\n+        .addConstruct(\"?view\", Hydra.first, \"?first\").addConstruct(\"?view\", Hydra.previous, \"?prev\")\n+        .addConstruct(\"?view\", Hydra.next, \"?next\").addConstruct(\"?view\", Hydra.last, \"?last\")\n+        .addConstruct(\"?search\", RDF.type, Hydra.IriTemplate).addConstruct(\"?col\", Hydra.search, \"?search\")\n+        .addConstruct(\"?search\", Hydra.template, \"?template\")\n+        .addConstruct(\"?search\", Hydra.variableRepresentation, Hydra.BasicRepresentation);\n+    addHydraVariable(builder, \"?search\", \"?pageIndexMapping\", Hydra.pageIndex, false, \"pageIndex\");\n+    addHydraVariable(builder, \"?search\", \"?limitMapping\", Hydra.limit, false, \"limit\");\n+    addHydraVariable(builder, \"?search\", \"?offsetMapping\", Hydra.offset, false, \"offset\");\n+    addHydraVariable(builder, \"?search\", \"?orderByMapping\", orderByTemplateMappingProperty, false, \"orderBy\");\n+\n+  }\n+\n+  private void addPrefixes(ConstructBuilder builder) {\n+    builder.addPrefix(\"core\", Core.getURI()).addPrefix(\"rdfs\", RDFS.getURI()).addPrefix(\"rdf\", RDF.getURI())\n+        .addPrefix(\"hydra\", Hydra.getURI()).addPrefix(\"xsd\", XSD.getURI())\n+        .addConstruct(\"?col\", RDF.type, Hydra.Collection).addPrefix(\"api\", Api.getURI());\n+  }\n+\n+}"
  },
  {
    "sha": "a508a2cc473b24b1666c613c8ee81457cf747ccb",
    "filename": "src/main/java/eu/nampi/backend/repository/EventRepository.java",
    "status": "modified",
    "additions": 43,
    "deletions": 17,
    "changes": 60,
    "blob_url": "https://github.com/nam-pi/backend/blob/dfd74a299a65243031d4f0a07af1f936b8ab7ccb/src/main/java/eu/nampi/backend/repository/EventRepository.java",
    "raw_url": "https://github.com/nam-pi/backend/raw/dfd74a299a65243031d4f0a07af1f936b8ab7ccb/src/main/java/eu/nampi/backend/repository/EventRepository.java",
    "contents_url": "https://api.github.com/repos/nam-pi/backend/contents/src/main/java/eu/nampi/backend/repository/EventRepository.java?ref=dfd74a299a65243031d4f0a07af1f936b8ab7ccb",
    "patch": "@@ -1,27 +1,53 @@\n package eu.nampi.backend.repository;\n \n+import org.apache.jena.arq.querybuilder.Order;\n+import org.apache.jena.arq.querybuilder.WhereBuilder;\n import org.apache.jena.rdf.model.Model;\n-import org.springframework.beans.factory.annotation.Autowired;\n+import org.apache.jena.vocabulary.RDF;\n+import org.apache.jena.vocabulary.RDFS;\n import org.springframework.stereotype.Repository;\n \n-import eu.nampi.backend.util.JenaUtils;\n+import eu.nampi.backend.model.CollectionMeta;\n+import eu.nampi.backend.model.OrderByClauses;\n+import eu.nampi.backend.vocabulary.Api;\n+import eu.nampi.backend.vocabulary.Core;\n \n @Repository\n-public class EventRepository {\n+public class EventRepository extends AbstractRdfRepository {\n \n-  @Autowired\n-  JenaUtils jenaHelper;\n-\n-  private static final String CONSTRUCT_EVENT_LIST = \"\"\"\n-      PREFIX nampi:<https://purl.org/nampi/owl/core#>\n-      CONSTRUCT {\n-        ?p a nampi:event .\n-      } WHERE {\n-        ?p a nampi:event .\n-      }\n-      \"\"\";\n-\n-  public Model getEvents() {\n-    return jenaHelper.constructCore(CONSTRUCT_EVENT_LIST, true);\n+  public Model findAll(CollectionMeta meta) {\n+    WhereBuilder where = new WhereBuilder();\n+    OrderByClauses clauses = meta.getOrderByClauses();\n+    clauses.replaceLabel(\"date\", \"realSortingDateTime\");\n+    where.addWhere(\"?event\", RDF.type, Core.event).addWhere(\"?event\", RDFS.label, \"?label\")\n+        .addOptional(new WhereBuilder().addWhere(\"?event\", Core.takesPlaceOn, \"?exactDate\").addWhere(\"?exactDate\",\n+            Core.hasXsdDateTime, \"?exactDateTime\"))\n+        .addOptional(new WhereBuilder().addWhere(\"?event\", Core.takesPlaceNotEarlierThan, \"?earliestDate\")\n+            .addWhere(\"?earliestDate\", Core.hasXsdDateTime, \"?earliestDateTime\"))\n+        .addOptional(new WhereBuilder().addWhere(\"?event\", Core.takesPlaceNotLaterThan, \"?latestDate\")\n+            .addWhere(\"?latestDate\", Core.hasXsdDateTime, \"?latestDateTime\"))\n+        .addOptional(new WhereBuilder().addWhere(\"?event\", Core.hasSortingDate, \"?sortingDate\").addWhere(\"?sortingDate\",\n+            Core.hasXsdDateTime, \"?sortingDateTime\"))\n+        .addBind(where.makeExpr(\n+            \"IF ( BOUND ( ?sortingDate ), ?sortingDate, IF ( BOUND ( ?exactDate ), ?exactDate, IF ( BOUND ( ?earliestDate ), ?earliestDate, IF ( BOUND ( ?latestDate ), ?latestDate, bnode() ) ) ) )\"),\n+            \"?realSortingDate\")\n+        .addBind(where.makeExpr(\n+            \"IF ( BOUND ( ?sortingDateTime ), ?sortingDateTime, IF ( BOUND ( ?exactDateTime ), ?exactDateTime, IF ( BOUND ( ?earliestDateTime ), ?earliestDateTime, IF ( BOUND ( ?latestDateTime ), ?latestDateTime, '\"\n+                + (clauses.getOrderFor(\"?realSortingDateTime\").orElse(Order.ASCENDING) == Order.ASCENDING\n+                    ? \"9999-12-31T23:59:59\"\n+                    : \"-9999-01-01:00:00:00\")\n+                + \"' ) ) ) )\"),\n+            \"?realSortingDateTime\");\n+    String query = getHydraCollectionBuilder(meta, where, \"?event\", clauses, Api.orderBy)\n+        .addConstruct(\"?event\", RDF.type, Core.event).addConstruct(\"?event\", RDFS.label, \"?label\")\n+        .addConstruct(\"?event\", Core.hasSortingDate, \"?realSortingDate\")\n+        .addConstruct(\"?realSortingDate\", Core.hasXsdDateTime, \"?realSortingDateTime\")\n+        .addConstruct(\"?event\", Core.takesPlaceOn, \"?exactDate\")\n+        .addConstruct(\"?exactDate\", Core.hasXsdDateTime, \"?exactDateTime\")\n+        .addConstruct(\"?event\", Core.takesPlaceNotEarlierThan, \"?earliestDate\")\n+        .addConstruct(\"?earliestDate\", Core.hasXsdDateTime, \"?earliestDateTime\")\n+        .addConstruct(\"?event\", Core.takesPlaceNotLaterThan, \"?latestDate\")\n+        .addConstruct(\"?latestDate\", Core.hasXsdDateTime, \"?latestDateTime\").buildString();\n+    return jenaService.construct(query, true);\n   }\n }"
  },
  {
    "sha": "5f749168b345aabc0c99dd4f47b3c4f382c17ce8",
    "filename": "src/main/java/eu/nampi/backend/repository/PersonRepository.java",
    "status": "modified",
    "additions": 15,
    "deletions": 39,
    "changes": 54,
    "blob_url": "https://github.com/nam-pi/backend/blob/dfd74a299a65243031d4f0a07af1f936b8ab7ccb/src/main/java/eu/nampi/backend/repository/PersonRepository.java",
    "raw_url": "https://github.com/nam-pi/backend/raw/dfd74a299a65243031d4f0a07af1f936b8ab7ccb/src/main/java/eu/nampi/backend/repository/PersonRepository.java",
    "contents_url": "https://api.github.com/repos/nam-pi/backend/contents/src/main/java/eu/nampi/backend/repository/PersonRepository.java?ref=dfd74a299a65243031d4f0a07af1f936b8ab7ccb",
    "patch": "@@ -1,47 +1,23 @@\n package eu.nampi.backend.repository;\n \n-import java.util.UUID;\n-\n+import org.apache.jena.arq.querybuilder.WhereBuilder;\n import org.apache.jena.rdf.model.Model;\n-import org.springframework.beans.factory.annotation.Autowired;\n+import org.apache.jena.vocabulary.RDF;\n+import org.apache.jena.vocabulary.RDFS;\n import org.springframework.stereotype.Repository;\n \n-import eu.nampi.backend.util.JenaUtils;\n+import eu.nampi.backend.model.CollectionMeta;\n+import eu.nampi.backend.vocabulary.Api;\n+import eu.nampi.backend.vocabulary.Core;\n \n @Repository\n-public class PersonRepository {\n-\n-  @Autowired\n-  JenaUtils jenaHelper;\n-\n-  private static final String CONSTRUCT_PERSON_DETAILS = \"\"\"\n-      PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n-      PREFIX data: <https://purl.org/nampi/data/>\n-      CONSTRUCT {\n-          <data:$ID$> rdf:label ?label .\n-          ?s ?p data:$ID$ .\n-      }\n-      WHERE {\n-          <data:$ID$> rdf:label ?label .\n-          ?s ?p data:$ID$ .\n-      }\n-      \"\"\";\n-\n-  private static final String CONSTRUCT_PERSON_LIST = \"\"\"\n-      PREFIX nampi: <https://purl.org/nampi/owl/core#>\n-      CONSTRUCT {\n-          ?p a nampi:person .\n-      }\n-      WHERE {\n-          ?p a nampi:person .\n-      }\n-      \"\"\";\n-\n-  public Model getPerson(UUID id) {\n-    return jenaHelper.constructCore(CONSTRUCT_PERSON_DETAILS.replace(\"$ID$\", id.toString()), false);\n-  }\n-\n-  public Model getPersons() {\n-    return jenaHelper.constructCore(CONSTRUCT_PERSON_LIST, false);\n+public class PersonRepository extends AbstractRdfRepository {\n+\n+  public Model findAll(CollectionMeta meta) {\n+    WhereBuilder where = new WhereBuilder().addWhere(\"?person\", RDF.type, Core.person).addWhere(\"?person\", RDFS.label,\n+        \"?label\");\n+    String query = getHydraCollectionBuilder(meta, where, \"?person\", meta.getOrderByClauses(), Api.orderBy)\n+        .addConstruct(\"?person\", RDF.type, \"core:person\").addConstruct(\"?person\", RDFS.label, \"?label\").buildString();\n+    return jenaService.construct(query, true);\n   }\n-}\n\\ No newline at end of file\n+}"
  },
  {
    "sha": "a159cb5439a81d04c4954b70542a12b71f2e9990",
    "filename": "src/main/java/eu/nampi/backend/repository/UserRepository.java",
    "status": "modified",
    "additions": 0,
    "deletions": 2,
    "changes": 2,
    "blob_url": "https://github.com/nam-pi/backend/blob/dfd74a299a65243031d4f0a07af1f936b8ab7ccb/src/main/java/eu/nampi/backend/repository/UserRepository.java",
    "raw_url": "https://github.com/nam-pi/backend/raw/dfd74a299a65243031d4f0a07af1f936b8ab7ccb/src/main/java/eu/nampi/backend/repository/UserRepository.java",
    "contents_url": "https://api.github.com/repos/nam-pi/backend/contents/src/main/java/eu/nampi/backend/repository/UserRepository.java?ref=dfd74a299a65243031d4f0a07af1f936b8ab7ccb",
    "patch": "@@ -1,13 +1,11 @@\n package eu.nampi.backend.repository;\n \n import java.util.UUID;\n-\n import org.keycloak.KeycloakPrincipal;\n import org.keycloak.KeycloakSecurityContext;\n import org.keycloak.representations.AccessToken;\n import org.springframework.security.core.context.SecurityContextHolder;\n import org.springframework.stereotype.Repository;\n-\n import eu.nampi.backend.model.User;\n \n @Repository"
  },
  {
    "sha": "0f93984180269fb4e75131bbf21b7adf7308742b",
    "filename": "src/main/java/eu/nampi/backend/service/FusekiService.java",
    "status": "added",
    "additions": 59,
    "deletions": 0,
    "changes": 59,
    "blob_url": "https://github.com/nam-pi/backend/blob/dfd74a299a65243031d4f0a07af1f936b8ab7ccb/src/main/java/eu/nampi/backend/service/FusekiService.java",
    "raw_url": "https://github.com/nam-pi/backend/raw/dfd74a299a65243031d4f0a07af1f936b8ab7ccb/src/main/java/eu/nampi/backend/service/FusekiService.java",
    "contents_url": "https://api.github.com/repos/nam-pi/backend/contents/src/main/java/eu/nampi/backend/service/FusekiService.java?ref=dfd74a299a65243031d4f0a07af1f936b8ab7ccb",
    "patch": "@@ -0,0 +1,59 @@\n+package eu.nampi.backend.service;\n+\n+import org.apache.jena.query.Dataset;\n+import org.apache.jena.query.QueryExecution;\n+import org.apache.jena.query.QueryExecutionFactory;\n+import org.apache.jena.query.ResultSet;\n+import org.apache.jena.rdf.model.InfModel;\n+import org.apache.jena.rdf.model.Model;\n+import org.apache.jena.rdf.model.ModelFactory;\n+import org.apache.jena.rdfconnection.RDFConnectionFuseki;\n+import org.apache.jena.rdfconnection.RDFConnectionRemoteBuilder;\n+import org.apache.jena.reasoner.Reasoner;\n+import org.springframework.beans.factory.annotation.Autowired;\n+\n+public class FusekiService implements JenaService {\n+\n+  @Autowired\n+  private Reasoner reasoner;\n+\n+  @Autowired\n+  private RDFConnectionRemoteBuilder connectionBuilder;\n+\n+  private QueryExecution createQueryExecution(String query, Dataset dataset, boolean useInference) {\n+    Model defaultModel = dataset.getDefaultModel();\n+    if (useInference) {\n+      InfModel infModel = ModelFactory.createInfModel(reasoner, defaultModel);\n+      return QueryExecutionFactory.create(query, infModel);\n+    } else {\n+      return QueryExecutionFactory.create(query, defaultModel);\n+    }\n+  }\n+\n+  public Model construct(String query, boolean useInference) {\n+    try (RDFConnectionFuseki conn = (RDFConnectionFuseki) connectionBuilder.build()) {\n+      Dataset dataset = conn.fetchDataset();\n+      dataset.begin();\n+      try {\n+        QueryExecution qexec = createQueryExecution(query, dataset, useInference);\n+        return qexec.execConstruct();\n+      } finally {\n+        dataset.end();\n+      }\n+    }\n+  }\n+\n+  public ResultSet select(String query, boolean useInference) {\n+    try (RDFConnectionFuseki conn = (RDFConnectionFuseki) connectionBuilder.build()) {\n+      Dataset dataset = conn.fetchDataset();\n+      dataset.begin();\n+      try {\n+        QueryExecution qexec = createQueryExecution(query, dataset, useInference);\n+        return qexec.execSelect();\n+      } finally {\n+        dataset.end();\n+      }\n+    }\n+  }\n+\n+}"
  },
  {
    "sha": "cb5f646cc5cd03dfa74114b24013d61a9404e5dd",
    "filename": "src/main/java/eu/nampi/backend/service/JenaService.java",
    "status": "added",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/nam-pi/backend/blob/dfd74a299a65243031d4f0a07af1f936b8ab7ccb/src/main/java/eu/nampi/backend/service/JenaService.java",
    "raw_url": "https://github.com/nam-pi/backend/raw/dfd74a299a65243031d4f0a07af1f936b8ab7ccb/src/main/java/eu/nampi/backend/service/JenaService.java",
    "contents_url": "https://api.github.com/repos/nam-pi/backend/contents/src/main/java/eu/nampi/backend/service/JenaService.java?ref=dfd74a299a65243031d4f0a07af1f936b8ab7ccb",
    "patch": "@@ -0,0 +1,12 @@\n+package eu.nampi.backend.service;\n+\n+import org.apache.jena.query.ResultSet;\n+import org.apache.jena.rdf.model.Model;\n+\n+public interface JenaService {\n+\n+  public Model construct(String query, boolean useInference);\n+\n+  public ResultSet select(String query, boolean useInference);\n+\n+}"
  },
  {
    "sha": "025216e90ac5a30d7f1d7180ba40e13fcdabb1f2",
    "filename": "src/main/java/eu/nampi/backend/util/JenaUtils.java",
    "status": "removed",
    "additions": 0,
    "deletions": 95,
    "changes": 95,
    "blob_url": "https://github.com/nam-pi/backend/blob/56237e46f147a1cfb393b08bb312d6ca06726014/src/main/java/eu/nampi/backend/util/JenaUtils.java",
    "raw_url": "https://github.com/nam-pi/backend/raw/56237e46f147a1cfb393b08bb312d6ca06726014/src/main/java/eu/nampi/backend/util/JenaUtils.java",
    "contents_url": "https://api.github.com/repos/nam-pi/backend/contents/src/main/java/eu/nampi/backend/util/JenaUtils.java?ref=56237e46f147a1cfb393b08bb312d6ca06726014",
    "patch": "@@ -1,95 +0,0 @@\n-package eu.nampi.backend.util;\n-\n-import java.io.IOException;\n-import java.io.InputStream;\n-\n-import javax.servlet.http.HttpServletResponse;\n-\n-import org.apache.http.HttpStatus;\n-import org.apache.jena.ontology.OntModel;\n-import org.apache.jena.ontology.OntModelSpec;\n-import org.apache.jena.query.Dataset;\n-import org.apache.jena.query.QueryExecution;\n-import org.apache.jena.query.QueryExecutionFactory;\n-import org.apache.jena.query.ResultSet;\n-import org.apache.jena.rdf.model.InfModel;\n-import org.apache.jena.rdf.model.Model;\n-import org.apache.jena.rdf.model.ModelFactory;\n-import org.apache.jena.rdfconnection.RDFConnection;\n-import org.apache.jena.rdfconnection.RDFConnectionFactory;\n-import org.apache.jena.reasoner.Reasoner;\n-import org.apache.jena.reasoner.ReasonerRegistry;\n-import org.apache.jena.riot.Lang;\n-import org.apache.jena.riot.RDFDataMgr;\n-import org.apache.jena.util.FileManager;\n-import org.springframework.beans.factory.annotation.Value;\n-import org.springframework.stereotype.Component;\n-\n-@Component\n-public class JenaUtils {\n-\n-  @Value(\"${nampi.core-owl-url}\")\n-  private String coreOwlUrl;\n-\n-  @Value(\"${nampi.triple-store-url}\")\n-  private String tripleStoreUrl;\n-\n-  private OntModel readOntology(String url) {\n-    OntModel model = ModelFactory.createOntologyModel(OntModelSpec.OWL_MEM, null);\n-    try {\n-      InputStream in = FileManager.get().open(url);\n-      model.read(in, null);\n-    } catch (Exception e) {\n-      e.printStackTrace();\n-    }\n-    return model;\n-  }\n-\n-  private QueryExecution createQueryExecution(String query, Dataset dataset, boolean useInference) {\n-    Model defaultModel = dataset.getDefaultModel();\n-    if (useInference) {\n-      OntModel schema = readOntology(coreOwlUrl);\n-      Reasoner reasoner = ReasonerRegistry.getOWLReasoner();\n-      reasoner = reasoner.bindSchema(schema);\n-      InfModel infModel = ModelFactory.createInfModel(reasoner, defaultModel);\n-      return QueryExecutionFactory.create(query, infModel);\n-    } else {\n-      return QueryExecutionFactory.create(query, defaultModel);\n-    }\n-  }\n-\n-  public Model constructCore(String query, boolean useInference) {\n-    try (RDFConnection conn = RDFConnectionFactory.connect(tripleStoreUrl)) {\n-      Dataset dataset = conn.fetchDataset();\n-      dataset.begin();\n-      try {\n-        QueryExecution qexec = createQueryExecution(query, dataset, useInference);\n-        return qexec.execConstruct();\n-      } finally {\n-        dataset.end();\n-      }\n-    }\n-  }\n-\n-  public ResultSet selectCore(String query, boolean useInference) {\n-    try (RDFConnection conn = RDFConnectionFactory.connect(tripleStoreUrl)) {\n-      Dataset dataset = conn.fetchDataset();\n-      dataset.begin();\n-      try {\n-        QueryExecution qexec = createQueryExecution(query, dataset, useInference);\n-        return qexec.execSelect();\n-      } finally {\n-        dataset.end();\n-      }\n-    }\n-  }\n-\n-  public void writeModel(Model model, Lang lang, HttpServletResponse response) {\n-    try {\n-      RDFDataMgr.write(response.getOutputStream(), model, lang);\n-    } catch (IOException e) {\n-      response.setStatus(HttpStatus.SC_INTERNAL_SERVER_ERROR);\n-      e.printStackTrace();\n-    }\n-  }\n-}"
  },
  {
    "sha": "685b47a291d2211fc743b5fe6d1e92b2968a3aa1",
    "filename": "src/main/java/eu/nampi/backend/vocabulary/Api.java",
    "status": "added",
    "additions": 36,
    "deletions": 0,
    "changes": 36,
    "blob_url": "https://github.com/nam-pi/backend/blob/dfd74a299a65243031d4f0a07af1f936b8ab7ccb/src/main/java/eu/nampi/backend/vocabulary/Api.java",
    "raw_url": "https://github.com/nam-pi/backend/raw/dfd74a299a65243031d4f0a07af1f936b8ab7ccb/src/main/java/eu/nampi/backend/vocabulary/Api.java",
    "contents_url": "https://api.github.com/repos/nam-pi/backend/contents/src/main/java/eu/nampi/backend/vocabulary/Api.java?ref=dfd74a299a65243031d4f0a07af1f936b8ab7ccb",
    "patch": "@@ -0,0 +1,36 @@\n+package eu.nampi.backend.vocabulary;\n+\n+import org.apache.jena.rdf.model.Property;\n+import org.apache.jena.rdf.model.Resource;\n+import org.apache.jena.rdf.model.ResourceFactory;\n+\n+/**\n+ * The NAMPI Core RDF vocabulary.\n+ */\n+public class Api {\n+\n+  /**\n+   * The namespace of the vocabulary as a string\n+   */\n+  public static final String uri = \"https://purl.org/nampi/owl/api#\";\n+\n+  /**\n+   * returns the URI for this schema\n+   * \n+   * @return the URI for this schema\n+   */\n+  public static String getURI() {\n+    return uri;\n+  }\n+\n+  protected static final Resource resource(String local) {\n+    return ResourceFactory.createResource(uri + local);\n+  }\n+\n+  protected static final Property property(String local) {\n+    return ResourceFactory.createProperty(uri, local);\n+  }\n+\n+  public static final Property orderBy = property(\"orderBy\");\n+\n+}"
  },
  {
    "sha": "1564e00e38e376985bc786e5b9cb745881189c06",
    "filename": "src/main/java/eu/nampi/backend/vocabulary/Core.java",
    "status": "added",
    "additions": 47,
    "deletions": 0,
    "changes": 47,
    "blob_url": "https://github.com/nam-pi/backend/blob/dfd74a299a65243031d4f0a07af1f936b8ab7ccb/src/main/java/eu/nampi/backend/vocabulary/Core.java",
    "raw_url": "https://github.com/nam-pi/backend/raw/dfd74a299a65243031d4f0a07af1f936b8ab7ccb/src/main/java/eu/nampi/backend/vocabulary/Core.java",
    "contents_url": "https://api.github.com/repos/nam-pi/backend/contents/src/main/java/eu/nampi/backend/vocabulary/Core.java?ref=dfd74a299a65243031d4f0a07af1f936b8ab7ccb",
    "patch": "@@ -0,0 +1,47 @@\n+package eu.nampi.backend.vocabulary;\n+\n+import org.apache.jena.rdf.model.Property;\n+import org.apache.jena.rdf.model.Resource;\n+import org.apache.jena.rdf.model.ResourceFactory;\n+\n+/**\n+ * The NAMPI Core RDF vocabulary.\n+ */\n+public class Core {\n+\n+  /**\n+   * The namespace of the vocabulary as a string\n+   */\n+  public static final String uri = \"https://purl.org/nampi/owl/core#\";\n+\n+  /**\n+   * returns the URI for this schema\n+   * \n+   * @return the URI for this schema\n+   */\n+  public static String getURI() {\n+    return uri;\n+  }\n+\n+  protected static final Resource resource(String local) {\n+    return ResourceFactory.createResource(uri + local);\n+  }\n+\n+  protected static final Property property(String local) {\n+    return ResourceFactory.createProperty(uri, local);\n+  }\n+\n+  public static final Property event = property(\"event\");\n+\n+  public static final Property person = property(\"person\");\n+\n+  public static final Property hasSortingDate = property(\"has_sorting_date\");\n+\n+  public static final Property takesPlaceOn = property(\"takes_place_on\");\n+\n+  public static final Property takesPlaceNotEarlierThan = property(\"takes_place_not_earlier_than\");\n+\n+  public static final Property takesPlaceNotLaterThan = property(\"takes_place_not_later_than\");\n+\n+  public static final Property hasXsdDateTime = property(\"has_xsd_date_time\");\n+}"
  },
  {
    "sha": "3d9e5c43bd0a57c40ac6c08275357fef94705f2f",
    "filename": "src/main/java/eu/nampi/backend/vocabulary/Hydra.java",
    "status": "added",
    "additions": 77,
    "deletions": 0,
    "changes": 77,
    "blob_url": "https://github.com/nam-pi/backend/blob/dfd74a299a65243031d4f0a07af1f936b8ab7ccb/src/main/java/eu/nampi/backend/vocabulary/Hydra.java",
    "raw_url": "https://github.com/nam-pi/backend/raw/dfd74a299a65243031d4f0a07af1f936b8ab7ccb/src/main/java/eu/nampi/backend/vocabulary/Hydra.java",
    "contents_url": "https://api.github.com/repos/nam-pi/backend/contents/src/main/java/eu/nampi/backend/vocabulary/Hydra.java?ref=dfd74a299a65243031d4f0a07af1f936b8ab7ccb",
    "patch": "@@ -0,0 +1,77 @@\n+package eu.nampi.backend.vocabulary;\n+\n+import org.apache.jena.rdf.model.Property;\n+import org.apache.jena.rdf.model.Resource;\n+import org.apache.jena.rdf.model.ResourceFactory;\n+\n+/**\n+ * The Hydra Core RDF vocabulary.\n+ */\n+public class Hydra {\n+\n+  /**\n+   * The namespace of the vocabulary as a string\n+   */\n+  public static final String uri = \"http://www.w3.org/ns/hydra/core#\";\n+\n+  /**\n+   * returns the URI for this schema\n+   * \n+   * @return the URI for this schema\n+   */\n+  public static String getURI() {\n+    return uri;\n+  }\n+\n+  protected static final Resource resource(String local) {\n+    return ResourceFactory.createResource(uri + local);\n+  }\n+\n+  protected static final Property property(String local) {\n+    return ResourceFactory.createProperty(uri, local);\n+  }\n+\n+  public static final Property Collection = property(\"Collection\");\n+\n+  public static final Property member = property(\"member\");\n+\n+  public static final Property totalItems = property(\"totalItems\");\n+\n+  public static final Property first = property(\"first\");\n+\n+  public static final Property last = property(\"last\");\n+\n+  public static final Property next = property(\"next\");\n+\n+  public static final Property previous = property(\"previous\");\n+\n+  public static final Property PartialCollectionView = property(\"PartialCollectionView\");\n+\n+  public static final Property view = property(\"view\");\n+\n+  public static final Property search = property(\"search\");\n+\n+  public static final Property IriTemplate = property(\"IriTemplate\");\n+\n+  public static final Property template = property(\"template\");\n+\n+  public static final Property IriTemplateMapping = property(\"IriTemplateMapping\");\n+\n+  public static final Property mapping = property(\"mapping\");\n+\n+  public static final Property property = property(\"property\");\n+\n+  public static final Property required = property(\"required\");\n+\n+  public static final Property variable = property(\"variable\");\n+\n+  public static final Property pageIndex = property(\"pageIndex\");\n+\n+  public static final Property limit = property(\"limit\");\n+\n+  public static final Property offset = property(\"offset\");\n+\n+  public static final Property variableRepresentation = property(\"variableRepresentation\");\n+\n+  public static final Property BasicRepresentation = property(\"BasicRepresentation\");\n+}"
  }
]
