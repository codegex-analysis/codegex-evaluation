[
  {
    "sha": "a85ef87035f7499298dfdde6f1c7f552ec772372",
    "filename": "kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/internal/RawCustomResourceOperationsImpl.java",
    "status": "modified",
    "additions": 31,
    "deletions": 19,
    "changes": 50,
    "blob_url": "https://github.com/fabric8io/kubernetes-client/blob/e60c6348bb3730b2c909aee4f71cbf5db86cc3f7/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/internal/RawCustomResourceOperationsImpl.java",
    "raw_url": "https://github.com/fabric8io/kubernetes-client/raw/e60c6348bb3730b2c909aee4f71cbf5db86cc3f7/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/internal/RawCustomResourceOperationsImpl.java",
    "contents_url": "https://api.github.com/repos/fabric8io/kubernetes-client/contents/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/internal/RawCustomResourceOperationsImpl.java?ref=e60c6348bb3730b2c909aee4f71cbf5db86cc3f7",
    "patch": "@@ -26,6 +26,7 @@\n import java.util.concurrent.TimeUnit;\n \n import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.JsonNode;\n import com.fasterxml.jackson.databind.ObjectMapper;\n \n import io.fabric8.kubernetes.api.model.DeleteOptions;\n@@ -48,11 +49,13 @@\n import io.fabric8.kubernetes.client.dsl.Namespaceable;\n import io.fabric8.kubernetes.client.dsl.base.CustomResourceDefinitionContext;\n import io.fabric8.kubernetes.client.dsl.base.OperationSupport;\n+import io.fabric8.kubernetes.client.internal.PatchUtils;\n import io.fabric8.kubernetes.client.utils.HttpClientUtils;\n import io.fabric8.kubernetes.client.utils.IOHelpers;\n import io.fabric8.kubernetes.client.utils.Serialization;\n import io.fabric8.kubernetes.client.utils.Utils;\n import io.fabric8.kubernetes.client.utils.WatcherToggle;\n+import io.fabric8.zjsonpatch.JsonDiff;\n import okhttp3.HttpUrl;\n import okhttp3.MediaType;\n import okhttp3.OkHttpClient;\n@@ -88,12 +91,12 @@\n   private final String deletionPropagation;\n   private final boolean cascading;\n \n-  private enum HttpCallMethod { GET, POST, PUT, DELETE }\n+  private enum HttpCallMethod { GET, POST, PUT, PATCH, DELETE }\n \n   private RawCustomResourceOperationsImpl(OkHttpClient client, Config config, CustomResourceDefinitionContext crdContext, String namespace, String name, long gracePeriodInSeconds, boolean cascading, String deletionPropagation, ListOptions listOptions, boolean dryRun) {\n     super(client, config);\n     this.customResourceDefinition = crdContext;\n-    this.objectMapper = Serialization.jsonMapper();\n+    this.objectMapper = new ObjectMapper();\n     this.namespace = namespace;\n     this.name = name;\n     this.gracePeriodInSeconds = gracePeriodInSeconds;\n@@ -298,6 +301,18 @@ public RawCustomResourceOperationsImpl dryRun(boolean isDryRun) {\n     return new RawCustomResourceOperationsImpl(client, config, customResourceDefinition, namespace, null, gracePeriodInSeconds, cascading, deletionPropagation, listOptions, dryRun).createOrReplace(objectAsStream);\n   }\n \n+  private Map<String, Object> replace(String namespace, String name, Map<String, Object> object) throws IOException {\n+    return new RawCustomResourceOperationsImpl(client, config, customResourceDefinition, namespace, name, gracePeriodInSeconds, cascading, deletionPropagation, listOptions, dryRun).replace(object);\n+  }\n+\n+  private Map<String, Object> replace(String name, Map<String, Object> object) throws IOException {\n+    return new RawCustomResourceOperationsImpl(client, config, customResourceDefinition, null, name, gracePeriodInSeconds, cascading, deletionPropagation, listOptions, dryRun).replace(object);\n+  }\n+\n+  private Map<String, Object> replace(Map<String, Object> object) throws IOException {\n+    return validateAndSubmitRequest(objectMapper.writeValueAsString(object), HttpCallMethod.PUT);\n+  }\n+\n   /**\n    * Edit a custom resource object which is a non-namespaced object.\n    *\n@@ -332,7 +347,6 @@ public RawCustomResourceOperationsImpl dryRun(boolean isDryRun) {\n    * @throws IOException in case of network/serialization failures or failures from Kubernetes API\n    */\n   public Map<String, Object> edit(String namespace, String name, Map<String, Object> object) throws IOException {\n-    object = appendResourceVersionInObject(namespace, name, object);\n     return new RawCustomResourceOperationsImpl(client, config, customResourceDefinition, namespace, name, gracePeriodInSeconds, cascading, deletionPropagation, listOptions, dryRun).edit(object);\n   }\n \n@@ -346,9 +360,6 @@ public RawCustomResourceOperationsImpl dryRun(boolean isDryRun) {\n    * @throws IOException in case of network/serialization failures or failures from Kubernetes API\n    */\n   public Map<String, Object> edit(String namespace, String name, String objectAsString) throws IOException {\n-    // Append resourceVersion in object metadata in order to\n-    // avoid : https://github.com/fabric8io/kubernetes-client/issues/1724\n-    objectAsString = appendResourceVersionInObject(namespace, name, objectAsString);\n     return new RawCustomResourceOperationsImpl(client, config, customResourceDefinition, namespace, name, gracePeriodInSeconds, cascading, deletionPropagation, listOptions, dryRun).edit(objectAsString);\n   }\n \n@@ -360,7 +371,8 @@ public RawCustomResourceOperationsImpl dryRun(boolean isDryRun) {\n    * @throws IOException in case of network/serializatino failures or failures from Kubernetes API\n    */\n   public Map<String, Object> edit(String objectAsString) throws IOException {\n-    return validateAndSubmitRequest(objectAsString, HttpCallMethod.PUT);\n+    Map<String, Object> object = convertJsonOrYamlStringToMap(objectAsString);\n+    return new RawCustomResourceOperationsImpl(client, config, customResourceDefinition, namespace, name, gracePeriodInSeconds, cascading, deletionPropagation, listOptions, dryRun).edit(object);\n   }\n \n   /**\n@@ -371,7 +383,8 @@ public RawCustomResourceOperationsImpl dryRun(boolean isDryRun) {\n    * @throws IOException in case of network/serializatino failures or failures from Kubernetes API\n    */\n   public Map<String, Object> edit(Map<String, Object> object) throws IOException {\n-    return validateAndSubmitRequest(objectMapper.writeValueAsString(object), HttpCallMethod.PUT);\n+    String objectAsString = getPatchDiff(namespace, name, object);\n+    return validateAndSubmitRequest(objectAsString, HttpCallMethod.PATCH);\n   }\n \n   /**\n@@ -883,7 +896,7 @@ public Watch watch(Map<String, String> labels, ListOptions options, Watcher<Stri\n         }\n         String nameFromObject = (String) metadata.get(\"name\");\n         ret = this.namespace != null ?\n-          edit(this.namespace, nameFromObject, objectAsMap) : edit(nameFromObject, objectAsMap);\n+          replace(this.namespace, nameFromObject, objectAsMap) : replace(nameFromObject, objectAsMap);\n       } catch (NullPointerException nullPointerException) {\n         throw KubernetesClientException.launderThrowable(new IllegalStateException(\"Invalid object provided -- metadata.name is required.\"));\n       }\n@@ -1052,23 +1065,22 @@ private Request getRequest(String url, String body, HttpCallMethod httpCallMetho\n         return requestBuilder.post(requestBody).url(url).build();\n       case PUT:\n         return requestBuilder.put(requestBody).url(url).build();\n+      case PATCH:\n+        return requestBuilder.patch(RequestBody.create(JSON_PATCH, body)).url(url).build();\n     }\n     return requestBuilder.build();\n   }\n \n-  private String appendResourceVersionInObject(String namespace, String customResourceName, String customResourceAsJsonString) throws IOException {\n-    Map<String, Object> newObject = convertJsonOrYamlStringToMap(customResourceAsJsonString);\n-\n-    return objectMapper.writeValueAsString(appendResourceVersionInObject(namespace, customResourceName, newObject));\n-  }\n-\n-  private Map<String, Object> appendResourceVersionInObject(String namespace, String customResourceName, Map<String, Object> customResource) throws IOException {\n+  private String getPatchDiff(String namespace, String customResourceName, Map<String, Object> customResource) throws IOException {\n     Map<String, Object> oldObject = get(namespace, customResourceName);\n-    String resourceVersion = ((Map<String, Object>)oldObject.get(METADATA)).get(RESOURCE_VERSION).toString();\n \n-    ((Map<String, Object>)customResource.get(METADATA)).put(RESOURCE_VERSION, resourceVersion);\n+    // Exclude changes to the status\n+    oldObject.put(\"status\", null);\n+    customResource.put(\"status\", null);\n+\n+    JsonNode newone = JsonDiff.asJson(PatchUtils.patchMapper().valueToTree(oldObject), PatchUtils.patchMapper().valueToTree(customResource));\n \n-    return customResource;\n+    return objectMapper.writeValueAsString(newone);\n   }\n \n   private DeleteOptions fetchDeleteOptions(boolean cascading, String propagationPolicy) {"
  },
  {
    "sha": "9477cec6b37d63f229eef2300f905729bc45b762",
    "filename": "kubernetes-client/src/test/java/io/fabric8/kubernetes/client/dsl/internal/RawCustomResourceOperationsImplTest.java",
    "status": "modified",
    "additions": 16,
    "deletions": 4,
    "changes": 20,
    "blob_url": "https://github.com/fabric8io/kubernetes-client/blob/e60c6348bb3730b2c909aee4f71cbf5db86cc3f7/kubernetes-client/src/test/java/io/fabric8/kubernetes/client/dsl/internal/RawCustomResourceOperationsImplTest.java",
    "raw_url": "https://github.com/fabric8io/kubernetes-client/raw/e60c6348bb3730b2c909aee4f71cbf5db86cc3f7/kubernetes-client/src/test/java/io/fabric8/kubernetes/client/dsl/internal/RawCustomResourceOperationsImplTest.java",
    "contents_url": "https://api.github.com/repos/fabric8io/kubernetes-client/contents/kubernetes-client/src/test/java/io/fabric8/kubernetes/client/dsl/internal/RawCustomResourceOperationsImplTest.java?ref=e60c6348bb3730b2c909aee4f71cbf5db86cc3f7",
    "patch": "@@ -15,10 +15,7 @@\n  */\n package io.fabric8.kubernetes.client.dsl.internal;\n \n-import static org.junit.jupiter.api.Assertions.assertEquals;\n-import static org.junit.jupiter.api.Assertions.assertFalse;\n-import static org.junit.jupiter.api.Assertions.assertTrue;\n-import static org.junit.jupiter.api.Assertions.fail;\n+import static org.junit.jupiter.api.Assertions.*;\n import static org.mockito.Mockito.*;\n \n import java.io.IOException;\n@@ -30,6 +27,8 @@\n \n import io.fabric8.kubernetes.api.model.DeleteOptionsBuilder;\n import io.fabric8.kubernetes.api.model.DeletionPropagation;\n+import io.fabric8.kubernetes.api.model.ObjectMetaBuilder;\n+import io.fabric8.kubernetes.client.utils.Serialization;\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n import org.mockito.ArgumentCaptor;\n@@ -636,6 +635,19 @@ void testDeleteByNamespaceOrNameWithDeleteOptionsWithClusterScopedCRD() throws I\n     assertRequestCaptured(captor, \"/apis/test.fabric8.io/v1alpha1/hellos/myresource\", \"DELETE\");\n   }\n \n+  @Test\n+  void testEditCR() throws IOException {\n+    // Given\n+    RawCustomResourceOperationsImpl rawCustomResourceOperations = new RawCustomResourceOperationsImpl(mockClient, config, clusterCustomResourceDefinitionContext);\n+    String jsonString = \"{ \\\"metadata\\\": \" + Serialization.jsonMapper().writeValueAsString(new ObjectMetaBuilder().withName(\"myresource\").withNamespace(\"mynamespace\").build()) + \"}\";\n+\n+    // When\n+    Map<String, Object> res = rawCustomResourceOperations.edit(jsonString);\n+\n+    // Then\n+    assertNotEquals(null, res);\n+  }\n+\n   private void assertRequestCaptured(ArgumentCaptor<Request> captor, String url, String method) {\n     verify(mockClient).newCall(captor.capture());\n     assertEquals(url, captor.getValue().url().encodedPath());"
  },
  {
    "sha": "e39870a2058255ad5e45f8e6a877c1b396b02dd1",
    "filename": "kubernetes-tests/src/test/java/io/fabric8/kubernetes/client/mock/CustomResourceTest.java",
    "status": "modified",
    "additions": 4,
    "deletions": 1,
    "changes": 5,
    "blob_url": "https://github.com/fabric8io/kubernetes-client/blob/e60c6348bb3730b2c909aee4f71cbf5db86cc3f7/kubernetes-tests/src/test/java/io/fabric8/kubernetes/client/mock/CustomResourceTest.java",
    "raw_url": "https://github.com/fabric8io/kubernetes-client/raw/e60c6348bb3730b2c909aee4f71cbf5db86cc3f7/kubernetes-tests/src/test/java/io/fabric8/kubernetes/client/mock/CustomResourceTest.java",
    "contents_url": "https://api.github.com/repos/fabric8io/kubernetes-client/contents/kubernetes-tests/src/test/java/io/fabric8/kubernetes/client/mock/CustomResourceTest.java?ref=e60c6348bb3730b2c909aee4f71cbf5db86cc3f7",
    "patch": "@@ -188,9 +188,12 @@ void testGet() {\n \n   @Test\n   void testEdit() throws IOException {\n+    String jsonObject = \"{\\\"apiVersion\\\": \\\"test.fabric8.io/v1alpha1\\\",\\\"kind\\\": \\\"Hello\\\",\" +\n+      \"\\\"metadata\\\": {\\\"resourceVersion\\\": \\\"1\\\", \\\"name\\\": \\\"example-hello\\\"},\\\"spec\\\": {\\\"size\\\": 3}}\";\n     String jsonObjectNew = \"{\\\"apiVersion\\\": \\\"test.fabric8.io/v1alpha1\\\",\\\"kind\\\": \\\"Hello\\\",\" +\n       \"\\\"metadata\\\": {\\\"resourceVersion\\\": \\\"1\\\", \\\"name\\\": \\\"example-hello\\\"},\\\"spec\\\": {\\\"size\\\": 4}}\";\n-    server.expect().put().withPath(\"/apis/test.fabric8.io/v1alpha1/namespaces/ns1/hellos/example-hello\").andReturn(HttpURLConnection.HTTP_OK, jsonObjectNew).once();\n+    server.expect().patch().withPath(\"/apis/test.fabric8.io/v1alpha1/namespaces/ns1/hellos/example-hello\").andReturn(HttpURLConnection.HTTP_OK, jsonObjectNew).once();\n+    server.expect().get().withPath(\"/apis/test.fabric8.io/v1alpha1/namespaces/ns1/hellos/example-hello\").andReturn(HttpURLConnection.HTTP_OK, jsonObject).once();\n     server.expect().get().withPath(\"/apis/test.fabric8.io/v1alpha1/namespaces/ns1/hellos/example-hello\").andReturn(HttpURLConnection.HTTP_OK, jsonObjectNew).once();\n \n     KubernetesClient client = server.getClient();"
  }
]
