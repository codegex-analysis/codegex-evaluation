[
  {
    "sha": "6aabebee22ad310394bc961ca6b486e4d4b43bfd",
    "filename": "client/public/BulkUploadZipTemplate.zip",
    "status": "modified",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/team-monumental/monuments-and-memorials/blob/39d05e50ec2fee3b48620b168bfbd3b442096805/client/public/BulkUploadZipTemplate.zip",
    "raw_url": "https://github.com/team-monumental/monuments-and-memorials/raw/39d05e50ec2fee3b48620b168bfbd3b442096805/client/public/BulkUploadZipTemplate.zip",
    "contents_url": "https://api.github.com/repos/team-monumental/monuments-and-memorials/contents/client/public/BulkUploadZipTemplate.zip?ref=39d05e50ec2fee3b48620b168bfbd3b442096805"
  },
  {
    "sha": "95dfc07c992f831912e28db731a381e0c2da3468",
    "filename": "client/src/components/BulkCreateForm/BulkCreateForm.js",
    "status": "modified",
    "additions": 4,
    "deletions": 2,
    "changes": 6,
    "blob_url": "https://github.com/team-monumental/monuments-and-memorials/blob/39d05e50ec2fee3b48620b168bfbd3b442096805/client/src/components/BulkCreateForm/BulkCreateForm.js",
    "raw_url": "https://github.com/team-monumental/monuments-and-memorials/raw/39d05e50ec2fee3b48620b168bfbd3b442096805/client/src/components/BulkCreateForm/BulkCreateForm.js",
    "contents_url": "https://api.github.com/repos/team-monumental/monuments-and-memorials/contents/client/src/components/BulkCreateForm/BulkCreateForm.js?ref=39d05e50ec2fee3b48620b168bfbd3b442096805",
    "patch": "@@ -36,8 +36,10 @@ export default class BulkCreateForm extends React.Component {\n                 {name: 'deactivatedDate', label: 'Un-installed Date'},\n                 {name: 'deactivatedComment', label: 'Un-installed Reason'}, {name: 'latitude'}, {name: 'longitude'},\n                 {name: 'city'}, {name: 'state'}, {name: 'address'}, {name: 'description'}, {name: 'inscription'},\n-                {name: 'tags'}, {name: 'materials'}, {name: 'images', label: 'Image File Name'},\n-                {name: 'references'}, {name: 'contributions', label: 'Submitted By/Contributors'}, {name: 'is_temporary'}\n+                {name: 'tags'}, {name: 'materials'}, {name: 'images', label: 'Image File Names'},\n+                {name: 'imageReferenceUrls', label: 'Image Reference Urls'}, {name: 'imageCaptions', label: 'Image Captions'},\n+                {name: 'references'}, {name: 'contributions', label: 'Submitted By/Contributors'},\n+                {name: 'is_temporary', label: 'Is Temporary'}\n             ].map(field => {\n                 return {\n                     label: capitalize(field.name.replace(/_/g, ' ')),"
  },
  {
    "sha": "c2a9bccf534e3448d2c2591cae6bb263d5299214",
    "filename": "client/src/components/CreateOrUpdateForm/CreateOrUpdateForm.js",
    "status": "modified",
    "additions": 346,
    "deletions": 38,
    "changes": 384,
    "blob_url": "https://github.com/team-monumental/monuments-and-memorials/blob/39d05e50ec2fee3b48620b168bfbd3b442096805/client/src/components/CreateOrUpdateForm/CreateOrUpdateForm.js",
    "raw_url": "https://github.com/team-monumental/monuments-and-memorials/raw/39d05e50ec2fee3b48620b168bfbd3b442096805/client/src/components/CreateOrUpdateForm/CreateOrUpdateForm.js",
    "contents_url": "https://api.github.com/repos/team-monumental/monuments-and-memorials/contents/client/src/components/CreateOrUpdateForm/CreateOrUpdateForm.js?ref=39d05e50ec2fee3b48620b168bfbd3b442096805",
    "patch": "@@ -101,9 +101,17 @@ export default class CreateOrUpdateForm extends React.Component {\n             },\n             references: [reference],\n             images: [],\n+            imageReferenceUrls: [],\n+            imageCaptions: [],\n             photoSphereImages: [],\n+            photoSphereImageReferenceUrls: [],\n+            photoSphereImageCaptions: [],\n             imagesForUpdate:[],\n+            imageReferenceUrlsForUpdate: {},\n+            imageCaptionsForUpdate: {},\n             photoSphereImagesForUpdate: [],\n+            photoSphereImageReferenceUrlsForUpdate: {},\n+            photoSphereImageCaptionsForUpdate: {},\n             imageUploaderKey: 0,\n             materials: {\n                 materialObjects: [],\n@@ -138,8 +146,8 @@ export default class CreateOrUpdateForm extends React.Component {\n     clearForm(clearValues) {\n         const { title, address, latitude, longitude, year, month, deactivatedYear, deactivatedMonth, deactivatedComment,\n             artist, description, inscription, references, isTemporary } = this.state;\n-        let { datePickerCurrentDate, deactivatedDatePickerCurrentDate, images, imageUploaderKey, materials,\n-            newMaterials, tags, newTags } = this.state;\n+        let { datePickerCurrentDate, deactivatedDatePickerCurrentDate, images, imageCaptions, imageReferenceUrls,\n+            imageUploaderKey, materials, newMaterials, tags, newTags } = this.state;\n \n         title.isValid = true;\n         title.message = '';\n@@ -208,6 +216,8 @@ export default class CreateOrUpdateForm extends React.Component {\n             datePickerCurrentDate = null;\n             deactivatedDatePickerCurrentDate = null;\n             images = [];\n+            imageReferenceUrls = [];\n+            imageCaptions = [];\n             imageUploaderKey++;\n             materials.materialObjects = [];\n             newMaterials = [];\n@@ -222,8 +232,8 @@ export default class CreateOrUpdateForm extends React.Component {\n \n         this.setState({title, address, latitude, longitude, year, month, deactivatedYear, deactivatedMonth,\n             deactivatedComment, artist, description, inscription, datePickerCurrentDate,\n-            deactivatedDatePickerCurrentDate, references, images, imageUploaderKey, materials, newMaterials, tags,\n-            newTags, isTemporary});\n+            deactivatedDatePickerCurrentDate, references, images, imageReferenceUrls, imageCaptions, imageUploaderKey,\n+            materials, newMaterials, tags, newTags, isTemporary});\n     }\n \n     /**\n@@ -234,8 +244,10 @@ export default class CreateOrUpdateForm extends React.Component {\n         const { title, address, latitude, longitude, year, month, deactivatedYear, deactivatedMonth, deactivatedComment,\n             artist, description, inscription, materials, locationType } = this.state;\n         let { datePickerCurrentDate, deactivatedDatePickerCurrentDate, dateSelectValue, deactivatedDateSelectValue,\n-            references, tags, imagesForUpdate, photoSphereImagesForUpdate, images, photoSphereImages, imageUploaderKey,\n-            city, state, isTemporary } = this.state;\n+            references, tags, imagesForUpdate, imageReferenceUrlsForUpdate, imageCaptionsForUpdate,\n+            photoSphereImagesForUpdate, photoSphereImageReferenceUrlsForUpdate, photoSphereImageCaptionsForUpdate,\n+            images, imageReferenceUrls, imageCaptions, photoSphereImages, photoSphereImageReferenceUrls,\n+            photoSphereImageCaptions, imageUploaderKey, city, state, isTemporary } = this.state;\n \n         let monumentYear, monumentMonth, monumentExactDate;\n \n@@ -330,28 +342,41 @@ export default class CreateOrUpdateForm extends React.Component {\n \n         if (monument.images && monument.images.length) {\n             imagesForUpdate = [];\n+            imageReferenceUrlsForUpdate = {};\n+            imageCaptionsForUpdate = {};\n             photoSphereImagesForUpdate = [];\n+            photoSphereImageReferenceUrlsForUpdate = {};\n+            photoSphereImageCaptionsForUpdate = {};\n             for (const originalImage of monument.images) {\n                 const image = Object.create(originalImage);\n                 image.hasBeenDeleted = false;\n                 if (image.isPhotoSphere) {\n                     photoSphereImagesForUpdate.push(image);\n-                }\n-                else {\n+                    photoSphereImageReferenceUrlsForUpdate[image.id] = { value: image.referenceUrl, isValid: true };\n+                    photoSphereImageCaptionsForUpdate[image.id] = { value: image.caption, isValid: true };\n+                } else {\n                     imagesForUpdate.push(image);\n+                    imageReferenceUrlsForUpdate[image.id] = { value: image.referenceUrl, isValid: true };\n+                    imageCaptionsForUpdate[image.id] = { value: image.caption, isValid: true };\n                 }\n             }\n         }\n \n         images = [];\n+        imageReferenceUrls = [];\n+        imageCaptions = [];\n         photoSphereImages = [];\n+        photoSphereImageReferenceUrls = [];\n+        photoSphereImageCaptions = [];\n         imageUploaderKey++;\n \n         this.setState({ title, address, latitude, longitude, artist, description, inscription, year, month,\n             datePickerCurrentDate, dateSelectValue, deactivatedYear, deactivatedMonth, deactivatedDatePickerCurrentDate,\n             deactivatedDateSelectValue, deactivatedComment, references, materials, tags, imagesForUpdate,\n-            photoSphereImagesForUpdate, images, photoSphereImages, imageUploaderKey, locationType, city, state,\n-            isTemporary });\n+            imageReferenceUrlsForUpdate, imageCaptionsForUpdate, photoSphereImagesForUpdate,\n+            photoSphereImageReferenceUrlsForUpdate, photoSphereImageCaptionsForUpdate, images, imageReferenceUrls,\n+            imageCaptions, photoSphereImages, photoSphereImageReferenceUrls, photoSphereImageCaptions, imageUploaderKey,\n+            locationType, city, state, isTemporary });\n     }\n \n     convertCoordinate(coordinate){\n@@ -370,6 +395,17 @@ export default class CreateOrUpdateForm extends React.Component {\n         return decimal.toFixed(6);\n     }\n \n+    validateReferenceUrl(referenceUrl) {\n+        if (referenceUrl.value && !validator.isEmpty(referenceUrl.value) && !this.validateUrl(referenceUrl.value)) {\n+            referenceUrl.isValid = false\n+            referenceUrl.message = 'Must be a URL'\n+            return false\n+        }\n+        referenceUrl.isValid = true\n+        referenceUrl.message = null\n+        return true\n+    }\n+\n     /**\n      * Validates the Form\n      * If any of the inputs are invalid, the entire Form is considered invalid\n@@ -378,11 +414,39 @@ export default class CreateOrUpdateForm extends React.Component {\n     validateForm() {\n         const { title, address, latitude, longitude, year, month, deactivatedYear, deactivatedMonth, deactivatedComment,\n             references, materials, newMaterials, locationType, datePickerCurrentDate, deactivatedDatePickerCurrentDate,\n-            datePickerError, dateSelectValue, deactivatedDateSelectValue } = this.state;\n+            datePickerError, dateSelectValue, deactivatedDateSelectValue, imageReferenceUrls, imageReferenceUrlsForUpdate,\n+            photoSphereImageReferenceUrls, photoSphereImageReferenceUrlsForUpdate } = this.state;\n         let { deactivatedDatePickerError } = this.state\n         const currentDate = new Date();\n         let formIsValid = true;\n \n+        imageReferenceUrls.forEach(referenceUrl => {\n+            if (!this.validateReferenceUrl(referenceUrl)) {\n+                formIsValid = false\n+            }\n+        })\n+        photoSphereImageReferenceUrls.forEach(referenceUrl => {\n+            if (!this.validateReferenceUrl(referenceUrl)) {\n+                formIsValid = false\n+            }\n+        })\n+        for(const prop in imageReferenceUrlsForUpdate) {\n+            if(imageReferenceUrlsForUpdate.hasOwnProperty(prop) && imageReferenceUrlsForUpdate[prop].value) {\n+                const referenceUrl = imageReferenceUrlsForUpdate[prop]\n+                if (!this.validateReferenceUrl(referenceUrl)) {\n+                    formIsValid = false\n+                }\n+            }\n+        }\n+        for(const prop in photoSphereImageReferenceUrlsForUpdate) {\n+            if(photoSphereImageReferenceUrlsForUpdate.hasOwnProperty(prop) && photoSphereImageReferenceUrlsForUpdate[prop].value) {\n+                const referenceUrl = photoSphereImageReferenceUrlsForUpdate[prop]\n+                if (!this.validateReferenceUrl(referenceUrl)) {\n+                    formIsValid = false\n+                }\n+            }\n+        }\n+\n         /* Title Validation */\n         /* Title is a required Form field */\n         if (validator.isEmpty(title.value)) {\n@@ -590,8 +654,9 @@ export default class CreateOrUpdateForm extends React.Component {\n     buildCreateForm() {\n         const { title, address, latitude, longitude, dateSelectValue, deactivatedDateSelectValue, year, month,\n             deactivatedYear, deactivatedMonth, artist, description, inscription, datePickerCurrentDate,\n-            deactivatedDatePickerCurrentDate, deactivatedComment, references, images, photoSphereImages, materials,\n-            newMaterials, tags, newTags, isTemporary, city, state } = this.state;\n+            deactivatedDatePickerCurrentDate, deactivatedComment, references, images, imageReferenceUrls, imageCaptions,\n+            photoSphereImages, photoSphereImageReferenceUrls, photoSphereImageCaptions, materials, newMaterials, tags,\n+            newTags, isTemporary, city, state } = this.state;\n \n         let createForm = {\n             title: title.value,\n@@ -602,8 +667,12 @@ export default class CreateOrUpdateForm extends React.Component {\n             description: description.value === '' ? null : description.value,\n             inscription: inscription.value === '' ? null : inscription.value,\n             references: references.map(reference => reference.value),\n-            images: images,\n-            photoSphereImages: photoSphereImages,\n+            images,\n+            imageReferenceUrlsJson: JSON.stringify(imageReferenceUrls.map(referenceUrl => referenceUrl.value)),\n+            imageCaptionsJson: JSON.stringify(imageCaptions.map(caption => caption.value)),\n+            photoSphereImages,\n+            photoSphereImageReferenceUrlsJson: JSON.stringify(photoSphereImageReferenceUrls.map(referenceUrl => referenceUrl.value)),\n+            photoSphereImageCaptionsJson: JSON.stringify(photoSphereImageCaptions.map(caption => caption.value)),\n             materials: materials.materialObjects.map(material => material.name),\n             newMaterials: newMaterials.map(newMaterial => newMaterial.name),\n             tags: tags.map(tag => tag.name),\n@@ -658,14 +727,29 @@ export default class CreateOrUpdateForm extends React.Component {\n         return createForm;\n     }\n \n+    remapObjectToValuesOnly(object) {\n+        const finalObject = {}\n+        for(const prop in object) {\n+            if(object.hasOwnProperty(prop)) {\n+                if (object[prop].value) {\n+                    finalObject[prop] = object[prop].value;\n+                }\n+            }\n+        }\n+        return finalObject\n+    }\n+\n     /**\n      * Build the form object for creating an UpdateMonumentSuggestion\n      */\n     buildUpdateForm() {\n         const { title, address, artist, description, inscription, latitude, longitude, dateSelectValue,\n             deactivatedDateSelectValue, year, month, deactivatedYear, deactivatedMonth, datePickerCurrentDate,\n-            deactivatedDatePickerCurrentDate, deactivatedComment, references, images, imagesForUpdate,\n-            photoSphereImages, photoSphereImagesForUpdate, materials, tags, isTemporary, city, state } = this.state;\n+            deactivatedDatePickerCurrentDate, deactivatedComment, references, images, imageReferenceUrls, imageCaptions,\n+            imagesForUpdate, imageReferenceUrlsForUpdate, imageCaptionsForUpdate, photoSphereImages,\n+            photoSphereImageReferenceUrls, photoSphereImageCaptions, photoSphereImagesForUpdate,\n+            photoSphereImageReferenceUrlsForUpdate, photoSphereImageCaptionsForUpdate, materials, tags, isTemporary,\n+            city, state } = this.state;\n         let { newMaterials, newTags } = this.state;\n \n         let updateForm = {\n@@ -676,15 +760,23 @@ export default class CreateOrUpdateForm extends React.Component {\n             newInscription: inscription.value === '' ? undefined : inscription.value,\n             newLatitude: (latitude.value === '' && longitude.value === '') ? undefined : latitude.value,\n             newLongitude: (latitude.value === '' && longitude.value === '') ? undefined : longitude.value,\n-            images: images,\n+            images,\n+            newImageReferenceUrlsJson: JSON.stringify(imageReferenceUrls.map(referenceUrl => referenceUrl.value)),\n+            newImageCaptionsJson: JSON.stringify(imageCaptions.map(caption => caption.value)),\n             photoSphereImages: photoSphereImages.map(photoSphereImage => photoSphereImage.url),\n+            newPhotoSphereImageReferenceUrlsJson: JSON.stringify(photoSphereImageReferenceUrls.map(referenceUrl => referenceUrl.value)),\n+            newPhotoSphereImageCaptionsJson: JSON.stringify(photoSphereImageCaptions.map(caption => caption.value)),\n             newIsTemporary: isTemporary.value,\n             dateSelectValue: dateSelectValue,\n             deactivatedDateSelectValue: deactivatedDateSelectValue,\n             newDateFormat: dateSelectValue,\n             newDeactivatedDateFormat: deactivatedDateSelectValue,\n             newDeactivatedComment: deactivatedComment.value === '' ? undefined : deactivatedComment.value,\n-            imagesForUpdate: imagesForUpdate,\n+            imagesForUpdate,\n+            updatedImageReferenceUrlsJson: JSON.stringify(this.remapObjectToValuesOnly(imageReferenceUrlsForUpdate)),\n+            updatedImageCaptionsJson: JSON.stringify(this.remapObjectToValuesOnly(imageCaptionsForUpdate)),\n+            updatedPhotoSphereImageReferenceUrlsJson: JSON.stringify(this.remapObjectToValuesOnly(photoSphereImageReferenceUrlsForUpdate)),\n+            updatedPhotoSphereImageCaptionsJson: JSON.stringify(this.remapObjectToValuesOnly(photoSphereImageCaptionsForUpdate)),\n             newCity: city,\n             newState: state\n         };\n@@ -782,6 +874,55 @@ export default class CreateOrUpdateForm extends React.Component {\n         return updateForm;\n     }\n \n+    validateUrl(url) {\n+        return /((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%\\/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[\\w]*))?)/.test(url)\n+    }\n+\n+    async handleImageInfoChange(event) {\n+        const { target: { name } } = event;\n+        const splitName = name.split('-')\n+        const stateName = splitName[0]\n+        const id = splitName[1]\n+        let currentState = this.state[stateName];\n+        if (id) {\n+            if (!currentState) {\n+                currentState = {}\n+            }\n+            if (!currentState[id]) {\n+                currentState[id] = {}\n+            }\n+            currentState[id].value = event.target.value;\n+            currentState[id].isValid = true;\n+            await this.setState({ [stateName]: currentState })\n+        }\n+    }\n+\n+    async handleArrayImageInfoChange(event) {\n+        const { target: { name } } = event;\n+        const splitName = name.split('-')\n+        const stateName = splitName[0]\n+        const id = splitName[1]\n+        let currentState = this.state[stateName];\n+        if (id) {\n+            if (!currentState) {\n+                currentState = []\n+            }\n+            let diff = id - currentState.length\n+            if (id > -1) {\n+                while (diff > -1) {\n+                    currentState.push(null)\n+                    diff--\n+                }\n+            }\n+            if (!currentState[id]) {\n+                currentState[id] = {}\n+            }\n+            currentState[id].value = event.target.value;\n+            currentState[id].isValid = true;\n+            await this.setState({ [stateName]: currentState })\n+        }\n+    }\n+\n     async handleInputChange(event) {\n         const { target: { name } } = event;\n         const currentState = this.state[name];\n@@ -935,11 +1076,35 @@ export default class CreateOrUpdateForm extends React.Component {\n         const referenceFromState = references.filter(r => r.id === reference.id)[0];\n         referenceFromState['deleted'] = false;\n \n-        this.setState({references});\n+        this.setState({ references });\n     }\n \n     async handleImageUploaderChange(files) {\n-        await this.setState({images: files});\n+        const { images, imageReferenceUrls, imageCaptions } = this.state;\n+\n+        const newImageReferenceUrls = imageReferenceUrls.slice()\n+        const newImageCaptions = imageCaptions.slice()\n+\n+        // handle image deletion\n+        if (images.length > files.length) {\n+            let i = 0;\n+            images.forEach(image => {\n+                if (!files.includes(image)) {\n+                    newImageReferenceUrls.splice(i, 1);\n+                    newImageCaptions.splice(i, 1);\n+                }\n+                i++;\n+            })\n+        }\n+\n+        while (newImageCaptions.length < files.length) {\n+            newImageCaptions.push({ value: null, isValid: true })\n+        }\n+        while (newImageReferenceUrls.length < files.length) {\n+            newImageReferenceUrls.push({ value: null, isValid: true })\n+        }\n+\n+        await this.setState({ images: files, imageReferenceUrls: newImageReferenceUrls, imageCaptions: newImageCaptions });\n     }\n \n     handleImageIsPrimaryCheckboxClick(event, image) {\n@@ -1041,24 +1206,32 @@ export default class CreateOrUpdateForm extends React.Component {\n     }\n \n     handleAddPhotoSphereImage(image) {\n-        const { photoSphereImages } = this.state;\n+        const { photoSphereImages, photoSphereImageReferenceUrls, photoSphereImageCaptions } = this.state;\n         photoSphereImages.push(image);\n-        this.setState({photoSphereImages});\n+        photoSphereImageReferenceUrls.push({ value: null, isValid: true })\n+        photoSphereImageCaptions.push({ value: null, isValid: true })\n+        this.setState({ photoSphereImages, photoSphereImageReferenceUrls, photoSphereImageCaptions });\n     }\n \n     handleDeletePhotoSphereImage({image, index}) {\n-        const { photoSphereImages, photoSphereImagesForUpdate } = this.state;\n+        const { photoSphereImages, photoSphereImagesForUpdate, photoSphereImageReferenceUrls, photoSphereImageCaptions } = this.state;\n+\n+        const newPhotoSphereImageReferenceUrls = photoSphereImageReferenceUrls.slice()\n+        const newPhotoSphereImageCaptions = photoSphereImageCaptions.slice()\n \n         if (image) {\n             photoSphereImagesForUpdate.find(i => {\n                 return i.id === image.id;\n-            }).hasBeenDeleted = true;\n+            }).hasBeenDeleted = true\n         }\n         else {\n             photoSphereImages.splice(index, 1);\n+            newPhotoSphereImageReferenceUrls.splice(index, 1);\n+            newPhotoSphereImageCaptions.splice(index, 1);\n         }\n \n-        this.setState({photoSphereImagesForUpdate, photoSphereImages});\n+        this.setState({ photoSphereImagesForUpdate, photoSphereImages,\n+            photoSphereImageReferenceUrls: newPhotoSphereImageReferenceUrls, photoSphereImageCaptions: newPhotoSphereImageCaptions });\n     }\n \n     handleRestorePhotoSphereImage(image) {\n@@ -1124,7 +1297,7 @@ export default class CreateOrUpdateForm extends React.Component {\n             return (\n                 <div className=\"is-primary-container\">\n                     <div className=\"image-is-primary-message\">\n-                        Is Primary Image:\n+                        Primary Image:\n                     </div>\n                     {isPrimaryIcon}\n                 </div>\n@@ -1207,7 +1380,9 @@ export default class CreateOrUpdateForm extends React.Component {\n             deactivatedDatePickerCurrentDate, title, address, latitude, longitude, year, deactivatedYear, month,\n             deactivatedMonth, deactivatedComment, artist, description, inscription, references, imageUploaderKey,\n             materials, imagesForUpdate, isTemporary, locationType, photoSphereImagesForUpdate, photoSphereImages,\n-            city, state, datePickerError, deactivatedDatePickerError } = this.state;\n+            city, state, datePickerError, deactivatedDatePickerError, images, imageReferenceUrls, imageCaptions,\n+            photoSphereImageReferenceUrls, photoSphereImageCaptions, imageReferenceUrlsForUpdate, imageCaptionsForUpdate,\n+            photoSphereImageReferenceUrlsForUpdate, photoSphereImageCaptionsForUpdate } = this.state;\n         const { monument, action } = this.props;\n \n         const advancedInformationLink = (\n@@ -1403,22 +1578,51 @@ export default class CreateOrUpdateForm extends React.Component {\n             let imageDisplays = [];\n             for (const image of imagesForUpdate) {\n                 imageDisplays.push(\n-                    <div\n-                        className={image.hasBeenDeleted ? 'image-for-update-container deleted' : 'image-for-update-container'}\n-                        key={image.id}\n-                    >\n-                        {this.renderImageDeleteButton(image)}\n+                    <div style={{width: '100%'}} key={image.id}>\n                         <div\n-                            className={image.hasBeenDeleted ? 'image-for-update deleted' : 'image-for-update'}\n-                            style={{backgroundImage: `url(\"${image.url}\")`}}\n-                        />\n-                        {this.renderImageIsPrimaryCheckbox(image)}\n+                            className={image.hasBeenDeleted ? 'image-for-update-container deleted' : 'image-for-update-container'}\n+                            key={image.id}\n+                        >\n+                            {this.renderImageDeleteButton(image)}\n+                            <div\n+                                className={image.hasBeenDeleted ? 'image-for-update deleted' : 'image-for-update'}\n+                                style={{backgroundImage: `url(\"${image.url}\")`}}\n+                            />\n+                            <div className=\"image-fields-container\">\n+                                <Form.Label className=\"image-field-label\">Reference URL:</Form.Label>\n+                                <Form.Control\n+                                    type=\"text\"\n+                                    name={`imageReferenceUrlsForUpdate-${image.id}`}\n+                                    placeholder=\"\"\n+                                    value={imageReferenceUrlsForUpdate[image.id].value}\n+                                    onChange={(event) => this.handleImageInfoChange(event)}\n+                                    isInvalid={!imageReferenceUrlsForUpdate[image.id].isValid}\n+                                    className=\"text-control-medium\"\n+                                    maxLength=\"2048\"\n+                                />\n+                                <Form.Control.Feedback type=\"invalid\">{imageReferenceUrlsForUpdate[image.id]?.message}</Form.Control.Feedback>\n+                                <Form.Label className=\"image-field-label\">Caption:</Form.Label>\n+                                <Form.Control\n+                                    type=\"text\"\n+                                    name={`imageCaptionsForUpdate-${image.id}`}\n+                                    placeholder=\"\"\n+                                    value={imageCaptionsForUpdate[image.id].value}\n+                                    onChange={(event) => this.handleImageInfoChange(event)}\n+                                    isInvalid={!imageCaptionsForUpdate[image.id].isValid}\n+                                    className=\"text-control-medium\"\n+                                    maxLength=\"2048\"\n+                                />\n+                                <Form.Control.Feedback type=\"invalid\">{imageCaptionsForUpdate[image.id]?.message}</Form.Control.Feedback>\n+                            </div>\n+                            {this.renderImageIsPrimaryCheckbox(image)}\n+                        </div>\n                     </div>\n                 );\n+\n             }\n \n             imagesForUpdateDisplay = (\n-                <div>\n+                <div style={{marginBottom: '32px'}}>\n                     <Form.Label>Current Images:</Form.Label>\n                     <div className=\"images-for-update-container\">\n                         {imageDisplays}\n@@ -1427,6 +1631,108 @@ export default class CreateOrUpdateForm extends React.Component {\n             );\n         }\n \n+        let imageFields = [];\n+        if (images.length) {\n+            images.forEach((image, i) => {\n+                imageFields.push(\n+                    <div className=\"image-fields-container-spaced\" key={i}>\n+                        <Form.Label className=\"image-field-label\">Image {i + 1} Reference URL:</Form.Label>\n+                        <Form.Control\n+                            type=\"text\"\n+                            name={`imageReferenceUrls-${i}`}\n+                            placeholder=\"\"\n+                            value={imageReferenceUrls[i]?.value}\n+                            onChange={(event) => this.handleArrayImageInfoChange(event)}\n+                            isInvalid={imageReferenceUrls[i]?.value && !imageReferenceUrls[i]?.isValid}\n+                            className=\"text-control-medium\"\n+                            maxLength=\"2048\"\n+                        />\n+                        <Form.Control.Feedback type=\"invalid\">{imageReferenceUrls[i]?.message}</Form.Control.Feedback>\n+                        <Form.Label className=\"image-field-label\">Image {i + 1} Caption:</Form.Label>\n+                        <Form.Control\n+                            type=\"text\"\n+                            name={`imageCaptions-${i}`}\n+                            placeholder=\"\"\n+                            value={imageCaptions[i]?.value}\n+                            onChange={(event) => this.handleArrayImageInfoChange(event)}\n+                            isInvalid={imageCaptions[i]?.value && !imageCaptions[i]?.isValid}\n+                            className=\"text-control-medium\"\n+                            maxLength=\"2048\"\n+                        />\n+                        <Form.Control.Feedback type=\"invalid\">{imageCaptions[i]?.message}</Form.Control.Feedback>\n+                    </div>\n+                )\n+            })\n+        }\n+        const imageFieldsDisplay = <div style={{marginBottom: '16px'}}>{imageFields}</div>\n+\n+        let photoSphereImageFields = [];\n+        if (photoSphereImagesForUpdate.length) {\n+            photoSphereImagesForUpdate.forEach((image, i) => {\n+                photoSphereImageFields.push(\n+                    <div className=\"image-fields-container-spaced\" key={i}>\n+                        <Form.Label className=\"image-field-label\">360° Image {i + 1} Reference URL:</Form.Label>\n+                        <Form.Control\n+                            type=\"text\"\n+                            name={`photoSphereImageReferenceUrlsForUpdate-${image.id}`}\n+                            placeholder=\"\"\n+                            value={photoSphereImageReferenceUrlsForUpdate[image.id]?.value}\n+                            onChange={(event) => this.handleImageInfoChange(event)}\n+                            isInvalid={photoSphereImageReferenceUrlsForUpdate[image.id]?.value && !photoSphereImageReferenceUrlsForUpdate[image.id]?.isValid}\n+                            className=\"text-control-medium\"\n+                            maxLength=\"2048\"\n+                        />\n+                        <Form.Control.Feedback type=\"invalid\">{photoSphereImageReferenceUrlsForUpdate[image.id]?.message}</Form.Control.Feedback>\n+                        <Form.Label className=\"image-field-label\">360° Image {i + 1} Caption:</Form.Label>\n+                        <Form.Control\n+                            type=\"text\"\n+                            name={`photoSphereImageCaptionsForUpdate-${image.id}`}\n+                            placeholder=\"\"\n+                            value={photoSphereImageCaptionsForUpdate[image.id]?.value}\n+                            onChange={(event) => this.handleImageInfoChange(event)}\n+                            isInvalid={photoSphereImageCaptionsForUpdate[image.id]?.value && !photoSphereImageCaptionsForUpdate[image.id]?.isValid}\n+                            className=\"text-control-medium\"\n+                            maxLength=\"2048\"\n+                        />\n+                        <Form.Control.Feedback type=\"invalid\">{photoSphereImageCaptionsForUpdate[image.id]?.message}</Form.Control.Feedback>\n+                    </div>\n+                )\n+            })\n+        }\n+        if (photoSphereImages.length) {\n+            photoSphereImages.forEach((image, i) => {\n+                photoSphereImageFields.push(\n+                    <div className=\"image-fields-container-spaced\" key={i}>\n+                        <Form.Label className=\"image-field-label\">360° Image {i + photoSphereImagesForUpdate.length + 1} Reference URL:</Form.Label>\n+                        <Form.Control\n+                            type=\"text\"\n+                            name={`photoSphereImageReferenceUrls-${i}`}\n+                            placeholder=\"\"\n+                            value={photoSphereImageReferenceUrls[i]?.value}\n+                            onChange={(event) => this.handleArrayImageInfoChange(event)}\n+                            isInvalid={photoSphereImageReferenceUrls[i]?.value && !photoSphereImageReferenceUrls[i]?.isValid}\n+                            className=\"text-control-medium\"\n+                            maxLength=\"2048\"\n+                        />\n+                        <Form.Control.Feedback type=\"invalid\">{photoSphereImageReferenceUrls[i]?.message}</Form.Control.Feedback>\n+                        <Form.Label className=\"image-field-label\">360° Image {i + 1} Caption:</Form.Label>\n+                        <Form.Control\n+                            type=\"text\"\n+                            name={`photoSphereImageCaptions-${i}`}\n+                            placeholder=\"\"\n+                            value={photoSphereImageCaptions[i]?.value}\n+                            onChange={(event) => this.handleArrayImageInfoChange(event)}\n+                            isInvalid={photoSphereImageCaptions[i]?.value && !photoSphereImageCaptions[i]?.isValid}\n+                            className=\"text-control-medium\"\n+                            maxLength=\"2048\"\n+                        />\n+                        <Form.Control.Feedback type=\"invalid\">{photoSphereImageCaptions[i]?.message}</Form.Control.Feedback>\n+                    </div>\n+                )\n+            })\n+        }\n+        const photoSphereImageFieldsDisplay = <div style={{marginBottom: '16px'}}>{photoSphereImageFields}</div>\n+\n         return (\n             <div className=\"create-form\">\n                 {monument\n@@ -1588,6 +1894,7 @@ export default class CreateOrUpdateForm extends React.Component {\n                             key={imageUploaderKey}\n                             errorClass=\"invalid-feedback\"\n                         />\n+                        {imageFieldsDisplay}\n                         {imagesForUpdateDisplay}\n                     </Form.Group>\n \n@@ -1598,6 +1905,7 @@ export default class CreateOrUpdateForm extends React.Component {\n                                                onAddImage={this.handleAddPhotoSphereImage.bind(this)}\n                                                onDeleteImage={this.handleDeletePhotoSphereImage.bind(this)}\n                                                onRestoreImage={this.handleRestorePhotoSphereImage.bind(this)}/>\n+                            {photoSphereImageFieldsDisplay}\n                             {/* Artist */}\n                             <Form.Group controlId=\"create-form-artist\">\n                                 <Form.Label>Artist:</Form.Label>"
  },
  {
    "sha": "fecffe3df076b32808e8db07d1d25970537d87ee",
    "filename": "client/src/components/CreateOrUpdateForm/CreateOrUpdateForm.scss",
    "status": "modified",
    "additions": 28,
    "deletions": 6,
    "changes": 34,
    "blob_url": "https://github.com/team-monumental/monuments-and-memorials/blob/39d05e50ec2fee3b48620b168bfbd3b442096805/client/src/components/CreateOrUpdateForm/CreateOrUpdateForm.scss",
    "raw_url": "https://github.com/team-monumental/monuments-and-memorials/raw/39d05e50ec2fee3b48620b168bfbd3b442096805/client/src/components/CreateOrUpdateForm/CreateOrUpdateForm.scss",
    "contents_url": "https://api.github.com/repos/team-monumental/monuments-and-memorials/contents/client/src/components/CreateOrUpdateForm/CreateOrUpdateForm.scss?ref=39d05e50ec2fee3b48620b168bfbd3b442096805",
    "patch": "@@ -1,6 +1,7 @@\n @import \"../../theme\";\n \n .create-form {\n+    margin: 0 auto;\n     max-width: 390px;\n     .h4 {\n         padding-bottom: 1rem;\n@@ -231,18 +232,38 @@\n         }\n     }\n \n+    .image-fields-container-spaced {\n+        display: flex;\n+        flex-direction: column;\n+        margin-bottom: 16px;\n+\n+        .image-field-label {\n+            margin: 4px 0 1px 0;\n+        }\n+    }\n+\n+\n     .images-for-update-container {\n         display: flex;\n+        flex-direction: column;\n+\n+        .image-fields-container {\n+            display: flex;\n+            flex-direction: column;\n+            width: 65%;\n+            margin: 0 8px;\n+\n+            .image-field-label {\n+                margin: 4px 0 1px 0;\n+            }\n+        }\n \n         .image-for-update-container {\n-            height: 130px;\n-            width: 120px;\n-            margin: 5% 2.5%;\n+            margin-top: 16px;\n+            height: 175px;\n             padding: 10px;\n             background: #EDF2F6;\n             display: flex;\n-            align-items: center;\n-            justify-content: center;\n             box-shadow: 0 0 8px 2px rgba(0, 0, 0, 0.1);\n             border: 1px solid #D0DBE4;\n             position: relative;\n@@ -251,13 +272,14 @@\n                 position: absolute;\n                 top: 10rem;\n                 display: flex;\n+                padding-top: 0.5rem;\n \n                 .image-is-primary-message {\n                     font-weight: bold;\n+                    margin-top: 2px;\n                 }\n \n                 .image-is-primary-checkbox {\n-                    padding-top: 0.5rem;\n                     cursor: pointer;\n                 }\n             }"
  },
  {
    "sha": "cfbfa6e5e90355c7cabb14a318cec95b83ef68b9",
    "filename": "client/src/components/Export/ExportButtons/ExportButtons.js",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/team-monumental/monuments-and-memorials/blob/39d05e50ec2fee3b48620b168bfbd3b442096805/client/src/components/Export/ExportButtons/ExportButtons.js",
    "raw_url": "https://github.com/team-monumental/monuments-and-memorials/raw/39d05e50ec2fee3b48620b168bfbd3b442096805/client/src/components/Export/ExportButtons/ExportButtons.js",
    "contents_url": "https://api.github.com/repos/team-monumental/monuments-and-memorials/contents/client/src/components/Export/ExportButtons/ExportButtons.js?ref=39d05e50ec2fee3b48620b168bfbd3b442096805",
    "patch": "@@ -26,8 +26,8 @@ export default class ExportButtons extends React.Component {\n                                        exportTitle={`${title} Data ${moment().format('YYYY-MM-DD hh:mm')}`} />\n                 </span>\n                 <span style={{marginLeft: '5px'}}>\n-                    <ExportToZipButton className=\"mt-2\" fields={csvExportFields.concat(['Images'])}\n-                                       data={buildBulkExportData(monuments, csvExportFields.concat(['Images']), false)}\n+                    <ExportToZipButton className=\"mt-2\" fields={csvExportFields.concat(['Images', 'Image Reference URLs', 'Image Captions'])}\n+                                       data={buildBulkExportData(monuments, csvExportFields.concat(['Images', 'Image Reference URLs', 'Image Captions']), false)}\n                                        exportTitle={`${title} Data ${moment().format('YYYY-MM-DD hh:mm')}`}\n                                        images={images} />\n                 </span>"
  },
  {
    "sha": "7dd298c22ed0e4c6ecb0b0994ccc076194f6eb52",
    "filename": "client/src/components/Export/ExportToZipButton/ExportToZipButton.js",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/team-monumental/monuments-and-memorials/blob/39d05e50ec2fee3b48620b168bfbd3b442096805/client/src/components/Export/ExportToZipButton/ExportToZipButton.js",
    "raw_url": "https://github.com/team-monumental/monuments-and-memorials/raw/39d05e50ec2fee3b48620b168bfbd3b442096805/client/src/components/Export/ExportToZipButton/ExportToZipButton.js",
    "contents_url": "https://api.github.com/repos/team-monumental/monuments-and-memorials/contents/client/src/components/Export/ExportToZipButton/ExportToZipButton.js?ref=39d05e50ec2fee3b48620b168bfbd3b442096805",
    "patch": "@@ -22,7 +22,7 @@ export const ExportToZipButton = (props) => {\n \n         const zip = new JSZip();\n         zip.file(exportFileName, csv);\n-        if (images){\n+        if (images) {\n             for (const image of images) {\n                 // Setup the global AWS config\n                 AWS.config.update({"
  },
  {
    "sha": "6b547e8c38006cf278bc0dc645dee7833badf560",
    "filename": "client/src/components/Monument/Images/Gallery/Gallery.js",
    "status": "modified",
    "additions": 37,
    "deletions": 9,
    "changes": 46,
    "blob_url": "https://github.com/team-monumental/monuments-and-memorials/blob/39d05e50ec2fee3b48620b168bfbd3b442096805/client/src/components/Monument/Images/Gallery/Gallery.js",
    "raw_url": "https://github.com/team-monumental/monuments-and-memorials/raw/39d05e50ec2fee3b48620b168bfbd3b442096805/client/src/components/Monument/Images/Gallery/Gallery.js",
    "contents_url": "https://api.github.com/repos/team-monumental/monuments-and-memorials/contents/client/src/components/Monument/Images/Gallery/Gallery.js?ref=39d05e50ec2fee3b48620b168bfbd3b442096805",
    "patch": "@@ -105,16 +105,29 @@ export default class Gallery extends React.Component {\n         }\n         const selectedImage = images[selectedImageIndex];\n         const ariaLabel = this.getAltText(selectedImage)\n+        let referenceUrl = selectedImage.referenceUrl\n+        if (referenceUrl && !referenceUrl.startsWith('https://') && !referenceUrl.startsWith('http://')) {\n+            referenceUrl = `https://${referenceUrl}`\n+        }\n         return (\n-            <div className=\"image-wrapper\" role=\"img\" aria-label={ariaLabel}>\n-                <div className=\"image\" style={{backgroundImage: `url(\"${selectedImage.url}\")`}} />\n-                {this.renderAnimation()}\n-                <div className=\"overlay\" onClick={() => this.openModal(selectedImage)}>\n-                    <i className=\"material-icons\">\n-                        open_in_new\n-                    </i>\n+            <>\n+                <div className=\"image-wrapper\" role=\"img\" aria-label={ariaLabel}>\n+                    <div className=\"image\" style={{backgroundImage: `url(\"${selectedImage.url}\")`}} />\n+                    {this.renderAnimation()}\n+                    <div className=\"overlay\" onClick={() => this.openModal(selectedImage)}>\n+                        <i className=\"material-icons\">\n+                            open_in_new\n+                        </i>\n+                    </div>\n                 </div>\n-            </div>\n+                {selectedImage.caption && <div style={{ margin: '0 auto', textAlign: 'center' }}>\n+                    {selectedImage.caption}\n+                </div>}\n+                {selectedImage.referenceUrl && <div style={{ margin: '0 auto', textAlign: 'center' }}>\n+                    <span className=\"detail-label\">Reference:&nbsp;</span>\n+                    <a href={referenceUrl}>{selectedImage.referenceUrl}</a>\n+                </div>}\n+            </>\n         )\n     }\n \n@@ -163,6 +176,10 @@ export default class Gallery extends React.Component {\n         const { images } = this.props;\n         const selectedImage = images[modalImageIndex];\n         const altText = this.getAltText(selectedImage)\n+        let referenceUrl = selectedImage.referenceUrl\n+        if (referenceUrl && !referenceUrl.startsWith('https://') && !referenceUrl.startsWith('http://')) {\n+            referenceUrl = `https://${referenceUrl}`\n+        }\n         return (\n             <div onClick={e => e.stopPropagation()}>\n                 <Modal show={modalOpen} onHide={() => this.closeModal()} className=\"image-view-modal\">\n@@ -171,7 +188,15 @@ export default class Gallery extends React.Component {\n                     </Modal.Header>\n                     <Modal.Body>\n                         <img src={selectedImage.url} alt={altText} />\n-                        {/*<p className=\"caption\">Image description...</p>*/}\n+                        <div className=\"imageInfo\">\n+                            {selectedImage.caption && <div style={{ margin: '0 auto', textAlign: 'center' }}>\n+                                {selectedImage.caption}\n+                            </div>}\n+                            {selectedImage.referenceUrl && <div style={{ margin: '0 auto', textAlign: 'center' }}>\n+                                <span className=\"detail-label\">Reference:&nbsp;</span>\n+                                <a href={referenceUrl}>{selectedImage.referenceUrl}</a>\n+                            </div>}\n+                        </div>\n                     </Modal.Body>\n                     <Modal.Footer className=\"d-flex justify-content-center\">\n                         <Pagination count={images.length} page={modalImageIndex} onPage={page => {\n@@ -184,6 +209,9 @@ export default class Gallery extends React.Component {\n     }\n \n     getAltText(image) {\n+        if (image.caption) {\n+            return image.caption\n+        }\n         const { tags } = this.props;\n         const imageFileName = image ? getS3ImageNameFromObjectUrl(image.url) : 'None';\n         const imageName = imageFileName ? imageFileName.split('.')[0] : 'None';"
  },
  {
    "sha": "818b67ba3210785d6536aa3d1c3db207644546fe",
    "filename": "client/src/components/Monument/Images/Gallery/Gallery.scss",
    "status": "modified",
    "additions": 9,
    "deletions": 3,
    "changes": 12,
    "blob_url": "https://github.com/team-monumental/monuments-and-memorials/blob/39d05e50ec2fee3b48620b168bfbd3b442096805/client/src/components/Monument/Images/Gallery/Gallery.scss",
    "raw_url": "https://github.com/team-monumental/monuments-and-memorials/raw/39d05e50ec2fee3b48620b168bfbd3b442096805/client/src/components/Monument/Images/Gallery/Gallery.scss",
    "contents_url": "https://api.github.com/repos/team-monumental/monuments-and-memorials/contents/client/src/components/Monument/Images/Gallery/Gallery.scss?ref=39d05e50ec2fee3b48620b168bfbd3b442096805",
    "patch": "@@ -12,6 +12,10 @@\n         width: min-content;\n     }\n \n+    .detail-label {\n+        font-weight: 500;\n+    }\n+\n     .overlay {\n         background-color: rgb(0, 0, 0);\n         opacity: 0;\n@@ -82,7 +86,7 @@\n .image-view-modal {\n     .modal-dialog {\n         max-width: 95vw;\n-        max-height: 90vh;\n+        max-height: 1000px;\n         height: 90vh;\n         width: 100%;\n \n@@ -100,12 +104,14 @@\n                 min-height: 0;\n                 flex-grow: 1;\n                 img {\n-                    max-height: 100%;\n+                    max-height: 90%;\n                     max-width: 100%;\n-                    height: 100%;\n                     width: 100%;\n                     object-fit: contain;\n                 }\n+                .imageInfo {\n+                    font-size: 14px;\n+                }\n             }\n         }\n     }"
  },
  {
    "sha": "a336537094fef1d7f4e85d75200aa8e4035ec9bb",
    "filename": "client/src/components/Monument/MapPhotoSphereTabs/MapPhotoSphereTabs.js",
    "status": "modified",
    "additions": 15,
    "deletions": 1,
    "changes": 16,
    "blob_url": "https://github.com/team-monumental/monuments-and-memorials/blob/39d05e50ec2fee3b48620b168bfbd3b442096805/client/src/components/Monument/MapPhotoSphereTabs/MapPhotoSphereTabs.js",
    "raw_url": "https://github.com/team-monumental/monuments-and-memorials/raw/39d05e50ec2fee3b48620b168bfbd3b442096805/client/src/components/Monument/MapPhotoSphereTabs/MapPhotoSphereTabs.js",
    "contents_url": "https://api.github.com/repos/team-monumental/monuments-and-memorials/contents/client/src/components/Monument/MapPhotoSphereTabs/MapPhotoSphereTabs.js?ref=39d05e50ec2fee3b48620b168bfbd3b442096805",
    "patch": "@@ -43,12 +43,26 @@ export default class MapPhotoSphereTabs extends React.Component {\n \n         const activePhotoSphereImage = photoSphereImages.find((image, index) => index === activeImageIndex);\n \n+        let referenceUrl = activePhotoSphereImage.referenceUrl\n+        if (referenceUrl && !referenceUrl.startsWith('https://') && !referenceUrl.startsWith('http://')) {\n+            referenceUrl = `https://${referenceUrl}`\n+        }\n+\n         return (\n             <Tabs id=\"map_photo_sphere_tabs\" activeKey={activeTab} onSelect={key => this.setState({activeTab: key})}>\n                 <Tab eventKey=\"images\" title=\"360&deg; View\">\n                     <div className=\"tab-content-wrapper\">\n-                        {activePhotoSphereImage && (\n+                        {activePhotoSphereImage && (<>\n                             <iframe title=\"PhotoSphere\" src={activePhotoSphereImage.url} frameBorder=\"0\" allowFullScreen/>\n+                            <div className=\"imageInfo\">\n+                                {activePhotoSphereImage.caption && <div style={{ margin: '0 auto', textAlign: 'center' }}>\n+                                    {activePhotoSphereImage.caption}\n+                                </div>}\n+                                {activePhotoSphereImage.referenceUrl && <div style={{ margin: '0 auto', textAlign: 'center' }}>\n+                                    <span className=\"detail-label\">Reference:&nbsp;</span>\n+                                    <a href={referenceUrl}>{activePhotoSphereImage.referenceUrl}</a>\n+                                </div>}\n+                            </div></>\n                         )}\n                         {photoSphereImages.length > 1 && pagination}\n                     </div>"
  },
  {
    "sha": "1ced3c620f13567a916f6b8420c928c7b746d293",
    "filename": "client/src/components/Monument/MapPhotoSphereTabs/MapPhotoSphereTabs.scss",
    "status": "modified",
    "additions": 9,
    "deletions": 1,
    "changes": 10,
    "blob_url": "https://github.com/team-monumental/monuments-and-memorials/blob/39d05e50ec2fee3b48620b168bfbd3b442096805/client/src/components/Monument/MapPhotoSphereTabs/MapPhotoSphereTabs.scss",
    "raw_url": "https://github.com/team-monumental/monuments-and-memorials/raw/39d05e50ec2fee3b48620b168bfbd3b442096805/client/src/components/Monument/MapPhotoSphereTabs/MapPhotoSphereTabs.scss",
    "contents_url": "https://api.github.com/repos/team-monumental/monuments-and-memorials/contents/client/src/components/Monument/MapPhotoSphereTabs/MapPhotoSphereTabs.scss?ref=39d05e50ec2fee3b48620b168bfbd3b442096805",
    "patch": "@@ -23,4 +23,12 @@ iframe {\n     padding: .5rem !important;\n     min-width: 75px;\n     text-align: center;\n-}\n\\ No newline at end of file\n+}\n+\n+.imageInfo {\n+    font-size: 14px;\n+}\n+\n+.detail-label {\n+    font-weight: 500;\n+}"
  },
  {
    "sha": "00ccd5404b48c6474c49dd7ba42a2e98a05f4680",
    "filename": "client/src/components/ReviewModal/UpdateReviewModal/UpdateReviewModal.js",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/team-monumental/monuments-and-memorials/blob/39d05e50ec2fee3b48620b168bfbd3b442096805/client/src/components/ReviewModal/UpdateReviewModal/UpdateReviewModal.js",
    "raw_url": "https://github.com/team-monumental/monuments-and-memorials/raw/39d05e50ec2fee3b48620b168bfbd3b442096805/client/src/components/ReviewModal/UpdateReviewModal/UpdateReviewModal.js",
    "contents_url": "https://api.github.com/repos/team-monumental/monuments-and-memorials/contents/client/src/components/ReviewModal/UpdateReviewModal/UpdateReviewModal.js?ref=39d05e50ec2fee3b48620b168bfbd3b442096805",
    "patch": "@@ -49,6 +49,7 @@ export default class UpdateReviewModal extends React.Component {\n                 </Modal.Header>\n                 <Modal.Body>\n                     <p>Please review the updates you have made for correctness and completeness!</p>\n+                    <p>Note:  Image fields (Reference URL, Caption, Primary Image) do not show here.</p>\n                     <div className=\"attributes-update-container\">\n                         <MonumentUpdate oldMonument={oldMonument} update={this.buildUpdate()}/>\n                     </div>"
  },
  {
    "sha": "59ff9a9d75be1d9aa12243e0a1aae42062c2414a",
    "filename": "client/src/utils/export-util.js",
    "status": "modified",
    "additions": 42,
    "deletions": 2,
    "changes": 44,
    "blob_url": "https://github.com/team-monumental/monuments-and-memorials/blob/39d05e50ec2fee3b48620b168bfbd3b442096805/client/src/utils/export-util.js",
    "raw_url": "https://github.com/team-monumental/monuments-and-memorials/raw/39d05e50ec2fee3b48620b168bfbd3b442096805/client/src/utils/export-util.js",
    "contents_url": "https://api.github.com/repos/team-monumental/monuments-and-memorials/contents/client/src/utils/export-util.js?ref=39d05e50ec2fee3b48620b168bfbd3b442096805",
    "patch": "@@ -84,7 +84,7 @@ export function buildExportData(monument, fields=csvExportFields, pretty=false,\n                 }\n             }\n             result[field] = tagsList;\n-        } else if (lowerField.includes('image')) {\n+        } else if (lowerField.includes('images')) {\n             let imagesList = '';\n             if (monument.images && monument.images.length) {\n                 const imagesArray = monument.images.map(image => getS3ImageNameFromObjectUrl(image.url));\n@@ -104,7 +104,47 @@ export function buildExportData(monument, fields=csvExportFields, pretty=false,\n                 }\n             }\n             result[field] = imagesList;\n-        } else if (lowerField.includes('address')) {\n+        } else if (lowerField.includes('image reference')) {\n+            let imageReferenceUrlsList = '';\n+            if (monument.images && monument.images.length) {\n+                const imageReferenceUrlsArray = monument.images.map(image => image.referenceUrl);\n+\n+                let i = 0\n+                for (const imageReferenceUrl of imageReferenceUrlsArray) {\n+                    if (!imageReferenceUrl) {\n+                        imageReferenceUrlsArray[i] = ''\n+                    }\n+                    i += 1\n+                }\n+\n+                if (pretty) {\n+                    imageReferenceUrlsList = imageReferenceUrlsArray.join(', ')\n+                } else {\n+                    imageReferenceUrlsList = imageReferenceUrlsArray.join(',')\n+                }\n+            }\n+            result[field] = imageReferenceUrlsList;\n+        } else if (lowerField.includes('image caption')) {\n+            let imageCaptionsList = '';\n+            if (monument.images && monument.images.length) {\n+                const imageCaptionsArray = monument.images.map(image => image.caption);\n+\n+                let i = 0\n+                for (const imageCaption of imageCaptionsArray) {\n+                    if (!imageCaption) {\n+                        imageCaptionsArray[i] = ''\n+                    }\n+                    i += 1\n+                }\n+\n+                if (pretty) {\n+                    imageCaptionsList = imageCaptionsArray.join(', ')\n+                } else {\n+                    imageCaptionsList = imageCaptionsArray.join(',')\n+                }\n+            }\n+            result[field] = imageCaptionsList;\n+        }  else if (lowerField.includes('address')) {\n             result[field] = monument.address || '';\n         } else if (lowerField.includes('description')) {\n             result[field] = monument.description || '';"
  },
  {
    "sha": "820f13c1c8a89a18349a296785235f78a2295afd",
    "filename": "src/main/java/com/monumental/models/Image.java",
    "status": "modified",
    "additions": 33,
    "deletions": 0,
    "changes": 33,
    "blob_url": "https://github.com/team-monumental/monuments-and-memorials/blob/39d05e50ec2fee3b48620b168bfbd3b442096805/src/main/java/com/monumental/models/Image.java",
    "raw_url": "https://github.com/team-monumental/monuments-and-memorials/raw/39d05e50ec2fee3b48620b168bfbd3b442096805/src/main/java/com/monumental/models/Image.java",
    "contents_url": "https://api.github.com/repos/team-monumental/monuments-and-memorials/contents/src/main/java/com/monumental/models/Image.java?ref=39d05e50ec2fee3b48620b168bfbd3b442096805",
    "patch": "@@ -31,6 +31,12 @@\n     @Column(name = \"is_photo_sphere\")\n     private boolean isPhotoSphere = false;\n \n+    @Column(name = \"reference_url\", length = 2048)\n+    private String referenceUrl = \"\";\n+\n+    @Column(name = \"caption\")\n+    private String caption = \"\";\n+\n     @JsonIgnore\n     @ManyToOne\n     @JoinColumn(name = \"monument_id\", nullable = false)\n@@ -49,6 +55,17 @@ public Image(String url, boolean isPrimary) {\n         this.isPrimary = isPrimary;\n     }\n \n+    public Image(String url, boolean isPrimary, String referenceUrl, String caption) {\n+        if (isNullOrEmpty(url)) {\n+            throw new IllegalArgumentException(\"URL must not be null or empty\");\n+        }\n+\n+        this.url = url;\n+        this.isPrimary = isPrimary;\n+        this.referenceUrl = referenceUrl;\n+        this.caption = caption;\n+    }\n+\n     public String getUrl() {\n         return this.url;\n     }\n@@ -80,4 +97,20 @@ public boolean getIsPhotoSphere() {\n     public void setIsPhotoSphere(boolean isPhotoSphere) {\n         this.isPhotoSphere = isPhotoSphere;\n     }\n+\n+    public String getReferenceUrl() {\n+        return referenceUrl;\n+    }\n+\n+    public void setReferenceUrl(String referenceUrl) {\n+        this.referenceUrl = referenceUrl;\n+    }\n+\n+    public String getCaption() {\n+        return caption;\n+    }\n+\n+    public void setCaption(String caption) {\n+        this.caption = caption;\n+    }\n }"
  },
  {
    "sha": "cfcadf94f47eeea56d757403e724cfe3d8d582c5",
    "filename": "src/main/java/com/monumental/models/suggestions/CreateMonumentSuggestion.java",
    "status": "modified",
    "additions": 110,
    "deletions": 0,
    "changes": 110,
    "blob_url": "https://github.com/team-monumental/monuments-and-memorials/blob/39d05e50ec2fee3b48620b168bfbd3b442096805/src/main/java/com/monumental/models/suggestions/CreateMonumentSuggestion.java",
    "raw_url": "https://github.com/team-monumental/monuments-and-memorials/raw/39d05e50ec2fee3b48620b168bfbd3b442096805/src/main/java/com/monumental/models/suggestions/CreateMonumentSuggestion.java",
    "contents_url": "https://api.github.com/repos/team-monumental/monuments-and-memorials/contents/src/main/java/com/monumental/models/suggestions/CreateMonumentSuggestion.java?ref=39d05e50ec2fee3b48620b168bfbd3b442096805",
    "patch": "@@ -121,13 +121,41 @@\n     @JsonIgnore\n     private List<String> images;\n \n+    @Column(name = \"image_reference_urls_json\")\n+    private String imageReferenceUrlsJson;\n+\n+    @Transient\n+    @JsonIgnore\n+    private List<String> imageReferenceUrls;\n+\n+    @Column(name = \"image_captions_json\")\n+    private String imageCaptionsJson;\n+\n+    @Transient\n+    @JsonIgnore\n+    private List<String> imageCaptions;\n+\n     @Column(name = \"photosphere_images_json\", length = 1024)\n     private String photoSphereImagesJson;\n \n     @Transient\n     @JsonIgnore\n     private List<String> photoSphereImages;\n \n+    @Column(name = \"photosphere_image_reference_urls_json\")\n+    private String photoSphereImageReferenceUrlsJson;\n+\n+    @Transient\n+    @JsonIgnore\n+    private List<String> photoSphereImageReferenceUrls;\n+\n+    @Column(name = \"photosphere_image_captions_json\")\n+    private String photoSphereImageCaptionsJson;\n+\n+    @Transient\n+    @JsonIgnore\n+    private List<String> photoSphereImageCaptions;\n+\n     @JsonIgnore\n     @ManyToOne\n     @JoinColumn(name = \"bulk_create_suggestion_id\")\n@@ -401,6 +429,46 @@ public void setImagesJson(String imagesJson) {\n         return this.images;\n     }\n \n+    public String getImageReferenceUrlsJson() {\n+        return imageReferenceUrlsJson;\n+    }\n+\n+    public void setImageReferenceUrlsJson(String imageReferenceUrlsJson) {\n+        this.imageReferenceUrlsJson = imageReferenceUrlsJson;\n+    }\n+\n+    public List<String> getImageReferenceUrls() throws IndexOutOfBoundsException {\n+        if (this.imageReferenceUrls == null || (this.imageReferenceUrlsJson != null && this.imageReferenceUrls.isEmpty() && !this.imageReferenceUrlsJson.isEmpty())) {\n+            this.imageReferenceUrls = this.deserializeStringList(this.imageReferenceUrlsJson);\n+        }\n+\n+        if (this.imageReferenceUrls != null && this.getImages().size() != this.imageReferenceUrls.size()) {\n+            throw new IndexOutOfBoundsException(\"Number of image reference URLs must match number of images\");\n+        }\n+\n+        return this.imageReferenceUrls;\n+    }\n+\n+    public String getImageCaptionsJson() {\n+        return imageCaptionsJson;\n+    }\n+\n+    public void setImageCaptionsJson(String imageCaptionsJson) {\n+        this.imageCaptionsJson = imageCaptionsJson;\n+    }\n+\n+    public List<String> getImageCaptions() {\n+        if (this.imageCaptions == null || (this.imageCaptionsJson != null && this.imageCaptions.isEmpty() && !this.imageCaptionsJson.isEmpty())) {\n+            this.imageCaptions = this.deserializeStringList(this.imageCaptionsJson);\n+        }\n+\n+        if (this.imageCaptions != null && this.getImages().size() != this.imageCaptions.size()) {\n+            throw new IndexOutOfBoundsException(\"Number of image captions must match number of images\");\n+        }\n+\n+        return this.imageCaptions;\n+    }\n+\n     public String getPhotoSphereImagesJson() {\n         return this.photoSphereImagesJson;\n     }\n@@ -418,6 +486,48 @@ public void setPhotoSphereImagesJson(String photoSphereImagesJson) {\n         return this.photoSphereImages;\n     }\n \n+    public String getPhotoSphereImageReferenceUrlsJson() {\n+        return photoSphereImageReferenceUrlsJson;\n+    }\n+\n+    public void setPhotoSphereImageReferenceUrlsJson(String photoSphereImageReferenceUrlsJson) {\n+        this.photoSphereImageReferenceUrlsJson = photoSphereImageReferenceUrlsJson;\n+    }\n+\n+    public List<String> getPhotoSphereImageReferenceUrls() throws IndexOutOfBoundsException {\n+        if (this.photoSphereImageReferenceUrls == null || (this.photoSphereImageReferenceUrlsJson != null &&\n+                this.photoSphereImageReferenceUrls.isEmpty() && !this.photoSphereImageReferenceUrlsJson.isEmpty())) {\n+            this.photoSphereImageReferenceUrls = this.deserializeStringList(this.photoSphereImageReferenceUrlsJson);\n+        }\n+\n+        if (this.photoSphereImageReferenceUrls != null && this.getPhotoSphereImages().size() != this.photoSphereImageReferenceUrls.size()) {\n+            throw new IndexOutOfBoundsException(\"Number of photosphere image reference URLs must match number of photosphere images\");\n+        }\n+\n+        return this.photoSphereImageReferenceUrls;\n+    }\n+\n+    public String getPhotoSphereImageCaptionsJson() {\n+        return photoSphereImageCaptionsJson;\n+    }\n+\n+    public void setPhotoSphereImageCaptionsJson(String photoSphereImageCaptionsJson) {\n+        this.photoSphereImageCaptionsJson = photoSphereImageCaptionsJson;\n+    }\n+\n+    public List<String> getPhotoSphereImageCaptions() {\n+        if (this.photoSphereImageCaptions == null || (this.photoSphereImageCaptionsJson != null &&\n+                this.photoSphereImageCaptions.isEmpty() && !this.photoSphereImageCaptionsJson.isEmpty())) {\n+            this.photoSphereImageCaptions = this.deserializeStringList(this.photoSphereImageCaptionsJson);\n+        }\n+\n+        if (this.photoSphereImageCaptions != null && this.getPhotoSphereImages().size() != this.photoSphereImageCaptions.size()) {\n+            throw new IndexOutOfBoundsException(\"Number of photosphere image captions must match number of photosphere images\");\n+        }\n+\n+        return this.photoSphereImageCaptions;\n+    }\n+\n     public BulkCreateMonumentSuggestion getBulkCreateSuggestion() {\n         return this.bulkCreateSuggestion;\n     }"
  },
  {
    "sha": "27c8b83ba568f33d8b165fda08bc9e6a86b16369",
    "filename": "src/main/java/com/monumental/models/suggestions/UpdateMonumentSuggestion.java",
    "status": "modified",
    "additions": 202,
    "deletions": 0,
    "changes": 202,
    "blob_url": "https://github.com/team-monumental/monuments-and-memorials/blob/39d05e50ec2fee3b48620b168bfbd3b442096805/src/main/java/com/monumental/models/suggestions/UpdateMonumentSuggestion.java",
    "raw_url": "https://github.com/team-monumental/monuments-and-memorials/raw/39d05e50ec2fee3b48620b168bfbd3b442096805/src/main/java/com/monumental/models/suggestions/UpdateMonumentSuggestion.java",
    "contents_url": "https://api.github.com/repos/team-monumental/monuments-and-memorials/contents/src/main/java/com/monumental/models/suggestions/UpdateMonumentSuggestion.java?ref=39d05e50ec2fee3b48620b168bfbd3b442096805",
    "patch": "@@ -108,6 +108,34 @@\n     @Column(name = \"new_primary_image_id\")\n     private Integer newPrimaryImageId;\n \n+    @Column(name = \"new_image_reference_urls_json\")\n+    private String newImageReferenceUrlsJson;\n+\n+    @Transient\n+    @JsonIgnore\n+    private List<String> newImageReferenceUrls;\n+\n+    @Column(name = \"new_image_captions_json\")\n+    private String newImageCaptionsJson;\n+\n+    @Transient\n+    @JsonIgnore\n+    private List<String> newImageCaptions;\n+\n+    @Column(name = \"updated_image_reference_urls_json\")\n+    private String updatedImageReferenceUrlsJson;\n+\n+    @Transient\n+    @JsonIgnore\n+    private Map<Integer, String> updatedImageReferenceUrlsById;\n+\n+    @Column(name = \"updated_image_captions_json\")\n+    private String updatedImageCaptionsJson;\n+\n+    @Transient\n+    @JsonIgnore\n+    private Map<Integer, String> updatedImageCaptionsById;\n+\n     @Column(name = \"deleted_image_ids_json\", length = 1024)\n     private String deletedImageIdsJson;\n \n@@ -129,6 +157,34 @@\n     @JsonIgnore\n     private List<String> newPhotoSphereImageUrls;\n \n+    @Column(name = \"new_photosphere_image_reference_urls_json\")\n+    private String newPhotoSphereImageReferenceUrlsJson;\n+\n+    @Transient\n+    @JsonIgnore\n+    private List<String> newPhotoSphereImageReferenceUrls;\n+\n+    @Column(name = \"new_photosphere_image_captions_json\")\n+    private String newPhotoSphereImageCaptionsJson;\n+\n+    @Transient\n+    @JsonIgnore\n+    private List<String> newPhotoSphereImageCaptions;\n+\n+    @Column(name = \"updated_photosphere_image_reference_urls_json\")\n+    private String updatedPhotoSphereImageReferenceUrlsJson;\n+\n+    @Transient\n+    @JsonIgnore\n+    private Map<Integer, String> updatedPhotoSphereImageReferenceUrlsById;\n+\n+    @Column(name = \"updated_photosphere_image_captions_json\")\n+    private String updatedPhotoSphereImageCaptionsJson;\n+\n+    @Transient\n+    @JsonIgnore\n+    private Map<Integer, String> updatedPhotoSphereImageCaptionsById;\n+\n     @Column(name = \"deleted_photosphere_image_ids_json\", length = 1024)\n     private String deletedPhotoSphereImageIdsJson;\n \n@@ -393,6 +449,78 @@ public void setNewPrimaryImageId(Integer newPrimaryImageId) {\n         this.newPrimaryImageId = newPrimaryImageId;\n     }\n \n+    public String getNewImageReferenceUrlsJson() {\n+        return newImageReferenceUrlsJson;\n+    }\n+\n+    public void setNewImageReferenceUrlsJson(String newImageReferenceUrlsJson) {\n+        this.newImageReferenceUrlsJson = newImageReferenceUrlsJson;\n+    }\n+\n+    public List<String> getNewImageReferenceUrls() throws IndexOutOfBoundsException {\n+        if (this.newImageReferenceUrls == null || (this.newImageReferenceUrlsJson != null && this.newImageReferenceUrls.isEmpty() && !this.newImageReferenceUrlsJson.isEmpty())) {\n+            this.newImageReferenceUrls = this.deserializeStringList(this.newImageReferenceUrlsJson);\n+        }\n+\n+        if (this.newImageReferenceUrls != null && this.getNewImageUrls().size() != this.newImageReferenceUrls.size()) {\n+            throw new IndexOutOfBoundsException(\"Number of new image reference URLs must match number of new images\");\n+        }\n+\n+        return this.newImageReferenceUrls;\n+    }\n+\n+    public String getNewImageCaptionsJson() {\n+        return newImageCaptionsJson;\n+    }\n+\n+    public void setNewImageCaptionsJson(String newImageCaptionsJson) {\n+        this.newImageCaptionsJson = newImageCaptionsJson;\n+    }\n+\n+    public List<String> getNewImageCaptions() {\n+        if (this.newImageCaptions == null || (this.newImageCaptionsJson != null && this.newImageCaptions.isEmpty() && !this.newImageCaptionsJson.isEmpty())) {\n+            this.newImageCaptions = this.deserializeStringList(this.newImageCaptionsJson);\n+        }\n+\n+        if (this.newImageCaptions != null && this.getNewImageUrls().size() != this.newImageCaptions.size()) {\n+            throw new IndexOutOfBoundsException(\"Number of new image captions must match number of new images\");\n+        }\n+\n+        return this.newImageCaptions;\n+    }\n+\n+    public String getUpdatedImageReferenceUrlsJson() {\n+        return updatedImageReferenceUrlsJson;\n+    }\n+\n+    public void setUpdatedImageReferenceUrlsJson(String updatedImageReferenceUrlsJson) {\n+        this.updatedImageReferenceUrlsJson = updatedImageReferenceUrlsJson;\n+    }\n+\n+    public Map<Integer, String> getUpdatedImageReferenceUrlsById() {\n+        if (this.updatedImageReferenceUrlsById == null) {\n+            this.updatedImageReferenceUrlsById = this.deserializeMap(this.updatedImageReferenceUrlsJson);\n+        }\n+\n+        return this.updatedImageReferenceUrlsById;\n+    }\n+\n+    public String getUpdatedImageCaptionsJson() {\n+        return updatedImageCaptionsJson;\n+    }\n+\n+    public void setUpdatedImageCaptionsJson(String updatedImageCaptionsJson) {\n+        this.updatedImageCaptionsJson = updatedImageCaptionsJson;\n+    }\n+\n+    public Map<Integer, String> getUpdatedImageCaptionsById() {\n+        if (this.updatedImageCaptionsById == null) {\n+            this.updatedImageCaptionsById = this.deserializeMap(this.updatedImageCaptionsJson);\n+        }\n+\n+        return this.updatedImageCaptionsById;\n+    }\n+\n     public String getDeletedImageIdsJson() {\n         return this.deletedImageIdsJson;\n     }\n@@ -441,6 +569,80 @@ public void setNewPhotoSphereImageUrlsJson(String newPhotoSphereImageUrlsJson) {\n         return this.newPhotoSphereImageUrls;\n     }\n \n+    public String getNewPhotoSphereImageReferenceUrlsJson() {\n+        return newPhotoSphereImageReferenceUrlsJson;\n+    }\n+\n+    public void setNewPhotoSphereImageReferenceUrlsJson(String newPhotoSphereImageReferenceUrlsJson) {\n+        this.newPhotoSphereImageReferenceUrlsJson = newPhotoSphereImageReferenceUrlsJson;\n+    }\n+\n+    public List<String> getNewPhotoSphereImageReferenceUrls() throws IndexOutOfBoundsException {\n+        if (this.newPhotoSphereImageReferenceUrls == null || (this.newPhotoSphereImageReferenceUrlsJson != null &&\n+                this.newPhotoSphereImageReferenceUrls.isEmpty() && !this.newPhotoSphereImageReferenceUrlsJson.isEmpty())) {\n+            this.newPhotoSphereImageReferenceUrls = this.deserializeStringList(this.newPhotoSphereImageReferenceUrlsJson);\n+        }\n+\n+        if (this.newPhotoSphereImageReferenceUrls != null && this.getNewPhotoSphereImageUrls().size() != this.newPhotoSphereImageReferenceUrls.size()) {\n+            throw new IndexOutOfBoundsException(\"Number of new photosphere image reference URLs must match number of new photosphere images\");\n+        }\n+\n+        return this.newPhotoSphereImageReferenceUrls;\n+    }\n+\n+    public String getNewPhotoSphereImageCaptionsJson() {\n+        return newPhotoSphereImageCaptionsJson;\n+    }\n+\n+    public void setNewPhotoSphereImageCaptionsJson(String newPhotoSphereImageCaptionsJson) {\n+        this.newPhotoSphereImageCaptionsJson = newPhotoSphereImageCaptionsJson;\n+    }\n+\n+    public List<String> getNewPhotoSphereImageCaptions() {\n+        if (this.newPhotoSphereImageCaptions == null || (this.newPhotoSphereImageCaptionsJson != null &&\n+                this.newPhotoSphereImageCaptions.isEmpty() && !this.newPhotoSphereImageCaptionsJson.isEmpty())) {\n+            this.newPhotoSphereImageCaptions = this.deserializeStringList(this.newPhotoSphereImageCaptionsJson);\n+        }\n+\n+        if (this.newPhotoSphereImageCaptions != null && this.getNewPhotoSphereImageUrls().size() != this.newPhotoSphereImageCaptions.size()) {\n+            throw new IndexOutOfBoundsException(\"Number of new photosphere image captions must match number of new photosphere images\");\n+        }\n+\n+        return this.newPhotoSphereImageCaptions;\n+    }\n+\n+    public String getUpdatedPhotoSphereImageReferenceUrlsJson() {\n+        return updatedPhotoSphereImageReferenceUrlsJson;\n+    }\n+\n+    public void setUpdatedPhotoSphereImageReferenceUrlsJson(String updatedPhotoSphereImageReferenceUrlsJson) {\n+        this.updatedPhotoSphereImageReferenceUrlsJson = updatedPhotoSphereImageReferenceUrlsJson;\n+    }\n+\n+    public Map<Integer, String> getUpdatedPhotoSphereImageReferenceUrlsById() {\n+        if (this.updatedPhotoSphereImageReferenceUrlsById == null) {\n+            this.updatedPhotoSphereImageReferenceUrlsById = this.deserializeMap(this.updatedPhotoSphereImageReferenceUrlsJson);\n+        }\n+\n+        return this.updatedPhotoSphereImageReferenceUrlsById;\n+    }\n+\n+    public String getUpdatedPhotoSphereImageCaptionsJson() {\n+        return updatedPhotoSphereImageCaptionsJson;\n+    }\n+\n+    public void setUpdatedPhotoSphereImageCaptionsJson(String updatedPhotoSphereImageCaptionsJson) {\n+        this.updatedPhotoSphereImageCaptionsJson = updatedPhotoSphereImageCaptionsJson;\n+    }\n+\n+    public Map<Integer, String> getUpdatedPhotoSphereImageCaptionsById() {\n+        if (this.updatedPhotoSphereImageCaptionsById == null) {\n+            this.updatedPhotoSphereImageCaptionsById = this.deserializeMap(this.updatedPhotoSphereImageCaptionsJson);\n+        }\n+\n+        return this.updatedPhotoSphereImageCaptionsById;\n+    }\n+\n     public String getDeletedPhotoSphereImageIdsJson() {\n         return this.deletedPhotoSphereImageIdsJson;\n     }"
  },
  {
    "sha": "b5907b565b4ce5f66e8fc3928a07c0196f3ad1ed",
    "filename": "src/main/java/com/monumental/services/MonumentService.java",
    "status": "modified",
    "additions": 52,
    "deletions": 7,
    "changes": 59,
    "blob_url": "https://github.com/team-monumental/monuments-and-memorials/blob/39d05e50ec2fee3b48620b168bfbd3b442096805/src/main/java/com/monumental/services/MonumentService.java",
    "raw_url": "https://github.com/team-monumental/monuments-and-memorials/raw/39d05e50ec2fee3b48620b168bfbd3b442096805/src/main/java/com/monumental/services/MonumentService.java",
    "contents_url": "https://api.github.com/repos/team-monumental/monuments-and-memorials/contents/src/main/java/com/monumental/services/MonumentService.java?ref=39d05e50ec2fee3b48620b168bfbd3b442096805",
    "patch": "@@ -906,10 +906,12 @@ public Monument createMonument(CreateMonumentSuggestion monumentSuggestion) {\n         /* Images Section */\n         List<Image> images = new ArrayList<>();\n         if (monumentSuggestion.getImages() != null && monumentSuggestion.getImages().size() > 0) {\n-            images.addAll(this.createMonumentImages(monumentSuggestion.getImages(), createdMonument, false));\n+            images.addAll(this.createMonumentImages(monumentSuggestion.getImages(),\n+                    monumentSuggestion.getImageReferenceUrls(), monumentSuggestion.getImageCaptions(), createdMonument, false));\n         }\n         if (monumentSuggestion.getPhotoSphereImages() != null && monumentSuggestion.getPhotoSphereImages().size() > 0) {\n-            images.addAll(this.createMonumentImages(monumentSuggestion.getPhotoSphereImages(), createdMonument, true));\n+            images.addAll(this.createMonumentImages(monumentSuggestion.getPhotoSphereImages(),\n+                    monumentSuggestion.getPhotoSphereImageReferenceUrls(), monumentSuggestion.getPhotoSphereImageCaptions(), createdMonument, true));\n         }\n         createdMonument.setImages(images);\n \n@@ -1066,11 +1068,13 @@ public Monument updateMonument(UpdateMonumentSuggestion updateSuggestion) {\n         // Add any new Images\n         List<Image> newImages = new ArrayList<>();\n         if (updateSuggestion.getNewImageUrls() != null && updateSuggestion.getNewImageUrls().size() > 0) {\n-            newImages.addAll(this.createMonumentImages(updateSuggestion.getNewImageUrls(), currentMonument, false));\n+            newImages.addAll(this.createMonumentImages(updateSuggestion.getNewImageUrls(),\n+                    updateSuggestion.getNewImageReferenceUrls(), updateSuggestion.getNewImageCaptions(), currentMonument, false));\n         }\n         if (updateSuggestion.getNewPhotoSphereImageUrls() != null &&\n                 updateSuggestion.getNewPhotoSphereImageUrls().size() > 0) {\n-            newImages.addAll(this.createMonumentImages(updateSuggestion.getNewPhotoSphereImageUrls(), currentMonument, true));\n+            newImages.addAll(this.createMonumentImages(updateSuggestion.getNewPhotoSphereImageUrls(),\n+                    updateSuggestion.getNewPhotoSphereImageReferenceUrls(), updateSuggestion.getNewPhotoSphereImageCaptions(), currentMonument, true));\n         }\n \n         // If the Monument does not have any Images, we can just set them\n@@ -1082,6 +1086,12 @@ public Monument updateMonument(UpdateMonumentSuggestion updateSuggestion) {\n             currentMonument.getImages().addAll(newImages);\n         }\n \n+        // Update image reference URLs and captions\n+        this.updateImageReferenceUrl(currentMonument, updateSuggestion.getUpdatedImageReferenceUrlsById());\n+        this.updateImageCaption(currentMonument, updateSuggestion.getUpdatedImageCaptionsById());\n+        this.updateImageReferenceUrl(currentMonument, updateSuggestion.getUpdatedPhotoSphereImageReferenceUrlsById());\n+        this.updateImageCaption(currentMonument, updateSuggestion.getUpdatedPhotoSphereImageCaptionsById());\n+\n         // Update the primary Image\n         this.updateMonumentPrimaryImage(currentMonument, updateSuggestion.getNewPrimaryImageId());\n \n@@ -1187,7 +1197,7 @@ public Monument updateMonument(UpdateMonumentSuggestion updateSuggestion) {\n      * @param arePhotoSphereImages - True if the specified imageUrls are for PhotoSphere images, False otherwise\n      * @return List<Image> - List of new Images with the specified imageUrls and associated with the specified Monument\n      */\n-    public List<Image> createMonumentImages(List<String> imageUrls, Monument monument, boolean arePhotoSphereImages) {\n+    public List<Image> createMonumentImages(List<String> imageUrls, List<String> imageReferenceUrls, List<String> imageCaptions, Monument monument, boolean arePhotoSphereImages) {\n         if (imageUrls == null || monument == null) {\n             return null;\n         }\n@@ -1205,10 +1215,20 @@ public Monument updateMonument(UpdateMonumentSuggestion updateSuggestion) {\n             }\n         }\n \n+        int i = 0;\n         for (String imageUrl : imageUrls) {\n             if (!isNullOrEmpty(imageUrl)) {\n                 Image image;\n \n+                String imageReferenceUrl = \"\";\n+                if (imageReferenceUrls != null && imageReferenceUrls.size() > i) {\n+                    imageReferenceUrl = imageReferenceUrls.get(i);\n+                }\n+                String imageCaption = \"\";\n+                if (imageCaptions != null && imageCaptions.size() > i) {\n+                    imageCaption = imageCaptions.get(i);\n+                }\n+\n                 if (!arePhotoSphereImages) {\n                     // Move image to permanent folder\n                     String objectKey = AwsS3Service.getObjectKey(imageUrl, false);\n@@ -1217,17 +1237,18 @@ public Monument updateMonument(UpdateMonumentSuggestion updateSuggestion) {\n \n                     imagesCount++;\n                     boolean isPrimary = imagesCount == 1;\n-                    image = new Image(permanentImageUrl, isPrimary);\n+                    image = new Image(permanentImageUrl, isPrimary, imageReferenceUrl, imageCaption);\n                 }\n                 else {\n-                    image = new Image(imageUrl, false);\n+                    image = new Image(imageUrl, false, imageReferenceUrl, imageCaption);\n                     image.setIsPhotoSphere(true);\n                 }\n \n                 image.setMonument(monument);\n                 image = this.imageRepository.save(image);\n                 images.add(image);\n             }\n+            i++;\n         }\n \n         return images;\n@@ -1285,6 +1306,30 @@ public void updateMonumentReferences(Monument monument, Map<Integer, String> new\n         }\n     }\n \n+    public void updateImageReferenceUrl(Monument monument, Map<Integer, String> updatedImageReferenceUrlsById) {\n+        if (monument != null && monument.getImages() != null && updatedImageReferenceUrlsById != null &&\n+                monument.getImages().size() > 0 && updatedImageReferenceUrlsById.size() > 0) {\n+            for (Image currentImage : monument.getImages()) {\n+                if (updatedImageReferenceUrlsById.containsKey(currentImage.getId())) {\n+                    currentImage.setReferenceUrl(updatedImageReferenceUrlsById.get(currentImage.getId()));\n+                    this.imageRepository.save(currentImage);\n+                }\n+            }\n+        }\n+    }\n+\n+    public void updateImageCaption(Monument monument, Map<Integer, String> updatedImageCaptionsById) {\n+        if (monument != null && monument.getImages() != null && updatedImageCaptionsById != null &&\n+                monument.getImages().size() > 0 && updatedImageCaptionsById.size() > 0) {\n+            for (Image currentImage : monument.getImages()) {\n+                if (updatedImageCaptionsById.containsKey(currentImage.getId())) {\n+                    currentImage.setCaption(updatedImageCaptionsById.get(currentImage.getId()));\n+                    this.imageRepository.save(currentImage);\n+                }\n+            }\n+        }\n+    }\n+\n     /**\n      * Delete the specified Monument's References based on the specified IDs\n      * @param monument - Monument whose associated References to delete"
  },
  {
    "sha": "fb00fd41d8df820fa8dc8738c0573be2d3838185",
    "filename": "src/main/java/com/monumental/util/csvparsing/CsvMonumentConverter.java",
    "status": "modified",
    "additions": 29,
    "deletions": 2,
    "changes": 31,
    "blob_url": "https://github.com/team-monumental/monuments-and-memorials/blob/39d05e50ec2fee3b48620b168bfbd3b442096805/src/main/java/com/monumental/util/csvparsing/CsvMonumentConverter.java",
    "raw_url": "https://github.com/team-monumental/monuments-and-memorials/raw/39d05e50ec2fee3b48620b168bfbd3b442096805/src/main/java/com/monumental/util/csvparsing/CsvMonumentConverter.java",
    "contents_url": "https://api.github.com/repos/team-monumental/monuments-and-memorials/contents/src/main/java/com/monumental/util/csvparsing/CsvMonumentConverter.java?ref=39d05e50ec2fee3b48620b168bfbd3b442096805",
    "patch": "@@ -199,7 +199,7 @@\n                             result.getTagNames().addAll(parseCsvArray(value));\n                             break;\n                         case \"references\":\n-                            result.getReferenceUrls().addAll(parseCsvArray(value));\n+                            result.getReferenceUrls().addAll(parseCsvArray(value, true));\n                             break;\n                         case \"is_temporary\":\n                             suggestion.setIsTemporary(Boolean.valueOf(value));\n@@ -232,6 +232,20 @@\n                                 result.getWarnings().add(\"Cannot upload images with a .csv file. You must package your .csv and your images into a .zip file and upload it.\");\n                             }\n                             break;\n+                        case \"imageReferenceUrls\":\n+                            if (zipFile != null) {\n+                                result.getImageReferenceUrls().addAll(parseCsvArray(value, true));\n+                            } else {\n+                                result.getWarnings().add(\"Cannot upload images with a .csv file. You must package your .csv and your images into a .zip file and upload it.\");\n+                            }\n+                            break;\n+                        case \"imageCaptions\":\n+                            if (zipFile != null) {\n+                                result.getImageCaptions().addAll(parseCsvArray(value));\n+                            } else {\n+                                result.getWarnings().add(\"Cannot upload images with a .csv file. You must package your .csv and your images into a .zip file and upload it.\");\n+                            }\n+                            break;\n                     }\n                 }\n \n@@ -338,13 +352,20 @@ private static boolean isDateInFuture(Date date) {\n     }\n \n     private static List<String> parseCsvArray(String value) {\n+        return parseCsvArray(value, false);\n+    }\n+\n+    private static List<String> parseCsvArray(String value, boolean isUrl) {\n         // Split on commas in-case there are more than one Tag in the column\n         String[] valueArray = value.split(\",\");\n \n         List<String> names = new ArrayList<>();\n \n         for (String arrayValue : valueArray) {\n-            String name = cleanTagName(arrayValue);\n+            String name = arrayValue;\n+            if (!isUrl) {\n+                name = cleanTagName(arrayValue);\n+            }\n             if (name == null || name.equals(\"\")) continue;\n             names.add(name);\n         }\n@@ -399,6 +420,12 @@ public static CreateMonumentSuggestion parseCsvMonumentConverterResult(CsvMonume\n         if (result.getMaterialNames() != null && result.getMaterialNames().size() > 0) {\n             suggestion.setMaterialsJson(gson.toJson(result.getMaterialNames()));\n         }\n+        if (result.getImageReferenceUrls() != null && result.getImageReferenceUrls().size() > 0) {\n+            suggestion.setImageReferenceUrlsJson(gson.toJson(result.getImageReferenceUrls()));\n+        }\n+        if (result.getImageCaptions() != null && result.getImageCaptions().size() > 0) {\n+            suggestion.setImageCaptionsJson(gson.toJson(result.getImageCaptions()));\n+        }\n \n         return suggestion;\n     }"
  },
  {
    "sha": "1f6fad13b64a35f4ceb88ee9c6b2f4516973480e",
    "filename": "src/main/java/com/monumental/util/csvparsing/CsvMonumentConverterResult.java",
    "status": "modified",
    "additions": 34,
    "deletions": 0,
    "changes": 34,
    "blob_url": "https://github.com/team-monumental/monuments-and-memorials/blob/39d05e50ec2fee3b48620b168bfbd3b442096805/src/main/java/com/monumental/util/csvparsing/CsvMonumentConverterResult.java",
    "raw_url": "https://github.com/team-monumental/monuments-and-memorials/raw/39d05e50ec2fee3b48620b168bfbd3b442096805/src/main/java/com/monumental/util/csvparsing/CsvMonumentConverterResult.java",
    "contents_url": "https://api.github.com/repos/team-monumental/monuments-and-memorials/contents/src/main/java/com/monumental/util/csvparsing/CsvMonumentConverterResult.java?ref=39d05e50ec2fee3b48620b168bfbd3b442096805",
    "patch": "@@ -30,6 +30,10 @@\n \n     private List<File> imageFiles = new ArrayList<>();\n \n+    private List<String> imageReferenceUrls = new ArrayList<>();\n+\n+    private List<String> imageCaptions = new ArrayList<>();\n+\n     private List<String> errors = new ArrayList<>();\n \n     private List<String> warnings = new ArrayList<>();\n@@ -82,6 +86,22 @@ public void setImageFiles(List<File> imageFiles) {\n         this.imageFiles = imageFiles;\n     }\n \n+    public List<String> getImageReferenceUrls() {\n+        return imageReferenceUrls;\n+    }\n+\n+    public void setImageReferenceUrls(List<String> imageReferenceUrls) {\n+        this.imageReferenceUrls = imageReferenceUrls;\n+    }\n+\n+    public List<String> getImageCaptions() {\n+        return imageCaptions;\n+    }\n+\n+    public void setImageCaptions(List<String> imageCaptions) {\n+        this.imageCaptions = imageCaptions;\n+    }\n+\n     public List<String> getErrors() {\n         return this.errors;\n     }\n@@ -176,5 +196,19 @@ public void validate() {\n                 }\n             }\n         }\n+\n+        /* Image Reference URL Validation */\n+        /* Check that the image references are valid URLs */\n+        if (this.imageReferenceUrls != null) {\n+            for (String imageReferenceUrl : this.imageReferenceUrls) {\n+                try {\n+                    URL url = new URL(imageReferenceUrl);\n+                } catch (MalformedURLException e) {\n+                    if (!this.getErrors().contains(\"All Image References must be valid URLs\")) {\n+                        this.getErrors().add(\"All Image References must be valid URLs\");\n+                    }\n+                }\n+            }\n+        }\n     }\n }"
  },
  {
    "sha": "7e346b38cd27f9a5fe34fc829ba7fab60afe15b7",
    "filename": "src/test/java/com/monumental/services/integrationtest/MonumentServiceIntegrationTests.java",
    "status": "modified",
    "additions": 424,
    "deletions": 14,
    "changes": 438,
    "blob_url": "https://github.com/team-monumental/monuments-and-memorials/blob/39d05e50ec2fee3b48620b168bfbd3b442096805/src/test/java/com/monumental/services/integrationtest/MonumentServiceIntegrationTests.java",
    "raw_url": "https://github.com/team-monumental/monuments-and-memorials/raw/39d05e50ec2fee3b48620b168bfbd3b442096805/src/test/java/com/monumental/services/integrationtest/MonumentServiceIntegrationTests.java",
    "contents_url": "https://api.github.com/repos/team-monumental/monuments-and-memorials/contents/src/test/java/com/monumental/services/integrationtest/MonumentServiceIntegrationTests.java?ref=39d05e50ec2fee3b48620b168bfbd3b442096805",
    "patch": "@@ -2674,18 +2674,18 @@ public void testMonumentService_createMonumentReferences_ThreeReferenceUrlsWithO\n     @Test\n     public void testMonumentService_createMonumentImages_NullImagesUrls_NonNullMonument() {\n         Monument monument = new Monument();\n-        assertNull(this.monumentService.createMonumentImages(null, monument, false));\n+        assertNull(this.monumentService.createMonumentImages(null, null, null, monument, false));\n     }\n \n     @Test\n     public void testMonumentService_createMonumentImages_NonNullImagesUrls_NullMonument() {\n         List<String> imageUrls = new ArrayList<>();\n-        assertNull(this.monumentService.createMonumentImages(imageUrls, null, false));\n+        assertNull(this.monumentService.createMonumentImages(imageUrls, new ArrayList<>(), new ArrayList<>(), null, false));\n     }\n \n     @Test\n     public void testMonumentService_createMonumentImages_NullImageUrls_NullMonument() {\n-        assertNull(this.monumentService.createMonumentImages(null, null, false));\n+        assertNull(this.monumentService.createMonumentImages(null, null, null, null, false));\n     }\n \n     @Test\n@@ -2694,7 +2694,7 @@ public void testMonumentService_createMonumentImages_EmptyImageUrls() {\n         Monument monument = new Monument();\n         monument = this.monumentRepository.save(monument);\n \n-        List<Image> result = this.monumentService.createMonumentImages(imageUrls, monument, false);\n+        List<Image> result = this.monumentService.createMonumentImages(imageUrls, new ArrayList<>(), new ArrayList<>(), monument, false);\n \n         assertEquals(0, result.size());\n     }\n@@ -2703,11 +2703,15 @@ public void testMonumentService_createMonumentImages_EmptyImageUrls() {\n     public void testMonumentService_createMonumentImages_OneNullImageUrl() {\n         List<String> imageUrls = new ArrayList<>();\n         imageUrls.add(null);\n+        List<String> imageReferenceUrls = new ArrayList<>();\n+        imageReferenceUrls.add(null);\n+        List<String> imageCaptions = new ArrayList<>();\n+        imageCaptions.add(null);\n \n         Monument monument = new Monument();\n         monument = this.monumentRepository.save(monument);\n \n-        List<Image> result = this.monumentService.createMonumentImages(imageUrls, monument, false);\n+        List<Image> result = this.monumentService.createMonumentImages(imageUrls, imageReferenceUrls, imageCaptions, monument, false);\n \n         assertEquals(0, result.size());\n     }\n@@ -2716,11 +2720,15 @@ public void testMonumentService_createMonumentImages_OneNullImageUrl() {\n     public void testMonumentService_createMonumentImages_OneEmptyImageUrl() {\n         List<String> imageUrls = new ArrayList<>();\n         imageUrls.add(\"\");\n+        List<String> imageReferenceUrls = new ArrayList<>();\n+        imageReferenceUrls.add(\"\");\n+        List<String> imageCaptions = new ArrayList<>();\n+        imageCaptions.add(\"\");\n \n         Monument monument = new Monument();\n         monument = this.monumentRepository.save(monument);\n \n-        List<Image> result = this.monumentService.createMonumentImages(imageUrls, monument, false);\n+        List<Image> result = this.monumentService.createMonumentImages(imageUrls, imageReferenceUrls, imageCaptions, monument, false);\n \n         assertEquals(0, result.size());\n     }\n@@ -2730,11 +2738,17 @@ public void testMonumentService_createMonumentImages_OneNullAndOneEmptyImageUrl(\n         List<String> imageUrls = new ArrayList<>();\n         imageUrls.add(null);\n         imageUrls.add(\"\");\n+        List<String> imageReferenceUrls = new ArrayList<>();\n+        imageReferenceUrls.add(\"\");\n+        imageReferenceUrls.add(\"\");\n+        List<String> imageCaptions = new ArrayList<>();\n+        imageCaptions.add(\"\");\n+        imageReferenceUrls.add(\"\");\n \n         Monument monument = new Monument();\n         monument = this.monumentRepository.save(monument);\n \n-        List<Image> result = this.monumentService.createMonumentImages(imageUrls, monument, false);\n+        List<Image> result = this.monumentService.createMonumentImages(imageUrls, imageReferenceUrls, imageCaptions, monument, false);\n \n         assertEquals(0, result.size());\n     }\n@@ -2743,12 +2757,16 @@ public void testMonumentService_createMonumentImages_OneNullAndOneEmptyImageUrl(\n     public void testMonumentService_createMonumentImages_OneImageUrl() {\n         List<String> imageUrls = new ArrayList<>();\n         imageUrls.add(\"test\");\n+        List<String> imageReferenceUrls = new ArrayList<>();\n+        imageReferenceUrls.add(\"\");\n+        List<String> imageCaptions = new ArrayList<>();\n+        imageCaptions.add(\"\");\n \n         Monument monument = new Monument();\n         monument.setTitle(\"Monument\");\n         monument = this.monumentRepository.save(monument);\n \n-        List<Image> result = this.monumentService.createMonumentImages(imageUrls, monument, false);\n+        List<Image> result = this.monumentService.createMonumentImages(imageUrls, imageReferenceUrls, imageCaptions, monument, false);\n \n         assertEquals(1, result.size());\n \n@@ -2757,12 +2775,18 @@ public void testMonumentService_createMonumentImages_OneImageUrl() {\n         assertTrue(image.getIsPrimary());\n         assertEquals(\"Monument\", image.getMonument().getTitle());\n         assertFalse(image.getIsPhotoSphere());\n+        assertEquals(\"\", image.getReferenceUrl());\n+        assertEquals(\"\", image.getCaption());\n     }\n \n     @Test\n     public void testMonumentService_createMonumentImages_OneImageUrl_MonumentAlreadyHasImages_NoPrimary() {\n         List<String> imageUrls = new ArrayList<>();\n         imageUrls.add(\"test1\");\n+        List<String> imageReferenceUrls = new ArrayList<>();\n+        imageReferenceUrls.add(\"\");\n+        List<String> imageCaptions = new ArrayList<>();\n+        imageCaptions.add(\"\");\n \n         Monument monument = new Monument();\n         monument.setTitle(\"Monument\");\n@@ -2773,7 +2797,7 @@ public void testMonumentService_createMonumentImages_OneImageUrl_MonumentAlready\n \n         monument.setImages(monumentImages);\n \n-        List<Image> result = this.monumentService.createMonumentImages(imageUrls, monument, false);\n+        List<Image> result = this.monumentService.createMonumentImages(imageUrls, imageReferenceUrls, imageCaptions, monument, false);\n \n         assertEquals(1, result.size());\n \n@@ -2782,12 +2806,18 @@ public void testMonumentService_createMonumentImages_OneImageUrl_MonumentAlready\n         assertTrue(image.getIsPrimary());\n         assertEquals(\"Monument\", image.getMonument().getTitle());\n         assertFalse(image.getIsPhotoSphere());\n+        assertEquals(\"\", image.getReferenceUrl());\n+        assertEquals(\"\", image.getCaption());\n     }\n \n     @Test\n     public void testMonumentService_createMonumentImages_OneImageUrl_MonumentAlreadyHasPrimaryImage() {\n         List<String> imageUrls = new ArrayList<>();\n         imageUrls.add(\"test1\");\n+        List<String> imageReferenceUrls = new ArrayList<>();\n+        imageReferenceUrls.add(\"\");\n+        List<String> imageCaptions = new ArrayList<>();\n+        imageCaptions.add(\"\");\n \n         Monument monument = new Monument();\n         monument.setTitle(\"Monument\");\n@@ -2798,7 +2828,7 @@ public void testMonumentService_createMonumentImages_OneImageUrl_MonumentAlready\n \n         monument.setImages(monumentImages);\n \n-        List<Image> result = this.monumentService.createMonumentImages(imageUrls, monument, false);\n+        List<Image> result = this.monumentService.createMonumentImages(imageUrls, imageReferenceUrls, imageCaptions, monument, false);\n \n         assertEquals(1, result.size());\n \n@@ -2807,6 +2837,8 @@ public void testMonumentService_createMonumentImages_OneImageUrl_MonumentAlready\n         assertFalse(image.getIsPrimary());\n         assertEquals(\"Monument\", image.getMonument().getTitle());\n         assertFalse(image.getIsPhotoSphere());\n+        assertEquals(\"\", image.getReferenceUrl());\n+        assertEquals(\"\", image.getCaption());\n     }\n \n     @Test\n@@ -2817,12 +2849,24 @@ public void testMonumentService_createMonumentImages_ThreeImageUrlsWithOneNullAn\n         imageUrls.add(\"test3\");\n         imageUrls.add(null);\n         imageUrls.add(\"\");\n+        List<String> imageReferenceUrls = new ArrayList<>();\n+        imageReferenceUrls.add(\"\");\n+        imageReferenceUrls.add(\"\");\n+        imageReferenceUrls.add(\"\");\n+        imageReferenceUrls.add(\"\");\n+        imageReferenceUrls.add(\"\");\n+        List<String> imageCaptions = new ArrayList<>();\n+        imageCaptions.add(\"\");\n+        imageCaptions.add(\"\");\n+        imageCaptions.add(\"\");\n+        imageCaptions.add(\"\");\n+        imageCaptions.add(\"\");\n \n         Monument monument = new Monument();\n         monument.setTitle(\"Monument\");\n         monument = this.monumentRepository.save(monument);\n \n-        List<Image> result = this.monumentService.createMonumentImages(imageUrls, monument, false);\n+        List<Image> result = this.monumentService.createMonumentImages(imageUrls, imageReferenceUrls, imageCaptions, monument, false);\n \n         assertEquals(3, result.size());\n \n@@ -2831,18 +2875,24 @@ public void testMonumentService_createMonumentImages_ThreeImageUrlsWithOneNullAn\n         assertTrue(image1.getIsPrimary());\n         assertEquals(\"Monument\", image1.getMonument().getTitle());\n         assertFalse(image1.getIsPhotoSphere());\n+        assertEquals(\"\", image1.getReferenceUrl());\n+        assertEquals(\"\", image1.getCaption());\n \n         Image image2 = result.get(1);\n         assertEquals(\"https://monuments-and-memorials.s3.us-east-2.amazonaws.com/Test+URL\", image2.getUrl());\n         assertFalse(image2.getIsPrimary());\n         assertEquals(\"Monument\", image2.getMonument().getTitle());\n         assertFalse(image2.getIsPhotoSphere());\n+        assertEquals(\"\", image2.getReferenceUrl());\n+        assertEquals(\"\", image2.getCaption());\n \n         Image image3 = result.get(2);\n         assertEquals(\"https://monuments-and-memorials.s3.us-east-2.amazonaws.com/Test+URL\", image3.getUrl());\n         assertFalse(image3.getIsPrimary());\n         assertEquals(\"Monument\", image3.getMonument().getTitle());\n         assertFalse(image3.getIsPhotoSphere());\n+        assertEquals(\"\", image3.getReferenceUrl());\n+        assertEquals(\"\", image3.getCaption());\n     }\n \n     @Test\n@@ -2853,6 +2903,18 @@ public void testMonumentService_createMonumentImages_ThreeImageUrlsWithOneNullAn\n         imageUrls.add(\"test3\");\n         imageUrls.add(null);\n         imageUrls.add(\"\");\n+        List<String> imageReferenceUrls = new ArrayList<>();\n+        imageReferenceUrls.add(\"\");\n+        imageReferenceUrls.add(\"\");\n+        imageReferenceUrls.add(\"\");\n+        imageReferenceUrls.add(\"\");\n+        imageReferenceUrls.add(\"\");\n+        List<String> imageCaptions = new ArrayList<>();\n+        imageCaptions.add(\"\");\n+        imageCaptions.add(\"\");\n+        imageCaptions.add(\"\");\n+        imageCaptions.add(\"\");\n+        imageCaptions.add(\"\");\n \n         Monument monument = new Monument();\n         monument.setTitle(\"Monument\");\n@@ -2863,7 +2925,7 @@ public void testMonumentService_createMonumentImages_ThreeImageUrlsWithOneNullAn\n \n         monument.setImages(monumentImages);\n \n-        List<Image> result = this.monumentService.createMonumentImages(imageUrls, monument, false);\n+        List<Image> result = this.monumentService.createMonumentImages(imageUrls, imageReferenceUrls, imageCaptions, monument, false);\n \n         assertEquals(3, result.size());\n \n@@ -2872,18 +2934,24 @@ public void testMonumentService_createMonumentImages_ThreeImageUrlsWithOneNullAn\n         assertTrue(image1.getIsPrimary());\n         assertEquals(\"Monument\", image1.getMonument().getTitle());\n         assertFalse(image1.getIsPhotoSphere());\n+        assertEquals(\"\", image1.getReferenceUrl());\n+        assertEquals(\"\", image1.getCaption());\n \n         Image image2 = result.get(1);\n         assertEquals(\"https://monuments-and-memorials.s3.us-east-2.amazonaws.com/Test+URL\", image2.getUrl());\n         assertFalse(image2.getIsPrimary());\n         assertEquals(\"Monument\", image2.getMonument().getTitle());\n         assertFalse(image2.getIsPhotoSphere());\n+        assertEquals(\"\", image2.getReferenceUrl());\n+        assertEquals(\"\", image2.getCaption());\n \n         Image image3 = result.get(2);\n         assertEquals(\"https://monuments-and-memorials.s3.us-east-2.amazonaws.com/Test+URL\", image3.getUrl());\n         assertFalse(image3.getIsPrimary());\n         assertEquals(\"Monument\", image3.getMonument().getTitle());\n         assertFalse(image3.getIsPhotoSphere());\n+        assertEquals(\"\", image3.getReferenceUrl());\n+        assertEquals(\"\", image3.getCaption());\n     }\n \n     @Test\n@@ -2894,6 +2962,18 @@ public void testMonumentService_createMonumentImages_ThreeImageUrlsWithOneNullAn\n         imageUrls.add(\"test3\");\n         imageUrls.add(null);\n         imageUrls.add(\"\");\n+        List<String> imageReferenceUrls = new ArrayList<>();\n+        imageReferenceUrls.add(\"\");\n+        imageReferenceUrls.add(\"\");\n+        imageReferenceUrls.add(\"\");\n+        imageReferenceUrls.add(\"\");\n+        imageReferenceUrls.add(\"\");\n+        List<String> imageCaptions = new ArrayList<>();\n+        imageCaptions.add(\"\");\n+        imageCaptions.add(\"\");\n+        imageCaptions.add(\"\");\n+        imageCaptions.add(\"\");\n+        imageCaptions.add(\"\");\n \n         Monument monument = new Monument();\n         monument.setTitle(\"Monument\");\n@@ -2904,7 +2984,7 @@ public void testMonumentService_createMonumentImages_ThreeImageUrlsWithOneNullAn\n \n         monument.setImages(monumentImages);\n \n-        List<Image> result = this.monumentService.createMonumentImages(imageUrls, monument, false);\n+        List<Image> result = this.monumentService.createMonumentImages(imageUrls, imageReferenceUrls, imageCaptions, monument, false);\n \n         assertEquals(3, result.size());\n \n@@ -2913,18 +2993,24 @@ public void testMonumentService_createMonumentImages_ThreeImageUrlsWithOneNullAn\n         assertFalse(image1.getIsPrimary());\n         assertEquals(\"Monument\", image1.getMonument().getTitle());\n         assertFalse(image1.getIsPhotoSphere());\n+        assertEquals(\"\", image1.getReferenceUrl());\n+        assertEquals(\"\", image1.getCaption());\n \n         Image image2 = result.get(1);\n         assertEquals(\"https://monuments-and-memorials.s3.us-east-2.amazonaws.com/Test+URL\", image2.getUrl());\n         assertFalse(image2.getIsPrimary());\n         assertEquals(\"Monument\", image2.getMonument().getTitle());\n         assertFalse(image2.getIsPhotoSphere());\n+        assertEquals(\"\", image2.getReferenceUrl());\n+        assertEquals(\"\", image2.getCaption());\n \n         Image image3 = result.get(2);\n         assertEquals(\"https://monuments-and-memorials.s3.us-east-2.amazonaws.com/Test+URL\", image3.getUrl());\n         assertFalse(image3.getIsPrimary());\n         assertEquals(\"Monument\", image3.getMonument().getTitle());\n         assertFalse(image3.getIsPhotoSphere());\n+        assertEquals(\"\", image3.getReferenceUrl());\n+        assertEquals(\"\", image3.getCaption());\n     }\n \n     @Test\n@@ -2935,12 +3021,24 @@ public void testMonumentService_createMonumentImages_ThreePhotoSphereImageUrlsWi\n         imageUrls.add(\"test3\");\n         imageUrls.add(null);\n         imageUrls.add(\"\");\n+        List<String> imageReferenceUrls = new ArrayList<>();\n+        imageReferenceUrls.add(\"\");\n+        imageReferenceUrls.add(\"\");\n+        imageReferenceUrls.add(\"\");\n+        imageReferenceUrls.add(\"\");\n+        imageReferenceUrls.add(\"\");\n+        List<String> imageCaptions = new ArrayList<>();\n+        imageCaptions.add(\"\");\n+        imageCaptions.add(\"\");\n+        imageCaptions.add(\"\");\n+        imageCaptions.add(\"\");\n+        imageCaptions.add(\"\");\n \n         Monument monument = new Monument();\n         monument.setTitle(\"Monument\");\n         monument = this.monumentRepository.save(monument);\n \n-        List<Image> result = this.monumentService.createMonumentImages(imageUrls, monument, true);\n+        List<Image> result = this.monumentService.createMonumentImages(imageUrls, imageReferenceUrls, imageCaptions, monument, true);\n \n         assertEquals(3, result.size());\n \n@@ -2949,18 +3047,330 @@ public void testMonumentService_createMonumentImages_ThreePhotoSphereImageUrlsWi\n         assertFalse(image1.getIsPrimary());\n         assertEquals(\"Monument\", image1.getMonument().getTitle());\n         assertTrue(image1.getIsPhotoSphere());\n+        assertEquals(\"\", image1.getReferenceUrl());\n+        assertEquals(\"\", image1.getCaption());\n \n         Image image2 = result.get(1);\n         assertEquals(\"test2\", image2.getUrl());\n         assertFalse(image2.getIsPrimary());\n         assertEquals(\"Monument\", image2.getMonument().getTitle());\n         assertTrue(image2.getIsPhotoSphere());\n+        assertEquals(\"\", image2.getReferenceUrl());\n+        assertEquals(\"\", image2.getCaption());\n \n         Image image3 = result.get(2);\n         assertEquals(\"test3\", image3.getUrl());\n         assertFalse(image3.getIsPrimary());\n         assertEquals(\"Monument\", image3.getMonument().getTitle());\n         assertTrue(image3.getIsPhotoSphere());\n+        assertEquals(\"\", image3.getReferenceUrl());\n+        assertEquals(\"\", image3.getCaption());\n+    }\n+\n+    @Test\n+    public void testMonumentService_createMonumentImages_ThreeImageUrlsWithOneNullAndOneEmpty_SomeReferenceUrls() {\n+        List<String> imageUrls = new ArrayList<>();\n+        imageUrls.add(\"test1\");\n+        imageUrls.add(\"test2\");\n+        imageUrls.add(\"test3\");\n+        imageUrls.add(null);\n+        imageUrls.add(\"\");\n+        List<String> imageReferenceUrls = new ArrayList<>();\n+        imageReferenceUrls.add(\"reference url 1\");\n+        imageReferenceUrls.add(\"\");\n+        imageReferenceUrls.add(\"reference url 3\");\n+        imageReferenceUrls.add(\"\");\n+        imageReferenceUrls.add(\"\");\n+        List<String> imageCaptions = new ArrayList<>();\n+        imageCaptions.add(\"\");\n+        imageCaptions.add(\"\");\n+        imageCaptions.add(\"\");\n+        imageCaptions.add(\"\");\n+        imageCaptions.add(\"\");\n+\n+        Monument monument = new Monument();\n+        monument.setTitle(\"Monument\");\n+        monument = this.monumentRepository.save(monument);\n+\n+        List<Image> result = this.monumentService.createMonumentImages(imageUrls, imageReferenceUrls, imageCaptions, monument, false);\n+\n+        assertEquals(3, result.size());\n+\n+        Image image1 = result.get(0);\n+        assertEquals(\"https://monuments-and-memorials.s3.us-east-2.amazonaws.com/Test+URL\", image1.getUrl());\n+        assertTrue(image1.getIsPrimary());\n+        assertEquals(\"Monument\", image1.getMonument().getTitle());\n+        assertFalse(image1.getIsPhotoSphere());\n+        assertEquals(\"reference url 1\", image1.getReferenceUrl());\n+        assertEquals(\"\", image1.getCaption());\n+\n+        Image image2 = result.get(1);\n+        assertEquals(\"https://monuments-and-memorials.s3.us-east-2.amazonaws.com/Test+URL\", image2.getUrl());\n+        assertFalse(image2.getIsPrimary());\n+        assertEquals(\"Monument\", image2.getMonument().getTitle());\n+        assertFalse(image2.getIsPhotoSphere());\n+        assertEquals(\"\", image2.getReferenceUrl());\n+        assertEquals(\"\", image2.getCaption());\n+\n+        Image image3 = result.get(2);\n+        assertEquals(\"https://monuments-and-memorials.s3.us-east-2.amazonaws.com/Test+URL\", image3.getUrl());\n+        assertFalse(image3.getIsPrimary());\n+        assertEquals(\"Monument\", image3.getMonument().getTitle());\n+        assertFalse(image3.getIsPhotoSphere());\n+        assertEquals(\"reference url 3\", image3.getReferenceUrl());\n+        assertEquals(\"\", image3.getCaption());\n+    }\n+\n+    @Test\n+    public void testMonumentService_createMonumentImages_ThreeImageUrlsWithOneNullAndOneEmpty_SomeCaptions() {\n+        List<String> imageUrls = new ArrayList<>();\n+        imageUrls.add(\"test1\");\n+        imageUrls.add(\"test2\");\n+        imageUrls.add(\"test3\");\n+        imageUrls.add(null);\n+        imageUrls.add(\"\");\n+        List<String> imageReferenceUrls = new ArrayList<>();\n+        imageReferenceUrls.add(\"\");\n+        imageReferenceUrls.add(\"\");\n+        imageReferenceUrls.add(\"\");\n+        imageReferenceUrls.add(\"\");\n+        imageReferenceUrls.add(\"\");\n+        List<String> imageCaptions = new ArrayList<>();\n+        imageCaptions.add(\"\");\n+        imageCaptions.add(\"caption 2\");\n+        imageCaptions.add(\"caption 3\");\n+        imageCaptions.add(\"\");\n+        imageCaptions.add(\"\");\n+\n+        Monument monument = new Monument();\n+        monument.setTitle(\"Monument\");\n+        monument = this.monumentRepository.save(monument);\n+\n+        List<Image> result = this.monumentService.createMonumentImages(imageUrls, imageReferenceUrls, imageCaptions, monument, false);\n+\n+        assertEquals(3, result.size());\n+\n+        Image image1 = result.get(0);\n+        assertEquals(\"https://monuments-and-memorials.s3.us-east-2.amazonaws.com/Test+URL\", image1.getUrl());\n+        assertTrue(image1.getIsPrimary());\n+        assertEquals(\"Monument\", image1.getMonument().getTitle());\n+        assertFalse(image1.getIsPhotoSphere());\n+        assertEquals(\"\", image1.getReferenceUrl());\n+        assertEquals(\"\", image1.getCaption());\n+\n+        Image image2 = result.get(1);\n+        assertEquals(\"https://monuments-and-memorials.s3.us-east-2.amazonaws.com/Test+URL\", image2.getUrl());\n+        assertFalse(image2.getIsPrimary());\n+        assertEquals(\"Monument\", image2.getMonument().getTitle());\n+        assertFalse(image2.getIsPhotoSphere());\n+        assertEquals(\"\", image2.getReferenceUrl());\n+        assertEquals(\"caption 2\", image2.getCaption());\n+\n+        Image image3 = result.get(2);\n+        assertEquals(\"https://monuments-and-memorials.s3.us-east-2.amazonaws.com/Test+URL\", image3.getUrl());\n+        assertFalse(image3.getIsPrimary());\n+        assertEquals(\"Monument\", image3.getMonument().getTitle());\n+        assertFalse(image3.getIsPhotoSphere());\n+        assertEquals(\"\", image3.getReferenceUrl());\n+        assertEquals(\"caption 3\", image3.getCaption());\n+    }\n+\n+    @Test\n+    public void testMonumentService_createMonumentImages_ThreeImageUrlsWithOneNullAndOneEmpty_NotEnoughReferenceUrls() {\n+        List<String> imageUrls = new ArrayList<>();\n+        imageUrls.add(\"test1\");\n+        imageUrls.add(\"test2\");\n+        imageUrls.add(\"test3\");\n+        imageUrls.add(null);\n+        imageUrls.add(\"\");\n+        List<String> imageReferenceUrls = new ArrayList<>();\n+        imageReferenceUrls.add(\"\");\n+        imageReferenceUrls.add(\"reference url 2\");\n+        List<String> imageCaptions = new ArrayList<>();\n+        imageCaptions.add(\"\");\n+        imageCaptions.add(\"\");\n+        imageCaptions.add(\"\");\n+        imageCaptions.add(\"\");\n+        imageCaptions.add(\"\");\n+\n+        Monument monument = new Monument();\n+        monument.setTitle(\"Monument\");\n+        monument = this.monumentRepository.save(monument);\n+\n+        List<Image> result = this.monumentService.createMonumentImages(imageUrls, imageReferenceUrls, imageCaptions, monument, false);\n+\n+        assertEquals(3, result.size());\n+\n+        Image image1 = result.get(0);\n+        assertEquals(\"https://monuments-and-memorials.s3.us-east-2.amazonaws.com/Test+URL\", image1.getUrl());\n+        assertTrue(image1.getIsPrimary());\n+        assertEquals(\"Monument\", image1.getMonument().getTitle());\n+        assertFalse(image1.getIsPhotoSphere());\n+        assertEquals(\"\", image1.getReferenceUrl());\n+        assertEquals(\"\", image1.getCaption());\n+\n+        Image image2 = result.get(1);\n+        assertEquals(\"https://monuments-and-memorials.s3.us-east-2.amazonaws.com/Test+URL\", image2.getUrl());\n+        assertFalse(image2.getIsPrimary());\n+        assertEquals(\"Monument\", image2.getMonument().getTitle());\n+        assertFalse(image2.getIsPhotoSphere());\n+        assertEquals(\"reference url 2\", image2.getReferenceUrl());\n+        assertEquals(\"\", image2.getCaption());\n+\n+        Image image3 = result.get(2);\n+        assertEquals(\"https://monuments-and-memorials.s3.us-east-2.amazonaws.com/Test+URL\", image3.getUrl());\n+        assertFalse(image3.getIsPrimary());\n+        assertEquals(\"Monument\", image3.getMonument().getTitle());\n+        assertFalse(image3.getIsPhotoSphere());\n+        assertEquals(\"\", image3.getReferenceUrl());\n+        assertEquals(\"\", image3.getCaption());\n+    }\n+\n+    @Test\n+    public void testMonumentService_createMonumentImages_ThreeImageUrlsWithOneNullAndOneEmpty_NotEnoughCaptions() {\n+        List<String> imageUrls = new ArrayList<>();\n+        imageUrls.add(\"test1\");\n+        imageUrls.add(\"test2\");\n+        imageUrls.add(\"test3\");\n+        imageUrls.add(null);\n+        imageUrls.add(\"\");\n+        List<String> imageReferenceUrls = new ArrayList<>();\n+        imageReferenceUrls.add(\"\");\n+        imageReferenceUrls.add(\"\");\n+        imageReferenceUrls.add(\"\");\n+        imageReferenceUrls.add(\"\");\n+        imageReferenceUrls.add(\"\");\n+        List<String> imageCaptions = new ArrayList<>();\n+        imageCaptions.add(\"\");\n+        imageCaptions.add(\"caption 2\");\n+\n+        Monument monument = new Monument();\n+        monument.setTitle(\"Monument\");\n+        monument = this.monumentRepository.save(monument);\n+\n+        List<Image> result = this.monumentService.createMonumentImages(imageUrls, imageReferenceUrls, imageCaptions, monument, false);\n+\n+        assertEquals(3, result.size());\n+\n+        Image image1 = result.get(0);\n+        assertEquals(\"https://monuments-and-memorials.s3.us-east-2.amazonaws.com/Test+URL\", image1.getUrl());\n+        assertTrue(image1.getIsPrimary());\n+        assertEquals(\"Monument\", image1.getMonument().getTitle());\n+        assertFalse(image1.getIsPhotoSphere());\n+        assertEquals(\"\", image1.getReferenceUrl());\n+        assertEquals(\"\", image1.getCaption());\n+\n+        Image image2 = result.get(1);\n+        assertEquals(\"https://monuments-and-memorials.s3.us-east-2.amazonaws.com/Test+URL\", image2.getUrl());\n+        assertFalse(image2.getIsPrimary());\n+        assertEquals(\"Monument\", image2.getMonument().getTitle());\n+        assertFalse(image2.getIsPhotoSphere());\n+        assertEquals(\"\", image2.getReferenceUrl());\n+        assertEquals(\"caption 2\", image2.getCaption());\n+\n+        Image image3 = result.get(2);\n+        assertEquals(\"https://monuments-and-memorials.s3.us-east-2.amazonaws.com/Test+URL\", image3.getUrl());\n+        assertFalse(image3.getIsPrimary());\n+        assertEquals(\"Monument\", image3.getMonument().getTitle());\n+        assertFalse(image3.getIsPhotoSphere());\n+        assertEquals(\"\", image3.getReferenceUrl());\n+        assertEquals(\"\", image3.getCaption());\n+    }\n+\n+    @Test\n+    public void testMonumentService_createMonumentImages_ThreeImageUrlsWithOneNullAndOneEmpty_NullReferenceUrls() {\n+        List<String> imageUrls = new ArrayList<>();\n+        imageUrls.add(\"test1\");\n+        imageUrls.add(\"test2\");\n+        imageUrls.add(\"test3\");\n+        imageUrls.add(null);\n+        imageUrls.add(\"\");\n+        List<String> imageCaptions = new ArrayList<>();\n+        imageCaptions.add(\"\");\n+        imageCaptions.add(\"\");\n+        imageCaptions.add(\"\");\n+        imageCaptions.add(\"\");\n+        imageCaptions.add(\"\");\n+\n+        Monument monument = new Monument();\n+        monument.setTitle(\"Monument\");\n+        monument = this.monumentRepository.save(monument);\n+\n+        List<Image> result = this.monumentService.createMonumentImages(imageUrls, null, imageCaptions, monument, false);\n+\n+        assertEquals(3, result.size());\n+\n+        Image image1 = result.get(0);\n+        assertEquals(\"https://monuments-and-memorials.s3.us-east-2.amazonaws.com/Test+URL\", image1.getUrl());\n+        assertTrue(image1.getIsPrimary());\n+        assertEquals(\"Monument\", image1.getMonument().getTitle());\n+        assertFalse(image1.getIsPhotoSphere());\n+        assertEquals(\"\", image1.getReferenceUrl());\n+        assertEquals(\"\", image1.getCaption());\n+\n+        Image image2 = result.get(1);\n+        assertEquals(\"https://monuments-and-memorials.s3.us-east-2.amazonaws.com/Test+URL\", image2.getUrl());\n+        assertFalse(image2.getIsPrimary());\n+        assertEquals(\"Monument\", image2.getMonument().getTitle());\n+        assertFalse(image2.getIsPhotoSphere());\n+        assertEquals(\"\", image2.getReferenceUrl());\n+        assertEquals(\"\", image2.getCaption());\n+\n+        Image image3 = result.get(2);\n+        assertEquals(\"https://monuments-and-memorials.s3.us-east-2.amazonaws.com/Test+URL\", image3.getUrl());\n+        assertFalse(image3.getIsPrimary());\n+        assertEquals(\"Monument\", image3.getMonument().getTitle());\n+        assertFalse(image3.getIsPhotoSphere());\n+        assertEquals(\"\", image3.getReferenceUrl());\n+        assertEquals(\"\", image3.getCaption());\n+    }\n+\n+    @Test\n+    public void testMonumentService_createMonumentImages_ThreeImageUrlsWithOneNullAndOneEmpty_NullCaptions() {\n+        List<String> imageUrls = new ArrayList<>();\n+        imageUrls.add(\"test1\");\n+        imageUrls.add(\"test2\");\n+        imageUrls.add(\"test3\");\n+        imageUrls.add(null);\n+        imageUrls.add(\"\");\n+        List<String> imageReferenceUrls = new ArrayList<>();\n+        imageReferenceUrls.add(\"\");\n+        imageReferenceUrls.add(\"\");\n+        imageReferenceUrls.add(\"\");\n+        imageReferenceUrls.add(\"\");\n+        imageReferenceUrls.add(\"\");\n+\n+        Monument monument = new Monument();\n+        monument.setTitle(\"Monument\");\n+        monument = this.monumentRepository.save(monument);\n+\n+        List<Image> result = this.monumentService.createMonumentImages(imageUrls, imageReferenceUrls, null, monument, false);\n+\n+        assertEquals(3, result.size());\n+\n+        Image image1 = result.get(0);\n+        assertEquals(\"https://monuments-and-memorials.s3.us-east-2.amazonaws.com/Test+URL\", image1.getUrl());\n+        assertTrue(image1.getIsPrimary());\n+        assertEquals(\"Monument\", image1.getMonument().getTitle());\n+        assertFalse(image1.getIsPhotoSphere());\n+        assertEquals(\"\", image1.getReferenceUrl());\n+        assertEquals(\"\", image1.getCaption());\n+\n+        Image image2 = result.get(1);\n+        assertEquals(\"https://monuments-and-memorials.s3.us-east-2.amazonaws.com/Test+URL\", image2.getUrl());\n+        assertFalse(image2.getIsPrimary());\n+        assertEquals(\"Monument\", image2.getMonument().getTitle());\n+        assertFalse(image2.getIsPhotoSphere());\n+        assertEquals(\"\", image2.getReferenceUrl());\n+        assertEquals(\"\", image2.getCaption());\n+\n+        Image image3 = result.get(2);\n+        assertEquals(\"https://monuments-and-memorials.s3.us-east-2.amazonaws.com/Test+URL\", image3.getUrl());\n+        assertFalse(image3.getIsPrimary());\n+        assertEquals(\"Monument\", image3.getMonument().getTitle());\n+        assertFalse(image3.getIsPhotoSphere());\n+        assertEquals(\"\", image3.getReferenceUrl());\n+        assertEquals(\"\", image3.getCaption());\n     }\n \n     /* updateMonumentTags Tests */"
  },
  {
    "sha": "dad6061b917016f3eb56ca1b865d3228c02f0823",
    "filename": "src/test/java/com/monumental/util/csvparsing/unittests/CsvMonumentConverterUnitTests.java",
    "status": "modified",
    "additions": 52,
    "deletions": 0,
    "changes": 52,
    "blob_url": "https://github.com/team-monumental/monuments-and-memorials/blob/39d05e50ec2fee3b48620b168bfbd3b442096805/src/test/java/com/monumental/util/csvparsing/unittests/CsvMonumentConverterUnitTests.java",
    "raw_url": "https://github.com/team-monumental/monuments-and-memorials/raw/39d05e50ec2fee3b48620b168bfbd3b442096805/src/test/java/com/monumental/util/csvparsing/unittests/CsvMonumentConverterUnitTests.java",
    "contents_url": "https://api.github.com/repos/team-monumental/monuments-and-memorials/contents/src/test/java/com/monumental/util/csvparsing/unittests/CsvMonumentConverterUnitTests.java?ref=39d05e50ec2fee3b48620b168bfbd3b442096805",
    "patch": "@@ -38,6 +38,8 @@ public void testCsvMonumentConverter_convertCsvRow_AllEmptyValues() {\n         assertEquals(0, result.getContributorNames().size());\n         assertEquals(0, result.getReferenceUrls().size());\n         assertEquals(0, result.getImageFiles().size());\n+        assertEquals(0, result.getImageReferenceUrls().size());\n+        assertEquals(0, result.getImageCaptions().size());\n \n         assertNull(suggestionResult.getArtist());\n         assertNull(suggestionResult.getTitle());\n@@ -69,6 +71,8 @@ public void testCsvMonumentConverter_convertCsvRow_VariousValues() {\n         assertEquals(1, result.getContributorNames().size());\n         assertEquals(1, result.getReferenceUrls().size());\n         assertEquals(0, result.getImageFiles().size());\n+        assertEquals(0, result.getImageReferenceUrls().size());\n+        assertEquals(0, result.getImageCaptions().size());\n \n         assertEquals(\"Test Artist\", suggestionResult.getArtist());\n         assertEquals(\"Test Title\", suggestionResult.getTitle());\n@@ -101,6 +105,8 @@ public void testCsvMonumentConverter_convertCsvRow_VariousValues_DateFormatYear(\n         assertEquals(1, result.getContributorNames().size());\n         assertEquals(1, result.getReferenceUrls().size());\n         assertEquals(0, result.getImageFiles().size());\n+        assertEquals(0, result.getImageReferenceUrls().size());\n+        assertEquals(0, result.getImageCaptions().size());\n \n         assertEquals(\"Test Artist\", suggestionResult.getArtist());\n         assertEquals(\"Test Title\", suggestionResult.getTitle());\n@@ -134,6 +140,8 @@ public void testCsvMonumentConverter_convertCsvRow_VariousValues_DateFormatDayMo\n         assertEquals(1, result.getContributorNames().size());\n         assertEquals(1, result.getReferenceUrls().size());\n         assertEquals(0, result.getImageFiles().size());\n+        assertEquals(0, result.getImageReferenceUrls().size());\n+        assertEquals(0, result.getImageCaptions().size());\n \n         assertEquals(\"Test Artist\", suggestionResult.getArtist());\n         assertEquals(\"Test Title\", suggestionResult.getTitle());\n@@ -167,6 +175,8 @@ public void testCsvMonumentConverter_convertCsvRow_VariousValues_DateFormat_Mont\n         assertEquals(1, result.getContributorNames().size());\n         assertEquals(1, result.getReferenceUrls().size());\n         assertEquals(0, result.getImageFiles().size());\n+        assertEquals(0, result.getImageReferenceUrls().size());\n+        assertEquals(0, result.getImageCaptions().size());\n \n         assertEquals(\"Test Artist\", suggestionResult.getArtist());\n         assertEquals(\"Test Title\", suggestionResult.getTitle());\n@@ -200,6 +210,8 @@ public void testCsvMonumentConverter_convertCsvRow_VariousValues_DateFormat_Mont\n         assertEquals(1, result.getContributorNames().size());\n         assertEquals(1, result.getReferenceUrls().size());\n         assertEquals(0, result.getImageFiles().size());\n+        assertEquals(0, result.getImageReferenceUrls().size());\n+        assertEquals(0, result.getImageCaptions().size());\n \n         assertEquals(\"Test Artist\", suggestionResult.getArtist());\n         assertEquals(\"Test Title\", suggestionResult.getTitle());\n@@ -233,6 +245,8 @@ public void testCsvMonumentConverter_convertCsvRow_VariousValues_DateFormat_Slas\n         assertEquals(1, result.getContributorNames().size());\n         assertEquals(1, result.getReferenceUrls().size());\n         assertEquals(0, result.getImageFiles().size());\n+        assertEquals(0, result.getImageReferenceUrls().size());\n+        assertEquals(0, result.getImageCaptions().size());\n \n         assertEquals(\"Test Artist\", suggestionResult.getArtist());\n         assertEquals(\"Test Title\", suggestionResult.getTitle());\n@@ -266,6 +280,8 @@ public void testCsvMonumentConverter_convertCsvRow_VariousValues_InvalidDateForm\n         assertEquals(1, result.getContributorNames().size());\n         assertEquals(1, result.getReferenceUrls().size());\n         assertEquals(0, result.getImageFiles().size());\n+        assertEquals(0, result.getImageReferenceUrls().size());\n+        assertEquals(0, result.getImageCaptions().size());\n \n         assertEquals(\"Test Artist\", suggestionResult.getArtist());\n         assertEquals(\"Test Title\", suggestionResult.getTitle());\n@@ -297,6 +313,8 @@ public void testCsvMonumentConverter_convertCsvRow_VariousValues_DeactivatedDate\n         assertEquals(1, result.getContributorNames().size());\n         assertEquals(1, result.getReferenceUrls().size());\n         assertEquals(0, result.getImageFiles().size());\n+        assertEquals(0, result.getImageReferenceUrls().size());\n+        assertEquals(0, result.getImageCaptions().size());\n \n         assertEquals(\"Test Artist\", suggestionResult.getArtist());\n         assertEquals(\"Test Title\", suggestionResult.getTitle());\n@@ -332,6 +350,8 @@ public void testCsvMonumentConverter_convertCsvRow_VariousValues_DeactivatedDate\n         assertEquals(1, result.getContributorNames().size());\n         assertEquals(1, result.getReferenceUrls().size());\n         assertEquals(0, result.getImageFiles().size());\n+        assertEquals(0, result.getImageReferenceUrls().size());\n+        assertEquals(0, result.getImageCaptions().size());\n \n         assertEquals(\"Test Artist\", suggestionResult.getArtist());\n         assertEquals(\"Test Title\", suggestionResult.getTitle());\n@@ -367,6 +387,8 @@ public void testCsvMonumentConverter_convertCsvRow_VariousValues_DeactivatedDate\n         assertEquals(1, result.getContributorNames().size());\n         assertEquals(1, result.getReferenceUrls().size());\n         assertEquals(0, result.getImageFiles().size());\n+        assertEquals(0, result.getImageReferenceUrls().size());\n+        assertEquals(0, result.getImageCaptions().size());\n \n         assertEquals(\"Test Artist\", suggestionResult.getArtist());\n         assertEquals(\"Test Title\", suggestionResult.getTitle());\n@@ -402,6 +424,8 @@ public void testCsvMonumentConverter_convertCsvRow_VariousValues_DeactivatedDate\n         assertEquals(1, result.getContributorNames().size());\n         assertEquals(1, result.getReferenceUrls().size());\n         assertEquals(0, result.getImageFiles().size());\n+        assertEquals(0, result.getImageReferenceUrls().size());\n+        assertEquals(0, result.getImageCaptions().size());\n \n         assertEquals(\"Test Artist\", suggestionResult.getArtist());\n         assertEquals(\"Test Title\", suggestionResult.getTitle());\n@@ -437,6 +461,8 @@ public void testCsvMonumentConverter_convertCsvRow_VariousValues_DeactivatedDate\n         assertEquals(1, result.getContributorNames().size());\n         assertEquals(1, result.getReferenceUrls().size());\n         assertEquals(0, result.getImageFiles().size());\n+        assertEquals(0, result.getImageReferenceUrls().size());\n+        assertEquals(0, result.getImageCaptions().size());\n \n         assertEquals(\"Test Artist\", suggestionResult.getArtist());\n         assertEquals(\"Test Title\", suggestionResult.getTitle());\n@@ -472,6 +498,8 @@ public void testCsvMonumentConverter_convertCsvRow_VariousValues_DeactivatedDate\n         assertEquals(1, result.getContributorNames().size());\n         assertEquals(1, result.getReferenceUrls().size());\n         assertEquals(0, result.getImageFiles().size());\n+        assertEquals(0, result.getImageReferenceUrls().size());\n+        assertEquals(0, result.getImageCaptions().size());\n \n         assertEquals(\"Test Artist\", suggestionResult.getArtist());\n         assertEquals(\"Test Title\", suggestionResult.getTitle());\n@@ -505,6 +533,8 @@ public void testCsvMonumentConverter_convertCsvRow_VariousValues_DeactivatedDate\n         assertEquals(1, result.getContributorNames().size());\n         assertEquals(1, result.getReferenceUrls().size());\n         assertEquals(0, result.getImageFiles().size());\n+        assertEquals(0, result.getImageReferenceUrls().size());\n+        assertEquals(0, result.getImageCaptions().size());\n \n         assertEquals(\"Test Artist\", suggestionResult.getArtist());\n         assertEquals(\"Test Title\", suggestionResult.getTitle());\n@@ -540,6 +570,8 @@ public void testCsvMonumentConverter_convertCsvRow_VariousValues_WithDeactivated\n         assertEquals(1, result.getContributorNames().size());\n         assertEquals(1, result.getReferenceUrls().size());\n         assertEquals(0, result.getImageFiles().size());\n+        assertEquals(0, result.getImageReferenceUrls().size());\n+        assertEquals(0, result.getImageCaptions().size());\n \n         assertEquals(\"Test Artist\", suggestionResult.getArtist());\n         assertEquals(\"Test Title\", suggestionResult.getTitle());\n@@ -576,6 +608,8 @@ public void testCsvMonumentConverter_convertCsvRow_VariousValues_WithDeactivated\n         assertEquals(1, result.getContributorNames().size());\n         assertEquals(1, result.getReferenceUrls().size());\n         assertEquals(0, result.getImageFiles().size());\n+        assertEquals(0, result.getImageReferenceUrls().size());\n+        assertEquals(0, result.getImageCaptions().size());\n \n         assertEquals(\"Test Artist\", suggestionResult.getArtist());\n         assertEquals(\"Test Title\", suggestionResult.getTitle());\n@@ -610,6 +644,8 @@ public void testCsvMonumentConverter_convertCsvRow_VariousValues_Materials() {\n         assertEquals(1, result.getContributorNames().size());\n         assertEquals(1, result.getReferenceUrls().size());\n         assertEquals(0, result.getImageFiles().size());\n+        assertEquals(0, result.getImageReferenceUrls().size());\n+        assertEquals(0, result.getImageCaptions().size());\n \n         assertEquals(\"Test Artist\", suggestionResult.getArtist());\n         assertEquals(\"Test Title\", suggestionResult.getTitle());\n@@ -643,6 +679,8 @@ public void testCsvMonumentConverter_convertCsvRow_VariousValues_Tags() {\n         assertEquals(1, result.getContributorNames().size());\n         assertEquals(1, result.getReferenceUrls().size());\n         assertEquals(0, result.getImageFiles().size());\n+        assertEquals(0, result.getImageReferenceUrls().size());\n+        assertEquals(0, result.getImageCaptions().size());\n \n         assertEquals(\"Test Artist\", suggestionResult.getArtist());\n         assertEquals(\"Test Title\", suggestionResult.getTitle());\n@@ -676,6 +714,8 @@ public void testCsvMonumentConverter_convertCsvRow_VariousValues_MaterialsAndTag\n         assertEquals(1, result.getContributorNames().size());\n         assertEquals(1, result.getReferenceUrls().size());\n         assertEquals(0, result.getImageFiles().size());\n+        assertEquals(0, result.getImageReferenceUrls().size());\n+        assertEquals(0, result.getImageCaptions().size());\n \n         assertEquals(\"Test Artist\", suggestionResult.getArtist());\n         assertEquals(\"Test Title\", suggestionResult.getTitle());\n@@ -709,6 +749,8 @@ public void testCsvMonumentConverter_convertCsvRow_VariousValues_LatitudeAndLong\n         assertEquals(1, result.getContributorNames().size());\n         assertEquals(1, result.getReferenceUrls().size());\n         assertEquals(0, result.getImageFiles().size());\n+        assertEquals(0, result.getImageReferenceUrls().size());\n+        assertEquals(0, result.getImageCaptions().size());\n \n         assertEquals(\"Test Artist\", suggestionResult.getArtist());\n         assertEquals(\"Test Title\", suggestionResult.getTitle());\n@@ -741,6 +783,8 @@ public void testCsvMonumentConverter_convertCsvRow_VariousValues_InvalidLatitude\n         assertEquals(1, result.getContributorNames().size());\n         assertEquals(1, result.getReferenceUrls().size());\n         assertEquals(0, result.getImageFiles().size());\n+        assertEquals(0, result.getImageReferenceUrls().size());\n+        assertEquals(0, result.getImageCaptions().size());\n \n         assertEquals(\"Test Artist\", suggestionResult.getArtist());\n         assertEquals(\"Test Title\", suggestionResult.getTitle());\n@@ -774,6 +818,8 @@ public void testCsvMonumentConverter_convertCsvRow_VariousValues_InvalidLatitude\n         assertEquals(1, result.getContributorNames().size());\n         assertEquals(1, result.getReferenceUrls().size());\n         assertEquals(0, result.getImageFiles().size());\n+        assertEquals(0, result.getImageReferenceUrls().size());\n+        assertEquals(0, result.getImageCaptions().size());\n \n         assertEquals(\"Test Artist\", suggestionResult.getArtist());\n         assertEquals(\"Test Title\", suggestionResult.getTitle());\n@@ -807,6 +853,8 @@ public void testCsvMonumentConverter_convertCsvRow_VariousValues_InvalidLatitude\n         assertEquals(1, result.getContributorNames().size());\n         assertEquals(1, result.getReferenceUrls().size());\n         assertEquals(0, result.getImageFiles().size());\n+        assertEquals(0, result.getImageReferenceUrls().size());\n+        assertEquals(0, result.getImageCaptions().size());\n \n         assertEquals(\"Test Artist\", suggestionResult.getArtist());\n         assertEquals(\"Test Title\", suggestionResult.getTitle());\n@@ -840,6 +888,8 @@ public void testCsvMonumentConverter_convertCsvRow_VariousValues_Image_CsvRowFro\n         assertEquals(1, result.getContributorNames().size());\n         assertEquals(1, result.getReferenceUrls().size());\n         assertEquals(0, result.getImageFiles().size());\n+        assertEquals(0, result.getImageReferenceUrls().size());\n+        assertEquals(0, result.getImageCaptions().size());\n \n         assertEquals(\"Test Artist\", suggestionResult.getArtist());\n         assertEquals(\"Test Title\", suggestionResult.getTitle());\n@@ -872,6 +922,8 @@ public void testCsvMonumentConverter_convertCsvRow_VariousValues_Image_CsvRowNot\n         assertEquals(1, result.getContributorNames().size());\n         assertEquals(1, result.getReferenceUrls().size());\n         assertEquals(0, result.getImageFiles().size());\n+        assertEquals(0, result.getImageReferenceUrls().size());\n+        assertEquals(0, result.getImageCaptions().size());\n \n         assertEquals(\"Test Artist\", suggestionResult.getArtist());\n         assertEquals(\"Test Title\", suggestionResult.getTitle());"
  }
]
