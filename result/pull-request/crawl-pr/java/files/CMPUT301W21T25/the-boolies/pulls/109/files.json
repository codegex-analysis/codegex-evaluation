[
  {
    "sha": "a44789e2d93d94bfd6a4e1a06ce261665226e89f",
    "filename": "project/app/src/main/java/com/example/cmput301w21t25/activities_experiments/ExperimentDataActivity.java",
    "status": "modified",
    "additions": 101,
    "deletions": 64,
    "changes": 165,
    "blob_url": "https://github.com/CMPUT301W21T25/the-boolies/blob/a0463fd6af6db9720cb6d9640c40deafe1231c74/project/app/src/main/java/com/example/cmput301w21t25/activities_experiments/ExperimentDataActivity.java",
    "raw_url": "https://github.com/CMPUT301W21T25/the-boolies/raw/a0463fd6af6db9720cb6d9640c40deafe1231c74/project/app/src/main/java/com/example/cmput301w21t25/activities_experiments/ExperimentDataActivity.java",
    "contents_url": "https://api.github.com/repos/CMPUT301W21T25/the-boolies/contents/project/app/src/main/java/com/example/cmput301w21t25/activities_experiments/ExperimentDataActivity.java?ref=a0463fd6af6db9720cb6d9640c40deafe1231c74",
    "patch": "@@ -12,14 +12,23 @@\n import com.example.cmput301w21t25.experiments.Experiment;\n import com.example.cmput301w21t25.experiments.MeasurementExperiment;\n import com.example.cmput301w21t25.experiments.NonNegCountExperiment;\n+import com.example.cmput301w21t25.trials.BinomialTrial;\n+import com.example.cmput301w21t25.trials.CountTrial;\n+import com.example.cmput301w21t25.trials.MeasurementTrial;\n+import com.example.cmput301w21t25.trials.Trial;\n import com.google.android.gms.tasks.OnCompleteListener;\n import com.google.android.gms.tasks.Task;\n+import com.google.firebase.firestore.CollectionReference;\n import com.google.firebase.firestore.DocumentReference;\n import com.google.firebase.firestore.DocumentSnapshot;\n import com.google.firebase.firestore.FirebaseFirestore;\n+import com.google.firebase.firestore.QueryDocumentSnapshot;\n+import com.google.firebase.firestore.QuerySnapshot;\n \n import java.util.ArrayList;\n \n+import static java.lang.Math.sqrt;\n+\n public class ExperimentDataActivity extends AppCompatActivity {\n     @Override\n     protected void onCreate(Bundle passedData) {\n@@ -48,97 +57,125 @@ protected void onCreate(Bundle passedData) {\n         //finish();\n     }\n     private FirebaseFirestore db = FirebaseFirestore.getInstance();\n-\n     private Integer countSUM = 0;\n     public void FB_FetchSummary(CountExperiment parent){\n         ArrayList<String>keys = parent.getTrialKeys();\n-        for (String key : keys) {\n-            Log.d(\"YA-DB: trial\", key);\n-            DocumentReference docRef = db.collection(\"TrialDocs\").document(key);\n-            docRef.get().addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {\n-                @Override\n-                public void onComplete(@NonNull Task<DocumentSnapshot> task) {\n-                    if (task.isSuccessful()) {\n-                        DocumentSnapshot document = task.getResult();\n-                        if (document.exists()&&(Boolean) document.getData().get(\"published\")==true) {\n-                            Long value = (Long) document.getData().get(\"result\");\n-                            countSUM = countSUM + value.intValue();\n-                            Log.d(\"YA-DB: trial\", String.valueOf(countSUM));\n-                        }\n-                        else{\n+        ArrayList<Integer> values = new ArrayList<Integer>();\n+        CollectionReference docRef = db.collection(\"TrialDocs\");\n+        docRef.whereEqualTo(\"published\",true).get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\n+            @Override\n+            public void onComplete(@NonNull Task<QuerySnapshot> task) {\n+                if(task.isSuccessful()){\n+                    for (QueryDocumentSnapshot document : task.getResult()) {\n+                        if(keys.contains(document.getId())){\n+                            CountTrial trial = document.toObject(CountTrial.class);\n+                            values.add(trial.getResult());\n+                            countSUM = countSUM + trial.getResult();//total\n                         }\n-                    } else {\n-                        Log.d(\"YA-DB: \", \"get failed with \", task.getException());\n                     }\n+                    double mean = countSUM/Double.valueOf(values.size());//mean\n+                    double squareDiff =0;\n+                    double total = 0;\n+                    double sDev =0.0;\n+                    for(int i =0;i<values.size();i++){\n+                        squareDiff =Math.pow((values.get(i)-mean),2);\n+                        total++;\n+                    }\n+                    sDev = sqrt((squareDiff/total));//standard deviation\n+                    int median = values.get(values.size()/2);\n+                    int Lquart = values.get(values.size()/4);\n+                    int Uquart = values.get(3*values.size()/4);\n                 }\n-            });\n-        }\n+            }\n+        });\n     }\n     public void FB_FetchSummary(NonNegCountExperiment parent){\n         ArrayList<String>keys = parent.getTrialKeys();\n-        String type = parent.getType();\n-        for (String key : keys) {\n-            DocumentReference docRef = db.collection(\"TrialDocs\").document(key);\n-            docRef.get().addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {\n-                @Override\n-                public void onComplete(@NonNull Task<DocumentSnapshot> task) {\n-                    if (task.isSuccessful()) {\n-                        DocumentSnapshot document = task.getResult();\n-                        if (document.exists()&&(Boolean) document.getData().get(\"published\")==true) {\n-                            Long value = (Long) document.getData().get(\"result\");\n-                            countSUM = countSUM + value.intValue();\n+        ArrayList<Integer> values = new ArrayList<Integer>();\n+        CollectionReference docRef = db.collection(\"TrialDocs\");\n+        docRef.whereEqualTo(\"published\",true).get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\n+            @Override\n+            public void onComplete(@NonNull Task<QuerySnapshot> task) {\n+                if(task.isSuccessful()){\n+                    for (QueryDocumentSnapshot document : task.getResult()) {\n+                        if(keys.contains(document.getId())){\n+                            CountTrial trial = document.toObject(CountTrial.class);\n+                            values.add(trial.getResult());\n+                            countSUM = countSUM + trial.getResult();//total\n                         }\n-                    } else {\n-                        Log.d(\"YA-DB: \", \"get failed with \", task.getException());\n                     }\n+                    double mean = countSUM/Double.valueOf(values.size());//mean\n+                    double squareDiff =0;\n+                    double total = 0;\n+                    double sDev =0.0;\n+                    for(int i =0;i<values.size();i++){\n+                        squareDiff =Math.pow((values.get(i)-mean),2);\n+                        total++;\n+                    }\n+                    sDev = sqrt((squareDiff/total));//standard deviation\n+                    int median = values.get(values.size()/2);\n+                    int Lquart = values.get(values.size()/4);\n+                    int Uquart = values.get(3*values.size()/4);\n                 }\n-            });\n-        }\n+            }\n+        });\n     }\n     private Float countSUMF;\n     public void FB_FetchSummary(MeasurementExperiment parent){\n         ArrayList<String>keys = parent.getTrialKeys();\n-        String type = parent.getType();\n-        for (String key : keys) {\n-            DocumentReference docRef = db.collection(\"TrialDocs\").document(key);\n-            docRef.get().addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {\n-                @Override\n-                public void onComplete(@NonNull Task<DocumentSnapshot> task) {\n-                    if (task.isSuccessful()) {\n-                        DocumentSnapshot document = task.getResult();\n-                        if (document.exists()&&(Boolean) document.getData().get(\"published\")==true) {\n-                            Double value = (Double) document.getData().get(\"result\");\n-                            countSUMF = countSUMF + value.floatValue();\n+        ArrayList<Float> values = new ArrayList<Float>();\n+        CollectionReference docRef = db.collection(\"TrialDocs\");\n+        docRef.whereEqualTo(\"published\",true).get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\n+            @Override\n+            public void onComplete(@NonNull Task<QuerySnapshot> task) {\n+                if(task.isSuccessful()){\n+                    for (QueryDocumentSnapshot document : task.getResult()) {\n+                        if(keys.contains(document.getId())){\n+                            MeasurementTrial trial = document.toObject(MeasurementTrial.class);\n+                            values.add(trial.getResult());\n+                            countSUMF = countSUMF + trial.getResult();//total\n                         }\n-                    } else {\n-                        Log.d(\"YA-DB: \", \"get failed with \", task.getException());\n                     }\n+                    double mean = countSUM/Double.valueOf(values.size());//mean\n+                    double squareDiff =0;\n+                    double total = 0;\n+                    double sDev =0.0;\n+                    for(int i =0;i<values.size();i++){\n+                        squareDiff =Math.pow((values.get(i)-mean),2);\n+                        total++;\n+                    }\n+                    sDev = sqrt((squareDiff/total));//standard deviation\n+                    float median = values.get(values.size()/2);\n+                    float Lquart = values.get(values.size()/4);\n+                    float Uquart = values.get(3*values.size()/4);\n                 }\n-            });\n-        }\n+            }\n+        });\n     }\n     private Integer successCount = 0;\n+    private Integer totalCount = 0;\n     public void FB_FetchSummary(BinomialExperiment parent){\n         ArrayList<String>keys = parent.getTrialKeys();\n-        for (String key : keys) {\n-            DocumentReference docRef = db.collection(\"TrialDocs\").document(key);\n-            docRef.get().addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {\n-                @Override\n-                public void onComplete(@NonNull Task<DocumentSnapshot> task) {\n-                    if (task.isSuccessful()) {\n-                        DocumentSnapshot document = task.getResult();\n-                        if (document.exists()&&(Boolean) document.getData().get(\"published\")==true) {\n-                            if((Boolean) document.getData().get(\"result\")){\n-                                successCount++;\n-                                Log.d(\"YA-DB: \", String.valueOf(successCount));\n+        ArrayList<Boolean> values = new ArrayList<Boolean>();\n+        CollectionReference docRef = db.collection(\"TrialDocs\");\n+        docRef.whereEqualTo(\"published\",true).get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\n+            @Override\n+            public void onComplete(@NonNull Task<QuerySnapshot> task) {\n+                if(task.isSuccessful()){\n+                    for (QueryDocumentSnapshot document : task.getResult()) {\n+                        if(keys.contains(document.getId())){\n+                            BinomialTrial trial = document.toObject(BinomialTrial.class);\n+                            values.add(trial.getResult());\n+                            if (trial.getResult()==true){\n+                                successCount++;//true\n                             }\n+                            totalCount++;//total\n                         }\n-                    } else {\n-                        Log.d(\"YA-DB: \", \"get failed with \", task.getException());\n                     }\n+                    Integer failCount = totalCount=successCount;\n                 }\n-            });\n-        }\n+            }\n+        });\n     }\n \n }"
  },
  {
    "sha": "c6a68ba896664669f2a5d70d56df25a610a7d2cc",
    "filename": "project/app/src/main/java/com/example/cmput301w21t25/managers/ExperimentManager.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/CMPUT301W21T25/the-boolies/blob/a0463fd6af6db9720cb6d9640c40deafe1231c74/project/app/src/main/java/com/example/cmput301w21t25/managers/ExperimentManager.java",
    "raw_url": "https://github.com/CMPUT301W21T25/the-boolies/raw/a0463fd6af6db9720cb6d9640c40deafe1231c74/project/app/src/main/java/com/example/cmput301w21t25/managers/ExperimentManager.java",
    "contents_url": "https://api.github.com/repos/CMPUT301W21T25/the-boolies/contents/project/app/src/main/java/com/example/cmput301w21t25/managers/ExperimentManager.java?ref=a0463fd6af6db9720cb6d9640c40deafe1231c74",
    "patch": "@@ -37,8 +37,8 @@\n     //CREATE EXPERIMENT\n     /**\n      * This method creates an Experiment Document in the database that can later be recompiled into one of the Experiment Class's children\n-     * @param userID the ID of the user who is creating the experiment\n-     * @param name the name of the experiment\n+     * @param ownerID the ID of the user who is creating the experiment\n+     * @param experimentName the name of the experiment\n      * @param ownerName the name of the owner of the experiment\n      * @param description a brief description of the experiment\n      * @param region the geolocation of the region"
  },
  {
    "sha": "636c34455af41d490f7ff3dd9c38475b5606a530",
    "filename": "project/app/src/main/java/com/example/cmput301w21t25/trials/CountTrial.java",
    "status": "modified",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/CMPUT301W21T25/the-boolies/blob/a0463fd6af6db9720cb6d9640c40deafe1231c74/project/app/src/main/java/com/example/cmput301w21t25/trials/CountTrial.java",
    "raw_url": "https://github.com/CMPUT301W21T25/the-boolies/raw/a0463fd6af6db9720cb6d9640c40deafe1231c74/project/app/src/main/java/com/example/cmput301w21t25/trials/CountTrial.java",
    "contents_url": "https://api.github.com/repos/CMPUT301W21T25/the-boolies/contents/project/app/src/main/java/com/example/cmput301w21t25/trials/CountTrial.java?ref=a0463fd6af6db9720cb6d9640c40deafe1231c74",
    "patch": "@@ -17,4 +17,8 @@ public Integer result() {\n      */\n \n     private void setResult(Integer result){ this.result = result; }\n+\n+    public Integer getResult() {\n+        return result;\n+    }\n }"
  },
  {
    "sha": "cff919f344f23b61446b2ebf9ee809c85fc0aa8d",
    "filename": "project/app/src/main/java/com/example/cmput301w21t25/trials/MeasurementTrial.java",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/CMPUT301W21T25/the-boolies/blob/a0463fd6af6db9720cb6d9640c40deafe1231c74/project/app/src/main/java/com/example/cmput301w21t25/trials/MeasurementTrial.java",
    "raw_url": "https://github.com/CMPUT301W21T25/the-boolies/raw/a0463fd6af6db9720cb6d9640c40deafe1231c74/project/app/src/main/java/com/example/cmput301w21t25/trials/MeasurementTrial.java",
    "contents_url": "https://api.github.com/repos/CMPUT301W21T25/the-boolies/contents/project/app/src/main/java/com/example/cmput301w21t25/trials/MeasurementTrial.java?ref=a0463fd6af6db9720cb6d9640c40deafe1231c74",
    "patch": "@@ -18,4 +18,5 @@ public Float getResult() {\n     private void setResult(Float result){\n         this.result = result;\n     }\n+\n }"
  }
]
