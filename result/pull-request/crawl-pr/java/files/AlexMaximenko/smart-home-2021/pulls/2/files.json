[
  {
    "sha": "0f0f4e6b2e20de83b0627e8142d4ee77126b73e9",
    "filename": "src/main/java/ru/sbt/mipt/oop/Application.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/AlexMaximenko/smart-home-2021/blob/72097c860e14db0f794221333e13582baea40d41/src/main/java/ru/sbt/mipt/oop/Application.java",
    "raw_url": "https://github.com/AlexMaximenko/smart-home-2021/raw/72097c860e14db0f794221333e13582baea40d41/src/main/java/ru/sbt/mipt/oop/Application.java",
    "contents_url": "https://api.github.com/repos/AlexMaximenko/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/Application.java?ref=72097c860e14db0f794221333e13582baea40d41",
    "patch": "@@ -1,6 +1,6 @@\n package ru.sbt.mipt.oop;\n \n-import ru.sbt.mipt.oop.eventhandlers.CommonDoorEventHandler;\n+import ru.sbt.mipt.oop.eventhandlers.DoorEventHandler;\n import ru.sbt.mipt.oop.eventhandlers.EventHandler;\n import ru.sbt.mipt.oop.eventhandlers.LightEventHandler;\n import ru.sbt.mipt.oop.eventhandlers.HallDoorEventHandler;\n@@ -26,7 +26,7 @@ public static void main(String... args) throws IOException {\n         // начинаем цикл обработки событий\n         Collection<EventHandler> eventHandlers = Arrays.asList(\n                 new LightEventHandler(),\n-                new CommonDoorEventHandler(),\n+                new DoorEventHandler(),\n                 new HallDoorEventHandler());\n \n         SensorEventProcessor eventProcessor = new SensorEventProcessorImpl(eventHandlers, new RandomSensorEventGenerator());"
  },
  {
    "sha": "0b7ba6d20eff3cf8d1d79daf0839666abd6153c3",
    "filename": "src/main/java/ru/sbt/mipt/oop/action/Action.java",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/AlexMaximenko/smart-home-2021/blob/72097c860e14db0f794221333e13582baea40d41/src/main/java/ru/sbt/mipt/oop/action/Action.java",
    "raw_url": "https://github.com/AlexMaximenko/smart-home-2021/raw/72097c860e14db0f794221333e13582baea40d41/src/main/java/ru/sbt/mipt/oop/action/Action.java",
    "contents_url": "https://api.github.com/repos/AlexMaximenko/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/action/Action.java?ref=72097c860e14db0f794221333e13582baea40d41",
    "patch": "@@ -0,0 +1,5 @@\n+package ru.sbt.mipt.oop.action;\n+\n+public interface Action {\n+    public void execute(Object object);\n+}"
  },
  {
    "sha": "88c7e4e9bc289ef2d0819c4095e78b4bcec9aa7c",
    "filename": "src/main/java/ru/sbt/mipt/oop/action/Actionable.java",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/AlexMaximenko/smart-home-2021/blob/72097c860e14db0f794221333e13582baea40d41/src/main/java/ru/sbt/mipt/oop/action/Actionable.java",
    "raw_url": "https://github.com/AlexMaximenko/smart-home-2021/raw/72097c860e14db0f794221333e13582baea40d41/src/main/java/ru/sbt/mipt/oop/action/Actionable.java",
    "contents_url": "https://api.github.com/repos/AlexMaximenko/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/action/Actionable.java?ref=72097c860e14db0f794221333e13582baea40d41",
    "patch": "@@ -0,0 +1,5 @@\n+package ru.sbt.mipt.oop.action;\n+\n+public interface Actionable {\n+    public void execute(Action action);\n+}"
  },
  {
    "sha": "2cc33b1ffb863414982612d510a2a0f353a4c738",
    "filename": "src/main/java/ru/sbt/mipt/oop/eventhandlers/CommonDoorEventHandler.java",
    "status": "removed",
    "additions": 0,
    "deletions": 41,
    "changes": 41,
    "blob_url": "https://github.com/AlexMaximenko/smart-home-2021/blob/a097edb651e4d824b7c6bfe4490ce5384d3076d1/src/main/java/ru/sbt/mipt/oop/eventhandlers/CommonDoorEventHandler.java",
    "raw_url": "https://github.com/AlexMaximenko/smart-home-2021/raw/a097edb651e4d824b7c6bfe4490ce5384d3076d1/src/main/java/ru/sbt/mipt/oop/eventhandlers/CommonDoorEventHandler.java",
    "contents_url": "https://api.github.com/repos/AlexMaximenko/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/eventhandlers/CommonDoorEventHandler.java?ref=a097edb651e4d824b7c6bfe4490ce5384d3076d1",
    "patch": "@@ -1,41 +0,0 @@\n-package ru.sbt.mipt.oop.eventhandlers;\n-\n-import ru.sbt.mipt.oop.sensor.SensorEvent;\n-import ru.sbt.mipt.oop.home.SmartHome;\n-import ru.sbt.mipt.oop.smartelements.Door;\n-import ru.sbt.mipt.oop.smartelements.Room;\n-\n-import java.util.Collection;\n-\n-import static ru.sbt.mipt.oop.sensor.SensorEventType.DOOR_CLOSED;\n-import static ru.sbt.mipt.oop.sensor.SensorEventType.DOOR_OPEN;\n-\n-public class CommonDoorEventHandler implements EventHandler {\n-    @Override\n-    public void handleEvent(SmartHome smartHome, SensorEvent sensorEvent) {\n-        if (this.isDoorEvent(smartHome, sensorEvent)) {\n-            this.changeDoorState(smartHome, sensorEvent);\n-        }\n-    }\n-\n-    private void changeDoorState(SmartHome smartHome, SensorEvent sensorEvent){\n-        for (Room room : smartHome.getRooms()) {\n-            for (Door door : room.getDoors()) {\n-                if (door.getId().equals(sensorEvent.getObjectId())) {\n-                    if (sensorEvent.getType().equals(DOOR_CLOSED)){\n-                        door.setOpen(false);\n-                        System.out.println(\"Door \" + door.getId() + \" in room \" + room.getName() + \" was closed.\");\n-                    }\n-                    if (sensorEvent.getType().equals(DOOR_OPEN)){\n-                        door.setOpen(true);\n-                        System.out.println(\"Door \" + door.getId() + \" in room \" + room.getName() + \" was opened.\");\n-                    }\n-                }\n-            }\n-        }\n-    }\n-\n-    private boolean isDoorEvent(SmartHome smartHome, SensorEvent sensorEvent) {\n-        return  (sensorEvent.getType().equals(DOOR_CLOSED) || sensorEvent.getType().equals(DOOR_OPEN));\n-    }\n-}"
  },
  {
    "sha": "7cb6aeb6f4a9589ef62a5520e39af05d8302c63e",
    "filename": "src/main/java/ru/sbt/mipt/oop/eventhandlers/DoorEventHandler.java",
    "status": "added",
    "additions": 36,
    "deletions": 0,
    "changes": 36,
    "blob_url": "https://github.com/AlexMaximenko/smart-home-2021/blob/72097c860e14db0f794221333e13582baea40d41/src/main/java/ru/sbt/mipt/oop/eventhandlers/DoorEventHandler.java",
    "raw_url": "https://github.com/AlexMaximenko/smart-home-2021/raw/72097c860e14db0f794221333e13582baea40d41/src/main/java/ru/sbt/mipt/oop/eventhandlers/DoorEventHandler.java",
    "contents_url": "https://api.github.com/repos/AlexMaximenko/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/eventhandlers/DoorEventHandler.java?ref=72097c860e14db0f794221333e13582baea40d41",
    "patch": "@@ -0,0 +1,36 @@\n+package ru.sbt.mipt.oop.eventhandlers;\n+\n+import ru.sbt.mipt.oop.action.Action;\n+import ru.sbt.mipt.oop.sensor.SensorEvent;\n+import ru.sbt.mipt.oop.home.SmartHome;\n+import ru.sbt.mipt.oop.smartelements.Door;\n+\n+import static ru.sbt.mipt.oop.sensor.SensorEventType.DOOR_CLOSED;\n+import static ru.sbt.mipt.oop.sensor.SensorEventType.DOOR_OPEN;\n+\n+public class DoorEventHandler implements EventHandler {\n+    @Override\n+    public void handleEvent(SmartHome smartHome, SensorEvent sensorEvent){\n+        if (!isDoorEvent(smartHome, sensorEvent)) return;\n+        boolean newState = sensorEvent.getType() == DOOR_OPEN;\n+\n+        smartHome.execute(new Action() {\n+            @Override\n+            public void execute(Object object) {\n+                if (!(object instanceof Door)) return;\n+                if (sensorEvent.getObjectId().equals(((Door) object).getId())) {\n+                    updateDoorState( (Door) object, newState);\n+                }\n+            }\n+        });\n+    }\n+\n+    private void updateDoorState(Door door, boolean newState){\n+        door.setOpen(newState);\n+        System.out.println(\"Door \" + door.getId() + \" was \" + (newState ? \"open.\" : \"closed.\"));\n+    }\n+\n+    private boolean isDoorEvent(SmartHome smartHome, SensorEvent sensorEvent) {\n+        return  (sensorEvent.getType().equals(DOOR_CLOSED) || sensorEvent.getType().equals(DOOR_OPEN));\n+    }\n+}"
  },
  {
    "sha": "c52d62f01cedc38e66546dac3bb532957cf94d83",
    "filename": "src/main/java/ru/sbt/mipt/oop/eventhandlers/HallDoorEventHandler.java",
    "status": "modified",
    "additions": 23,
    "deletions": 22,
    "changes": 45,
    "blob_url": "https://github.com/AlexMaximenko/smart-home-2021/blob/72097c860e14db0f794221333e13582baea40d41/src/main/java/ru/sbt/mipt/oop/eventhandlers/HallDoorEventHandler.java",
    "raw_url": "https://github.com/AlexMaximenko/smart-home-2021/raw/72097c860e14db0f794221333e13582baea40d41/src/main/java/ru/sbt/mipt/oop/eventhandlers/HallDoorEventHandler.java",
    "contents_url": "https://api.github.com/repos/AlexMaximenko/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/eventhandlers/HallDoorEventHandler.java?ref=72097c860e14db0f794221333e13582baea40d41",
    "patch": "@@ -1,5 +1,7 @@\n package ru.sbt.mipt.oop.eventhandlers;\n \n+import ru.sbt.mipt.oop.action.Action;\n+import ru.sbt.mipt.oop.home.HomeUtils;\n import ru.sbt.mipt.oop.home.SmartHome;\n import ru.sbt.mipt.oop.sensor.CommandType;\n import ru.sbt.mipt.oop.sensor.SensorCommand;\n@@ -10,36 +12,35 @@\n import ru.sbt.mipt.oop.smartelements.Room;\n \n public class HallDoorEventHandler implements EventHandler {\n+\n+\n     @Override\n-    public void handleEvent(SmartHome smartHome, SensorEvent sensorEvent) {\n-        if (isHallDoorEvent(smartHome, sensorEvent)){\n-            if (sensorEvent.getType().equals(SensorEventType.DOOR_CLOSED)) {\n-                this.turnOffLights(smartHome);\n-            }\n+    public void handleEvent(SmartHome smartHome, SensorEvent sensorEvent){\n+        if (!isHallDoorEvent(smartHome, sensorEvent)) return;\n+        if (sensorEvent.getType() == SensorEventType.DOOR_CLOSED) {\n+            smartHome.execute(new Action() {\n+                @Override\n+                public void execute(Object object) {\n+                    if (!(object instanceof Light)) return;\n+                    turnOffLight((Light) object);\n+                }\n+            });\n         }\n     }\n \n-    private void turnOffLights(SmartHome smartHome){\n-        for (Room homeRoom : smartHome.getRooms()) {\n-            for (Light light : homeRoom.getLights()) {\n-                light.setOn(false);\n-                SensorCommand command = new SensorCommand(CommandType.LIGHT_OFF, light.getId());\n-                System.out.println(\"Pretend we're sending command \" + command);\n-            }\n-        }\n+    private void turnOffLight(Light light){\n+        light.setOn(false);\n+        System.out.println(\"Light \" + light.getId() + \" was turned off because of closing hall door.\");\n     }\n \n     private boolean isHallDoorEvent(SmartHome smartHome, SensorEvent sensorEvent){\n-        for (Room room : smartHome.getRooms()){\n-            for (Door door : room.getDoors()){\n-                if (door.getId().equals(sensorEvent.getObjectId())) {\n-                    if (room.getName().equals(\"hall\"))\n-                        return true;\n-                    else\n-                        return false;\n-                }\n-            }\n+        if (!(sensorEvent.getType() == SensorEventType.DOOR_CLOSED || sensorEvent.getType() == SensorEventType.DOOR_OPEN))\n+        {\n+            return false;\n         }\n+        Room eventRoom = HomeUtils.findRoomOfDoor(smartHome, sensorEvent.getObjectId());\n+        if (eventRoom == null) return false;\n+        if (eventRoom.getName().equals(\"hall\")) return true;\n         return false;\n     }\n }"
  },
  {
    "sha": "abffa129c8e5c4b77d167d47fb4d146d1c884311",
    "filename": "src/main/java/ru/sbt/mipt/oop/eventhandlers/LightEventHandler.java",
    "status": "modified",
    "additions": 16,
    "deletions": 18,
    "changes": 34,
    "blob_url": "https://github.com/AlexMaximenko/smart-home-2021/blob/72097c860e14db0f794221333e13582baea40d41/src/main/java/ru/sbt/mipt/oop/eventhandlers/LightEventHandler.java",
    "raw_url": "https://github.com/AlexMaximenko/smart-home-2021/raw/72097c860e14db0f794221333e13582baea40d41/src/main/java/ru/sbt/mipt/oop/eventhandlers/LightEventHandler.java",
    "contents_url": "https://api.github.com/repos/AlexMaximenko/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/eventhandlers/LightEventHandler.java?ref=72097c860e14db0f794221333e13582baea40d41",
    "patch": "@@ -1,33 +1,31 @@\n package ru.sbt.mipt.oop.eventhandlers;\n \n+import ru.sbt.mipt.oop.action.Action;\n+import ru.sbt.mipt.oop.home.HomeUtils;\n import ru.sbt.mipt.oop.sensor.SensorEvent;\n import ru.sbt.mipt.oop.home.SmartHome;\n import ru.sbt.mipt.oop.sensor.SensorEventType;\n import ru.sbt.mipt.oop.smartelements.Light;\n-import ru.sbt.mipt.oop.smartelements.Room;\n \n public class LightEventHandler implements EventHandler{\n     @Override\n     public void handleEvent(SmartHome smartHome, SensorEvent sensorEvent) {\n-        if (isLightEvent(sensorEvent))\n-            this.changeLightState(smartHome, sensorEvent);\n-    }\n-\n-    private void changeLightState(SmartHome smartHome, SensorEvent sensorEvent){\n-        for (Room room : smartHome.getRooms()) {\n-            for (Light light : room.getLights()) {\n-                if (light.getId().equals(sensorEvent.getObjectId())) {\n-                    if (sensorEvent.getType().equals(SensorEventType.LIGHT_ON)) {\n-                        light.setOn(true);\n-                        System.out.println(\"Light \" + light.getId() + \" in room \" + room.getName() + \" was turned on.\");\n-                    }\n-                    else {\n-                        light.setOn(false);\n-                        System.out.println(\"Light \" + light.getId() + \" in room \" + room.getName() + \" was turned off.\");\n-                    }\n+        if (!isLightEvent(sensorEvent)) return;\n+        boolean newState = sensorEvent.getType() == SensorEventType.LIGHT_ON;\n+        smartHome.execute(new Action() {\n+            @Override\n+            public void execute(Object object) {\n+                if (!(object instanceof Light)) return;\n+                if (sensorEvent.getObjectId().equals(((Light) object).getId())) {\n+                    updateLightState((Light) object, newState);\n                 }\n             }\n-        }\n+        });\n+    }\n+\n+    private void updateLightState(Light light, boolean newState) {\n+        light.setOn(newState);\n+        System.out.println(\"Light \" + light.getId() + \" was turned \" + (newState ? \"on.\" : \"off.\"));\n     }\n \n     private boolean isLightEvent(SensorEvent sensorEvent) {"
  },
  {
    "sha": "6674bb97ccc41677834866efea0244dfdf39bc83",
    "filename": "src/main/java/ru/sbt/mipt/oop/home/HomeUtils.java",
    "status": "added",
    "additions": 33,
    "deletions": 0,
    "changes": 33,
    "blob_url": "https://github.com/AlexMaximenko/smart-home-2021/blob/72097c860e14db0f794221333e13582baea40d41/src/main/java/ru/sbt/mipt/oop/home/HomeUtils.java",
    "raw_url": "https://github.com/AlexMaximenko/smart-home-2021/raw/72097c860e14db0f794221333e13582baea40d41/src/main/java/ru/sbt/mipt/oop/home/HomeUtils.java",
    "contents_url": "https://api.github.com/repos/AlexMaximenko/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/home/HomeUtils.java?ref=72097c860e14db0f794221333e13582baea40d41",
    "patch": "@@ -0,0 +1,33 @@\n+package ru.sbt.mipt.oop.home;\n+\n+import ru.sbt.mipt.oop.smartelements.Door;\n+import ru.sbt.mipt.oop.smartelements.Light;\n+import ru.sbt.mipt.oop.smartelements.Room;\n+\n+public class HomeUtils {\n+    public static Light findLight(SmartHome smartHome, String lightId){\n+        Light targetLight = null;\n+        for (Room room : smartHome.getRooms()) {\n+            for (Light light : room.getLights()) {\n+                if (light.getId().equals(lightId)) {\n+                    targetLight = light;\n+                    break;\n+                }\n+            }\n+        }\n+        return targetLight;\n+    }\n+\n+    public static Room findRoomOfDoor(SmartHome smartHome, String doorId){\n+        Room targetRoom = null;\n+        for (Room room : smartHome.getRooms()) {\n+            for (Door door : room.getDoors()) {\n+                if (door.getId().equals(doorId)) {\n+                    targetRoom = room;\n+                    break;\n+                }\n+            }\n+        }\n+        return targetRoom;\n+    }\n+}"
  },
  {
    "sha": "01802fc7b3bf647d618d2414d111488ed08abff2",
    "filename": "src/main/java/ru/sbt/mipt/oop/home/SmartHome.java",
    "status": "modified",
    "additions": 8,
    "deletions": 1,
    "changes": 9,
    "blob_url": "https://github.com/AlexMaximenko/smart-home-2021/blob/72097c860e14db0f794221333e13582baea40d41/src/main/java/ru/sbt/mipt/oop/home/SmartHome.java",
    "raw_url": "https://github.com/AlexMaximenko/smart-home-2021/raw/72097c860e14db0f794221333e13582baea40d41/src/main/java/ru/sbt/mipt/oop/home/SmartHome.java",
    "contents_url": "https://api.github.com/repos/AlexMaximenko/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/home/SmartHome.java?ref=72097c860e14db0f794221333e13582baea40d41",
    "patch": "@@ -1,11 +1,13 @@\n package ru.sbt.mipt.oop.home;\n \n+import ru.sbt.mipt.oop.action.Action;\n+import ru.sbt.mipt.oop.action.Actionable;\n import ru.sbt.mipt.oop.smartelements.Room;\n \n import java.util.ArrayList;\n import java.util.Collection;\n \n-public class SmartHome {\n+public class SmartHome implements Actionable {\n     private Collection<Room> rooms;\n \n     public SmartHome(){\n@@ -23,4 +25,9 @@ public void addRoom(Room room) {\n     public Collection<Room> getRooms() {\n         return rooms;\n     }\n+\n+    @Override\n+    public void execute(Action action) {\n+        rooms.forEach(room -> room.execute(action));\n+    }\n }"
  },
  {
    "sha": "3c3589d8f41660b539d5813f4055e4edcec32fd6",
    "filename": "src/main/java/ru/sbt/mipt/oop/smartelements/Door.java",
    "status": "modified",
    "additions": 11,
    "deletions": 1,
    "changes": 12,
    "blob_url": "https://github.com/AlexMaximenko/smart-home-2021/blob/72097c860e14db0f794221333e13582baea40d41/src/main/java/ru/sbt/mipt/oop/smartelements/Door.java",
    "raw_url": "https://github.com/AlexMaximenko/smart-home-2021/raw/72097c860e14db0f794221333e13582baea40d41/src/main/java/ru/sbt/mipt/oop/smartelements/Door.java",
    "contents_url": "https://api.github.com/repos/AlexMaximenko/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/smartelements/Door.java?ref=72097c860e14db0f794221333e13582baea40d41",
    "patch": "@@ -1,6 +1,9 @@\n package ru.sbt.mipt.oop.smartelements;\n \n-public class Door {\n+import ru.sbt.mipt.oop.action.Action;\n+import ru.sbt.mipt.oop.action.Actionable;\n+\n+public class Door implements Actionable {\n     private final String id;\n     private boolean isOpen;\n \n@@ -9,11 +12,18 @@ public Door(boolean isOpen, String id) {\n         this.id = id;\n     }\n \n+    public boolean isOpen() { return isOpen; };\n+\n     public String getId() {\n         return id;\n     }\n \n     public void setOpen(boolean open) {\n         isOpen = open;\n     }\n+\n+    @Override\n+    public void execute(Action action) {\n+        action.execute(this);\n+    }\n }"
  },
  {
    "sha": "0533812d182759cea83c4a879608db4b2b2106a6",
    "filename": "src/main/java/ru/sbt/mipt/oop/smartelements/Light.java",
    "status": "modified",
    "additions": 9,
    "deletions": 1,
    "changes": 10,
    "blob_url": "https://github.com/AlexMaximenko/smart-home-2021/blob/72097c860e14db0f794221333e13582baea40d41/src/main/java/ru/sbt/mipt/oop/smartelements/Light.java",
    "raw_url": "https://github.com/AlexMaximenko/smart-home-2021/raw/72097c860e14db0f794221333e13582baea40d41/src/main/java/ru/sbt/mipt/oop/smartelements/Light.java",
    "contents_url": "https://api.github.com/repos/AlexMaximenko/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/smartelements/Light.java?ref=72097c860e14db0f794221333e13582baea40d41",
    "patch": "@@ -1,6 +1,9 @@\n package ru.sbt.mipt.oop.smartelements;\n \n-public class Light {\n+import ru.sbt.mipt.oop.action.Action;\n+import ru.sbt.mipt.oop.action.Actionable;\n+\n+public class Light implements Actionable {\n     private boolean isOn;\n     private final String id;\n \n@@ -20,4 +23,9 @@ public String getId() {\n     public void setOn(boolean on) {\n         isOn = on;\n     }\n+\n+    @Override\n+    public void execute(Action action) {\n+        action.execute(this);\n+    }\n }"
  },
  {
    "sha": "6bdb9c5fe5dd47d6601d77b82e492f8848930637",
    "filename": "src/main/java/ru/sbt/mipt/oop/smartelements/Room.java",
    "status": "modified",
    "additions": 12,
    "deletions": 1,
    "changes": 13,
    "blob_url": "https://github.com/AlexMaximenko/smart-home-2021/blob/72097c860e14db0f794221333e13582baea40d41/src/main/java/ru/sbt/mipt/oop/smartelements/Room.java",
    "raw_url": "https://github.com/AlexMaximenko/smart-home-2021/raw/72097c860e14db0f794221333e13582baea40d41/src/main/java/ru/sbt/mipt/oop/smartelements/Room.java",
    "contents_url": "https://api.github.com/repos/AlexMaximenko/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/smartelements/Room.java?ref=72097c860e14db0f794221333e13582baea40d41",
    "patch": "@@ -1,8 +1,12 @@\n package ru.sbt.mipt.oop.smartelements;\n \n+import ru.sbt.mipt.oop.action.Action;\n+import ru.sbt.mipt.oop.action.Actionable;\n+\n+import javax.accessibility.Accessible;\n import java.util.Collection;\n \n-public class Room {\n+public class Room implements Actionable {\n     private Collection<Light> lights;\n     private Collection<Door> doors;\n     private String name;\n@@ -24,4 +28,11 @@ public Room(Collection<Light> lights, Collection<Door> doors, String name) {\n     public String getName() {\n         return name;\n     }\n+\n+    @Override\n+    public void execute(Action action) {\n+        action.execute(this);\n+        doors.forEach(door -> door.execute(action));\n+        lights.forEach(light -> light.execute(action));\n+    }\n }"
  },
  {
    "sha": "a2896223cf9b1069f4aac0fc6cf52ade6f8ab457",
    "filename": "src/test/java/ru/sbt/mipt/oop/eventhandlers/DoorEventHandlerTest.java",
    "status": "added",
    "additions": 49,
    "deletions": 0,
    "changes": 49,
    "blob_url": "https://github.com/AlexMaximenko/smart-home-2021/blob/72097c860e14db0f794221333e13582baea40d41/src/test/java/ru/sbt/mipt/oop/eventhandlers/DoorEventHandlerTest.java",
    "raw_url": "https://github.com/AlexMaximenko/smart-home-2021/raw/72097c860e14db0f794221333e13582baea40d41/src/test/java/ru/sbt/mipt/oop/eventhandlers/DoorEventHandlerTest.java",
    "contents_url": "https://api.github.com/repos/AlexMaximenko/smart-home-2021/contents/src/test/java/ru/sbt/mipt/oop/eventhandlers/DoorEventHandlerTest.java?ref=72097c860e14db0f794221333e13582baea40d41",
    "patch": "@@ -0,0 +1,49 @@\n+package ru.sbt.mipt.oop.eventhandlers;\n+\n+import org.junit.jupiter.api.Test;\n+import ru.sbt.mipt.oop.home.SmartHome;\n+import ru.sbt.mipt.oop.sensor.SensorEvent;\n+import ru.sbt.mipt.oop.sensor.SensorEventType;\n+import ru.sbt.mipt.oop.smartelements.Door;\n+import ru.sbt.mipt.oop.smartelements.Light;\n+import ru.sbt.mipt.oop.smartelements.Room;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+class DoorEventHandlerTest {\n+\n+    @Test\n+    void testDoorOpening() {\n+        DoorEventHandler handler = new DoorEventHandler();\n+        Door door1 = new Door(true, \"1\");\n+        Door door2 = new Door(false, \"2\");\n+        Room room = new Room(Collections.emptyList(), Arrays.asList(door1, door2), \"testRoom\");\n+        SmartHome smartHome = new SmartHome(Arrays.asList(room));\n+        SensorEvent doorOpen1 = new SensorEvent(SensorEventType.DOOR_OPEN, \"1\");\n+        SensorEvent doorOpen2 = new SensorEvent(SensorEventType.DOOR_OPEN, \"2\");\n+        handler.handleEvent(smartHome, doorOpen1);\n+        handler.handleEvent(smartHome, doorOpen2);\n+        assert(door1.isOpen());\n+        assert(door2.isOpen());\n+    }\n+\n+    @Test\n+    void testDoorClosing(){\n+        DoorEventHandler handler = new DoorEventHandler();\n+        Door door1 = new Door(true, \"1\");\n+        Door door2 = new Door(false, \"2\");\n+        Room room = new Room(Collections.emptyList(), Arrays.asList(door1, door2), \"testRoom\");\n+        SmartHome smartHome = new SmartHome(Arrays.asList(room));\n+        SensorEvent doorOpen1 = new SensorEvent(SensorEventType.DOOR_CLOSED, \"1\");\n+        SensorEvent doorOpen2 = new SensorEvent(SensorEventType.DOOR_CLOSED, \"2\");\n+        handler.handleEvent(smartHome, doorOpen1);\n+        handler.handleEvent(smartHome, doorOpen2);\n+        assert(!door1.isOpen());\n+        assert(!door2.isOpen());\n+    }\n+\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "4e9bb9c7f5e652b549f1af99179f02159733559c",
    "filename": "src/test/java/ru/sbt/mipt/oop/eventhandlers/HallDoorEventHandlerTest.java",
    "status": "added",
    "additions": 48,
    "deletions": 0,
    "changes": 48,
    "blob_url": "https://github.com/AlexMaximenko/smart-home-2021/blob/72097c860e14db0f794221333e13582baea40d41/src/test/java/ru/sbt/mipt/oop/eventhandlers/HallDoorEventHandlerTest.java",
    "raw_url": "https://github.com/AlexMaximenko/smart-home-2021/raw/72097c860e14db0f794221333e13582baea40d41/src/test/java/ru/sbt/mipt/oop/eventhandlers/HallDoorEventHandlerTest.java",
    "contents_url": "https://api.github.com/repos/AlexMaximenko/smart-home-2021/contents/src/test/java/ru/sbt/mipt/oop/eventhandlers/HallDoorEventHandlerTest.java?ref=72097c860e14db0f794221333e13582baea40d41",
    "patch": "@@ -0,0 +1,48 @@\n+package ru.sbt.mipt.oop.eventhandlers;\n+\n+import org.junit.jupiter.api.Test;\n+import ru.sbt.mipt.oop.home.SmartHome;\n+import ru.sbt.mipt.oop.sensor.SensorEvent;\n+import ru.sbt.mipt.oop.sensor.SensorEventType;\n+import ru.sbt.mipt.oop.smartelements.Door;\n+import ru.sbt.mipt.oop.smartelements.Light;\n+import ru.sbt.mipt.oop.smartelements.Room;\n+\n+import java.util.Arrays;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+class HallDoorEventHandlerTest {\n+\n+    @Test\n+    void testTurningLightsOff(){\n+        HallDoorEventHandler handler= new HallDoorEventHandler();\n+        Door doorHall = new Door(true, \"hallDoor\");\n+        Door doorBath = new Door(false, \"bathDoor\");\n+        Light lightHall = new Light(\"lightHall\", true);\n+        Light lightBath = new Light(\"lightBath\", true);\n+        Room roomBath = new Room(Arrays.asList(lightBath), Arrays.asList(doorBath), \"bath\");\n+        Room roomHall = new Room(Arrays.asList(lightHall), Arrays.asList(doorHall), \"hall\");\n+        SmartHome smartHome = new SmartHome(Arrays.asList(roomBath, roomHall));\n+        SensorEvent hallDoorClosed = new SensorEvent(SensorEventType.DOOR_CLOSED, \"hallDoor\");\n+        handler.handleEvent(smartHome, hallDoorClosed);\n+        assert(!lightBath.isOn());\n+        assert(!lightHall.isOn());\n+    }\n+\n+    @Test\n+    void testCorrectIsHallDoorChecking(){\n+        HallDoorEventHandler handler= new HallDoorEventHandler();\n+        Door doorHall = new Door(true, \"hallDoor\");\n+        Door doorBath = new Door(false, \"bathDoor\");\n+        Light lightHall = new Light(\"lightHall\", false);\n+        Light lightBath = new Light(\"lightBath\", true);\n+        Room roomBath = new Room(Arrays.asList(lightBath), Arrays.asList(doorBath), \"bath\");\n+        Room roomHall = new Room(Arrays.asList(lightHall), Arrays.asList(doorHall), \"hall\");\n+        SmartHome smartHome = new SmartHome(Arrays.asList(roomBath, roomHall));\n+        SensorEvent hallDoorClosed = new SensorEvent(SensorEventType.DOOR_CLOSED, \"bathDoor\");\n+        handler.handleEvent(smartHome, hallDoorClosed);\n+        assert(lightBath.isOn());\n+        assert(!lightHall.isOn());\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "2940918ce17251f114feda57ebdc7a076238ca83",
    "filename": "src/test/java/ru/sbt/mipt/oop/eventhandlers/LightEventHandlerTest.java",
    "status": "added",
    "additions": 46,
    "deletions": 0,
    "changes": 46,
    "blob_url": "https://github.com/AlexMaximenko/smart-home-2021/blob/72097c860e14db0f794221333e13582baea40d41/src/test/java/ru/sbt/mipt/oop/eventhandlers/LightEventHandlerTest.java",
    "raw_url": "https://github.com/AlexMaximenko/smart-home-2021/raw/72097c860e14db0f794221333e13582baea40d41/src/test/java/ru/sbt/mipt/oop/eventhandlers/LightEventHandlerTest.java",
    "contents_url": "https://api.github.com/repos/AlexMaximenko/smart-home-2021/contents/src/test/java/ru/sbt/mipt/oop/eventhandlers/LightEventHandlerTest.java?ref=72097c860e14db0f794221333e13582baea40d41",
    "patch": "@@ -0,0 +1,46 @@\n+package ru.sbt.mipt.oop.eventhandlers;\n+\n+import org.junit.jupiter.api.Test;\n+import ru.sbt.mipt.oop.home.SmartHome;\n+import ru.sbt.mipt.oop.sensor.SensorEvent;\n+import ru.sbt.mipt.oop.sensor.SensorEventType;\n+import ru.sbt.mipt.oop.smartelements.Light;\n+import ru.sbt.mipt.oop.smartelements.Room;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+class LightEventHandlerTest {\n+    @Test\n+    void testLightOn(){\n+        LightEventHandler handler = new LightEventHandler();\n+        Light light1 = new Light(\"1\", true);\n+        Light light2 = new Light(\"2\", false);\n+        Room room = new Room(Arrays.asList(light1, light2), Collections.emptyList(), \"testRoom\");\n+        SmartHome smartHome = new SmartHome(Arrays.asList(room));\n+        SensorEvent lightOn1 = new SensorEvent(SensorEventType.LIGHT_ON, \"1\");\n+        SensorEvent lightOn2 = new SensorEvent(SensorEventType.LIGHT_ON, \"2\");\n+        handler.handleEvent(smartHome, lightOn1);\n+        handler.handleEvent(smartHome, lightOn2);\n+        assert(light1.isOn());\n+        assert(light2.isOn());\n+    }\n+\n+    @Test\n+    void testLightOff(){\n+        LightEventHandler handler = new LightEventHandler();\n+        Light light1 = new Light(\"1\", true);\n+        Light light2 = new Light(\"2\", false);\n+        Room room = new Room(Arrays.asList(light1, light2), Collections.emptyList(), \"testRoom\");\n+        SmartHome smartHome = new SmartHome(Arrays.asList(room));\n+        SensorEvent lightOn1 = new SensorEvent(SensorEventType.LIGHT_OFF, \"1\");\n+        SensorEvent lightOn2 = new SensorEvent(SensorEventType.LIGHT_OFF, \"2\");\n+        handler.handleEvent(smartHome, lightOn1);\n+        handler.handleEvent(smartHome, lightOn2);\n+        assert(!light1.isOn());\n+        assert(!light2.isOn());\n+    }\n+\n+}\n\\ No newline at end of file"
  }
]
