[
  {
    "sha": "e1db1c984c0256db9b4db01a1527def7974fcaf9",
    "filename": "react/javascript/.storybook/main.js",
    "status": "modified",
    "additions": 12,
    "deletions": 1,
    "changes": 13,
    "blob_url": "https://github.com/cucumber/cucumber/blob/88220b7a3e6348c3311d4eb0eb1131d98dddbf4a/react/javascript/.storybook/main.js",
    "raw_url": "https://github.com/cucumber/cucumber/raw/88220b7a3e6348c3311d4eb0eb1131d98dddbf4a/react/javascript/.storybook/main.js",
    "contents_url": "https://api.github.com/repos/cucumber/cucumber/contents/react/javascript/.storybook/main.js?ref=88220b7a3e6348c3311d4eb0eb1131d98dddbf4a",
    "patch": "@@ -11,7 +11,18 @@ module.exports = {\n     config.resolve.fallback = { \"assert\": false }\n     config.module.rules.push({\n       test: /\\.scss$/,\n-      use: ['style-loader', 'css-loader', 'sass-loader'],\n+      use: [\n+        'style-loader',\n+        {\n+          loader: 'css-loader',\n+          options: {\n+            modules: {\n+              auto: true\n+            }\n+          }\n+        },\n+        'sass-loader'\n+      ],\n     })\n     return config\n   },"
  },
  {
    "sha": "f45629d8325c096b7dd274cfeaaed9d949715513",
    "filename": "react/javascript/README.md",
    "status": "modified",
    "additions": 90,
    "deletions": 0,
    "changes": 90,
    "blob_url": "https://github.com/cucumber/cucumber/blob/88220b7a3e6348c3311d4eb0eb1131d98dddbf4a/react/javascript/README.md",
    "raw_url": "https://github.com/cucumber/cucumber/raw/88220b7a3e6348c3311d4eb0eb1131d98dddbf4a/react/javascript/README.md",
    "contents_url": "https://api.github.com/repos/cucumber/cucumber/contents/react/javascript/README.md?ref=88220b7a3e6348c3311d4eb0eb1131d98dddbf4a",
    "patch": "@@ -34,6 +34,96 @@ This is fine for simple use cases where results are not important.\n To render a `<GherkinDocument>` with results and highlighted [Cucumber Expression parameters](https://cucumber.io/docs/cucumber/cucumber-expressions/) parameters it must be nested inside a \n [`<Wrapper>`](src/components/app/Wrapper.tsx) component.\n \n+## Styling\n+\n+There are several ways you can apply different styling to the components.\n+\n+### Built-in themes\n+\n+Besides the default, we have a few other built-in themes:\n+\n+- dark\n+- ???\n+\n+You can activate one of these by wrapping your top-level usage with the `Theme` component:\n+\n+```jsx\n+<Theme theme=\"dark\">\n+  <GherkinDocument />\n+</Theme>\n+```\n+\n+### Custom themes\n+\n+You can also provide your own theme with a small amount of CSS. Pass the `Theme` component an appropriate name:\n+\n+```jsx\n+<Theme theme=\"acme-widgets\">\n+  <GherkinDocument />\n+</Theme>\n+```\n+\n+That name will act as a suffix for a classname `cucumber-theme--acme-widgets`, against which you can override the supported [custom property](https://developer.mozilla.org/en-US/docs/Web/CSS/--*) values as desired. Here's the CSS that drives the built-in \"dark\" theme:\n+\n+```css\n+.cucumber-theme--dark {\n+  --cucumber-background-color: #1d1d26;\n+  --cucumber-text-color: #c9c9d1;\n+  --cucumber-keyword-color: #d89077;\n+  --cucumber-parameter-color: #4caaee;\n+  --cucumber-tag-color: #85a658;\n+  --cucumber-docstring-color: #3d5e41;\n+}\n+```\n+\n+### Custom styles\n+\n+For more control over the styling, you can override the CSS used by individual components.\n+\n+Let's say you want to do something totally different with the typography of doc strings. In your own CSS, you might write something like:\n+\n+```css\n+.acme-docstring {\n+  font-weight: bold;\n+  font-style: italic;\n+  background-color: black;\n+  color: hotpink;\n+  text-shadow: 1px 1px 2px white;\n+  padding: 10px;\n+}\n+```\n+\n+Then, you can wrap your usage in the `CustomRendering` component and provide an object that declares which class names you're going to override and what with:\n+\n+```jsx\n+<CustomRendering support={{\n+  DocString: {\n+    docstring: 'acme-docstring'\n+  }\n+}}>\n+  <GherkinDocument />\n+</CustomRendering>\n+```\n+\n+### Custom rendering\n+\n+To change the rendering of some components entirely, you can selectively provide your own component implementations to be used instead of the built-in ones.\n+\n+Staying with the doc string example, you can use the same `CustomRendering` wrapper, but this time instead of an object with class names, you provide a React functional component, giving you full control over the rendering:\n+\n+```jsx\n+<CustomRendering support={{\n+  DocString: (props) => (\n+    <>\n+      <p>I am going to render this doc string in a textarea:</p>\n+      <textarea>{props.docString.content}</textarea>\n+    </>\n+  )\n+}}>\n+  <GherkinDocument />\n+</CustomRendering>\n+```\n+\n ## Build / hack\n \n Install dependencies"
  },
  {
    "sha": "ef1e3c4cf8d3542e87fb18c72489e05ab2f9596c",
    "filename": "react/javascript/src/components/customise/CustomRendering.tsx",
    "status": "added",
    "additions": 42,
    "deletions": 0,
    "changes": 42,
    "blob_url": "https://github.com/cucumber/cucumber/blob/88220b7a3e6348c3311d4eb0eb1131d98dddbf4a/react/javascript/src/components/customise/CustomRendering.tsx",
    "raw_url": "https://github.com/cucumber/cucumber/raw/88220b7a3e6348c3311d4eb0eb1131d98dddbf4a/react/javascript/src/components/customise/CustomRendering.tsx",
    "contents_url": "https://api.github.com/repos/cucumber/cucumber/contents/react/javascript/src/components/customise/CustomRendering.tsx?ref=88220b7a3e6348c3311d4eb0eb1131d98dddbf4a",
    "patch": "@@ -0,0 +1,42 @@\n+import React from 'react'\n+import { messages } from '@cucumber/messages'\n+\n+export declare type CustomRenderer<R, C> = React.FunctionComponent<R> | C\n+\n+export interface DocStringProps {\n+  docString: messages.GherkinDocument.Feature.Step.IDocString\n+}\n+\n+export interface DocStringClasses {\n+  docstring: string\n+}\n+\n+export interface TagsProps {\n+  tags: messages.GherkinDocument.Feature.ITag[]\n+}\n+\n+export interface TagsClasses {\n+  tags: string\n+  tag: string\n+}\n+\n+export interface CustomRenderingSupport {\n+  DocString?: CustomRenderer<DocStringProps, DocStringClasses>\n+  Tags?: CustomRenderer<TagsProps, TagsClasses>\n+}\n+\n+export const CustomRenderingContext = React.createContext<CustomRenderingSupport>(\n+  {}\n+)\n+\n+const CustomRendering: React.FunctionComponent<{\n+  support: CustomRenderingSupport\n+}> = (props) => {\n+  return (\n+    <CustomRenderingContext.Provider value={props.support}>\n+      {props.children}\n+    </CustomRenderingContext.Provider>\n+  )\n+}\n+\n+export default CustomRendering"
  },
  {
    "sha": "505bc85282bb83d15c536a07f382ec3f4632c39e",
    "filename": "react/javascript/src/components/customise/Theme.tsx",
    "status": "added",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/cucumber/cucumber/blob/88220b7a3e6348c3311d4eb0eb1131d98dddbf4a/react/javascript/src/components/customise/Theme.tsx",
    "raw_url": "https://github.com/cucumber/cucumber/raw/88220b7a3e6348c3311d4eb0eb1131d98dddbf4a/react/javascript/src/components/customise/Theme.tsx",
    "contents_url": "https://api.github.com/repos/cucumber/cucumber/contents/react/javascript/src/components/customise/Theme.tsx?ref=88220b7a3e6348c3311d4eb0eb1131d98dddbf4a",
    "patch": "@@ -0,0 +1,15 @@\n+import React from 'react'\n+\n+export declare type IncludedTheme = 'dark' | 'default'\n+\n+const Theme: React.FunctionComponent<{ theme?: IncludedTheme | string }> = (\n+  props\n+) => {\n+  return (\n+    <div className={'cucumber-theme--' + (props.theme || 'default')}>\n+      {props.children}\n+    </div>\n+  )\n+}\n+\n+export default Theme"
  },
  {
    "sha": "090cc9e5a9192b7d5dcd7fb5ec18c38db40e1bcb",
    "filename": "react/javascript/src/components/gherkin/DocString.module.scss",
    "status": "added",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/cucumber/cucumber/blob/88220b7a3e6348c3311d4eb0eb1131d98dddbf4a/react/javascript/src/components/gherkin/DocString.module.scss",
    "raw_url": "https://github.com/cucumber/cucumber/raw/88220b7a3e6348c3311d4eb0eb1131d98dddbf4a/react/javascript/src/components/gherkin/DocString.module.scss",
    "contents_url": "https://api.github.com/repos/cucumber/cucumber/contents/react/javascript/src/components/gherkin/DocString.module.scss?ref=88220b7a3e6348c3311d4eb0eb1131d98dddbf4a",
    "patch": "@@ -0,0 +1,22 @@\n+@import '../../styles/theming';\n+\n+.docstring {\n+    color: $docstringColor;\n+    overflow-x: auto;\n+\n+    &::before,\n+    &::after {\n+        content: '\"\"\"';\n+        display: block;\n+        // adjust so quote marks sit consistent distance from content at both ends\n+        transform: translateY(0.25em);\n+    }\n+\n+    &::before {\n+        padding-bottom: 0.25em;\n+    }\n+\n+    &::after {\n+        padding-top: 0.25em;\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "77f5e509d05fd80afd784af713ada945ba12fd42",
    "filename": "react/javascript/src/components/gherkin/DocString.tsx",
    "status": "modified",
    "additions": 12,
    "deletions": 8,
    "changes": 20,
    "blob_url": "https://github.com/cucumber/cucumber/blob/88220b7a3e6348c3311d4eb0eb1131d98dddbf4a/react/javascript/src/components/gherkin/DocString.tsx",
    "raw_url": "https://github.com/cucumber/cucumber/raw/88220b7a3e6348c3311d4eb0eb1131d98dddbf4a/react/javascript/src/components/gherkin/DocString.tsx",
    "contents_url": "https://api.github.com/repos/cucumber/cucumber/contents/react/javascript/src/components/gherkin/DocString.tsx?ref=88220b7a3e6348c3311d4eb0eb1131d98dddbf4a",
    "patch": "@@ -1,14 +1,18 @@\n-import React from 'react'\n-import { messages } from '@cucumber/messages'\n+import React, { useContext } from 'react'\n import HighLight from '../app/HighLight'\n+import styles from './DocString.module.scss'\n+import {\n+  CustomRenderingContext,\n+  DocStringProps,\n+} from '../customise/CustomRendering'\n \n-interface IProps {\n-  docString: messages.GherkinDocument.Feature.Step.IDocString\n-}\n-\n-const DocString: React.FunctionComponent<IProps> = ({ docString }) => {\n+const DocString: React.FunctionComponent<DocStringProps> = ({ docString }) => {\n+  const { DocString: Custom } = useContext(CustomRenderingContext)\n+  if (typeof Custom === 'function') {\n+    return <Custom docString={docString} />\n+  }\n   return (\n-    <pre className=\"cucumber-code cucumber-docstring\">\n+    <pre className={(Custom ?? styles).docstring}>\n       <HighLight text={docString.content} />\n     </pre>\n   )"
  },
  {
    "sha": "356e5392eb073163c271babb8191081b6a0a3373",
    "filename": "react/javascript/src/components/gherkin/Tags.module.scss",
    "status": "added",
    "additions": 17,
    "deletions": 0,
    "changes": 17,
    "blob_url": "https://github.com/cucumber/cucumber/blob/88220b7a3e6348c3311d4eb0eb1131d98dddbf4a/react/javascript/src/components/gherkin/Tags.module.scss",
    "raw_url": "https://github.com/cucumber/cucumber/raw/88220b7a3e6348c3311d4eb0eb1131d98dddbf4a/react/javascript/src/components/gherkin/Tags.module.scss",
    "contents_url": "https://api.github.com/repos/cucumber/cucumber/contents/react/javascript/src/components/gherkin/Tags.module.scss?ref=88220b7a3e6348c3311d4eb0eb1131d98dddbf4a",
    "patch": "@@ -0,0 +1,17 @@\n+@import '../../styles/theming';\n+\n+.tags {\n+  padding: 0;\n+  margin-bottom: 0;\n+}\n+\n+.tag {\n+  display: inline;\n+  list-style-type: none;\n+  padding: 8px 0;\n+  color: $tagColor;\n+\n+  &:not(:last-child) {\n+    margin-right: 10px;\n+  }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "12688ebfdd41d0e28ae83a2b55f44673b2792d6a",
    "filename": "react/javascript/src/components/gherkin/Tags.tsx",
    "status": "modified",
    "additions": 10,
    "deletions": 9,
    "changes": 19,
    "blob_url": "https://github.com/cucumber/cucumber/blob/88220b7a3e6348c3311d4eb0eb1131d98dddbf4a/react/javascript/src/components/gherkin/Tags.tsx",
    "raw_url": "https://github.com/cucumber/cucumber/raw/88220b7a3e6348c3311d4eb0eb1131d98dddbf4a/react/javascript/src/components/gherkin/Tags.tsx",
    "contents_url": "https://api.github.com/repos/cucumber/cucumber/contents/react/javascript/src/components/gherkin/Tags.tsx?ref=88220b7a3e6348c3311d4eb0eb1131d98dddbf4a",
    "patch": "@@ -1,19 +1,20 @@\n-import React from 'react'\n-import { messages } from '@cucumber/messages'\n+import React, { useContext } from 'react'\n import HighLight from '../app/HighLight'\n+import { CustomRenderingContext, TagsProps } from '../customise/CustomRendering'\n+import styles from './Tags.module.scss'\n \n-interface IProps {\n-  tags: messages.GherkinDocument.Feature.ITag[]\n-}\n-\n-const Tags: React.FunctionComponent<IProps> = ({ tags }) => {\n+const Tags: React.FunctionComponent<TagsProps> = ({ tags }) => {\n+  const { Tags: Custom } = useContext(CustomRenderingContext)\n   if (!tags) {\n     return null\n   }\n+  if (typeof Custom === 'function') {\n+    return <Custom tags={tags} />\n+  }\n   return (\n-    <ul className=\"cucumber-tags\">\n+    <ul className={(Custom ?? styles).tags}>\n       {tags.map((tag, index) => (\n-        <li className=\"cucumber-tag\" key={index}>\n+        <li className={(Custom ?? styles).tag} key={index}>\n           <HighLight text={tag.name} />\n         </li>\n       ))}"
  },
  {
    "sha": "e696084e9ed2f192592c37d9e1d6b47423a947e5",
    "filename": "react/javascript/src/stories/CustomRendering.stories.tsx",
    "status": "added",
    "additions": 80,
    "deletions": 0,
    "changes": 80,
    "blob_url": "https://github.com/cucumber/cucumber/blob/88220b7a3e6348c3311d4eb0eb1131d98dddbf4a/react/javascript/src/stories/CustomRendering.stories.tsx",
    "raw_url": "https://github.com/cucumber/cucumber/raw/88220b7a3e6348c3311d4eb0eb1131d98dddbf4a/react/javascript/src/stories/CustomRendering.stories.tsx",
    "contents_url": "https://api.github.com/repos/cucumber/cucumber/contents/react/javascript/src/stories/CustomRendering.stories.tsx?ref=88220b7a3e6348c3311d4eb0eb1131d98dddbf4a",
    "patch": "@@ -0,0 +1,80 @@\n+import React from 'react'\n+import { Meta, Story } from '@storybook/react'\n+\n+import { messages } from '@cucumber/messages'\n+import { Query as CucumberQuery } from '@cucumber/query'\n+import { Query as GherkinQuery } from '@cucumber/gherkin-utils'\n+import GherkinDocumentList from '../components/app/GherkinDocumentList'\n+import QueriesWrapper from '../components/app/QueriesWrapper'\n+import { EnvelopesQuery } from '../EnvelopesQueryContext'\n+\n+import '../styles/react-accessible-accordion.css'\n+import '../styles/styles.scss'\n+import './custom-classes.scss'\n+\n+import attachments from '../../acceptance/attachments/attachments'\n+import CustomRendering, {\n+  CustomRenderingSupport,\n+  DocStringProps,\n+} from '../components/customise/CustomRendering'\n+\n+export default {\n+  title: 'CustomRendering',\n+  component: CustomRendering,\n+} as Meta\n+\n+type Props = {\n+  gherkinQuery: GherkinQuery\n+  cucumberQuery: CucumberQuery\n+  envelopesQuery: EnvelopesQuery\n+}\n+type TemplateArgs = {\n+  envelopes: readonly messages.IEnvelope[]\n+  support: CustomRenderingSupport\n+}\n+\n+const Template: Story<TemplateArgs> = ({ envelopes, support }) => {\n+  return (\n+    <CustomRendering support={support}>\n+      <QueriesWrapper {...props(envelopes)}>\n+        <GherkinDocumentList />\n+      </QueriesWrapper>\n+    </CustomRendering>\n+  )\n+}\n+\n+export const Classes = Template.bind({})\n+Classes.args = {\n+  envelopes: attachments,\n+  support: {\n+    DocString: {\n+      docstring: 'custom-docstring',\n+    },\n+  },\n+}\n+\n+export const Components = Template.bind({})\n+Components.args = {\n+  envelopes: attachments,\n+  support: {\n+    // eslint-disable-next-line react/display-name\n+    DocString: (props: DocStringProps) => (\n+      <>\n+        <p>I am going to render this doc string in a textarea:</p>\n+        <textarea>{props.docString.content}</textarea>\n+      </>\n+    ),\n+  },\n+}\n+\n+function props(envelopes: readonly messages.IEnvelope[]): Props {\n+  const gherkinQuery = new GherkinQuery()\n+  const cucumberQuery = new CucumberQuery()\n+  const envelopesQuery = new EnvelopesQuery()\n+  for (const envelope of envelopes) {\n+    gherkinQuery.update(envelope)\n+    cucumberQuery.update(envelope)\n+    envelopesQuery.update(envelope)\n+  }\n+  return { gherkinQuery, cucumberQuery, envelopesQuery }\n+}"
  },
  {
    "sha": "2a64dce92c4168a8d1c409dfc3d1f803782aeb53",
    "filename": "react/javascript/src/stories/GherkinDocument.stories.tsx",
    "status": "modified",
    "additions": 20,
    "deletions": 5,
    "changes": 25,
    "blob_url": "https://github.com/cucumber/cucumber/blob/88220b7a3e6348c3311d4eb0eb1131d98dddbf4a/react/javascript/src/stories/GherkinDocument.stories.tsx",
    "raw_url": "https://github.com/cucumber/cucumber/raw/88220b7a3e6348c3311d4eb0eb1131d98dddbf4a/react/javascript/src/stories/GherkinDocument.stories.tsx",
    "contents_url": "https://api.github.com/repos/cucumber/cucumber/contents/react/javascript/src/stories/GherkinDocument.stories.tsx?ref=88220b7a3e6348c3311d4eb0eb1131d98dddbf4a",
    "patch": "@@ -21,24 +21,39 @@ import parameterTypes from '../../acceptance/parameter-types/parameter-types'\n import rules from '../../acceptance/rules/rules'\n import stacktTraces from '../../acceptance/stack-traces/stack-traces'\n import unknownParameterTypes from '../../acceptance/unknown-parameter-type/unknown-parameter-type'\n+import Theme, { IncludedTheme } from '../components/customise/Theme'\n \n export default {\n   title: 'GherkinDocument',\n   component: GherkinDocument,\n+  argTypes: {\n+    theme: {\n+      control: {\n+        type: 'inline-radio',\n+        options: ['default', 'dark'],\n+      },\n+      defaultValue: 'default',\n+    },\n+  },\n } as Meta\n \n type Props = {\n   gherkinQuery: GherkinQuery\n   cucumberQuery: CucumberQuery\n   envelopesQuery: EnvelopesQuery\n }\n-type TemplateArgs = { envelopes: readonly messages.IEnvelope[] }\n+type TemplateArgs = {\n+  envelopes: readonly messages.IEnvelope[]\n+  theme?: IncludedTheme\n+}\n \n-const Template: Story<TemplateArgs> = ({ envelopes }) => {\n+const Template: Story<TemplateArgs> = ({ envelopes, theme }) => {\n   return (\n-    <QueriesWrapper {...props(envelopes)}>\n-      <GherkinDocumentList />\n-    </QueriesWrapper>\n+    <Theme theme={theme}>\n+      <QueriesWrapper {...props(envelopes)}>\n+        <GherkinDocumentList />\n+      </QueriesWrapper>\n+    </Theme>\n   )\n }\n "
  },
  {
    "sha": "fd1f6084c4aecad9f39a37cfa112c4a7cc19fe2c",
    "filename": "react/javascript/src/stories/custom-classes.scss",
    "status": "added",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/cucumber/cucumber/blob/88220b7a3e6348c3311d4eb0eb1131d98dddbf4a/react/javascript/src/stories/custom-classes.scss",
    "raw_url": "https://github.com/cucumber/cucumber/raw/88220b7a3e6348c3311d4eb0eb1131d98dddbf4a/react/javascript/src/stories/custom-classes.scss",
    "contents_url": "https://api.github.com/repos/cucumber/cucumber/contents/react/javascript/src/stories/custom-classes.scss?ref=88220b7a3e6348c3311d4eb0eb1131d98dddbf4a",
    "patch": "@@ -0,0 +1,8 @@\n+.custom-docstring {\n+  font-weight: bold;\n+  font-style: italic;\n+  background-color: black;\n+  color: hotpink;\n+  text-shadow: 1px 1px 2px white;\n+  padding: 10px;\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "d66ecf9064885c2ce099a7df597241c31fc2d4a9",
    "filename": "react/javascript/src/styles/styles.scss",
    "status": "modified",
    "additions": 29,
    "deletions": 19,
    "changes": 48,
    "blob_url": "https://github.com/cucumber/cucumber/blob/88220b7a3e6348c3311d4eb0eb1131d98dddbf4a/react/javascript/src/styles/styles.scss",
    "raw_url": "https://github.com/cucumber/cucumber/raw/88220b7a3e6348c3311d4eb0eb1131d98dddbf4a/react/javascript/src/styles/styles.scss",
    "contents_url": "https://api.github.com/repos/cucumber/cucumber/contents/react/javascript/src/styles/styles.scss?ref=88220b7a3e6348c3311d4eb0eb1131d98dddbf4a",
    "patch": "@@ -1,3 +1,6 @@\n+@import './theming';\n+@import './themes';\n+\n $border-color: #4B5662;\n $white: #F0EFFB;\n $summary-border-color: rgba(0, 0, 0, 0.1);\n@@ -35,10 +38,15 @@ $statusColors:\n \n \n   .gherkin-document-list {\n-    font: 14px 'Open Sans', sans-serif;\n-    color: #161C24;\n-    background: #fff;\n+    font-size: 14px;\n+    font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace;\n+    color: $textColor;\n+    background: $backgroundColor;\n     overflow-x: hidden;\n+\n+    pre {\n+      font-family: inherit;\n+    }\n   }\n \n   .cucumber-title {\n@@ -48,28 +56,14 @@ $statusColors:\n \n     &__keyword {\n       font-weight: bold;\n+      color: $keywordColor;\n     }\n \n     &__text {\n       font-weight: normal;\n     }\n   }\n \n-\n-  .cucumber-tags {\n-    padding: 0;\n-    margin-bottom: 0;\n-\n-    .cucumber-tag {\n-      display: inline;\n-      list-style-type: none;\n-      padding: 4px 8px 4px 8px;\n-      margin-right: 6px;\n-      background-color: #FFFFFF;\n-      border-radius: 6px;\n-    }\n-  }\n-\n   .cucumber-feature__icon {\n     padding-top: 0.35em;\n     padding-right: 0.5em;\n@@ -109,6 +103,7 @@ $statusColors:\n \n       &__keyword {\n         font-weight: bold;\n+        color: $keywordColor;\n       }\n \n       &__text {\n@@ -117,7 +112,7 @@ $statusColors:\n \n       &__param {\n         font-weight: normal;\n-        font-style: italic;\n+        color: $parameterColor;\n       }\n     }\n   }\n@@ -146,6 +141,21 @@ $statusColors:\n     }\n   }\n \n+  .cucumber-datatable {\n+    tr + tr {\n+      border-top: 4px solid white;\n+    }\n+\n+    .cucumber-table__cell {\n+      padding: 0.4em 0.6em;\n+      border-top: none;\n+      border-bottom: none;\n+      border-width: 2px;\n+      border-color: $keywordColor;\n+      color: $parameterColor;\n+    }\n+  }\n+\n   .cucumber-code {\n     padding: 0.25em;\n     background-color: rgb(235, 235, 235);"
  },
  {
    "sha": "7e1538be18902a62c3b87be8009de43c89a69634",
    "filename": "react/javascript/src/styles/themes.scss",
    "status": "added",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/cucumber/cucumber/blob/88220b7a3e6348c3311d4eb0eb1131d98dddbf4a/react/javascript/src/styles/themes.scss",
    "raw_url": "https://github.com/cucumber/cucumber/raw/88220b7a3e6348c3311d4eb0eb1131d98dddbf4a/react/javascript/src/styles/themes.scss",
    "contents_url": "https://api.github.com/repos/cucumber/cucumber/contents/react/javascript/src/styles/themes.scss?ref=88220b7a3e6348c3311d4eb0eb1131d98dddbf4a",
    "patch": "@@ -0,0 +1,8 @@\n+.cucumber-theme--dark {\n+  --cucumber-background-color: #1d1d26;\n+  --cucumber-text-color: #c9c9d1;\n+  --cucumber-keyword-color: #d89077;\n+  --cucumber-parameter-color: #4caaee;\n+  --cucumber-tag-color: #85a658;\n+  --cucumber-docstring-color: #3d5e41;\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "c5487dca77c75be04df68d87e1c05cb15c957f70",
    "filename": "react/javascript/src/styles/theming.scss",
    "status": "added",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/cucumber/cucumber/blob/88220b7a3e6348c3311d4eb0eb1131d98dddbf4a/react/javascript/src/styles/theming.scss",
    "raw_url": "https://github.com/cucumber/cucumber/raw/88220b7a3e6348c3311d4eb0eb1131d98dddbf4a/react/javascript/src/styles/theming.scss",
    "contents_url": "https://api.github.com/repos/cucumber/cucumber/contents/react/javascript/src/styles/theming.scss?ref=88220b7a3e6348c3311d4eb0eb1131d98dddbf4a",
    "patch": "@@ -0,0 +1,6 @@\n+$backgroundColor: var(--cucumber-background-color, white);\n+$textColor: var(--cucumber-text-color, #222);\n+$keywordColor: var(--cucumber-keyword-color, #000080);\n+$parameterColor: var(--cucumber-parameter-color, #297bde);\n+$tagColor: var(--cucumber-tag-color, #808000);\n+$docstringColor: var(--cucumber-docstring-color, #008080);\n\\ No newline at end of file"
  }
]
