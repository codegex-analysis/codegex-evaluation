[
  {
    "sha": "5d39e5b44861f1ea5f8515de9da910935d2bace1",
    "filename": "CHANGELOG.md",
    "status": "modified",
    "additions": 12,
    "deletions": 1,
    "changes": 13,
    "blob_url": "https://github.com/jwplayer/jwplatform-java/blob/32def55a166dbc59c2717f11a911e56d6d8cf5c7/CHANGELOG.md",
    "raw_url": "https://github.com/jwplayer/jwplatform-java/raw/32def55a166dbc59c2717f11a911e56d6d8cf5c7/CHANGELOG.md",
    "contents_url": "https://api.github.com/repos/jwplayer/jwplatform-java/contents/CHANGELOG.md?ref=32def55a166dbc59c2717f11a911e56d6d8cf5c7",
    "patch": "@@ -1,17 +1,28 @@\n+## 0.4.0\n+\n+* Stop using nested exception handling\n+* Bump junit dependency to v4.13 for CVE patch\n+\n ## 0.3.1\n+\n * Javadoc updates\n \n ## 0.3.0\n+\n * Security upgrade of puppycrawl\n * Add param for headers to requests() and upload()\n * Bugfix the Exception Factory\n \n ## 0.2.0\n+\n * Add support for POST request endpoints.\n-* Refactor exception handling such that exceptions are no longer nested classes of the factory. _This is a breaking change._\n+* Refactor exception handling such that exceptions are no longer nested classes of the factory. _This is a breaking\n+  change._\n \n ## 0.1.0\n+\n * Initial version of the client.\n \n ## 0.0.0\n+\n * Initial test version of the client.\n\\ No newline at end of file"
  },
  {
    "sha": "fbab39fafeee12abe0d2d8b145bebace4789adc0",
    "filename": "README.md",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/jwplayer/jwplatform-java/blob/32def55a166dbc59c2717f11a911e56d6d8cf5c7/README.md",
    "raw_url": "https://github.com/jwplayer/jwplatform-java/raw/32def55a166dbc59c2717f11a911e56d6d8cf5c7/README.md",
    "contents_url": "https://api.github.com/repos/jwplayer/jwplatform-java/contents/README.md?ref=32def55a166dbc59c2717f11a911e56d6d8cf5c7",
    "patch": "@@ -19,7 +19,7 @@ Add this dependency to your project's POM:\n <dependency>\n   <groupId>com.jwplayer</groupId>\n   <artifactId>jwplatform</artifactId>\n-  <version>0.3.1</version>\n+  <version>0.4.0</version>\n </dependency>\n ```\n "
  },
  {
    "sha": "1bfb6a3d401fb2d27f78b94983de437aa5a96248",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/jwplayer/jwplatform-java/blob/32def55a166dbc59c2717f11a911e56d6d8cf5c7/pom.xml",
    "raw_url": "https://github.com/jwplayer/jwplatform-java/raw/32def55a166dbc59c2717f11a911e56d6d8cf5c7/pom.xml",
    "contents_url": "https://api.github.com/repos/jwplayer/jwplatform-java/contents/pom.xml?ref=32def55a166dbc59c2717f11a911e56d6d8cf5c7",
    "patch": "@@ -79,7 +79,7 @@\n         <commons-lang3.version>3.9</commons-lang3.version>\n         <unirest.version>1.4.9</unirest.version>\n         <!-- test dependencies versions -->\n-        <junit.version>4.12</junit.version>\n+        <junit.version>4.13</junit.version>\n         <powermock-module-junit4.version>1.6.2</powermock-module-junit4.version>\n         <powermock-api-mockito.version>1.6.2</powermock-api-mockito.version>\n         <jacoco-agent-runtime>0.8.1</jacoco-agent-runtime>"
  },
  {
    "sha": "8c0b9062595113dd2c4b91ab581729f1dcd97c7f",
    "filename": "src/main/java/com/jwplayer/jwplatform/JWPlatformClient.java",
    "status": "modified",
    "additions": 39,
    "deletions": 61,
    "changes": 100,
    "blob_url": "https://github.com/jwplayer/jwplatform-java/blob/32def55a166dbc59c2717f11a911e56d6d8cf5c7/src/main/java/com/jwplayer/jwplatform/JWPlatformClient.java",
    "raw_url": "https://github.com/jwplayer/jwplatform-java/raw/32def55a166dbc59c2717f11a911e56d6d8cf5c7/src/main/java/com/jwplayer/jwplatform/JWPlatformClient.java",
    "contents_url": "https://api.github.com/repos/jwplayer/jwplatform-java/contents/src/main/java/com/jwplayer/jwplatform/JWPlatformClient.java?ref=32def55a166dbc59c2717f11a911e56d6d8cf5c7",
    "patch": "@@ -35,7 +35,7 @@\n  * https://developer.jwplayer.com/jw-platform/reference/v1/index.html\n  *\n  * <p>Example:\n- *    JWPlatformClient client = JWPlatformClient.create(apiKey, apiSecret);\n+ * JWPlatformClient client = JWPlatformClient.create(apiKey, apiSecret);\n  */\n public class JWPlatformClient {\n \n@@ -47,8 +47,8 @@\n    * Instantiate a new {@code JWPlatformClient} instance.\n    *\n    * @param apiSecret - your api key\n-   * @param apiKey - your api secret\n-   * @param host - url for the Media API\n+   * @param apiKey    - your api secret\n+   * @param host      - url for the Media API\n    */\n   private JWPlatformClient(final String apiKey, final String apiSecret, final String host) {\n     this.apiKey = apiKey;\n@@ -98,18 +98,18 @@ private String getRandomNonce() {\n    * @param stringToEncode - the {@code String} to be URL Encoded\n    * @return - JW Platform API compliant encoded {@code String}\n    * @throws JWPlatformException - an exception occurred trying to encode the requested\n-   *     {@code String}\n+   *                             {@code String}\n    */\n   private String encodeStringForJWPlatformAPI(final String stringToEncode)\n-          throws JWPlatformException {\n+      throws JWPlatformException {\n     try {\n       final String encodedValue = URLEncoder.encode(stringToEncode, \"utf-8\");\n \n       // string replacements to align with the API\n       return encodedValue.replace(\"%7E\", \"~\").replace(\"*\", \"%2A\").replace(\"+\", \"%20\");\n     } catch (final UnsupportedEncodingException e) {\n       throw new JWPlatformUnknownException(\n-              String.format(\"Exception thrown encoding URL parameter %s\", e.toString()));\n+          String.format(\"Exception thrown encoding URL parameter %s\", e.toString()));\n     }\n   }\n \n@@ -119,26 +119,26 @@ private String encodeStringForJWPlatformAPI(final String stringToEncode)\n    * error message.\n    *\n    * @param statusCode - the response status code\n-   * @param response - a {@code JSONObject} object with the API response block\n+   * @param response   - a {@code JSONObject} object with the API response block\n    * @throws JWPlatformException - API returned an exception\n    */\n   private void checkForNon200Response(final int statusCode, final JSONObject response)\n-          throws JWPlatformException {\n+      throws JWPlatformException {\n     if (statusCode != 200) {\n       try {\n         MediaAPIExceptionFactory.throwJWPlatformException(\n-                StringUtils.stripEnd(response.getString(\"code\"), \"Error\"), response.toString());\n+            StringUtils.stripEnd(response.getString(\"code\"), \"Error\"), response.toString());\n       } catch (final JSONException e) {\n         throw new JWPlatformUnknownException(\n-                String.format(\"Unknown JSONException thrown: %s\", e.toString()));\n+            String.format(\"Unknown JSONException thrown: %s\", e.toString()));\n       }\n     }\n   }\n \n   /**\n    * Generates fully formed URL for api request.\n    *\n-   * @param path - endpoint to be used in API request which includes a leading slash (ie /my/path not my/path)\n+   * @param path   - endpoint to be used in API request which includes a leading slash (ie /my/path not my/path)\n    * @param params - Parameters to be included in the request\n    * @return - Fully formed request URL for an API request with api signature\n    * @throws JWPlatformException - an exception occurred during encoding\n@@ -173,28 +173,28 @@ private String buildRequestUrl(\n   /**\n    * Upload a video file from the local file system.\n    *\n-   * @param uploadPath - the fully constructed upload url which includes a leading slash (ie /my/path not my/path)\n+   * @param uploadPath    - the fully constructed upload url which includes a leading slash (ie /my/path not my/path)\n    * @param localFilePath - the path to the video file on the local file system\n-   * @param headers - Map of headers to add to the request\n+   * @param headers       - Map of headers to add to the request\n    * @return - JSON response from JW Platform API\n    * @throws JWPlatformException - API returned an exception\n    */\n   private JSONObject uploadVideo(final String uploadPath, final String localFilePath, final Map<String, String> headers)\n-          throws JWPlatformException {\n+      throws JWPlatformException {\n     JSONObject response;\n     try {\n       HttpResponse<InputStream> r = Unirest.post(uploadPath)\n-              .headers(headers)\n-              .field(\"file\", new File(localFilePath))\n-              .asBinary();\n+          .headers(headers)\n+          .field(\"file\", new File(localFilePath))\n+          .asBinary();\n \n       final Reader reader = new InputStreamReader(r.getBody());\n       response = XML.toJSONObject(CharStreams.toString(reader));\n \n       checkForNon200Response(r.getStatus(), response.getJSONObject(\"response\"));\n     } catch (final UnirestException | IOException e) {\n       throw new JWPlatformUnknownException(\n-              String.format(\"Non-JSON response from server: %s\", e.toString()));\n+          String.format(\"Non-JSON response from server: %s\", e.toString()));\n     }\n \n     return response;\n@@ -211,7 +211,7 @@ public JSONObject request(final String path) throws JWPlatformException {\n    * see {@link #request(String, Map, boolean, String)}\n    */\n   public JSONObject request(final String path, final Map<String, String> params)\n-          throws JWPlatformException {\n+      throws JWPlatformException {\n     return this.request(path, params, false, \"Get\", new HashMap<>());\n   }\n \n@@ -226,7 +226,8 @@ public JSONObject request(final String path, final String requestType)\n   /**\n    * see {@link #request(String, Map, boolean, String)}\n    */\n-  public JSONObject request(final String path, final Map<String, String> params, final boolean isBodyParams, final String requestType)\n+  public JSONObject request(final String path, final Map<String, String> params, final boolean isBodyParams,\n+                            final String requestType)\n       throws JWPlatformException {\n     return this.request(path, params, isBodyParams, requestType, new HashMap<>());\n   }\n@@ -237,26 +238,18 @@ public JSONObject request(final String path, final Map<String, String> params, f\n    * <p>This function generates an API signature, makes request to JWPlatform API and returns\n    * result.\n    *\n-   * @param path - endpoint to be used in API request which includes a leading slash (ie /my/path not my/path)\n-   * @param params - Parameters to be included in the request\n+   * @param path         - endpoint to be used in API request which includes a leading slash (ie /my/path not my/path)\n+   * @param params       - Parameters to be included in the request\n    * @param isBodyParams - Whether the parameters are to be included as query params or in\n    *                     the body of the request. This is only relevant for POST requests.\n-   * @param requestType - The type of HTTP. Valid values are [\"GET\", \"POST\"].\n-   * @param headers - Map of headers to add to the request\n+   * @param requestType  - The type of HTTP. Valid values are [\"GET\", \"POST\"].\n+   * @param headers      - Map of headers to add to the request\n    * @return - JSON response from JW Platform API\n-   * @throws JWPlatformException - JWPlatform API returned an exception. Because we dynamically\n-   *     build our exceptions, if you wish to retrieve the error message, you must call it\n-   *     from the cause, not the exception directly. The exception's message will be {@code null}.\n-   *\n-   *     Example: this will be {@code null}\n-   *         {@code e.getMessage()}\n-   *\n-   *     Example: this will contain error message\n-   *         {@code e.getCause().getMessage()}\n+   * @throws JWPlatformException - JWPlatform API returned an exception.\n    */\n   public JSONObject request(final String path, final Map<String, String> params,\n                             final boolean isBodyParams, final String requestType, final Map<String, String> headers)\n-          throws JWPlatformException {\n+      throws JWPlatformException {\n     final String requestUrl;\n     final HttpResponse<JsonNode> response;\n \n@@ -284,7 +277,7 @@ public JSONObject request(final String path, final Map<String, String> params,\n       return responseBlock;\n     } catch (final UnirestException e) {\n       throw new JWPlatformUnknownException(\n-              String.format(\"Non-JSON response from server: %s\", e.toString()));\n+          String.format(\"Non-JSON response from server: %s\", e.toString()));\n     }\n   }\n \n@@ -300,21 +293,14 @@ public JSONObject upload(final JSONObject videosCreateResponse, final String loc\n    * Upload a video file for a video created with `sourcetype: file`.\n    *\n    * @param videosCreateResponse - the response object from a '/videos/create' API call.\n-   * @param localFilePath - path to the video file on the local file system.\n-   * @param headers - map of headers for the request\n+   * @param localFilePath        - path to the video file on the local file system.\n+   * @param headers              - map of headers for the request\n    * @return - JSON response from JW Platform API\n-   * @throws JWPlatformException - JWPlatform API returned an exception. Because we dynamically\n-   *     build our exceptions, if you wish to retrieve the error message, you must call it\n-   *     from the cause, not the exception directly. The exception's message will be {@code null}.\n-   *\n-   *     Example: this will be {@code null}\n-   *         {@code e.getMessage()}\n-   *\n-   *     Example: this will contain error message\n-   *         {@code e.getCause().getMessage()}\n+   * @throws JWPlatformException - JWPlatform API returned an exception.\n    */\n-  public JSONObject upload(final JSONObject videosCreateResponse, final String localFilePath, final Map<String, String> headers)\n-          throws JWPlatformException {\n+  public JSONObject upload(final JSONObject videosCreateResponse, final String localFilePath,\n+                           final Map<String, String> headers)\n+      throws JWPlatformException {\n     final JSONObject link = videosCreateResponse.getJSONObject(\"link\");\n     final String path = link.getString(\"path\");\n     final String protocol = link.getString(\"protocol\");\n@@ -323,28 +309,20 @@ public JSONObject upload(final JSONObject videosCreateResponse, final String loc\n     final String key = query.getString(\"key\");\n     final String token = query.getString(\"token\");\n     final String uploadUrl =\n-            protocol + \"://\" + address + path + \"?api_format=xml&key=\" + key + \"&token=\" + token;\n+        protocol + \"://\" + address + path + \"?api_format=xml&key=\" + key + \"&token=\" + token;\n \n     return this.upload(uploadUrl, localFilePath, headers);\n   }\n \n   /**\n    * Upload a video file for a video created with `sourcetype: file`.\n    *\n-   * @param uploadPath - the fully constructed upload url. Refer to the JWPlatform documentation for\n-   *     instructions on how to build the url\n+   * @param uploadPath    - the fully constructed upload url. Refer to the JWPlatform documentation for\n+   *                      instructions on how to build the url\n    * @param localFilePath - path to the video file on the local file system.\n-   * @param headers - map of headers for the request\n+   * @param headers       - map of headers for the request\n    * @return - JSON response from JW Platform API\n-   * @throws JWPlatformException - JWPlatform API returned an exception. Because we dynamically\n-   *     build our exceptions, if you wish to retrieve the error message, you must call it\n-   *     from the cause, not the exception directly. The exception's message will be {@code null}.\n-   *\n-   *     Example: this will be {@code null}\n-   *         {@code e.getMessage()}\n-   *\n-   *     Example: this will contain error message\n-   *         {@code e.getCause().getMessage()}\n+   * @throws JWPlatformException - JWPlatform API returned an exception.\n    */\n   public JSONObject upload(final String uploadPath, final String localFilePath, final Map<String, String> headers)\n       throws JWPlatformException {"
  },
  {
    "sha": "6e9f1920f89c901cbf2d856528ab30c57d33fedd",
    "filename": "src/main/java/com/jwplayer/jwplatform/exception/JWPlatformApiKeyInvalidException.java",
    "status": "modified",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/jwplayer/jwplatform-java/blob/32def55a166dbc59c2717f11a911e56d6d8cf5c7/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformApiKeyInvalidException.java",
    "raw_url": "https://github.com/jwplayer/jwplatform-java/raw/32def55a166dbc59c2717f11a911e56d6d8cf5c7/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformApiKeyInvalidException.java",
    "contents_url": "https://api.github.com/repos/jwplayer/jwplatform-java/contents/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformApiKeyInvalidException.java?ref=32def55a166dbc59c2717f11a911e56d6d8cf5c7",
    "patch": "@@ -1,4 +1,13 @@\n package com.jwplayer.jwplatform.exception;\n \n public class JWPlatformApiKeyInvalidException extends JWPlatformException {\n+\n+  /**\n+   * Instance of an ApiKeyInvalidException.\n+   *\n+   * @param message the exception message\n+   */\n+  public JWPlatformApiKeyInvalidException(final String message) {\n+    super(message);\n+  }\n }"
  },
  {
    "sha": "f440e092da22c98d7c2ed2c6f093563a24f09e44",
    "filename": "src/main/java/com/jwplayer/jwplatform/exception/JWPlatformApiKeyMissingException.java",
    "status": "modified",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/jwplayer/jwplatform-java/blob/32def55a166dbc59c2717f11a911e56d6d8cf5c7/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformApiKeyMissingException.java",
    "raw_url": "https://github.com/jwplayer/jwplatform-java/raw/32def55a166dbc59c2717f11a911e56d6d8cf5c7/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformApiKeyMissingException.java",
    "contents_url": "https://api.github.com/repos/jwplayer/jwplatform-java/contents/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformApiKeyMissingException.java?ref=32def55a166dbc59c2717f11a911e56d6d8cf5c7",
    "patch": "@@ -1,4 +1,13 @@\n package com.jwplayer.jwplatform.exception;\n \n public class JWPlatformApiKeyMissingException extends JWPlatformException {\n+\n+  /**\n+   * Instance of an ApiKeyMissingException.\n+   *\n+   * @param message the exception message\n+   */\n+  public JWPlatformApiKeyMissingException(final String message) {\n+    super(message);\n+  }\n }"
  },
  {
    "sha": "3abc59f7ed33d6398d22f2f23a340c4af04863e5",
    "filename": "src/main/java/com/jwplayer/jwplatform/exception/JWPlatformCallFailedException.java",
    "status": "modified",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/jwplayer/jwplatform-java/blob/32def55a166dbc59c2717f11a911e56d6d8cf5c7/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformCallFailedException.java",
    "raw_url": "https://github.com/jwplayer/jwplatform-java/raw/32def55a166dbc59c2717f11a911e56d6d8cf5c7/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformCallFailedException.java",
    "contents_url": "https://api.github.com/repos/jwplayer/jwplatform-java/contents/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformCallFailedException.java?ref=32def55a166dbc59c2717f11a911e56d6d8cf5c7",
    "patch": "@@ -1,4 +1,13 @@\n package com.jwplayer.jwplatform.exception;\n \n public class JWPlatformCallFailedException extends JWPlatformException {\n+\n+  /**\n+   * Instance of an CallFailedException.\n+   *\n+   * @param message the exception message\n+   */\n+  public JWPlatformCallFailedException(final String message) {\n+    super(message);\n+  }\n }"
  },
  {
    "sha": "383c612a412a85db01a81504b0883c079492e0ec",
    "filename": "src/main/java/com/jwplayer/jwplatform/exception/JWPlatformCallInvalidException.java",
    "status": "modified",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/jwplayer/jwplatform-java/blob/32def55a166dbc59c2717f11a911e56d6d8cf5c7/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformCallInvalidException.java",
    "raw_url": "https://github.com/jwplayer/jwplatform-java/raw/32def55a166dbc59c2717f11a911e56d6d8cf5c7/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformCallInvalidException.java",
    "contents_url": "https://api.github.com/repos/jwplayer/jwplatform-java/contents/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformCallInvalidException.java?ref=32def55a166dbc59c2717f11a911e56d6d8cf5c7",
    "patch": "@@ -1,4 +1,13 @@\n package com.jwplayer.jwplatform.exception;\n \n public class JWPlatformCallInvalidException extends JWPlatformException {\n+\n+  /**\n+   * Instance of an CallInvalidException.\n+   *\n+   * @param message the exception message\n+   */\n+  public JWPlatformCallInvalidException(final String message) {\n+    super(message);\n+  }\n }"
  },
  {
    "sha": "460fe0654c0457557d98ca02bcc5913459986764",
    "filename": "src/main/java/com/jwplayer/jwplatform/exception/JWPlatformCallUnavailableException.java",
    "status": "modified",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/jwplayer/jwplatform-java/blob/32def55a166dbc59c2717f11a911e56d6d8cf5c7/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformCallUnavailableException.java",
    "raw_url": "https://github.com/jwplayer/jwplatform-java/raw/32def55a166dbc59c2717f11a911e56d6d8cf5c7/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformCallUnavailableException.java",
    "contents_url": "https://api.github.com/repos/jwplayer/jwplatform-java/contents/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformCallUnavailableException.java?ref=32def55a166dbc59c2717f11a911e56d6d8cf5c7",
    "patch": "@@ -1,4 +1,13 @@\n package com.jwplayer.jwplatform.exception;\n \n public class JWPlatformCallUnavailableException extends JWPlatformException {\n+\n+  /**\n+   * Instance of an CallUnavailableException.\n+   *\n+   * @param message the exception message\n+   */\n+  public JWPlatformCallUnavailableException(final String message) {\n+    super(message);\n+  }\n }"
  },
  {
    "sha": "8a860533b85d96265bd49f475d08b7a0b0d22ddf",
    "filename": "src/main/java/com/jwplayer/jwplatform/exception/JWPlatformDatabaseException.java",
    "status": "modified",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/jwplayer/jwplatform-java/blob/32def55a166dbc59c2717f11a911e56d6d8cf5c7/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformDatabaseException.java",
    "raw_url": "https://github.com/jwplayer/jwplatform-java/raw/32def55a166dbc59c2717f11a911e56d6d8cf5c7/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformDatabaseException.java",
    "contents_url": "https://api.github.com/repos/jwplayer/jwplatform-java/contents/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformDatabaseException.java?ref=32def55a166dbc59c2717f11a911e56d6d8cf5c7",
    "patch": "@@ -1,4 +1,13 @@\n package com.jwplayer.jwplatform.exception;\n \n public class JWPlatformDatabaseException extends JWPlatformException {\n+\n+  /**\n+   * Instance of an DatabaseException.\n+   *\n+   * @param message the exception message\n+   */\n+  public JWPlatformDatabaseException(final String message) {\n+    super(message);\n+  }\n }"
  },
  {
    "sha": "b8d0ae27f687a667b0565c7271cdbdf01d86bf61",
    "filename": "src/main/java/com/jwplayer/jwplatform/exception/JWPlatformDigestInvalidException.java",
    "status": "modified",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/jwplayer/jwplatform-java/blob/32def55a166dbc59c2717f11a911e56d6d8cf5c7/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformDigestInvalidException.java",
    "raw_url": "https://github.com/jwplayer/jwplatform-java/raw/32def55a166dbc59c2717f11a911e56d6d8cf5c7/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformDigestInvalidException.java",
    "contents_url": "https://api.github.com/repos/jwplayer/jwplatform-java/contents/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformDigestInvalidException.java?ref=32def55a166dbc59c2717f11a911e56d6d8cf5c7",
    "patch": "@@ -1,4 +1,13 @@\n package com.jwplayer.jwplatform.exception;\n \n public class JWPlatformDigestInvalidException extends JWPlatformException {\n+\n+  /**\n+   * Instance of an DigestInvalidException.\n+   *\n+   * @param message the exception message\n+   */\n+  public JWPlatformDigestInvalidException(final String message) {\n+    super(message);\n+  }\n }"
  },
  {
    "sha": "fac5ff96fc5c9903cd3f543b50709db54eaed7c7",
    "filename": "src/main/java/com/jwplayer/jwplatform/exception/JWPlatformDigestMissingException.java",
    "status": "modified",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/jwplayer/jwplatform-java/blob/32def55a166dbc59c2717f11a911e56d6d8cf5c7/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformDigestMissingException.java",
    "raw_url": "https://github.com/jwplayer/jwplatform-java/raw/32def55a166dbc59c2717f11a911e56d6d8cf5c7/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformDigestMissingException.java",
    "contents_url": "https://api.github.com/repos/jwplayer/jwplatform-java/contents/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformDigestMissingException.java?ref=32def55a166dbc59c2717f11a911e56d6d8cf5c7",
    "patch": "@@ -1,4 +1,13 @@\n package com.jwplayer.jwplatform.exception;\n \n public class JWPlatformDigestMissingException extends JWPlatformException {\n+\n+  /**\n+   * Instance of an DigestMissingException.\n+   *\n+   * @param message the exception message\n+   */\n+  public JWPlatformDigestMissingException(final String message) {\n+    super(message);\n+  }\n }"
  },
  {
    "sha": "fd84be7bb5b7d1c075f0e021e79ce5730dff8db6",
    "filename": "src/main/java/com/jwplayer/jwplatform/exception/JWPlatformException.java",
    "status": "modified",
    "additions": 11,
    "deletions": 12,
    "changes": 23,
    "blob_url": "https://github.com/jwplayer/jwplatform-java/blob/32def55a166dbc59c2717f11a911e56d6d8cf5c7/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformException.java",
    "raw_url": "https://github.com/jwplayer/jwplatform-java/raw/32def55a166dbc59c2717f11a911e56d6d8cf5c7/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformException.java",
    "contents_url": "https://api.github.com/repos/jwplayer/jwplatform-java/contents/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformException.java?ref=32def55a166dbc59c2717f11a911e56d6d8cf5c7",
    "patch": "@@ -1,17 +1,16 @@\n package com.jwplayer.jwplatform.exception;\n \n-/** Base class for JWPlatform Exceptions. */\n+/**\n+ * Base class for JWPlatform Exceptions.\n+ */\n public class JWPlatformException extends Exception {\n \n-    public JWPlatformException() {\n-    }\n-\n-    /**\n-     * Instance of an UnknownException.\n-     *\n-     * @param message the exception message\n-     */\n-    public JWPlatformException(final String message) {\n-        super(message);\n-    }\n+  /**\n+   * Instance of an UnknownException.\n+   *\n+   * @param message the exception message\n+   */\n+  public JWPlatformException(final String message) {\n+    super(message);\n+  }\n }"
  },
  {
    "sha": "618c5aad6dc0091bf90445c313167a72c4beea7c",
    "filename": "src/main/java/com/jwplayer/jwplatform/exception/JWPlatformFileSizeInvalidException.java",
    "status": "modified",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/jwplayer/jwplatform-java/blob/32def55a166dbc59c2717f11a911e56d6d8cf5c7/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformFileSizeInvalidException.java",
    "raw_url": "https://github.com/jwplayer/jwplatform-java/raw/32def55a166dbc59c2717f11a911e56d6d8cf5c7/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformFileSizeInvalidException.java",
    "contents_url": "https://api.github.com/repos/jwplayer/jwplatform-java/contents/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformFileSizeInvalidException.java?ref=32def55a166dbc59c2717f11a911e56d6d8cf5c7",
    "patch": "@@ -1,4 +1,13 @@\n package com.jwplayer.jwplatform.exception;\n \n public class JWPlatformFileSizeInvalidException extends JWPlatformException {\n+\n+  /**\n+   * Instance of an FileSizeInvalidException.\n+   *\n+   * @param message the exception message\n+   */\n+  public JWPlatformFileSizeInvalidException(final String message) {\n+    super(message);\n+  }\n }"
  },
  {
    "sha": "d629c437f20f3663ab6c91ab3e52485606ed9de0",
    "filename": "src/main/java/com/jwplayer/jwplatform/exception/JWPlatformFileSizeMissingException.java",
    "status": "modified",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/jwplayer/jwplatform-java/blob/32def55a166dbc59c2717f11a911e56d6d8cf5c7/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformFileSizeMissingException.java",
    "raw_url": "https://github.com/jwplayer/jwplatform-java/raw/32def55a166dbc59c2717f11a911e56d6d8cf5c7/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformFileSizeMissingException.java",
    "contents_url": "https://api.github.com/repos/jwplayer/jwplatform-java/contents/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformFileSizeMissingException.java?ref=32def55a166dbc59c2717f11a911e56d6d8cf5c7",
    "patch": "@@ -1,4 +1,13 @@\n package com.jwplayer.jwplatform.exception;\n \n public class JWPlatformFileSizeMissingException extends JWPlatformException {\n+\n+  /**\n+   * Instance of an FileSizeMissingException.\n+   *\n+   * @param message the exception message\n+   */\n+  public JWPlatformFileSizeMissingException(final String message) {\n+    super(message);\n+  }\n }"
  },
  {
    "sha": "8177603ab45fa68ca11f83008cd5cfce8a2061ea",
    "filename": "src/main/java/com/jwplayer/jwplatform/exception/JWPlatformFileUploadFailedException.java",
    "status": "modified",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/jwplayer/jwplatform-java/blob/32def55a166dbc59c2717f11a911e56d6d8cf5c7/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformFileUploadFailedException.java",
    "raw_url": "https://github.com/jwplayer/jwplatform-java/raw/32def55a166dbc59c2717f11a911e56d6d8cf5c7/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformFileUploadFailedException.java",
    "contents_url": "https://api.github.com/repos/jwplayer/jwplatform-java/contents/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformFileUploadFailedException.java?ref=32def55a166dbc59c2717f11a911e56d6d8cf5c7",
    "patch": "@@ -1,4 +1,13 @@\n package com.jwplayer.jwplatform.exception;\n \n public class JWPlatformFileUploadFailedException extends JWPlatformException {\n+\n+  /**\n+   * Instance of an FileUploadFailedException.\n+   *\n+   * @param message the exception message\n+   */\n+  public JWPlatformFileUploadFailedException(final String message) {\n+    super(message);\n+  }\n }"
  },
  {
    "sha": "6ba110656e736b0b88c638f48b3fc1488d144dcd",
    "filename": "src/main/java/com/jwplayer/jwplatform/exception/JWPlatformIntegrityException.java",
    "status": "modified",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/jwplayer/jwplatform-java/blob/32def55a166dbc59c2717f11a911e56d6d8cf5c7/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformIntegrityException.java",
    "raw_url": "https://github.com/jwplayer/jwplatform-java/raw/32def55a166dbc59c2717f11a911e56d6d8cf5c7/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformIntegrityException.java",
    "contents_url": "https://api.github.com/repos/jwplayer/jwplatform-java/contents/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformIntegrityException.java?ref=32def55a166dbc59c2717f11a911e56d6d8cf5c7",
    "patch": "@@ -1,4 +1,13 @@\n package com.jwplayer.jwplatform.exception;\n \n public class JWPlatformIntegrityException extends JWPlatformException {\n+\n+  /**\n+   * Instance of an IntegrityException.\n+   *\n+   * @param message the exception message\n+   */\n+  public JWPlatformIntegrityException(final String message) {\n+    super(message);\n+  }\n }"
  },
  {
    "sha": "a244339c5ef0c1bec257898c8334b56cd849a430",
    "filename": "src/main/java/com/jwplayer/jwplatform/exception/JWPlatformInternalException.java",
    "status": "modified",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/jwplayer/jwplatform-java/blob/32def55a166dbc59c2717f11a911e56d6d8cf5c7/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformInternalException.java",
    "raw_url": "https://github.com/jwplayer/jwplatform-java/raw/32def55a166dbc59c2717f11a911e56d6d8cf5c7/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformInternalException.java",
    "contents_url": "https://api.github.com/repos/jwplayer/jwplatform-java/contents/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformInternalException.java?ref=32def55a166dbc59c2717f11a911e56d6d8cf5c7",
    "patch": "@@ -1,4 +1,13 @@\n package com.jwplayer.jwplatform.exception;\n \n public class JWPlatformInternalException extends JWPlatformException {\n+\n+  /**\n+   * Instance of an InternalException.\n+   *\n+   * @param message the exception message\n+   */\n+  public JWPlatformInternalException(final String message) {\n+    super(message);\n+  }\n }"
  },
  {
    "sha": "c1030ba8395e5d56e4fb13e592943455a1b1bb64",
    "filename": "src/main/java/com/jwplayer/jwplatform/exception/JWPlatformItemAlreadyExistsException.java",
    "status": "modified",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/jwplayer/jwplatform-java/blob/32def55a166dbc59c2717f11a911e56d6d8cf5c7/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformItemAlreadyExistsException.java",
    "raw_url": "https://github.com/jwplayer/jwplatform-java/raw/32def55a166dbc59c2717f11a911e56d6d8cf5c7/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformItemAlreadyExistsException.java",
    "contents_url": "https://api.github.com/repos/jwplayer/jwplatform-java/contents/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformItemAlreadyExistsException.java?ref=32def55a166dbc59c2717f11a911e56d6d8cf5c7",
    "patch": "@@ -1,4 +1,13 @@\n package com.jwplayer.jwplatform.exception;\n \n public class JWPlatformItemAlreadyExistsException extends JWPlatformException {\n+\n+  /**\n+   * Instance of an ItemAlreadyExistsException.\n+   *\n+   * @param message the exception message\n+   */\n+  public JWPlatformItemAlreadyExistsException(final String message) {\n+    super(message);\n+  }\n }"
  },
  {
    "sha": "e2107905964d524f459feabaf95422ced9bc0dde",
    "filename": "src/main/java/com/jwplayer/jwplatform/exception/JWPlatformNoMethodException.java",
    "status": "modified",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/jwplayer/jwplatform-java/blob/32def55a166dbc59c2717f11a911e56d6d8cf5c7/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformNoMethodException.java",
    "raw_url": "https://github.com/jwplayer/jwplatform-java/raw/32def55a166dbc59c2717f11a911e56d6d8cf5c7/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformNoMethodException.java",
    "contents_url": "https://api.github.com/repos/jwplayer/jwplatform-java/contents/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformNoMethodException.java?ref=32def55a166dbc59c2717f11a911e56d6d8cf5c7",
    "patch": "@@ -1,4 +1,13 @@\n package com.jwplayer.jwplatform.exception;\n \n public class JWPlatformNoMethodException extends JWPlatformException {\n+\n+  /**\n+   * Instance of an NoMethodException.\n+   *\n+   * @param message the exception message\n+   */\n+  public JWPlatformNoMethodException(final String message) {\n+    super(message);\n+  }\n }"
  },
  {
    "sha": "3c1311b9c00a4cf887ad288d78b6e1c2746b50fc",
    "filename": "src/main/java/com/jwplayer/jwplatform/exception/JWPlatformNonceInvalidException.java",
    "status": "modified",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/jwplayer/jwplatform-java/blob/32def55a166dbc59c2717f11a911e56d6d8cf5c7/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformNonceInvalidException.java",
    "raw_url": "https://github.com/jwplayer/jwplatform-java/raw/32def55a166dbc59c2717f11a911e56d6d8cf5c7/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformNonceInvalidException.java",
    "contents_url": "https://api.github.com/repos/jwplayer/jwplatform-java/contents/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformNonceInvalidException.java?ref=32def55a166dbc59c2717f11a911e56d6d8cf5c7",
    "patch": "@@ -1,4 +1,13 @@\n package com.jwplayer.jwplatform.exception;\n \n public class JWPlatformNonceInvalidException extends JWPlatformException {\n+\n+  /**\n+   * Instance of an NonceInvalidException.\n+   *\n+   * @param message the exception message\n+   */\n+  public JWPlatformNonceInvalidException(final String message) {\n+    super(message);\n+  }\n }"
  },
  {
    "sha": "96921de3d00ba8625367234ec84b982e74fb907a",
    "filename": "src/main/java/com/jwplayer/jwplatform/exception/JWPlatformNotFoundException.java",
    "status": "modified",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/jwplayer/jwplatform-java/blob/32def55a166dbc59c2717f11a911e56d6d8cf5c7/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformNotFoundException.java",
    "raw_url": "https://github.com/jwplayer/jwplatform-java/raw/32def55a166dbc59c2717f11a911e56d6d8cf5c7/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformNotFoundException.java",
    "contents_url": "https://api.github.com/repos/jwplayer/jwplatform-java/contents/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformNotFoundException.java?ref=32def55a166dbc59c2717f11a911e56d6d8cf5c7",
    "patch": "@@ -1,4 +1,13 @@\n package com.jwplayer.jwplatform.exception;\n \n public class JWPlatformNotFoundException extends JWPlatformException {\n+\n+  /**\n+   * Instance of an NotFoundException.\n+   *\n+   * @param message the exception message\n+   */\n+  public JWPlatformNotFoundException(final String message) {\n+    super(message);\n+  }\n }"
  },
  {
    "sha": "185d4d59d78de05872c762a06f3a4b4b3c70af53",
    "filename": "src/main/java/com/jwplayer/jwplatform/exception/JWPlatformNotImplementedException.java",
    "status": "modified",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/jwplayer/jwplatform-java/blob/32def55a166dbc59c2717f11a911e56d6d8cf5c7/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformNotImplementedException.java",
    "raw_url": "https://github.com/jwplayer/jwplatform-java/raw/32def55a166dbc59c2717f11a911e56d6d8cf5c7/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformNotImplementedException.java",
    "contents_url": "https://api.github.com/repos/jwplayer/jwplatform-java/contents/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformNotImplementedException.java?ref=32def55a166dbc59c2717f11a911e56d6d8cf5c7",
    "patch": "@@ -1,4 +1,13 @@\n package com.jwplayer.jwplatform.exception;\n \n public class JWPlatformNotImplementedException extends JWPlatformException {\n+\n+  /**\n+   * Instance of an NotImplementedException.\n+   *\n+   * @param message the exception message\n+   */\n+  public JWPlatformNotImplementedException(final String message) {\n+    super(message);\n+  }\n }"
  },
  {
    "sha": "874dfa47316f335db2e2a30842c462c8c3f8f287",
    "filename": "src/main/java/com/jwplayer/jwplatform/exception/JWPlatformNotSupportedException.java",
    "status": "modified",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/jwplayer/jwplatform-java/blob/32def55a166dbc59c2717f11a911e56d6d8cf5c7/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformNotSupportedException.java",
    "raw_url": "https://github.com/jwplayer/jwplatform-java/raw/32def55a166dbc59c2717f11a911e56d6d8cf5c7/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformNotSupportedException.java",
    "contents_url": "https://api.github.com/repos/jwplayer/jwplatform-java/contents/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformNotSupportedException.java?ref=32def55a166dbc59c2717f11a911e56d6d8cf5c7",
    "patch": "@@ -1,4 +1,13 @@\n package com.jwplayer.jwplatform.exception;\n \n public class JWPlatformNotSupportedException extends JWPlatformException {\n+\n+  /**\n+   * Instance of an NotSupportedException.\n+   *\n+   * @param message the exception message\n+   */\n+  public JWPlatformNotSupportedException(final String message) {\n+    super(message);\n+  }\n }"
  },
  {
    "sha": "412d7bfa8fd43f9f9a63eb338e474143ffa25dd9",
    "filename": "src/main/java/com/jwplayer/jwplatform/exception/JWPlatformParameterEmptyException.java",
    "status": "modified",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/jwplayer/jwplatform-java/blob/32def55a166dbc59c2717f11a911e56d6d8cf5c7/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformParameterEmptyException.java",
    "raw_url": "https://github.com/jwplayer/jwplatform-java/raw/32def55a166dbc59c2717f11a911e56d6d8cf5c7/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformParameterEmptyException.java",
    "contents_url": "https://api.github.com/repos/jwplayer/jwplatform-java/contents/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformParameterEmptyException.java?ref=32def55a166dbc59c2717f11a911e56d6d8cf5c7",
    "patch": "@@ -1,4 +1,13 @@\n package com.jwplayer.jwplatform.exception;\n \n public class JWPlatformParameterEmptyException extends JWPlatformException {\n+\n+  /**\n+   * Instance of an ParameterEmptyException.\n+   *\n+   * @param message the exception message\n+   */\n+  public JWPlatformParameterEmptyException(final String message) {\n+    super(message);\n+  }\n }"
  },
  {
    "sha": "5224f98527f2d8559893752b43eaeb8cd724a70e",
    "filename": "src/main/java/com/jwplayer/jwplatform/exception/JWPlatformParameterEncodingException.java",
    "status": "modified",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/jwplayer/jwplatform-java/blob/32def55a166dbc59c2717f11a911e56d6d8cf5c7/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformParameterEncodingException.java",
    "raw_url": "https://github.com/jwplayer/jwplatform-java/raw/32def55a166dbc59c2717f11a911e56d6d8cf5c7/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformParameterEncodingException.java",
    "contents_url": "https://api.github.com/repos/jwplayer/jwplatform-java/contents/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformParameterEncodingException.java?ref=32def55a166dbc59c2717f11a911e56d6d8cf5c7",
    "patch": "@@ -1,4 +1,13 @@\n package com.jwplayer.jwplatform.exception;\n \n public class JWPlatformParameterEncodingException extends JWPlatformException {\n+\n+  /**\n+   * Instance of an ParameterEncodingException.\n+   *\n+   * @param message the exception message\n+   */\n+  public JWPlatformParameterEncodingException(final String message) {\n+    super(message);\n+  }\n }"
  },
  {
    "sha": "6bdcdd9538ffb2e09639431317a0161af414cad3",
    "filename": "src/main/java/com/jwplayer/jwplatform/exception/JWPlatformParameterInvalidException.java",
    "status": "modified",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/jwplayer/jwplatform-java/blob/32def55a166dbc59c2717f11a911e56d6d8cf5c7/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformParameterInvalidException.java",
    "raw_url": "https://github.com/jwplayer/jwplatform-java/raw/32def55a166dbc59c2717f11a911e56d6d8cf5c7/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformParameterInvalidException.java",
    "contents_url": "https://api.github.com/repos/jwplayer/jwplatform-java/contents/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformParameterInvalidException.java?ref=32def55a166dbc59c2717f11a911e56d6d8cf5c7",
    "patch": "@@ -1,4 +1,13 @@\n package com.jwplayer.jwplatform.exception;\n \n public class JWPlatformParameterInvalidException extends JWPlatformException {\n+\n+  /**\n+   * Instance of an ParameterInvalidException.\n+   *\n+   * @param message the exception message\n+   */\n+  public JWPlatformParameterInvalidException(final String message) {\n+    super(message);\n+  }\n }"
  },
  {
    "sha": "e5c1a6b15f66407ac8d83567d403af79e2e7650a",
    "filename": "src/main/java/com/jwplayer/jwplatform/exception/JWPlatformParameterMissingException.java",
    "status": "modified",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/jwplayer/jwplatform-java/blob/32def55a166dbc59c2717f11a911e56d6d8cf5c7/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformParameterMissingException.java",
    "raw_url": "https://github.com/jwplayer/jwplatform-java/raw/32def55a166dbc59c2717f11a911e56d6d8cf5c7/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformParameterMissingException.java",
    "contents_url": "https://api.github.com/repos/jwplayer/jwplatform-java/contents/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformParameterMissingException.java?ref=32def55a166dbc59c2717f11a911e56d6d8cf5c7",
    "patch": "@@ -1,4 +1,13 @@\n package com.jwplayer.jwplatform.exception;\n \n public class JWPlatformParameterMissingException extends JWPlatformException {\n+\n+  /**\n+   * Instance of an ParameterMissingException.\n+   *\n+   * @param message the exception message\n+   */\n+  public JWPlatformParameterMissingException(final String message) {\n+    super(message);\n+  }\n }"
  },
  {
    "sha": "03d61c4ac59d092b7c84b61d54c613c00a1a6031",
    "filename": "src/main/java/com/jwplayer/jwplatform/exception/JWPlatformPermissionDeniedException.java",
    "status": "modified",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/jwplayer/jwplatform-java/blob/32def55a166dbc59c2717f11a911e56d6d8cf5c7/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformPermissionDeniedException.java",
    "raw_url": "https://github.com/jwplayer/jwplatform-java/raw/32def55a166dbc59c2717f11a911e56d6d8cf5c7/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformPermissionDeniedException.java",
    "contents_url": "https://api.github.com/repos/jwplayer/jwplatform-java/contents/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformPermissionDeniedException.java?ref=32def55a166dbc59c2717f11a911e56d6d8cf5c7",
    "patch": "@@ -1,4 +1,13 @@\n package com.jwplayer.jwplatform.exception;\n \n public class JWPlatformPermissionDeniedException extends JWPlatformException {\n+\n+  /**\n+   * Instance of an PermissionDeniedException.\n+   *\n+   * @param message the exception message\n+   */\n+  public JWPlatformPermissionDeniedException(final String message) {\n+    super(message);\n+  }\n }"
  },
  {
    "sha": "05b08b9a70d7c1a6fa65cd4ec888b12933f66e40",
    "filename": "src/main/java/com/jwplayer/jwplatform/exception/JWPlatformPreconditionFailedException.java",
    "status": "modified",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/jwplayer/jwplatform-java/blob/32def55a166dbc59c2717f11a911e56d6d8cf5c7/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformPreconditionFailedException.java",
    "raw_url": "https://github.com/jwplayer/jwplatform-java/raw/32def55a166dbc59c2717f11a911e56d6d8cf5c7/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformPreconditionFailedException.java",
    "contents_url": "https://api.github.com/repos/jwplayer/jwplatform-java/contents/src/main/java/com/jwplayer/jwplatform/exception/JWPlatformPreconditionFailedException.java?ref=32def55a166dbc59c2717f11a911e56d6d8cf5c7",
    "patch": "@@ -1,4 +1,13 @@\n package com.jwplayer.jwplatform.exception;\n \n public class JWPlatformPreconditionFailedException extends JWPlatformException {\n+\n+  /**\n+   * Instance of an PreconditionFailedException.\n+   *\n+   * @param message the exception message\n+   */\n+  public JWPlatformPreconditionFailedException(final String message) {\n+    super(message);\n+  }\n }"
  }
]
