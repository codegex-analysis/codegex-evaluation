[
  {
    "sha": "b803efc7594003fd567a573466112dad34d4fa67",
    "filename": "src/test/java/edu/iis/mto/bsearch/BinarySearchTest.java",
    "status": "modified",
    "additions": 68,
    "deletions": 3,
    "changes": 71,
    "blob_url": "https://github.com/mto-2021-pn/lab2_1/blob/7350f5dea3bd2c1ff1e5a9787c1c33e945260696/src/test/java/edu/iis/mto/bsearch/BinarySearchTest.java",
    "raw_url": "https://github.com/mto-2021-pn/lab2_1/raw/7350f5dea3bd2c1ff1e5a9787c1c33e945260696/src/test/java/edu/iis/mto/bsearch/BinarySearchTest.java",
    "contents_url": "https://api.github.com/repos/mto-2021-pn/lab2_1/contents/src/test/java/edu/iis/mto/bsearch/BinarySearchTest.java?ref=7350f5dea3bd2c1ff1e5a9787c1c33e945260696",
    "patch": "@@ -5,15 +5,80 @@\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n \n+import java.lang.reflect.Array;\n+import java.util.Arrays;\n+\n \n class BinarySearchTest {\n \n     @BeforeEach\n     void setUp() throws Exception {}\n \n     @Test\n-    void test() {\n-        fail(\"Not yet implemented\");\n+    public void findExistOneElement_InOneElementArray_firstPosition()\n+    {\n+        int[] someArray = {1};\n+        SearchResult a = BinarySearch.search(1,someArray);\n+        assertEquals(true,a.isFound());\n+        assertEquals(1,a.getPosition());\n+    }\n+    @Test\n+    public void findDontExistOneElement_InOneElementArray()\n+    {\n+        int[] someArray = {1};\n+        SearchResult a = BinarySearch.search(2,someArray);\n+        assertEquals(false,a.isFound());\n+        assertEquals(-1,a.getPosition());\n+    }\n+    @Test\n+    public void findExistOneElement_InManyElementArray_firstPosition()\n+    {\n+        int[] someArray = {3, 4, 5, 9, 12, 22, 32, 65, 78};\n+        SearchResult a = BinarySearch.search(3,someArray);\n+        assertEquals(1,a.getPosition());\n+        assertEquals(true,a.isFound());\n+    }\n+    @Test\n+    public void findExistOneElement_InManyElementArray_LastPosition()\n+    {\n+        int[] someArray = {3, 4, 5, 9, 12, 22, 32, 65, 78};\n+        SearchResult a = BinarySearch.search(78,someArray);\n+        assertEquals(a.getPosition(),someArray.length);\n+        assertEquals(true,a.isFound());\n+    }\n+    @Test\n+    public void findExistOneElement_InManyElementArray_CenterPosition()\n+    {\n+        int[] someArray = {3, 4, 5, 9, 12, 22, 32, 65, 78};\n+        SearchResult a = BinarySearch.search(12,someArray);\n+        assertEquals(5,a.getPosition());\n+        assertEquals(true,a.isFound());\n+    }\n+    @Test\n+    public void findDontExistOneElement_InManyElementArray()\n+    {\n+        int[] someArray = {3, 4, 5, 9, 12, 22, 32, 65, 78};\n+        SearchResult a = BinarySearch.search(-22,someArray);\n+        assertEquals(-1,a.getPosition());\n+        assertEquals(false,a.isFound());\n+    }\n+    @Test\n+    public void TakeAsArgumentArrayNULL()\n+    {\n+        int[] someArray = null;\n+        try{\n+            SearchResult a = BinarySearch.search(-22,someArray);\n+        }catch (NullPointerException e)\n+        {\n+            //ignore\n+        }\n+    }\n+    @Test\n+    public void TakeAsArgumentArray_EmptyArray()\n+    {\n+        int[] someArray = {};\n+        SearchResult a = BinarySearch.search(-22,someArray);\n+        assertEquals(-1,a.getPosition());\n+        assertEquals(false,a.isFound());\n     }\n-\n }"
  }
]
