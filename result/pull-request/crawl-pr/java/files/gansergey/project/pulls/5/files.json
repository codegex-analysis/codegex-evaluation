[
  {
    "sha": "8b02adf2af2839b5133242e1829df844afd59af9",
    "filename": ".idea/compiler.xml",
    "status": "added",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/gansergey/project/blob/407e452412cf44e7060e464f651395309123d90f/.idea/compiler.xml",
    "raw_url": "https://github.com/gansergey/project/raw/407e452412cf44e7060e464f651395309123d90f/.idea/compiler.xml",
    "contents_url": "https://api.github.com/repos/gansergey/project/contents/.idea/compiler.xml?ref=407e452412cf44e7060e464f651395309123d90f",
    "patch": "@@ -0,0 +1,20 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"CompilerConfiguration\">\n+    <annotationProcessing>\n+      <profile name=\"Maven default annotation processors profile\" enabled=\"true\">\n+        <sourceOutputDir name=\"target/generated-sources/annotations\" />\n+        <sourceTestOutputDir name=\"target/generated-test-sources/test-annotations\" />\n+        <outputRelativeToContentRoot value=\"true\" />\n+        <module name=\"server\" />\n+        <module name=\"client\" />\n+      </profile>\n+    </annotationProcessing>\n+    <bytecodeTargetLevel>\n+      <module name=\"chat\" target=\"15\" />\n+      <module name=\"chat_project\" target=\"15\" />\n+      <module name=\"client\" target=\"15\" />\n+      <module name=\"server\" target=\"15\" />\n+    </bytecodeTargetLevel>\n+  </component>\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "712ab9d985c20018a0c97b93d2148ac1ffe588a5",
    "filename": ".idea/jarRepositories.xml",
    "status": "added",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/gansergey/project/blob/407e452412cf44e7060e464f651395309123d90f/.idea/jarRepositories.xml",
    "raw_url": "https://github.com/gansergey/project/raw/407e452412cf44e7060e464f651395309123d90f/.idea/jarRepositories.xml",
    "contents_url": "https://api.github.com/repos/gansergey/project/contents/.idea/jarRepositories.xml?ref=407e452412cf44e7060e464f651395309123d90f",
    "patch": "@@ -0,0 +1,20 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"RemoteRepositoriesConfiguration\">\n+    <remote-repository>\n+      <option name=\"id\" value=\"central\" />\n+      <option name=\"name\" value=\"Central Repository\" />\n+      <option name=\"url\" value=\"https://repo.maven.apache.org/maven2\" />\n+    </remote-repository>\n+    <remote-repository>\n+      <option name=\"id\" value=\"central\" />\n+      <option name=\"name\" value=\"Maven Central repository\" />\n+      <option name=\"url\" value=\"https://repo1.maven.org/maven2\" />\n+    </remote-repository>\n+    <remote-repository>\n+      <option name=\"id\" value=\"jboss.community\" />\n+      <option name=\"name\" value=\"JBoss Community repository\" />\n+      <option name=\"url\" value=\"https://repository.jboss.org/nexus/content/repositories/public/\" />\n+    </remote-repository>\n+  </component>\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "b0b7ad41c85d44146a8aa6ce5c676d314577634d",
    "filename": ".idea/libraries/Maven__org_postgresql_postgresql_42_2_5.xml",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/gansergey/project/blob/407e452412cf44e7060e464f651395309123d90f/.idea/libraries/Maven__org_postgresql_postgresql_42_2_5.xml",
    "raw_url": "https://github.com/gansergey/project/raw/407e452412cf44e7060e464f651395309123d90f/.idea/libraries/Maven__org_postgresql_postgresql_42_2_5.xml",
    "contents_url": "https://api.github.com/repos/gansergey/project/contents/.idea/libraries/Maven__org_postgresql_postgresql_42_2_5.xml?ref=407e452412cf44e7060e464f651395309123d90f",
    "patch": "@@ -0,0 +1,13 @@\n+<component name=\"libraryTable\">\n+  <library name=\"Maven: org.postgresql:postgresql:42.2.5\">\n+    <CLASSES>\n+      <root url=\"jar://$MAVEN_REPOSITORY$/org/postgresql/postgresql/42.2.5/postgresql-42.2.5.jar!/\" />\n+    </CLASSES>\n+    <JAVADOC>\n+      <root url=\"jar://$MAVEN_REPOSITORY$/org/postgresql/postgresql/42.2.5/postgresql-42.2.5-javadoc.jar!/\" />\n+    </JAVADOC>\n+    <SOURCES>\n+      <root url=\"jar://$MAVEN_REPOSITORY$/org/postgresql/postgresql/42.2.5/postgresql-42.2.5-sources.jar!/\" />\n+    </SOURCES>\n+  </library>\n+</component>\n\\ No newline at end of file"
  },
  {
    "sha": "ac958512daa2b804a3483b7dc4b5c19cf4b6d231",
    "filename": ".idea/misc.xml",
    "status": "modified",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/gansergey/project/blob/407e452412cf44e7060e464f651395309123d90f/.idea/misc.xml",
    "raw_url": "https://github.com/gansergey/project/raw/407e452412cf44e7060e464f651395309123d90f/.idea/misc.xml",
    "contents_url": "https://api.github.com/repos/gansergey/project/contents/.idea/misc.xml?ref=407e452412cf44e7060e464f651395309123d90f",
    "patch": "@@ -1,5 +1,13 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project version=\"4\">\n+  <component name=\"MavenProjectsManager\">\n+    <option name=\"originalFiles\">\n+      <list>\n+        <option value=\"$PROJECT_DIR$/chat/pom.xml\" />\n+        <option value=\"$PROJECT_DIR$/chat_project/pom.xml\" />\n+      </list>\n+    </option>\n+  </component>\n   <component name=\"ProjectKey\">\n     <option name=\"state\" value=\"project://e2804f05-5315-4fc6-a121-c522a6c26470\" />\n   </component>"
  },
  {
    "sha": "83545bd8b9a0feb08eb9e373817bd4fe40ef64ed",
    "filename": ".idea/modules.xml",
    "status": "modified",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/gansergey/project/blob/407e452412cf44e7060e464f651395309123d90f/.idea/modules.xml",
    "raw_url": "https://github.com/gansergey/project/raw/407e452412cf44e7060e464f651395309123d90f/.idea/modules.xml",
    "contents_url": "https://api.github.com/repos/gansergey/project/contents/.idea/modules.xml?ref=407e452412cf44e7060e464f651395309123d90f",
    "patch": "@@ -2,7 +2,11 @@\n <project version=\"4\">\n   <component name=\"ProjectModuleManager\">\n     <modules>\n+      <module fileurl=\"file://$PROJECT_DIR$/chat/chat.iml\" filepath=\"$PROJECT_DIR$/chat/chat.iml\" />\n+      <module fileurl=\"file://$PROJECT_DIR$/chat_project/chat_project.iml\" filepath=\"$PROJECT_DIR$/chat_project/chat_project.iml\" />\n+      <module fileurl=\"file://$PROJECT_DIR$/chat_project/client/client.iml\" filepath=\"$PROJECT_DIR$/chat_project/client/client.iml\" />\n       <module fileurl=\"file://$PROJECT_DIR$/project.iml\" filepath=\"$PROJECT_DIR$/project.iml\" />\n+      <module fileurl=\"file://$PROJECT_DIR$/chat/server/server.iml\" filepath=\"$PROJECT_DIR$/chat/server/server.iml\" />\n     </modules>\n   </component>\n </project>\n\\ No newline at end of file"
  },
  {
    "sha": "94a25f7f4cb416c083d265558da75d457237d671",
    "filename": ".idea/vcs.xml",
    "status": "added",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/gansergey/project/blob/407e452412cf44e7060e464f651395309123d90f/.idea/vcs.xml",
    "raw_url": "https://github.com/gansergey/project/raw/407e452412cf44e7060e464f651395309123d90f/.idea/vcs.xml",
    "contents_url": "https://api.github.com/repos/gansergey/project/contents/.idea/vcs.xml?ref=407e452412cf44e7060e464f651395309123d90f",
    "patch": "@@ -0,0 +1,6 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"VcsDirectoryMappings\">\n+    <mapping directory=\"$PROJECT_DIR$\" vcs=\"Git\" />\n+  </component>\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "c0ab5fda222a2a1ebf4ab77231d8c5e8212be00d",
    "filename": "chat_project/client/pom.xml",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/gansergey/project/blob/407e452412cf44e7060e464f651395309123d90f/chat_project/client/pom.xml",
    "raw_url": "https://github.com/gansergey/project/raw/407e452412cf44e7060e464f651395309123d90f/chat_project/client/pom.xml",
    "contents_url": "https://api.github.com/repos/gansergey/project/contents/chat_project/client/pom.xml?ref=407e452412cf44e7060e464f651395309123d90f",
    "patch": "@@ -0,0 +1,19 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <parent>\n+        <artifactId>chat_project</artifactId>\n+        <groupId>org.example</groupId>\n+        <version>1.0-SNAPSHOT</version>\n+    </parent>\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <artifactId>client</artifactId>\n+\n+    <properties>\n+        <maven.compiler.source>15</maven.compiler.source>\n+        <maven.compiler.target>15</maven.compiler.target>\n+    </properties>\n+\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "99219afd1a850705e39209db3bc3a29b9147dd35",
    "filename": "chat_project/client/src/main/java/AppClient.java",
    "status": "added",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/gansergey/project/blob/407e452412cf44e7060e464f651395309123d90f/chat_project/client/src/main/java/AppClient.java",
    "raw_url": "https://github.com/gansergey/project/raw/407e452412cf44e7060e464f651395309123d90f/chat_project/client/src/main/java/AppClient.java",
    "contents_url": "https://api.github.com/repos/gansergey/project/contents/chat_project/client/src/main/java/AppClient.java?ref=407e452412cf44e7060e464f651395309123d90f",
    "patch": "@@ -0,0 +1,12 @@\n+import javax.swing.*;\n+\n+public class AppClient {\n+    public static void main(String[] args) {\n+        SwingUtilities.invokeLater(new Runnable() {\n+            @Override\n+            public void run() {\n+                new ClientGUI();\n+            }\n+        });\n+    }\n+}"
  },
  {
    "sha": "078e9fa90da2ebb42f7b3619a9ced6164169a9cc",
    "filename": "chat_project/client/src/main/java/Callback.java",
    "status": "added",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/gansergey/project/blob/407e452412cf44e7060e464f651395309123d90f/chat_project/client/src/main/java/Callback.java",
    "raw_url": "https://github.com/gansergey/project/raw/407e452412cf44e7060e464f651395309123d90f/chat_project/client/src/main/java/Callback.java",
    "contents_url": "https://api.github.com/repos/gansergey/project/contents/chat_project/client/src/main/java/Callback.java?ref=407e452412cf44e7060e464f651395309123d90f",
    "patch": "@@ -0,0 +1,3 @@\n+public interface Callback<T> {\n+    void callback(T arg);\n+}"
  },
  {
    "sha": "563596783d21321e9e3949b79bced9098497e9d1",
    "filename": "chat_project/client/src/main/java/ClientGUI.java",
    "status": "added",
    "additions": 189,
    "deletions": 0,
    "changes": 189,
    "blob_url": "https://github.com/gansergey/project/blob/407e452412cf44e7060e464f651395309123d90f/chat_project/client/src/main/java/ClientGUI.java",
    "raw_url": "https://github.com/gansergey/project/raw/407e452412cf44e7060e464f651395309123d90f/chat_project/client/src/main/java/ClientGUI.java",
    "contents_url": "https://api.github.com/repos/gansergey/project/contents/chat_project/client/src/main/java/ClientGUI.java?ref=407e452412cf44e7060e464f651395309123d90f",
    "patch": "@@ -0,0 +1,189 @@\n+import javax.swing.*;\n+import javax.swing.border.LineBorder;\n+import java.awt.*;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.event.WindowAdapter;\n+import java.awt.event.WindowEvent;\n+\n+public class ClientGUI extends JFrame {\n+\n+    private JTextArea txtClientsList;\n+    private JTextArea txtMessageList;\n+    private JTextField txtMessageSend;\n+\n+    private ClientNetwork clientNetwork;\n+\n+    JPanel loginPanel = new JPanel();\n+    JPanel mainPanel = new JPanel();\n+\n+    public ClientGUI() {\n+\n+        setTitle(\"Мой чат\");\n+        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);\n+        setBounds(300, 300, 300, 466);\n+        setResizable(false);\n+\n+        addWindowListener(new WindowAdapter() {\n+            @Override\n+            public void windowClosing(WindowEvent event) {\n+                clientNetwork.sendMessage(\"/end\");\n+                super.windowClosing(event);\n+            }\n+        });\n+\n+        loginJPanel();\n+        //mainPanel();\n+\n+        setVisible(true);\n+\n+        //Выводим сообщение callBack в текстовое поле\n+        this.clientNetwork = new ClientNetwork();\n+        setCallBacks();\n+        this.clientNetwork.connect();\n+\n+\n+\n+    }\n+\n+    private void onSendMessage() {\n+        if (txtMessageSend.getText().length() == 0) {\n+            JOptionPane.showMessageDialog(null, \"Введите текст сообщения!\");\n+        } else {\n+            this.clientNetwork.sendMessage(txtMessageSend.getText());\n+        }\n+        txtMessageSend.setText(\"\");\n+    }\n+\n+\n+    private void mainPanel() {\n+\n+        JButton btnSend = new JButton(\"Отправить сообщение\");\n+        JLabel lbMessageList = new JLabel(\"Переписка\");\n+        JLabel lbMessageListSend = new JLabel(\"Отправить сообщение: \");\n+\n+\n+        txtClientsList = new JTextArea();\n+        txtMessageList = new JTextArea();\n+        txtMessageSend = new JTextField();\n+\n+        mainPanel.setLayout(new FlowLayout(FlowLayout.CENTER));\n+\n+        mainPanel.setBackground(new Color(17, 30, 36));\n+        mainPanel.setBorder(new LineBorder(Color.WHITE, 1));\n+\n+        txtClientsList.setBackground(new Color(9, 16, 21));\n+        txtClientsList.setBorder(new LineBorder(new Color(112, 132, 153), 0));\n+        txtClientsList.setPreferredSize(new Dimension(280, 32));\n+        txtClientsList.setForeground(new Color(200, 200, 200));\n+        txtClientsList.setLineWrap(true);\n+        txtClientsList.setEditable(false);\n+\n+        txtMessageList.setBackground(new Color(9, 16, 21));\n+        txtMessageList.setBorder(new LineBorder(new Color(112, 132, 153), 0));\n+        txtMessageList.setPreferredSize(new Dimension(280, 252));\n+        txtMessageList.setForeground(new Color(200, 200, 200));\n+        txtMessageList.setLineWrap(true);\n+        txtMessageList.setEditable(false);\n+\n+        txtMessageSend.setBackground(new Color(9, 16, 21));\n+        txtMessageSend.setBorder(new LineBorder(new Color(112, 132, 153), 0));\n+        txtMessageSend.setPreferredSize(new Dimension(280, 27));\n+        txtMessageSend.setForeground(new Color(200, 200, 200));\n+        txtMessageSend.addActionListener(new ActionListener() {\n+            @Override\n+            public void actionPerformed(ActionEvent e) {\n+                onSendMessage();\n+            }\n+        });\n+\n+        lbMessageList.setForeground(new Color(200, 200, 200));\n+        lbMessageListSend.setForeground(new Color(200, 200, 200));\n+\n+        btnSend.setBackground(new Color(41, 221, 126));\n+        btnSend.setForeground(new Color(9, 16, 21));\n+        btnSend.setFocusPainted(false);\n+        btnSend.setMargin(new Insets(10, 10, 10, 10));\n+\n+        btnSend.addActionListener(new ActionListener() {\n+            @Override\n+            public void actionPerformed(ActionEvent e) {\n+                onSendMessage();\n+            }\n+        });\n+\n+        add(mainPanel);\n+        mainPanel.add(lbMessageList);\n+        mainPanel.add(txtClientsList);\n+        mainPanel.add(txtMessageList);\n+        mainPanel.add(lbMessageListSend);\n+        mainPanel.add(txtMessageSend);\n+        mainPanel.add(btnSend);\n+    }\n+\n+    private void loginJPanel() {\n+        loginPanel.setBackground(Color.white);\n+        loginPanel.setLayout(new FlowLayout(FlowLayout.RIGHT));\n+        loginPanel.setPreferredSize(new Dimension(300, 150));\n+        loginPanel.setBorder(BorderFactory.createTitledBorder(\"Authorization\"));\n+\n+        loginPanel.setBackground(new Color(17, 30, 36));\n+        loginPanel.setBorder(new LineBorder(Color.WHITE, 1));\n+\n+        JTextField login = new JTextField();\n+        login.setBackground(new Color(9, 16, 21));\n+        login.setBorder(new LineBorder(new Color(112, 132, 153), 0));\n+        login.setForeground(new Color(200, 200, 200));\n+\n+        JLabel loginLabel = new JLabel(\"Введите ваш логин: \");\n+        loginLabel.setForeground(new Color(200, 200, 200));\n+\n+        JLabel passwordLabel = new JLabel(\"Введите ваш пароль: \");\n+        passwordLabel.setForeground(new Color(200, 200, 200));\n+\n+        JPasswordField password = new JPasswordField();\n+        password.setBackground(new Color(9, 16, 21));\n+        password.setBorder(new LineBorder(new Color(112, 132, 153), 0));\n+        password.setForeground(new Color(200, 200, 200));\n+\n+        login.setPreferredSize(new Dimension(100, 25));\n+        password.setPreferredSize(new Dimension(100, 25));\n+        loginPanel.add(loginLabel);\n+        loginPanel.add(login);\n+        loginPanel.add(passwordLabel);\n+        loginPanel.add(password);\n+        JPanel buttonPanel = new JPanel();\n+        buttonPanel.setPreferredSize(new Dimension(279, 55));\n+        buttonPanel.setBackground(new Color(17, 30, 36));\n+        JButton button = new JButton(\"Авторизироваться\");\n+\n+        button.setBackground(new Color(41, 221, 126));\n+        button.setForeground(new Color(9, 16, 21));\n+        button.setFocusPainted(false);\n+        button.setMargin(new Insets(10, 10, 10, 10));\n+\n+        buttonPanel.add(button);\n+        button.addActionListener(new ActionListener() {\n+            @Override\n+            public void actionPerformed(ActionEvent e) {\n+                clientNetwork.sendMessage(\"/auth \" + login.getText()\n+                        + \" \" + String.valueOf(password.getPassword()));\n+                login.setText(\"\");\n+                password.setText(\"\");\n+            }\n+        });\n+        loginPanel.add(buttonPanel);\n+        add(loginPanel);\n+    }\n+\n+    private void  setCallBacks(){\n+        this.clientNetwork.setCallOnChangeClientList(clientsList -> txtClientsList.setText(clientsList));\n+        this.clientNetwork.setCallOnMsgRecieved(message -> txtMessageList.append(message + \"\\n\"));\n+        this.clientNetwork.setCallOnAuth(s -> {\n+            loginPanel.setVisible(false);\n+            mainPanel();\n+        });\n+        this.clientNetwork.setCallOnError(message ->\n+                JOptionPane.showMessageDialog(null, message, \"Внимание!\", JOptionPane.ERROR_MESSAGE));\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "0a40fa7ffb48390812eda05821738d7d3973531d",
    "filename": "chat_project/client/src/main/java/ClientNetwork.java",
    "status": "added",
    "additions": 110,
    "deletions": 0,
    "changes": 110,
    "blob_url": "https://github.com/gansergey/project/blob/407e452412cf44e7060e464f651395309123d90f/chat_project/client/src/main/java/ClientNetwork.java",
    "raw_url": "https://github.com/gansergey/project/raw/407e452412cf44e7060e464f651395309123d90f/chat_project/client/src/main/java/ClientNetwork.java",
    "contents_url": "https://api.github.com/repos/gansergey/project/contents/chat_project/client/src/main/java/ClientNetwork.java?ref=407e452412cf44e7060e464f651395309123d90f",
    "patch": "@@ -0,0 +1,110 @@\n+import java.io.DataInputStream;\n+import java.io.DataOutputStream;\n+import java.io.IOException;\n+import java.net.Socket;\n+import java.util.Timer;\n+\n+public class ClientNetwork {\n+    private Socket socket;\n+    private DataInputStream in;\n+    private DataOutputStream out;\n+    private static final int PORT = 8184;\n+    private Callback<String> callOnMsgRecieved; //действие на получение сообщения\n+    private Callback<String> callOnChangeClientList; //действие на изменение списка клиентов\n+    private Callback<String> callOnAuth;\n+    private Callback<String> callOnError;\n+\n+    public void connect() {\n+        try {\n+            socket = new Socket(\"localhost\", PORT);\n+            in = new DataInputStream(socket.getInputStream());\n+            out = new DataOutputStream(socket.getOutputStream());\n+            new Thread(() -> {\n+                boolean goOn = true;\n+                boolean isAuthorized = false;\n+                try {\n+\n+\n+\n+                    while (!isAuthorized && goOn) {\n+                        String message = in.readUTF();\n+                        if (message.startsWith(\"/authok\")) {\n+                            callOnAuth.callback(\"/authok\");\n+                            isAuthorized = true;\n+                        } else if (message.equalsIgnoreCase(\"/end\")) {\n+                            goOn = false;\n+                        } else {\n+                            callOnError.callback(\"Вы ввели не правильно логин или пароль\");\n+                        }\n+                    }\n+                    while (goOn) {\n+                        String msg = in.readUTF();\n+                        //System.out.println(msg);\n+                        if (msg.equalsIgnoreCase(\"/end\")) {\n+                            goOn = false;\n+                        } else if (msg.startsWith(\"/clients \")) {\n+                            callOnChangeClientList.callback(msg.substring(9));//substring, чтобы обрезать \"/clients\"/\n+                        } else {\n+                            callOnMsgRecieved.callback(msg);\n+                        }\n+\n+                    }\n+                } catch (IOException e) {\n+                    e.printStackTrace();\n+                } finally {\n+                    closeConnection();\n+                }\n+            }).start();\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+    }\n+\n+    //Отправляем сообщения серверу\n+    public boolean sendMessage(String msg) {\n+        try {\n+            out.writeUTF(msg);\n+            return true;\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+            return false;\n+        }\n+    }\n+\n+    public void closeConnection() {\n+\n+        try {\n+            in.close();\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+        try {\n+            out.close();\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+\n+        try {\n+            socket.close();\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+    }\n+\n+\n+    public void setCallOnAuth(Callback<String> callOnAuth) {\n+        this.callOnAuth = callOnAuth;\n+    }\n+\n+    public void setCallOnMsgRecieved(Callback<String> callOnMsgRecieved) {\n+        this.callOnMsgRecieved = callOnMsgRecieved;\n+    }\n+\n+    public void setCallOnChangeClientList(Callback<String> callOnChangeClientList) {\n+        this.callOnChangeClientList = callOnChangeClientList;\n+    }\n+\n+    public void setCallOnError(Callback<String> callOnError) {\n+        this.callOnError = callOnError;\n+    }\n+}"
  },
  {
    "sha": "c0ab5fda222a2a1ebf4ab77231d8c5e8212be00d",
    "filename": "chat_project/server/pom.xml",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/gansergey/project/blob/407e452412cf44e7060e464f651395309123d90f/chat_project/server/pom.xml",
    "raw_url": "https://github.com/gansergey/project/raw/407e452412cf44e7060e464f651395309123d90f/chat_project/server/pom.xml",
    "contents_url": "https://api.github.com/repos/gansergey/project/contents/chat_project/server/pom.xml?ref=407e452412cf44e7060e464f651395309123d90f",
    "patch": "@@ -0,0 +1,19 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <parent>\n+        <artifactId>chat_project</artifactId>\n+        <groupId>org.example</groupId>\n+        <version>1.0-SNAPSHOT</version>\n+    </parent>\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <artifactId>client</artifactId>\n+\n+    <properties>\n+        <maven.compiler.source>15</maven.compiler.source>\n+        <maven.compiler.target>15</maven.compiler.target>\n+    </properties>\n+\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "6af51589611313fd50591393d9c5a0a6a94ca0e0",
    "filename": "chat_project/server/src/main/java/AppServer.java",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/gansergey/project/blob/407e452412cf44e7060e464f651395309123d90f/chat_project/server/src/main/java/AppServer.java",
    "raw_url": "https://github.com/gansergey/project/raw/407e452412cf44e7060e464f651395309123d90f/chat_project/server/src/main/java/AppServer.java",
    "contents_url": "https://api.github.com/repos/gansergey/project/contents/chat_project/server/src/main/java/AppServer.java?ref=407e452412cf44e7060e464f651395309123d90f",
    "patch": "@@ -0,0 +1,5 @@\n+public class AppServer {\n+    public static void main(String[] args) {\n+        new Server();\n+    }\n+}"
  },
  {
    "sha": "9058ee099a1e07f4be3cda64fc5669839108c19e",
    "filename": "chat_project/server/src/main/java/AuthService.java",
    "status": "added",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/gansergey/project/blob/407e452412cf44e7060e464f651395309123d90f/chat_project/server/src/main/java/AuthService.java",
    "raw_url": "https://github.com/gansergey/project/raw/407e452412cf44e7060e464f651395309123d90f/chat_project/server/src/main/java/AuthService.java",
    "contents_url": "https://api.github.com/repos/gansergey/project/contents/chat_project/server/src/main/java/AuthService.java?ref=407e452412cf44e7060e464f651395309123d90f",
    "patch": "@@ -0,0 +1,3 @@\n+public interface AuthService {\n+    String getNicknameByLoginAndPassword(String login, String password);\n+}"
  },
  {
    "sha": "76da22760a707e131d8e480d834635a80434c878",
    "filename": "chat_project/server/src/main/java/ClientServer.java",
    "status": "added",
    "additions": 113,
    "deletions": 0,
    "changes": 113,
    "blob_url": "https://github.com/gansergey/project/blob/407e452412cf44e7060e464f651395309123d90f/chat_project/server/src/main/java/ClientServer.java",
    "raw_url": "https://github.com/gansergey/project/raw/407e452412cf44e7060e464f651395309123d90f/chat_project/server/src/main/java/ClientServer.java",
    "contents_url": "https://api.github.com/repos/gansergey/project/contents/chat_project/server/src/main/java/ClientServer.java?ref=407e452412cf44e7060e464f651395309123d90f",
    "patch": "@@ -0,0 +1,113 @@\n+/*Класс, который хранит информацию о клиентах*/\n+\n+import javax.swing.*;\n+import java.io.DataInputStream;\n+import java.io.DataOutputStream;\n+import java.io.IOException;\n+import java.net.Socket;\n+\n+public class ClientServer {\n+    private String nickname;\n+    private Socket socket;\n+    private DataInputStream in;\n+    private DataOutputStream out;\n+    private Server server;\n+\n+    public ClientServer(Integer number, Server server, Socket socket) { /*Server передаём, чтобы можно было использовать его методы для\n+        рассылки сообщений всем клиентам. т.к. только он имеет список клиентов*/\n+        this.server = server;\n+        this.socket = socket;\n+        try {\n+            this.in = new DataInputStream(socket.getInputStream());\n+            this.out = new DataOutputStream(socket.getOutputStream());\n+            this.nickname = \"Клиент №: \" + number;\n+            new Thread(() -> {\n+                boolean continueChat = true;\n+\n+                String msg = null;\n+                boolean isAuthorised = false;\n+                try {\n+                    long start = System.currentTimeMillis();\n+                    /*Цикл, для того, чтобы читать все сообщения одного клиента.\n+                    Только этот класс может читать сообщения клиентов.*/\n+                    while (!isAuthorised && continueChat) {\n+                        if ((System.currentTimeMillis() - start) > 120000) {\n+                            continueChat = false;\n+                        } else if (in.available() > 0) {\n+                            msg = in.readUTF();//читаем сообщение клиента\n+                            if (msg.startsWith(\"/auth\")) {\n+                                String[] tokens = msg.split(\"\\\\s\");\n+                                nickname = server.getAuthService().getNicknameByLoginAndPassword(tokens[1], tokens[2]);\n+                                if (nickname != null) {\n+                                    isAuthorised = true;\n+                                    sendMessage(\"/authok\");\n+                                    server.subscribe(this);//Добавляем клиента в коллекцию\n+                                } else {\n+                                    sendMessage(\"/error\");\n+                                }\n+                            }\n+                            if (msg.equalsIgnoreCase(\"/end\")) {\n+                                sendMessage(\"/end\");\n+                                continueChat = false;\n+                            }\n+                        }\n+                    }\n+                    while (continueChat) {\n+                        msg = in.readUTF();//читаем сообщение клиента\n+                        if (msg.startsWith(\"/\")) {\n+                            if (msg.equalsIgnoreCase(\"/end\")) {\n+                                sendMessage(\"/end\");\n+                                continueChat = false;\n+                            } else if (msg.startsWith(\"/w\")) {\n+                                String[] equalsUser = msg.split(\"\\\\s\");\n+                                server.broadcastMessagePrivate(nickname + \" : \" + msg.substring(3), equalsUser[1], nickname);\n+                            }\n+                        } else {\n+                            server.broadcastMessage(nickname + \" : \" + msg); //просим сервер отправить сообщения всем клиентам\n+                        }\n+                    }\n+                } catch (IOException e) {\n+                    e.printStackTrace();\n+                } finally {\n+                    disconnect();\n+                }\n+            }).start();\n+\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+    }\n+\n+    //Метод необходимый для метода сервера. Который отправляет сообщения клиента в цикле по коллекции класса Server\n+    public void sendMessage(String msg) {\n+        try {\n+            out.writeUTF(msg);\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+    }\n+\n+    public String getNickname() {\n+        return nickname;\n+    }\n+\n+    public void disconnect() {\n+        server.unsubscribe(this);\n+        try {\n+            in.close();\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+        try {\n+            out.close();\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+\n+        try {\n+            socket.close();\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+    }\n+}"
  },
  {
    "sha": "53300f575757bd1dfd3c3b8505c14c9970ee2c20",
    "filename": "chat_project/server/src/main/java/DBAuthService.java",
    "status": "added",
    "additions": 31,
    "deletions": 0,
    "changes": 31,
    "blob_url": "https://github.com/gansergey/project/blob/407e452412cf44e7060e464f651395309123d90f/chat_project/server/src/main/java/DBAuthService.java",
    "raw_url": "https://github.com/gansergey/project/raw/407e452412cf44e7060e464f651395309123d90f/chat_project/server/src/main/java/DBAuthService.java",
    "contents_url": "https://api.github.com/repos/gansergey/project/contents/chat_project/server/src/main/java/DBAuthService.java?ref=407e452412cf44e7060e464f651395309123d90f",
    "patch": "@@ -0,0 +1,31 @@\n+import java.sql.*;\n+\n+public class DBAuthService implements AuthService {\n+\n+    private static final String DC_CONNECTION = \"jdbc:postgresql://localhost:5432/dbChat\";\n+    private static final String DB_USER = \"postgres\";\n+    private static final String DB_PASSWORD = \"admin\";\n+    private static Connection connection;\n+\n+    static {\n+        try {\n+            connection = DriverManager.getConnection(DC_CONNECTION, DB_USER, DB_PASSWORD);\n+        } catch (SQLException throwables) {\n+            throwables.printStackTrace();\n+        }\n+    }\n+\n+    @Override\n+    public String getNicknameByLoginAndPassword(String login, String password) {\n+        try (PreparedStatement stm = connection.prepareStatement(\"SELECT * FROM chat_users WHERE login = '\" + login\n+                + \"' AND pass = '\" +password+\"'\" );\n+             ResultSet resultSet = stm.executeQuery();){\n+            if (resultSet.next()){\n+                return login;\n+            }\n+        } catch (SQLException throwables) {\n+            throwables.printStackTrace();\n+        }\n+        return null;\n+    }\n+}"
  },
  {
    "sha": "583983f3d71ccb3c0f4e43ce36592c583a4b7c47",
    "filename": "chat_project/server/src/main/java/Server.java",
    "status": "added",
    "additions": 78,
    "deletions": 0,
    "changes": 78,
    "blob_url": "https://github.com/gansergey/project/blob/407e452412cf44e7060e464f651395309123d90f/chat_project/server/src/main/java/Server.java",
    "raw_url": "https://github.com/gansergey/project/raw/407e452412cf44e7060e464f651395309123d90f/chat_project/server/src/main/java/Server.java",
    "contents_url": "https://api.github.com/repos/gansergey/project/contents/chat_project/server/src/main/java/Server.java?ref=407e452412cf44e7060e464f651395309123d90f",
    "patch": "@@ -0,0 +1,78 @@\n+import java.io.IOException;\n+import java.net.ServerSocket;\n+import java.net.Socket;\n+import java.util.ArrayList;\n+import java.util.concurrent.atomic.AtomicInteger;\n+\n+public class Server {\n+    private ArrayList<ClientServer> clients;\n+\n+    private static final int PORT = 8184;\n+    private AtomicInteger number = new AtomicInteger(1);\n+    private AuthService authService = new DBAuthService();\n+\n+    public AuthService getAuthService() {\n+        return authService;\n+    }\n+\n+    public void setAuthService(AuthService authService) {\n+        this.authService = authService;\n+    }\n+\n+    public Server() {\n+        this.clients = new ArrayList<>();\n+        try (ServerSocket serverSocket = new ServerSocket(PORT)) {\n+            System.out.println(\"Сервер запущен, порт: \" + PORT);\n+            /*Цикл для подключения не ограниченного количества клиентов. Только этот класс может рассылать\n+            сообщения всем клиентам*/\n+            while (true) {\n+                Socket socket = serverSocket.accept();//ждём и подключаем клиента\n+                System.out.println(\"Клиент подключился\");\n+                new ClientServer(number.getAndIncrement(), this, socket);/*создаём клиента и ниже через метод\n+                \"subscribe\" добавляем его в коллекцию*/\n+            }\n+\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+    }\n+\n+    //Метод рассылки сообщений всем клиентам\n+    public void broadcastMessage(String msg) {\n+        for (ClientServer client : clients) {\n+            client.sendMessage(msg);\n+        }\n+    }\n+\n+    //Метод рассылки сообщений одному клиенту\n+    public void broadcastMessagePrivate(String msg, String user, String nickName) {\n+        for (ClientServer client : clients) {\n+            if (client.getNickname().equals(user) || client.getNickname().equals(nickName))\n+                client.sendMessage(msg);\n+        }\n+    }\n+\n+    //Метод рассылки списка клиентов\n+    public void broadcastClientsList() {\n+        StringBuilder stringBuilder = new StringBuilder(15 * clients.size());\n+        stringBuilder.append(\"/clients \");\n+        for (ClientServer client : clients) {\n+            stringBuilder.append(client.getNickname()).append(\" \");\n+        }\n+        String clientsList = stringBuilder.toString();\n+        broadcastMessage(clientsList);\n+    }\n+\n+    //Метод, для того, чтобы клиента сам мог добавится при авторизации в классе ClientServer\n+    public void subscribe(ClientServer client) {\n+        clients.add(client);\n+        broadcastClientsList();//список клиентов\n+    }\n+\n+    //удаляем клиента из коллекции\n+    public void unsubscribe(ClientServer client) {\n+        clients.remove(client);\n+        broadcastClientsList();//список клиентов\n+    }\n+}\n+"
  },
  {
    "sha": "7bf7eb74933808c6edd9ed70397ef1f75dcde566",
    "filename": "src/gan/homework1/Apple.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/gansergey/project/blob/407e452412cf44e7060e464f651395309123d90f/src/gan/homework1/Apple.java",
    "raw_url": "https://github.com/gansergey/project/raw/407e452412cf44e7060e464f651395309123d90f/src/gan/homework1/Apple.java",
    "contents_url": "https://api.github.com/repos/gansergey/project/contents/src/gan/homework1/Apple.java?ref=407e452412cf44e7060e464f651395309123d90f",
    "patch": "@@ -0,0 +1,7 @@\n+package gan.homework1;\n+\n+public class Apple extends Fruit {\n+    protected Apple() {\n+        super(1.0f);\n+    }\n+}"
  },
  {
    "sha": "ecd690f8d8111a418ffa7cefb1fecd024b35e891",
    "filename": "src/gan/homework1/Box.java",
    "status": "added",
    "additions": 48,
    "deletions": 0,
    "changes": 48,
    "blob_url": "https://github.com/gansergey/project/blob/407e452412cf44e7060e464f651395309123d90f/src/gan/homework1/Box.java",
    "raw_url": "https://github.com/gansergey/project/raw/407e452412cf44e7060e464f651395309123d90f/src/gan/homework1/Box.java",
    "contents_url": "https://api.github.com/repos/gansergey/project/contents/src/gan/homework1/Box.java?ref=407e452412cf44e7060e464f651395309123d90f",
    "patch": "@@ -0,0 +1,48 @@\n+package gan.homework1;\n+\n+import java.util.ArrayList;\n+\n+public class Box<T extends Fruit> {\n+\n+    ArrayList<T> arrayList;\n+\n+    public Box() {\n+        arrayList = new ArrayList<>();\n+    }\n+\n+    float maxWeight = 5.0f;\n+\n+    //Добавляем фрукты в коробку\n+    void addFruitToBox(T fruit) {\n+        if (getWeight() + (float) fruit.getWeight() < maxWeight) {\n+            arrayList.add(fruit);\n+        } else {\n+            System.out.println(\"Коробка полностью заполнена\");\n+        }\n+    }\n+\n+    //Получаем вес коробки\n+    float getWeight() {\n+        if (arrayList.isEmpty()) {\n+            return 0;\n+        } else {\n+            return arrayList.size() * (float) arrayList.get(0).getWeight();\n+        }\n+    }\n+\n+    //Сравниваем вес двух коробок\n+    boolean compare(Box<? extends Fruit> box) {\n+        return Math.abs(this.getWeight() - box.getWeight()) < 0.0001;\n+    }\n+\n+    //Переносим фрукты из одной коробки в другую\n+    void moveFruit(Box<T> box) {\n+        int count = this.arrayList.size();\n+        for (int i = 0; i < count; i++) {\n+            box.addFruitToBox(this.arrayList.get(i));\n+        }\n+        this.arrayList.clear();\n+    }\n+}\n+\n+"
  },
  {
    "sha": "ba2dc47b8ec7361f9059f6b10e1cac38ffacd73c",
    "filename": "src/gan/homework1/Fruit.java",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/gansergey/project/blob/407e452412cf44e7060e464f651395309123d90f/src/gan/homework1/Fruit.java",
    "raw_url": "https://github.com/gansergey/project/raw/407e452412cf44e7060e464f651395309123d90f/src/gan/homework1/Fruit.java",
    "contents_url": "https://api.github.com/repos/gansergey/project/contents/src/gan/homework1/Fruit.java?ref=407e452412cf44e7060e464f651395309123d90f",
    "patch": "@@ -0,0 +1,13 @@\n+package gan.homework1;\n+\n+public abstract class Fruit<T extends Number> {\n+    private T weight;\n+\n+    protected Fruit(T weight) {\n+        this.weight = weight;\n+    }\n+\n+    public T getWeight() {\n+        return weight;\n+    }\n+}"
  },
  {
    "sha": "3ffb7125f2259c2dea7966f8b0bcc3fb0688cbf0",
    "filename": "src/gan/homework1/Orange.java",
    "status": "added",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/gansergey/project/blob/407e452412cf44e7060e464f651395309123d90f/src/gan/homework1/Orange.java",
    "raw_url": "https://github.com/gansergey/project/raw/407e452412cf44e7060e464f651395309123d90f/src/gan/homework1/Orange.java",
    "contents_url": "https://api.github.com/repos/gansergey/project/contents/src/gan/homework1/Orange.java?ref=407e452412cf44e7060e464f651395309123d90f",
    "patch": "@@ -0,0 +1,8 @@\n+package gan.homework1;\n+\n+public class Orange extends Fruit {\n+\n+    protected Orange() {\n+        super(1.5f);\n+    }\n+}"
  }
]
