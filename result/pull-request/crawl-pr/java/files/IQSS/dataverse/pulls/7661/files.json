[
  {
    "sha": "9995f0172d3c6d5ef02af5fc29abc189f9c7a61b",
    "filename": "doc/sphinx-guides/source/installation/config.rst",
    "status": "modified",
    "additions": 18,
    "deletions": 8,
    "changes": 26,
    "blob_url": "https://github.com/IQSS/dataverse/blob/b90621208775d1391ba0e84c4cd66b399b129b3c/doc/sphinx-guides/source/installation/config.rst",
    "raw_url": "https://github.com/IQSS/dataverse/raw/b90621208775d1391ba0e84c4cd66b399b129b3c/doc/sphinx-guides/source/installation/config.rst",
    "contents_url": "https://api.github.com/repos/IQSS/dataverse/contents/doc/sphinx-guides/source/installation/config.rst?ref=b90621208775d1391ba0e84c4cd66b399b129b3c",
    "patch": "@@ -594,7 +594,7 @@ You may also want to look at samples at https://github.com/shlake/LibraDataHomep\n A simpler option to brand and customize your installation is to utilize the Dataverse collection theme, which each Dataverse collection has, that allows you to change colors, add a logo, tagline or website link to the Dataverse collection header section of the page. Those options are outlined in the :doc:`/user/dataverse-management` section of the User Guide.\n \n Custom Homepage\n-++++++++++++++++\n++++++++++++++++\n \n The Dataverse Software allows you to use a custom homepage or welcome page in place of the default root Dataverse collection page. This allows for complete control over the look and feel of your installation's homepage.\n \n@@ -613,7 +613,7 @@ For more background on what this curl command above is doing, see the \"Database\n ``curl -X DELETE http://localhost:8080/api/admin/settings/:HomePageCustomizationFile``\n \n Custom Navbar Logo\n-+++++++++++++++++++\n+++++++++++++++++++\n \n The Dataverse Software allows you to replace the default Dataverse Project icon and name branding in the navbar with your own custom logo. Note that this logo is separate from the *root dataverse theme* logo.\n \n@@ -667,7 +667,7 @@ Internationalization\n The Dataverse Software is being translated into multiple languages by the Dataverse Project Community! Please see below for how to help with this effort!\n \n Adding Multiple Languages to the Dropdown in the Header\n-++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n \n The presence of the :ref:`:Languages` database setting adds a dropdown in the header for multiple languages. For example to add English and French to the dropdown:\n \n@@ -1465,7 +1465,7 @@ Please note that the authority cannot have a slash (\"/\") in it.\n .. _:Shoulder:\n \n :Shoulder\n-++++++++++++\n++++++++++\n \n Out of the box, the DOI shoulder is set to \"FK2/\" but this is for testing only! When you apply for your DOI namespace, you may have requested a shoulder. The following is only an example and a trailing slash is optional.\n \n@@ -1509,9 +1509,9 @@ The chart below shows examples from each possible combination of parameters from\n |                 | randomString  | sequentialNumber |\n |                 |               |                  |\n +=================+===============+==================+\n-| **DEPENDENT**   | TJCLKP/MLGWJO |     100001/1     |\n+| **DEPENDENT**   | TJCLKP/MLGWJO | 100001/1         |\n +-----------------+---------------+------------------+\n-| **INDEPENDENT** |    MLGWJO     |      100002      |\n+| **INDEPENDENT** | MLGWJO        | 100002           |\n +-----------------+---------------+------------------+\n \n As seen above, in cases where ``:IdentifierGenerationStyle`` is set to *sequentialNumber* and ``:DataFilePIDFormat`` is set to *DEPENDENT*, each file within a dataset will be assigned a number *within* that dataset starting with \"1\".\n@@ -1536,7 +1536,7 @@ Note: File-level PID registration was added in Dataverse Software 4.9; it could\n .. _:IndependentHandleService:\n \n :IndependentHandleService\n-+++++++++++++++++++++++++++\n++++++++++++++++++++++++++\n \n Specific for Handle PIDs. Set this setting to true if you want to use a Handle service which is setup to work 'independently' (No communication with the Global Handle Registry).\n By default this setting is absent and the Dataverse Software assumes it to be false.\n@@ -2035,7 +2035,7 @@ Set the name of the cloud environment you've integrated with your Dataverse inst\n .. _:PublicInstall:\n \n :PublicInstall\n-+++++++++++++++++++++\n+++++++++++++++\n \n Setting an installation to public will remove the ability to restrict data files or datasets. This functionality of the Dataverse Software will be disabled from your installation.\n \n@@ -2224,3 +2224,13 @@ This is the local file system path to be used with the LocalSubmitToArchiveComma\n +++++++++++++++++++\n \n These are the bucket and project names to be used with the GoogleCloudSubmitToArchiveCommand class. Further information is in the :ref:`Google Cloud Configuration` section above.\n+\n+:InstallationName\n++++++++++++++++++\n+\n+By default, the name of the root Dataverse collection is used as the 'brandname' of the repository, i.e. in emails and metadata exports. If set, :InstallationName overrides this default, allowing the root collection name and brandname to be set independently. (Note that, since metadata export files are cached, they will have to be reexported (see :doc:`/admin/metadataexport`) before they incorporate a change in this setting.)\n+\n+:ExportInstallationAsDistributorOnlyWhenNotSet\n+++++++++++++++++++++++++++++++++++++++++++++++\n+\n+In the DDI metadata exports, the default behavior is to always add the repository (using its brandname - the root collection name or the value of :ref:`:InstallationName <:InstallationName>`) to the stdyDscr/distStmt/distrbtr element. If this setting is true, this will only be done when a Distributor is not already defined in the Dataset metadata. (Note that, since metadata export files are cached, they will have to be reexported (see :doc:`/admin/metadataexport`) before they incorporate a change in this setting.) \n\\ No newline at end of file"
  },
  {
    "sha": "f6cbd01ece095f1d0e8fc7a109b7b21b8d165d7b",
    "filename": "src/main/java/edu/harvard/iq/dataverse/AbstractGlobalIdServiceBean.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/IQSS/dataverse/blob/b90621208775d1391ba0e84c4cd66b399b129b3c/src/main/java/edu/harvard/iq/dataverse/AbstractGlobalIdServiceBean.java",
    "raw_url": "https://github.com/IQSS/dataverse/raw/b90621208775d1391ba0e84c4cd66b399b129b3c/src/main/java/edu/harvard/iq/dataverse/AbstractGlobalIdServiceBean.java",
    "contents_url": "https://api.github.com/repos/IQSS/dataverse/contents/src/main/java/edu/harvard/iq/dataverse/AbstractGlobalIdServiceBean.java?ref=b90621208775d1391ba0e84c4cd66b399b129b3c",
    "patch": "@@ -62,7 +62,7 @@ public String getIdentifierForLookup(String protocol, String authority, String i\n             authorString = UNAVAILABLE;\n         }\n \n-        String producerString = dataverseService.findRootDataverse().getName();\n+        String producerString = dataverseService.getRootDataverseName();\n \n         if (producerString.isEmpty() || producerString.equals(DatasetField.NA_VALUE)) {\n             producerString = UNAVAILABLE;\n@@ -437,7 +437,7 @@ public String getMetadataFromDvObject(String identifier, Map<String, String> met\n         metadataTemplate.setContacts(dataset.getLatestVersion().getDatasetContacts());\n         metadataTemplate.setProducers(dataset.getLatestVersion().getDatasetProducers());\n         metadataTemplate.setTitle(dvObject.getCurrentName());\n-        String producerString = dataverseService.findRootDataverse().getName();\n+        String producerString = dataverseService.getRootDataverseName();\n         if (producerString.isEmpty()  || producerString.equals(DatasetField.NA_VALUE) ) {\n             producerString = UNAVAILABLE;\n         }"
  },
  {
    "sha": "815733f1b7b894a41ef7ee811db1282793b5cb2a",
    "filename": "src/main/java/edu/harvard/iq/dataverse/DOIDataCiteRegisterService.java",
    "status": "modified",
    "additions": 3,
    "deletions": 1,
    "changes": 4,
    "blob_url": "https://github.com/IQSS/dataverse/blob/b90621208775d1391ba0e84c4cd66b399b129b3c/src/main/java/edu/harvard/iq/dataverse/DOIDataCiteRegisterService.java",
    "raw_url": "https://github.com/IQSS/dataverse/raw/b90621208775d1391ba0e84c4cd66b399b129b3c/src/main/java/edu/harvard/iq/dataverse/DOIDataCiteRegisterService.java",
    "contents_url": "https://api.github.com/repos/IQSS/dataverse/contents/src/main/java/edu/harvard/iq/dataverse/DOIDataCiteRegisterService.java?ref=b90621208775d1391ba0e84c4cd66b399b129b3c",
    "patch": "@@ -6,6 +6,8 @@\n package edu.harvard.iq.dataverse;\n \n import edu.harvard.iq.dataverse.AbstractGlobalIdServiceBean.GlobalIdMetadataTemplate;\n+import edu.harvard.iq.dataverse.branding.BrandingUtil;\n+\n import java.io.ByteArrayOutputStream;\n import java.io.IOException;\n import java.io.InputStream;\n@@ -205,7 +207,7 @@ public static String getMetadataFromDvObject(String identifier, Map<String, Stri\n         }\n         \n         metadataTemplate.setTitle(title);\n-        String producerString = dataset.getLatestVersion().getRootDataverseNameforCitation();\n+        String producerString = BrandingUtil.getRootDataverseCollectionName();\n         if (producerString.isEmpty() || producerString.equals(DatasetField.NA_VALUE)) {\n             producerString = AbstractGlobalIdServiceBean.UNAVAILABLE;\n         }"
  },
  {
    "sha": "2e8df48f4f19ca8f31b07a63fcc7fad0ac04b65f",
    "filename": "src/main/java/edu/harvard/iq/dataverse/DataCitation.java",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/IQSS/dataverse/blob/b90621208775d1391ba0e84c4cd66b399b129b3c/src/main/java/edu/harvard/iq/dataverse/DataCitation.java",
    "raw_url": "https://github.com/IQSS/dataverse/raw/b90621208775d1391ba0e84c4cd66b399b129b3c/src/main/java/edu/harvard/iq/dataverse/DataCitation.java",
    "contents_url": "https://api.github.com/repos/IQSS/dataverse/contents/src/main/java/edu/harvard/iq/dataverse/DataCitation.java?ref=b90621208775d1391ba0e84c4cd66b399b129b3c",
    "patch": "@@ -5,6 +5,7 @@\n  */\n package edu.harvard.iq.dataverse;\n \n+import edu.harvard.iq.dataverse.branding.BrandingUtil;\n import edu.harvard.iq.dataverse.harvest.client.HarvestingClient;\n \n import java.io.BufferedWriter;\n@@ -745,7 +746,7 @@ private void getAuthorsAndProducersFrom(DatasetVersion dsv) {\n \n     private String getPublisherFrom(DatasetVersion dsv) {\n         if (!dsv.getDataset().isHarvested()) {\n-            return dsv.getRootDataverseNameforCitation();\n+            return BrandingUtil.getInstallationBrandName();\n         } else {\n             return dsv.getDistributorName();\n             // remove += [distributor] SEK 8-18-2016"
  },
  {
    "sha": "a8189714c6c07d1bd485c0d8bb99a2bfe641a756",
    "filename": "src/main/java/edu/harvard/iq/dataverse/DatasetPage.java",
    "status": "modified",
    "additions": 6,
    "deletions": 9,
    "changes": 15,
    "blob_url": "https://github.com/IQSS/dataverse/blob/b90621208775d1391ba0e84c4cd66b399b129b3c/src/main/java/edu/harvard/iq/dataverse/DatasetPage.java",
    "raw_url": "https://github.com/IQSS/dataverse/raw/b90621208775d1391ba0e84c4cd66b399b129b3c/src/main/java/edu/harvard/iq/dataverse/DatasetPage.java",
    "contents_url": "https://api.github.com/repos/IQSS/dataverse/contents/src/main/java/edu/harvard/iq/dataverse/DatasetPage.java?ref=b90621208775d1391ba0e84c4cd66b399b129b3c",
    "patch": "@@ -2055,9 +2055,8 @@ private void displayLockInfo(Dataset dataset) {\n                         BundleUtil.getStringFromBundle(\"dataset.publish.file.validation.error.contactSupport\"));\n             } \n             if (dataset.isLockedFor(DatasetLock.Reason.EditInProgress)) {\n-                String rootDataverseName = dataverseService.findRootDataverse().getName();\n                 JH.addMessage(FacesMessage.SEVERITY_WARN, BundleUtil.getStringFromBundle(\"dataset.locked.editInProgress.message\"),\n-                        BundleUtil.getStringFromBundle(\"dataset.locked.editInProgress.message.details\", Arrays.asList(BrandingUtil.getSupportTeamName(null, rootDataverseName))));\n+                        BundleUtil.getStringFromBundle(\"dataset.locked.editInProgress.message.details\", Arrays.asList(BrandingUtil.getSupportTeamName(null))));\n             }\n         }\n         \n@@ -3371,8 +3370,7 @@ public String save() {\n                     if (dataset.isLockedFor(DatasetLock.Reason.EditInProgress) || lockTest.isLockedFor(DatasetLock.Reason.EditInProgress)) {\n                         logger.log(Level.INFO, \"Couldn''t save dataset: {0}\", \"It is locked.\"\n                                 + \"\");\n-                        String rootDataverseName = dataverseService.findRootDataverse().getName();\n-                        JH.addMessage(FacesMessage.SEVERITY_FATAL, BundleUtil.getStringFromBundle(\"dataset.locked.editInProgress.message\"),BundleUtil.getStringFromBundle(\"dataset.locked.editInProgress.message.details\", Arrays.asList(BrandingUtil.getSupportTeamName(null, rootDataverseName))));\n+                        JH.addMessage(FacesMessage.SEVERITY_FATAL, BundleUtil.getStringFromBundle(\"dataset.locked.editInProgress.message\"),BundleUtil.getStringFromBundle(\"dataset.locked.editInProgress.message.details\", Arrays.asList(BrandingUtil.getSupportTeamName(null))));\n                         return returnToDraftVersion();\n                     }\n                 }\n@@ -4200,13 +4198,13 @@ public String getTabularDataFileURL(Long fileid) {\n     public List< String[]> getExporters(){\n         List<String[]> retList = new ArrayList<>();\n         String myHostURL = getDataverseSiteUrl();\n-        for (String [] provider : ExportService.getInstance(settingsService).getExportersLabels() ){\n+        for (String [] provider : ExportService.getInstance().getExportersLabels() ){\n             String formatName = provider[1];\n             String formatDisplayName = provider[0];\n             \n             Exporter exporter = null; \n             try {\n-                exporter = ExportService.getInstance(settingsService).getExporter(formatName);\n+                exporter = ExportService.getInstance().getExporter(formatName);\n             } catch (ExportException ex) {\n                 exporter = null;\n             }\n@@ -5150,8 +5148,7 @@ public String getDescription() {\n      * @return the publisher of the version\n      */\n     public String getPublisher() {\n-        assert (null != workingVersion);\n-        return workingVersion.getRootDataverseNameforCitation();\n+        return dataverseService.getRootDataverseName();\n     }\n     \n     public void downloadRsyncScript() {\n@@ -5296,7 +5293,7 @@ public boolean isThisLatestReleasedVersion() {\n     \n     public String getJsonLd() {\n         if (isThisLatestReleasedVersion()) {\n-            ExportService instance = ExportService.getInstance(settingsService);\n+            ExportService instance = ExportService.getInstance();\n             String jsonLd = instance.getExportAsString(dataset, SchemaDotOrgExporter.NAME);\n             if (jsonLd != null) {\n                 logger.fine(\"Returning cached schema.org JSON-LD.\");"
  },
  {
    "sha": "f77fcc780139fa837cfcfcecf71c918f352b98b8",
    "filename": "src/main/java/edu/harvard/iq/dataverse/DatasetServiceBean.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/IQSS/dataverse/blob/b90621208775d1391ba0e84c4cd66b399b129b3c/src/main/java/edu/harvard/iq/dataverse/DatasetServiceBean.java",
    "raw_url": "https://github.com/IQSS/dataverse/raw/b90621208775d1391ba0e84c4cd66b399b129b3c/src/main/java/edu/harvard/iq/dataverse/DatasetServiceBean.java",
    "contents_url": "https://api.github.com/repos/IQSS/dataverse/contents/src/main/java/edu/harvard/iq/dataverse/DatasetServiceBean.java?ref=b90621208775d1391ba0e84c4cd66b399b129b3c",
    "patch": "@@ -963,7 +963,7 @@ public long findStorageSize(Dataset dataset, boolean countCachedExtras, GetDatas\n             // (i.e., the metadata exports):\n             StorageIO<Dataset> datasetSIO = DataAccess.getStorageIO(dataset);\n             \n-            for (String[] exportProvider : ExportService.getInstance(settingsService).getExportersLabels()) {\n+            for (String[] exportProvider : ExportService.getInstance().getExportersLabels()) {\n                 String exportLabel = \"export_\" + exportProvider[1] + \".cached\";\n                 try {\n                     total += datasetSIO.getAuxObjectSize(exportLabel);"
  },
  {
    "sha": "d28ce5175d44b512756854d4755c00714ff3ac3f",
    "filename": "src/main/java/edu/harvard/iq/dataverse/DatasetVersion.java",
    "status": "modified",
    "additions": 2,
    "deletions": 17,
    "changes": 19,
    "blob_url": "https://github.com/IQSS/dataverse/blob/b90621208775d1391ba0e84c4cd66b399b129b3c/src/main/java/edu/harvard/iq/dataverse/DatasetVersion.java",
    "raw_url": "https://github.com/IQSS/dataverse/raw/b90621208775d1391ba0e84c4cd66b399b129b3c/src/main/java/edu/harvard/iq/dataverse/DatasetVersion.java",
    "contents_url": "https://api.github.com/repos/IQSS/dataverse/contents/src/main/java/edu/harvard/iq/dataverse/DatasetVersion.java?ref=b90621208775d1391ba0e84c4cd66b399b129b3c",
    "patch": "@@ -1391,21 +1391,6 @@ public String getDistributorName() {\n         }\n         return null;\n     }\n-    \n-    // TODO: Consider renaming this method since it's also used for getting the \"provider\" for Schema.org JSON-LD.\n-    public String getRootDataverseNameforCitation(){\n-                    //Get root dataverse name for Citation\n-        Dataverse root = this.getDataset().getOwner();\n-        while (root.getOwner() != null) {\n-            root = root.getOwner();\n-        }\n-        String rootDataverseName = root.getName();\n-        if (!StringUtil.isEmpty(rootDataverseName)) {\n-            return rootDataverseName;\n-        } else {\n-            return \"\";\n-        }\n-    }\n \n     public List<DatasetDistributor> getDatasetDistributors() {\n         //todo get distributors from DatasetfieldValues\n@@ -1888,11 +1873,11 @@ public String getJsonLd() {\n         \n         job.add(\"includedInDataCatalog\", Json.createObjectBuilder()\n                 .add(\"@type\", \"DataCatalog\")\n-                .add(\"name\", this.getRootDataverseNameforCitation())\n+                .add(\"name\", BrandingUtil.getRootDataverseCollectionName())\n                 .add(\"url\", SystemConfig.getDataverseSiteUrlStatic())\n         );\n \n-        String installationBrandName = BrandingUtil.getInstallationBrandName(getRootDataverseNameforCitation());\n+        String installationBrandName = BrandingUtil.getInstallationBrandName();\n         /**\n          * Both \"publisher\" and \"provider\" are included but they have the same\n          * values. Some services seem to prefer one over the other."
  },
  {
    "sha": "46444423b4320604cf230abd91c5c9a7bde97cbd",
    "filename": "src/main/java/edu/harvard/iq/dataverse/DataverseServiceBean.java",
    "status": "modified",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/IQSS/dataverse/blob/b90621208775d1391ba0e84c4cd66b399b129b3c/src/main/java/edu/harvard/iq/dataverse/DataverseServiceBean.java",
    "raw_url": "https://github.com/IQSS/dataverse/raw/b90621208775d1391ba0e84c4cd66b399b129b3c/src/main/java/edu/harvard/iq/dataverse/DataverseServiceBean.java",
    "contents_url": "https://api.github.com/repos/IQSS/dataverse/contents/src/main/java/edu/harvard/iq/dataverse/DataverseServiceBean.java?ref=b90621208775d1391ba0e84c4cd66b399b129b3c",
    "patch": "@@ -18,6 +18,7 @@\n import edu.harvard.iq.dataverse.search.IndexServiceBean;\n import edu.harvard.iq.dataverse.search.SolrIndexServiceBean;\n import edu.harvard.iq.dataverse.search.SolrSearchResult;\n+import edu.harvard.iq.dataverse.util.StringUtil;\n import edu.harvard.iq.dataverse.util.SystemConfig;\n import java.io.File;\n import java.io.IOException;\n@@ -195,6 +196,15 @@ public Dataverse findRootDataverse() {\n         return em.createNamedQuery(\"Dataverse.findRoot\", Dataverse.class).getSingleResult();\n     }\n     \n+    \n+    //Similarly - if the above throws that exception, do we need to catch it here?\n+    //ToDo - consider caching?\n+    public String getRootDataverseName() {\n+        Dataverse root = findRootDataverse();\n+        String rootDataverseName=root.getName();\n+        return StringUtil.isEmpty(rootDataverseName) ? \"\" : rootDataverseName; \n+    }\n+    \n     public List<Dataverse> findAllPublishedByOwnerId(Long ownerId) {\n         List<Dataverse> retVal = new ArrayList<>();       \n         List<Dataverse> previousLevel = findPublishedByOwnerId(ownerId);"
  },
  {
    "sha": "63b1a3113ec1fd620e7dc01caef6351f34d45efe",
    "filename": "src/main/java/edu/harvard/iq/dataverse/EditDatafilesPage.java",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/IQSS/dataverse/blob/b90621208775d1391ba0e84c4cd66b399b129b3c/src/main/java/edu/harvard/iq/dataverse/EditDatafilesPage.java",
    "raw_url": "https://github.com/IQSS/dataverse/raw/b90621208775d1391ba0e84c4cd66b399b129b3c/src/main/java/edu/harvard/iq/dataverse/EditDatafilesPage.java",
    "contents_url": "https://api.github.com/repos/IQSS/dataverse/contents/src/main/java/edu/harvard/iq/dataverse/EditDatafilesPage.java?ref=b90621208775d1391ba0e84c4cd66b399b129b3c",
    "patch": "@@ -941,8 +941,7 @@ public String save() {\n             if (dataset.isLockedFor(DatasetLock.Reason.EditInProgress) || lockTest.isLockedFor(DatasetLock.Reason.EditInProgress)) {\n                 logger.log(Level.INFO, \"Couldn''t save dataset: {0}\", \"It is locked.\"\n                         + \"\");\n-                String rootDataverseName = dataverseService.findRootDataverse().getName();\n-                JH.addMessage(FacesMessage.SEVERITY_FATAL, getBundleString(\"dataset.locked.editInProgress.message\"),BundleUtil.getStringFromBundle(\"dataset.locked.editInProgress.message.details\", Arrays.asList(BrandingUtil.getSupportTeamName(null, rootDataverseName))));\n+                JH.addMessage(FacesMessage.SEVERITY_FATAL, getBundleString(\"dataset.locked.editInProgress.message\"),BundleUtil.getStringFromBundle(\"dataset.locked.editInProgress.message.details\", Arrays.asList(BrandingUtil.getSupportTeamName(null))));\n                 return null;\n             }\n         }"
  },
  {
    "sha": "575b6e01fa60b62e0e77f49d7279d09da91261bb",
    "filename": "src/main/java/edu/harvard/iq/dataverse/FilePage.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/IQSS/dataverse/blob/b90621208775d1391ba0e84c4cd66b399b129b3c/src/main/java/edu/harvard/iq/dataverse/FilePage.java",
    "raw_url": "https://github.com/IQSS/dataverse/raw/b90621208775d1391ba0e84c4cd66b399b129b3c/src/main/java/edu/harvard/iq/dataverse/FilePage.java",
    "contents_url": "https://api.github.com/repos/IQSS/dataverse/contents/src/main/java/edu/harvard/iq/dataverse/FilePage.java?ref=b90621208775d1391ba0e84c4cd66b399b129b3c",
    "patch": "@@ -304,13 +304,13 @@ public void setVersion(String version) {\n     public List< String[]> getExporters(){\n         List<String[]> retList = new ArrayList<>();\n         String myHostURL = systemConfig.getDataverseSiteUrl();\n-        for (String [] provider : ExportService.getInstance(settingsService).getExportersLabels() ){\n+        for (String [] provider : ExportService.getInstance().getExportersLabels() ){\n             String formatName = provider[1];\n             String formatDisplayName = provider[0];\n             \n             Exporter exporter = null; \n             try {\n-                exporter = ExportService.getInstance(settingsService).getExporter(formatName);\n+                exporter = ExportService.getInstance().getExporter(formatName);\n             } catch (ExportException ex) {\n                 exporter = null;\n             }"
  },
  {
    "sha": "5effffb5d4361589c70a964ddda5041e3ec45315",
    "filename": "src/main/java/edu/harvard/iq/dataverse/MailServiceBean.java",
    "status": "modified",
    "additions": 5,
    "deletions": 8,
    "changes": 13,
    "blob_url": "https://github.com/IQSS/dataverse/blob/b90621208775d1391ba0e84c4cd66b399b129b3c/src/main/java/edu/harvard/iq/dataverse/MailServiceBean.java",
    "raw_url": "https://github.com/IQSS/dataverse/raw/b90621208775d1391ba0e84c4cd66b399b129b3c/src/main/java/edu/harvard/iq/dataverse/MailServiceBean.java",
    "contents_url": "https://api.github.com/repos/IQSS/dataverse/contents/src/main/java/edu/harvard/iq/dataverse/MailServiceBean.java?ref=b90621208775d1391ba0e84c4cd66b399b129b3c",
    "patch": "@@ -121,12 +121,11 @@ public boolean sendSystemEmail(String to, String subject, String messageText, bo\n \n \n         boolean sent = false;\n-        String rootDataverseName = dataverseService.findRootDataverse().getName();\n         InternetAddress systemAddress = getSystemAddress(); \n         \n         String body = messageText\n-                + (isHtmlContent ? BundleUtil.getStringFromBundle(\"notification.email.closing.html\", Arrays.asList(BrandingUtil.getSupportTeamEmailAddress(systemAddress), BrandingUtil.getSupportTeamName(systemAddress, rootDataverseName)))\n-                        : BundleUtil.getStringFromBundle(\"notification.email.closing\", Arrays.asList(BrandingUtil.getSupportTeamEmailAddress(systemAddress), BrandingUtil.getSupportTeamName(systemAddress, rootDataverseName))));\n+                + (isHtmlContent ? BundleUtil.getStringFromBundle(\"notification.email.closing.html\", Arrays.asList(BrandingUtil.getSupportTeamEmailAddress(systemAddress), BrandingUtil.getSupportTeamName(systemAddress)))\n+                        : BundleUtil.getStringFromBundle(\"notification.email.closing\", Arrays.asList(BrandingUtil.getSupportTeamEmailAddress(systemAddress), BrandingUtil.getSupportTeamName(systemAddress))));\n        \n         logger.fine(\"Sending email to \" + to + \". Subject: <<<\" + subject + \">>>. Body: \" + body);\n         try {\n@@ -245,8 +244,7 @@ public Boolean sendNotificationEmail(UserNotification notification, String comme\n            Object objectOfNotification =  getObjectOfNotification(notification);\n            if (objectOfNotification != null){\n                String messageText = getMessageTextBasedOnNotification(notification, objectOfNotification, comment, requestor);\n-               String rootDataverseName = dataverseService.findRootDataverse().getName();\n-               String subjectText = MailUtil.getSubjectTextBasedOnNotification(notification, rootDataverseName, objectOfNotification);\n+               String subjectText = MailUtil.getSubjectTextBasedOnNotification(notification, objectOfNotification);\n                if (!(messageText.isEmpty() || subjectText.isEmpty())){\n                    retval = sendSystemEmail(emailAddress, subjectText, messageText, isHtmlContent);\n                } else {\n@@ -497,13 +495,12 @@ public String getMessageTextBasedOnNotification(UserNotification userNotificatio\n                 messageText += MessageFormat.format(pattern, paramArrayReturnedDataset);\n                 return messageText;\n             case CREATEACC:\n-                String rootDataverseName = dataverseService.findRootDataverse().getName();\n                 InternetAddress systemAddress = getSystemAddress();\n                 String accountCreatedMessage = BundleUtil.getStringFromBundle(\"notification.email.welcome\", Arrays.asList(\n-                        BrandingUtil.getInstallationBrandName(rootDataverseName),\n+                        BrandingUtil.getInstallationBrandName(),\n                         systemConfig.getGuidesBaseUrl(),\n                         systemConfig.getGuidesVersion(),\n-                        BrandingUtil.getSupportTeamName(systemAddress, rootDataverseName),\n+                        BrandingUtil.getSupportTeamName(systemAddress),\n                         BrandingUtil.getSupportTeamEmailAddress(systemAddress)\n                 ));\n                 String optionalConfirmEmailAddon = confirmEmailService.optionalConfirmEmailAddonMsg(userNotification.getUser());"
  },
  {
    "sha": "363972b48c3cdcb696a56952965736c4064a35cd",
    "filename": "src/main/java/edu/harvard/iq/dataverse/SendFeedbackDialog.java",
    "status": "modified",
    "additions": 4,
    "deletions": 6,
    "changes": 10,
    "blob_url": "https://github.com/IQSS/dataverse/blob/b90621208775d1391ba0e84c4cd66b399b129b3c/src/main/java/edu/harvard/iq/dataverse/SendFeedbackDialog.java",
    "raw_url": "https://github.com/IQSS/dataverse/raw/b90621208775d1391ba0e84c4cd66b399b129b3c/src/main/java/edu/harvard/iq/dataverse/SendFeedbackDialog.java",
    "contents_url": "https://api.github.com/repos/IQSS/dataverse/contents/src/main/java/edu/harvard/iq/dataverse/SendFeedbackDialog.java?ref=b90621208775d1391ba0e84c4cd66b399b129b3c",
    "patch": "@@ -130,7 +130,7 @@ public void setUserSum(Long userSum) {\n \n     public String getMessageTo() {\n         if (recipient == null) {\n-            return BrandingUtil.getSupportTeamName(systemAddress, dataverseService.findRootDataverse().getName());\n+            return BrandingUtil.getSupportTeamName(systemAddress);\n         } else if (recipient.isInstanceofDataverse()) {\n             return ((Dataverse) recipient).getDisplayName() + \" \" + BundleUtil.getStringFromBundle(\"contact.contact\");\n         } else {\n@@ -140,7 +140,7 @@ public String getMessageTo() {\n \n     public String getFormHeader() {\n         if (recipient == null) {\n-            return BrandingUtil.getContactHeader(systemAddress, dataverseService.findRootDataverse().getName());\n+            return BrandingUtil.getContactHeader(systemAddress);\n         } else if (recipient.isInstanceofDataverse()) {\n             return BundleUtil.getStringFromBundle(\"contact.dataverse.header\");\n         } else {\n@@ -198,10 +198,8 @@ public void validateUserEmail(FacesContext context, UIComponent component, Objec\n     }\n \n     public String sendMessage() {\n-        // FIXME: move dataverseService.findRootDataverse() to init\n-        String rootDataverseName = dataverseService.findRootDataverse().getName();\n-        String installationBrandName = BrandingUtil.getInstallationBrandName(rootDataverseName);\n-        String supportTeamName = BrandingUtil.getSupportTeamName(systemAddress, rootDataverseName);\n+        String installationBrandName = BrandingUtil.getInstallationBrandName();\n+        String supportTeamName = BrandingUtil.getSupportTeamName(systemAddress);\n         List<Feedback> feedbacks = FeedbackUtil.gatherFeedback(recipient, dataverseSession, messageSubject, userMessage, systemAddress, userEmail, systemConfig.getDataverseSiteUrl(), installationBrandName, supportTeamName);\n         if (feedbacks.isEmpty()) {\n             logger.warning(\"No feedback has been sent!\");"
  },
  {
    "sha": "d7512dd5cf0ec936a60d57e9bf4ef8e60236f9fc",
    "filename": "src/main/java/edu/harvard/iq/dataverse/SettingsWrapper.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/IQSS/dataverse/blob/b90621208775d1391ba0e84c4cd66b399b129b3c/src/main/java/edu/harvard/iq/dataverse/SettingsWrapper.java",
    "raw_url": "https://github.com/IQSS/dataverse/raw/b90621208775d1391ba0e84c4cd66b399b129b3c/src/main/java/edu/harvard/iq/dataverse/SettingsWrapper.java",
    "contents_url": "https://api.github.com/repos/IQSS/dataverse/contents/src/main/java/edu/harvard/iq/dataverse/SettingsWrapper.java?ref=b90621208775d1391ba0e84c4cd66b399b129b3c",
    "patch": "@@ -173,13 +173,13 @@ public boolean isDataFilePIDSequentialDependent(){\n     public String getSupportTeamName() {\n         String systemEmail = getValueForKey(SettingsServiceBean.Key.SystemEmail);\n         InternetAddress systemAddress = MailUtil.parseSystemAddress(systemEmail);\n-        return BrandingUtil.getSupportTeamName(systemAddress, dataverseService.findRootDataverse().getName());\n+        return BrandingUtil.getSupportTeamName(systemAddress);\n     }\n     \n     public String getSupportTeamEmail() {\n         String systemEmail = getValueForKey(SettingsServiceBean.Key.SystemEmail);\n         InternetAddress systemAddress = MailUtil.parseSystemAddress(systemEmail);        \n-        return BrandingUtil.getSupportTeamEmailAddress(systemAddress) != null ? BrandingUtil.getSupportTeamEmailAddress(systemAddress) : BrandingUtil.getSupportTeamName(systemAddress, dataverseService.findRootDataverse().getName());\n+        return BrandingUtil.getSupportTeamEmailAddress(systemAddress) != null ? BrandingUtil.getSupportTeamEmailAddress(systemAddress) : BrandingUtil.getSupportTeamName(systemAddress);\n     }\n     \n     public Integer getUploadMethodsCount() {"
  },
  {
    "sha": "31b4ea98aeec9bbeab5c4ce498adbba00c5000fa",
    "filename": "src/main/java/edu/harvard/iq/dataverse/api/Datasets.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/IQSS/dataverse/blob/b90621208775d1391ba0e84c4cd66b399b129b3c/src/main/java/edu/harvard/iq/dataverse/api/Datasets.java",
    "raw_url": "https://github.com/IQSS/dataverse/raw/b90621208775d1391ba0e84c4cd66b399b129b3c/src/main/java/edu/harvard/iq/dataverse/api/Datasets.java",
    "contents_url": "https://api.github.com/repos/IQSS/dataverse/contents/src/main/java/edu/harvard/iq/dataverse/api/Datasets.java?ref=b90621208775d1391ba0e84c4cd66b399b129b3c",
    "patch": "@@ -265,7 +265,7 @@ public Response exportDataset(@QueryParam(\"persistentId\") String persistentId, @\n                 return error(Response.Status.NOT_FOUND, \"A dataset with the persistentId \" + persistentId + \" could not be found.\");\n             }\n             \n-            ExportService instance = ExportService.getInstance(settingsSvc);\n+            ExportService instance = ExportService.getInstance();\n             \n             InputStream is = instance.getExport(dataset, exporter);\n            "
  },
  {
    "sha": "d9a94ee340b99cd3f087127cdf20b7aa69f30297",
    "filename": "src/main/java/edu/harvard/iq/dataverse/api/FeedbackApi.java",
    "status": "modified",
    "additions": 2,
    "deletions": 3,
    "changes": 5,
    "blob_url": "https://github.com/IQSS/dataverse/blob/b90621208775d1391ba0e84c4cd66b399b129b3c/src/main/java/edu/harvard/iq/dataverse/api/FeedbackApi.java",
    "raw_url": "https://github.com/IQSS/dataverse/raw/b90621208775d1391ba0e84c4cd66b399b129b3c/src/main/java/edu/harvard/iq/dataverse/api/FeedbackApi.java",
    "contents_url": "https://api.github.com/repos/IQSS/dataverse/contents/src/main/java/edu/harvard/iq/dataverse/api/FeedbackApi.java?ref=b90621208775d1391ba0e84c4cd66b399b129b3c",
    "patch": "@@ -38,9 +38,8 @@ public Response submitFeedback(JsonObject jsonObject) throws AddressException {\n         String userEmail = jsonObject.getString(\"fromEmail\");\n         String messageSubject = jsonObject.getString(\"subject\");\n         String baseUrl = systemConfig.getDataverseSiteUrl();\n-        String rootDataverseName = dataverseSvc.findRootDataverse().getName();\n-        String installationBrandName = BrandingUtil.getInstallationBrandName(rootDataverseName);\n-        String supportTeamName = BrandingUtil.getSupportTeamName(systemAddress, rootDataverseName);\n+        String installationBrandName = BrandingUtil.getInstallationBrandName();\n+        String supportTeamName = BrandingUtil.getSupportTeamName(systemAddress);\n         JsonArrayBuilder jab = Json.createArrayBuilder();\n         List<Feedback> feedbacks = FeedbackUtil.gatherFeedback(recipient, dataverseSession, messageSubject, userMessage, systemAddress, userEmail, baseUrl, installationBrandName, supportTeamName);\n         feedbacks.forEach((feedback) -> {"
  },
  {
    "sha": "334c89552a389a43b8adaaf9f82af752f774eb04",
    "filename": "src/main/java/edu/harvard/iq/dataverse/api/Files.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/IQSS/dataverse/blob/b90621208775d1391ba0e84c4cd66b399b129b3c/src/main/java/edu/harvard/iq/dataverse/api/Files.java",
    "raw_url": "https://github.com/IQSS/dataverse/raw/b90621208775d1391ba0e84c4cd66b399b129b3c/src/main/java/edu/harvard/iq/dataverse/api/Files.java",
    "contents_url": "https://api.github.com/repos/IQSS/dataverse/contents/src/main/java/edu/harvard/iq/dataverse/api/Files.java?ref=b90621208775d1391ba0e84c4cd66b399b129b3c",
    "patch": "@@ -601,7 +601,7 @@ public Response redetectDatafile(@PathParam(\"id\") String id, @QueryParam(\"dryRun\n     private void exportDatasetMetadata(SettingsServiceBean settingsServiceBean, Dataset theDataset) {\n \n         try {\n-            ExportService instance = ExportService.getInstance(settingsServiceBean);\n+            ExportService instance = ExportService.getInstance();\n             instance.exportAllFormats(theDataset);\n \n         } catch (ExportException ex) {"
  },
  {
    "sha": "049b20f605b9d7fc0ade17bb33f6534421e369bb",
    "filename": "src/main/java/edu/harvard/iq/dataverse/api/datadeposit/ServiceDocumentManagerImpl.java",
    "status": "modified",
    "additions": 5,
    "deletions": 6,
    "changes": 11,
    "blob_url": "https://github.com/IQSS/dataverse/blob/b90621208775d1391ba0e84c4cd66b399b129b3c/src/main/java/edu/harvard/iq/dataverse/api/datadeposit/ServiceDocumentManagerImpl.java",
    "raw_url": "https://github.com/IQSS/dataverse/raw/b90621208775d1391ba0e84c4cd66b399b129b3c/src/main/java/edu/harvard/iq/dataverse/api/datadeposit/ServiceDocumentManagerImpl.java",
    "contents_url": "https://api.github.com/repos/IQSS/dataverse/contents/src/main/java/edu/harvard/iq/dataverse/api/datadeposit/ServiceDocumentManagerImpl.java?ref=b90621208775d1391ba0e84c4cd66b399b129b3c",
    "patch": "@@ -10,6 +10,8 @@\n import java.util.logging.Logger;\n import javax.ejb.EJB;\n import javax.inject.Inject;\n+\n+import org.apache.commons.lang3.StringUtils;\n import org.swordapp.server.AuthCredentials;\n import org.swordapp.server.ServiceDocument;\n import org.swordapp.server.ServiceDocumentManager;\n@@ -43,12 +45,9 @@ public ServiceDocument getServiceDocument(String sdUri, AuthCredentials authCred\n         String warning = urlManager.processUrl(sdUri);\n         ServiceDocument service = new ServiceDocument();\n         SwordWorkspace swordWorkspace = new SwordWorkspace();\n-        Dataverse rootDataverse = dataverseService.findRootDataverse();\n-        if (rootDataverse != null) {\n-            String name = rootDataverse.getName();\n-            if (name != null) {\n-                swordWorkspace.setTitle(name);\n-            }\n+        String name = dataverseService.getRootDataverseName();\n+        if (!StringUtils.isEmpty(name)) {\n+            swordWorkspace.setTitle(name);\n         }\n         if (warning != null) {\n             swordWorkspace.getWrappedWorkspace().setAttributeValue(\"warning\", warning);"
  },
  {
    "sha": "50661ee97fc04165c8b41a1c195362197fd5d9a4",
    "filename": "src/main/java/edu/harvard/iq/dataverse/branding/BrandingUtil.java",
    "status": "modified",
    "additions": 31,
    "deletions": 5,
    "changes": 36,
    "blob_url": "https://github.com/IQSS/dataverse/blob/b90621208775d1391ba0e84c4cd66b399b129b3c/src/main/java/edu/harvard/iq/dataverse/branding/BrandingUtil.java",
    "raw_url": "https://github.com/IQSS/dataverse/raw/b90621208775d1391ba0e84c4cd66b399b129b3c/src/main/java/edu/harvard/iq/dataverse/branding/BrandingUtil.java",
    "contents_url": "https://api.github.com/repos/IQSS/dataverse/contents/src/main/java/edu/harvard/iq/dataverse/branding/BrandingUtil.java?ref=b90621208775d1391ba0e84c4cd66b399b129b3c",
    "patch": "@@ -1,22 +1,44 @@\n package edu.harvard.iq.dataverse.branding;\n \n+import edu.harvard.iq.dataverse.DataverseServiceBean;\n+import edu.harvard.iq.dataverse.settings.SettingsServiceBean;\n import edu.harvard.iq.dataverse.util.BundleUtil;\n import java.util.Arrays;\n+import java.util.logging.Logger;\n+\n import javax.mail.internet.InternetAddress;\n \n public class BrandingUtil {\n \n-    public static String getInstallationBrandName(String rootDataverseName) {\n-        return rootDataverseName;\n+    private static final Logger logger = Logger.getLogger(BrandingUtil.class.getCanonicalName());\n+    \n+    private static DataverseServiceBean dataverseService;\n+    private static SettingsServiceBean settingsService;\n+\n+    public static String getInstallationBrandName() {\n+        \n+        String brandName = settingsService.getValueForKey(SettingsServiceBean.Key.InstallationName);\n+        //Separate if statement simplifies test setup, otherwise could use the getValueForKey method with a default param\n+        if(brandName==null) {\n+            brandName = dataverseService.getRootDataverseName();\n+        }\n+        return brandName;\n+    }\n+\n+    // Convenience to access root name without injecting dataverseService (e.g. in\n+    // DatasetVersion)\n+    public static String getRootDataverseCollectionName() {\n+        return dataverseService.getRootDataverseName();\n     }\n \n-    public static String getSupportTeamName(InternetAddress systemAddress, String rootDataverseName) {\n+    public static String getSupportTeamName(InternetAddress systemAddress) {\n         if (systemAddress != null) {\n             String personalName = systemAddress.getPersonal();\n             if (personalName != null) {\n                 return personalName;\n             }\n         }\n+        String rootDataverseName=dataverseService.getRootDataverseName();\n         if (rootDataverseName != null && !rootDataverseName.isEmpty()) {\n             return rootDataverseName + \" \" + BundleUtil.getStringFromBundle(\"contact.support\");\n         }\n@@ -31,8 +53,12 @@ public static String getSupportTeamEmailAddress(InternetAddress systemAddress) {\n         return systemAddress.getAddress();\n     }\n \n-    public static String getContactHeader(InternetAddress systemAddress, String rootDataverseName) {\n-        return BundleUtil.getStringFromBundle(\"contact.header\", Arrays.asList(getSupportTeamName(systemAddress, rootDataverseName)));\n+    public static String getContactHeader(InternetAddress systemAddress) {\n+        return BundleUtil.getStringFromBundle(\"contact.header\", Arrays.asList(getSupportTeamName(systemAddress)));\n     }\n \n+    public static void injectServices(DataverseServiceBean dataverseSvc, SettingsServiceBean settingsSvc) {\n+        dataverseService = dataverseSvc;\n+        settingsService = settingsSvc;\n+    }\n }"
  },
  {
    "sha": "d0184f82c78cf9ee3b4739c1c3da3b74343b8a1e",
    "filename": "src/main/java/edu/harvard/iq/dataverse/branding/BrandingUtilHelper.java",
    "status": "added",
    "additions": 28,
    "deletions": 0,
    "changes": 28,
    "blob_url": "https://github.com/IQSS/dataverse/blob/b90621208775d1391ba0e84c4cd66b399b129b3c/src/main/java/edu/harvard/iq/dataverse/branding/BrandingUtilHelper.java",
    "raw_url": "https://github.com/IQSS/dataverse/raw/b90621208775d1391ba0e84c4cd66b399b129b3c/src/main/java/edu/harvard/iq/dataverse/branding/BrandingUtilHelper.java",
    "contents_url": "https://api.github.com/repos/IQSS/dataverse/contents/src/main/java/edu/harvard/iq/dataverse/branding/BrandingUtilHelper.java?ref=b90621208775d1391ba0e84c4cd66b399b129b3c",
    "patch": "@@ -0,0 +1,28 @@\n+package edu.harvard.iq.dataverse.branding;\r\n+\r\n+import javax.annotation.PostConstruct;\r\n+import javax.ejb.EJB;\r\n+import javax.ejb.Singleton;\r\n+import javax.ejb.Startup;\r\n+\r\n+import edu.harvard.iq.dataverse.DataverseServiceBean;\r\n+import edu.harvard.iq.dataverse.settings.SettingsServiceBean;\r\n+\r\n+    /**\r\n+     * This is a small helper bean \r\n+     * As it is a singleton and built at application start (=deployment), it will inject the (stateless)\r\n+     * dataverse service into the BrandingUtil once it's ready.\r\n+     */\r\n+    @Singleton\r\n+    @Startup\r\n+    public class BrandingUtilHelper {\r\n+\r\n+        @EJB\r\n+        DataverseServiceBean dataverseSvc;\r\n+        @EJB SettingsServiceBean settingsSvc;\r\n+        \r\n+        @PostConstruct\r\n+        public void injectService() {\r\n+            BrandingUtil.injectServices(dataverseSvc, settingsSvc);\r\n+        }\r\n+    }\r"
  },
  {
    "sha": "913c666fbe53423781939534e6ebdab114d28a28",
    "filename": "src/main/java/edu/harvard/iq/dataverse/confirmemail/ConfirmEmailServiceBean.java",
    "status": "modified",
    "additions": 8,
    "deletions": 14,
    "changes": 22,
    "blob_url": "https://github.com/IQSS/dataverse/blob/b90621208775d1391ba0e84c4cd66b399b129b3c/src/main/java/edu/harvard/iq/dataverse/confirmemail/ConfirmEmailServiceBean.java",
    "raw_url": "https://github.com/IQSS/dataverse/raw/b90621208775d1391ba0e84c4cd66b399b129b3c/src/main/java/edu/harvard/iq/dataverse/confirmemail/ConfirmEmailServiceBean.java",
    "contents_url": "https://api.github.com/repos/IQSS/dataverse/contents/src/main/java/edu/harvard/iq/dataverse/confirmemail/ConfirmEmailServiceBean.java?ref=b90621208775d1391ba0e84c4cd66b399b129b3c",
    "patch": "@@ -121,20 +121,14 @@ private void sendLinkOnEmailChange(AuthenticatedUser aUser, String confirmationU\n \n         try {\n             String toAddress = aUser.getEmail();\n-            try {\n-                Dataverse rootDataverse = dataverseService.findRootDataverse();\n-                if (rootDataverse != null) {\n-                    String rootDataverseName = rootDataverse.getName();\n-                    // FIXME: consider refactoring this into MailServiceBean.sendNotificationEmail. CONFIRMEMAIL may be the only type where we don't want an in-app notification.\n-                    UserNotification userNotification = new UserNotification();\n-                    userNotification.setType(UserNotification.Type.CONFIRMEMAIL);\n-                    String subject = MailUtil.getSubjectTextBasedOnNotification(userNotification, rootDataverseName, null);\n-                    logger.fine(\"sending email to \" + toAddress + \" with this subject: \" + subject);\n-                    mailService.sendSystemEmail(toAddress, subject, messageBody);\n-                }\n-            } catch (Exception e) {\n-                logger.info(\"The root dataverse is not present. Don't send a notification to dataverseAdmin.\");\n-            }\n+\n+            // FIXME: consider refactoring this into MailServiceBean.sendNotificationEmail.\n+            // CONFIRMEMAIL may be the only type where we don't want an in-app notification.\n+            UserNotification userNotification = new UserNotification();\n+            userNotification.setType(UserNotification.Type.CONFIRMEMAIL);\n+            String subject = MailUtil.getSubjectTextBasedOnNotification(userNotification, null);\n+            logger.fine(\"sending email to \" + toAddress + \" with this subject: \" + subject);\n+            mailService.sendSystemEmail(toAddress, subject, messageBody);\n         } catch (Exception ex) {\n             /**\n              * @todo get more specific about the exception that's thrown when"
  },
  {
    "sha": "3dcbe98a1616ecf784a669c881eb517dfed3d249",
    "filename": "src/main/java/edu/harvard/iq/dataverse/engine/command/impl/CuratePublishedDatasetVersionCommand.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/IQSS/dataverse/blob/b90621208775d1391ba0e84c4cd66b399b129b3c/src/main/java/edu/harvard/iq/dataverse/engine/command/impl/CuratePublishedDatasetVersionCommand.java",
    "raw_url": "https://github.com/IQSS/dataverse/raw/b90621208775d1391ba0e84c4cd66b399b129b3c/src/main/java/edu/harvard/iq/dataverse/engine/command/impl/CuratePublishedDatasetVersionCommand.java",
    "contents_url": "https://api.github.com/repos/IQSS/dataverse/contents/src/main/java/edu/harvard/iq/dataverse/engine/command/impl/CuratePublishedDatasetVersionCommand.java?ref=b90621208775d1391ba0e84c4cd66b399b129b3c",
    "patch": "@@ -184,7 +184,7 @@ public Dataset execute(CommandContext ctxt) throws CommandException {\n         \n         //And the exported metadata files\n         try {\n-            ExportService instance = ExportService.getInstance(ctxt.settings());\n+            ExportService instance = ExportService.getInstance();\n             instance.exportAllFormats(getDataset());\n         } catch (ExportException ex) {\n             // Just like with indexing, a failure to export is not a fatal condition."
  },
  {
    "sha": "391e798e285d475837cd14c0b597a76dbe04b3cf",
    "filename": "src/main/java/edu/harvard/iq/dataverse/engine/command/impl/DeaccessionDatasetVersionCommand.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/IQSS/dataverse/blob/b90621208775d1391ba0e84c4cd66b399b129b3c/src/main/java/edu/harvard/iq/dataverse/engine/command/impl/DeaccessionDatasetVersionCommand.java",
    "raw_url": "https://github.com/IQSS/dataverse/raw/b90621208775d1391ba0e84c4cd66b399b129b3c/src/main/java/edu/harvard/iq/dataverse/engine/command/impl/DeaccessionDatasetVersionCommand.java",
    "contents_url": "https://api.github.com/repos/IQSS/dataverse/contents/src/main/java/edu/harvard/iq/dataverse/engine/command/impl/DeaccessionDatasetVersionCommand.java?ref=b90621208775d1391ba0e84c4cd66b399b129b3c",
    "patch": "@@ -75,7 +75,7 @@ public DatasetVersion execute(CommandContext ctxt) throws CommandException {\n         boolean doNormalSolrDocCleanUp = true;\n \n         \n-        ExportService instance = ExportService.getInstance(ctxt.settings());\n+        ExportService instance = ExportService.getInstance();\n         \n \n         if (managed.getDataset().getReleasedVersion() != null) {"
  },
  {
    "sha": "ef45598f356a2a75d534322289fd17ffc8bc3da5",
    "filename": "src/main/java/edu/harvard/iq/dataverse/engine/command/impl/FinalizeDatasetPublicationCommand.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/IQSS/dataverse/blob/b90621208775d1391ba0e84c4cd66b399b129b3c/src/main/java/edu/harvard/iq/dataverse/engine/command/impl/FinalizeDatasetPublicationCommand.java",
    "raw_url": "https://github.com/IQSS/dataverse/raw/b90621208775d1391ba0e84c4cd66b399b129b3c/src/main/java/edu/harvard/iq/dataverse/engine/command/impl/FinalizeDatasetPublicationCommand.java",
    "contents_url": "https://api.github.com/repos/IQSS/dataverse/contents/src/main/java/edu/harvard/iq/dataverse/engine/command/impl/FinalizeDatasetPublicationCommand.java?ref=b90621208775d1391ba0e84c4cd66b399b129b3c",
    "patch": "@@ -246,7 +246,7 @@ public boolean onSuccess(CommandContext ctxt, Object r) {\n             }\n         }\n \n-        exportMetadata(dataset, ctxt.settings());\n+        exportMetadata(dataset);\n                 \n         ctxt.datasets().updateLastExportTimeStamp(dataset.getId());\n \n@@ -257,10 +257,10 @@ public boolean onSuccess(CommandContext ctxt, Object r) {\n      * Attempting to run metadata export, for all the formats for which we have\n      * metadata Exporters.\n      */\n-    private void exportMetadata(Dataset dataset, SettingsServiceBean settingsServiceBean) {\n+    private void exportMetadata(Dataset dataset) {\n \n         try {\n-            ExportService instance = ExportService.getInstance(settingsServiceBean);\n+            ExportService instance = ExportService.getInstance();\n             instance.exportAllFormats(dataset);\n \n         } catch (Exception ex) {"
  },
  {
    "sha": "8eeca0cb4cdf9d854fc816ccde6d46610dd6de19",
    "filename": "src/main/java/edu/harvard/iq/dataverse/engine/command/impl/RedetectFileTypeCommand.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/IQSS/dataverse/blob/b90621208775d1391ba0e84c4cd66b399b129b3c/src/main/java/edu/harvard/iq/dataverse/engine/command/impl/RedetectFileTypeCommand.java",
    "raw_url": "https://github.com/IQSS/dataverse/raw/b90621208775d1391ba0e84c4cd66b399b129b3c/src/main/java/edu/harvard/iq/dataverse/engine/command/impl/RedetectFileTypeCommand.java",
    "contents_url": "https://api.github.com/repos/IQSS/dataverse/contents/src/main/java/edu/harvard/iq/dataverse/engine/command/impl/RedetectFileTypeCommand.java?ref=b90621208775d1391ba0e84c4cd66b399b129b3c",
    "patch": "@@ -89,7 +89,7 @@ public DataFile execute(CommandContext ctxt) throws CommandException {\n                 logger.info(\"Exception while reindexing files during file type redetection: \" + ex.getLocalizedMessage());\n             }\n             try {\n-                ExportService instance = ExportService.getInstance(ctxt.settings());\n+                ExportService instance = ExportService.getInstance();\n                 instance.exportAllFormats(dataset);\n             } catch (ExportException ex) {\n                 // Just like with indexing, a failure to export is not a fatal condition."
  },
  {
    "sha": "52de3cf1d78e45e0bca58681122a4bec5570d06e",
    "filename": "src/main/java/edu/harvard/iq/dataverse/export/ExportService.java",
    "status": "modified",
    "additions": 1,
    "deletions": 17,
    "changes": 18,
    "blob_url": "https://github.com/IQSS/dataverse/blob/b90621208775d1391ba0e84c4cd66b399b129b3c/src/main/java/edu/harvard/iq/dataverse/export/ExportService.java",
    "raw_url": "https://github.com/IQSS/dataverse/raw/b90621208775d1391ba0e84c4cd66b399b129b3c/src/main/java/edu/harvard/iq/dataverse/export/ExportService.java",
    "contents_url": "https://api.github.com/repos/IQSS/dataverse/contents/src/main/java/edu/harvard/iq/dataverse/export/ExportService.java?ref=b90621208775d1391ba0e84c4cd66b399b129b3c",
    "patch": "@@ -45,28 +45,12 @@\n \n     private static ExportService service;\n     private ServiceLoader<Exporter> loader;\n-    static SettingsServiceBean settingsService;\n \n     private ExportService() {\n         loader = ServiceLoader.load(Exporter.class);\n     }\n \n-    /**\n-     * @deprecated Use `getInstance(SettingsServiceBean settingsService)`\n-     * instead. For privacy reasons, we need to pass in settingsService so that\n-     * we can make a decision whether not not to exclude email addresses. No new\n-     * code should call this method and it would be nice to remove calls from\n-     * existing code.\n-     */\n-    @Deprecated\n     public static synchronized ExportService getInstance() {\n-        return getInstance(null);\n-    }\n-\n-    public static synchronized ExportService getInstance(SettingsServiceBean settingsService) {\n-        ExportService.settingsService = settingsService;\n-        // We pass settingsService into the JsonPrinter so it can check the :ExcludeEmailFromExport setting in calls to JsonPrinter.jsonAsDatasetDto().\n-        JsonPrinter.setSettingsService(settingsService);\n         if (service == null) {\n             service = new ExportService();\n         }\n@@ -75,7 +59,7 @@ public static synchronized ExportService getInstance(SettingsServiceBean setting\n \n     public List< String[]> getExportersLabels() {\n         List<String[]> retList = new ArrayList<>();\n-        Iterator<Exporter> exporters = ExportService.getInstance(null).loader.iterator();\n+        Iterator<Exporter> exporters = ExportService.getInstance().loader.iterator();\n         while (exporters.hasNext()) {\n             Exporter e = exporters.next();\n             String[] temp = new String[2];"
  },
  {
    "sha": "367ac4bbc5ba5dc771287cd8cf2ddb64e1c4ef19",
    "filename": "src/main/java/edu/harvard/iq/dataverse/export/HtmlCodeBookExporter.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/IQSS/dataverse/blob/b90621208775d1391ba0e84c4cd66b399b129b3c/src/main/java/edu/harvard/iq/dataverse/export/HtmlCodeBookExporter.java",
    "raw_url": "https://github.com/IQSS/dataverse/raw/b90621208775d1391ba0e84c4cd66b399b129b3c/src/main/java/edu/harvard/iq/dataverse/export/HtmlCodeBookExporter.java",
    "contents_url": "https://api.github.com/repos/IQSS/dataverse/contents/src/main/java/edu/harvard/iq/dataverse/export/HtmlCodeBookExporter.java?ref=b90621208775d1391ba0e84c4cd66b399b129b3c",
    "patch": "@@ -35,7 +35,7 @@ public void exportDataset(DatasetVersion version, JsonObject json, OutputStream\n         try {\n             InputStream ddiInputStream;\n             try {\n-                ddiInputStream = ExportService.getInstance(ExportService.settingsService).getExport(version.getDataset(), \"ddi\");\n+                ddiInputStream = ExportService.getInstance().getExport(version.getDataset(), \"ddi\");\n             } catch(ExportException | IOException e) {\n                 throw new ExportException (\"Cannot open export_ddi cached file\");\n             }"
  },
  {
    "sha": "87adc1b4c5bb2b1da2f1440a429f439730b34c40",
    "filename": "src/main/java/edu/harvard/iq/dataverse/export/OAI_OREExporter.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/IQSS/dataverse/blob/b90621208775d1391ba0e84c4cd66b399b129b3c/src/main/java/edu/harvard/iq/dataverse/export/OAI_OREExporter.java",
    "raw_url": "https://github.com/IQSS/dataverse/raw/b90621208775d1391ba0e84c4cd66b399b129b3c/src/main/java/edu/harvard/iq/dataverse/export/OAI_OREExporter.java",
    "contents_url": "https://api.github.com/repos/IQSS/dataverse/contents/src/main/java/edu/harvard/iq/dataverse/export/OAI_OREExporter.java?ref=b90621208775d1391ba0e84c4cd66b399b129b3c",
    "patch": "@@ -25,7 +25,7 @@\n     public void exportDataset(DatasetVersion version, JsonObject json, OutputStream outputStream)\n             throws ExportException {\n         try {\n-            new OREMap(version, ExportService.settingsService.isTrueForKey(SettingsServiceBean.Key.ExcludeEmailFromExport, false)).writeOREMap(outputStream);\n+            new OREMap(version).writeOREMap(outputStream);\n         } catch (Exception e) {\n             logger.severe(e.getMessage());\n             e.printStackTrace();"
  },
  {
    "sha": "4a7765c097967629f2253f38513e9610e359bdaa",
    "filename": "src/main/java/edu/harvard/iq/dataverse/export/ddi/DdiExportUtil.java",
    "status": "modified",
    "additions": 17,
    "deletions": 2,
    "changes": 19,
    "blob_url": "https://github.com/IQSS/dataverse/blob/b90621208775d1391ba0e84c4cd66b399b129b3c/src/main/java/edu/harvard/iq/dataverse/export/ddi/DdiExportUtil.java",
    "raw_url": "https://github.com/IQSS/dataverse/raw/b90621208775d1391ba0e84c4cd66b399b129b3c/src/main/java/edu/harvard/iq/dataverse/export/ddi/DdiExportUtil.java",
    "contents_url": "https://api.github.com/repos/IQSS/dataverse/contents/src/main/java/edu/harvard/iq/dataverse/export/ddi/DdiExportUtil.java?ref=b90621208775d1391ba0e84c4cd66b399b129b3c",
    "patch": "@@ -55,6 +55,8 @@\n import org.xml.sax.SAXException;\n import org.xml.sax.SAXParseException;\n import org.w3c.dom.Document;\n+import org.apache.commons.lang3.StringUtils;\n+import org.eclipse.microprofile.config.ConfigProvider;\n import org.w3c.dom.DOMException;\n \n // For write operation\n@@ -195,7 +197,19 @@ private static void createStdyDscr(XMLStreamWriter xmlw, DatasetDTO datasetDto)\n         writeProducersElement(xmlw, version);\n         \n         xmlw.writeStartElement(\"distStmt\");\n-        if (datasetDto.getPublisher() != null && !datasetDto.getPublisher().equals(\"\")) {\n+      //The default is to add Dataverse Repository as a distributor. The excludeinstallationifset setting turns that off if there is a distributor defined in the metadata\n+        boolean distributorSet=false;\n+        MetadataBlockDTO citationDTO= version.getMetadataBlocks().get(\"citation\");\n+        if(citationDTO!=null) {\n+            if(citationDTO.getField(DatasetFieldConstant.distributor)!=null) {\n+                distributorSet=true;\n+            }\n+        }\n+        logger.info(\"Dsitr set?: \" + distributorSet);\n+        logger.info(\"Pub?: \" + datasetDto.getPublisher());\n+        boolean excludeRepository = ConfigProvider.getConfig().getOptionalValue(\"dataverse.export.distributor.excludeinstallationifset\", Boolean.class).orElse(false);\n+        logger.info(\"Exclude: \" + excludeRepository);\n+        if (!StringUtils.isEmpty(datasetDto.getPublisher()) && !(excludeRepository && distributorSet)) {\n             xmlw.writeStartElement(\"distrbtr\");\n             writeAttribute(xmlw, \"source\", \"archive\");\n             xmlw.writeCharacters(datasetDto.getPublisher());\n@@ -308,7 +322,8 @@ private static void writeDocDescElement (XMLStreamWriter xmlw, DatasetDTO datase\n         xmlw.writeEndElement(); // IDNo\n         xmlw.writeEndElement(); // titlStmt\n         xmlw.writeStartElement(\"distStmt\");\n-        if (datasetDto.getPublisher() != null && !datasetDto.getPublisher().equals(\"\")) {\n+        //The doc is always published by the Dataverse Repository\n+        if (!StringUtils.isEmpty(datasetDto.getPublisher())) {\n             xmlw.writeStartElement(\"distrbtr\");\n             writeAttribute(xmlw, \"source\", \"archive\");\n             xmlw.writeCharacters(datasetDto.getPublisher());"
  },
  {
    "sha": "02e7675a7760c8cfd7c09c8d3e42bc5323dfabd6",
    "filename": "src/main/java/edu/harvard/iq/dataverse/harvest/server/OAIRecordServiceBean.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/IQSS/dataverse/blob/b90621208775d1391ba0e84c4cd66b399b129b3c/src/main/java/edu/harvard/iq/dataverse/harvest/server/OAIRecordServiceBean.java",
    "raw_url": "https://github.com/IQSS/dataverse/raw/b90621208775d1391ba0e84c4cd66b399b129b3c/src/main/java/edu/harvard/iq/dataverse/harvest/server/OAIRecordServiceBean.java",
    "contents_url": "https://api.github.com/repos/IQSS/dataverse/contents/src/main/java/edu/harvard/iq/dataverse/harvest/server/OAIRecordServiceBean.java?ref=b90621208775d1391ba0e84c4cd66b399b129b3c",
    "patch": "@@ -229,7 +229,7 @@ public void markOaiRecordsAsRemoved(Collection<OAIRecord> records, Date updateTi\n     \n     public void exportAllFormats(Dataset dataset) {\n         try {\n-            ExportService exportServiceInstance = ExportService.getInstance(settingsService);\n+            ExportService exportServiceInstance = ExportService.getInstance();\n             logger.log(Level.FINE, \"Attempting to run export on dataset {0}\", dataset.getGlobalId());\n             exportServiceInstance.exportAllFormats(dataset);\n             datasetService.updateLastExportTimeStamp(dataset.getId());\n@@ -240,7 +240,7 @@ public void exportAllFormats(Dataset dataset) {\n     @TransactionAttribute(REQUIRES_NEW)\n     public void exportAllFormatsInNewTransaction(Dataset dataset) throws ExportException {\n         try {\n-            ExportService exportServiceInstance = ExportService.getInstance(settingsService);\n+            ExportService exportServiceInstance = ExportService.getInstance();\n             exportServiceInstance.exportAllFormats(dataset);\n             datasetService.updateLastExportTimeStamp(dataset.getId());\n         } catch (Exception e) {"
  },
  {
    "sha": "5d4c02a87e230f05f6ddbabc017efeff7a172e5b",
    "filename": "src/main/java/edu/harvard/iq/dataverse/harvest/server/web/servlet/OAIServlet.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/IQSS/dataverse/blob/b90621208775d1391ba0e84c4cd66b399b129b3c/src/main/java/edu/harvard/iq/dataverse/harvest/server/web/servlet/OAIServlet.java",
    "raw_url": "https://github.com/IQSS/dataverse/raw/b90621208775d1391ba0e84c4cd66b399b129b3c/src/main/java/edu/harvard/iq/dataverse/harvest/server/web/servlet/OAIServlet.java",
    "contents_url": "https://api.github.com/repos/IQSS/dataverse/contents/src/main/java/edu/harvard/iq/dataverse/harvest/server/web/servlet/OAIServlet.java?ref=b90621208775d1391ba0e84c4cd66b399b129b3c",
    "patch": "@@ -132,11 +132,11 @@ private Context createContext() {\n     }\n     \n     private void addSupportedMetadataFormats(Context context) {\n-        for (String[] provider : ExportService.getInstance(settingsService).getExportersLabels()) {\n+        for (String[] provider : ExportService.getInstance().getExportersLabels()) {\n             String formatName = provider[1];\n             Exporter exporter;\n             try {\n-                exporter = ExportService.getInstance(settingsService).getExporter(formatName);\n+                exporter = ExportService.getInstance().getExporter(formatName);\n             } catch (ExportException ex) {\n                 exporter = null;\n             }\n@@ -177,7 +177,7 @@ private RepositoryConfiguration createRepositoryConfiguration() {\n         // some of the settings below - such as the max list numbers - \n         // need to be configurable!\n         \n-        String dataverseName = dataverseService.findRootDataverse().getName();\n+        String dataverseName = dataverseService.getRootDataverseName();\n         String repositoryName = StringUtils.isEmpty(dataverseName) || \"Root\".equals(dataverseName) ? \"Test Dataverse OAI Archive\" : dataverseName + \" Dataverse OAI Archive\";\n         InternetAddress internetAddress = MailUtil.parseSystemAddress(settingsService.getValueForKey(SettingsServiceBean.Key.SystemEmail));\n "
  }
]
