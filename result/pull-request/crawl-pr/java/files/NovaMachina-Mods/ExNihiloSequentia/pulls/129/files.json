[
  {
    "sha": "eaa67be7cdf4cedcabb87362a766e70c8328e58f",
    "filename": "src/main/java/novamachina/exnihilosequentia/client/render/BarrelRender.java",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/NovaMachina-Mods/ExNihiloSequentia/blob/f788f92c097016ff9be1e7e9a5dfba952336ac79/src/main/java/novamachina/exnihilosequentia/client/render/BarrelRender.java",
    "raw_url": "https://github.com/NovaMachina-Mods/ExNihiloSequentia/raw/f788f92c097016ff9be1e7e9a5dfba952336ac79/src/main/java/novamachina/exnihilosequentia/client/render/BarrelRender.java",
    "contents_url": "https://api.github.com/repos/NovaMachina-Mods/ExNihiloSequentia/contents/src/main/java/novamachina/exnihilosequentia/client/render/BarrelRender.java?ref=f788f92c097016ff9be1e7e9a5dfba952336ac79",
    "patch": "@@ -15,6 +15,7 @@\n import novamachina.exnihilosequentia.common.init.ExNihiloTiles;\n import novamachina.exnihilosequentia.common.tileentity.barrel.AbstractBarrelTile;\n import novamachina.exnihilosequentia.common.utility.Color;\n+import novamachina.exnihilosequentia.common.utility.ExNihiloConstants;\n import novamachina.exnihilosequentia.common.utility.ExNihiloLogger;\n import org.apache.logging.log4j.LogManager;\n "
  },
  {
    "sha": "dd1ee7f3b80c123066c66d086c7b2ae8582e9602",
    "filename": "src/main/java/novamachina/exnihilosequentia/client/render/CrucibleRender.java",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/NovaMachina-Mods/ExNihiloSequentia/blob/f788f92c097016ff9be1e7e9a5dfba952336ac79/src/main/java/novamachina/exnihilosequentia/client/render/CrucibleRender.java",
    "raw_url": "https://github.com/NovaMachina-Mods/ExNihiloSequentia/raw/f788f92c097016ff9be1e7e9a5dfba952336ac79/src/main/java/novamachina/exnihilosequentia/client/render/CrucibleRender.java",
    "contents_url": "https://api.github.com/repos/NovaMachina-Mods/ExNihiloSequentia/contents/src/main/java/novamachina/exnihilosequentia/client/render/CrucibleRender.java?ref=f788f92c097016ff9be1e7e9a5dfba952336ac79",
    "patch": "@@ -26,8 +26,7 @@ public CrucibleRender(TileEntityRendererDispatcher rendererDispatcher) {\n \n     public static void register(TileEntityType<? extends BaseCrucibleTile> tileTileEntityType) {\n         logger.debug(\"Register crucible renderer, Type\" + tileTileEntityType);\n-        ClientRegistry\n-                .bindTileEntityRenderer(tileTileEntityType, CrucibleRender::new);\n+        ClientRegistry.bindTileEntityRenderer(tileTileEntityType, CrucibleRender::new);\n     }\n \n     @Override"
  },
  {
    "sha": "31ac4cb2bfaf7b672be4c83198c3d9eb3264e654",
    "filename": "src/main/java/novamachina/exnihilosequentia/client/render/SieveRender.java",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/NovaMachina-Mods/ExNihiloSequentia/blob/f788f92c097016ff9be1e7e9a5dfba952336ac79/src/main/java/novamachina/exnihilosequentia/client/render/SieveRender.java",
    "raw_url": "https://github.com/NovaMachina-Mods/ExNihiloSequentia/raw/f788f92c097016ff9be1e7e9a5dfba952336ac79/src/main/java/novamachina/exnihilosequentia/client/render/SieveRender.java",
    "contents_url": "https://api.github.com/repos/NovaMachina-Mods/ExNihiloSequentia/contents/src/main/java/novamachina/exnihilosequentia/client/render/SieveRender.java?ref=f788f92c097016ff9be1e7e9a5dfba952336ac79",
    "patch": "@@ -19,8 +19,7 @@\n public class SieveRender extends AbstractModBlockRenderer<SieveTile> {\n     private static final ExNihiloLogger logger = new ExNihiloLogger(LogManager.getLogger());\n \n-    public SieveRender(\n-            TileEntityRendererDispatcher rendererDispatcherIn) {\n+    public SieveRender(TileEntityRendererDispatcher rendererDispatcherIn) {\n         super(rendererDispatcherIn);\n     }\n "
  },
  {
    "sha": "5147690ea5be8e8a5e18734fa534ff3823c599e9",
    "filename": "src/main/java/novamachina/exnihilosequentia/client/setup/ClientSetup.java",
    "status": "modified",
    "additions": 39,
    "deletions": 1,
    "changes": 40,
    "blob_url": "https://github.com/NovaMachina-Mods/ExNihiloSequentia/blob/f788f92c097016ff9be1e7e9a5dfba952336ac79/src/main/java/novamachina/exnihilosequentia/client/setup/ClientSetup.java",
    "raw_url": "https://github.com/NovaMachina-Mods/ExNihiloSequentia/raw/f788f92c097016ff9be1e7e9a5dfba952336ac79/src/main/java/novamachina/exnihilosequentia/client/setup/ClientSetup.java",
    "contents_url": "https://api.github.com/repos/NovaMachina-Mods/ExNihiloSequentia/contents/src/main/java/novamachina/exnihilosequentia/client/setup/ClientSetup.java?ref=f788f92c097016ff9be1e7e9a5dfba952336ac79",
    "patch": "@@ -29,11 +29,49 @@ private ClientSetup() {\n     public static void init(final FMLClientSetupEvent event) {\n         logger.debug(\"Initializing client renderers\");\n \n-        RenderTypeLookup.setRenderLayer(ExNihiloBlocks.SIEVE.get(), RenderType.getCutoutMipped());\n+        RenderTypeLookup.setRenderLayer(ExNihiloBlocks.SIEVE_ACACIA.get(), RenderType.getCutoutMipped());\n+        RenderTypeLookup.setRenderLayer(ExNihiloBlocks.SIEVE_BIRCH.get(), RenderType.getCutoutMipped());\n+        RenderTypeLookup.setRenderLayer(ExNihiloBlocks.SIEVE_DARK_OAK.get(), RenderType.getCutoutMipped());\n+        RenderTypeLookup.setRenderLayer(ExNihiloBlocks.SIEVE_JUNGLE.get(), RenderType.getCutoutMipped());\n+        RenderTypeLookup.setRenderLayer(ExNihiloBlocks.SIEVE_SPRUCE.get(), RenderType.getCutoutMipped());\n+        RenderTypeLookup.setRenderLayer(ExNihiloBlocks.SIEVE_WOOD.get(), RenderType.getCutoutMipped());\n+        RenderTypeLookup.setRenderLayer(ExNihiloBlocks.SIEVE_CRIMSON.get(), RenderType.getCutoutMipped());\n+        RenderTypeLookup.setRenderLayer(ExNihiloBlocks.SIEVE_WARPED.get(), RenderType.getCutoutMipped());\n         RenderTypeLookup.setRenderLayer(ExNihiloBlocks.CRUCIBLE_UNFIRED.get(), RenderType.getCutoutMipped());\n         RenderTypeLookup.setRenderLayer(ExNihiloBlocks.CRUCIBLE_FIRED.get(), RenderType.getCutoutMipped());\n+        RenderTypeLookup.setRenderLayer(ExNihiloBlocks.CRUCIBLE_ACACIA.get(), RenderType.getCutoutMipped());\n+        RenderTypeLookup.setRenderLayer(ExNihiloBlocks.CRUCIBLE_BIRCH.get(), RenderType.getCutoutMipped());\n+        RenderTypeLookup.setRenderLayer(ExNihiloBlocks.CRUCIBLE_DARK_OAK.get(), RenderType.getCutoutMipped());\n+        RenderTypeLookup.setRenderLayer(ExNihiloBlocks.CRUCIBLE_JUNGLE.get(), RenderType.getCutoutMipped());\n+        RenderTypeLookup.setRenderLayer(ExNihiloBlocks.CRUCIBLE_SPRUCE.get(), RenderType.getCutoutMipped());\n         RenderTypeLookup.setRenderLayer(ExNihiloBlocks.CRUCIBLE_WOOD.get(), RenderType.getCutoutMipped());\n+        RenderTypeLookup.setRenderLayer(ExNihiloBlocks.CRUCIBLE_CRIMSON.get(), RenderType.getCutoutMipped());\n+        RenderTypeLookup.setRenderLayer(ExNihiloBlocks.CRUCIBLE_WARPED.get(), RenderType.getCutoutMipped());\n+        RenderTypeLookup.setRenderLayer(ExNihiloBlocks.BARREL_ACACIA.get(), RenderType.getCutoutMipped());\n+        RenderTypeLookup.setRenderLayer(ExNihiloBlocks.BARREL_BIRCH.get(), RenderType.getCutoutMipped());\n+        RenderTypeLookup.setRenderLayer(ExNihiloBlocks.BARREL_DARK_OAK.get(), RenderType.getCutoutMipped());\n+        RenderTypeLookup.setRenderLayer(ExNihiloBlocks.BARREL_JUNGLE.get(), RenderType.getCutoutMipped());\n+        RenderTypeLookup.setRenderLayer(ExNihiloBlocks.BARREL_SPRUCE.get(), RenderType.getCutoutMipped());\n         RenderTypeLookup.setRenderLayer(ExNihiloBlocks.BARREL_WOOD.get(), RenderType.getCutoutMipped());\n+        RenderTypeLookup.setRenderLayer(ExNihiloBlocks.BARREL_CRIMSON.get(), RenderType.getCutoutMipped());\n+        RenderTypeLookup.setRenderLayer(ExNihiloBlocks.BARREL_WARPED.get(), RenderType.getCutoutMipped());\n+        RenderTypeLookup.setRenderLayer(ExNihiloBlocks.BARREL_GLASS.get(), RenderType.getTranslucent());\n+        RenderTypeLookup.setRenderLayer(ExNihiloBlocks.BARREL_GLASS_BLACK.get(), RenderType.getTranslucent());\n+        RenderTypeLookup.setRenderLayer(ExNihiloBlocks.BARREL_GLASS_BLUE.get(), RenderType.getTranslucent());\n+        RenderTypeLookup.setRenderLayer(ExNihiloBlocks.BARREL_GLASS_BROWN.get(), RenderType.getTranslucent());\n+        RenderTypeLookup.setRenderLayer(ExNihiloBlocks.BARREL_GLASS_CYAN.get(), RenderType.getTranslucent());\n+        RenderTypeLookup.setRenderLayer(ExNihiloBlocks.BARREL_GLASS_GRAY.get(), RenderType.getTranslucent());\n+        RenderTypeLookup.setRenderLayer(ExNihiloBlocks.BARREL_GLASS_GREEN.get(), RenderType.getTranslucent());\n+        RenderTypeLookup.setRenderLayer(ExNihiloBlocks.BARREL_GLASS_LIGHT_BLUE.get(), RenderType.getTranslucent());\n+        RenderTypeLookup.setRenderLayer(ExNihiloBlocks.BARREL_GLASS_LIGHT_GRAY.get(), RenderType.getTranslucent());\n+        RenderTypeLookup.setRenderLayer(ExNihiloBlocks.BARREL_GLASS_LIME.get(), RenderType.getTranslucent());\n+        RenderTypeLookup.setRenderLayer(ExNihiloBlocks.BARREL_GLASS_MAGENTA.get(), RenderType.getTranslucent());\n+        RenderTypeLookup.setRenderLayer(ExNihiloBlocks.BARREL_GLASS_ORANGE.get(), RenderType.getTranslucent());\n+        RenderTypeLookup.setRenderLayer(ExNihiloBlocks.BARREL_GLASS_PINK.get(), RenderType.getTranslucent());\n+        RenderTypeLookup.setRenderLayer(ExNihiloBlocks.BARREL_GLASS_PURPLE.get(), RenderType.getTranslucent());\n+        RenderTypeLookup.setRenderLayer(ExNihiloBlocks.BARREL_GLASS_RED.get(), RenderType.getTranslucent());\n+        RenderTypeLookup.setRenderLayer(ExNihiloBlocks.BARREL_GLASS_WHITE.get(), RenderType.getTranslucent());\n+        RenderTypeLookup.setRenderLayer(ExNihiloBlocks.BARREL_GLASS_YELLOW.get(), RenderType.getTranslucent());\n         RenderTypeLookup.setRenderLayer(ExNihiloBlocks.INFESTED_LEAVES.get(), RenderType.getCutout());\n         RenderTypeLookup.setRenderLayer(ExNihiloBlocks.INFESTING_LEAVES.get(), RenderType.getCutout());\n "
  },
  {
    "sha": "52ff4457147d48b9307120f70fd06a4cf6c2d478",
    "filename": "src/main/java/novamachina/exnihilosequentia/common/block/BlockSieve.java",
    "status": "modified",
    "additions": 2,
    "deletions": 6,
    "changes": 8,
    "blob_url": "https://github.com/NovaMachina-Mods/ExNihiloSequentia/blob/f788f92c097016ff9be1e7e9a5dfba952336ac79/src/main/java/novamachina/exnihilosequentia/common/block/BlockSieve.java",
    "raw_url": "https://github.com/NovaMachina-Mods/ExNihiloSequentia/raw/f788f92c097016ff9be1e7e9a5dfba952336ac79/src/main/java/novamachina/exnihilosequentia/common/block/BlockSieve.java",
    "contents_url": "https://api.github.com/repos/NovaMachina-Mods/ExNihiloSequentia/contents/src/main/java/novamachina/exnihilosequentia/common/block/BlockSieve.java?ref=f788f92c097016ff9be1e7e9a5dfba952336ac79",
    "patch": "@@ -50,12 +50,8 @@\n     public static final BooleanProperty WATERLOGGED = BlockStateProperties.WATERLOGGED;\n     private static final ExNihiloLogger logger = new ExNihiloLogger(LogManager.getLogger());\n \n-    public BlockSieve() {\n-        super(new BlockBuilder().properties(\n-                AbstractBlock.Properties.create(Material.WOOD).hardnessAndResistance(0.7F)\n-                        .sound(SoundType.WOOD).notSolid().setOpaque((state, reader, pos) -> false)\n-                        .setSuffocates((state, reader, pos) -> false).setBlocksVision((state, reader, pos) -> false))\n-                .harvestLevel(ToolType.AXE, 0).tileEntitySupplier(SieveTile::new));\n+    public BlockSieve(BlockBuilder builder) {\n+        super(builder);\n         this.setDefaultState(this.stateContainer.getBaseState().with(MESH, EnumMesh.NONE).with(WATERLOGGED, false));\n     }\n "
  },
  {
    "sha": "3593ce85e6350bbff71f189303602e01a57f9e48",
    "filename": "src/main/java/novamachina/exnihilosequentia/common/compat/jei/JEIPlugin.java",
    "status": "modified",
    "additions": 67,
    "deletions": 11,
    "changes": 78,
    "blob_url": "https://github.com/NovaMachina-Mods/ExNihiloSequentia/blob/f788f92c097016ff9be1e7e9a5dfba952336ac79/src/main/java/novamachina/exnihilosequentia/common/compat/jei/JEIPlugin.java",
    "raw_url": "https://github.com/NovaMachina-Mods/ExNihiloSequentia/raw/f788f92c097016ff9be1e7e9a5dfba952336ac79/src/main/java/novamachina/exnihilosequentia/common/compat/jei/JEIPlugin.java",
    "contents_url": "https://api.github.com/repos/NovaMachina-Mods/ExNihiloSequentia/contents/src/main/java/novamachina/exnihilosequentia/common/compat/jei/JEIPlugin.java?ref=f788f92c097016ff9be1e7e9a5dfba952336ac79",
    "patch": "@@ -34,17 +34,21 @@\n import novamachina.exnihilosequentia.common.item.tools.crook.EnumCrook;\n import novamachina.exnihilosequentia.common.item.tools.hammer.EnumHammer;\n import novamachina.exnihilosequentia.common.tileentity.crucible.CrucilbeTypeEnum;\n-import novamachina.exnihilosequentia.common.utility.ExNihiloConstants;\n+import novamachina.exnihilosequentia.common.utility.ExNihiloConstants.ModIds;\n+import novamachina.exnihilosequentia.common.utility.ExNihiloConstants.Blocks;\n import novamachina.exnihilosequentia.common.utility.ExNihiloLogger;\n import org.apache.logging.log4j.LogManager;\n \n+import javax.annotation.Nonnull;\n+\n @JeiPlugin\n public class JEIPlugin implements IModPlugin {\n     private static final ExNihiloLogger logger = new ExNihiloLogger(LogManager.getLogger());\n \n+    @Nonnull\n     @Override\n     public ResourceLocation getPluginUid() {\n-        return new ResourceLocation(ExNihiloConstants.ModIds.JEI, ExNihiloConstants.ModIds.EX_NIHILO_SEQUENTIA);\n+        return new ResourceLocation(ModIds.JEI, ModIds.EX_NIHILO_SEQUENTIA);\n     }\n \n     @Override\n@@ -59,13 +63,20 @@ public void registerCategories(IRecipeCategoryRegistration registration) {\n         registration.addRecipeCategories(new FluidTransformCategory(guiHelper));\n         registration.addRecipeCategories(new FluidBlockRecipeCategory(guiHelper));\n         registration.addRecipeCategories(new CompostRecipeCategory(guiHelper));\n-        registration.addRecipeCategories(new CrucibleRecipeCategory(guiHelper, ExNihiloConstants.Blocks.CRUCIBLE_WOOD));\n-        registration.addRecipeCategories(new CrucibleRecipeCategory(guiHelper, ExNihiloConstants.Blocks.CRUCIBLE_FIRED));\n+        registration.addRecipeCategories(new CrucibleRecipeCategory(guiHelper, Blocks.CRUCIBLE_ACACIA));\n+        registration.addRecipeCategories(new CrucibleRecipeCategory(guiHelper, Blocks.CRUCIBLE_BIRCH));\n+        registration.addRecipeCategories(new CrucibleRecipeCategory(guiHelper, Blocks.CRUCIBLE_DARK_OAK));\n+        registration.addRecipeCategories(new CrucibleRecipeCategory(guiHelper, Blocks.CRUCIBLE_JUNGLE));\n+        registration.addRecipeCategories(new CrucibleRecipeCategory(guiHelper, Blocks.CRUCIBLE_SPRUCE));\n+        registration.addRecipeCategories(new CrucibleRecipeCategory(guiHelper, Blocks.CRUCIBLE_OAK));\n+        registration.addRecipeCategories(new CrucibleRecipeCategory(guiHelper, Blocks.CRUCIBLE_WARPED));\n+        registration.addRecipeCategories(new CrucibleRecipeCategory(guiHelper, Blocks.CRUCIBLE_CRIMSON));\n+        registration.addRecipeCategories(new CrucibleRecipeCategory(guiHelper, Blocks.CRUCIBLE_FIRED));\n         registration.addRecipeCategories(new HeatRecipeCategory(guiHelper));\n     }\n \n     @Override\n-    public void registerRecipeCatalysts(IRecipeCatalystRegistration registration) {\n+    public void registerRecipeCatalysts(@Nonnull IRecipeCatalystRegistration registration) {\n         for (EnumCrook crook : EnumCrook.values()) {\n             registration\n                     .addRecipeCatalyst(new ItemStack(crook.getRegistryObject().get()), CrookRecipeCategory.UID);\n@@ -75,15 +86,53 @@ public void registerRecipeCatalysts(IRecipeCatalystRegistration registration) {\n                     .addRecipeCatalyst(new ItemStack(hammer.getRegistryObject().get()), HammerRecipeCategory.UID);\n         }\n \n-        registration.addRecipeCatalyst(new ItemStack(ExNihiloBlocks.SIEVE.get()), DrySieveRecipeCategory.UID, WetSieveRecipeCategory.UID);\n+        registration.addRecipeCatalyst(new ItemStack(ExNihiloBlocks.SIEVE_ACACIA.get()), DrySieveRecipeCategory.UID, WetSieveRecipeCategory.UID);\n+        registration.addRecipeCatalyst(new ItemStack(ExNihiloBlocks.SIEVE_BIRCH.get()), DrySieveRecipeCategory.UID, WetSieveRecipeCategory.UID);\n+        registration.addRecipeCatalyst(new ItemStack(ExNihiloBlocks.SIEVE_DARK_OAK.get()), DrySieveRecipeCategory.UID, WetSieveRecipeCategory.UID);\n+        registration.addRecipeCatalyst(new ItemStack(ExNihiloBlocks.SIEVE_JUNGLE.get()), DrySieveRecipeCategory.UID, WetSieveRecipeCategory.UID);\n+        registration.addRecipeCatalyst(new ItemStack(ExNihiloBlocks.SIEVE_SPRUCE.get()), DrySieveRecipeCategory.UID, WetSieveRecipeCategory.UID);\n+        registration.addRecipeCatalyst(new ItemStack(ExNihiloBlocks.SIEVE_WOOD.get()), DrySieveRecipeCategory.UID, WetSieveRecipeCategory.UID);\n+        registration.addRecipeCatalyst(new ItemStack(ExNihiloBlocks.SIEVE_CRIMSON.get()), DrySieveRecipeCategory.UID, WetSieveRecipeCategory.UID);\n+        registration.addRecipeCatalyst(new ItemStack(ExNihiloBlocks.SIEVE_WARPED.get()), DrySieveRecipeCategory.UID, WetSieveRecipeCategory.UID);\n+        registration.addRecipeCatalyst(new ItemStack(ExNihiloBlocks.BARREL_ACACIA.get()), FluidOnTopRecipeCategory.UID, FluidTransformCategory.UID, FluidBlockRecipeCategory.UID, CompostRecipeCategory.UID);\n+        registration.addRecipeCatalyst(new ItemStack(ExNihiloBlocks.BARREL_BIRCH.get()), FluidOnTopRecipeCategory.UID, FluidTransformCategory.UID, FluidBlockRecipeCategory.UID, CompostRecipeCategory.UID);\n+        registration.addRecipeCatalyst(new ItemStack(ExNihiloBlocks.BARREL_DARK_OAK.get()), FluidOnTopRecipeCategory.UID, FluidTransformCategory.UID, FluidBlockRecipeCategory.UID, CompostRecipeCategory.UID);\n+        registration.addRecipeCatalyst(new ItemStack(ExNihiloBlocks.BARREL_JUNGLE.get()), FluidOnTopRecipeCategory.UID, FluidTransformCategory.UID, FluidBlockRecipeCategory.UID, CompostRecipeCategory.UID);\n+        registration.addRecipeCatalyst(new ItemStack(ExNihiloBlocks.BARREL_SPRUCE.get()), FluidOnTopRecipeCategory.UID, FluidTransformCategory.UID, FluidBlockRecipeCategory.UID, CompostRecipeCategory.UID);\n         registration.addRecipeCatalyst(new ItemStack(ExNihiloBlocks.BARREL_WOOD.get()), FluidOnTopRecipeCategory.UID, FluidTransformCategory.UID, FluidBlockRecipeCategory.UID, CompostRecipeCategory.UID);\n         registration.addRecipeCatalyst(new ItemStack(ExNihiloBlocks.BARREL_STONE.get()), FluidOnTopRecipeCategory.UID, FluidTransformCategory.UID, FluidBlockRecipeCategory.UID, CompostRecipeCategory.UID);\n-        registration.addRecipeCatalyst(new ItemStack(ExNihiloBlocks.CRUCIBLE_WOOD.get()), new ResourceLocation(ExNihiloConstants.ModIds.EX_NIHILO_SEQUENTIA, ExNihiloConstants.Blocks.CRUCIBLE_WOOD), HeatRecipeCategory.UID);\n-        registration.addRecipeCatalyst(new ItemStack(ExNihiloBlocks.CRUCIBLE_FIRED.get()), new ResourceLocation(ExNihiloConstants.ModIds.EX_NIHILO_SEQUENTIA, ExNihiloConstants.Blocks.CRUCIBLE_FIRED), HeatRecipeCategory.UID);\n+        registration.addRecipeCatalyst(new ItemStack(ExNihiloBlocks.BARREL_CRIMSON.get()), FluidOnTopRecipeCategory.UID, FluidTransformCategory.UID, FluidBlockRecipeCategory.UID, CompostRecipeCategory.UID);\n+        registration.addRecipeCatalyst(new ItemStack(ExNihiloBlocks.BARREL_WARPED.get()), FluidOnTopRecipeCategory.UID, FluidTransformCategory.UID, FluidBlockRecipeCategory.UID, CompostRecipeCategory.UID);\n+        registration.addRecipeCatalyst(new ItemStack(ExNihiloBlocks.BARREL_GLASS.get()), FluidOnTopRecipeCategory.UID, FluidTransformCategory.UID, FluidBlockRecipeCategory.UID, CompostRecipeCategory.UID);\n+        registration.addRecipeCatalyst(new ItemStack(ExNihiloBlocks.BARREL_GLASS_BLACK.get()), FluidOnTopRecipeCategory.UID, FluidTransformCategory.UID, FluidBlockRecipeCategory.UID, CompostRecipeCategory.UID);\n+        registration.addRecipeCatalyst(new ItemStack(ExNihiloBlocks.BARREL_GLASS_BLUE.get()), FluidOnTopRecipeCategory.UID, FluidTransformCategory.UID, FluidBlockRecipeCategory.UID, CompostRecipeCategory.UID);\n+        registration.addRecipeCatalyst(new ItemStack(ExNihiloBlocks.BARREL_GLASS_BROWN.get()), FluidOnTopRecipeCategory.UID, FluidTransformCategory.UID, FluidBlockRecipeCategory.UID, CompostRecipeCategory.UID);\n+        registration.addRecipeCatalyst(new ItemStack(ExNihiloBlocks.BARREL_GLASS_CYAN.get()), FluidOnTopRecipeCategory.UID, FluidTransformCategory.UID, FluidBlockRecipeCategory.UID, CompostRecipeCategory.UID);\n+        registration.addRecipeCatalyst(new ItemStack(ExNihiloBlocks.BARREL_GLASS_GRAY.get()), FluidOnTopRecipeCategory.UID, FluidTransformCategory.UID, FluidBlockRecipeCategory.UID, CompostRecipeCategory.UID);\n+        registration.addRecipeCatalyst(new ItemStack(ExNihiloBlocks.BARREL_GLASS_GREEN.get()), FluidOnTopRecipeCategory.UID, FluidTransformCategory.UID, FluidBlockRecipeCategory.UID, CompostRecipeCategory.UID);\n+        registration.addRecipeCatalyst(new ItemStack(ExNihiloBlocks.BARREL_GLASS_LIGHT_BLUE.get()), FluidOnTopRecipeCategory.UID, FluidTransformCategory.UID, FluidBlockRecipeCategory.UID, CompostRecipeCategory.UID);\n+        registration.addRecipeCatalyst(new ItemStack(ExNihiloBlocks.BARREL_GLASS_LIGHT_GRAY.get()), FluidOnTopRecipeCategory.UID, FluidTransformCategory.UID, FluidBlockRecipeCategory.UID, CompostRecipeCategory.UID);\n+        registration.addRecipeCatalyst(new ItemStack(ExNihiloBlocks.BARREL_GLASS_LIME.get()), FluidOnTopRecipeCategory.UID, FluidTransformCategory.UID, FluidBlockRecipeCategory.UID, CompostRecipeCategory.UID);\n+        registration.addRecipeCatalyst(new ItemStack(ExNihiloBlocks.BARREL_GLASS_MAGENTA.get()), FluidOnTopRecipeCategory.UID, FluidTransformCategory.UID, FluidBlockRecipeCategory.UID, CompostRecipeCategory.UID);\n+        registration.addRecipeCatalyst(new ItemStack(ExNihiloBlocks.BARREL_GLASS_ORANGE.get()), FluidOnTopRecipeCategory.UID, FluidTransformCategory.UID, FluidBlockRecipeCategory.UID, CompostRecipeCategory.UID);\n+        registration.addRecipeCatalyst(new ItemStack(ExNihiloBlocks.BARREL_GLASS_PINK.get()), FluidOnTopRecipeCategory.UID, FluidTransformCategory.UID, FluidBlockRecipeCategory.UID, CompostRecipeCategory.UID);\n+        registration.addRecipeCatalyst(new ItemStack(ExNihiloBlocks.BARREL_GLASS_PURPLE.get()), FluidOnTopRecipeCategory.UID, FluidTransformCategory.UID, FluidBlockRecipeCategory.UID, CompostRecipeCategory.UID);\n+        registration.addRecipeCatalyst(new ItemStack(ExNihiloBlocks.BARREL_GLASS_YELLOW.get()), FluidOnTopRecipeCategory.UID, FluidTransformCategory.UID, FluidBlockRecipeCategory.UID, CompostRecipeCategory.UID);\n+        registration.addRecipeCatalyst(new ItemStack(ExNihiloBlocks.BARREL_GLASS_RED.get()), FluidOnTopRecipeCategory.UID, FluidTransformCategory.UID, FluidBlockRecipeCategory.UID, CompostRecipeCategory.UID);\n+        registration.addRecipeCatalyst(new ItemStack(ExNihiloBlocks.BARREL_GLASS_WHITE.get()), FluidOnTopRecipeCategory.UID, FluidTransformCategory.UID, FluidBlockRecipeCategory.UID, CompostRecipeCategory.UID);\n+        registration.addRecipeCatalyst(new ItemStack(ExNihiloBlocks.CRUCIBLE_ACACIA.get()), new ResourceLocation(ModIds.EX_NIHILO_SEQUENTIA, Blocks.CRUCIBLE_ACACIA), HeatRecipeCategory.UID);\n+        registration.addRecipeCatalyst(new ItemStack(ExNihiloBlocks.CRUCIBLE_BIRCH.get()), new ResourceLocation(ModIds.EX_NIHILO_SEQUENTIA, Blocks.CRUCIBLE_BIRCH), HeatRecipeCategory.UID);\n+        registration.addRecipeCatalyst(new ItemStack(ExNihiloBlocks.CRUCIBLE_DARK_OAK.get()), new ResourceLocation(ModIds.EX_NIHILO_SEQUENTIA, Blocks.CRUCIBLE_DARK_OAK), HeatRecipeCategory.UID);\n+        registration.addRecipeCatalyst(new ItemStack(ExNihiloBlocks.CRUCIBLE_JUNGLE.get()), new ResourceLocation(ModIds.EX_NIHILO_SEQUENTIA, Blocks.CRUCIBLE_JUNGLE), HeatRecipeCategory.UID);\n+        registration.addRecipeCatalyst(new ItemStack(ExNihiloBlocks.CRUCIBLE_SPRUCE.get()), new ResourceLocation(ModIds.EX_NIHILO_SEQUENTIA, Blocks.CRUCIBLE_SPRUCE), HeatRecipeCategory.UID);\n+        registration.addRecipeCatalyst(new ItemStack(ExNihiloBlocks.CRUCIBLE_WOOD.get()), new ResourceLocation(ModIds.EX_NIHILO_SEQUENTIA, Blocks.CRUCIBLE_OAK), HeatRecipeCategory.UID);\n+        registration.addRecipeCatalyst(new ItemStack(ExNihiloBlocks.CRUCIBLE_FIRED.get()), new ResourceLocation(ModIds.EX_NIHILO_SEQUENTIA, Blocks.CRUCIBLE_FIRED), HeatRecipeCategory.UID);\n+        registration.addRecipeCatalyst(new ItemStack(ExNihiloBlocks.CRUCIBLE_CRIMSON.get()), new ResourceLocation(ModIds.EX_NIHILO_SEQUENTIA, Blocks.CRUCIBLE_CRIMSON), HeatRecipeCategory.UID);\n+        registration.addRecipeCatalyst(new ItemStack(ExNihiloBlocks.CRUCIBLE_WARPED.get()), new ResourceLocation(ModIds.EX_NIHILO_SEQUENTIA, Blocks.CRUCIBLE_WARPED), HeatRecipeCategory.UID);\n     }\n \n     @Override\n-    public void registerRecipes(IRecipeRegistration registration) {\n+    public void registerRecipes(@Nonnull IRecipeRegistration registration) {\n         registerCrook(registration);\n         registerSieve(registration);\n         registerHammer(registration);\n@@ -110,7 +159,9 @@ private void registerCrook(IRecipeRegistration registration) {\n \n     private void registerFiredCrucible(IRecipeRegistration registration) {\n         List<CrucibleRecipe> recipes = ExNihiloRegistries.CRUCIBLE_REGISTRY.getRecipeList();\n-        registration.addRecipes(recipes, new ResourceLocation(ExNihiloConstants.ModIds.EX_NIHILO_SEQUENTIA, ExNihiloConstants.Blocks.CRUCIBLE_FIRED));\n+        registration.addRecipes(recipes, new ResourceLocation(ModIds.EX_NIHILO_SEQUENTIA, Blocks.CRUCIBLE_FIRED));\n+        registration.addRecipes(recipes, new ResourceLocation(ModIds.EX_NIHILO_SEQUENTIA, Blocks.CRUCIBLE_CRIMSON));\n+        registration.addRecipes(recipes, new ResourceLocation(ModIds.EX_NIHILO_SEQUENTIA, Blocks.CRUCIBLE_WARPED));\n         logger.info(\"Fired Crucible Recipes Loaded: \" + recipes.size());\n     }\n \n@@ -154,7 +205,12 @@ private void registerSieve(IRecipeRegistration registration) {\n \n     private void registerWoodCrucible(IRecipeRegistration registration) {\n         List<CrucibleRecipe> recipes = ExNihiloRegistries.CRUCIBLE_REGISTRY.getRecipeList().stream().filter(recipe -> recipe.getCrucibleType() == CrucilbeTypeEnum.WOOD).collect(Collectors.toList());\n-        registration.addRecipes(recipes, new ResourceLocation(ExNihiloConstants.ModIds.EX_NIHILO_SEQUENTIA, ExNihiloConstants.Blocks.CRUCIBLE_WOOD));\n+        registration.addRecipes(recipes, new ResourceLocation(ModIds.EX_NIHILO_SEQUENTIA, Blocks.CRUCIBLE_ACACIA));\n+        registration.addRecipes(recipes, new ResourceLocation(ModIds.EX_NIHILO_SEQUENTIA, Blocks.CRUCIBLE_BIRCH));\n+        registration.addRecipes(recipes, new ResourceLocation(ModIds.EX_NIHILO_SEQUENTIA, Blocks.CRUCIBLE_DARK_OAK));\n+        registration.addRecipes(recipes, new ResourceLocation(ModIds.EX_NIHILO_SEQUENTIA, Blocks.CRUCIBLE_JUNGLE));\n+        registration.addRecipes(recipes, new ResourceLocation(ModIds.EX_NIHILO_SEQUENTIA, Blocks.CRUCIBLE_SPRUCE));\n+        registration.addRecipes(recipes, new ResourceLocation(ModIds.EX_NIHILO_SEQUENTIA, Blocks.CRUCIBLE_OAK));\n         logger.info(\"Wooden Crucible Recipes Loaded: \" + recipes.size());\n     }\n }"
  },
  {
    "sha": "619f2c698f0c356244ba6a927602f4234515390b",
    "filename": "src/main/java/novamachina/exnihilosequentia/common/crafting/serializer/SieveRecipeSerializer.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/NovaMachina-Mods/ExNihiloSequentia/blob/f788f92c097016ff9be1e7e9a5dfba952336ac79/src/main/java/novamachina/exnihilosequentia/common/crafting/serializer/SieveRecipeSerializer.java",
    "raw_url": "https://github.com/NovaMachina-Mods/ExNihiloSequentia/raw/f788f92c097016ff9be1e7e9a5dfba952336ac79/src/main/java/novamachina/exnihilosequentia/common/crafting/serializer/SieveRecipeSerializer.java",
    "contents_url": "https://api.github.com/repos/NovaMachina-Mods/ExNihiloSequentia/contents/src/main/java/novamachina/exnihilosequentia/common/crafting/serializer/SieveRecipeSerializer.java?ref=f788f92c097016ff9be1e7e9a5dfba952336ac79",
    "patch": "@@ -16,7 +16,7 @@\n public class SieveRecipeSerializer extends RecipeSerializer<SieveRecipe> {\n     @Override\n     public ItemStack getIcon() {\n-        return new ItemStack(ExNihiloBlocks.SIEVE.get());\n+        return new ItemStack(ExNihiloBlocks.SIEVE_WOOD.get());\n     }\n \n     @Override"
  },
  {
    "sha": "fbb4c93cecfe24078832ef484862602a295f4571",
    "filename": "src/main/java/novamachina/exnihilosequentia/common/datagen/ExNihiloBlockStateGenerator.java",
    "status": "modified",
    "additions": 39,
    "deletions": 1,
    "changes": 40,
    "blob_url": "https://github.com/NovaMachina-Mods/ExNihiloSequentia/blob/f788f92c097016ff9be1e7e9a5dfba952336ac79/src/main/java/novamachina/exnihilosequentia/common/datagen/ExNihiloBlockStateGenerator.java",
    "raw_url": "https://github.com/NovaMachina-Mods/ExNihiloSequentia/raw/f788f92c097016ff9be1e7e9a5dfba952336ac79/src/main/java/novamachina/exnihilosequentia/common/datagen/ExNihiloBlockStateGenerator.java",
    "contents_url": "https://api.github.com/repos/NovaMachina-Mods/ExNihiloSequentia/contents/src/main/java/novamachina/exnihilosequentia/common/datagen/ExNihiloBlockStateGenerator.java?ref=f788f92c097016ff9be1e7e9a5dfba952336ac79",
    "patch": "@@ -46,7 +46,31 @@ private void registerBarrel(Block block, ResourceLocation texture) {\n \n     private void registerBarrels() {\n         registerBarrel(ExNihiloBlocks.BARREL_STONE.get(), new ResourceLocation(ExNihiloConstants.ModIds.MINECRAFT, \"block/stone\"));\n+        registerBarrel(ExNihiloBlocks.BARREL_ACACIA.get(), new ResourceLocation(ExNihiloConstants.ModIds.MINECRAFT, \"block/acacia_planks\"));\n+        registerBarrel(ExNihiloBlocks.BARREL_BIRCH.get(), new ResourceLocation(ExNihiloConstants.ModIds.MINECRAFT, \"block/birch_planks\"));\n+        registerBarrel(ExNihiloBlocks.BARREL_DARK_OAK.get(), new ResourceLocation(ExNihiloConstants.ModIds.MINECRAFT, \"block/dark_oak_planks\"));\n+        registerBarrel(ExNihiloBlocks.BARREL_JUNGLE.get(), new ResourceLocation(ExNihiloConstants.ModIds.MINECRAFT, \"block/jungle_planks\"));\n+        registerBarrel(ExNihiloBlocks.BARREL_SPRUCE.get(), new ResourceLocation(ExNihiloConstants.ModIds.MINECRAFT, \"block/spruce_planks\"));\n         registerBarrel(ExNihiloBlocks.BARREL_WOOD.get(), new ResourceLocation(ExNihiloConstants.ModIds.MINECRAFT, \"block/oak_planks\"));\n+        registerBarrel(ExNihiloBlocks.BARREL_CRIMSON.get(), new ResourceLocation(ExNihiloConstants.ModIds.MINECRAFT, \"block/crimson_planks\"));\n+        registerBarrel(ExNihiloBlocks.BARREL_WARPED.get(), new ResourceLocation(ExNihiloConstants.ModIds.MINECRAFT, \"block/warped_planks\"));\n+        registerBarrel(ExNihiloBlocks.BARREL_GLASS.get(), new ResourceLocation(ExNihiloConstants.ModIds.MINECRAFT, \"block/glass\"));\n+        registerBarrel(ExNihiloBlocks.BARREL_GLASS_YELLOW.get(), new ResourceLocation(ExNihiloConstants.ModIds.MINECRAFT, \"block/yellow_stained_glass\"));\n+        registerBarrel(ExNihiloBlocks.BARREL_GLASS_WHITE.get(), new ResourceLocation(ExNihiloConstants.ModIds.MINECRAFT, \"block/white_stained_glass\"));\n+        registerBarrel(ExNihiloBlocks.BARREL_GLASS_RED.get(), new ResourceLocation(ExNihiloConstants.ModIds.MINECRAFT, \"block/red_stained_glass\"));\n+        registerBarrel(ExNihiloBlocks.BARREL_GLASS_PURPLE.get(), new ResourceLocation(ExNihiloConstants.ModIds.MINECRAFT, \"block/purple_stained_glass\"));\n+        registerBarrel(ExNihiloBlocks.BARREL_GLASS_PINK.get(), new ResourceLocation(ExNihiloConstants.ModIds.MINECRAFT, \"block/pink_stained_glass\"));\n+        registerBarrel(ExNihiloBlocks.BARREL_GLASS_ORANGE.get(), new ResourceLocation(ExNihiloConstants.ModIds.MINECRAFT, \"block/orange_stained_glass\"));\n+        registerBarrel(ExNihiloBlocks.BARREL_GLASS_MAGENTA.get(), new ResourceLocation(ExNihiloConstants.ModIds.MINECRAFT, \"block/magenta_stained_glass\"));\n+        registerBarrel(ExNihiloBlocks.BARREL_GLASS_LIME.get(), new ResourceLocation(ExNihiloConstants.ModIds.MINECRAFT, \"block/lime_stained_glass\"));\n+        registerBarrel(ExNihiloBlocks.BARREL_GLASS_LIGHT_GRAY.get(), new ResourceLocation(ExNihiloConstants.ModIds.MINECRAFT, \"block/light_gray_stained_glass\"));\n+        registerBarrel(ExNihiloBlocks.BARREL_GLASS_LIGHT_BLUE.get(), new ResourceLocation(ExNihiloConstants.ModIds.MINECRAFT, \"block/light_blue_stained_glass\"));\n+        registerBarrel(ExNihiloBlocks.BARREL_GLASS_GREEN.get(), new ResourceLocation(ExNihiloConstants.ModIds.MINECRAFT, \"block/green_stained_glass\"));\n+        registerBarrel(ExNihiloBlocks.BARREL_GLASS_GRAY.get(), new ResourceLocation(ExNihiloConstants.ModIds.MINECRAFT, \"block/gray_stained_glass\"));\n+        registerBarrel(ExNihiloBlocks.BARREL_GLASS_CYAN.get(), new ResourceLocation(ExNihiloConstants.ModIds.MINECRAFT, \"block/cyan_stained_glass\"));\n+        registerBarrel(ExNihiloBlocks.BARREL_GLASS_BROWN.get(), new ResourceLocation(ExNihiloConstants.ModIds.MINECRAFT, \"block/brown_stained_glass\"));\n+        registerBarrel(ExNihiloBlocks.BARREL_GLASS_BLUE.get(), new ResourceLocation(ExNihiloConstants.ModIds.MINECRAFT, \"block/blue_stained_glass\"));\n+        registerBarrel(ExNihiloBlocks.BARREL_GLASS_BLACK.get(), new ResourceLocation(ExNihiloConstants.ModIds.MINECRAFT, \"block/black_stained_glass\"));\n     }\n \n     private void registerCake() {\n@@ -77,7 +101,14 @@ private void registerCrucibles() {\n \n         registerCrucible(ExNihiloBlocks.CRUCIBLE_FIRED.get(), new ResourceLocation(ExNihiloConstants.ModIds.EX_NIHILO_SEQUENTIA, \"block/crucible_fired\"));\n         registerCrucible(ExNihiloBlocks.CRUCIBLE_UNFIRED.get(), new ResourceLocation(ExNihiloConstants.ModIds.EX_NIHILO_SEQUENTIA, \"block/crucible_unfired\"));\n+        registerCrucible(ExNihiloBlocks.CRUCIBLE_ACACIA.get(), new ResourceLocation(ExNihiloConstants.ModIds.MINECRAFT, \"block/acacia_log\"));\n+        registerCrucible(ExNihiloBlocks.CRUCIBLE_BIRCH.get(), new ResourceLocation(ExNihiloConstants.ModIds.MINECRAFT, \"block/birch_log\"));\n+        registerCrucible(ExNihiloBlocks.CRUCIBLE_DARK_OAK.get(), new ResourceLocation(ExNihiloConstants.ModIds.MINECRAFT, \"block/dark_oak_log\"));\n+        registerCrucible(ExNihiloBlocks.CRUCIBLE_JUNGLE.get(), new ResourceLocation(ExNihiloConstants.ModIds.MINECRAFT, \"block/jungle_log\"));\n+        registerCrucible(ExNihiloBlocks.CRUCIBLE_SPRUCE.get(), new ResourceLocation(ExNihiloConstants.ModIds.MINECRAFT, \"block/spruce_log\"));\n         registerCrucible(ExNihiloBlocks.CRUCIBLE_WOOD.get(), new ResourceLocation(ExNihiloConstants.ModIds.MINECRAFT, \"block/oak_log\"));\n+        registerCrucible(ExNihiloBlocks.CRUCIBLE_CRIMSON.get(), new ResourceLocation(ExNihiloConstants.ModIds.MINECRAFT, \"block/crimson_hyphae\"));\n+        registerCrucible(ExNihiloBlocks.CRUCIBLE_WARPED.get(), new ResourceLocation(ExNihiloConstants.ModIds.MINECRAFT, \"block/warped_hyphae\"));\n     }\n \n     private void registerFluids() {\n@@ -105,7 +136,14 @@ private void registerSieve(Block block, ResourceLocation texture) {\n     }\n \n     private void registerSieves() {\n-        registerSieve(ExNihiloBlocks.SIEVE.get(), new ResourceLocation(ExNihiloConstants.ModIds.MINECRAFT, \"block/oak_planks\"));\n+        registerSieve(ExNihiloBlocks.SIEVE_ACACIA.get(), new ResourceLocation(ExNihiloConstants.ModIds.MINECRAFT, \"block/acacia_planks\"));\n+        registerSieve(ExNihiloBlocks.SIEVE_BIRCH.get(), new ResourceLocation(ExNihiloConstants.ModIds.MINECRAFT, \"block/birch_planks\"));\n+        registerSieve(ExNihiloBlocks.SIEVE_DARK_OAK.get(), new ResourceLocation(ExNihiloConstants.ModIds.MINECRAFT, \"block/dark_oak_planks\"));\n+        registerSieve(ExNihiloBlocks.SIEVE_JUNGLE.get(), new ResourceLocation(ExNihiloConstants.ModIds.MINECRAFT, \"block/jungle_planks\"));\n+        registerSieve(ExNihiloBlocks.SIEVE_SPRUCE.get(), new ResourceLocation(ExNihiloConstants.ModIds.MINECRAFT, \"block/spruce_planks\"));\n+        registerSieve(ExNihiloBlocks.SIEVE_WOOD.get(), new ResourceLocation(ExNihiloConstants.ModIds.MINECRAFT, \"block/oak_planks\"));\n+        registerSieve(ExNihiloBlocks.SIEVE_CRIMSON.get(), new ResourceLocation(ExNihiloConstants.ModIds.MINECRAFT, \"block/crimson_planks\"));\n+        registerSieve(ExNihiloBlocks.SIEVE_WARPED.get(), new ResourceLocation(ExNihiloConstants.ModIds.MINECRAFT, \"block/warped_planks\"));\n     }\n \n     private void registerSimpleBlocks() {"
  },
  {
    "sha": "cc49ae5be0b56f91f3361c6b0b0726da602c845b",
    "filename": "src/main/java/novamachina/exnihilosequentia/common/datagen/ExNihiloLootTableGenerator.java",
    "status": "modified",
    "additions": 16,
    "deletions": 1,
    "changes": 17,
    "blob_url": "https://github.com/NovaMachina-Mods/ExNihiloSequentia/blob/f788f92c097016ff9be1e7e9a5dfba952336ac79/src/main/java/novamachina/exnihilosequentia/common/datagen/ExNihiloLootTableGenerator.java",
    "raw_url": "https://github.com/NovaMachina-Mods/ExNihiloSequentia/raw/f788f92c097016ff9be1e7e9a5dfba952336ac79/src/main/java/novamachina/exnihilosequentia/common/datagen/ExNihiloLootTableGenerator.java",
    "contents_url": "https://api.github.com/repos/NovaMachina-Mods/ExNihiloSequentia/contents/src/main/java/novamachina/exnihilosequentia/common/datagen/ExNihiloLootTableGenerator.java?ref=f788f92c097016ff9be1e7e9a5dfba952336ac79",
    "patch": "@@ -43,17 +43,32 @@ private void registerLeaves(Block block) {\n     }\n \n     private void registerSelfDrops() {\n+        registerSelfDrop(ExNihiloBlocks.BARREL_ACACIA.get());\n+        registerSelfDrop(ExNihiloBlocks.BARREL_BIRCH.get());\n+        registerSelfDrop(ExNihiloBlocks.BARREL_DARK_OAK.get());\n+        registerSelfDrop(ExNihiloBlocks.BARREL_JUNGLE.get());\n+        registerSelfDrop(ExNihiloBlocks.BARREL_SPRUCE.get());\n         registerSelfDrop(ExNihiloBlocks.BARREL_WOOD.get());\n         registerSelfDrop(ExNihiloBlocks.BARREL_STONE.get());\n         registerSelfDrop(ExNihiloBlocks.CRUCIBLE_FIRED.get());\n         registerSelfDrop(ExNihiloBlocks.CRUCIBLE_UNFIRED.get());\n+        registerSelfDrop(ExNihiloBlocks.CRUCIBLE_ACACIA.get());\n+        registerSelfDrop(ExNihiloBlocks.CRUCIBLE_BIRCH.get());\n+        registerSelfDrop(ExNihiloBlocks.CRUCIBLE_DARK_OAK.get());\n+        registerSelfDrop(ExNihiloBlocks.CRUCIBLE_JUNGLE.get());\n+        registerSelfDrop(ExNihiloBlocks.CRUCIBLE_SPRUCE.get());\n         registerSelfDrop(ExNihiloBlocks.CRUCIBLE_WOOD.get());\n         registerSelfDrop(ExNihiloBlocks.CRUSHED_ANDESITE.get());\n         registerSelfDrop(ExNihiloBlocks.CRUSHED_DIORITE.get());\n         registerSelfDrop(ExNihiloBlocks.CRUSHED_END_STONE.get());\n         registerSelfDrop(ExNihiloBlocks.CRUSHED_GRANITE.get());\n         registerSelfDrop(ExNihiloBlocks.CRUSHED_NETHERRACK.get());\n         registerSelfDrop(ExNihiloBlocks.DUST.get());\n-        registerSelfDrop(ExNihiloBlocks.SIEVE.get());\n+        registerSelfDrop(ExNihiloBlocks.SIEVE_ACACIA.get());\n+        registerSelfDrop(ExNihiloBlocks.SIEVE_BIRCH.get());\n+        registerSelfDrop(ExNihiloBlocks.SIEVE_DARK_OAK.get());\n+        registerSelfDrop(ExNihiloBlocks.SIEVE_JUNGLE.get());\n+        registerSelfDrop(ExNihiloBlocks.SIEVE_SPRUCE.get());\n+        registerSelfDrop(ExNihiloBlocks.SIEVE_WOOD.get());\n     }\n }"
  },
  {
    "sha": "ab09d48940bd858d746b93d9ac90392209d49e91",
    "filename": "src/main/java/novamachina/exnihilosequentia/common/datagen/ExNihiloRecipeGenerator.java",
    "status": "modified",
    "additions": 188,
    "deletions": 25,
    "changes": 213,
    "blob_url": "https://github.com/NovaMachina-Mods/ExNihiloSequentia/blob/f788f92c097016ff9be1e7e9a5dfba952336ac79/src/main/java/novamachina/exnihilosequentia/common/datagen/ExNihiloRecipeGenerator.java",
    "raw_url": "https://github.com/NovaMachina-Mods/ExNihiloSequentia/raw/f788f92c097016ff9be1e7e9a5dfba952336ac79/src/main/java/novamachina/exnihilosequentia/common/datagen/ExNihiloRecipeGenerator.java",
    "contents_url": "https://api.github.com/repos/NovaMachina-Mods/ExNihiloSequentia/contents/src/main/java/novamachina/exnihilosequentia/common/datagen/ExNihiloRecipeGenerator.java?ref=f788f92c097016ff9be1e7e9a5dfba952336ac79",
    "patch": "@@ -1,5 +1,6 @@\n package novamachina.exnihilosequentia.common.datagen;\n \n+import java.util.ArrayList;\n import java.util.HashMap;\n import java.util.Map;\n import java.util.function.Consumer;\n@@ -34,6 +35,7 @@\n import novamachina.exnihilosequentia.api.crafting.sieve.MeshWithChance;\n import novamachina.exnihilosequentia.api.crafting.sieve.SieveRecipeBuilder;\n import novamachina.exnihilosequentia.api.datagen.AbstractRecipeGenerator;\n+import novamachina.exnihilosequentia.common.block.BaseBlock;\n import novamachina.exnihilosequentia.common.init.ExNihiloBlocks;\n import novamachina.exnihilosequentia.common.init.ExNihiloFluids;\n import novamachina.exnihilosequentia.common.init.ExNihiloItems;\n@@ -67,6 +69,8 @@ protected void registerRecipes(Consumer<IFinishedRecipe> consumer) {\n         registerCrooks(consumer);\n         registerPebbleBlocks(consumer);\n         registerBarrels(consumer);\n+        registerWoodCrucibles(consumer);\n+        registerWoodSieves(consumer);\n         registerOres(consumer);\n         registerHammers(consumer);\n         registerDolls(consumer);\n@@ -89,6 +93,7 @@ protected void registerRecipes(Consumer<IFinishedRecipe> consumer) {\n     }\n \n     private void registerBarrels(Consumer<IFinishedRecipe> consumer) {\n+        //TODO Simplify this one\n         ShapedRecipeBuilder.shapedRecipe(ExNihiloBlocks.BARREL_STONE.get())\n                 .patternLine(\"x x\")\n                 .patternLine(\"x x\")\n@@ -99,18 +104,196 @@ private void registerBarrels(Consumer<IFinishedRecipe> consumer) {\n                 .addCriterion(\"has_walls\", hasItem(Tags.Items.STONE))\n                 .addCriterion(\"has_base\", hasItem(Blocks.STONE_SLAB))\n                 .build(consumer, createSaveLocation(ExNihiloBlocks.BARREL_STONE.getId()));\n+        ShapedRecipeBuilder.shapedRecipe(ExNihiloBlocks.BARREL_ACACIA.get())\n+                .patternLine(\"x x\")\n+                .patternLine(\"x x\")\n+                .patternLine(\"x-x\")\n+                .key('x', Items.ACACIA_PLANKS)\n+                .key('-', Items.ACACIA_SLAB)\n+                .setGroup(ExNihiloConstants.ModIds.EX_NIHILO_SEQUENTIA)\n+                .addCriterion(\"has_walls\", hasItem(Items.ACACIA_PLANKS))\n+                .addCriterion(\"has_base\", hasItem(Items.ACACIA_SLAB))\n+                .build(consumer, createSaveLocation(ExNihiloBlocks.BARREL_ACACIA.getId()));\n+        ShapedRecipeBuilder.shapedRecipe(ExNihiloBlocks.BARREL_BIRCH.get())\n+                .patternLine(\"x x\")\n+                .patternLine(\"x x\")\n+                .patternLine(\"x-x\")\n+                .key('x', Items.BIRCH_PLANKS)\n+                .key('-', Items.BIRCH_SLAB)\n+                .setGroup(ExNihiloConstants.ModIds.EX_NIHILO_SEQUENTIA)\n+                .addCriterion(\"has_walls\", hasItem(Items.BIRCH_PLANKS))\n+                .addCriterion(\"has_base\", hasItem(Items.BIRCH_SLAB))\n+                .build(consumer, createSaveLocation(ExNihiloBlocks.BARREL_BIRCH.getId()));\n+        ShapedRecipeBuilder.shapedRecipe(ExNihiloBlocks.BARREL_DARK_OAK.get())\n+                .patternLine(\"x x\")\n+                .patternLine(\"x x\")\n+                .patternLine(\"x-x\")\n+                .key('x', Items.DARK_OAK_PLANKS)\n+                .key('-', Items.DARK_OAK_SLAB)\n+                .setGroup(ExNihiloConstants.ModIds.EX_NIHILO_SEQUENTIA)\n+                .addCriterion(\"has_walls\", hasItem(Items.DARK_OAK_PLANKS))\n+                .addCriterion(\"has_base\", hasItem(Items.DARK_OAK_SLAB))\n+                .build(consumer, createSaveLocation(ExNihiloBlocks.BARREL_DARK_OAK.getId()));\n+        ShapedRecipeBuilder.shapedRecipe(ExNihiloBlocks.BARREL_JUNGLE.get())\n+                .patternLine(\"x x\")\n+                .patternLine(\"x x\")\n+                .patternLine(\"x-x\")\n+                .key('x', Items.JUNGLE_PLANKS)\n+                .key('-', Items.JUNGLE_SLAB)\n+                .setGroup(ExNihiloConstants.ModIds.EX_NIHILO_SEQUENTIA)\n+                .addCriterion(\"has_walls\", hasItem(Items.JUNGLE_PLANKS))\n+                .addCriterion(\"has_base\", hasItem(Items.JUNGLE_SLAB))\n+                .build(consumer, createSaveLocation(ExNihiloBlocks.BARREL_JUNGLE.getId()));\n+        ShapedRecipeBuilder.shapedRecipe(ExNihiloBlocks.BARREL_SPRUCE.get())\n+                .patternLine(\"x x\")\n+                .patternLine(\"x x\")\n+                .patternLine(\"x-x\")\n+                .key('x', Items.SPRUCE_PLANKS)\n+                .key('-', Items.SPRUCE_SLAB)\n+                .setGroup(ExNihiloConstants.ModIds.EX_NIHILO_SEQUENTIA)\n+                .addCriterion(\"has_walls\", hasItem(Items.SPRUCE_PLANKS))\n+                .addCriterion(\"has_base\", hasItem(Items.SPRUCE_SLAB))\n+                .build(consumer, createSaveLocation(ExNihiloBlocks.BARREL_SPRUCE.getId()));\n         ShapedRecipeBuilder.shapedRecipe(ExNihiloBlocks.BARREL_WOOD.get())\n                 .patternLine(\"x x\")\n                 .patternLine(\"x x\")\n                 .patternLine(\"x-x\")\n-                .key('x', ItemTags.PLANKS)\n-                .key('-', ItemTags.WOODEN_SLABS)\n+                .key('x', Items.OAK_PLANKS)\n+                .key('-', Items.OAK_SLAB)\n                 .setGroup(ExNihiloConstants.ModIds.EX_NIHILO_SEQUENTIA)\n-                .addCriterion(\"has_walls\", hasItem(ItemTags.PLANKS))\n-                .addCriterion(\"has_base\", hasItem(ItemTags.WOODEN_SLABS))\n+                .addCriterion(\"has_walls\", hasItem(Items.OAK_PLANKS))\n+                .addCriterion(\"has_base\", hasItem(Items.OAK_SLAB))\n                 .build(consumer, createSaveLocation(ExNihiloBlocks.BARREL_WOOD.getId()));\n     }\n \n+    private void registerWoodCrucibles(Consumer<IFinishedRecipe> consumer) {\n+        //TODO Simplify this one\n+        ShapedRecipeBuilder.shapedRecipe(ExNihiloBlocks.CRUCIBLE_ACACIA.get())\n+                .patternLine(\"c c\")\n+                .patternLine(\"clc\")\n+                .patternLine(\"s s\")\n+                .key('c', Items.ACACIA_LOG)\n+                .key('l', Items.ACACIA_SLAB)\n+                .key('s', Tags.Items.RODS_WOODEN)\n+                .setGroup(ExNihiloConstants.ModIds.EX_NIHILO_SEQUENTIA)\n+                .addCriterion(\"has_logs\", hasItem(Items.ACACIA_LOG))\n+                .build(consumer, createSaveLocation(ExNihiloBlocks.CRUCIBLE_ACACIA.getId()));\n+        ShapedRecipeBuilder.shapedRecipe(ExNihiloBlocks.CRUCIBLE_BIRCH.get())\n+                .patternLine(\"c c\")\n+                .patternLine(\"clc\")\n+                .patternLine(\"s s\")\n+                .key('c', Items.BIRCH_LOG)\n+                .key('l', Items.BIRCH_SLAB)\n+                .key('s', Tags.Items.RODS_WOODEN)\n+                .setGroup(ExNihiloConstants.ModIds.EX_NIHILO_SEQUENTIA)\n+                .addCriterion(\"has_logs\", hasItem(Items.BIRCH_LOG))\n+                .build(consumer, createSaveLocation(ExNihiloBlocks.CRUCIBLE_BIRCH.getId()));\n+        ShapedRecipeBuilder.shapedRecipe(ExNihiloBlocks.CRUCIBLE_DARK_OAK.get())\n+                .patternLine(\"c c\")\n+                .patternLine(\"clc\")\n+                .patternLine(\"s s\")\n+                .key('c', Items.DARK_OAK_LOG)\n+                .key('l', Items.DARK_OAK_SLAB)\n+                .key('s', Tags.Items.RODS_WOODEN)\n+                .setGroup(ExNihiloConstants.ModIds.EX_NIHILO_SEQUENTIA)\n+                .addCriterion(\"has_logs\", hasItem(Items.DARK_OAK_LOG))\n+                .build(consumer, createSaveLocation(ExNihiloBlocks.CRUCIBLE_DARK_OAK.getId()));\n+        ShapedRecipeBuilder.shapedRecipe(ExNihiloBlocks.CRUCIBLE_JUNGLE.get())\n+                .patternLine(\"c c\")\n+                .patternLine(\"clc\")\n+                .patternLine(\"s s\")\n+                .key('c', Items.JUNGLE_LOG)\n+                .key('l', Items.JUNGLE_SLAB)\n+                .key('s', Tags.Items.RODS_WOODEN)\n+                .setGroup(ExNihiloConstants.ModIds.EX_NIHILO_SEQUENTIA)\n+                .addCriterion(\"has_logs\", hasItem(Items.JUNGLE_LOG))\n+                .build(consumer, createSaveLocation(ExNihiloBlocks.CRUCIBLE_JUNGLE.getId()));\n+        ShapedRecipeBuilder.shapedRecipe(ExNihiloBlocks.CRUCIBLE_SPRUCE.get())\n+                .patternLine(\"c c\")\n+                .patternLine(\"clc\")\n+                .patternLine(\"s s\")\n+                .key('c', Items.SPRUCE_LOG)\n+                .key('l', Items.SPRUCE_SLAB)\n+                .key('s', Tags.Items.RODS_WOODEN)\n+                .setGroup(ExNihiloConstants.ModIds.EX_NIHILO_SEQUENTIA)\n+                .addCriterion(\"has_logs\", hasItem(Items.SPRUCE_LOG))\n+                .build(consumer, createSaveLocation(ExNihiloBlocks.CRUCIBLE_SPRUCE.getId()));\n+        ShapedRecipeBuilder.shapedRecipe(ExNihiloBlocks.CRUCIBLE_WOOD.get())\n+                .patternLine(\"c c\")\n+                .patternLine(\"clc\")\n+                .patternLine(\"s s\")\n+                .key('c', Items.OAK_LOG)\n+                .key('l', Items.OAK_SLAB)\n+                .key('s', Tags.Items.RODS_WOODEN)\n+                .setGroup(ExNihiloConstants.ModIds.EX_NIHILO_SEQUENTIA)\n+                .addCriterion(\"has_logs\", hasItem(Items.OAK_LOG))\n+                .build(consumer, createSaveLocation(ExNihiloBlocks.CRUCIBLE_WOOD.getId()));\n+        }\n+\n+    private void registerWoodSieves(Consumer<IFinishedRecipe> consumer) {\n+        //TODO Simplify this one\n+        ShapedRecipeBuilder.shapedRecipe(ExNihiloBlocks.SIEVE_ACACIA.get())\n+                .patternLine(\"p p\")\n+                .patternLine(\"plp\")\n+                .patternLine(\"s s\")\n+                .key('p', Items.ACACIA_PLANKS)\n+                .key('l', Items.ACACIA_SLAB)\n+                .key('s', Tags.Items.RODS_WOODEN)\n+                .addCriterion(\"has_plank\", InventoryChangeTrigger.Instance\n+                        .forItems(ItemPredicate.Builder.create().item(Items.ACACIA_PLANKS).build()))\n+                .build(consumer, createSaveLocation(ExNihiloBlocks.SIEVE_ACACIA.getId()));\n+        ShapedRecipeBuilder.shapedRecipe(ExNihiloBlocks.SIEVE_BIRCH.get())\n+                .patternLine(\"p p\")\n+                .patternLine(\"plp\")\n+                .patternLine(\"s s\")\n+                .key('p', Items.BIRCH_PLANKS)\n+                .key('l', Items.BIRCH_SLAB)\n+                .key('s', Tags.Items.RODS_WOODEN)\n+                .addCriterion(\"has_plank\", InventoryChangeTrigger.Instance\n+                        .forItems(ItemPredicate.Builder.create().item(Items.BIRCH_PLANKS).build()))\n+                .build(consumer, createSaveLocation(ExNihiloBlocks.SIEVE_BIRCH.getId()));\n+        ShapedRecipeBuilder.shapedRecipe(ExNihiloBlocks.SIEVE_DARK_OAK.get())\n+                .patternLine(\"p p\")\n+                .patternLine(\"plp\")\n+                .patternLine(\"s s\")\n+                .key('p', Items.DARK_OAK_PLANKS)\n+                .key('l', Items.DARK_OAK_SLAB)\n+                .key('s', Tags.Items.RODS_WOODEN)\n+                .addCriterion(\"has_plank\", InventoryChangeTrigger.Instance\n+                        .forItems(ItemPredicate.Builder.create().item(Items.DARK_OAK_PLANKS).build()))\n+                .build(consumer, createSaveLocation(ExNihiloBlocks.SIEVE_DARK_OAK.getId()));\n+        ShapedRecipeBuilder.shapedRecipe(ExNihiloBlocks.SIEVE_JUNGLE.get())\n+                .patternLine(\"p p\")\n+                .patternLine(\"plp\")\n+                .patternLine(\"s s\")\n+                .key('p', Items.JUNGLE_PLANKS)\n+                .key('l', Items.JUNGLE_SLAB)\n+                .key('s', Tags.Items.RODS_WOODEN)\n+                .addCriterion(\"has_plank\", InventoryChangeTrigger.Instance\n+                        .forItems(ItemPredicate.Builder.create().item(Items.JUNGLE_PLANKS).build()))\n+                .build(consumer, createSaveLocation(ExNihiloBlocks.SIEVE_JUNGLE.getId()));\n+        ShapedRecipeBuilder.shapedRecipe(ExNihiloBlocks.SIEVE_SPRUCE.get())\n+                .patternLine(\"p p\")\n+                .patternLine(\"plp\")\n+                .patternLine(\"s s\")\n+                .key('p', Items.SPRUCE_PLANKS)\n+                .key('l', Items.SPRUCE_SLAB)\n+                .key('s', Tags.Items.RODS_WOODEN)\n+                .addCriterion(\"has_plank\", InventoryChangeTrigger.Instance\n+                        .forItems(ItemPredicate.Builder.create().item(Items.SPRUCE_PLANKS).build()))\n+                .build(consumer, createSaveLocation(ExNihiloBlocks.SIEVE_SPRUCE.getId()));\n+        ShapedRecipeBuilder.shapedRecipe(ExNihiloBlocks.SIEVE_WOOD.get())\n+                .patternLine(\"p p\")\n+                .patternLine(\"plp\")\n+                .patternLine(\"s s\")\n+                .key('p', Items.OAK_PLANKS)\n+                .key('l', Items.OAK_SLAB)\n+                .key('s', Tags.Items.RODS_WOODEN)\n+                .addCriterion(\"has_plank\", InventoryChangeTrigger.Instance\n+                        .forItems(ItemPredicate.Builder.create().item(Items.OAK_PLANKS).build()))\n+                .build(consumer, createSaveLocation(ExNihiloBlocks.SIEVE_WOOD.getId()));\n+    }\n+\n     private void registerCompostRecipes(Consumer<IFinishedRecipe> consumer) {\n         CompostRecipeBuilder.builder().input(ItemTags.SAPLINGS).amount(125).build(consumer, compostLoc(\"saplings\"));\n         CompostRecipeBuilder.builder().input(ItemTags.LEAVES).amount(125).build(consumer, compostLoc(LEAVES));\n@@ -544,7 +727,7 @@ private void registerMeshes(Consumer<IFinishedRecipe> consumer) {\n                 .patternLine(\"iii\")\n                 .patternLine(\"iii\")\n                 .key('i', Tags.Items.STRING)\n-                .addCriterion(\"has_sieve\", InventoryChangeTrigger.Instance.forItems(ExNihiloBlocks.SIEVE.get()))\n+                .addCriterion(\"has_sieve\", InventoryChangeTrigger.Instance.forItems(ExNihiloBlocks.SIEVE_WOOD.get()))\n                 .build(consumer, createSaveLocation(EnumMesh.STRING.getRegistryObject().getId()));\n     }\n \n@@ -605,16 +788,6 @@ private void registerMisc(Consumer<IFinishedRecipe> consumer) {\n                         .forItems(EnumResource.PORCELAIN_CLAY.getRegistryObject().get()))\n                 .build(consumer, createSaveLocation(ExNihiloBlocks.CRUCIBLE_UNFIRED.getId()));\n \n-        ShapedRecipeBuilder.shapedRecipe(ExNihiloBlocks.CRUCIBLE_WOOD.get())\n-                .patternLine(\"c c\")\n-                .patternLine(\"clc\")\n-                .patternLine(\"s s\")\n-                .key('c', ItemTags.LOGS)\n-                .key('l', ItemTags.WOODEN_SLABS)\n-                .key('s', Tags.Items.RODS_WOODEN)\n-                .addCriterion(\"has_logs\", hasItem(ItemTags.LOGS))\n-                .build(consumer, createSaveLocation(ExNihiloBlocks.CRUCIBLE_WOOD.getId()));\n-\n         ShapedRecipeBuilder.shapedRecipe(EnumResource.CRAFTING_DOLL.getRegistryObject().get(), 4)\n                 .patternLine(\"xex\")\n                 .patternLine(\" x \")\n@@ -648,16 +821,6 @@ private void registerMisc(Consumer<IFinishedRecipe> consumer) {\n                 .key('k', Items.CAKE)\n                 .addCriterion(\"has_ender_pearl\", InventoryChangeTrigger.Instance.forItems(Items.ENDER_PEARL))\n                 .build(consumer, createSaveLocation(ExNihiloBlocks.END_CAKE.getId()));\n-        ShapedRecipeBuilder.shapedRecipe(ExNihiloBlocks.SIEVE.get())\n-                .patternLine(\"p p\")\n-                .patternLine(\"plp\")\n-                .patternLine(\"s s\")\n-                .key('p', ItemTags.PLANKS)\n-                .key('l', ItemTags.WOODEN_SLABS)\n-                .key('s', Tags.Items.RODS_WOODEN)\n-                .addCriterion(\"has_plank\", InventoryChangeTrigger.Instance\n-                        .forItems(ItemPredicate.Builder.create().tag(ItemTags.PLANKS).build()))\n-                .build(consumer, createSaveLocation(ExNihiloBlocks.SIEVE.getId()));\n \n         ShapelessRecipeBuilder.shapelessRecipe(EnumResource.PORCELAIN_CLAY.getRegistryObject().get())\n                 .addIngredient(ExNihiloTags.CLAY)"
  },
  {
    "sha": "81e2f9156560054e0f549e960c11eaf5de902891",
    "filename": "src/main/java/novamachina/exnihilosequentia/common/init/ExNihiloBlocks.java",
    "status": "modified",
    "additions": 107,
    "deletions": 44,
    "changes": 151,
    "blob_url": "https://github.com/NovaMachina-Mods/ExNihiloSequentia/blob/f788f92c097016ff9be1e7e9a5dfba952336ac79/src/main/java/novamachina/exnihilosequentia/common/init/ExNihiloBlocks.java",
    "raw_url": "https://github.com/NovaMachina-Mods/ExNihiloSequentia/raw/f788f92c097016ff9be1e7e9a5dfba952336ac79/src/main/java/novamachina/exnihilosequentia/common/init/ExNihiloBlocks.java",
    "contents_url": "https://api.github.com/repos/NovaMachina-Mods/ExNihiloSequentia/contents/src/main/java/novamachina/exnihilosequentia/common/init/ExNihiloBlocks.java?ref=f788f92c097016ff9be1e7e9a5dfba952336ac79",
    "patch": "@@ -10,21 +10,11 @@\n import net.minecraftforge.fml.RegistryObject;\n import net.minecraftforge.registries.DeferredRegister;\n import net.minecraftforge.registries.ForgeRegistries;\n-import novamachina.exnihilosequentia.common.block.BaseBlock;\n-import novamachina.exnihilosequentia.common.block.BaseFallingBlock;\n-import novamachina.exnihilosequentia.common.block.BlockBarrel;\n-import novamachina.exnihilosequentia.common.block.BlockSieve;\n-import novamachina.exnihilosequentia.common.block.EndCakeBlock;\n-import novamachina.exnihilosequentia.common.block.FiredCrucibleBlock;\n-import novamachina.exnihilosequentia.common.block.InfestedLeavesBlock;\n-import novamachina.exnihilosequentia.common.block.InfestingLeavesBlock;\n-import novamachina.exnihilosequentia.common.block.SeaWaterBlock;\n-import novamachina.exnihilosequentia.common.block.UnfiredCrucibleBlock;\n-import novamachina.exnihilosequentia.common.block.WitchWaterBlock;\n-import novamachina.exnihilosequentia.common.block.WoodCrucibleBlock;\n+import novamachina.exnihilosequentia.common.block.*;\n import novamachina.exnihilosequentia.common.builder.BlockBuilder;\n-import novamachina.exnihilosequentia.common.tileentity.barrel.StoneBarrelTile;\n-import novamachina.exnihilosequentia.common.tileentity.barrel.WoodBarrelTile;\n+import novamachina.exnihilosequentia.common.tileentity.SieveTile;\n+import novamachina.exnihilosequentia.common.tileentity.barrel.*;\n+import novamachina.exnihilosequentia.common.tileentity.crucible.WoodCrucibleTile;\n import novamachina.exnihilosequentia.common.utility.ExNihiloConstants;\n import novamachina.exnihilosequentia.common.utility.ExNihiloConstants.Blocks;\n import novamachina.exnihilosequentia.common.utility.ExNihiloLogger;\n@@ -37,30 +27,13 @@\n             .register(ExNihiloConstants.Blocks.DUST, () -> new BaseFallingBlock(new BlockBuilder().properties(\n                     AbstractBlock.Properties.create(Material.SAND).hardnessAndResistance(0.7F)\n                             .sound(SoundType.CLOTH)).harvestLevel(ToolType.SHOVEL, 0)));\n-    public static final RegistryObject<BaseFallingBlock> CRUSHED_NETHERRACK = BLOCKS\n-            .register(ExNihiloConstants.Blocks.CRUSHED_NETHERRACK, () -> new BaseFallingBlock(new BlockBuilder()\n-                    .properties(AbstractBlock.Properties.create(Material.SAND).hardnessAndResistance(0.7F)\n-                            .sound(SoundType.GROUND)).harvestLevel(ToolType.SHOVEL, 0)));\n-    public static final RegistryObject<BaseFallingBlock> CRUSHED_END_STONE = BLOCKS\n-            .register(ExNihiloConstants.Blocks.CRUSHED_END_STONE, () -> new BaseFallingBlock(new BlockBuilder()\n-                    .properties(AbstractBlock.Properties.create(Material.SAND).hardnessAndResistance(0.7F)\n-                            .sound(SoundType.GROUND)).harvestLevel(ToolType.SHOVEL, 0)));\n-    public static final RegistryObject<BaseFallingBlock> CRUSHED_ANDESITE = BLOCKS\n-            .register(ExNihiloConstants.Blocks.CRUSHED_ANDESITE, () -> new BaseFallingBlock(new BlockBuilder()\n-                    .properties(AbstractBlock.Properties.create(Material.SAND).hardnessAndResistance(0.7F)\n-                            .sound(SoundType.GROUND)).harvestLevel(ToolType.SHOVEL, 0)));\n-    public static final RegistryObject<BaseFallingBlock> CRUSHED_DIORITE = BLOCKS\n-            .register(ExNihiloConstants.Blocks.CRUSHED_DIORITE, () -> new BaseFallingBlock(new BlockBuilder()\n-                    .properties(AbstractBlock.Properties.create(Material.SAND).hardnessAndResistance(0.7F)\n-                            .sound(SoundType.GROUND)).harvestLevel(ToolType.SHOVEL, 0)));\n-    public static final RegistryObject<BaseFallingBlock> CRUSHED_GRANITE = BLOCKS\n-            .register(ExNihiloConstants.Blocks.CRUSHED_GRANITE, () -> new BaseFallingBlock(new BlockBuilder()\n-                    .properties(AbstractBlock.Properties.create(Material.SAND).hardnessAndResistance(0.7F)\n-                            .sound(SoundType.GROUND)).harvestLevel(ToolType.SHOVEL, 0)));\n+    public static final RegistryObject<BaseFallingBlock> CRUSHED_NETHERRACK = createCrushedBlocks(ExNihiloConstants.Blocks.CRUSHED_NETHERRACK);\n+    public static final RegistryObject<BaseFallingBlock> CRUSHED_END_STONE = createCrushedBlocks(ExNihiloConstants.Blocks.CRUSHED_END_STONE);\n+    public static final RegistryObject<BaseFallingBlock> CRUSHED_ANDESITE = createCrushedBlocks(ExNihiloConstants.Blocks.CRUSHED_ANDESITE);\n+    public static final RegistryObject<BaseFallingBlock> CRUSHED_DIORITE = createCrushedBlocks(ExNihiloConstants.Blocks.CRUSHED_DIORITE);\n+    public static final RegistryObject<BaseFallingBlock> CRUSHED_GRANITE = createCrushedBlocks(ExNihiloConstants.Blocks.CRUSHED_GRANITE);\n     public static final RegistryObject<EndCakeBlock> END_CAKE = BLOCKS\n             .register(ExNihiloConstants.Blocks.END_CAKE, EndCakeBlock::new);\n-    public static final RegistryObject<BlockSieve> SIEVE = BLOCKS\n-            .register(Blocks.SIEVE, BlockSieve::new);\n     public static final RegistryObject<FlowingFluidBlock> WITCH_WATER = BLOCKS\n             .register(ExNihiloConstants.Blocks.WITCH_WATER, WitchWaterBlock::new);\n     public static final RegistryObject<FlowingFluidBlock> SEA_WATER = BLOCKS\n@@ -73,16 +46,76 @@\n             .register(Blocks.CRUCIBLE_UNFIRED, UnfiredCrucibleBlock::new);\n     public static final RegistryObject<BaseBlock> CRUCIBLE_FIRED = BLOCKS\n             .register(Blocks.CRUCIBLE_FIRED, FiredCrucibleBlock::new);\n-    public static final RegistryObject<BaseBlock> CRUCIBLE_WOOD = BLOCKS\n-            .register(Blocks.CRUCIBLE_WOOD, WoodCrucibleBlock::new);\n-    public static final RegistryObject<BaseBlock> BARREL_WOOD = BLOCKS\n-            .register(Blocks.BARREL_WOOD, () -> new BlockBarrel(new BlockBuilder().harvestLevel(ToolType.AXE, 0)\n-                    .properties(AbstractBlock.Properties.create(Material.WOOD).hardnessAndResistance(0.75F).sound(SoundType.WOOD))\n-                    .tileEntitySupplier(WoodBarrelTile::new)));\n-    public static final RegistryObject<BaseBlock> BARREL_STONE = BLOCKS\n-            .register(Blocks.BARREL_STONE, () -> new BlockBarrel(new BlockBuilder().harvestLevel(ToolType.PICKAXE, 0)\n+    //TODO here are the sieves\n+    public static final RegistryObject<BlockSieve> SIEVE_ACACIA = createSieve(Blocks.SIEVE_ACACIA);\n+    public static final RegistryObject<BlockSieve> SIEVE_BIRCH = createSieve(Blocks.SIEVE_BIRCH);\n+    public static final RegistryObject<BlockSieve> SIEVE_DARK_OAK = createSieve(Blocks.SIEVE_DARK_OAK);\n+    public static final RegistryObject<BlockSieve> SIEVE_JUNGLE = createSieve(Blocks.SIEVE_JUNGLE);\n+    public static final RegistryObject<BlockSieve> SIEVE_SPRUCE = createSieve(Blocks.SIEVE_SPRUCE);\n+    public static final RegistryObject<BlockSieve> SIEVE_WOOD = createSieve(Blocks.SIEVE_OAK);\n+    public static final RegistryObject<BlockSieve> SIEVE_CRIMSON = BLOCKS.register(Blocks.SIEVE_CRIMSON,\n+            () -> new BlockSieve(new BlockBuilder().properties(AbstractBlock.Properties.create(Material.NETHER_WOOD).hardnessAndResistance(0.7F)\n+                    .sound(SoundType.HYPHAE).notSolid().setOpaque((state, reader, pos) -> false)\n+                    .setSuffocates((state, reader, pos) -> false).setBlocksVision((state, reader, pos) -> false))\n+                    .harvestLevel(ToolType.AXE, 0).tileEntitySupplier(SieveTile::new)));\n+    public static final RegistryObject<BlockSieve> SIEVE_WARPED = BLOCKS.register(Blocks.SIEVE_WARPED,\n+            () -> new BlockSieve(new BlockBuilder().properties(AbstractBlock.Properties.create(Material.NETHER_WOOD).hardnessAndResistance(0.7F)\n+                            .sound(SoundType.HYPHAE).notSolid().setOpaque((state, reader, pos) -> false)\n+                            .setSuffocates((state, reader, pos) -> false).setBlocksVision((state, reader, pos) -> false))\n+                    .harvestLevel(ToolType.AXE, 0).tileEntitySupplier(SieveTile::new)));\n+    //TODO added Crucible\n+    public static final RegistryObject<BaseBlock> CRUCIBLE_ACACIA = createWoodCrucible(Blocks.CRUCIBLE_ACACIA);\n+    public static final RegistryObject<BaseBlock> CRUCIBLE_BIRCH = createWoodCrucible(Blocks.CRUCIBLE_BIRCH);\n+    public static final RegistryObject<BaseBlock> CRUCIBLE_DARK_OAK = createWoodCrucible(Blocks.CRUCIBLE_DARK_OAK);\n+    public static final RegistryObject<BaseBlock> CRUCIBLE_JUNGLE = createWoodCrucible(Blocks.CRUCIBLE_JUNGLE);\n+    public static final RegistryObject<BaseBlock> CRUCIBLE_SPRUCE = createWoodCrucible(Blocks.CRUCIBLE_SPRUCE);\n+    public static final RegistryObject<BaseBlock> CRUCIBLE_WOOD = createWoodCrucible(Blocks.CRUCIBLE_OAK);\n+    public static final RegistryObject<BaseBlock> CRUCIBLE_CRIMSON = BLOCKS.register(Blocks.CRUCIBLE_CRIMSON,\n+            () -> new CrucibleBaseBlock(new BlockBuilder().properties(\n+                    AbstractBlock.Properties.create(Material.NETHER_WOOD).hardnessAndResistance(.75F)\n+                            .sound(SoundType.HYPHAE).notSolid()).harvestLevel(ToolType.AXE, 0)\n+                    .tileEntitySupplier(WoodCrucibleTile::new)));\n+    public static final RegistryObject<BaseBlock> CRUCIBLE_WARPED = BLOCKS.register(Blocks.CRUCIBLE_WARPED,\n+            () -> new CrucibleBaseBlock(new BlockBuilder().properties(\n+            AbstractBlock.Properties.create(Material.NETHER_WOOD).hardnessAndResistance(.75F)\n+                    .sound(SoundType.HYPHAE).notSolid()).harvestLevel(ToolType.AXE, 0)\n+            .tileEntitySupplier(WoodCrucibleTile::new)));\n+    //TODO here are the barrels\n+    public static final RegistryObject<BaseBlock> BARREL_ACACIA = createWoodBarrel(Blocks.BARREL_ACACIA);\n+    public static final RegistryObject<BaseBlock> BARREL_BIRCH = createWoodBarrel(Blocks.BARREL_BIRCH);\n+    public static final RegistryObject<BaseBlock> BARREL_DARK_OAK = createWoodBarrel(Blocks.BARREL_DARK_OAK);\n+    public static final RegistryObject<BaseBlock> BARREL_JUNGLE = createWoodBarrel(Blocks.BARREL_JUNGLE);\n+    public static final RegistryObject<BaseBlock> BARREL_SPRUCE = createWoodBarrel(Blocks.BARREL_SPRUCE);\n+    public static final RegistryObject<BaseBlock> BARREL_WOOD = createWoodBarrel(Blocks.BARREL_OAK);\n+    public static final RegistryObject<BaseBlock> BARREL_STONE = BLOCKS.register(Blocks.BARREL_STONE,\n+            () -> new BlockBarrel(new BlockBuilder().harvestLevel(ToolType.PICKAXE, 0)\n                     .properties(AbstractBlock.Properties.create(Material.ROCK).hardnessAndResistance(0.75F).sound(SoundType.STONE))\n                     .tileEntitySupplier(StoneBarrelTile::new)));\n+    public static final RegistryObject<BaseBlock> BARREL_CRIMSON = BLOCKS.register(Blocks.BARREL_CRIMSON,\n+            () -> new BlockBarrel(new BlockBuilder().harvestLevel(ToolType.AXE, 0)\n+                    .properties(AbstractBlock.Properties.create(Material.NETHER_WOOD).hardnessAndResistance(0.75F).sound(SoundType.HYPHAE))\n+                    .tileEntitySupplier(StoneBarrelTile::new)));\n+    public static final RegistryObject<BaseBlock> BARREL_WARPED = BLOCKS.register(Blocks.BARREL_WARPED,\n+            () -> new BlockBarrel(new BlockBuilder().harvestLevel(ToolType.AXE, 0)\n+                    .properties(AbstractBlock.Properties.create(Material.NETHER_WOOD).hardnessAndResistance(0.75F).sound(SoundType.HYPHAE))\n+                    .tileEntitySupplier(StoneBarrelTile::new)));\n+    public static final RegistryObject<BaseBlock> BARREL_GLASS = createGlassBarrel(Blocks.BARREL_GLASS);\n+    public static final RegistryObject<BaseBlock> BARREL_GLASS_WHITE = createGlassBarrel(Blocks.BARREL_GLASS_WHITE);\n+    public static final RegistryObject<BaseBlock> BARREL_GLASS_GRAY = createGlassBarrel(Blocks.BARREL_GLASS_GRAY);\n+    public static final RegistryObject<BaseBlock> BARREL_GLASS_LIGHT_GRAY = createGlassBarrel(Blocks.BARREL_GLASS_LIGHT_GRAY);\n+    public static final RegistryObject<BaseBlock> BARREL_GLASS_BLACK = createGlassBarrel(Blocks.BARREL_GLASS_BLACK);\n+    public static final RegistryObject<BaseBlock> BARREL_GLASS_BROWN = createGlassBarrel(Blocks.BARREL_GLASS_BROWN);\n+    public static final RegistryObject<BaseBlock> BARREL_GLASS_RED = createGlassBarrel(Blocks.BARREL_GLASS_RED);\n+    public static final RegistryObject<BaseBlock> BARREL_GLASS_MAGENTA = createGlassBarrel(Blocks.BARREL_GLASS_MAGENTA);\n+    public static final RegistryObject<BaseBlock> BARREL_GLASS_ORANGE = createGlassBarrel(Blocks.BARREL_GLASS_ORANGE);\n+    public static final RegistryObject<BaseBlock> BARREL_GLASS_PINK = createGlassBarrel(Blocks.BARREL_GLASS_PINK);\n+    public static final RegistryObject<BaseBlock> BARREL_GLASS_PURPLE = createGlassBarrel(Blocks.BARREL_GLASS_PURPLE);\n+    public static final RegistryObject<BaseBlock> BARREL_GLASS_YELLOW = createGlassBarrel(Blocks.BARREL_GLASS_YELLOW);\n+    public static final RegistryObject<BaseBlock> BARREL_GLASS_LIME = createGlassBarrel(Blocks.BARREL_GLASS_LIME);\n+    public static final RegistryObject<BaseBlock> BARREL_GLASS_GREEN = createGlassBarrel(Blocks.BARREL_GLASS_GREEN);\n+    public static final RegistryObject<BaseBlock> BARREL_GLASS_LIGHT_BLUE = createGlassBarrel(Blocks.BARREL_GLASS_LIGHT_BLUE);\n+    public static final RegistryObject<BaseBlock> BARREL_GLASS_CYAN = createGlassBarrel(Blocks.BARREL_GLASS_CYAN);\n+    public static final RegistryObject<BaseBlock> BARREL_GLASS_BLUE = createGlassBarrel(Blocks.BARREL_GLASS_BLUE);\n     private static final ExNihiloLogger logger = new ExNihiloLogger(LogManager.getLogger());\n \n     private ExNihiloBlocks() {\n@@ -93,4 +126,34 @@ public static void init(IEventBus modEventBus) {\n         logger.debug(\"Register blocks\");\n         BLOCKS.register(modEventBus);\n     }\n+\n+    private static RegistryObject<BaseFallingBlock> createCrushedBlocks(String block) {\n+        return BLOCKS.register(block, () -> new BaseFallingBlock(new BlockBuilder()\n+                        .properties(AbstractBlock.Properties.create(Material.SAND).hardnessAndResistance(0.7F)\n+                                .sound(SoundType.GROUND)).harvestLevel(ToolType.SHOVEL, 0)));\n+    }\n+\n+    private static RegistryObject<BaseBlock> createWoodCrucible(String crucible) {\n+        return BLOCKS.register(crucible, WoodCrucibleBlock::new);\n+    }\n+\n+    private static RegistryObject<BlockSieve> createSieve(String sieve) {\n+        return BLOCKS.register(sieve, () -> new BlockSieve(new BlockBuilder().properties(\n+                AbstractBlock.Properties.create(Material.WOOD).hardnessAndResistance(0.7F)\n+                        .sound(SoundType.WOOD).notSolid().setOpaque((state, reader, pos) -> false)\n+                        .setSuffocates((state, reader, pos) -> false).setBlocksVision((state, reader, pos) -> false))\n+                .harvestLevel(ToolType.AXE, 0).tileEntitySupplier(SieveTile::new)));\n+    }\n+\n+    private static RegistryObject<BaseBlock> createWoodBarrel(String barrel) {\n+        return BLOCKS.register(barrel, () -> new BlockBarrel(new BlockBuilder().harvestLevel(ToolType.AXE, 0)\n+                        .properties(AbstractBlock.Properties.create(Material.WOOD).hardnessAndResistance(0.75F).sound(SoundType.WOOD))\n+                        .tileEntitySupplier(WoodBarrelTile::new)));\n+    }\n+\n+    private static RegistryObject<BaseBlock> createGlassBarrel(String barrel) {\n+        return BLOCKS.register(barrel, () -> new BlockBarrel(new BlockBuilder().harvestLevel(ToolType.PICKAXE, 0)\n+                        .properties(AbstractBlock.Properties.create(Material.GLASS).hardnessAndResistance(0.75F).sound(SoundType.GLASS))\n+                        .tileEntitySupplier(StoneBarrelTile::new)));\n+    }\n }"
  },
  {
    "sha": "ece04090b663df4e20b1c5923ea295a85be5660b",
    "filename": "src/main/java/novamachina/exnihilosequentia/common/init/ExNihiloInitialization.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/NovaMachina-Mods/ExNihiloSequentia/blob/f788f92c097016ff9be1e7e9a5dfba952336ac79/src/main/java/novamachina/exnihilosequentia/common/init/ExNihiloInitialization.java",
    "raw_url": "https://github.com/NovaMachina-Mods/ExNihiloSequentia/raw/f788f92c097016ff9be1e7e9a5dfba952336ac79/src/main/java/novamachina/exnihilosequentia/common/init/ExNihiloInitialization.java",
    "contents_url": "https://api.github.com/repos/NovaMachina-Mods/ExNihiloSequentia/contents/src/main/java/novamachina/exnihilosequentia/common/init/ExNihiloInitialization.java?ref=f788f92c097016ff9be1e7e9a5dfba952336ac79",
    "patch": "@@ -51,7 +51,7 @@\n     public static final ItemGroup ITEM_GROUP = new ItemGroup(ExNihiloConstants.ModIds.EX_NIHILO_SEQUENTIA) {\n         @Override\n         public ItemStack createIcon() {\n-            return new ItemStack(ExNihiloBlocks.SIEVE.get());\n+            return new ItemStack(ExNihiloBlocks.SIEVE_WOOD.get());\n         }\n     };\n     @ObjectHolder(ExNihiloConstants.ModIds.EX_NIHILO_SEQUENTIA + \":use_hammer\")\n@@ -71,8 +71,8 @@ public static void clearRegistries(ClientPlayerNetworkEvent.LoggedOutEvent event\n \n     public static void init(IEventBus modEventBus) {\n         logger.debug(\"Initializing modded items\");\n-        ExNihiloBlocks.init(modEventBus);\n         ExNihiloItems.init(modEventBus);\n+        ExNihiloBlocks.init(modEventBus);\n         ExNihiloTiles.init(modEventBus);\n         ExNihiloFluids.init(modEventBus);\n         ExNihiloSerializers.init(modEventBus);"
  },
  {
    "sha": "9ec15cc250168dd0b44eaaabcd9e51c7b4d2549f",
    "filename": "src/main/java/novamachina/exnihilosequentia/common/init/ExNihiloItems.java",
    "status": "modified",
    "additions": 123,
    "deletions": 50,
    "changes": 173,
    "blob_url": "https://github.com/NovaMachina-Mods/ExNihiloSequentia/blob/f788f92c097016ff9be1e7e9a5dfba952336ac79/src/main/java/novamachina/exnihilosequentia/common/init/ExNihiloItems.java",
    "raw_url": "https://github.com/NovaMachina-Mods/ExNihiloSequentia/raw/f788f92c097016ff9be1e7e9a5dfba952336ac79/src/main/java/novamachina/exnihilosequentia/common/init/ExNihiloItems.java",
    "contents_url": "https://api.github.com/repos/NovaMachina-Mods/ExNihiloSequentia/contents/src/main/java/novamachina/exnihilosequentia/common/init/ExNihiloItems.java?ref=f788f92c097016ff9be1e7e9a5dfba952336ac79",
    "patch": "@@ -2,14 +2,22 @@\n \n import java.util.EnumMap;\n import java.util.Map;\n+\n+import net.minecraft.block.AbstractBlock;\n+import net.minecraft.block.Block;\n+import net.minecraft.block.SoundType;\n+import net.minecraft.block.material.Material;\n import net.minecraft.item.BlockItem;\n import net.minecraft.item.BucketItem;\n import net.minecraft.item.Item;\n import net.minecraft.item.Item.Properties;\n+import net.minecraftforge.common.ToolType;\n import net.minecraftforge.eventbus.api.IEventBus;\n import net.minecraftforge.fml.RegistryObject;\n import net.minecraftforge.registries.DeferredRegister;\n import net.minecraftforge.registries.ForgeRegistries;\n+import novamachina.exnihilosequentia.common.block.*;\n+import novamachina.exnihilosequentia.common.builder.BlockBuilder;\n import novamachina.exnihilosequentia.common.item.CookedSilkwormItem;\n import novamachina.exnihilosequentia.common.item.dolls.EnumDoll;\n import novamachina.exnihilosequentia.common.item.dolls.DollItem;\n@@ -27,6 +35,8 @@\n import novamachina.exnihilosequentia.common.item.tools.crook.EnumCrook;\n import novamachina.exnihilosequentia.common.item.tools.hammer.EnumHammer;\n import novamachina.exnihilosequentia.common.item.tools.hammer.HammerBaseItem;\n+import novamachina.exnihilosequentia.common.tileentity.barrel.StoneBarrelTile;\n+import novamachina.exnihilosequentia.common.tileentity.barrel.WoodBarrelTile;\n import novamachina.exnihilosequentia.common.utility.ExNihiloConstants;\n import novamachina.exnihilosequentia.common.utility.ExNihiloConstants.Blocks;\n import novamachina.exnihilosequentia.common.utility.ExNihiloLogger;\n@@ -36,56 +46,115 @@\n     // Begin Block Items\n     private static final DeferredRegister<Item> ITEMS = DeferredRegister.create(\n             ForgeRegistries.ITEMS, ExNihiloConstants.ModIds.EX_NIHILO_SEQUENTIA);\n-    public static final RegistryObject<Item> DUST = ITEMS\n-            .register(ExNihiloConstants.Blocks.DUST, () -> new BlockItem(ExNihiloBlocks.DUST.get(),\n-                    new Item.Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n-    public static final RegistryObject<Item> CRUSHED_NETHERRACK = ITEMS\n-            .register(ExNihiloConstants.Blocks.CRUSHED_NETHERRACK,\n-                    () -> new BlockItem(ExNihiloBlocks.CRUSHED_NETHERRACK.get(),\n-                            new Item.Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n-    public static final RegistryObject<Item> CRUSHED_END_STONE = ITEMS\n-            .register(ExNihiloConstants.Blocks.CRUSHED_END_STONE,\n-                    () -> new BlockItem(ExNihiloBlocks.CRUSHED_END_STONE.get(),\n-                            new Item.Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n-    public static final RegistryObject<Item> CRUSHED_ANDESITE = ITEMS\n-            .register(ExNihiloConstants.Blocks.CRUSHED_ANDESITE,\n-                    () -> new BlockItem(ExNihiloBlocks.CRUSHED_ANDESITE.get(),\n-                            new Item.Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n-    public static final RegistryObject<Item> CRUSHED_DIORITE = ITEMS\n-            .register(ExNihiloConstants.Blocks.CRUSHED_DIORITE,\n-                    () -> new BlockItem(ExNihiloBlocks.CRUSHED_DIORITE.get(),\n-                            new Item.Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n-    public static final RegistryObject<Item> CRUSHED_GRANITE = ITEMS\n-            .register(ExNihiloConstants.Blocks.CRUSHED_GRANITE,\n-                    () -> new BlockItem(ExNihiloBlocks.CRUSHED_GRANITE.get(),\n-                            new Item.Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n-    public static final RegistryObject<Item> END_CAKE = ITEMS\n-            .register(ExNihiloConstants.Blocks.END_CAKE, () -> new BlockItem(ExNihiloBlocks.END_CAKE.get(),\n-                    new Item.Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n-    public static final RegistryObject<Item> INFESTING_LEAVES = ITEMS\n-            .register(Blocks.INFESTING_LEAVES, () -> new BlockItem(ExNihiloBlocks.INFESTING_LEAVES.get(),\n-                    new Item.Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n-    public static final RegistryObject<Item> INFESTED_LEAVES = ITEMS\n-            .register(Blocks.INFESTED_LEAVES, () -> new BlockItem(ExNihiloBlocks.INFESTED_LEAVES.get(),\n-                    new Item.Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n-    public static final RegistryObject<Item> SIEVE = ITEMS.register(Blocks.SIEVE,\n-            () -> new BlockItem(ExNihiloBlocks.SIEVE.get(),\n-                    new Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n-    public static final RegistryObject<Item> CRUCIBLE_UNFIRED = ITEMS\n-            .register(Blocks.CRUCIBLE_UNFIRED, () -> new BlockItem(ExNihiloBlocks.CRUCIBLE_UNFIRED.get(),\n-                    new Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n-    public static final RegistryObject<Item> CRUCIBLE_FIRED = ITEMS\n-            .register(Blocks.CRUCIBLE_FIRED, () -> new BlockItem(ExNihiloBlocks.CRUCIBLE_FIRED.get(),\n-                    new Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n-    public static final RegistryObject<Item> CRUCIBLE_WOOD = ITEMS\n-            .register(Blocks.CRUCIBLE_WOOD, () -> new BlockItem(ExNihiloBlocks.CRUCIBLE_WOOD.get(),\n-                    new Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n-    public static final RegistryObject<Item> BARREL_WOOD = ITEMS\n-            .register(Blocks.BARREL_WOOD, () -> new BlockItem(ExNihiloBlocks.BARREL_WOOD.get(),\n-                    new Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n-    public static final RegistryObject<Item> BARREL_STONE = ITEMS\n-            .register(Blocks.BARREL_STONE, () -> new BlockItem(ExNihiloBlocks.BARREL_STONE.get(),\n-                    new Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n+    public static final RegistryObject<Item> DUST = ITEMS.register(Blocks.DUST,\n+            () -> new BlockItem(ExNihiloBlocks.DUST.get(), new Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n+    public static final RegistryObject<Item> CRUSHED_NETHERRACK = ITEMS.register(Blocks.CRUSHED_NETHERRACK,\n+            () -> new BlockItem(ExNihiloBlocks.CRUSHED_NETHERRACK.get(), new Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n+    public static final RegistryObject<Item> CRUSHED_END_STONE = ITEMS.register(Blocks.CRUSHED_END_STONE,\n+            () -> new BlockItem(ExNihiloBlocks.CRUSHED_END_STONE.get(), new Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n+    public static final RegistryObject<Item> CRUSHED_ANDESITE = ITEMS.register(Blocks.CRUSHED_ANDESITE,\n+            () -> new BlockItem(ExNihiloBlocks.CRUSHED_ANDESITE.get(), new Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n+    public static final RegistryObject<Item> CRUSHED_DIORITE = ITEMS.register(Blocks.CRUSHED_DIORITE,\n+            () -> new BlockItem(ExNihiloBlocks.CRUSHED_DIORITE.get(), new Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n+    public static final RegistryObject<Item> CRUSHED_GRANITE = ITEMS.register(Blocks.CRUSHED_GRANITE,\n+            () -> new BlockItem(ExNihiloBlocks.CRUSHED_GRANITE.get(), new Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n+    public static final RegistryObject<Item> END_CAKE = ITEMS.register(Blocks.END_CAKE,\n+            () -> new BlockItem(ExNihiloBlocks.END_CAKE.get(), new Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n+    public static final RegistryObject<Item> INFESTING_LEAVES = ITEMS.register(Blocks.INFESTING_LEAVES,\n+            () -> new BlockItem(ExNihiloBlocks.INFESTING_LEAVES.get(), new Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n+    public static final RegistryObject<Item> INFESTED_LEAVES = ITEMS.register(Blocks.INFESTED_LEAVES,\n+            () -> new BlockItem(ExNihiloBlocks.INFESTED_LEAVES.get(), new Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n+    //TODO wooden sieves\n+    public static final RegistryObject<Item> SIEVE_CRIMSON = ITEMS.register(Blocks.SIEVE_CRIMSON,\n+            () -> new BlockItem(ExNihiloBlocks.SIEVE_CRIMSON.get(), new Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n+    public static final RegistryObject<Item> SIEVE_WARPED = ITEMS.register(Blocks.SIEVE_WARPED,\n+            () -> new BlockItem(ExNihiloBlocks.SIEVE_WARPED.get(), new Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n+    public static final RegistryObject<Item> SIEVE_ACACIA = ITEMS.register(Blocks.SIEVE_ACACIA,\n+            () -> new BlockItem(ExNihiloBlocks.SIEVE_ACACIA.get(), new Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n+    public static final RegistryObject<Item> SIEVE_BIRCH = ITEMS.register(Blocks.SIEVE_BIRCH,\n+            () -> new BlockItem(ExNihiloBlocks.SIEVE_BIRCH.get(), new Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n+    public static final RegistryObject<Item> SIEVE_DARK_OAK = ITEMS.register(Blocks.SIEVE_DARK_OAK,\n+            () -> new BlockItem(ExNihiloBlocks.SIEVE_DARK_OAK.get(), new Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n+    public static final RegistryObject<Item> SIEVE_JUNGLE = ITEMS.register(Blocks.SIEVE_JUNGLE,\n+            () -> new BlockItem(ExNihiloBlocks.SIEVE_JUNGLE.get(), new Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n+    public static final RegistryObject<Item> SIEVE_SPRUCE = ITEMS.register(Blocks.SIEVE_SPRUCE,\n+            () -> new BlockItem(ExNihiloBlocks.SIEVE_SPRUCE.get(), new Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n+    public static final RegistryObject<Item> SIEVE_OAK = ITEMS.register(Blocks.SIEVE_OAK,\n+            () -> new BlockItem(ExNihiloBlocks.SIEVE_WOOD.get(), new Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n+    public static final RegistryObject<Item> CRUCIBLE_UNFIRED = ITEMS.register(Blocks.CRUCIBLE_UNFIRED,\n+            () -> new BlockItem(ExNihiloBlocks.CRUCIBLE_UNFIRED.get(), new Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n+    public static final RegistryObject<Item> CRUCIBLE_FIRED = ITEMS.register(Blocks.CRUCIBLE_FIRED,\n+            () -> new BlockItem(ExNihiloBlocks.CRUCIBLE_FIRED.get(), new Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n+    //TODO Wooden Crucibles\n+    public static final RegistryObject<Item> CRUCIBLE_ACACIA = ITEMS.register(Blocks.CRUCIBLE_ACACIA,\n+            () -> new BlockItem(ExNihiloBlocks.CRUCIBLE_ACACIA.get(), new Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n+    public static final RegistryObject<Item> CRUCIBLE_BIRCH = ITEMS.register(Blocks.CRUCIBLE_BIRCH,\n+            () -> new BlockItem(ExNihiloBlocks.CRUCIBLE_BIRCH.get(), new Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n+    public static final RegistryObject<Item> CRUCIBLE_DARK_OAK = ITEMS.register(Blocks.CRUCIBLE_DARK_OAK,\n+            () -> new BlockItem(ExNihiloBlocks.CRUCIBLE_DARK_OAK.get(), new Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n+    public static final RegistryObject<Item> CRUCIBLE_JUNGLE = ITEMS.register(Blocks.CRUCIBLE_JUNGLE,\n+            () -> new BlockItem(ExNihiloBlocks.CRUCIBLE_JUNGLE.get(), new Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n+    public static final RegistryObject<Item> CRUCIBLE_SPRUCE = ITEMS.register(Blocks.CRUCIBLE_SPRUCE,\n+            () -> new BlockItem(ExNihiloBlocks.CRUCIBLE_SPRUCE.get(), new Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n+    public static final RegistryObject<Item> CRUCIBLE_OAK = ITEMS.register(Blocks.CRUCIBLE_OAK,\n+            () -> new BlockItem(ExNihiloBlocks.CRUCIBLE_WOOD.get(), new Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n+    public static final RegistryObject<Item> CRUCIBLE_CRIMSON = ITEMS.register(Blocks.CRUCIBLE_CRIMSON,\n+            () -> new BlockItem(ExNihiloBlocks.CRUCIBLE_CRIMSON.get(), new Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n+    public static final RegistryObject<Item> CRUCIBLE_WARPED = ITEMS.register(Blocks.CRUCIBLE_WARPED,\n+            () -> new BlockItem(ExNihiloBlocks.CRUCIBLE_WARPED.get(), new Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n+    //TODO Wooden Barrels\n+    public static final RegistryObject<Item> BARREL_ACACIA = ITEMS.register(Blocks.BARREL_ACACIA,\n+            () -> new BlockItem(ExNihiloBlocks.BARREL_ACACIA.get(), new Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n+    public static final RegistryObject<Item> BARREL_BIRCH = ITEMS.register(Blocks.BARREL_BIRCH,\n+            () -> new BlockItem(ExNihiloBlocks.BARREL_BIRCH.get(), new Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n+    public static final RegistryObject<Item> BARREL_DARK_OAK = ITEMS.register(Blocks.BARREL_DARK_OAK,\n+            () -> new BlockItem(ExNihiloBlocks.BARREL_DARK_OAK.get(), new Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n+    public static final RegistryObject<Item> BARREL_JUNGLE = ITEMS.register(Blocks.BARREL_JUNGLE,\n+            () -> new BlockItem(ExNihiloBlocks.BARREL_JUNGLE.get(), new Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n+    public static final RegistryObject<Item> BARREL_SPRUCE = ITEMS.register(Blocks.BARREL_SPRUCE,\n+            () -> new BlockItem(ExNihiloBlocks.BARREL_SPRUCE.get(), new Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n+    public static final RegistryObject<Item> BARREL_OAK = ITEMS.register(Blocks.BARREL_OAK,\n+            () -> new BlockItem(ExNihiloBlocks.BARREL_WOOD.get(), new Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n+    public static final RegistryObject<Item> BARREL_CRIMSON = ITEMS.register(Blocks.BARREL_CRIMSON,\n+            () -> new BlockItem(ExNihiloBlocks.BARREL_CRIMSON.get(), new Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n+    public static final RegistryObject<Item> BARREL_WARPED = ITEMS.register(Blocks.BARREL_WARPED,\n+            () -> new BlockItem(ExNihiloBlocks.BARREL_WARPED.get(), new Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n+    public static final RegistryObject<Item> BARREL_STONE = ITEMS.register(Blocks.BARREL_STONE,\n+            () -> new BlockItem(ExNihiloBlocks.BARREL_STONE.get(), new Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n+    public static final RegistryObject<Item> BARREL_GLASS = ITEMS.register(Blocks.BARREL_GLASS,\n+            () -> new BlockItem(ExNihiloBlocks.BARREL_GLASS.get(), new Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n+    public static final RegistryObject<Item> BARREL_GLASS_WHITE = ITEMS.register(Blocks.BARREL_GLASS_WHITE,\n+            () -> new BlockItem(ExNihiloBlocks.BARREL_GLASS_WHITE.get(), new Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n+    public static final RegistryObject<Item> BARREL_GLASS_GRAY = ITEMS.register(Blocks.BARREL_GLASS_GRAY,\n+            () -> new BlockItem(ExNihiloBlocks.BARREL_GLASS_GRAY.get(), new Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n+    public static final RegistryObject<Item> BARREL_GLASS_LIGHT_GRAY = ITEMS.register(Blocks.BARREL_GLASS_LIGHT_GRAY,\n+            () -> new BlockItem(ExNihiloBlocks.BARREL_GLASS_LIGHT_GRAY.get(), new Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n+    public static final RegistryObject<Item> BARREL_GLASS_BLACK = ITEMS.register(Blocks.BARREL_GLASS_BLACK,\n+            () -> new BlockItem(ExNihiloBlocks.BARREL_GLASS_BLACK.get(), new Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n+    public static final RegistryObject<Item> BARREL_GLASS_BROWN = ITEMS.register(Blocks.BARREL_GLASS_BROWN,\n+            () -> new BlockItem(ExNihiloBlocks.BARREL_GLASS_BROWN.get(), new Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n+    public static final RegistryObject<Item> BARREL_GLASS_RED = ITEMS.register(Blocks.BARREL_GLASS_RED,\n+            () -> new BlockItem(ExNihiloBlocks.BARREL_GLASS_RED.get(), new Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n+    public static final RegistryObject<Item> BARREL_GLASS_MAGENTA = ITEMS.register(Blocks.BARREL_GLASS_MAGENTA,\n+            () -> new BlockItem(ExNihiloBlocks.BARREL_GLASS_MAGENTA.get(), new Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n+    public static final RegistryObject<Item> BARREL_GLASS_ORANGE = ITEMS.register(Blocks.BARREL_GLASS_ORANGE,\n+            () -> new BlockItem(ExNihiloBlocks.BARREL_GLASS_ORANGE.get(), new Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n+    public static final RegistryObject<Item> BARREL_GLASS_PINK = ITEMS.register(Blocks.BARREL_GLASS_PINK,\n+            () -> new BlockItem(ExNihiloBlocks.BARREL_GLASS_PINK.get(), new Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n+    public static final RegistryObject<Item> BARREL_GLASS_PURPLE = ITEMS.register(Blocks.BARREL_GLASS_PURPLE,\n+            () -> new BlockItem(ExNihiloBlocks.BARREL_GLASS_PURPLE.get(), new Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n+    public static final RegistryObject<Item> BARREL_GLASS_YELLOW = ITEMS.register(Blocks.BARREL_GLASS_YELLOW,\n+            () -> new BlockItem(ExNihiloBlocks.BARREL_GLASS_YELLOW.get(), new Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n+    public static final RegistryObject<Item> BARREL_GLASS_LIME = ITEMS.register(Blocks.BARREL_GLASS_LIME,\n+            () -> new BlockItem(ExNihiloBlocks.BARREL_GLASS_LIME.get(), new Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n+    public static final RegistryObject<Item> BARREL_GLASS_GREEN = ITEMS.register(Blocks.BARREL_GLASS_GREEN,\n+            () -> new BlockItem(ExNihiloBlocks.BARREL_GLASS_GREEN.get(), new Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n+    public static final RegistryObject<Item> BARREL_GLASS_LIGHT_BLUE = ITEMS.register(Blocks.BARREL_GLASS_LIGHT_BLUE,\n+            () -> new BlockItem(ExNihiloBlocks.BARREL_GLASS_LIGHT_BLUE.get(), new Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n+    public static final RegistryObject<Item> BARREL_GLASS_CYAN = ITEMS.register(Blocks.BARREL_GLASS_CYAN,\n+            () -> new BlockItem(ExNihiloBlocks.BARREL_GLASS_CYAN.get(), new Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n+    public static final RegistryObject<Item> BARREL_GLASS_BLUE = ITEMS.register(Blocks.BARREL_GLASS_BLUE,\n+            () -> new BlockItem(ExNihiloBlocks.BARREL_GLASS_BLUE.get(), new Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n     // Begin Items Only\n     public static final RegistryObject<Item> COOKED_SILKWORM = ITEMS\n             .register(ExNihiloConstants.Items.COOKED_SILKWORM, CookedSilkwormItem::new);\n@@ -165,4 +234,8 @@ public static void init(IEventBus modEventBus) {\n         logger.debug(\"Register items\");\n         ITEMS.register(modEventBus);\n     }\n+\n+    /*private static RegistryObject<Item> createItemBlocks(String name, Block object) {\n+        return ITEMS.register(name, () -> new BlockItem(object, new Properties().group(ExNihiloInitialization.ITEM_GROUP)));\n+    }*/\n }"
  },
  {
    "sha": "397009ef853c09b4c3d78b97ef20dfd38c50b992",
    "filename": "src/main/java/novamachina/exnihilosequentia/common/init/ExNihiloTiles.java",
    "status": "modified",
    "additions": 12,
    "deletions": 12,
    "changes": 24,
    "blob_url": "https://github.com/NovaMachina-Mods/ExNihiloSequentia/blob/f788f92c097016ff9be1e7e9a5dfba952336ac79/src/main/java/novamachina/exnihilosequentia/common/init/ExNihiloTiles.java",
    "raw_url": "https://github.com/NovaMachina-Mods/ExNihiloSequentia/raw/f788f92c097016ff9be1e7e9a5dfba952336ac79/src/main/java/novamachina/exnihilosequentia/common/init/ExNihiloTiles.java",
    "contents_url": "https://api.github.com/repos/NovaMachina-Mods/ExNihiloSequentia/contents/src/main/java/novamachina/exnihilosequentia/common/init/ExNihiloTiles.java?ref=f788f92c097016ff9be1e7e9a5dfba952336ac79",
    "patch": "@@ -8,9 +8,7 @@\n import novamachina.exnihilosequentia.common.tileentity.InfestedLeavesTile;\n import novamachina.exnihilosequentia.common.tileentity.InfestingLeavesTile;\n import novamachina.exnihilosequentia.common.tileentity.SieveTile;\n-import novamachina.exnihilosequentia.common.tileentity.barrel.AbstractBarrelTile;\n-import novamachina.exnihilosequentia.common.tileentity.barrel.StoneBarrelTile;\n-import novamachina.exnihilosequentia.common.tileentity.barrel.WoodBarrelTile;\n+import novamachina.exnihilosequentia.common.tileentity.barrel.*;\n import novamachina.exnihilosequentia.common.tileentity.crucible.FiredCrucibleTile;\n import novamachina.exnihilosequentia.common.tileentity.crucible.WoodCrucibleTile;\n import novamachina.exnihilosequentia.common.utility.ExNihiloConstants;\n@@ -24,24 +22,26 @@\n     public static final RegistryObject<TileEntityType<FiredCrucibleTile>> CRUCIBLE_FIRED = TILES\n             .register(Blocks.CRUCIBLE_UNFIRED, () -> TileEntityType.Builder\n                     .create(FiredCrucibleTile::new, ExNihiloBlocks.CRUCIBLE_FIRED.get()).build(null));\n+    //TODO is this right???\n     public static final RegistryObject<TileEntityType<WoodCrucibleTile>> CRUCIBLE_WOOD = TILES\n-            .register(Blocks.CRUCIBLE_WOOD, () -> TileEntityType.Builder\n+            .register(Blocks.CRUCIBLE_OAK, () -> TileEntityType.Builder\n                     .create(WoodCrucibleTile::new, ExNihiloBlocks.CRUCIBLE_WOOD.get()).build(null));\n     public static final RegistryObject<TileEntityType<SieveTile>> SIEVE = TILES\n-            .register(Blocks.SIEVE, () -> TileEntityType.Builder\n-                    .create(SieveTile::new, ExNihiloBlocks.SIEVE.get()).build(null));\n+            .register(Blocks.SIEVE_OAK, () -> TileEntityType.Builder\n+                    .create(SieveTile::new, ExNihiloBlocks.SIEVE_WOOD.get()).build(null));\n+    public static final RegistryObject<TileEntityType<? extends AbstractBarrelTile>> BARREL_WOOD = TILES\n+            .register(Blocks.BARREL_OAK, () -> TileEntityType.Builder\n+                    .create(WoodBarrelTile::new, ExNihiloBlocks.BARREL_WOOD.get()).build(null));\n+    //TODO until here\n+    public static final RegistryObject<TileEntityType<? extends AbstractBarrelTile>> BARREL_STONE = TILES\n+            .register(Blocks.BARREL_STONE, () -> TileEntityType.Builder\n+                    .create(StoneBarrelTile::new, ExNihiloBlocks.BARREL_STONE.get()).build(null));\n     public static final RegistryObject<TileEntityType<InfestingLeavesTile>> INFESTING_LEAVES = TILES\n             .register(Blocks.INFESTING_LEAVES, () -> TileEntityType.Builder\n                     .create(InfestingLeavesTile::new, ExNihiloBlocks.INFESTING_LEAVES.get()).build(null));\n     public static final RegistryObject<TileEntityType<InfestedLeavesTile>> INFESTED_LEAVES = TILES\n             .register(Blocks.INFESTED_LEAVES, () -> TileEntityType.Builder\n                     .create(InfestedLeavesTile::new, ExNihiloBlocks.INFESTED_LEAVES.get()).build(null));\n-    public static final RegistryObject<TileEntityType<? extends AbstractBarrelTile>> BARREL_WOOD = TILES\n-            .register(Blocks.BARREL_WOOD, () -> TileEntityType.Builder\n-                    .create(WoodBarrelTile::new, ExNihiloBlocks.BARREL_WOOD.get()).build(null));\n-    public static final RegistryObject<TileEntityType<? extends AbstractBarrelTile>> BARREL_STONE = TILES\n-            .register(Blocks.BARREL_STONE, () -> TileEntityType.Builder\n-                    .create(StoneBarrelTile::new, ExNihiloBlocks.BARREL_STONE.get()).build(null));\n     private static final ExNihiloLogger logger = new ExNihiloLogger(LogManager.getLogger());\n \n     private ExNihiloTiles() {"
  },
  {
    "sha": "d70faee3916e827f96432b6d3bfdee207e943dce",
    "filename": "src/main/java/novamachina/exnihilosequentia/common/registries/FluidOnTopRegistry.java",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/NovaMachina-Mods/ExNihiloSequentia/blob/f788f92c097016ff9be1e7e9a5dfba952336ac79/src/main/java/novamachina/exnihilosequentia/common/registries/FluidOnTopRegistry.java",
    "raw_url": "https://github.com/NovaMachina-Mods/ExNihiloSequentia/raw/f788f92c097016ff9be1e7e9a5dfba952336ac79/src/main/java/novamachina/exnihilosequentia/common/registries/FluidOnTopRegistry.java",
    "contents_url": "https://api.github.com/repos/NovaMachina-Mods/ExNihiloSequentia/contents/src/main/java/novamachina/exnihilosequentia/common/registries/FluidOnTopRegistry.java?ref=f788f92c097016ff9be1e7e9a5dfba952336ac79",
    "patch": "@@ -1,9 +1,11 @@\n package novamachina.exnihilosequentia.common.registries;\n \n+import net.minecraftforge.fluids.FluidAttributes;\n import novamachina.exnihilosequentia.api.crafting.fluidontop.FluidOnTopRecipe;\n import net.minecraft.fluid.Fluid;\n import net.minecraft.item.ItemStack;\n import novamachina.exnihilosequentia.api.registry.IFluidOnTopRegistry;\n+import novamachina.exnihilosequentia.common.tileentity.barrel.BarrelFluidHandler;\n import novamachina.exnihilosequentia.common.utility.ExNihiloLogger;\n import org.apache.logging.log4j.LogManager;\n "
  },
  {
    "sha": "840052104b37ccb6ed472c39262b43e9fd3e0308",
    "filename": "src/main/java/novamachina/exnihilosequentia/common/utility/ExNihiloConstants.java",
    "status": "modified",
    "additions": 41,
    "deletions": 3,
    "changes": 44,
    "blob_url": "https://github.com/NovaMachina-Mods/ExNihiloSequentia/blob/f788f92c097016ff9be1e7e9a5dfba952336ac79/src/main/java/novamachina/exnihilosequentia/common/utility/ExNihiloConstants.java",
    "raw_url": "https://github.com/NovaMachina-Mods/ExNihiloSequentia/raw/f788f92c097016ff9be1e7e9a5dfba952336ac79/src/main/java/novamachina/exnihilosequentia/common/utility/ExNihiloConstants.java",
    "contents_url": "https://api.github.com/repos/NovaMachina-Mods/ExNihiloSequentia/contents/src/main/java/novamachina/exnihilosequentia/common/utility/ExNihiloConstants.java?ref=f788f92c097016ff9be1e7e9a5dfba952336ac79",
    "patch": "@@ -22,11 +22,42 @@ private BarrelModes() {\n \n     public static class Blocks {\n \n+        public static final String BARREL_CRIMSON = \"barrel_crimson\";\n+        public static final String BARREL_WARPED = \"barrel_warped\";\n+        public static final String BARREL_ACACIA = \"barrel_acacia\";\n+        public static final String BARREL_BIRCH = \"barrel_birch\";\n+        public static final String BARREL_DARK_OAK = \"barrel_dark_oak\";\n+        public static final String BARREL_JUNGLE = \"barrel_jungle\";\n+        public static final String BARREL_SPRUCE = \"barrel_spruce\";\n+        public static final String BARREL_OAK = \"barrel_oak\";\n         public static final String BARREL_STONE = \"barrel_stone\";\n-        public static final String BARREL_WOOD = \"barrel_wood\";\n+        public static final String BARREL_GLASS = \"barrel_glass\";\n+        public static final String BARREL_GLASS_WHITE = \"barrel_glass_white\";\n+        public static final String BARREL_GLASS_GRAY = \"barrel_glass_gray\";\n+        public static final String BARREL_GLASS_LIGHT_GRAY = \"barrel_glass_light_gray\";\n+        public static final String BARREL_GLASS_BLACK = \"barrel_glass_black\";\n+        public static final String BARREL_GLASS_BROWN = \"barrel_glass_brown\";\n+        public static final String BARREL_GLASS_RED = \"barrel_glass_red\";\n+        public static final String BARREL_GLASS_MAGENTA = \"barrel_glass_magenta\";\n+        public static final String BARREL_GLASS_ORANGE = \"barrel_glass_orange\";\n+        public static final String BARREL_GLASS_PINK = \"barrel_glass_pink\";\n+        public static final String BARREL_GLASS_PURPLE = \"barrel_glass_purple\";\n+        public static final String BARREL_GLASS_YELLOW = \"barrel_glass_yellow\";\n+        public static final String BARREL_GLASS_LIME = \"barrel_glass_lime\";\n+        public static final String BARREL_GLASS_GREEN = \"barrel_glass_green\";\n+        public static final String BARREL_GLASS_LIGHT_BLUE = \"barrel_glass_light_blue\";\n+        public static final String BARREL_GLASS_CYAN = \"barrel_glass_cyan\";\n+        public static final String BARREL_GLASS_BLUE = \"barrel_glass_blue\";\n         public static final String CRUCIBLE_FIRED = \"crucible_fired\";\n         public static final String CRUCIBLE_UNFIRED = \"crucible_unfired\";\n-        public static final String CRUCIBLE_WOOD = \"crucible_wood\";\n+        public static final String CRUCIBLE_ACACIA = \"crucible_acacia\";\n+        public static final String CRUCIBLE_BIRCH = \"crucible_birch\";\n+        public static final String CRUCIBLE_DARK_OAK = \"crucible_dark_oak\";\n+        public static final String CRUCIBLE_JUNGLE = \"crucible_jungle\";\n+        public static final String CRUCIBLE_SPRUCE = \"crucible_spruce\";\n+        public static final String CRUCIBLE_OAK = \"crucible_oak\";\n+        public static final String CRUCIBLE_CRIMSON = \"crucible_crimson\";\n+        public static final String CRUCIBLE_WARPED = \"crucible_warped\";\n         public static final String CRUSHED_ANDESITE = \"crushed_andesite\";\n         public static final String CRUSHED_DIORITE = \"crushed_diorite\";\n         public static final String CRUSHED_END_STONE = \"crushed_end_stone\";\n@@ -37,7 +68,14 @@ private BarrelModes() {\n         public static final String INFESTED_LEAVES = \"infested_leaves\";\n         public static final String INFESTING_LEAVES = \"infesting_leaves\";\n         public static final String SEA_WATER = \"sea_water\";\n-        public static final String SIEVE = \"sieve\";\n+        public static final String SIEVE_ACACIA = \"sieve_acacia\";\n+        public static final String SIEVE_BIRCH = \"sieve_birch\";\n+        public static final String SIEVE_DARK_OAK = \"sieve_dark_oak\";\n+        public static final String SIEVE_JUNGLE = \"sieve_jungle\";\n+        public static final String SIEVE_SPRUCE = \"sieve_spruce\";\n+        public static final String SIEVE_OAK = \"sieve_oak\";\n+        public static final String SIEVE_CRIMSON = \"sieve_crimson\";\n+        public static final String SIEVE_WARPED = \"sieve_warped\";\n         public static final String WITCH_WATER = \"witchwater\";\n \n         private Blocks() {"
  },
  {
    "sha": "2cd66beaf66caa7c2e448bbb1956ee7358d5fd02",
    "filename": "src/main/resources/assets/exnihilosequentia/blockstates/barrel_acacia.json",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/NovaMachina-Mods/ExNihiloSequentia/blob/f788f92c097016ff9be1e7e9a5dfba952336ac79/src/main/resources/assets/exnihilosequentia/blockstates/barrel_acacia.json",
    "raw_url": "https://github.com/NovaMachina-Mods/ExNihiloSequentia/raw/f788f92c097016ff9be1e7e9a5dfba952336ac79/src/main/resources/assets/exnihilosequentia/blockstates/barrel_acacia.json",
    "contents_url": "https://api.github.com/repos/NovaMachina-Mods/ExNihiloSequentia/contents/src/main/resources/assets/exnihilosequentia/blockstates/barrel_acacia.json?ref=f788f92c097016ff9be1e7e9a5dfba952336ac79",
    "patch": "@@ -0,0 +1,7 @@\n+{\n+  \"variants\": {\n+    \"\": {\n+      \"model\": \"exnihilosequentia:block/barrel_acacia\"\n+    }\n+  }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "d1e67fda864bfacaabe877ac76d7069811d766cf",
    "filename": "src/main/resources/assets/exnihilosequentia/blockstates/barrel_birch.json",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/NovaMachina-Mods/ExNihiloSequentia/blob/f788f92c097016ff9be1e7e9a5dfba952336ac79/src/main/resources/assets/exnihilosequentia/blockstates/barrel_birch.json",
    "raw_url": "https://github.com/NovaMachina-Mods/ExNihiloSequentia/raw/f788f92c097016ff9be1e7e9a5dfba952336ac79/src/main/resources/assets/exnihilosequentia/blockstates/barrel_birch.json",
    "contents_url": "https://api.github.com/repos/NovaMachina-Mods/ExNihiloSequentia/contents/src/main/resources/assets/exnihilosequentia/blockstates/barrel_birch.json?ref=f788f92c097016ff9be1e7e9a5dfba952336ac79",
    "patch": "@@ -0,0 +1,7 @@\n+{\n+  \"variants\": {\n+    \"\": {\n+      \"model\": \"exnihilosequentia:block/barrel_birch\"\n+    }\n+  }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "0bb326a2af80fa77da799f0e8c3a69a70a0093b3",
    "filename": "src/main/resources/assets/exnihilosequentia/blockstates/barrel_crimson.json",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/NovaMachina-Mods/ExNihiloSequentia/blob/f788f92c097016ff9be1e7e9a5dfba952336ac79/src/main/resources/assets/exnihilosequentia/blockstates/barrel_crimson.json",
    "raw_url": "https://github.com/NovaMachina-Mods/ExNihiloSequentia/raw/f788f92c097016ff9be1e7e9a5dfba952336ac79/src/main/resources/assets/exnihilosequentia/blockstates/barrel_crimson.json",
    "contents_url": "https://api.github.com/repos/NovaMachina-Mods/ExNihiloSequentia/contents/src/main/resources/assets/exnihilosequentia/blockstates/barrel_crimson.json?ref=f788f92c097016ff9be1e7e9a5dfba952336ac79",
    "patch": "@@ -0,0 +1,7 @@\n+{\n+  \"variants\": {\n+    \"\": {\n+      \"model\": \"exnihilosequentia:block/barrel_crimson\"\n+    }\n+  }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "ec42e082f39e689d98483030ce4193fff5e76c39",
    "filename": "src/main/resources/assets/exnihilosequentia/blockstates/barrel_dark_oak.json",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/NovaMachina-Mods/ExNihiloSequentia/blob/f788f92c097016ff9be1e7e9a5dfba952336ac79/src/main/resources/assets/exnihilosequentia/blockstates/barrel_dark_oak.json",
    "raw_url": "https://github.com/NovaMachina-Mods/ExNihiloSequentia/raw/f788f92c097016ff9be1e7e9a5dfba952336ac79/src/main/resources/assets/exnihilosequentia/blockstates/barrel_dark_oak.json",
    "contents_url": "https://api.github.com/repos/NovaMachina-Mods/ExNihiloSequentia/contents/src/main/resources/assets/exnihilosequentia/blockstates/barrel_dark_oak.json?ref=f788f92c097016ff9be1e7e9a5dfba952336ac79",
    "patch": "@@ -0,0 +1,7 @@\n+{\n+  \"variants\": {\n+    \"\": {\n+      \"model\": \"exnihilosequentia:block/barrel_dark_oak\"\n+    }\n+  }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "158876e70e7657ab8e3bd9400cffe167d8a1daae",
    "filename": "src/main/resources/assets/exnihilosequentia/blockstates/barrel_glass.json",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/NovaMachina-Mods/ExNihiloSequentia/blob/f788f92c097016ff9be1e7e9a5dfba952336ac79/src/main/resources/assets/exnihilosequentia/blockstates/barrel_glass.json",
    "raw_url": "https://github.com/NovaMachina-Mods/ExNihiloSequentia/raw/f788f92c097016ff9be1e7e9a5dfba952336ac79/src/main/resources/assets/exnihilosequentia/blockstates/barrel_glass.json",
    "contents_url": "https://api.github.com/repos/NovaMachina-Mods/ExNihiloSequentia/contents/src/main/resources/assets/exnihilosequentia/blockstates/barrel_glass.json?ref=f788f92c097016ff9be1e7e9a5dfba952336ac79",
    "patch": "@@ -0,0 +1,7 @@\n+{\n+  \"variants\": {\n+    \"\": {\n+      \"model\": \"exnihilosequentia:block/barrel_glass\"\n+    }\n+  }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "f713b84d9f718af42e9aadc0ef7ccad4a75c0f68",
    "filename": "src/main/resources/assets/exnihilosequentia/blockstates/barrel_glass_black.json",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/NovaMachina-Mods/ExNihiloSequentia/blob/f788f92c097016ff9be1e7e9a5dfba952336ac79/src/main/resources/assets/exnihilosequentia/blockstates/barrel_glass_black.json",
    "raw_url": "https://github.com/NovaMachina-Mods/ExNihiloSequentia/raw/f788f92c097016ff9be1e7e9a5dfba952336ac79/src/main/resources/assets/exnihilosequentia/blockstates/barrel_glass_black.json",
    "contents_url": "https://api.github.com/repos/NovaMachina-Mods/ExNihiloSequentia/contents/src/main/resources/assets/exnihilosequentia/blockstates/barrel_glass_black.json?ref=f788f92c097016ff9be1e7e9a5dfba952336ac79",
    "patch": "@@ -0,0 +1,7 @@\n+{\n+  \"variants\": {\n+    \"\": {\n+      \"model\": \"exnihilosequentia:block/barrel_glass_black\"\n+    }\n+  }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "45379aed7a58b66f27347d09b8c9f311b29b59ee",
    "filename": "src/main/resources/assets/exnihilosequentia/blockstates/barrel_glass_blue.json",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/NovaMachina-Mods/ExNihiloSequentia/blob/f788f92c097016ff9be1e7e9a5dfba952336ac79/src/main/resources/assets/exnihilosequentia/blockstates/barrel_glass_blue.json",
    "raw_url": "https://github.com/NovaMachina-Mods/ExNihiloSequentia/raw/f788f92c097016ff9be1e7e9a5dfba952336ac79/src/main/resources/assets/exnihilosequentia/blockstates/barrel_glass_blue.json",
    "contents_url": "https://api.github.com/repos/NovaMachina-Mods/ExNihiloSequentia/contents/src/main/resources/assets/exnihilosequentia/blockstates/barrel_glass_blue.json?ref=f788f92c097016ff9be1e7e9a5dfba952336ac79",
    "patch": "@@ -0,0 +1,7 @@\n+{\n+  \"variants\": {\n+    \"\": {\n+      \"model\": \"exnihilosequentia:block/barrel_glass_blue\"\n+    }\n+  }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "fc061bd8f07eaa198cb204cd1b3f904f4b272a0b",
    "filename": "src/main/resources/assets/exnihilosequentia/blockstates/barrel_glass_brown.json",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/NovaMachina-Mods/ExNihiloSequentia/blob/f788f92c097016ff9be1e7e9a5dfba952336ac79/src/main/resources/assets/exnihilosequentia/blockstates/barrel_glass_brown.json",
    "raw_url": "https://github.com/NovaMachina-Mods/ExNihiloSequentia/raw/f788f92c097016ff9be1e7e9a5dfba952336ac79/src/main/resources/assets/exnihilosequentia/blockstates/barrel_glass_brown.json",
    "contents_url": "https://api.github.com/repos/NovaMachina-Mods/ExNihiloSequentia/contents/src/main/resources/assets/exnihilosequentia/blockstates/barrel_glass_brown.json?ref=f788f92c097016ff9be1e7e9a5dfba952336ac79",
    "patch": "@@ -0,0 +1,7 @@\n+{\n+  \"variants\": {\n+    \"\": {\n+      \"model\": \"exnihilosequentia:block/barrel_glass_brown\"\n+    }\n+  }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "85141fbaf0560cb4285ea25d3118554b20b5da20",
    "filename": "src/main/resources/assets/exnihilosequentia/blockstates/barrel_glass_cyan.json",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/NovaMachina-Mods/ExNihiloSequentia/blob/f788f92c097016ff9be1e7e9a5dfba952336ac79/src/main/resources/assets/exnihilosequentia/blockstates/barrel_glass_cyan.json",
    "raw_url": "https://github.com/NovaMachina-Mods/ExNihiloSequentia/raw/f788f92c097016ff9be1e7e9a5dfba952336ac79/src/main/resources/assets/exnihilosequentia/blockstates/barrel_glass_cyan.json",
    "contents_url": "https://api.github.com/repos/NovaMachina-Mods/ExNihiloSequentia/contents/src/main/resources/assets/exnihilosequentia/blockstates/barrel_glass_cyan.json?ref=f788f92c097016ff9be1e7e9a5dfba952336ac79",
    "patch": "@@ -0,0 +1,7 @@\n+{\n+  \"variants\": {\n+    \"\": {\n+      \"model\": \"exnihilosequentia:block/barrel_glass_cyan\"\n+    }\n+  }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "6bcc8ac6d9828c9800301e6ce0dd3b6264718b37",
    "filename": "src/main/resources/assets/exnihilosequentia/blockstates/barrel_glass_gray.json",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/NovaMachina-Mods/ExNihiloSequentia/blob/f788f92c097016ff9be1e7e9a5dfba952336ac79/src/main/resources/assets/exnihilosequentia/blockstates/barrel_glass_gray.json",
    "raw_url": "https://github.com/NovaMachina-Mods/ExNihiloSequentia/raw/f788f92c097016ff9be1e7e9a5dfba952336ac79/src/main/resources/assets/exnihilosequentia/blockstates/barrel_glass_gray.json",
    "contents_url": "https://api.github.com/repos/NovaMachina-Mods/ExNihiloSequentia/contents/src/main/resources/assets/exnihilosequentia/blockstates/barrel_glass_gray.json?ref=f788f92c097016ff9be1e7e9a5dfba952336ac79",
    "patch": "@@ -0,0 +1,7 @@\n+{\n+  \"variants\": {\n+    \"\": {\n+      \"model\": \"exnihilosequentia:block/barrel_glass_gray\"\n+    }\n+  }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "2bde2bfeaa89592b0892ed383ffe3af8cbe88ede",
    "filename": "src/main/resources/assets/exnihilosequentia/blockstates/barrel_glass_green.json",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/NovaMachina-Mods/ExNihiloSequentia/blob/f788f92c097016ff9be1e7e9a5dfba952336ac79/src/main/resources/assets/exnihilosequentia/blockstates/barrel_glass_green.json",
    "raw_url": "https://github.com/NovaMachina-Mods/ExNihiloSequentia/raw/f788f92c097016ff9be1e7e9a5dfba952336ac79/src/main/resources/assets/exnihilosequentia/blockstates/barrel_glass_green.json",
    "contents_url": "https://api.github.com/repos/NovaMachina-Mods/ExNihiloSequentia/contents/src/main/resources/assets/exnihilosequentia/blockstates/barrel_glass_green.json?ref=f788f92c097016ff9be1e7e9a5dfba952336ac79",
    "patch": "@@ -0,0 +1,7 @@\n+{\n+  \"variants\": {\n+    \"\": {\n+      \"model\": \"exnihilosequentia:block/barrel_glass_green\"\n+    }\n+  }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "973cfa4334ea237e6e134a719fb0be47b4ccbdf1",
    "filename": "src/main/resources/assets/exnihilosequentia/blockstates/barrel_glass_light_blue.json",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/NovaMachina-Mods/ExNihiloSequentia/blob/f788f92c097016ff9be1e7e9a5dfba952336ac79/src/main/resources/assets/exnihilosequentia/blockstates/barrel_glass_light_blue.json",
    "raw_url": "https://github.com/NovaMachina-Mods/ExNihiloSequentia/raw/f788f92c097016ff9be1e7e9a5dfba952336ac79/src/main/resources/assets/exnihilosequentia/blockstates/barrel_glass_light_blue.json",
    "contents_url": "https://api.github.com/repos/NovaMachina-Mods/ExNihiloSequentia/contents/src/main/resources/assets/exnihilosequentia/blockstates/barrel_glass_light_blue.json?ref=f788f92c097016ff9be1e7e9a5dfba952336ac79",
    "patch": "@@ -0,0 +1,7 @@\n+{\n+  \"variants\": {\n+    \"\": {\n+      \"model\": \"exnihilosequentia:block/barrel_glass_light_blue\"\n+    }\n+  }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "6a4b3740ab54cdc38e0aa385db42811b960e5c34",
    "filename": "src/main/resources/assets/exnihilosequentia/blockstates/barrel_glass_light_gray.json",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/NovaMachina-Mods/ExNihiloSequentia/blob/f788f92c097016ff9be1e7e9a5dfba952336ac79/src/main/resources/assets/exnihilosequentia/blockstates/barrel_glass_light_gray.json",
    "raw_url": "https://github.com/NovaMachina-Mods/ExNihiloSequentia/raw/f788f92c097016ff9be1e7e9a5dfba952336ac79/src/main/resources/assets/exnihilosequentia/blockstates/barrel_glass_light_gray.json",
    "contents_url": "https://api.github.com/repos/NovaMachina-Mods/ExNihiloSequentia/contents/src/main/resources/assets/exnihilosequentia/blockstates/barrel_glass_light_gray.json?ref=f788f92c097016ff9be1e7e9a5dfba952336ac79",
    "patch": "@@ -0,0 +1,7 @@\n+{\n+  \"variants\": {\n+    \"\": {\n+      \"model\": \"exnihilosequentia:block/barrel_glass_light_gray\"\n+    }\n+  }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "ab51b607949df724781c71fa6555e0195748208e",
    "filename": "src/main/resources/assets/exnihilosequentia/blockstates/barrel_glass_lime.json",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/NovaMachina-Mods/ExNihiloSequentia/blob/f788f92c097016ff9be1e7e9a5dfba952336ac79/src/main/resources/assets/exnihilosequentia/blockstates/barrel_glass_lime.json",
    "raw_url": "https://github.com/NovaMachina-Mods/ExNihiloSequentia/raw/f788f92c097016ff9be1e7e9a5dfba952336ac79/src/main/resources/assets/exnihilosequentia/blockstates/barrel_glass_lime.json",
    "contents_url": "https://api.github.com/repos/NovaMachina-Mods/ExNihiloSequentia/contents/src/main/resources/assets/exnihilosequentia/blockstates/barrel_glass_lime.json?ref=f788f92c097016ff9be1e7e9a5dfba952336ac79",
    "patch": "@@ -0,0 +1,7 @@\n+{\n+  \"variants\": {\n+    \"\": {\n+      \"model\": \"exnihilosequentia:block/barrel_glass_lime\"\n+    }\n+  }\n+}\n\\ No newline at end of file"
  }
]
