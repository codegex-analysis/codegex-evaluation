author,title,url,year,citations,citations list
GabrieleBavota,Knowledge transfer in modern code review,http://scholar.google.com/https://dl.acm.org/doi/abs/10.1145/3387904.3389270,2020,3,"http://scholar.google.com/scholar?cites=9247462888383889249&as_sdt=2005&sciodt=0,5&hl=en"
GabrieleBavota,Four eyes are better than two: On the impact of code reviews on software quality,http://scholar.google.com/https://ieeexplore.ieee.org/abstract/document/7332454/,2015,54,"http://scholar.google.com/scholar?cites=15660781206396291922&as_sdt=2005&sciodt=0,5&hl=en"
DenysPoshyvanyk,Discovering flaws in security-focused static analysis tools for android using systematic mutation,http://scholar.google.com/https://www.usenix.org/conference/usenixsecurity18/presentation/bonett,2018,18,"http://scholar.google.com/scholar?cites=6863121297628575389&as_sdt=2005&sciodt=0,5&hl=en"
ChristianKaestner,Analyze this! sound static analysis for integration verification of large-scale automotive software,http://scholar.google.com/https://www.sae.org/publications/technical-papers/content/2019-01-1246/,2019,4,"http://scholar.google.com/scholar?cites=11297355723662262740&as_sdt=2005&sciodt=0,5&hl=en"
WilliamG.J.Halfond,Combining static analysis and runtime monitoring to counter SQL-injection attacks,http://scholar.google.com/https://dl.acm.org/doi/abs/10.1145/1083246.1083250,2005,189,"http://scholar.google.com/scholar?cites=12928472066255951973&as_sdt=2005&sciodt=0,5&hl=en"
FabioPalomba,Context is king: The developer perspective on the usage of static analysis tools,http://scholar.google.com/https://ieeexplore.ieee.org/abstract/document/8330195/,2018,51,"http://scholar.google.com/scholar?cites=14046530394659259752&as_sdt=2005&sciodt=0,5&hl=en"
FabioPalomba,Information needs in contemporary code review,http://scholar.google.com/https://dl.acm.org/doi/abs/10.1145/3274404,2018,31,"http://scholar.google.com/scholar?cites=6382098102333483469&as_sdt=2005&sciodt=0,5&hl=en"
FabioPalomba,How developers engage with static analysis tools in different contexts,http://scholar.google.com/https://link.springer.com/article/10.1007/s10664-019-09750-5,2020,21,"http://scholar.google.com/scholar?cites=10394902106589670074&as_sdt=2005&sciodt=0,5&hl=en"
FabioPalomba,Test-driven code review: an empirical study,http://scholar.google.com/https://ieeexplore.ieee.org/abstract/document/8811911/,2019,12,"http://scholar.google.com/scholar?cites=14313838889540173235&as_sdt=2005&sciodt=0,5&hl=en"
FabioPalomba,On the effect of code review on code smells,http://scholar.google.com/https://arxiv.org/abs/1912.10098,2019,5,"http://scholar.google.com/scholar?cites=828936522634689393&as_sdt=2005&sciodt=0,5&hl=en"
FabioPalomba,A preliminary study on the adequacy of static analysis warnings with respect to code smell prediction,http://scholar.google.com/https://dl.acm.org/doi/abs/10.1145/3416505.3423559,2020,0,
LiLi,Combining static analysis with probabilistic models to enable market-scale android inter-component analysis,http://scholar.google.com/https://dl.acm.org/doi/abs/10.1145/2837614.2837661,2016,104,"http://scholar.google.com/scholar?cites=10222476670858468379&as_sdt=2005&sciodt=0,5&hl=en"
LiLi,Reflection-aware static analysis of android apps,http://scholar.google.com/https://dl.acm.org/doi/abs/10.1145/2970276.2970277,2016,33,"http://scholar.google.com/scholar?cites=16277660221760412730&as_sdt=2005&sciodt=0,5&hl=en"
LiLi,Assessment of programming language learning based on peer code review model: Implementation and experience report,http://scholar.google.com/https://www.sciencedirect.com/science/article/pii/S0360131512000085,2012,120,"http://scholar.google.com/scholar?cites=3627763735349133384&as_sdt=2005&sciodt=0,5&hl=en"
LiLi,Boosting static analysis of android apps through code instrumentation,http://scholar.google.com/https://ieeexplore.ieee.org/abstract/document/7883411/,2016,11,"http://scholar.google.com/scholar?cites=12373205606983881434&as_sdt=2005&sciodt=0,5&hl=en"
LiLi,A comparative study on software vulnerability static analysis techniques and tools,http://scholar.google.com/https://ieeexplore.ieee.org/abstract/document/5689543/,2010,52,"http://scholar.google.com/scholar?cites=1750654645772074532&as_sdt=2005&sciodt=0,5&hl=en"
LiLi,Stochastic static analysis of Euler-Bernoulli type functionally graded structures,http://scholar.google.com/https://www.sciencedirect.com/science/article/pii/S135983681730327X,2018,30,"http://scholar.google.com/scholar?cites=16627555715984157847&as_sdt=2005&sciodt=0,5&hl=en"
LiLi,A refined analysis of laminated plates by finite element displacement methodsâ€”I. Fundamentals and static analysis,http://scholar.google.com/https://www.sciencedirect.com/science/article/pii/0045794987901076,1987,133,"http://scholar.google.com/scholar?cites=11508297561463002768&as_sdt=2005&sciodt=0,5&hl=en"
JacquesKlein,Dexpler: converting android dalvik bytecode to jimple for static analysis with soot,http://scholar.google.com/https://dl.acm.org/doi/abs/10.1145/2259051.2259056,2012,263,"http://scholar.google.com/scholar?cites=10681028208287091558&as_sdt=2005&sciodt=0,5&hl=en"
JacquesKlein,Combining static analysis with probabilistic models to enable market-scale android inter-component analysis,http://scholar.google.com/https://dl.acm.org/doi/abs/10.1145/2837614.2837661,2016,104,"http://scholar.google.com/scholar?cites=10222476670858468379&as_sdt=2005&sciodt=0,5&hl=en"
JacquesKlein,Reflection-aware static analysis of android apps,http://scholar.google.com/https://dl.acm.org/doi/abs/10.1145/2970276.2970277,2016,33,"http://scholar.google.com/scholar?cites=16277660221760412730&as_sdt=2005&sciodt=0,5&hl=en"
JingSun,A collaborative code review platform for github,http://scholar.google.com/https://ieeexplore.ieee.org/abstract/document/7816585/,2016,14,"http://scholar.google.com/scholar?cites=284905883969244571&as_sdt=2005&sciodt=0,5&hl=en"
JunSun,Practical static analysis of context leaks in Android applications,http://scholar.google.com/https://onlinelibrary.wiley.com/doi/abs/10.1002/spe.2659,2019,3,"http://scholar.google.com/scholar?cites=13453198474547599978&as_sdt=2005&sciodt=0,5&hl=en"
MichaelGoedicke,A review of static analysis approaches for programming exercises,http://scholar.google.com/https://link.springer.com/chapter/10.1007/978-3-319-08657-6_10,2014,32,"http://scholar.google.com/scholar?cites=8133359668776328160&as_sdt=2005&sciodt=0,5&hl=en"
MichaelGoedicke,A specification language for static analysis of student exercises,http://scholar.google.com/https://ieeexplore.ieee.org/abstract/document/4639340/,2008,10,"http://scholar.google.com/scholar?cites=1142719513146181386&as_sdt=2005&sciodt=0,5&hl=en"
AlbertoBacchelli,"Expectations, outcomes, and challenges of modern code review",http://scholar.google.com/https://ieeexplore.ieee.org/abstract/document/6606617/,2013,559,"http://scholar.google.com/scholar?cites=1568498786809371411&as_sdt=2005&sciodt=0,5&hl=en"
AlbertoBacchelli,Modern code review: a case study at google,http://scholar.google.com/https://dl.acm.org/doi/abs/10.1145/3183519.3183525,2018,91,"http://scholar.google.com/scholar?cites=2926915332765277121&as_sdt=2005&sciodt=0,5&hl=en"
AlbertoBacchelli,Information needs in contemporary code review,http://scholar.google.com/https://dl.acm.org/doi/abs/10.1145/3274404,2018,31,"http://scholar.google.com/scholar?cites=6382098102333483469&as_sdt=2005&sciodt=0,5&hl=en"
AlbertoBacchelli,When testing meets code review: Why and how developers review tests,http://scholar.google.com/https://ieeexplore.ieee.org/abstract/document/8453136/,2018,24,"http://scholar.google.com/scholar?cites=14024268960216718535&as_sdt=2005&sciodt=0,5&hl=en"
AlbertoBacchelli,Test-driven code review: an empirical study,http://scholar.google.com/https://ieeexplore.ieee.org/abstract/document/8811911/,2019,12,"http://scholar.google.com/scholar?cites=14313838889540173235&as_sdt=2005&sciodt=0,5&hl=en"
AlbertoBacchelli,Associating working memory capacity and code change ordering with code review performance,http://scholar.google.com/https://link.springer.com/article/10.1007/s10664-018-9676-8,2019,10,"http://scholar.google.com/scholar?cites=17543088961359080135&as_sdt=2005&sciodt=0,5&hl=en"
AlbertoBacchelli,On the effect of code review on code smells,http://scholar.google.com/https://arxiv.org/abs/1912.10098,2019,5,"http://scholar.google.com/scholar?cites=828936522634689393&as_sdt=2005&sciodt=0,5&hl=en"
AlbertoBacchelli,A security perspective on code review: The case of chromium,http://scholar.google.com/https://ieeexplore.ieee.org/abstract/document/7781793/,2016,17,"http://scholar.google.com/scholar?cites=4817515081853835136&as_sdt=2005&sciodt=0,5&hl=en"
AlbertoBacchelli,Modern code reviews in open-source projects: Which problems do they fix?,http://scholar.google.com/https://dl.acm.org/doi/abs/10.1145/2597073.2597082,2014,191,"http://scholar.google.com/scholar?cites=15877497969250980095&as_sdt=2005&sciodt=0,5&hl=en"
HongyuZhang,Ares: inferring error specifications through static analysis,http://scholar.google.com/https://ieeexplore.ieee.org/abstract/document/8952222/,2019,1,"http://scholar.google.com/scholar?cites=16332642807263292101&as_sdt=2005&sciodt=0,5&hl=en"
DavidLo,Orplocator: Identifying read points of configuration options via static analysis,http://scholar.google.com/https://ieeexplore.ieee.org/abstract/document/7774519/,2016,17,"http://scholar.google.com/scholar?cites=12525334989460586533&as_sdt=2005&sciodt=0,5&hl=en"
DavidLo,Automatic code review by learning the revision of source code,http://scholar.google.com/https://ojs.aaai.org/index.php/AAAI/article/view/4420,2019,7,"http://scholar.google.com/scholar?cites=7766753203302092312&as_sdt=2005&sciodt=0,5&hl=en"
DavidLo,DeepReview: automatic code review using deep multi-instance learning,http://scholar.google.com/https://link.springer.com/chapter/10.1007/978-3-030-16145-3_25,2019,4,"http://scholar.google.com/scholar?cites=7727563957538846479&as_sdt=2005&sciodt=0,5&hl=en"
XinPeng,Automatic refactoring method of cloned code using abstract syntax tree and static analysis,http://scholar.google.com/https://en.cnki.com.cn/Article_en/CJFDTotal-XXWX200909014.htm,2009,14,"http://scholar.google.com/scholar?cites=9801389363613670546&as_sdt=2005&sciodt=0,5&hl=en"
RaulaGaikovinaKula,Who should review my code? a file location-based code-reviewer recommendation approach for modern code review,http://scholar.google.com/https://ieeexplore.ieee.org/abstract/document/7081824/,2015,169,"http://scholar.google.com/scholar?cites=7071181244179207918&as_sdt=2005&sciodt=0,5&hl=en"
RaulaGaikovinaKula,"Mining the modern code review repositories: A dataset of people, process and product",http://scholar.google.com/https://dl.acm.org/doi/abs/10.1145/2901739.2903504,2016,43,"http://scholar.google.com/scholar?cites=14191729225736267094&as_sdt=2005&sciodt=0,5&hl=en"
RaulaGaikovinaKula,Who does what during a code review? datasets of oss peer review repositories,http://scholar.google.com/https://ieeexplore.ieee.org/abstract/document/6624003/,2013,71,"http://scholar.google.com/scholar?cites=2891550062668990778&as_sdt=2005&sciodt=0,5&hl=en"
RaulaGaikovinaKula,Improving code review effectiveness through reviewer recommendations,http://scholar.google.com/https://dl.acm.org/doi/abs/10.1145/2593702.2593705,2014,62,"http://scholar.google.com/scholar?cites=10908735489821048311&as_sdt=2005&sciodt=0,5&hl=en"
RaulaGaikovinaKula,Search-based peer reviewers recommendation in modern code review,http://scholar.google.com/https://ieeexplore.ieee.org/abstract/document/7816482/,2016,49,"http://scholar.google.com/scholar?cites=7900691539091193049&as_sdt=2005&sciodt=0,5&hl=en"
RaulaGaikovinaKula,WhoReview: A multi-objective search-based approach for code reviewers recommendation in modern code review,http://scholar.google.com/https://www.sciencedirect.com/science/article/pii/S1568494620308462,2021,1,"http://scholar.google.com/scholar?cites=4362610432361454237&as_sdt=2005&sciodt=0,5&hl=en"
RaulaGaikovinaKula,Reda: A web-based visualization tool for analyzing modern code review dataset,http://scholar.google.com/https://ieeexplore.ieee.org/abstract/document/6976150/,2014,25,"http://scholar.google.com/scholar?cites=3900375067975586760&as_sdt=2005&sciodt=0,5&hl=en"
AmiangshuBosu,SentiCR: a customized sentiment analysis tool for code review interactions,http://scholar.google.com/https://ieeexplore.ieee.org/abstract/document/8115623/,2017,64,"http://scholar.google.com/scholar?cites=3012147065090706707&as_sdt=2005&sciodt=0,5&hl=en"
AmiangshuBosu,Process aspects and social dynamics of contemporary code review: Insights from open source development and industrial practice at microsoft,http://scholar.google.com/https://ieeexplore.ieee.org/abstract/document/7484733/,2016,70,"http://scholar.google.com/scholar?cites=12051899074880495688&as_sdt=2005&sciodt=0,5&hl=en"
AmiangshuBosu,Impact of developer reputation on code review outcomes in oss projects: An empirical investigation,http://scholar.google.com/https://dl.acm.org/doi/abs/10.1145/2652524.2652544,2014,71,"http://scholar.google.com/scholar?cites=4311169895457492874&as_sdt=2005&sciodt=0,5&hl=en"
AmiangshuBosu,Impact of peer code review on peer impression formation: A survey,http://scholar.google.com/https://ieeexplore.ieee.org/abstract/document/6681346/,2013,59,"http://scholar.google.com/scholar?cites=10636575328058234302&as_sdt=2005&sciodt=0,5&hl=en"
AmiangshuBosu,Characteristics of useful code reviews: An empirical study at microsoft,http://scholar.google.com/https://ieeexplore.ieee.org/abstract/document/7180075/,2015,104,"http://scholar.google.com/scholar?cites=626841314095824906&as_sdt=2005&sciodt=0,5&hl=en"
AmiangshuBosu,Peer code review to prevent security vulnerabilities: An empirical evaluation,http://scholar.google.com/https://ieeexplore.ieee.org/abstract/document/6616350/,2013,17,"http://scholar.google.com/scholar?cites=15714614699421098266&as_sdt=2005&sciodt=0,5&hl=en"
AmiangshuBosu,Peer code review in open source communitiesusing reviewboard,http://scholar.google.com/https://dl.acm.org/doi/abs/10.1145/2414721.2414726,2012,19,"http://scholar.google.com/scholar?cites=9072263377577787653&as_sdt=2005&sciodt=0,5&hl=en"
AmiangshuBosu,Characteristics of the vulnerable code changes identified through peer code review,http://scholar.google.com/https://dl.acm.org/doi/abs/10.1145/2591062.2591200,2014,14,"http://scholar.google.com/scholar?cites=15805012518662180961&as_sdt=2005&sciodt=0,5&hl=en"
AmiangshuBosu,Expressions of sentiments during code reviews: Male vs. female,http://scholar.google.com/https://ieeexplore.ieee.org/abstract/document/8667987/,2019,17,"http://scholar.google.com/scholar?cites=14554112142503695988&as_sdt=2005&sciodt=0,5&hl=en"
AmiangshuBosu,Modeling modern code review practices in open source software development organizations,http://amiangshu.com/papers/IDoESE.pdf,2013,5,"http://scholar.google.com/scholar?cites=6939262361268478922&as_sdt=2005&sciodt=0,5&hl=en"
KevinMoran,Discovering flaws in security-focused static analysis tools for android using systematic mutation,http://scholar.google.com/https://www.usenix.org/conference/usenixsecurity18/presentation/bonett,2018,18,"http://scholar.google.com/scholar?cites=6863121297628575389&as_sdt=2005&sciodt=0,5&hl=en"
CoenDeRoover,Scala-am: A modular static analysis framework,http://scholar.google.com/https://ieeexplore.ieee.org/abstract/document/7781801/,2016,11,"http://scholar.google.com/scholar?cites=8409068029914576517&as_sdt=2005&sciodt=0,5&hl=en"
CoenDeRoover,Mailbox abstractions for static analysis of actor programs,http://scholar.google.com/https://drops.dagstuhl.de/opus/volltexte/2017/7254/,2017,9,"http://scholar.google.com/scholar?cites=5589940966314559307&as_sdt=2005&sciodt=0,5&hl=en"
CoenDeRoover,Building a modular static analysis framework in scala (tool paper),http://scholar.google.com/https://dl.acm.org/doi/abs/10.1145/2998392.3001579,2016,5,"http://scholar.google.com/scholar?cites=10730368647892528312&as_sdt=2005&sciodt=0,5&hl=en"
EwenDenney,Generating code review documentation for auto-generated mission-critical software,http://scholar.google.com/https://ieeexplore.ieee.org/abstract/document/5226807/,2009,7,"http://scholar.google.com/scholar?cites=11343589787056356301&as_sdt=2005&sciodt=0,5&hl=en"
JunjieChen,Supporting oracle construction via static analysis,http://scholar.google.com/https://ieeexplore.ieee.org/abstract/document/7582756/,2016,14,"http://scholar.google.com/scholar?cites=1214803908649678342&as_sdt=2005&sciodt=0,5&hl=en"
JunjieChen,SMT-based and disjunctive relational abstract domains for static analysis,http://scholar.google.com/https://search.proquest.com/openview/7512d5b94659be6effd4f1a158a6d289/1?pq-origsite=gscholar&cbl=18750&diss=y,2015,1,"http://scholar.google.com/scholar?cites=14398420748352672430&as_sdt=2005&sciodt=0,5&hl=en"
SukyoungRyu,HybriDroid: static analysis framework for Android hybrid applications,http://scholar.google.com/https://ieeexplore.ieee.org/abstract/document/7582763/,2016,44,"http://scholar.google.com/scholar?cites=4922765516498729433&as_sdt=2005&sciodt=0,5&hl=en"
SukyoungRyu,Scalable and precise static analysis of JavaScript applications via loop-sensitivity,http://scholar.google.com/https://drops.dagstuhl.de/opus/volltexte/2015/5245/,2015,56,"http://scholar.google.com/scholar?cites=9363655174241543955&as_sdt=2005&sciodt=0,5&hl=en"
SukyoungRyu,Battles with false positives in static analysis of JavaScript web applications in the wild,http://scholar.google.com/https://ieeexplore.ieee.org/abstract/document/7883289/,2016,23,"http://scholar.google.com/scholar?cites=10654026178952165483&as_sdt=2005&sciodt=0,5&hl=en"
SukyoungRyu,Practically tunable static analysis framework for large-scale JavaScript applications (T),http://scholar.google.com/https://ieeexplore.ieee.org/abstract/document/7372042/,2015,27,"http://scholar.google.com/scholar?cites=10749076282461437528&as_sdt=2005&sciodt=0,5&hl=en"
SukyoungRyu,Precise and scalable static analysis of jQuery using a regular expression domain,http://scholar.google.com/https://dl.acm.org/doi/abs/10.1145/2989225.2989228,2016,22,"http://scholar.google.com/scholar?cites=16461791331795436665&as_sdt=2005&sciodt=0,5&hl=en"
SukyoungRyu,Automatic modeling of opaque code for javascript static analysis,http://scholar.google.com/https://link.springer.com/chapter/10.1007/978-3-030-16722-6_3,2019,4,"http://scholar.google.com/scholar?cites=12505660900131760259&as_sdt=2005&sciodt=0,5&hl=en"
SvenApel,Variability-aware static analysis at scale: An empirical study,http://scholar.google.com/https://dl.acm.org/doi/abs/10.1145/3280986,2018,22,"http://scholar.google.com/scholar?cites=14905059112672601031&as_sdt=2005&sciodt=0,5&hl=en"
SvenApel,Is static analysis able to identify unnecessary source code?,http://scholar.google.com/https://dl.acm.org/doi/abs/10.1145/3368267,2020,5,"http://scholar.google.com/scholar?cites=7900619828149658051&as_sdt=2005&sciodt=0,5&hl=en"
ElenaSherman,Structurally defined conditional data-flow static analysis,http://scholar.google.com/https://link.springer.com/chapter/10.1007/978-3-319-89963-3_15,2018,9,"http://scholar.google.com/scholar?cites=15117122340680431368&as_sdt=2005&sciodt=0,5&hl=en"
LuZhang,Supporting oracle construction via static analysis,http://scholar.google.com/https://ieeexplore.ieee.org/abstract/document/7582756/,2016,14,"http://scholar.google.com/scholar?cites=1214803908649678342&as_sdt=2005&sciodt=0,5&hl=en"
PatanamonThongtanunam,Who should review my code? a file location-based code-reviewer recommendation approach for modern code review,http://scholar.google.com/https://ieeexplore.ieee.org/abstract/document/7081824/,2015,169,"http://scholar.google.com/scholar?cites=7071181244179207918&as_sdt=2005&sciodt=0,5&hl=en"
PatanamonThongtanunam,Revisiting code ownership and its relationship with software quality in the scope of modern code review,http://scholar.google.com/https://dl.acm.org/doi/abs/10.1145/2884781.2884852,2016,86,"http://scholar.google.com/scholar?cites=1356350407254642340&as_sdt=2005&sciodt=0,5&hl=en"
PatanamonThongtanunam,Review participation in modern code review,http://scholar.google.com/https://link.springer.com/content/pdf/10.1007/s10664-016-9452-6.pdf,2017,65,"http://scholar.google.com/scholar?cites=13548793040598882369&as_sdt=2005&sciodt=0,5&hl=en"
PatanamonThongtanunam,Investigating code review practices in defective files: An empirical study of the qt system,http://scholar.google.com/https://ieeexplore.ieee.org/abstract/document/7180077/,2015,69,"http://scholar.google.com/scholar?cites=6690651621007842500&as_sdt=2005&sciodt=0,5&hl=en"
PatanamonThongtanunam,Improving code review effectiveness through reviewer recommendations,http://scholar.google.com/https://dl.acm.org/doi/abs/10.1145/2593702.2593705,2014,62,"http://scholar.google.com/scholar?cites=10908735489821048311&as_sdt=2005&sciodt=0,5&hl=en"
PatanamonThongtanunam,The impact of human factors on the participation decision of reviewers in modern code review,http://scholar.google.com/https://link.springer.com/article/10.1007/s10664-018-9646-1,2019,22,"http://scholar.google.com/scholar?cites=4346753423992596253&as_sdt=2005&sciodt=0,5&hl=en"
PatanamonThongtanunam,Reda: A web-based visualization tool for analyzing modern code review dataset,http://scholar.google.com/https://ieeexplore.ieee.org/abstract/document/6976150/,2014,25,"http://scholar.google.com/scholar?cites=3900375067975586760&as_sdt=2005&sciodt=0,5&hl=en"
PatanamonThongtanunam,"Review participation in modern code review: An empirical study of the Android, Qt, and OpenStack projects (journal-first abstract)",http://scholar.google.com/https://ieeexplore.ieee.org/abstract/document/8330241/,2018,6,"http://scholar.google.com/scholar?cites=7196735838151822486&as_sdt=2005&sciodt=0,5&hl=en"
AkinoriIhara,The impact of human factors on the participation decision of reviewers in modern code review,http://scholar.google.com/https://link.springer.com/article/10.1007/s10664-018-9646-1,2019,22,"http://scholar.google.com/scholar?cites=4346753423992596253&as_sdt=2005&sciodt=0,5&hl=en"
AkinoriIhara,An empirical study of design discussions in code review,http://scholar.google.com/https://dl.acm.org/doi/abs/10.1145/3239235.3239525,2018,16,"http://scholar.google.com/scholar?cites=16871082411790438758&as_sdt=2005&sciodt=0,5&hl=en"
AkinoriIhara,The review linkage graph for code review analytics: A recovery approach and empirical study,http://scholar.google.com/https://dl.acm.org/doi/abs/10.1145/3338906.3338949,2019,7,"http://scholar.google.com/scholar?cites=13826296203766065397&as_sdt=2005&sciodt=0,5&hl=en"
AkinoriIhara,The impact of a low level of agreement among reviewers in a code review process,http://scholar.google.com/https://link.springer.com/chapter/10.1007/978-3-319-39225-7_8,2016,14,"http://scholar.google.com/scholar?cites=4072482038399564394&as_sdt=2005&sciodt=0,5&hl=en"
AkinoriIhara,How is if statement fixed through code review? a case study of qt project,http://scholar.google.com/https://ieeexplore.ieee.org/abstract/document/8109285/,2017,7,"http://scholar.google.com/scholar?cites=18373978140194349551&as_sdt=2005&sciodt=0,5&hl=en"
AkinoriIhara,Pilot study of collective decision-making in the code review process,http://scholar.google.com/https://library.naist.jp/dspace/handle/10061/12706,2015,7,"http://scholar.google.com/scholar?cites=7790820610885309109&as_sdt=2005&sciodt=0,5&hl=en"
AkinoriIhara,Impact of coding style checker on code review-a case study on the openstack projects,http://scholar.google.com/https://ieeexplore.ieee.org/abstract/document/8661217/,2018,3,"http://scholar.google.com/scholar?cites=4396783039914085630&as_sdt=2005&sciodt=0,5&hl=en"
AnaMilanova,Practical static analysis for inference of security-related program properties,http://scholar.google.com/https://ieeexplore.ieee.org/abstract/document/5090027/,2009,20,"http://scholar.google.com/scholar?cites=1308448271231664759&as_sdt=2005&sciodt=0,5&hl=en"
TaoYue,Reviewer recommendation for pull-requests in GitHub: What can we learn from code review and bug assignment?,http://scholar.google.com/https://www.sciencedirect.com/science/article/pii/S0950584916000069,2016,162,"http://scholar.google.com/scholar?cites=17055242687499854218&as_sdt=2005&sciodt=0,5&hl=en"
RahulPurandare,Residual dynamic typestate analysis exploiting static analysis: results to reformulate and reduce the cost of dynamic analysis,http://scholar.google.com/https://dl.acm.org/doi/abs/10.1145/1321631.1321651,2007,63,"http://scholar.google.com/scholar?cites=18396580049720138110&as_sdt=2005&sciodt=0,5&hl=en"
YiLi,An energy-based assessment on dynamic amplification factor for linear static analysis in progressive collapse design of ductile RC frame structures,http://scholar.google.com/https://journals.sagepub.com/doi/abs/10.1260/1369-4332.17.8.1217,2014,24,"http://scholar.google.com/scholar?cites=7344751671739730821&as_sdt=2005&sciodt=0,5&hl=en"
YiLi,DeepReview: automatic code review using deep multi-instance learning,http://scholar.google.com/https://link.springer.com/chapter/10.1007/978-3-030-16145-3_25,2019,4,"http://scholar.google.com/scholar?cites=7727563957538846479&as_sdt=2005&sciodt=0,5&hl=en"
YiLi,Ontology model-based static analysis on java programs,http://scholar.google.com/https://ieeexplore.ieee.org/abstract/document/4591539/,2008,18,"http://scholar.google.com/scholar?cites=3647619920736188731&as_sdt=2005&sciodt=0,5&hl=en"
AlessandroOrso,Combining static analysis and runtime monitoring to counter SQL-injection attacks,http://scholar.google.com/https://dl.acm.org/doi/abs/10.1145/1083246.1083250,2005,189,"http://scholar.google.com/scholar?cites=12928472066255951973&as_sdt=2005&sciodt=0,5&hl=en"
AlexGroce,Slither: a static analysis framework for smart contracts,http://scholar.google.com/https://ieeexplore.ieee.org/abstract/document/8823898/,2019,67,"http://scholar.google.com/scholar?cites=15438631596687801182&as_sdt=2005&sciodt=0,5&hl=en"
AlexGroce,Finding model-checkable needles in large source code haystacks: Modular bug-finding via static analysis and dynamic invariant discovery,http://scholar.google.com/https://arxiv.org/abs/1609.06382,2016,2,"http://scholar.google.com/scholar?cites=3802915450112959135&as_sdt=2005&sciodt=0,5&hl=en"
RobertFeldt,Comparing four static analysis tools for java concurrency bugs,http://scholar.google.com/https://www.researchgate.net/profile/Md_Abdullah_Mamun4/publication/48872915_Comparing_Four_Static_Analysis_Tools_for_Java_Concurrency_Bugs/links/5405dde50cf2c48563b1d44c.pdf,2010,21,"http://scholar.google.com/scholar?cites=10301678440028929082&as_sdt=2005&sciodt=0,5&hl=en"
RobertFeldt,Detecting defects with an interactive code review tool based on visualisation and machine learning,http://scholar.google.com/https://www.diva-portal.org/smash/record.jsf?pid=diva2:835773,2009,11,"http://scholar.google.com/scholar?cites=14717159039456102329&as_sdt=2005&sciodt=0,5&hl=en"
MingLi,Coupled multi-physical cell-based smoothed finite element method for static analysis of functionally grade magneto-electro-elastic structures at uniform temperature,http://scholar.google.com/https://www.sciencedirect.com/science/article/pii/S026382231931284X,2019,10,"http://scholar.google.com/scholar?cites=9523904692686578790&as_sdt=2005&sciodt=0,5&hl=en"
MingLi,Automatic code review by learning the revision of source code,http://scholar.google.com/https://ojs.aaai.org/index.php/AAAI/article/view/4420,2019,7,"http://scholar.google.com/scholar?cites=7766753203302092312&as_sdt=2005&sciodt=0,5&hl=en"
MingLi,DeepReview: automatic code review using deep multi-instance learning,http://scholar.google.com/https://link.springer.com/chapter/10.1007/978-3-030-16145-3_25,2019,4,"http://scholar.google.com/scholar?cites=7727563957538846479&as_sdt=2005&sciodt=0,5&hl=en"
MingLi,DeepReview: Automatic code review using deep multi-instance learning.(2019),http://scholar.google.com/https://core.ac.uk/download/pdf/200766635.pdf,,0,
AdwaitNadkarni,Discovering flaws in security-focused static analysis tools for android using systematic mutation,http://scholar.google.com/https://www.usenix.org/conference/usenixsecurity18/presentation/bonett,2018,18,"http://scholar.google.com/scholar?cites=6863121297628575389&as_sdt=2005&sciodt=0,5&hl=en"
AlexanderSerebrenik,Challenges for static analysis of java reflection-literature review and empirical study,http://scholar.google.com/https://ieeexplore.ieee.org/abstract/document/7985689/,2017,76,"http://scholar.google.com/scholar?cites=13997296233842079337&as_sdt=2005&sciodt=0,5&hl=en"
AlexanderSerebrenik,Survey of approaches for handling static analysis alarms,http://scholar.google.com/https://ieeexplore.ieee.org/abstract/document/7781809/,2016,48,"http://scholar.google.com/scholar?cites=278331208569445490&as_sdt=2005&sciodt=0,5&hl=en"
AlexanderSerebrenik,What to expect from code review bots on GitHub? a survey with OSS maintainers,http://scholar.google.com/https://dl.acm.org/doi/abs/10.1145/3422392.3422459,2020,3,"http://scholar.google.com/scholar?cites=5350679228156816763&as_sdt=2005&sciodt=0,5&hl=en"
AlexanderSerebrenik,Communicative intention in code review questions,http://scholar.google.com/https://ieeexplore.ieee.org/abstract/document/8530057/,2018,14,"http://scholar.google.com/scholar?cites=4936475437737232661&as_sdt=2005&sciodt=0,5&hl=en"
AlexanderSerebrenik,Repositioning of static analysis alarms,http://scholar.google.com/https://dl.acm.org/doi/abs/10.1145/3213846.3213850,2018,7,"http://scholar.google.com/scholar?cites=11660918624704550844&as_sdt=2005&sciodt=0,5&hl=en"
AlexanderSerebrenik,"Confusion in code reviews: Reasons, impacts, and coping strategies",http://scholar.google.com/https://ieeexplore.ieee.org/abstract/document/8668024/,2019,34,"http://scholar.google.com/scholar?cites=18031294583786904715&as_sdt=2005&sciodt=0,5&hl=en"
AlexanderSerebrenik,Reducing static analysis alarms based on non-impacting control dependencies,http://scholar.google.com/https://link.springer.com/chapter/10.1007/978-3-030-34175-6_7,2019,1,"http://scholar.google.com/scholar?cites=11000502229835449807&as_sdt=2005&sciodt=0,5&hl=en"
AlexanderSerebrenik,Confusion detection in code reviews,http://scholar.google.com/https://ieeexplore.ieee.org/abstract/document/8094460/,2017,28,"http://scholar.google.com/scholar?cites=3971779393799432743&as_sdt=2005&sciodt=0,5&hl=en"
AndyZaidman,Analyzing the state of static analysis: A large-scale evaluation in open source software,http://scholar.google.com/https://ieeexplore.ieee.org/abstract/document/7476667/,2016,121,"http://scholar.google.com/scholar?cites=17367347745178129445&as_sdt=2005&sciodt=0,5&hl=en"
AndyZaidman,Context is king: The developer perspective on the usage of static analysis tools,http://scholar.google.com/https://ieeexplore.ieee.org/abstract/document/8330195/,2018,51,"http://scholar.google.com/scholar?cites=14046530394659259752&as_sdt=2005&sciodt=0,5&hl=en"
AndyZaidman,How developers engage with static analysis tools in different contexts,http://scholar.google.com/https://link.springer.com/article/10.1007/s10664-019-09750-5,2020,21,"http://scholar.google.com/scholar?cites=10394902106589670074&as_sdt=2005&sciodt=0,5&hl=en"
AndyZaidman,Modern code reviews in open-source projects: Which problems do they fix?,http://scholar.google.com/https://dl.acm.org/doi/abs/10.1145/2597073.2597082,2014,191,"http://scholar.google.com/scholar?cites=15877497969250980095&as_sdt=2005&sciodt=0,5&hl=en"
ChakkritTantithamthavorn,Who should review my code? a file location-based code-reviewer recommendation approach for modern code review,http://scholar.google.com/https://ieeexplore.ieee.org/abstract/document/7081824/,2015,169,"http://scholar.google.com/scholar?cites=7071181244179207918&as_sdt=2005&sciodt=0,5&hl=en"
BerndFischer,Generating code review documentation for auto-generated mission-critical software,http://scholar.google.com/https://ieeexplore.ieee.org/abstract/document/5226807/,2009,7,"http://scholar.google.com/scholar?cites=11343589787056356301&as_sdt=2005&sciodt=0,5&hl=en"
ChaoWang,Thread-modular static analysis for relaxed memory models,http://scholar.google.com/https://dl.acm.org/doi/abs/10.1145/3106237.3106243,2017,12,"http://scholar.google.com/scholar?cites=16089186046615733656&as_sdt=2005&sciodt=0,5&hl=en"
ChaoWang,Debreach: mitigating compression side channels via static analysis and transformation,http://scholar.google.com/https://ieeexplore.ieee.org/abstract/document/8952360/,2019,1,"http://scholar.google.com/scholar?cites=3824779970893418081&as_sdt=2005&sciodt=0,5&hl=en"
DanHao,Supporting oracle construction via static analysis,http://scholar.google.com/https://ieeexplore.ieee.org/abstract/document/7582756/,2016,14,"http://scholar.google.com/scholar?cites=1214803908649678342&as_sdt=2005&sciodt=0,5&hl=en"
SebastianProksch,Context is king: The developer perspective on the usage of static analysis tools,http://scholar.google.com/https://ieeexplore.ieee.org/abstract/document/8330195/,2018,51,"http://scholar.google.com/scholar?cites=14046530394659259752&as_sdt=2005&sciodt=0,5&hl=en"
SebastianProksch,How developers engage with static analysis tools in different contexts,http://scholar.google.com/https://link.springer.com/article/10.1007/s10664-019-09750-5,2020,21,"http://scholar.google.com/scholar?cites=10394902106589670074&as_sdt=2005&sciodt=0,5&hl=en"
