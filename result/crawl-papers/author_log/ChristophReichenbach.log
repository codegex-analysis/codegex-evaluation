[query] http://scholar.google.com/scholar?as_q=&as_epq=%22findbugs%22%20OR%20%22spotbugs%22%20OR%20%22code%20review%22%20OR%20%22static%20analysis%22%20OR%20%22regex%22%20OR%20%22regular%20expression%22%20OR%20%22github%22%20OR%20%22pull%20requests%22&as_oq=&as_eq=&as_occt=any&as_sauthors=Christoph%20Reichenbach&as_publication=&as_ylo=&as_yhi=&as_vis=0&btnG=&hl=en&num=80&as_sdt=0%2C5
         Title Residual investigation: Predictive and precise bug detection
           URL http://scholar.google.com/https://dl.acm.org/doi/abs/10.1145/2656201
          Year 2014
     Citations 18
      Versions 17
    Cluster ID 11019439172365184117
Citations list http://scholar.google.com/scholar?cites=11019439172365184117&as_sdt=2005&sciodt=0,5&hl=en
 Versions list http://scholar.google.com/scholar?cluster=11019439172365184117&hl=en&as_sdt=0,5
       Excerpt … analysis, but instead complements it. In the case of RFBI, the point is not to obscurethe output of FindBugs; since the static analysis is performed anyway, its results areavailable to the user for inspection. Instead, RFBI serves as a … 

         Title Copy and paste redeemed (t)
           URL http://scholar.google.com/https://ieeexplore.ieee.org/abstract/document/7372050/
          Year 2015
     Citations 16
      Versions 13
    Cluster ID 4732299846850901360
Citations list http://scholar.google.com/scholar?cites=4732299846850901360&as_sdt=2005&sciodt=0,5&hl=en
 Versions list http://scholar.google.com/scholar?cluster=4732299846850901360&hl=en&as_sdt=0,5
       Excerpt … 2https://github.com/google/protobuf 3https://github.com/facebook/hhvm 4https://github.com/facebook/rocksdb the worst-performing student using copy-paste-modify … We illustrate ourresolution patterns with examples taken from Open Source projects hosted at Github … 

         Title MetaDL: Analysing Datalog in Datalog
           URL http://scholar.google.com/https://dl.acm.org/doi/abs/10.1145/3315568.3329970
          Year 2019
     Citations 2
      Versions 6
    Cluster ID 9039835393423681865
Citations list http://scholar.google.com/scholar?cites=9039835393423681865&as_sdt=2005&sciodt=0,5&hl=en
 Versions list http://scholar.google.com/scholar?cluster=9039835393423681865&hl=en&as_sdt=0,5
       Excerpt … CCS Concepts • Software and its engineering → Auto- mated static analysis; Constraint and logiclanguages; Domain specific languages; • Theory of computation → Pattern matching. KeywordsDatalog, Domain-Specific Languages, Pattern Matching, Static Analysis … 

         Title Cleaning up copy–paste clones with interactive merging
           URL http://scholar.google.com/https://link.springer.com/article/10.1007/s10515-018-0238-5
          Year 2018
     Citations 3
      Versions 11
    Cluster ID 3061678859212686567
Citations list http://scholar.google.com/scholar?cites=3061678859212686567&as_sdt=2005&sciodt=0,5&hl=en
 Versions list http://scholar.google.com/scholar?cluster=3061678859212686567&hl=en&as_sdt=0,5
       Excerpt … To understand the commonly occurring differences in such clones in C++ code and tomotivate specific approaches to merging method-level clones, we conducted a study ofclone groups from top trending Open Source GitHub repositories … 

         Title Software Ticks Need No Specifications
           URL http://creichen.net/papers/ticks-NIER.pdf
          Year 2021
     Citations 0
      Versions 5
      PDF link http://creichen.net/papers/ticks-NIER.pdf
 Versions list http://scholar.google.com/scholar?cluster=8976491556555243776&hl=en&as_sdt=0,5
       Excerpt … B. Contemporary Bug Checkers Bug checking tools like FindBugs/SpotBugs [8], PMD [34], orError … the previous section, we find several take-aways: 1) The FindBugs designers consider … andR. Cousot, “Abstract interpretation: a unified lattice model for static analysis of programs … 

         Title Interactive data representation migration: exploiting program dependence to aid program transformation
           URL http://scholar.google.com/https://dl.acm.org/doi/abs/10.1145/3018882.3018890
          Year 2017
     Citations 1
      Versions 9
    Cluster ID 15146074565222518956
Citations list http://scholar.google.com/scholar?cites=15146074565222518956&as_sdt=2005&sciodt=0,5&hl=en
 Versions list http://scholar.google.com/scholar?cluster=15146074565222518956&hl=en&as_sdt=0,5
       Excerpt … Keywords Static Analysis, Program Transformation, DSL … We also show the generality of ourapproach by applying an existing specification in our language to open source code that israndomly selected from GitHub. The rest of this paper is organized as follows … 

         Title Analysis of imperative XML programs
           URL http://scholar.google.com/https://link.springer.com/chapter/10.1007/978-3-540-75987-4_15
          Year 2007
     Citations 3
      Versions 12
    Cluster ID 7469677624188944730
Citations list http://scholar.google.com/scholar?cites=7469677624188944730&as_sdt=2005&sciodt=0,5&hl=en
 Versions list http://scholar.google.com/scholar?cluster=7469677624188944730&hl=en&as_sdt=0,5
       Excerpt … n ∈ Xp1 (N) | Xp2 ({n}) = 0} Fig. 2. Syntax and semantics of XPath-like expressionsWe describe a core imperative language for XML processing that serves as the do-main for our static analysis. The syntax for the language is … 

         Title Discovering documentation for Java container classes
           URL http://scholar.google.com/https://ieeexplore.ieee.org/abstract/document/4267024/
          Year 2007
     Citations 69
      Versions 11
    Cluster ID 11123595871674861525
Citations list http://scholar.google.com/scholar?cites=11123595871674861525&as_sdt=2005&sciodt=0,5&hl=en
 Versions list http://scholar.google.com/scholar?cluster=11123595871674861525&hl=en&as_sdt=0,5
       Excerpt … To derive an algebraic specification from a Java class with a static analysis, we would need tomodel the full language semantics and then abstract statically from complex, heapcentricmanipulations of implementation data structures into a concise, expressive algebraic specifi … 

         Title SEDGE: Symbolic example data generation for dataflow programs
           URL http://scholar.google.com/https://ieeexplore.ieee.org/abstract/document/6693083/
          Year 2013
     Citations 21
      Versions 15
    Cluster ID 15302455519243686900
Citations list http://scholar.google.com/scholar?cites=15302455519243686900&as_sdt=2005&sciodt=0,5&hl=en
 Versions list http://scholar.google.com/scholar?cluster=15302455519243686900&hl=en&as_sdt=0,5
       Excerpt … For string constraints, the main new element of our im- plementation concerns reasoning aboutstring constraints con- taining regular expressions. Our approach is based on Xeger6 a Javalibrary for generating a sample string for a regular expression … 

         Title What can the GC compute efficiently? A language for heap assertions at GC time
           URL http://scholar.google.com/https://dl.acm.org/doi/abs/10.1145/1932682.1869482
          Year 2010
     Citations 23
      Versions 20
    Cluster ID 2595479589681128753
Citations list http://scholar.google.com/scholar?cites=2595479589681128753&as_sdt=2005&sciodt=0,5&hl=en
 Versions list http://scholar.google.com/scholar?cluster=2595479589681128753&hl=en&as_sdt=0,5
       Excerpt Page 1. What Can the GC Compute Efficiently? A Language for Heap Assertions at GC TimeChristoph Reichenbach University of Massachusetts creichen@gmail.com Neil ImmermanUniversity of Massachusetts neil.immerman@gmail.com Yannis Smaragdakis … 

         Title D AL: Rich Heap Assertions (Almost) For Free
           URL http://scholar.google.com/https://www.researchgate.net/profile/Christoph_Reichenbach2/publication/267848827_DAL_Rich_Heap_Assertions_Almost_For_Free/links/54b63f580cf2318f0f9a2837.pdf
          Year 2010
     Citations 0
      Versions 6
      PDF link http://scholar.google.com/https://www.researchgate.net/profile/Christoph_Reichenbach2/publication/267848827_DAL_Rich_Heap_Assertions_Almost_For_Free/links/54b63f580cf2318f0f9a2837.pdf
 Versions list http://scholar.google.com/scholar?cluster=5390601287946500309&hl=en&as_sdt=0,5
       Excerpt Page 1. DAL: Rich Heap Assertions (Almost) For Free Christoph Reichenbach University ofMassachusetts creichen@gmail.com Neil Immerman University of Massachusettsneil.immerman@gmail.com Yannis Smaragdakis University of Massachusetts yannis@cs.umass … 

         Title Discovering Algebraic Specifications for Java Classes; CU-CS-985-04
           URL http://scholar.google.com/https://core.ac.uk/download/pdf/54846947.pdf
          Year 2004
     Citations 0
      Versions 0
      PDF link http://scholar.google.com/https://core.ac.uk/download/pdf/54846947.pdf
       Excerpt Page 1. University of Colorado, Boulder CU Scholar Computer Science Technical ReportsComputer Science Winter 12-12-2004 Discovering Algebraic Specifications for Java Classes ;CU-CS-985-04 Johannes Henkel University of Colorado Boulder … 

         Title Analysis of imperative XML programs
           URL http://scholar.google.com/https://www.sciencedirect.com/science/article/pii/S0306437909000362
          Year 2009
     Citations 1
      Versions 12
    Cluster ID 17145556672606014471
Citations list http://scholar.google.com/scholar?cites=17145556672606014471&as_sdt=2005&sciodt=0,5&hl=en
 Versions list http://scholar.google.com/scholar?cluster=17145556672606014471&hl=en&as_sdt=0,5
       Excerpt … 2. Download : Download full-size image. Fig. 2. Syntax and semantics of XPath-like expressions.We further use parentheses for disambiguation. We describe a core imperative language forXML processing that serves as the domain for our static analysis (Fig … 

         Title Second-order constraints in dynamic invariant inference
           URL http://scholar.google.com/https://dl.acm.org/doi/abs/10.1145/2491411.2491457
          Year 2013
     Citations 10
      Versions 11
    Cluster ID 1411578296172027550
Citations list http://scholar.google.com/scholar?cites=1411578296172027550&as_sdt=2005&sciodt=0,5&hl=en
 Versions list http://scholar.google.com/scholar?cluster=1411578296172027550&hl=en&as_sdt=0,5
       Excerpt … the second-order constraint Subdo- main(foo(int i, int j), bar(int x, int y)) then we do not use thenames i and j when we compare to bar(int x, int y). Instead, we substitute arg1 for i and x, andarg2 for j and y. We implement this normalization via regular expression transfor- mation … 

